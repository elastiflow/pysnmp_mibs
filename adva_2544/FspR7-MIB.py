# SNMP MIB module (FspR7-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/rob/MIBs/adva_2544/FspR7-MIB.mib
# Produced by pysmi-1.6.1 at Fri Jun  6 00:07:58 2025
# On host e-ws1-mac.muc.elastiflow.net platform Darwin version 24.3.0 by user rob
# Using Python version 3.13.3 (main, Apr  8 2025, 13:54:08) [Clang 16.0.0 (clang-1600.0.26.6)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(ApsHoldoffTime,
 ApsHoldoffTimeCaps,
 Counter64String,
 EnableState,
 EnableStateCaps,
 EntityIndex,
 EthDuplexMode,
 EthDuplexModeCaps,
 Grade,
 LogicalIfTransportCaps,
 LoopConfig,
 LoopConfigCaps,
 OhTerminationLevel,
 OhTerminationLevelCaps,
 OnOff,
 OtnPayloadType,
 OtnPayloadTypeCaps,
 OtnTcmLevel,
 OtnTcmLevelCaps,
 ProtectionMech,
 ProtectionMechCaps,
 ServiceImpairment,
 SonetTimingSource,
 SonetTimingSourceCaps,
 SonetTraceForm,
 SonetTraceFormCaps,
 SonetVcBundleAllocation,
 SonetVcBundleAllocationCaps,
 TimMode,
 TimModeCaps,
 TrapAlarmSeverity,
 VirtualContainerType,
 VirtualContainerTypeCaps,
 config,
 controlPlaneEthEntityIndex,
 controlPlaneOtnEntityIndex,
 controlPlaneWdmEntityIndex,
 entityClass,
 entityContainedIn,
 entityIndex,
 fspR7,
 neEventLogIdentityTranslation,
 neEventLogTimeStamp,
 neTrapsinkAddress,
 ptpEntityClass,
 ptpEntityContainedIn,
 ptpEntityIndex,
 snmpProxyEntrySingleTargetOutNodeAgentStatus,
 snmpProxyServerSynchroStage,
 vtpEntityIndex) = mibBuilder.importSymbols(
    "ADVA-MIB",
    "ApsHoldoffTime",
    "ApsHoldoffTimeCaps",
    "Counter64String",
    "EnableState",
    "EnableStateCaps",
    "EntityIndex",
    "EthDuplexMode",
    "EthDuplexModeCaps",
    "Grade",
    "LogicalIfTransportCaps",
    "LoopConfig",
    "LoopConfigCaps",
    "OhTerminationLevel",
    "OhTerminationLevelCaps",
    "OnOff",
    "OtnPayloadType",
    "OtnPayloadTypeCaps",
    "OtnTcmLevel",
    "OtnTcmLevelCaps",
    "ProtectionMech",
    "ProtectionMechCaps",
    "ServiceImpairment",
    "SonetTimingSource",
    "SonetTimingSourceCaps",
    "SonetTraceForm",
    "SonetTraceFormCaps",
    "SonetVcBundleAllocation",
    "SonetVcBundleAllocationCaps",
    "TimMode",
    "TimModeCaps",
    "TrapAlarmSeverity",
    "VirtualContainerType",
    "VirtualContainerTypeCaps",
    "config",
    "controlPlaneEthEntityIndex",
    "controlPlaneOtnEntityIndex",
    "controlPlaneWdmEntityIndex",
    "entityClass",
    "entityContainedIn",
    "entityIndex",
    "fspR7",
    "neEventLogIdentityTranslation",
    "neEventLogTimeStamp",
    "neTrapsinkAddress",
    "ptpEntityClass",
    "ptpEntityContainedIn",
    "ptpEntityIndex",
    "snmpProxyEntrySingleTargetOutNodeAgentStatus",
    "snmpProxyServerSynchroStage",
    "vtpEntityIndex")

(entPhysicalIndex,) = mibBuilder.importSymbols(
    "ENTITY-MIB",
    "entPhysicalIndex")

(SnmpAdminString,) = mibBuilder.importSymbols(
    "SNMP-FRAMEWORK-MIB",
    "SnmpAdminString")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso,
 mib_2,
 snmpModules) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso",
    "mib-2",
    "snmpModules")

(DateAndTime,
 DisplayString,
 MacAddress,
 PhysAddress,
 RowPointer,
 RowStatus,
 TextualConvention,
 TestAndIncr,
 TimeStamp,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowPointer",
    "RowStatus",
    "TextualConvention",
    "TestAndIncr",
    "TimeStamp",
    "TruthValue")


# MODULE-IDENTITY

fspR7MIB = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2)
)
if mibBuilder.loadTexts:
    fspR7MIB.setRevisions(
        ("2012-09-20 00:00",
         "2010-10-29 00:00",
         "2010-10-22 00:00",
         "2010-08-31 00:00",
         "2010-06-14 00:00",
         "2010-03-24 00:00",
         "2009-11-20 00:00",
         "2009-06-05 00:00",
         "2009-01-31 00:00",
         "2008-08-28 00:00",
         "2007-10-04 00:00",
         "2007-09-24 00:00",
         "2007-05-07 00:00",
         "2007-01-03 00:00",
         "2006-11-28 00:00",
         "2006-09-05 00:00",
         "2006-06-14 00:00",
         "2006-05-04 00:00")
    )


# Types definitions


# TEXTUAL-CONVENTIONS



class ApsDirection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("bidirectional", 1),
          ("unidirectional", 2))
    )



class ApsDirectionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBidirectional", 1),
          ("capUnidirectional", 2))
    )


class ApsRevertMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("nonrevertive", 1),
          ("revertive", 2))
    )



class ApsRevertModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNonrevertive", 1),
          ("capRevertive", 2))
    )


class ApsType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("line", 2),
          ("sncN", 3),
          ("sncI", 4),
          ("sncS", 5),
          ("eth", 6),
          ("phys", 7),
          ("sncNPM", 8),
          ("sncNTCM", 9),
          ("sncISM", 10),
          ("mux", 11),
          ("pcs", 12),
          ("ethSncI", 13),
          ("ethSncN", 14),
          ("ethSncS", 15),
          ("ethSncT", 16))
    )



class ApsTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capLine", 2),
          ("capSncN", 3),
          ("capSncI", 4),
          ("capSncS", 5),
          ("capEth", 6),
          ("capPhys", 7),
          ("capSncNPM", 8),
          ("capSncNTCM", 9),
          ("capSncISM", 10),
          ("capMux", 11),
          ("capPcs", 12),
          ("capEthSncI", 13),
          ("capEthSncN", 14),
          ("capEthSncS", 15),
          ("capEthSncT", 16))
    )


class Counter64StringCaps(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )



class FspR7AccessLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("ro", 1),
          ("rw", 2))
    )



class FspR7AccessProtocol(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("serial", 2),
          ("telnet", 3),
          ("ssh", 4),
          ("ftp", 5),
          ("snmp", 6),
          ("http", 7),
          ("https", 8),
          ("tl1", 9))
    )



class FspR7AccessStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("success", 2),
          ("authenticationError", 3),
          ("sessionError", 4))
    )



class FspR7AccountFlag(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("authForced", 2))
    )



class FspR7Action(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("accept", 1),
          ("drop", 2),
          ("jump", 3))
    )



class FspR7ActionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAccept", 1),
          ("capDrop", 2),
          ("capJump", 3))
    )


class FspR7AdminState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("uas", 1),
          ("is", 2),
          ("ains", 3),
          ("mgt", 4),
          ("mt", 5),
          ("dsbld", 6),
          ("pps", 7))
    )



class FspR7AdminStateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capUas", 1),
          ("capIs", 2),
          ("capAins", 3),
          ("capMgt", 4),
          ("capMt", 5),
          ("capDsbld", 6),
          ("capPps", 7))
    )


class FspR7AidType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              24,
              25)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("sys", 2),
          ("eqpt", 3),
          ("ch", 4),
          ("dcn", 5),
          ("ol", 6),
          ("om", 7),
          ("sts1", 8),
          ("sts3c", 9),
          ("sts24c", 10),
          ("sts48c", 11),
          ("vc3", 12),
          ("vc4", 13),
          ("vs1", 14),
          ("vs4c", 15),
          ("sh", 16),
          ("lif", 17),
          ("lifCp", 18),
          ("tnlWdm", 19),
          ("vc4c8", 20),
          ("vc4c16", 21),
          ("otl", 22),
          ("tnlEth", 24),
          ("tnlOtn", 25))
    )



class FspR7AlsHoldoff(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("del0ms", 1),
          ("del250ms", 2),
          ("del550ms", 3))
    )



class FspR7AlsHoldoffCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capDel0ms", 1),
          ("capDel250ms", 2),
          ("capDel550ms", 3))
    )


class FspR7AlsMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("advaALS", 1),
          ("sonetALS", 2),
          ("noALS", 3),
          ("fastAls", 4))
    )



class FspR7AlsModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAdvaALS", 1),
          ("capSonetALS", 2),
          ("capNoALS", 3),
          ("capFastAls", 4))
    )


class FspR7ApplyAlarmProfile(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("apply", 2))
    )



class FspR7ApplyAlarmProfileCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capApply", 2))
    )


class FspR7APSCommand(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("release", 1),
          ("manualSwitch", 2))
    )



class FspR7APSCommandCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRelease", 1),
          ("capManualSwitch", 2))
    )


class FspR7AseTabOpr(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("build", 2))
    )



class FspR7AseTabOprCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capBuild", 2))
    )


class FspR7AutopLif(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7AutopLifCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capYes", 1),
          ("capNo", 2))
    )


class FspR7AutoThresReset(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("rtf", 2))
    )



class FspR7AutoThresResetCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capRtf", 2))
    )


class FspR7Baund(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("baud2400", 1),
          ("baud4800", 2),
          ("baud9600", 3),
          ("baud19200", 4),
          ("baud38400", 5),
          ("baud57600", 6),
          ("baud115200", 7))
    )



class FspR7BaundCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBaud2400", 1),
          ("capBaud4800", 2),
          ("capBaud9600", 3),
          ("capBaud19200", 4),
          ("capBaud38400", 5),
          ("capBaud57600", 6),
          ("capBaud115200", 7))
    )


class FspR7BERThreshold(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("exp5", 1),
          ("exp6", 2),
          ("exp7", 3),
          ("exp8", 4),
          ("exp9", 5))
    )



class FspR7BERThresholdCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capExp5", 1),
          ("capExp6", 2),
          ("capExp7", 3),
          ("capExp8", 4),
          ("capExp9", 5))
    )


class FspR7BERThresholdSection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("exp7", 3),
          ("exp8", 4),
          ("exp9", 5))
    )



class FspR7BERThresholdSectionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capExp7", 3),
          ("capExp8", 4),
          ("capExp9", 5))
    )


class FspR7Bip(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("transparent", 1),
          ("terminate", 2))
    )



class FspR7BipCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capTransparent", 1),
          ("capTerminate", 2))
    )


class FspR7Bitrate(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("bitrate10", 1),
          ("bitrate100", 2),
          ("bitrate1000", 3),
          ("bitrate10000", 4))
    )



class FspR7BitrateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBitrate10", 1),
          ("capBitrate100", 2),
          ("capBitrate1000", 3),
          ("capBitrate10000", 4))
    )


class FspR7BootloaderAccess(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7CapInventory(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              50)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("level0", 1),
          ("level1", 2),
          ("level2", 3),
          ("level3", 4),
          ("level4", 5),
          ("level5", 6),
          ("unknown", 50))
    )



class FspR7CapInventoryCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capLevel0", 1),
          ("capLevel1", 2),
          ("capLevel2", 3),
          ("capLevel3", 4),
          ("capLevel4", 5),
          ("capLevel5", 6),
          ("capUnknown", 50))
    )


class FspR7Category(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("shelf", 1),
          ("channelMod", 2),
          ("plug", 3),
          ("filter", 4),
          ("amplifier", 5),
          ("dcm", 6),
          ("switch", 7),
          ("oscm", 8),
          ("dummy", 9),
          ("common", 10),
          ("att", 11),
          ("jumper", 12),
          ("accessory", 13),
          ("fiber", 14),
          ("protectionMod", 15),
          ("any", 16),
          ("roadm", 17),
          ("ethernetMod", 18),
          ("powerSplitter", 19),
          ("adm", 20))
    )



class FspR7ChannelBandwidth(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("band50G", 1),
          ("band75G", 2),
          ("band100G", 3),
          ("band125G", 4),
          ("band150G", 5),
          ("band175G", 6),
          ("band200G", 7),
          ("band225G", 8),
          ("band250G", 9),
          ("band275G", 10),
          ("band300G", 11))
    )



class FspR7ChannelBandwidthCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBand50G", 1),
          ("capBand75G", 2),
          ("capBand100G", 3),
          ("capBand125G", 4),
          ("capBand150G", 5),
          ("capBand175G", 6),
          ("capBand200G", 7),
          ("capBand225G", 8),
          ("capBand250G", 9),
          ("capBand275G", 10),
          ("capBand300G", 11))
    )


class FspR7ChannelIdentifier(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255,
              256,
              257,
              258,
              259,
              260,
              261,
              262,
              263,
              264,
              265,
              266,
              267,
              268,
              269,
              270,
              271,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              281,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              290,
              291,
              292,
              293,
              294,
              295,
              296,
              297,
              298,
              299,
              300,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              309,
              310,
              311,
              312,
              313,
              314,
              315,
              316,
              317,
              318,
              319,
              320,
              321,
              322,
              323,
              324,
              325,
              326,
              327,
              328,
              329,
              330,
              331,
              332,
              333,
              334,
              335,
              336,
              337,
              338,
              339,
              340,
              341,
              342,
              343,
              344,
              345,
              346,
              347,
              348,
              349,
              350,
              351,
              352,
              353,
              354,
              355,
              356,
              357,
              358,
              359,
              360,
              361,
              362,
              363,
              364,
              365,
              366,
              367,
              368,
              369,
              370,
              371,
              372,
              373,
              382,
              383,
              384,
              385,
              386,
              387,
              388,
              389,
              390,
              392,
              393,
              394,
              395,
              396,
              397,
              398,
              399,
              400,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              418,
              419,
              420,
              421,
              422,
              423,
              424,
              425,
              426,
              427,
              428,
              429,
              430,
              431,
              432,
              433,
              434,
              435,
              436,
              437,
              438,
              439,
              440,
              441,
              442,
              443,
              444,
              445,
              446,
              447,
              448,
              449,
              450,
              451,
              452,
              453,
              454,
              455,
              456,
              457,
              458,
              459,
              460,
              461,
              462,
              463,
              464,
              465,
              466,
              467,
              468,
              469,
              470,
              471,
              472,
              473,
              474,
              475,
              476,
              477,
              478,
              479,
              480,
              481,
              482,
              483,
              484,
              485,
              486,
              487,
              488,
              489,
              490,
              491,
              492,
              493,
              494,
              495,
              496,
              497,
              498,
              499,
              500)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("d01", 1),
          ("d02", 2),
          ("d03", 3),
          ("d04", 4),
          ("d05", 5),
          ("d06", 6),
          ("d07", 7),
          ("d08", 8),
          ("d09", 9),
          ("d10", 10),
          ("d11", 11),
          ("d12", 12),
          ("d13", 13),
          ("d14", 14),
          ("d15", 15),
          ("d16", 16),
          ("d17", 17),
          ("d18", 18),
          ("d19", 19),
          ("d20", 20),
          ("d21", 21),
          ("d22", 22),
          ("d23", 23),
          ("d24", 24),
          ("d25", 25),
          ("d26", 26),
          ("d27", 27),
          ("d28", 28),
          ("d29", 29),
          ("d30", 30),
          ("d31", 31),
          ("d32", 32),
          ("d33", 33),
          ("d34", 34),
          ("d35", 35),
          ("d36", 36),
          ("d37", 37),
          ("d38", 38),
          ("d39", 39),
          ("d40", 40),
          ("d41", 41),
          ("d42", 42),
          ("d43", 43),
          ("d44", 44),
          ("d45", 45),
          ("d46", 46),
          ("d47", 47),
          ("d48", 48),
          ("d49", 49),
          ("d50", 50),
          ("d51", 51),
          ("d52", 52),
          ("d53", 53),
          ("d54", 54),
          ("d55", 55),
          ("d56", 56),
          ("d57", 57),
          ("d58", 58),
          ("d59", 59),
          ("d60", 60),
          ("d61", 61),
          ("d62", 62),
          ("d63", 63),
          ("d64", 64),
          ("dc1", 65),
          ("dc2", 66),
          ("dc3", 67),
          ("dc4", 68),
          ("dc5", 69),
          ("dc6", 70),
          ("dc7", 71),
          ("dc8", 72),
          ("dl1", 73),
          ("dl2", 74),
          ("dl3", 75),
          ("dl4", 76),
          ("dl5", 77),
          ("dl6", 78),
          ("dl7", 79),
          ("dl8", 80),
          ("dc9", 81),
          ("dl9", 82),
          ("c1470", 91),
          ("c1490", 92),
          ("c1510", 93),
          ("c1530", 94),
          ("c1550", 95),
          ("c1570", 96),
          ("c1590", 97),
          ("c1610", 98),
          ("s1310", 99),
          ("s1630", 100),
          ("g850", 101),
          ("g1310", 102),
          ("g1550", 103),
          ("notInGrid", 105),
          ("s1510", 106),
          ("f19610", 107),
          ("f19595", 108),
          ("f19585", 109),
          ("f19575", 110),
          ("f19565", 111),
          ("f19555", 112),
          ("f19545", 113),
          ("f19535", 114),
          ("f19525", 115),
          ("f19515", 116),
          ("f19505", 117),
          ("f19495", 118),
          ("f19485", 119),
          ("f19475", 120),
          ("f19465", 121),
          ("f19455", 122),
          ("f19445", 123),
          ("f19435", 124),
          ("f19425", 125),
          ("f19415", 126),
          ("f19405", 127),
          ("f19395", 128),
          ("f19385", 129),
          ("f19375", 130),
          ("f19365", 131),
          ("f19355", 132),
          ("f19345", 133),
          ("f19335", 134),
          ("f19325", 135),
          ("f19315", 136),
          ("f19305", 137),
          ("f19295", 138),
          ("f19285", 139),
          ("f19275", 140),
          ("f19265", 141),
          ("f19255", 142),
          ("f19245", 143),
          ("f19235", 144),
          ("f19225", 145),
          ("f19215", 146),
          ("f19205", 147),
          ("f19600", 148),
          ("f19590", 149),
          ("f19580", 150),
          ("f19570", 151),
          ("f19560", 152),
          ("f19550", 153),
          ("f19540", 154),
          ("f19530", 155),
          ("f19520", 156),
          ("f19510", 157),
          ("f19500", 158),
          ("f19490", 159),
          ("f19480", 160),
          ("f19470", 161),
          ("f19460", 162),
          ("f19450", 163),
          ("f19440", 164),
          ("f19430", 165),
          ("f19420", 166),
          ("f19410", 167),
          ("f19400", 168),
          ("f19390", 169),
          ("f19380", 170),
          ("f19370", 171),
          ("f19360", 172),
          ("f19350", 173),
          ("f19340", 174),
          ("f19330", 175),
          ("f19320", 176),
          ("f19310", 177),
          ("f19300", 178),
          ("f19290", 179),
          ("f19280", 180),
          ("f19270", 181),
          ("f19260", 182),
          ("f19250", 183),
          ("f19240", 184),
          ("f19230", 185),
          ("f19220", 186),
          ("f19210", 187),
          ("f19200", 188),
          ("c1270", 189),
          ("c1290", 190),
          ("c1310", 191),
          ("c1330", 192),
          ("c1350", 193),
          ("c1370", 194),
          ("c1430", 195),
          ("c1450", 196),
          ("s1610", 197),
          ("t1650", 198),
          ("s1490", 199),
          ("f19598", 200),
          ("f19597", 201),
          ("f19596", 202),
          ("f19593", 203),
          ("f19592", 204),
          ("f19591", 205),
          ("f19588", 206),
          ("f19587", 207),
          ("f19586", 208),
          ("f19583", 209),
          ("f19582", 210),
          ("f19581", 211),
          ("f19578", 212),
          ("f19577", 213),
          ("f19576", 214),
          ("f19573", 215),
          ("f19572", 216),
          ("f19571", 217),
          ("f19568", 218),
          ("f19567", 219),
          ("f19566", 220),
          ("f19563", 221),
          ("f19562", 222),
          ("f19561", 223),
          ("f19558", 224),
          ("f19557", 225),
          ("f19556", 226),
          ("f19553", 227),
          ("f19552", 228),
          ("f19551", 229),
          ("f19548", 230),
          ("f19547", 231),
          ("f19546", 232),
          ("f19543", 233),
          ("f19542", 234),
          ("f19541", 235),
          ("f19538", 236),
          ("f19537", 237),
          ("f19536", 238),
          ("f19533", 239),
          ("f19532", 240),
          ("f19531", 241),
          ("f19528", 242),
          ("f19527", 243),
          ("f19526", 244),
          ("f19523", 245),
          ("f19522", 246),
          ("f19521", 247),
          ("f19518", 248),
          ("f19517", 249),
          ("f19516", 250),
          ("f19513", 251),
          ("f19512", 252),
          ("f19511", 253),
          ("f19508", 254),
          ("f19507", 255),
          ("f19506", 256),
          ("f19503", 257),
          ("f19502", 258),
          ("f19501", 259),
          ("f19498", 260),
          ("f19497", 261),
          ("f19496", 262),
          ("f19493", 263),
          ("f19492", 264),
          ("f19491", 265),
          ("f19488", 266),
          ("f19487", 267),
          ("f19486", 268),
          ("f19483", 269),
          ("f19482", 270),
          ("f19481", 271),
          ("f19478", 272),
          ("f19477", 273),
          ("f19476", 274),
          ("f19473", 275),
          ("f19472", 276),
          ("f19471", 277),
          ("f19468", 278),
          ("f19467", 279),
          ("f19466", 280),
          ("f19463", 281),
          ("f19462", 282),
          ("f19461", 283),
          ("f19458", 284),
          ("f19457", 285),
          ("f19456", 286),
          ("f19453", 287),
          ("f19452", 288),
          ("f19451", 289),
          ("f19448", 290),
          ("f19447", 291),
          ("f19446", 292),
          ("f19443", 293),
          ("f19442", 294),
          ("f19441", 295),
          ("f19438", 296),
          ("f19437", 297),
          ("f19436", 298),
          ("f19433", 299),
          ("f19432", 300),
          ("f19431", 301),
          ("f19428", 302),
          ("f19427", 303),
          ("f19426", 304),
          ("f19423", 305),
          ("f19422", 306),
          ("f19421", 307),
          ("f19418", 308),
          ("f19417", 309),
          ("f19416", 310),
          ("f19413", 311),
          ("f19412", 312),
          ("f19411", 313),
          ("f19408", 314),
          ("f19407", 315),
          ("f19406", 316),
          ("f19403", 317),
          ("f19402", 318),
          ("f19401", 319),
          ("f19398", 320),
          ("f19397", 321),
          ("f19396", 322),
          ("f19393", 323),
          ("f19392", 324),
          ("f19391", 325),
          ("f19388", 326),
          ("f19387", 327),
          ("f19386", 328),
          ("f19383", 329),
          ("f19382", 330),
          ("f19381", 331),
          ("f19378", 332),
          ("f19377", 333),
          ("f19376", 334),
          ("f19373", 335),
          ("f19372", 336),
          ("f19371", 337),
          ("f19368", 338),
          ("f19367", 339),
          ("f19366", 340),
          ("f19363", 341),
          ("f19362", 342),
          ("f19361", 343),
          ("f19358", 344),
          ("f19357", 345),
          ("f19356", 346),
          ("f19353", 347),
          ("f19352", 348),
          ("f19351", 349),
          ("f19348", 350),
          ("f19347", 351),
          ("f19346", 352),
          ("f19343", 353),
          ("f19342", 354),
          ("f19341", 355),
          ("f19338", 356),
          ("f19337", 357),
          ("f19336", 358),
          ("f19333", 359),
          ("f19332", 360),
          ("f19331", 361),
          ("f19328", 362),
          ("f19327", 363),
          ("f19326", 364),
          ("f19323", 365),
          ("f19322", 366),
          ("f19321", 367),
          ("f19318", 368),
          ("f19317", 369),
          ("f19316", 370),
          ("f19313", 371),
          ("f19312", 372),
          ("f19311", 373),
          ("f19296", 382),
          ("f19293", 383),
          ("f19292", 384),
          ("f19291", 385),
          ("f19288", 386),
          ("f19287", 387),
          ("f19286", 388),
          ("f19283", 389),
          ("f19282", 390),
          ("f19278", 392),
          ("f19277", 393),
          ("f19276", 394),
          ("f19273", 395),
          ("f19272", 396),
          ("f19271", 397),
          ("f19268", 398),
          ("f19267", 399),
          ("f19266", 400),
          ("f19263", 401),
          ("f19262", 402),
          ("f19261", 403),
          ("f19258", 404),
          ("f19257", 405),
          ("f19256", 406),
          ("f19253", 407),
          ("f19252", 408),
          ("f19251", 409),
          ("f19248", 410),
          ("f19247", 411),
          ("f19246", 412),
          ("f19243", 413),
          ("f19242", 414),
          ("f19241", 415),
          ("f19238", 416),
          ("f19237", 417),
          ("f19236", 418),
          ("f19233", 419),
          ("f19232", 420),
          ("f19231", 421),
          ("f19228", 422),
          ("f19227", 423),
          ("f19226", 424),
          ("f19223", 425),
          ("f19222", 426),
          ("f19221", 427),
          ("f19218", 428),
          ("f19217", 429),
          ("f19216", 430),
          ("f19213", 431),
          ("f19212", 432),
          ("f19211", 433),
          ("f19208", 434),
          ("f19207", 435),
          ("f19206", 436),
          ("f19203", 437),
          ("f19202", 438),
          ("f19201", 439),
          ("f19198", 440),
          ("f19197", 441),
          ("f19196", 442),
          ("f19195", 443),
          ("f19193", 444),
          ("f19192", 445),
          ("f19191", 446),
          ("f19190", 447),
          ("f19188", 448),
          ("f19187", 449),
          ("f19186", 450),
          ("f19185", 451),
          ("f19183", 452),
          ("f19182", 453),
          ("f19181", 454),
          ("f19180", 455),
          ("f19178", 456),
          ("f19177", 457),
          ("f19176", 458),
          ("f19175", 459),
          ("f19173", 460),
          ("f19172", 461),
          ("f19171", 462),
          ("f19170", 463),
          ("f19168", 464),
          ("f19167", 465),
          ("f19166", 466),
          ("f19165", 467),
          ("f19163", 468),
          ("f19162", 469),
          ("f19161", 470),
          ("f19160", 471),
          ("f19158", 472),
          ("f19157", 473),
          ("f19156", 474),
          ("f19155", 475),
          ("f19153", 476),
          ("f19152", 477),
          ("f19151", 478),
          ("f19150", 479),
          ("f19148", 480),
          ("f19147", 481),
          ("f19146", 482),
          ("f19145", 483),
          ("f19143", 484),
          ("f19142", 485),
          ("f19141", 486),
          ("f19140", 487),
          ("f19138", 488),
          ("f19137", 489),
          ("f19136", 490),
          ("f19135", 491),
          ("f19133", 492),
          ("f19132", 493),
          ("f19131", 494),
          ("f19130", 495),
          ("f19128", 496),
          ("f19127", 497),
          ("f19126", 498),
          ("f19125", 499),
          ("notDefined", 500))
    )



class FspR7ChannelIdentifierCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capD01", 1),
          ("capD02", 2),
          ("capD03", 3),
          ("capD04", 4),
          ("capD05", 5),
          ("capD06", 6),
          ("capD07", 7),
          ("capD08", 8),
          ("capD09", 9),
          ("capD10", 10),
          ("capD11", 11),
          ("capD12", 12),
          ("capD13", 13),
          ("capD14", 14),
          ("capD15", 15),
          ("capD16", 16),
          ("capD17", 17),
          ("capD18", 18),
          ("capD19", 19),
          ("capD20", 20),
          ("capD21", 21),
          ("capD22", 22),
          ("capD23", 23),
          ("capD24", 24),
          ("capD25", 25),
          ("capD26", 26),
          ("capD27", 27),
          ("capD28", 28),
          ("capD29", 29),
          ("capD30", 30),
          ("capD31", 31),
          ("capD32", 32),
          ("capD33", 33),
          ("capD34", 34),
          ("capD35", 35),
          ("capD36", 36),
          ("capD37", 37),
          ("capD38", 38),
          ("capD39", 39),
          ("capD40", 40),
          ("capD41", 41),
          ("capD42", 42),
          ("capD43", 43),
          ("capD44", 44),
          ("capD45", 45),
          ("capD46", 46),
          ("capD47", 47),
          ("capD48", 48),
          ("capD49", 49),
          ("capD50", 50),
          ("capD51", 51),
          ("capD52", 52),
          ("capD53", 53),
          ("capD54", 54),
          ("capD55", 55),
          ("capD56", 56),
          ("capD57", 57),
          ("capD58", 58),
          ("capD59", 59),
          ("capD60", 60),
          ("capD61", 61),
          ("capD62", 62),
          ("capD63", 63),
          ("capD64", 64),
          ("capDc1", 65),
          ("capDc2", 66),
          ("capDc3", 67),
          ("capDc4", 68),
          ("capDc5", 69),
          ("capDc6", 70),
          ("capDc7", 71),
          ("capDc8", 72),
          ("capDl1", 73),
          ("capDl2", 74),
          ("capDl3", 75),
          ("capDl4", 76),
          ("capDl5", 77),
          ("capDl6", 78),
          ("capDl7", 79),
          ("capDl8", 80),
          ("capDc9", 81),
          ("capDl9", 82),
          ("capC1470", 91),
          ("capC1490", 92),
          ("capC1510", 93),
          ("capC1530", 94),
          ("capC1550", 95),
          ("capC1570", 96),
          ("capC1590", 97),
          ("capC1610", 98),
          ("capS1310", 99),
          ("capS1630", 100),
          ("capG850", 101),
          ("capG1310", 102),
          ("capG1550", 103),
          ("capNotInGrid", 105),
          ("capS1510", 106),
          ("capF19610", 107),
          ("capF19595", 108),
          ("capF19585", 109),
          ("capF19575", 110),
          ("capF19565", 111),
          ("capF19555", 112),
          ("capF19545", 113),
          ("capF19535", 114),
          ("capF19525", 115),
          ("capF19515", 116),
          ("capF19505", 117),
          ("capF19495", 118),
          ("capF19485", 119),
          ("capF19475", 120),
          ("capF19465", 121),
          ("capF19455", 122),
          ("capF19445", 123),
          ("capF19435", 124),
          ("capF19425", 125),
          ("capF19415", 126),
          ("capF19405", 127),
          ("capF19395", 128),
          ("capF19385", 129),
          ("capF19375", 130),
          ("capF19365", 131),
          ("capF19355", 132),
          ("capF19345", 133),
          ("capF19335", 134),
          ("capF19325", 135),
          ("capF19315", 136),
          ("capF19305", 137),
          ("capF19295", 138),
          ("capF19285", 139),
          ("capF19275", 140),
          ("capF19265", 141),
          ("capF19255", 142),
          ("capF19245", 143),
          ("capF19235", 144),
          ("capF19225", 145),
          ("capF19215", 146),
          ("capF19205", 147),
          ("capF19600", 148),
          ("capF19590", 149),
          ("capF19580", 150),
          ("capF19570", 151),
          ("capF19560", 152),
          ("capF19550", 153),
          ("capF19540", 154),
          ("capF19530", 155),
          ("capF19520", 156),
          ("capF19510", 157),
          ("capF19500", 158),
          ("capF19490", 159),
          ("capF19480", 160),
          ("capF19470", 161),
          ("capF19460", 162),
          ("capF19450", 163),
          ("capF19440", 164),
          ("capF19430", 165),
          ("capF19420", 166),
          ("capF19410", 167),
          ("capF19400", 168),
          ("capF19390", 169),
          ("capF19380", 170),
          ("capF19370", 171),
          ("capF19360", 172),
          ("capF19350", 173),
          ("capF19340", 174),
          ("capF19330", 175),
          ("capF19320", 176),
          ("capF19310", 177),
          ("capF19300", 178),
          ("capF19290", 179),
          ("capF19280", 180),
          ("capF19270", 181),
          ("capF19260", 182),
          ("capF19250", 183),
          ("capF19240", 184),
          ("capF19230", 185),
          ("capF19220", 186),
          ("capF19210", 187),
          ("capF19200", 188),
          ("capC1270", 189),
          ("capC1290", 190),
          ("capC1310", 191),
          ("capC1330", 192),
          ("capC1350", 193),
          ("capC1370", 194),
          ("capC1430", 195),
          ("capC1450", 196),
          ("capS1610", 197),
          ("capT1650", 198),
          ("capS1490", 199),
          ("capF19598", 200),
          ("capF19597", 201),
          ("capF19596", 202),
          ("capF19593", 203),
          ("capF19592", 204),
          ("capF19591", 205),
          ("capF19588", 206),
          ("capF19587", 207),
          ("capF19586", 208),
          ("capF19583", 209),
          ("capF19582", 210),
          ("capF19581", 211),
          ("capF19578", 212),
          ("capF19577", 213),
          ("capF19576", 214),
          ("capF19573", 215),
          ("capF19572", 216),
          ("capF19571", 217),
          ("capF19568", 218),
          ("capF19567", 219),
          ("capF19566", 220),
          ("capF19563", 221),
          ("capF19562", 222),
          ("capF19561", 223),
          ("capF19558", 224),
          ("capF19557", 225),
          ("capF19556", 226),
          ("capF19553", 227),
          ("capF19552", 228),
          ("capF19551", 229),
          ("capF19548", 230),
          ("capF19547", 231),
          ("capF19546", 232),
          ("capF19543", 233),
          ("capF19542", 234),
          ("capF19541", 235),
          ("capF19538", 236),
          ("capF19537", 237),
          ("capF19536", 238),
          ("capF19533", 239),
          ("capF19532", 240),
          ("capF19531", 241),
          ("capF19528", 242),
          ("capF19527", 243),
          ("capF19526", 244),
          ("capF19523", 245),
          ("capF19522", 246),
          ("capF19521", 247),
          ("capF19518", 248),
          ("capF19517", 249),
          ("capF19516", 250),
          ("capF19513", 251),
          ("capF19512", 252),
          ("capF19511", 253),
          ("capF19508", 254),
          ("capF19507", 255),
          ("capF19506", 256),
          ("capF19503", 257),
          ("capF19502", 258),
          ("capF19501", 259),
          ("capF19498", 260),
          ("capF19497", 261),
          ("capF19496", 262),
          ("capF19493", 263),
          ("capF19492", 264),
          ("capF19491", 265),
          ("capF19488", 266),
          ("capF19487", 267),
          ("capF19486", 268),
          ("capF19483", 269),
          ("capF19482", 270),
          ("capF19481", 271),
          ("capF19478", 272),
          ("capF19477", 273),
          ("capF19476", 274),
          ("capF19473", 275),
          ("capF19472", 276),
          ("capF19471", 277),
          ("capF19468", 278),
          ("capF19467", 279),
          ("capF19466", 280),
          ("capF19463", 281),
          ("capF19462", 282),
          ("capF19461", 283),
          ("capF19458", 284),
          ("capF19457", 285),
          ("capF19456", 286),
          ("capF19453", 287),
          ("capF19452", 288),
          ("capF19451", 289),
          ("capF19448", 290),
          ("capF19447", 291),
          ("capF19446", 292),
          ("capF19443", 293),
          ("capF19442", 294),
          ("capF19441", 295),
          ("capF19438", 296),
          ("capF19437", 297),
          ("capF19436", 298),
          ("capF19433", 299),
          ("capF19432", 300),
          ("capF19431", 301),
          ("capF19428", 302),
          ("capF19427", 303),
          ("capF19426", 304),
          ("capF19423", 305),
          ("capF19422", 306),
          ("capF19421", 307),
          ("capF19418", 308),
          ("capF19417", 309),
          ("capF19416", 310),
          ("capF19413", 311),
          ("capF19412", 312),
          ("capF19411", 313),
          ("capF19408", 314),
          ("capF19407", 315),
          ("capF19406", 316),
          ("capF19403", 317),
          ("capF19402", 318),
          ("capF19401", 319),
          ("capF19398", 320),
          ("capF19397", 321),
          ("capF19396", 322),
          ("capF19393", 323),
          ("capF19392", 324),
          ("capF19391", 325),
          ("capF19388", 326),
          ("capF19387", 327),
          ("capF19386", 328),
          ("capF19383", 329),
          ("capF19382", 330),
          ("capF19381", 331),
          ("capF19378", 332),
          ("capF19377", 333),
          ("capF19376", 334),
          ("capF19373", 335),
          ("capF19372", 336),
          ("capF19371", 337),
          ("capF19368", 338),
          ("capF19367", 339),
          ("capF19366", 340),
          ("capF19363", 341),
          ("capF19362", 342),
          ("capF19361", 343),
          ("capF19358", 344),
          ("capF19357", 345),
          ("capF19356", 346),
          ("capF19353", 347),
          ("capF19352", 348),
          ("capF19351", 349),
          ("capF19348", 350),
          ("capF19347", 351),
          ("capF19346", 352),
          ("capF19343", 353),
          ("capF19342", 354),
          ("capF19341", 355),
          ("capF19338", 356),
          ("capF19337", 357),
          ("capF19336", 358),
          ("capF19333", 359),
          ("capF19332", 360),
          ("capF19331", 361),
          ("capF19328", 362),
          ("capF19327", 363),
          ("capF19326", 364),
          ("capF19323", 365),
          ("capF19322", 366),
          ("capF19321", 367),
          ("capF19318", 368),
          ("capF19317", 369),
          ("capF19316", 370),
          ("capF19313", 371),
          ("capF19312", 372),
          ("capF19311", 373),
          ("capF19296", 382),
          ("capF19293", 383),
          ("capF19292", 384),
          ("capF19291", 385),
          ("capF19288", 386),
          ("capF19287", 387),
          ("capF19286", 388),
          ("capF19283", 389),
          ("capF19282", 390),
          ("capF19278", 392),
          ("capF19277", 393),
          ("capF19276", 394),
          ("capF19273", 395),
          ("capF19272", 396),
          ("capF19271", 397),
          ("capF19268", 398),
          ("capF19267", 399),
          ("capF19266", 400),
          ("capF19263", 401),
          ("capF19262", 402),
          ("capF19261", 403),
          ("capF19258", 404),
          ("capF19257", 405),
          ("capF19256", 406),
          ("capF19253", 407),
          ("capF19252", 408),
          ("capF19251", 409),
          ("capF19248", 410),
          ("capF19247", 411),
          ("capF19246", 412),
          ("capF19243", 413),
          ("capF19242", 414),
          ("capF19241", 415),
          ("capF19238", 416),
          ("capF19237", 417),
          ("capF19236", 418),
          ("capF19233", 419),
          ("capF19232", 420),
          ("capF19231", 421),
          ("capF19228", 422),
          ("capF19227", 423),
          ("capF19226", 424),
          ("capF19223", 425),
          ("capF19222", 426),
          ("capF19221", 427),
          ("capF19218", 428),
          ("capF19217", 429),
          ("capF19216", 430),
          ("capF19213", 431),
          ("capF19212", 432),
          ("capF19211", 433),
          ("capF19208", 434),
          ("capF19207", 435),
          ("capF19206", 436),
          ("capF19203", 437),
          ("capF19202", 438),
          ("capF19201", 439),
          ("capF19198", 440),
          ("capF19197", 441),
          ("capF19196", 442),
          ("capF19195", 443),
          ("capF19193", 444),
          ("capF19192", 445),
          ("capF19191", 446),
          ("capF19190", 447),
          ("capF19188", 448),
          ("capF19187", 449),
          ("capF19186", 450),
          ("capF19185", 451),
          ("capF19183", 452),
          ("capF19182", 453),
          ("capF19181", 454),
          ("capF19180", 455),
          ("capF19178", 456),
          ("capF19177", 457),
          ("capF19176", 458),
          ("capF19175", 459),
          ("capF19173", 460),
          ("capF19172", 461),
          ("capF19171", 462),
          ("capF19170", 463),
          ("capF19168", 464),
          ("capF19167", 465),
          ("capF19166", 466),
          ("capF19165", 467),
          ("capF19163", 468),
          ("capF19162", 469),
          ("capF19161", 470),
          ("capF19160", 471),
          ("capF19158", 472),
          ("capF19157", 473),
          ("capF19156", 474),
          ("capF19155", 475),
          ("capF19153", 476),
          ("capF19152", 477),
          ("capF19151", 478),
          ("capF19150", 479),
          ("capF19148", 480),
          ("capF19147", 481),
          ("capF19146", 482),
          ("capF19145", 483),
          ("capF19143", 484),
          ("capF19142", 485),
          ("capF19141", 486),
          ("capF19140", 487),
          ("capF19138", 488),
          ("capF19137", 489),
          ("capF19136", 490),
          ("capF19135", 491),
          ("capF19133", 492),
          ("capF19132", 493),
          ("capF19131", 494),
          ("capF19130", 495),
          ("capF19128", 496),
          ("capF19127", 497),
          ("capF19126", 498),
          ("capF19125", 499),
          ("capNotDefined", 500))
    )


class FspR7ChannelNumber(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("f19600", 1),
          ("f19590", 2),
          ("f19580", 3),
          ("f19570", 4),
          ("f19550", 5),
          ("f19540", 6),
          ("f19530", 7),
          ("f19520", 8),
          ("f19500", 9),
          ("f19490", 10),
          ("f19480", 11),
          ("f19470", 12),
          ("f19450", 13),
          ("f19440", 14),
          ("f19430", 15),
          ("f19420", 16),
          ("f19380", 17),
          ("f19370", 18),
          ("f19360", 19),
          ("f19350", 20),
          ("f19330", 21),
          ("f19320", 22),
          ("f19310", 23),
          ("f19300", 24),
          ("f19280", 25),
          ("f19270", 26),
          ("f19260", 27),
          ("f19250", 28),
          ("f19230", 29),
          ("f19220", 30),
          ("f19210", 31),
          ("f19200", 32),
          ("f19100", 33),
          ("f19090", 34),
          ("f19080", 35),
          ("f19070", 36),
          ("f19050", 37),
          ("f19040", 38),
          ("f19030", 39),
          ("f19020", 40),
          ("f19000", 41),
          ("f18990", 42),
          ("f18980", 43),
          ("f18970", 44),
          ("f18950", 45),
          ("f18940", 46),
          ("f18930", 47),
          ("f18920", 48),
          ("f18880", 49),
          ("f18870", 50),
          ("f18860", 51),
          ("f18850", 52),
          ("f18830", 53),
          ("f18820", 54),
          ("f18810", 55),
          ("f18800", 56),
          ("f18780", 57),
          ("f18770", 58),
          ("f18760", 59),
          ("f18750", 60),
          ("f18730", 61),
          ("f18720", 62),
          ("f18710", 63),
          ("f18700", 64),
          ("f19560", 65),
          ("f19510", 66),
          ("f19460", 67),
          ("f19410", 68),
          ("f19390", 69),
          ("f19340", 70),
          ("f19290", 71),
          ("f19240", 72),
          ("f19060", 73),
          ("f19010", 74),
          ("f18960", 75),
          ("f18910", 76),
          ("f18890", 77),
          ("f18840", 78),
          ("f18790", 79),
          ("f18740", 80),
          ("f19400", 81),
          ("f18900", 82),
          ("f19640", 83),
          ("f19635", 84),
          ("f19630", 85),
          ("f19625", 86),
          ("f19620", 87),
          ("f19615", 88),
          ("f19605", 89),
          ("c1470", 90),
          ("c1490", 91),
          ("c1510", 92),
          ("c1530", 93),
          ("c1550", 94),
          ("c1570", 95),
          ("c1590", 96),
          ("c1610", 97),
          ("s1310", 98),
          ("s1630", 99),
          ("g850", 100),
          ("g1310", 101),
          ("g1550", 102),
          ("null", 103),
          ("nig", 104),
          ("s1510", 105),
          ("f19610", 106),
          ("f19595", 107),
          ("f19585", 108),
          ("f19575", 109),
          ("f19565", 110),
          ("f19555", 111),
          ("f19545", 112),
          ("f19535", 113),
          ("f19525", 114),
          ("f19515", 115),
          ("f19505", 116),
          ("f19495", 117),
          ("f19485", 118),
          ("f19475", 119),
          ("f19465", 120),
          ("f19455", 121),
          ("f19445", 122),
          ("f19435", 123),
          ("f19425", 124),
          ("f19415", 125),
          ("f19405", 126),
          ("f19395", 127),
          ("f19385", 128),
          ("f19375", 129),
          ("f19365", 130),
          ("f19355", 131),
          ("f19345", 132),
          ("f19335", 133),
          ("f19325", 134),
          ("f19315", 135),
          ("f19305", 136),
          ("f19295", 137),
          ("f19285", 138),
          ("f19275", 139),
          ("f19265", 140),
          ("f19255", 141),
          ("f19245", 142),
          ("f19235", 143),
          ("f19225", 144),
          ("f19215", 145),
          ("f19205", 146),
          ("f19195", 147),
          ("f19190", 148),
          ("f19185", 149),
          ("f19180", 150),
          ("f19175", 151),
          ("f19170", 152),
          ("f19165", 153),
          ("f19160", 154),
          ("f19155", 155),
          ("f19150", 156),
          ("f19145", 157),
          ("f19140", 158),
          ("f19135", 159),
          ("f19130", 160),
          ("f19125", 161),
          ("f19120", 162),
          ("f19115", 163),
          ("f19110", 164),
          ("f19105", 165),
          ("f19095", 166),
          ("f19085", 167),
          ("f19075", 168),
          ("f19065", 169),
          ("f19055", 170),
          ("f19045", 171),
          ("f19035", 172),
          ("f19025", 173),
          ("f19015", 174),
          ("f19005", 175),
          ("f18995", 176),
          ("f18985", 177),
          ("f18975", 178),
          ("f18965", 179),
          ("f18955", 180),
          ("f18945", 181),
          ("f18935", 182),
          ("f18925", 183),
          ("f18915", 184),
          ("f18905", 185),
          ("f18895", 186),
          ("f18885", 187),
          ("f18875", 188),
          ("f18865", 189),
          ("f18855", 190),
          ("f18845", 191),
          ("f18835", 192),
          ("f18825", 193),
          ("f18815", 194),
          ("f18805", 195),
          ("f18795", 196),
          ("f18785", 197),
          ("f18775", 198),
          ("f18765", 199),
          ("f18755", 200),
          ("f18745", 201),
          ("f18735", 202),
          ("f18725", 203),
          ("f18715", 204),
          ("f18705", 205),
          ("c1270", 206),
          ("c1290", 207),
          ("c1310", 208),
          ("c1330", 209),
          ("c1350", 210),
          ("c1370", 211),
          ("c1430", 212),
          ("c1450", 213),
          ("t1650", 214),
          ("s1490", 215))
    )



class FspR7ChannelNumberCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capF19600", 1),
          ("capF19590", 2),
          ("capF19580", 3),
          ("capF19570", 4),
          ("capF19550", 5),
          ("capF19540", 6),
          ("capF19530", 7),
          ("capF19520", 8),
          ("capF19500", 9),
          ("capF19490", 10),
          ("capF19480", 11),
          ("capF19470", 12),
          ("capF19450", 13),
          ("capF19440", 14),
          ("capF19430", 15),
          ("capF19420", 16),
          ("capF19380", 17),
          ("capF19370", 18),
          ("capF19360", 19),
          ("capF19350", 20),
          ("capF19330", 21),
          ("capF19320", 22),
          ("capF19310", 23),
          ("capF19300", 24),
          ("capF19280", 25),
          ("capF19270", 26),
          ("capF19260", 27),
          ("capF19250", 28),
          ("capF19230", 29),
          ("capF19220", 30),
          ("capF19210", 31),
          ("capF19200", 32),
          ("capF19100", 33),
          ("capF19090", 34),
          ("capF19080", 35),
          ("capF19070", 36),
          ("capF19050", 37),
          ("capF19040", 38),
          ("capF19030", 39),
          ("capF19020", 40),
          ("capF19000", 41),
          ("capF18990", 42),
          ("capF18980", 43),
          ("capF18970", 44),
          ("capF18950", 45),
          ("capF18940", 46),
          ("capF18930", 47),
          ("capF18920", 48),
          ("capF18880", 49),
          ("capF18870", 50),
          ("capF18860", 51),
          ("capF18850", 52),
          ("capF18830", 53),
          ("capF18820", 54),
          ("capF18810", 55),
          ("capF18800", 56),
          ("capF18780", 57),
          ("capF18770", 58),
          ("capF18760", 59),
          ("capF18750", 60),
          ("capF18730", 61),
          ("capF18720", 62),
          ("capF18710", 63),
          ("capF18700", 64),
          ("capF19560", 65),
          ("capF19510", 66),
          ("capF19460", 67),
          ("capF19410", 68),
          ("capF19390", 69),
          ("capF19340", 70),
          ("capF19290", 71),
          ("capF19240", 72),
          ("capF19060", 73),
          ("capF19010", 74),
          ("capF18960", 75),
          ("capF18910", 76),
          ("capF18890", 77),
          ("capF18840", 78),
          ("capF18790", 79),
          ("capF18740", 80),
          ("capF19400", 81),
          ("capF18900", 82),
          ("capF19640", 83),
          ("capF19635", 84),
          ("capF19630", 85),
          ("capF19625", 86),
          ("capF19620", 87),
          ("capF19615", 88),
          ("capF19605", 89),
          ("capC1470", 90),
          ("capC1490", 91),
          ("capC1510", 92),
          ("capC1530", 93),
          ("capC1550", 94),
          ("capC1570", 95),
          ("capC1590", 96),
          ("capC1610", 97),
          ("capS1310", 98),
          ("capS1630", 99),
          ("capG850", 100),
          ("capG1310", 101),
          ("capG1550", 102),
          ("capNull", 103),
          ("capNig", 104),
          ("capS1510", 105),
          ("capF19610", 106),
          ("capF19595", 107),
          ("capF19585", 108),
          ("capF19575", 109),
          ("capF19565", 110),
          ("capF19555", 111),
          ("capF19545", 112),
          ("capF19535", 113),
          ("capF19525", 114),
          ("capF19515", 115),
          ("capF19505", 116),
          ("capF19495", 117),
          ("capF19485", 118),
          ("capF19475", 119),
          ("capF19465", 120),
          ("capF19455", 121),
          ("capF19445", 122),
          ("capF19435", 123),
          ("capF19425", 124),
          ("capF19415", 125),
          ("capF19405", 126),
          ("capF19395", 127),
          ("capF19385", 128),
          ("capF19375", 129),
          ("capF19365", 130),
          ("capF19355", 131),
          ("capF19345", 132),
          ("capF19335", 133),
          ("capF19325", 134),
          ("capF19315", 135),
          ("capF19305", 136),
          ("capF19295", 137),
          ("capF19285", 138),
          ("capF19275", 139),
          ("capF19265", 140),
          ("capF19255", 141),
          ("capF19245", 142),
          ("capF19235", 143),
          ("capF19225", 144),
          ("capF19215", 145),
          ("capF19205", 146),
          ("capF19195", 147),
          ("capF19190", 148),
          ("capF19185", 149),
          ("capF19180", 150),
          ("capF19175", 151),
          ("capF19170", 152),
          ("capF19165", 153),
          ("capF19160", 154),
          ("capF19155", 155),
          ("capF19150", 156),
          ("capF19145", 157),
          ("capF19140", 158),
          ("capF19135", 159),
          ("capF19130", 160),
          ("capF19125", 161),
          ("capF19120", 162),
          ("capF19115", 163),
          ("capF19110", 164),
          ("capF19105", 165),
          ("capF19095", 166),
          ("capF19085", 167),
          ("capF19075", 168),
          ("capF19065", 169),
          ("capF19055", 170),
          ("capF19045", 171),
          ("capF19035", 172),
          ("capF19025", 173),
          ("capF19015", 174),
          ("capF19005", 175),
          ("capF18995", 176),
          ("capF18985", 177),
          ("capF18975", 178),
          ("capF18965", 179),
          ("capF18955", 180),
          ("capF18945", 181),
          ("capF18935", 182),
          ("capF18925", 183),
          ("capF18915", 184),
          ("capF18905", 185),
          ("capF18895", 186),
          ("capF18885", 187),
          ("capF18875", 188),
          ("capF18865", 189),
          ("capF18855", 190),
          ("capF18845", 191),
          ("capF18835", 192),
          ("capF18825", 193),
          ("capF18815", 194),
          ("capF18805", 195),
          ("capF18795", 196),
          ("capF18785", 197),
          ("capF18775", 198),
          ("capF18765", 199),
          ("capF18755", 200),
          ("capF18745", 201),
          ("capF18735", 202),
          ("capF18725", 203),
          ("capF18715", 204),
          ("capF18705", 205),
          ("capC1270", 206),
          ("capC1290", 207),
          ("capC1310", 208),
          ("capC1330", 209),
          ("capC1350", 210),
          ("capC1370", 211),
          ("capC1430", 212),
          ("capC1450", 213),
          ("capT1650", 214),
          ("capS1490", 215))
    )


class FspR7ChannelSpacing(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("spacing50Ghz", 1),
          ("spacing100Ghz", 2),
          ("spacing200Ghz", 3),
          ("spacing25GHz", 4))
    )



class FspR7ChannelSpacingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capSpacing50Ghz", 1),
          ("capSpacing100Ghz", 2),
          ("capSpacing200Ghz", 3),
          ("capSpacing25GHz", 4))
    )


class FspR7CodeGain(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("high", 1),
          ("mean", 2),
          ("low", 3))
    )



class FspR7CodeGainCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capHigh", 1),
          ("capMean", 2),
          ("capLow", 3))
    )


class FspR7CommandModifier(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("generic", 1),
          ("adopt", 2),
          ("release", 3))
    )



class FspR7CommandModifierCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capGeneric", 1),
          ("capAdopt", 2),
          ("capRelease", 3))
    )


class FspR7CommunityCmd(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("idle", 1),
          ("create", 2),
          ("destroy", 3))
    )



class FspR7Conn(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("bi", 1),
          ("uni", 2))
    )



class FspR7ConnCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBi", 1),
          ("capUni", 2))
    )


class FspR7ConnCommand(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("create", 2),
          ("destroy", 3),
          ("forceCreate", 4),
          ("forceDestroy", 5))
    )



class FspR7ConnectorType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("lc", 1),
          ("rj45", 2),
          ("mupc", 3),
          ("dsub8", 4),
          ("usbS", 5),
          ("dsub44hd", 6),
          ("fcApc", 7),
          ("mpo", 8),
          ("mbnc", 9),
          ("hdBnc", 10),
          ("din", 11))
    )



class FspR7ConnectorTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capLc", 1),
          ("capRj45", 2),
          ("capMupc", 3),
          ("capDsub8", 4),
          ("capUsbS", 5),
          ("capDsub44hd", 6),
          ("capFcApc", 7),
          ("capMpo", 8),
          ("capMbnc", 9),
          ("capHdBnc", 10),
          ("capDin", 11))
    )


class FspR7ConnectState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("idle", 1),
          ("idleReceive", 2),
          ("idleTransmit", 3),
          ("busy", 4))
    )



class FspR7CpAbortProcess(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("abt", 1))
    )



class FspR7CpAbortProcessCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAbt", 1))
    )


class FspR7CpActivState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("inactive", 1),
          ("activating", 2),
          ("active", 3),
          ("deactivating", 4),
          ("modifying", 5),
          ("restoring", 6),
          ("reverting", 7))
    )



class FspR7CpActivStateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capInactive", 1),
          ("capActivating", 2),
          ("capActive", 3),
          ("capDeactivating", 4),
          ("capModifying", 5),
          ("capRestoring", 6),
          ("capReverting", 7))
    )


class FspR7CpAffinityInclusion(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("any", 2),
          ("all", 3))
    )



class FspR7CpAffinityInclusionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capAny", 2),
          ("capAll", 3))
    )


class FspR7CpAuthType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("simple", 2),
          ("md5", 3))
    )



class FspR7CpAuthTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capSimple", 2),
          ("capMd5", 3))
    )


class FspR7CpCancConnection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("opr", 2))
    )



class FspR7CpCancConnectionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capOpr", 2))
    )


class FspR7CpCommand(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("compute", 2),
          ("abort", 3))
    )



class FspR7CpCommandCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capCompute", 2),
          ("capAbort", 3))
    )


class FspR7CpCompState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("idle", 1),
          ("fail", 2),
          ("inprogs", 3),
          ("abt", 4),
          ("compl", 5))
    )



class FspR7CpCompStateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capIdle", 1),
          ("capFail", 2),
          ("capInprogs", 3),
          ("capAbt", 4),
          ("capCompl", 5))
    )


class FspR7CpEncapsulation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("ipip", 2),
          ("greip", 3))
    )



class FspR7CpEncapsulationCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capIpip", 2),
          ("capGreip", 3))
    )


class FspR7CpEncode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("otn", 1),
          ("sonet", 2),
          ("sdh", 3),
          ("eth", 4),
          ("fc", 5),
          ("trans", 6),
          ("cl", 7),
          ("ib", 8),
          ("otnp", 9),
          ("unspecified", 10))
    )



class FspR7CpEncodeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capOtn", 1),
          ("capSonet", 2),
          ("capSdh", 3),
          ("capEth", 4),
          ("capFc", 5),
          ("capTrans", 6),
          ("capCl", 7),
          ("capIb", 8),
          ("capOtnp", 9),
          ("capUnspecified", 10))
    )


class FspR7CpErrorCategory(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("success", 1),
          ("nonOptimal", 2),
          ("provision", 3),
          ("pathComputation", 4),
          ("communicationConnection", 5),
          ("networkCommunication", 6),
          ("resourceUnavailable", 7),
          ("progress", 8),
          ("noPath", 9))
    )



class FspR7CpNePosition(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("local", 1),
          ("ingress", 2),
          ("egress", 3),
          ("transit", 4))
    )



class FspR7CpNodeId(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("tid", 1),
          ("ip", 2))
    )



class FspR7CpOperateReversion(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("release", 1),
          ("manual", 2))
    )



class FspR7CpOspfTeRouting(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7CpOspfTeRoutingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2))
    )


class FspR7CpPathType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("prov", 1),
          ("sig", 2),
          ("comp", 3))
    )



class FspR7CpPinning(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7CpPinningCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capYes", 1),
          ("capNo", 2))
    )


class FspR7CpPreprovUeqState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7CpPreprovUeqStateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capYes", 1),
          ("capNo", 2))
    )


class FspR7CpProtectionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("desired", 2),
          ("required", 3))
    )



class FspR7CpProtectionTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capDesired", 2),
          ("capRequired", 3))
    )


class FspR7CpProtType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("onePlusOne", 1),
          ("oneToOne", 2))
    )



class FspR7CpRecoveryType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("desired", 2),
          ("required", 3),
          ("restoration", 4))
    )



class FspR7CpRecoveryTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capDesired", 2),
          ("capRequired", 3),
          ("capRestoration", 4))
    )


class FspR7CpRestorationState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("idle", 1),
          ("fail", 2),
          ("inProgress", 3),
          ("abort", 4),
          ("completed", 5),
          ("completedNotReverted", 6))
    )



class FspR7CpRestorationType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("primary", 2),
          ("secondary", 3),
          ("all", 4))
    )



class FspR7CpRestorationTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capPrimary", 2),
          ("capSecondary", 3),
          ("capAll", 4))
    )


class FspR7CpRestorationMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("dynamic", 2),
          ("guaranteed", 3))
    )



class FspR7CpRestorationModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capDynamic", 2),
          ("capGuaranteed", 3))
    )


class FspR7CpReversionState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("idle", 1),
          ("waitToRevert", 2),
          ("inProgress", 3),
          ("failed", 4))
    )



class FspR7CpReversionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("manual", 2),
          ("auto", 3))
    )



class FspR7CpReversionTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capManual", 2),
          ("capAuto", 3))
    )


class FspR7CpRole(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("working", 1),
          ("protection", 2),
          ("na", 3),
          ("workingNominal", 4),
          ("workingRestored", 5),
          ("protectionNominal", 6),
          ("protectionRestored", 7),
          ("nominal", 8),
          ("restored", 9))
    )



class FspR7CpRsvpSignalling(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7CpRsvpSignallingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2))
    )


class FspR7CpTEType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("node", 1),
          ("linkun", 2),
          ("linknr", 3))
    )



class FspR7CpTETypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNode", 1),
          ("capLinkun", 2),
          ("capLinknr", 3))
    )


class FspR7CpTie(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("strict", 1),
          ("loose", 2))
    )



class FspR7CpTieCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capStrict", 1),
          ("capLoose", 2))
    )


class FspR7CpTunnelType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("p2p", 1))
    )



class FspR7CpTunnelTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capP2p", 1))
    )


class FspR7CpTunnelScope(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("clientPort", 1),
          ("networkPort", 2))
    )



class FspR7CpTunnelScopeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capClientPort", 1),
          ("capNetworkPort", 2))
    )


class FspR7CpType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("intern", 1),
          ("gmpls", 2),
          ("none", 3),
          ("passive", 4),
          ("uni", 5),
          ("oifUni", 6),
          ("oifNni", 7))
    )



class FspR7CpTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capIntern", 1),
          ("capGmpls", 2),
          ("capNone", 3),
          ("capPassive", 4),
          ("capUni", 5),
          ("capOifUni", 6),
          ("capOifNni", 7))
    )


class FspR7CpVTeType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("vTeLink", 1),
          ("vTeNode", 2),
          ("vTeNodeRlink", 3),
          ("vTeNodeVlink", 4))
    )



class FspR7CpVTeTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capVTeLink", 1),
          ("capVTeNode", 2),
          ("capVTeNodeRlink", 3),
          ("capVTeNodeVlink", 4))
    )


class FspR7DatabaseType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("auxiliary", 1),
          ("normal", 2))
    )



class FspR7Date(TextualConvention, OctetString):
    status = "current"
    displayHint = "2d-1d-1d"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )
    fixed_length = 4



class FspR7DCFiberType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("singleMode", 1),
          ("trueWaveRs", 2))
    )



class FspR7DCFiberTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capSingleMode", 1),
          ("capTrueWaveRs", 2))
    )


class FspR7DeploymentScenario(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("generic", 1),
          ("backToBack", 2),
          ("clientProt", 3),
          ("passThrough", 4))
    )



class FspR7DeploymentScenarioCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capGeneric", 1),
          ("capBackToBack", 2),
          ("capClientProt", 3),
          ("capPassThrough", 4))
    )


class FspR7DisableEnable(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("disable", 1),
          ("enable", 2))
    )



class FspR7DispersionCompensation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("dispertion10", 1),
          ("dispertion20", 2),
          ("dispertion40", 3),
          ("dispertion60", 4),
          ("dispertion80", 5),
          ("dispertion100", 6),
          ("dispertion30", 7),
          ("dispertion50", 8),
          ("dispertion70", 9),
          ("dispertion90", 10),
          ("dispertion160", 11),
          ("dispertion240", 12),
          ("dispertion320", 13))
    )



class FspR7DispersionCompensationCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capDispertion10", 1),
          ("capDispertion20", 2),
          ("capDispertion40", 3),
          ("capDispertion60", 4),
          ("capDispertion80", 5),
          ("capDispertion100", 6),
          ("capDispertion30", 7),
          ("capDispertion50", 8),
          ("capDispertion70", 9),
          ("capDispertion90", 10),
          ("capDispertion160", 11),
          ("capDispertion240", 12),
          ("capDispertion320", 13))
    )


class FspR7DispersionConfig(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("oprCdc", 2))
    )



class FspR7DispersionConfigCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capOprCdc", 2))
    )


class FspR7DispersionModes(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("auto", 1),
          ("man", 2))
    )



class FspR7DispersionModesCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAuto", 1),
          ("capMan", 2))
    )


class FspR7EdfaOutputPowerRating(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("pwrOut10", 1),
          ("pwrOut17", 2),
          ("pwrOut18", 3),
          ("pwrOut20", 4),
          ("pwrOut15", 5),
          ("pwrOut27", 6),
          ("pwrOut26", 7))
    )



class FspR7EdfaOutputPowerRatingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capPwrOut10", 1),
          ("capPwrOut17", 2),
          ("capPwrOut18", 3),
          ("capPwrOut20", 4),
          ("capPwrOut15", 5),
          ("capPwrOut27", 6),
          ("capPwrOut26", 7))
    )


class FspR7EnableDisable(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7EnableDisableCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2))
    )


class FspR7EntitySecondaryStates(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("ueq", 0),
          ("meaState", 1),
          ("sgeo", 2),
          ("lpbkState", 3),
          ("lkdo", 4),
          ("frcdState", 5),
          ("faf", 6),
          ("flt", 7),
          ("act", 8),
          ("stbyh", 9),
          ("psi", 10),
          ("pri", 11),
          ("dgn", 12),
          ("busy", 13),
          ("idleState", 14),
          ("receiveIdleState", 15),
          ("transmitIdleState", 16),
          ("sgeoSrv", 17),
          ("farEndPlugOutage", 18),
          ("aseTableBuildState", 19),
          ("testState", 20),
          ("testFailed", 21),
          ("stby", 22),
          ("stbyInh", 23),
          ("noBackup", 24))
    )


class FspR7EntityType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              122,
              123,
              124,
              125,
              126,
              127,
              130,
              131,
              132,
              133,
              137,
              138,
              140,
              141,
              142,
              143,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              180,
              182,
              183,
              185,
              186,
              187,
              188,
              190,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              224,
              225,
              227,
              228,
              499,
              501,
              502,
              503,
              504,
              505,
              506,
              507,
              508,
              510,
              511,
              512,
              513,
              514,
              515,
              516,
              517,
              518,
              519,
              520,
              521,
              522,
              523,
              524,
              525,
              526,
              527,
              528,
              529,
              534,
              536,
              537,
              538,
              539,
              540,
              541,
              542,
              543,
              544,
              545,
              546,
              547,
              548,
              549,
              550,
              551,
              552,
              554,
              555,
              556,
              557,
              558,
              559,
              560,
              561,
              562,
              564,
              565,
              566,
              567,
              569,
              570,
              571,
              572,
              573,
              574,
              575,
              576,
              577,
              578,
              579,
              580,
              581,
              582,
              583,
              584,
              585,
              586,
              587,
              588,
              589,
              590,
              591,
              592,
              593,
              594,
              595,
              596,
              597,
              598,
              599,
              600,
              601,
              602,
              603,
              604,
              605,
              606,
              607,
              608,
              609,
              610,
              611,
              612,
              613,
              614,
              615,
              616,
              617,
              618,
              619,
              620,
              621,
              622,
              623,
              624,
              625,
              626,
              627,
              628,
              629,
              630,
              631,
              632,
              633,
              634,
              635,
              636,
              637,
              638,
              639,
              640,
              641,
              642,
              643,
              644,
              645,
              646,
              647,
              648,
              649,
              650,
              651,
              652,
              653,
              654,
              660,
              661,
              662,
              663,
              664,
              665,
              667,
              673,
              674,
              678,
              1000,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1101,
              1102,
              1103,
              1104,
              1105,
              1106,
              1107)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("eqpSh1hu", 1),
          ("eqpSh1huDc", 2),
          ("eqpSh3hu", 3),
          ("eqpSh7hu", 4),
          ("eqpF2kSh5hu", 5),
          ("eqpF2kSh6hu", 6),
          ("eqpDcm", 7),
          ("eqpSh9hu", 8),
          ("eqpUnknown", 19),
          ("eqpNcu", 20),
          ("eqpNcutif", 21),
          ("eqpScu", 22),
          ("eqpScue", 23),
          ("eqpR6cu", 24),
          ("eqpPsu1huac", 25),
          ("eqpPsu7huac", 26),
          ("eqpPsu7hudc", 27),
          ("eqpFcu7hu", 28),
          ("eqp2clsmd", 29),
          ("eqp2absmc", 30),
          ("eqp2bsmd", 31),
          ("eqp1Gsmud", 32),
          ("eqp4gsmd", 33),
          ("eqp8gsmd", 34),
          ("eqp1csmuc", 35),
          ("eqp1csmuewc", 36),
          ("eqp4csmd", 37),
          ("eqp4csmud", 38),
          ("eqp4csmc", 39),
          ("eqpOsfm", 40),
          ("eqp1pm", 41),
          ("eqp2pm", 42),
          ("eqp40csmd", 43),
          ("eqpDcf", 44),
          ("eqpEdfas", 45),
          ("eqpEdfasgc", 46),
          ("eqpEdfadgc", 47),
          ("eqpRaman", 48),
          ("eqp4tcc2g5", 49),
          ("eqp4tcc2g5d", 50),
          ("eqp4tcc10gd", 51),
          ("eqp4tcc10gc", 52),
          ("eqpWcc10gd", 53),
          ("eqpWcc10gc", 54),
          ("eqpWcc2g71N", 55),
          ("eqpWcc2g7d", 56),
          ("eqp2tcm2g5", 57),
          ("eqp2tca2g5", 58),
          ("eqp8tca10gd", 59),
          ("eqp8tca10gc", 60),
          ("eqpWca10gd", 61),
          ("eqpWca10gc", 62),
          ("eqp4tca4gd", 63),
          ("eqp4tca4gc", 64),
          ("eqpwca2g5", 65),
          ("eqp4tca1g3d", 66),
          ("eqp4tca1g3c", 67),
          ("eqp8tce2g5d", 68),
          ("eqp8tce2g5c", 69),
          ("eqpWcelsd", 70),
          ("eqpWcelsc", 71),
          ("eqpVsm", 72),
          ("eqpRsmolm", 73),
          ("eqpRsmsf", 74),
          ("eqpOscm", 75),
          ("eqp2oscm", 76),
          ("eqpDrm", 77),
          ("eqpXfpG", 78),
          ("eqpsfpd", 79),
          ("eqpSfpc", 80),
          ("eqpSfpg", 81),
          ("eqpSfpe", 82),
          ("eqpSh1hudcm", 83),
          ("eqpCustomc", 84),
          ("eqpCustomd", 85),
          ("eqpPsu1hudc", 86),
          ("eqpWcc2g7c", 87),
          ("eqp1csmuEwD", 88),
          ("eqp1csmuG", 89),
          ("eqp3BsmC", 90),
          ("eqp2Tca2g5s", 91),
          ("eqp8Csmuc", 92),
          ("eqpEdfaDgcb", 93),
          ("eqpOscmPn", 94),
          ("eqp4Tcc10gtd", 95),
          ("eqp4Tca4g", 96),
          ("eqpDcg", 97),
          ("eqp2Tcm2g5d", 98),
          ("eqp2Tcm2g5c", 99),
          ("eqpWcm2g5d", 100),
          ("eqpWcm2g5c", 101),
          ("eqpEdfmSgc", 102),
          ("eqpF2kDemiV2", 103),
          ("eqpPsm", 104),
          ("eqpNcu2e", 105),
          ("eqp8TceGl2g5d", 106),
          ("eqp8TceGl2g5c", 107),
          ("eqpDcf1hu", 108),
          ("eqp10tcc10gtd", 109),
          ("eqp10tcc10gd", 110),
          ("eqp10tcc10gc", 111),
          ("eqp16csmSfd", 112),
          ("eqpOsfmSf", 113),
          ("eqp2clsmSfd", 114),
          ("eqp3bsmEwc", 115),
          ("eqpEdfaSgcb", 116),
          ("eqpEdfaDgcv", 117),
          ("eqpWcc10gtd", 118),
          ("eqp2csmuEwc", 119),
          ("eqpEroadmDc", 120),
          ("eqpScuS", 122),
          ("eqp4opcm", 123),
          ("eqpUtm", 124),
          ("eqpPscu", 125),
          ("eqp40Csm2hu", 126),
          ("eqp2Twcc2g7", 127),
          ("eqp2Wca10g", 130),
          ("eqpNcuHp", 131),
          ("eqpNcu20085hu", 132),
          ("eqp20Pca10G", 133),
          ("eqpXfpC", 137),
          ("eqpXfpD", 138),
          ("eqpWcc40gtd", 140),
          ("eqpIlm", 141),
          ("eqpNcuII", 142),
          ("eqpCem9hu", 143),
          ("eqp8roadmC40", 148),
          ("eqp4Tcc40gtd", 149),
          ("eqp2pca10g", 150),
          ("eqp10pca10g", 151),
          ("eqp1csmuD", 152),
          ("eqpSfpOsC", 153),
          ("eqpSfpOdC", 154),
          ("eqpSfpOsG", 155),
          ("eqpSfpOdG", 156),
          ("eqpRoadmC80", 157),
          ("eqpccm8", 158),
          ("eqpPsu9hudc", 159),
          ("eqp4tca4gus", 160),
          ("eqp40Csm3huD", 161),
          ("eqp5psm", 162),
          ("eqpFan9hu", 163),
          ("eqp5tce10gtd", 164),
          ("eqp10tccs10gtd", 165),
          ("eqp40Csm3hudcD", 166),
          ("eqp40Csm3hudcDi", 167),
          ("eqp5gsmD", 169),
          ("eqp8csmD", 170),
          ("eqp2otfm", 171),
          ("eqp8otdr3hu", 172),
          ("eqpXfptD", 173),
          ("eqp40Csm3huDi", 174),
          ("eqp8CcmC80", 175),
          ("eqpEdfaD27", 176),
          ("eqp2Wcc10g", 177),
          ("eqp8RoadmC80", 178),
          ("eqp2Wcc10gAes", 180),
          ("eqp5tce10gtaesd", 182),
          ("eqpSh1hupf", 183),
          ("eqpFan1hu", 185),
          ("eqp10tcc10g", 186),
          ("eqpXfpOtnD", 187),
          ("eqpNcu2p", 188),
          ("eqpPsu9huac", 190),
          ("eqp2Raman", 192),
          ("eqpEdfaS26", 193),
          ("eqp5tces10gtd", 194),
          ("eqpScuII", 195),
          ("eqp11RoadmC96", 196),
          ("eqp8AdmC96", 197),
          ("eqp8CxmC96", 198),
          ("eqp8Shm", 199),
          ("eqpAmpShgcv", 200),
          ("eqpAmpSlgcv", 201),
          ("eqp2RamanC15", 202),
          ("eqpWcc100gtD", 203),
          ("eqpCfp4g", 204),
          ("eqpCfp10g", 205),
          ("eqpXfpTlnD", 213),
          ("eqp5tces10gtaesd", 214),
          ("eqp10tce100g", 215),
          ("eqp96Csm4HuD", 216),
          ("eqp4CfptD", 217),
          ("eqp2psm", 218),
          ("eqpWce100G", 219),
          ("eqp9RoadmC96", 224),
          ("eqp4Wce16g", 225),
          ("eqpSfpCdrG", 227),
          ("eqp10tce100gGf", 228),
          ("eqpPtp", 499),
          ("ifTypeOtu1", 501),
          ("ifTypeOtu2", 502),
          ("ifType10GbE", 503),
          ("ifTypeOc192", 504),
          ("ifTypeOc48", 505),
          ("ifTypeStm16", 506),
          ("ifTypeStm64", 507),
          ("ifType10GFC", 508),
          ("ifTypeF1062", 510),
          ("ifTypeF1250", 511),
          ("ifTypeFC", 512),
          ("ifTypeF125", 513),
          ("ifTypeF200", 514),
          ("ifTypeF9953", 515),
          ("ifTypeF10312", 516),
          ("ifTypeF10518", 517),
          ("ifTypeF2488", 518),
          ("ifTypeGfpF", 519),
          ("ifTypeGfpT", 520),
          ("ifTypeDccL", 521),
          ("ifTypeDccS", 522),
          ("ifTypeDccP", 523),
          ("ifTypeOdu1", 524),
          ("ifTypeGcc0", 525),
          ("ifTypeGcc1", 526),
          ("ifTypeGcc2", 527),
          ("ifTypeoch", 528),
          ("ifTypeOm", 529),
          ("ifTypeOt", 534),
          ("ifTypeE10or100bt", 536),
          ("ifTypeE100fx", 537),
          ("ifTypeCl", 538),
          ("ifType2GFC", 539),
          ("ifType2GCL", 540),
          ("ifType1GbE", 541),
          ("ifTypeEoc", 542),
          ("ifTypeSwitch", 543),
          ("ifTypePassive", 544),
          ("ifTypeF2500", 545),
          ("ifTypeSc", 546),
          ("ifTypeUch", 547),
          ("ifTypeF155", 548),
          ("ifTypeF622", 549),
          ("ifTypeF2125", 550),
          ("ifTypeF2666", 551),
          ("ifTypeF4250", 552),
          ("ifTypeF10709", 554),
          ("ifTypeF11095", 555),
          ("ifTypeF11318", 556),
          ("ifTypeLs", 557),
          ("ifType4Gfc", 558),
          ("ifTypeGcc0S", 559),
          ("ifType2R", 560),
          ("ifTypePppIp", 561),
          ("ifTypeLanIp", 562),
          ("ifTypeSerial", 564),
          ("ifTypeModem", 565),
          ("ifTypeAdapt", 566),
          ("ifTypeAdaptd", 567),
          ("ifTypeGBEFR", 569),
          ("ifTypeVc4", 570),
          ("ifTypeVc3", 571),
          ("ifTypeSts1", 572),
          ("ifTypeEdfa", 573),
          ("ifTypeEdfaMid", 574),
          ("ifType10Gdw", 575),
          ("ifTypeOtu2Lan", 576),
          ("ifTypeOtu1Lan", 577),
          ("ifTypeOtu1Fc", 578),
          ("ifTypeOtu1Fc2G", 579),
          ("ifTypeF197", 580),
          ("ifTypeTif", 581),
          ("ifTypeSts3c", 582),
          ("ifTypeVs1", 583),
          ("ifType1GbETH", 584),
          ("ifTypeStm1", 585),
          ("ifTypeStm4", 586),
          ("ifTypeOc3", 587),
          ("ifTypeOc12", 588),
          ("ifTypeOtu1Stm1", 589),
          ("ifTypeOtu1Stm4", 590),
          ("ifTypeF166", 591),
          ("ifTypeF666", 592),
          ("ifTypeI2C", 593),
          ("ifTypeLifIP", 594),
          ("ifTypeSts24c", 595),
          ("ifTypeSts48c", 596),
          ("ifTypeLifte", 597),
          ("ifTypeRaman", 598),
          ("ifTypeIpWhiteList", 599),
          ("ifTypeOspfIp", 600),
          ("ifTypeEncapIp", 601),
          ("ifTypeOtu3", 602),
          ("ifTypeStm256", 603),
          ("ifTypeOc768", 604),
          ("ifTypeF10664", 605),
          ("ifTypeOdu2", 606),
          ("ifTypeF39813", 607),
          ("ifTypeVc4c8", 608),
          ("ifTypeVc4c16", 609),
          ("ifTypeF8500", 610),
          ("ifTypePb", 611),
          ("ifTypePolicer", 612),
          ("ifTypeQueue", 613),
          ("ifTypeFlowPoint", 614),
          ("ifTypeLag", 615),
          ("ifTypeElinePPP", 616),
          ("ifTypeEtree", 617),
          ("ifTypeEline", 618),
          ("ifTypeElan", 619),
          ("ifTypeCtrans", 620),
          ("ifTypeVs0", 621),
          ("ifTypeTug", 622),
          ("ifTypeMd", 623),
          ("ifTypeMa", 624),
          ("ifTypeDownMep", 625),
          ("ifTypeFMep", 626),
          ("ifType8Gfc", 627),
          ("ifType10Gib", 628),
          ("ifTypeF10000", 629),
          ("ifTypeOtu2pFC8", 630),
          ("ifTypeOtu2pIB", 631),
          ("ifTypeOtu2pFC", 632),
          ("ifTypeOtu2pLAN", 633),
          ("ifTypeOtu2p", 634),
          ("ifTypeUpMep", 635),
          ("ifTypeOtdrCh", 636),
          ("ifTypeMaNet", 637),
          ("ifTypeMaComp", 638),
          ("ifTypeBridge", 639),
          ("ifType1000BaseT", 640),
          ("ifTypeOtu2E", 641),
          ("ifTypeOtu1E", 642),
          ("ifTypeOtu2F", 643),
          ("ifTypeF11049", 644),
          ("ifTypeLifteNum", 645),
          ("ifTypeLifteUnn", 646),
          ("ifTypeLifPbNum", 647),
          ("ifTypeLifSubUnn", 648),
          ("ifType5Gib", 649),
          ("ifTypeF5000", 650),
          ("ifTypeOtu2eEth", 651),
          ("ifTypeOdu0", 652),
          ("ifTypeFcu", 653),
          ("ifTypeOtu4", 654),
          ("ifType100GbE", 660),
          ("ifTypeOptical", 661),
          ("ifType10GbEWan", 662),
          ("ifType10GbELan", 663),
          ("ifTypeOduFlx", 664),
          ("ifTypeOtlc", 665),
          ("ifTypeOtu2ps", 667),
          ("ifTypeLifVTeNum", 673),
          ("ifTypeLifVTeUnn", 674),
          ("ifTypeF14025", 678),
          ("grpffpCh", 1000),
          ("grpffpOm", 1001),
          ("grpCrsDcn", 1002),
          ("grpLanDcn", 1003),
          ("grpConn", 1004),
          ("grpffpVchN", 1005),
          ("grpVirtualConn", 1006),
          ("conFanContainer", 1101),
          ("conModContainer", 1102),
          ("conPlugContainer", 1103),
          ("grpCrsCh", 1104),
          ("physTermPoint", 1105),
          ("virtualTermPoint", 1106),
          ("fanContainer", 1107))
    )



class FspR7EocProtAvailability(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("no", 1),
          ("yes", 2))
    )



class FspR7EqlzAdminState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enabled", 1),
          ("disabled", 2))
    )



class FspR7EqlzAdminStateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnabled", 1),
          ("capDisabled", 2))
    )


class FspR7EqlzInterval(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("interval-2-hr", 1),
          ("interval-4-hr", 2),
          ("interval-12-hr", 3),
          ("interval-1-day", 4),
          ("interval-7-day", 5),
          ("interval-5-min", 6))
    )



class FspR7EqlzIntervalCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capInterval-2-hr", 1),
          ("capInterval-4-hr", 2),
          ("capInterval-12-hr", 3),
          ("capInterval-1-day", 4),
          ("capInterval-7-day", 5),
          ("capInterval-5-min", 6))
    )


class FspR7EquipmentType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              122,
              123,
              124,
              125,
              126,
              127,
              130,
              131,
              132,
              133,
              137,
              138,
              140,
              141,
              142,
              143,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              180,
              182,
              183,
              185,
              186,
              187,
              188,
              190,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              224,
              225,
              227,
              228,
              499)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("eqpSh1hu", 1),
          ("eqpSh1huDc", 2),
          ("eqpSh3hu", 3),
          ("eqpSh7hu", 4),
          ("eqpF2kSh5hu", 5),
          ("eqpF2kSh6hu", 6),
          ("eqpDcm", 7),
          ("eqpSh9hu", 8),
          ("eqpUnknown", 19),
          ("eqpNcu", 20),
          ("eqpNcutif", 21),
          ("eqpScu", 22),
          ("eqpScue", 23),
          ("eqpR6cu", 24),
          ("eqpPsu1huac", 25),
          ("eqpPsu7huac", 26),
          ("eqpPsu7hudc", 27),
          ("eqpFcu7hu", 28),
          ("eqp2clsmd", 29),
          ("eqp2absmc", 30),
          ("eqp2bsmd", 31),
          ("eqp1Gsmud", 32),
          ("eqp4gsmd", 33),
          ("eqp8gsmd", 34),
          ("eqp1csmuc", 35),
          ("eqp1csmuewc", 36),
          ("eqp4csmd", 37),
          ("eqp4csmud", 38),
          ("eqp4csmc", 39),
          ("eqpOsfm", 40),
          ("eqp1pm", 41),
          ("eqp2pm", 42),
          ("eqp40csmd", 43),
          ("eqpDcf", 44),
          ("eqpEdfas", 45),
          ("eqpEdfasgc", 46),
          ("eqpEdfadgc", 47),
          ("eqpRaman", 48),
          ("eqp4tcc2g5", 49),
          ("eqp4tcc2g5d", 50),
          ("eqp4tcc10gd", 51),
          ("eqp4tcc10gc", 52),
          ("eqpWcc10gd", 53),
          ("eqpWcc10gc", 54),
          ("eqpWcc2g71N", 55),
          ("eqpWcc2g7d", 56),
          ("eqp2tcm2g5", 57),
          ("eqp2tca2g5", 58),
          ("eqp8tca10gd", 59),
          ("eqp8tca10gc", 60),
          ("eqpWca10gd", 61),
          ("eqpWca10gc", 62),
          ("eqp4tca4gd", 63),
          ("eqp4tca4gc", 64),
          ("eqpwca2g5", 65),
          ("eqp4tca1g3d", 66),
          ("eqp4tca1g3c", 67),
          ("eqp8tce2g5d", 68),
          ("eqp8tce2g5c", 69),
          ("eqpWcelsd", 70),
          ("eqpWcelsc", 71),
          ("eqpVsm", 72),
          ("eqpRsmolm", 73),
          ("eqpRsmsf", 74),
          ("eqpOscm", 75),
          ("eqp2oscm", 76),
          ("eqpDrm", 77),
          ("eqpXfpG", 78),
          ("eqpsfpd", 79),
          ("eqpSfpc", 80),
          ("eqpSfpg", 81),
          ("eqpSfpe", 82),
          ("eqpSh1hudcm", 83),
          ("eqpCustomc", 84),
          ("eqpCustomd", 85),
          ("eqpPsu1hudc", 86),
          ("eqpWcc2g7c", 87),
          ("eqp1csmuEwD", 88),
          ("eqp1csmuG", 89),
          ("eqp3BsmC", 90),
          ("eqp2Tca2g5s", 91),
          ("eqp8Csmuc", 92),
          ("eqpEdfaDgcb", 93),
          ("eqpOscmPn", 94),
          ("eqp4Tcc10gtd", 95),
          ("eqp4Tca4g", 96),
          ("eqpDcg", 97),
          ("eqp2Tcm2g5d", 98),
          ("eqp2Tcm2g5c", 99),
          ("eqpWcm2g5d", 100),
          ("eqpWcm2g5c", 101),
          ("eqpEdfmSgc", 102),
          ("eqpF2kDemiV2", 103),
          ("eqpPsm", 104),
          ("eqpNcu2e", 105),
          ("eqp8TceGl2g5d", 106),
          ("eqp8TceGl2g5c", 107),
          ("eqpDcf1hu", 108),
          ("eqp10tcc10gtd", 109),
          ("eqp10tcc10gd", 110),
          ("eqp10tcc10gc", 111),
          ("eqp16csmSfd", 112),
          ("eqpOsfmSf", 113),
          ("eqp2clsmSfd", 114),
          ("eqp3bsmEwc", 115),
          ("eqpEdfaSgcb", 116),
          ("eqpEdfaDgcv", 117),
          ("eqpWcc10gtd", 118),
          ("eqp2csmuEwc", 119),
          ("eqpEroadmDc", 120),
          ("eqpScuS", 122),
          ("eqp4opcm", 123),
          ("eqpUtm", 124),
          ("eqpPscu", 125),
          ("eqp40Csm2hu", 126),
          ("eqp2Twcc2g7", 127),
          ("eqp2Wca10g", 130),
          ("eqpNcuHp", 131),
          ("eqpNcu20085hu", 132),
          ("eqp20Pca10G", 133),
          ("eqpXfpC", 137),
          ("eqpXfpD", 138),
          ("eqpWcc40gtd", 140),
          ("eqpIlm", 141),
          ("eqpNcuII", 142),
          ("eqpCem9hu", 143),
          ("eqp8roadmC40", 148),
          ("eqp4Tcc40gtd", 149),
          ("eqp2pca10g", 150),
          ("eqp10pca10g", 151),
          ("eqp1csmuD", 152),
          ("eqpSfpOsC", 153),
          ("eqpSfpOdC", 154),
          ("eqpSfpOsG", 155),
          ("eqpSfpOdG", 156),
          ("eqpRoadmC80", 157),
          ("eqpccm8", 158),
          ("eqpPsu9hudc", 159),
          ("eqp4tca4gus", 160),
          ("eqp40Csm3huD", 161),
          ("eqp5psm", 162),
          ("eqpFan9hu", 163),
          ("eqp5tce10gtd", 164),
          ("eqp10tccs10gtd", 165),
          ("eqp40Csm3hudcD", 166),
          ("eqp40Csm3hudcDi", 167),
          ("eqp5gsmD", 169),
          ("eqp8csmD", 170),
          ("eqp2otfm", 171),
          ("eqp8otdr3hu", 172),
          ("eqpXfptD", 173),
          ("eqp40Csm3huDi", 174),
          ("eqp8CcmC80", 175),
          ("eqpEdfaD27", 176),
          ("eqp2Wcc10g", 177),
          ("eqp8RoadmC80", 178),
          ("eqp2Wcc10gAes", 180),
          ("eqp5tce10gtaesd", 182),
          ("eqpSh1hupf", 183),
          ("eqpFan1hu", 185),
          ("eqp10tcc10g", 186),
          ("eqpXfpOtnD", 187),
          ("eqpNcu2p", 188),
          ("eqpPsu9huac", 190),
          ("eqp2Raman", 192),
          ("eqpEdfaS26", 193),
          ("eqp5tces10gtd", 194),
          ("eqpScuII", 195),
          ("eqp11RoadmC96", 196),
          ("eqp8AdmC96", 197),
          ("eqp8CxmC96", 198),
          ("eqp8Shm", 199),
          ("eqpAmpShgcv", 200),
          ("eqpAmpSlgcv", 201),
          ("eqp2RamanC15", 202),
          ("eqpWcc100gtD", 203),
          ("eqpCfp4g", 204),
          ("eqpCfp10g", 205),
          ("eqpXfpTlnD", 213),
          ("eqp5tces10gtaesd", 214),
          ("eqp10tce100g", 215),
          ("eqp96Csm4HuD", 216),
          ("eqp4CfptD", 217),
          ("eqp2psm", 218),
          ("eqpWce100G", 219),
          ("eqp9RoadmC96", 224),
          ("eqp4Wce16g", 225),
          ("eqpSfpCdrG", 227),
          ("eqp10tce100gGf", 228),
          ("eqpPtp", 499))
    )



class FspR7EquipmentTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEqpSh1hu", 1),
          ("capEqpSh1huDc", 2),
          ("capEqpSh3hu", 3),
          ("capEqpSh7hu", 4),
          ("capEqpF2kSh5hu", 5),
          ("capEqpF2kSh6hu", 6),
          ("capEqpDcm", 7),
          ("capEqpSh9hu", 8),
          ("capEqpUnknown", 19),
          ("capEqpNcu", 20),
          ("capEqpNcutif", 21),
          ("capEqpScu", 22),
          ("capEqpScue", 23),
          ("capEqpR6cu", 24),
          ("capEqpPsu1huac", 25),
          ("capEqpPsu7huac", 26),
          ("capEqpPsu7hudc", 27),
          ("capEqpFcu7hu", 28),
          ("capEqp2clsmd", 29),
          ("capEqp2absmc", 30),
          ("capEqp2bsmd", 31),
          ("capEqp1Gsmud", 32),
          ("capEqp4gsmd", 33),
          ("capEqp8gsmd", 34),
          ("capEqp1csmuc", 35),
          ("capEqp1csmuewc", 36),
          ("capEqp4csmd", 37),
          ("capEqp4csmud", 38),
          ("capEqp4csmc", 39),
          ("capEqpOsfm", 40),
          ("capEqp1pm", 41),
          ("capEqp2pm", 42),
          ("capEqp40csmd", 43),
          ("capEqpDcf", 44),
          ("capEqpEdfas", 45),
          ("capEqpEdfasgc", 46),
          ("capEqpEdfadgc", 47),
          ("capEqpRaman", 48),
          ("capEqp4tcc2g5", 49),
          ("capEqp4tcc2g5d", 50),
          ("capEqp4tcc10gd", 51),
          ("capEqp4tcc10gc", 52),
          ("capEqpWcc10gd", 53),
          ("capEqpWcc10gc", 54),
          ("capEqpWcc2g71N", 55),
          ("capEqpWcc2g7d", 56),
          ("capEqp2tcm2g5", 57),
          ("capEqp2tca2g5", 58),
          ("capEqp8tca10gd", 59),
          ("capEqp8tca10gc", 60),
          ("capEqpWca10gd", 61),
          ("capEqpWca10gc", 62),
          ("capEqp4tca4gd", 63),
          ("capEqp4tca4gc", 64),
          ("capEqpwca2g5", 65),
          ("capEqp4tca1g3d", 66),
          ("capEqp4tca1g3c", 67),
          ("capEqp8tce2g5d", 68),
          ("capEqp8tce2g5c", 69),
          ("capEqpWcelsd", 70),
          ("capEqpWcelsc", 71),
          ("capEqpVsm", 72),
          ("capEqpRsmolm", 73),
          ("capEqpRsmsf", 74),
          ("capEqpOscm", 75),
          ("capEqp2oscm", 76),
          ("capEqpDrm", 77),
          ("capEqpXfpG", 78),
          ("capEqpsfpd", 79),
          ("capEqpSfpc", 80),
          ("capEqpSfpg", 81),
          ("capEqpSfpe", 82),
          ("capEqpSh1hudcm", 83),
          ("capEqpCustomc", 84),
          ("capEqpCustomd", 85),
          ("capEqpPsu1hudc", 86),
          ("capEqpWcc2g7c", 87),
          ("capEqp1csmuEwD", 88),
          ("capEqp1csmuG", 89),
          ("capEqp3BsmC", 90),
          ("capEqp2Tca2g5s", 91),
          ("capEqp8Csmuc", 92),
          ("capEqpEdfaDgcb", 93),
          ("capEqpOscmPn", 94),
          ("capEqp4Tcc10gtd", 95),
          ("capEqp4Tca4g", 96),
          ("capEqpDcg", 97),
          ("capEqp2Tcm2g5d", 98),
          ("capEqp2Tcm2g5c", 99),
          ("capEqpWcm2g5d", 100),
          ("capEqpWcm2g5c", 101),
          ("capEqpEdfmSgc", 102),
          ("capEqpF2kDemiV2", 103),
          ("capEqpPsm", 104),
          ("capEqpNcu2e", 105),
          ("capEqp8TceGl2g5d", 106),
          ("capEqp8TceGl2g5c", 107),
          ("capEqpDcf1hu", 108),
          ("capEqp10tcc10gtd", 109),
          ("capEqp10tcc10gd", 110),
          ("capEqp10tcc10gc", 111),
          ("capEqp16csmSfd", 112),
          ("capEqpOsfmSf", 113),
          ("capEqp2clsmSfd", 114),
          ("capEqp3bsmEwc", 115),
          ("capEqpEdfaSgcb", 116),
          ("capEqpEdfaDgcv", 117),
          ("capEqpWcc10gtd", 118),
          ("capEqp2csmuEwc", 119),
          ("capEqpEroadmDc", 120),
          ("capEqpScuS", 122),
          ("capEqp4opcm", 123),
          ("capEqpUtm", 124),
          ("capEqpPscu", 125),
          ("capEqp40Csm2hu", 126),
          ("capEqp2Twcc2g7", 127),
          ("capEqp2Wca10g", 130),
          ("capEqpNcuHp", 131),
          ("capEqpNcu20085hu", 132),
          ("capEqp20Pca10G", 133),
          ("capEqpXfpC", 137),
          ("capEqpXfpD", 138),
          ("capEqpWcc40gtd", 140),
          ("capEqpIlm", 141),
          ("capEqpNcuII", 142),
          ("capEqpCem9hu", 143),
          ("capEqp8roadmC40", 148),
          ("capEqp4Tcc40gtd", 149),
          ("capEqp2pca10g", 150),
          ("capEqp10pca10g", 151),
          ("capEqp1csmuD", 152),
          ("capEqpSfpOsC", 153),
          ("capEqpSfpOdC", 154),
          ("capEqpSfpOsG", 155),
          ("capEqpSfpOdG", 156),
          ("capEqpRoadmC80", 157),
          ("capEqpccm8", 158),
          ("capEqpPsu9hudc", 159),
          ("capEqp4tca4gus", 160),
          ("capEqp40Csm3huD", 161),
          ("capEqp5psm", 162),
          ("capEqpFan9hu", 163),
          ("capEqp5tce10gtd", 164),
          ("capEqp10tccs10gtd", 165),
          ("capEqp40Csm3hudcD", 166),
          ("capEqp40Csm3hudcDi", 167),
          ("capEqp5gsmD", 169),
          ("capEqp8csmD", 170),
          ("capEqp2otfm", 171),
          ("capEqp8otdr3hu", 172),
          ("capEqpXfptD", 173),
          ("capEqp40Csm3huDi", 174),
          ("capEqp8CcmC80", 175),
          ("capEqpEdfaD27", 176),
          ("capEqp2Wcc10g", 177),
          ("capEqp8RoadmC80", 178),
          ("capEqp2Wcc10gAes", 180),
          ("capEqp5tce10gtaesd", 182),
          ("capEqpSh1hupf", 183),
          ("capEqpFan1hu", 185),
          ("capEqp10tcc10g", 186),
          ("capEqpXfpOtnD", 187),
          ("capEqpNcu2p", 188),
          ("capEqpPsu9huac", 190),
          ("capEqp2Raman", 192),
          ("capEqpEdfaS26", 193),
          ("capEqp5tces10gtd", 194),
          ("capEqpScuII", 195),
          ("capEqp11RoadmC96", 196),
          ("capEqp8AdmC96", 197),
          ("capEqp8CxmC96", 198),
          ("capEqp8Shm", 199),
          ("capEqpAmpShgcv", 200),
          ("capEqpAmpSlgcv", 201),
          ("capEqp2RamanC15", 202),
          ("capEqpWcc100gtD", 203),
          ("capEqpCfp4g", 204),
          ("capEqpCfp10g", 205),
          ("capEqpXfpTlnD", 213),
          ("capEqp5tces10gtaesd", 214),
          ("capEqp10tce100g", 215),
          ("capEqp96Csm4HuD", 216),
          ("capEqp4CfptD", 217),
          ("capEqp2psm", 218),
          ("capEqpWce100G", 219),
          ("capEqp9RoadmC96", 224),
          ("capEqp4Wce16g", 225),
          ("capEqpSfpCdrG", 227),
          ("capEqp10tce100gGf", 228),
          ("capEqpPtp", 499))
    )


class FspR7ErrorFwdMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("ais", 1),
          ("epc", 2),
          ("idle", 3),
          ("lsrOff", 4),
          ("lsrBrk", 5),
          ("txOff", 6))
    )



class FspR7ErrorFwdModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAis", 1),
          ("capEpc", 2),
          ("capIdle", 3),
          ("capLsrOff", 4),
          ("capLsrBrk", 5),
          ("capTxOff", 6))
    )


class FspR7FalseTrue(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("false", 1),
          ("true", 2))
    )



class FspR7FalseTrueCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capFalse", 1),
          ("capTrue", 2))
    )


class FspR7FDStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enabled", 1),
          ("disabled", 2))
    )



class FspR7FDStatusCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnabled", 1),
          ("capDisabled", 2))
    )


class FspR7FecType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("gFec", 1),
          ("eFec", 2),
          ("noFec", 3),
          ("eFec1", 4),
          ("eFec2", 5),
          ("eFec3", 6),
          ("eFec4", 7),
          ("eFecX", 8))
    )



class FspR7FecTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capGFec", 1),
          ("capEFec", 2),
          ("capNoFec", 3),
          ("capEFec1", 4),
          ("capEFec2", 5),
          ("capEFec3", 6),
          ("capEFec4", 7),
          ("capEFecX", 8))
    )


class FspR7FiberBrand(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("g652", 1),
          ("g653", 2),
          ("g655", 3),
          ("smf28e", 4),
          ("allWave", 5),
          ("leaf", 6),
          ("twRs", 7),
          ("twPl", 8),
          ("twCl", 9),
          ("teraLight", 10),
          ("smfLs", 11),
          ("metrocor", 12))
    )



class FspR7FiberBrandCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capG652", 1),
          ("capG653", 2),
          ("capG655", 3),
          ("capSmf28e", 4),
          ("capAllWave", 5),
          ("capLeaf", 6),
          ("capTwRs", 7),
          ("capTwPl", 8),
          ("capTwCl", 9),
          ("capTeraLight", 10),
          ("capSmfLs", 11),
          ("capMetrocor", 12))
    )


class FspR7FiberDetect(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enabled", 1),
          ("disabled", 2))
    )



class FspR7FiberDetectCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnabled", 1),
          ("capDisabled", 2))
    )


class FspR7FlowControlMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("hwControl", 2),
          ("pause", 3))
    )



class FspR7FlowControlModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capHwControl", 2),
          ("capPause", 3))
    )


class FspR7ForcedStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("active", 1),
          ("forcedDestroy", 2))
    )



class FspR7ForcedStatusCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capActive", 1),
          ("capForcedDestroy", 2))
    )


class FspR7FrameFormat(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              99)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("otn", 1),
          ("sdh", 2),
          ("sonet", 3),
          ("ethernet", 4),
          ("fiberchannel", 5),
          ("infiniband", 6),
          ("couplinglink", 7),
          ("transparent", 8),
          ("notDefined", 99))
    )



class FspR7FrameFormatCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capOtn", 1),
          ("capSdh", 2),
          ("capSonet", 3),
          ("capEthernet", 4),
          ("capFiberchannel", 5),
          ("capInfiniband", 6),
          ("capCouplinglink", 7),
          ("capTransparent", 8),
          ("capNotDefined", 99))
    )


class FspR7FtpServer(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7FtpServerCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2))
    )


class FspR7FtpClient(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7FunctionCrs(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("add", 1),
          ("drop", 2),
          ("pass", 3),
          ("hairpin", 4),
          ("select", 5),
          ("addDrop", 6))
    )



class FspR7Gain(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("gain24", 1),
          ("gain25", 2))
    )



class FspR7GainCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capGain24", 1),
          ("capGain25", 2))
    )


class FspR7GainRange(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("high", 1),
          ("low", 2))
    )



class FspR7GainRangeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capHigh", 1),
          ("capLow", 2))
    )


class FspR7InitEqualization(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("opr", 2))
    )



class FspR7InitEqualizationCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capOpr", 2))
    )


class FspR7InterfaceFunction(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("transport", 1),
          ("switch", 2),
          ("edfa", 3),
          ("super", 4),
          ("passive", 5),
          ("active", 6),
          ("raman", 7),
          ("physicalTerm", 8))
    )



class FspR7InterfaceFunctionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capTransport", 1),
          ("capSwitch", 2),
          ("capEdfa", 3),
          ("capSuper", 4),
          ("capPassive", 5),
          ("capActive", 6),
          ("capRaman", 7),
          ("capPhysicalTerm", 8))
    )


class FspR7InterfaceType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              34,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              64,
              65,
              66,
              67,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              160,
              161,
              162,
              163,
              164,
              165,
              167,
              173,
              174,
              178)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("ifTypeOtu1", 1),
          ("ifTypeOtu2", 2),
          ("ifType10GbE", 3),
          ("ifTypeOc192", 4),
          ("ifTypeOc48", 5),
          ("ifTypeStm16", 6),
          ("ifTypeStm64", 7),
          ("ifType10GFC", 8),
          ("ifTypeF1062", 10),
          ("ifTypeF1250", 11),
          ("ifTypeFC", 12),
          ("ifTypeF125", 13),
          ("ifTypeF200", 14),
          ("ifTypeF9953", 15),
          ("ifTypeF10312", 16),
          ("ifTypeF10518", 17),
          ("ifTypeF2488", 18),
          ("ifTypeGfpF", 19),
          ("ifTypeGfpT", 20),
          ("ifTypeDccL", 21),
          ("ifTypeDccS", 22),
          ("ifTypeDccP", 23),
          ("ifTypeOdu1", 24),
          ("ifTypeGcc0", 25),
          ("ifTypeGcc1", 26),
          ("ifTypeGcc2", 27),
          ("ifTypeoch", 28),
          ("ifTypeOm", 29),
          ("ifTypeOt", 34),
          ("ifTypeE10or100bt", 36),
          ("ifTypeE100fx", 37),
          ("ifTypeCl", 38),
          ("ifType2GFC", 39),
          ("ifType2GCL", 40),
          ("ifType1GbE", 41),
          ("ifTypeEoc", 42),
          ("ifTypeSwitch", 43),
          ("ifTypePassive", 44),
          ("ifTypeF2500", 45),
          ("ifTypeSc", 46),
          ("ifTypeUch", 47),
          ("ifTypeF155", 48),
          ("ifTypeF622", 49),
          ("ifTypeF2125", 50),
          ("ifTypeF2666", 51),
          ("ifTypeF4250", 52),
          ("ifTypeF10709", 54),
          ("ifTypeF11095", 55),
          ("ifTypeF11318", 56),
          ("ifTypeLs", 57),
          ("ifType4Gfc", 58),
          ("ifTypeGcc0S", 59),
          ("ifType2R", 60),
          ("ifTypePppIp", 61),
          ("ifTypeLanIp", 62),
          ("ifTypeSerial", 64),
          ("ifTypeModem", 65),
          ("ifTypeAdapt", 66),
          ("ifTypeAdaptd", 67),
          ("ifTypeGBEFR", 69),
          ("ifTypeVc4", 70),
          ("ifTypeVc3", 71),
          ("ifTypeSts1", 72),
          ("ifTypeEdfa", 73),
          ("ifTypeEdfaMid", 74),
          ("ifType10Gdw", 75),
          ("ifTypeOtu2Lan", 76),
          ("ifTypeOtu1Lan", 77),
          ("ifTypeOtu1Fc", 78),
          ("ifTypeOtu1Fc2G", 79),
          ("ifTypeF197", 80),
          ("ifTypeTif", 81),
          ("ifTypeSts3c", 82),
          ("ifTypeVs1", 83),
          ("ifType1GbETH", 84),
          ("ifTypeStm1", 85),
          ("ifTypeStm4", 86),
          ("ifTypeOc3", 87),
          ("ifTypeOc12", 88),
          ("ifTypeOtu1Stm1", 89),
          ("ifTypeOtu1Stm4", 90),
          ("ifTypeF166", 91),
          ("ifTypeF666", 92),
          ("ifTypeI2C", 93),
          ("ifTypeLifIP", 94),
          ("ifTypeSts24c", 95),
          ("ifTypeSts48c", 96),
          ("ifTypeLifte", 97),
          ("ifTypeRaman", 98),
          ("ifTypeIpWhiteList", 99),
          ("ifTypeOspfIp", 100),
          ("ifTypeEncapIp", 101),
          ("ifTypeOtu3", 102),
          ("ifTypeStm256", 103),
          ("ifTypeOc768", 104),
          ("ifTypeF10664", 105),
          ("ifTypeOdu2", 106),
          ("ifTypeF39813", 107),
          ("ifTypeVc4c8", 108),
          ("ifTypeVc4c16", 109),
          ("ifTypeF8500", 110),
          ("ifTypePb", 111),
          ("ifTypePolicer", 112),
          ("ifTypeQueue", 113),
          ("ifTypeFlowPoint", 114),
          ("ifTypeLag", 115),
          ("ifTypeElinePPP", 116),
          ("ifTypeEtree", 117),
          ("ifTypeEline", 118),
          ("ifTypeElan", 119),
          ("ifTypeCtrans", 120),
          ("ifTypeVs0", 121),
          ("ifTypeTug", 122),
          ("ifTypeMd", 123),
          ("ifTypeMa", 124),
          ("ifTypeDownMep", 125),
          ("ifTypeFMep", 126),
          ("ifType8Gfc", 127),
          ("ifType10Gib", 128),
          ("ifTypeF10000", 129),
          ("ifTypeOtu2pFC8", 130),
          ("ifTypeOtu2pIB", 131),
          ("ifTypeOtu2pFC", 132),
          ("ifTypeOtu2pLAN", 133),
          ("ifTypeOtu2p", 134),
          ("ifTypeUpMep", 135),
          ("ifTypeOtdrCh", 136),
          ("ifTypeMaNet", 137),
          ("ifTypeMaComp", 138),
          ("ifTypeBridge", 139),
          ("ifType1000BaseT", 140),
          ("ifTypeOtu2E", 141),
          ("ifTypeOtu1E", 142),
          ("ifTypeOtu2F", 143),
          ("ifTypeF11049", 144),
          ("ifTypeLifteNum", 145),
          ("ifTypeLifteUnn", 146),
          ("ifTypeLifPbNum", 147),
          ("ifTypeLifSubUnn", 148),
          ("ifType5Gib", 149),
          ("ifTypeF5000", 150),
          ("ifTypeOtu2eEth", 151),
          ("ifTypeOdu0", 152),
          ("ifTypeFcu", 153),
          ("ifTypeOtu4", 154),
          ("ifType100GbE", 160),
          ("ifTypeOptical", 161),
          ("ifType10GbEWan", 162),
          ("ifType10GbELan", 163),
          ("ifTypeOduFlx", 164),
          ("ifTypeOtlc", 165),
          ("ifTypeOtu2ps", 167),
          ("ifTypeLifVTeNum", 173),
          ("ifTypeLifVTeUnn", 174),
          ("ifTypeF14025", 178))
    )



class FspR7InterfaceTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capIfTypeOtu1", 1),
          ("capIfTypeOtu2", 2),
          ("capIfType10GbE", 3),
          ("capIfTypeOc192", 4),
          ("capIfTypeOc48", 5),
          ("capIfTypeStm16", 6),
          ("capIfTypeStm64", 7),
          ("capIfType10GFC", 8),
          ("capIfTypeF1062", 10),
          ("capIfTypeF1250", 11),
          ("capIfTypeFC", 12),
          ("capIfTypeF125", 13),
          ("capIfTypeF200", 14),
          ("capIfTypeF9953", 15),
          ("capIfTypeF10312", 16),
          ("capIfTypeF10518", 17),
          ("capIfTypeF2488", 18),
          ("capIfTypeGfpF", 19),
          ("capIfTypeGfpT", 20),
          ("capIfTypeDccL", 21),
          ("capIfTypeDccS", 22),
          ("capIfTypeDccP", 23),
          ("capIfTypeOdu1", 24),
          ("capIfTypeGcc0", 25),
          ("capIfTypeGcc1", 26),
          ("capIfTypeGcc2", 27),
          ("capIfTypeoch", 28),
          ("capIfTypeOm", 29),
          ("capIfTypeOt", 34),
          ("capIfTypeE10or100bt", 36),
          ("capIfTypeE100fx", 37),
          ("capIfTypeCl", 38),
          ("capIfType2GFC", 39),
          ("capIfType2GCL", 40),
          ("capIfType1GbE", 41),
          ("capIfTypeEoc", 42),
          ("capIfTypeSwitch", 43),
          ("capIfTypePassive", 44),
          ("capIfTypeF2500", 45),
          ("capIfTypeSc", 46),
          ("capIfTypeUch", 47),
          ("capIfTypeF155", 48),
          ("capIfTypeF622", 49),
          ("capIfTypeF2125", 50),
          ("capIfTypeF2666", 51),
          ("capIfTypeF4250", 52),
          ("capIfTypeF10709", 54),
          ("capIfTypeF11095", 55),
          ("capIfTypeF11318", 56),
          ("capIfTypeLs", 57),
          ("capIfType4Gfc", 58),
          ("capIfTypeGcc0S", 59),
          ("capIfType2R", 60),
          ("capIfTypePppIp", 61),
          ("capIfTypeLanIp", 62),
          ("capIfTypeSerial", 64),
          ("capIfTypeModem", 65),
          ("capIfTypeAdapt", 66),
          ("capIfTypeAdaptd", 67),
          ("capIfTypeGBEFR", 69),
          ("capIfTypeVc4", 70),
          ("capIfTypeVc3", 71),
          ("capIfTypeSts1", 72),
          ("capIfTypeEdfa", 73),
          ("capIfTypeEdfaMid", 74),
          ("capIfType10Gdw", 75),
          ("capIfTypeOtu2Lan", 76),
          ("capIfTypeOtu1Lan", 77),
          ("capIfTypeOtu1Fc", 78),
          ("capIfTypeOtu1Fc2G", 79),
          ("capIfTypeF197", 80),
          ("capIfTypeTif", 81),
          ("capIfTypeSts3c", 82),
          ("capIfTypeVs1", 83),
          ("capIfType1GbETH", 84),
          ("capIfTypeStm1", 85),
          ("capIfTypeStm4", 86),
          ("capIfTypeOc3", 87),
          ("capIfTypeOc12", 88),
          ("capIfTypeOtu1Stm1", 89),
          ("capIfTypeOtu1Stm4", 90),
          ("capIfTypeF166", 91),
          ("capIfTypeF666", 92),
          ("capIfTypeI2C", 93),
          ("capIfTypeLifIP", 94),
          ("capIfTypeSts24c", 95),
          ("capIfTypeSts48c", 96),
          ("capIfTypeLifte", 97),
          ("capIfTypeRaman", 98),
          ("capIfTypeIpWhiteList", 99),
          ("capIfTypeOspfIp", 100),
          ("capIfTypeEncapIp", 101),
          ("capIfTypeOtu3", 102),
          ("capIfTypeStm256", 103),
          ("capIfTypeOc768", 104),
          ("capIfTypeF10664", 105),
          ("capIfTypeOdu2", 106),
          ("capIfTypeF39813", 107),
          ("capIfTypeVc4c8", 108),
          ("capIfTypeVc4c16", 109),
          ("capIfTypeF8500", 110),
          ("capIfTypePb", 111),
          ("capIfTypePolicer", 112),
          ("capIfTypeQueue", 113),
          ("capIfTypeFlowPoint", 114),
          ("capIfTypeLag", 115),
          ("capIfTypeElinePPP", 116),
          ("capIfTypeEtree", 117),
          ("capIfTypeEline", 118),
          ("capIfTypeElan", 119),
          ("capIfTypeCtrans", 120),
          ("capIfTypeVs0", 121),
          ("capIfTypeTug", 122),
          ("capIfTypeMd", 123),
          ("capIfTypeMa", 124),
          ("capIfTypeDownMep", 125),
          ("capIfTypeFMep", 126),
          ("capIfType8Gfc", 127),
          ("capIfType10Gib", 128),
          ("capIfTypeF10000", 129),
          ("capIfTypeOtu2pFC8", 130),
          ("capIfTypeOtu2pIB", 131),
          ("capIfTypeOtu2pFC", 132),
          ("capIfTypeOtu2pLAN", 133),
          ("capIfTypeOtu2p", 134),
          ("capIfTypeUpMep", 135),
          ("capIfTypeOtdrCh", 136),
          ("capIfTypeMaNet", 137),
          ("capIfTypeMaComp", 138),
          ("capIfTypeBridge", 139),
          ("capIfType1000BaseT", 140),
          ("capIfTypeOtu2E", 141),
          ("capIfTypeOtu1E", 142),
          ("capIfTypeOtu2F", 143),
          ("capIfTypeF11049", 144),
          ("capIfTypeLifteNum", 145),
          ("capIfTypeLifteUnn", 146),
          ("capIfTypeLifPbNum", 147),
          ("capIfTypeLifSubUnn", 148),
          ("capIfType5Gib", 149),
          ("capIfTypeF5000", 150),
          ("capIfTypeOtu2eEth", 151),
          ("capIfTypeOdu0", 152),
          ("capIfTypeFcu", 153),
          ("capIfTypeOtu4", 154),
          ("capIfType100GbE", 160),
          ("capIfTypeOptical", 161),
          ("capIfType10GbEWan", 162),
          ("capIfType10GbELan", 163),
          ("capIfTypeOduFlx", 164),
          ("capIfTypeOtlc", 165),
          ("capIfTypeOtu2ps", 167),
          ("capIfTypeLifVTeNum", 173),
          ("capIfTypeLifVTeUnn", 174),
          ("capIfTypeF14025", 178))
    )


class FspR7Integer32Caps(TextualConvention, OctetString):
    status = "current"
    displayHint = "4d:4d"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )



class FspR7InvertTelemetryInputLogic(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("almClosed", 1),
          ("almOpen", 2))
    )



class FspR7InvertTelemetryInputLogicCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAlmClosed", 1),
          ("capAlmOpen", 2))
    )


class FspR7IpType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("unnumbered", 1),
          ("numbered", 2))
    )



class FspR7IpTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capUnnumbered", 1),
          ("capNumbered", 2))
    )


class FspR7L2CacEnable(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7L2CacEnableCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2))
    )


class FspR7LacpMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("active", 1),
          ("passive", 2),
          ("disable", 3))
    )



class FspR7LacpModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capActive", 1),
          ("capPassive", 2),
          ("capDisable", 3))
    )


class FspR7LacpTimeout(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("advaExtraShort", 1),
          ("short", 2),
          ("long", 3))
    )



class FspR7LacpTimeoutCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAdvaExtraShort", 1),
          ("capShort", 2),
          ("capLong", 3))
    )


class FspR7LagFendState(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )



class FspR7LagIdFend(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )



class FspR7LagLoadBallanceSource(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("srcMac", 1),
          ("destMac", 2),
          ("srcDestMac", 3),
          ("srcIp", 4),
          ("destIp", 5),
          ("srcDestIp", 6),
          ("vlanId", 7))
    )



class FspR7LagLoadBallanceSourceCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capSrcMac", 1),
          ("capDestMac", 2),
          ("capSrcDestMac", 3),
          ("capSrcIp", 4),
          ("capDestIp", 5),
          ("capSrcDestIp", 6),
          ("capVlanId", 7))
    )


class FspR7LagPorts(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 200),
    )



class FspR7LagPortType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("type1gb", 1),
          ("type10gb", 2))
    )



class FspR7LagPortTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capType1gb", 1),
          ("capType10gb", 2))
    )


class FspR7LagStandby(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 200),
    )



class FspR7LagState(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )



class FspR7LagSysIdFend(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )



class FspR7LaneGroupInventory(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("f19595f19520", 1),
          ("f19515f19440", 2),
          ("f19435f19360", 3),
          ("f19355f19280", 4),
          ("f19275f19200", 5),
          ("f19600f19200", 6),
          ("f19600f19125", 7))
    )



class FspR7LaneGroupInventoryCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capF19595f19520", 1),
          ("capF19515f19440", 2),
          ("capF19435f19360", 3),
          ("capF19355f19280", 4),
          ("capF19275f19200", 5),
          ("capF19600f19200", 6),
          ("capF19600f19125", 7))
    )


class FspR7LaserDelayTimer(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("disable", 1),
          ("enableLsrOffTm", 2),
          ("enableLsrOnTm", 3))
    )



class FspR7LaserDelayTimerCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capDisable", 1),
          ("capEnableLsrOffTm", 2),
          ("capEnableLsrOnTm", 3))
    )


class FspR7LaserForcedOperation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("opr", 2))
    )



class FspR7LaserForcedOperationCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capOpr", 2))
    )


class FspR7LaserOffDelayTime(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("del0ms", 1),
          ("del10ms", 2),
          ("del250ms", 3))
    )



class FspR7LaserOffDelayTimeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capDel0ms", 1),
          ("capDel10ms", 2),
          ("capDel250ms", 3))
    )


class FspR7LineCoding(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              99)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("ookNrz", 1),
          ("dpsk", 2),
          ("qpsk", 3),
          ("dpQpsk", 4),
          ("odbPsbt", 5),
          ("mQam", 6),
          ("ofdm", 7),
          ("notDefined", 99))
    )



class FspR7LineCodingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capOokNrz", 1),
          ("capDpsk", 2),
          ("capQpsk", 3),
          ("capDpQpsk", 4),
          ("capOdbPsbt", 5),
          ("capMQam", 6),
          ("capOfdm", 7),
          ("capNotDefined", 99))
    )


class FspR7LossAttenuation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("opr", 2))
    )



class FspR7LossAttenuationCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capOpr", 2))
    )


class FspR7ManualAuto(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("manual", 1),
          ("automatic", 2))
    )



class FspR7ManualAutoCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capManual", 1),
          ("capAutomatic", 2))
    )


class FspR7Mapping(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("frame", 1),
          ("trans", 2))
    )



class FspR7MappingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capFrame", 1),
          ("capTrans", 2))
    )


class FspR7MaxBitErrorRate(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("ber1e2", 1),
          ("ber1e3", 2),
          ("ber1e4", 3),
          ("ber1e5", 4),
          ("ber1e6", 5),
          ("ber1e7", 6),
          ("ber1e8", 7),
          ("ber1e9", 8),
          ("ber1e10", 9),
          ("ber1e11", 10),
          ("ber1e12", 11),
          ("ber1e13", 12),
          ("ber1e14", 13),
          ("ber1e15", 14))
    )



class FspR7MaxBitErrorRateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBer1e2", 1),
          ("capBer1e3", 2),
          ("capBer1e4", 3),
          ("capBer1e5", 4),
          ("capBer1e6", 5),
          ("capBer1e7", 6),
          ("capBer1e8", 7),
          ("capBer1e9", 8),
          ("capBer1e10", 9),
          ("capBer1e11", 10),
          ("capBer1e12", 11),
          ("capBer1e13", 12),
          ("capBer1e14", 13),
          ("capBer1e15", 14))
    )


class FspR7ModeDbInit(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("restore", 2),
          ("startUpDefault", 3),
          ("startUpEqpt", 4))
    )



class FspR7Model(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("fsp3000R7", 1),
          ("flashwave74200", 2),
          ("ots1000", 3))
    )



class FspR7ModusLastRestart(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("reload", 1),
          ("cold", 2),
          ("warm", 3))
    )



class FspR7MonLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("phys", 1),
          ("otnOtu", 2),
          ("otnOdu", 3),
          ("otnOpu", 4),
          ("sonetSection", 5),
          ("sonetLine", 6),
          ("sonetPath", 7),
          ("pcs", 8))
    )



class FspR7NCTraceId(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("id1", 1),
          ("id2", 2),
          ("id3", 3),
          ("id4", 4),
          ("id5", 5),
          ("id6", 6),
          ("id7", 7),
          ("id8", 8))
    )



class FspR7NCTRouteType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("fiber", 2),
          ("cable", 3),
          ("backPlane", 4),
          ("equipment", 5),
          ("provisioned", 6))
    )



class FspR7NeType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("wdm", 1))
    )



class FspR7NodeId(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("tid", 1),
          ("ip", 2))
    )



class FspR7NodeIdCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capTid", 1),
          ("capIp", 2))
    )


class FspR7NoYes(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("no", 1),
          ("yes", 2))
    )



class FspR7NoYesCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNo", 1),
          ("capYes", 2))
    )


class FspR7NtpAdminState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              6)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("is", 2),
          ("dsbld", 6))
    )



class FspR7NtpMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("ntpOff", 1),
          ("ntpClientOnly", 2),
          ("ntpServerOnly", 3),
          ("ntpRelay", 4))
    )



class FspR7NtpServerStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("unreachable", 1),
          ("reachable", 2))
    )



class FspR7NtpSyncStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("noData", 1),
          ("systemPeer", 2),
          ("falseTicker", 3),
          ("candidate", 4),
          ("discarded", 5),
          ("inProgress", 6),
          ("notApplicable", 7))
    )



class FspR7NtpTest(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("ntpTest", 2))
    )



class FspR7NtpTestStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("success", 1),
          ("fail", 2),
          ("idle", 3),
          ("inProgress", 4))
    )



class FspR7NumberOfChannels(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("channels20", 1),
          ("channels40", 2),
          ("channels80", 3),
          ("channels96", 4))
    )



class FspR7NumberOfChannelsCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capChannels20", 1),
          ("capChannels40", 2),
          ("capChannels80", 3),
          ("capChannels96", 4))
    )


class FspR7OdtuType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("odtu01", 1),
          ("odtu12", 2),
          ("odtu2dsh1", 3),
          ("odtu2dshTS", 4),
          ("odtu13", 5),
          ("odtu23", 6),
          ("odtu3dsh1", 7),
          ("odtu3dsh9", 8),
          ("odtu3dshTS", 9),
          ("odtu4dsh1", 10),
          ("odtu4dsh2", 11),
          ("odtu4dsh8", 12),
          ("odtu4dsh31", 13),
          ("odtu4dshTS", 14))
    )



class FspR7OdtuTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capOdtu01", 1),
          ("capOdtu12", 2),
          ("capOdtu2dsh1", 3),
          ("capOdtu2dshTS", 4),
          ("capOdtu13", 5),
          ("capOdtu23", 6),
          ("capOdtu3dsh1", 7),
          ("capOdtu3dsh9", 8),
          ("capOdtu3dshTS", 9),
          ("capOdtu4dsh1", 10),
          ("capOdtu4dsh2", 11),
          ("capOdtu4dsh8", 12),
          ("capOdtu4dsh31", 13),
          ("capOdtu4dshTS", 14))
    )


class FspR7OperState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("nr", 1),
          ("anr", 2),
          ("out", 3),
          ("un", 4))
    )



class FspR7OpticalBand(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("bandC", 1),
          ("bandL", 2),
          ("bandA", 3),
          ("bandB", 4),
          ("bandCi", 5),
          ("bandCandCi", 6))
    )



class FspR7OpticalBandCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBandC", 1),
          ("capBandL", 2),
          ("capBandA", 3),
          ("capBandB", 4),
          ("capBandCi", 5),
          ("capBandCandCi", 6))
    )


class FspR7OpticalFiberType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("singleMode", 1),
          ("multiMode", 2),
          ("any", 3))
    )



class FspR7OpticalFiberTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capSingleMode", 1),
          ("capMultiMode", 2),
          ("capAny", 3))
    )


class FspR7OpticalGroup(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("d01d04", 1),
          ("d05d08", 2),
          ("d09d12", 3),
          ("d13d16", 4),
          ("d17d20", 5),
          ("d21d24", 6),
          ("d25d28", 7),
          ("d29d32", 8),
          ("d33d36", 9),
          ("d37d40", 10),
          ("d41d44", 11),
          ("d45d48", 12),
          ("d49d52", 13),
          ("d53d56", 14),
          ("d57d60", 15),
          ("d61d64", 16),
          ("f19590f19560", 17),
          ("f19550f19520", 18),
          ("f19510f19480", 19),
          ("f19470f19440", 20),
          ("f19430f19400", 21),
          ("f19390f19360", 22),
          ("f19350f19320", 23),
          ("f19310f19280", 24),
          ("f19270f19240", 25),
          ("f19230f19200", 26),
          ("f19590f19520", 27),
          ("f19510f19440", 28),
          ("f19430f19360", 29),
          ("f19350f19280", 30),
          ("f19270f19200", 31))
    )



class FspR7OpticalGroupCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capD01d04", 1),
          ("capD05d08", 2),
          ("capD09d12", 3),
          ("capD13d16", 4),
          ("capD17d20", 5),
          ("capD21d24", 6),
          ("capD25d28", 7),
          ("capD29d32", 8),
          ("capD33d36", 9),
          ("capD37d40", 10),
          ("capD41d44", 11),
          ("capD45d48", 12),
          ("capD49d52", 13),
          ("capD53d56", 14),
          ("capD57d60", 15),
          ("capD61d64", 16),
          ("capF19590f19560", 17),
          ("capF19550f19520", 18),
          ("capF19510f19480", 19),
          ("capF19470f19440", 20),
          ("capF19430f19400", 21),
          ("capF19390f19360", 22),
          ("capF19350f19320", 23),
          ("capF19310f19280", 24),
          ("capF19270f19240", 25),
          ("capF19230f19200", 26),
          ("capF19590f19520", 27),
          ("capF19510f19440", 28),
          ("capF19430f19360", 29),
          ("capF19350f19280", 30),
          ("capF19270f19200", 31))
    )


class FspR7OpticalInterfaceReach(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5,
              6,
              7,
              8,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("intra", 1),
          ("short", 2),
          ("long", 4),
          ("vlong", 5),
          ("ulong", 6),
          ("reg", 7),
          ("xlong", 8),
          ("longn", 10),
          ("extended", 11),
          ("hyperlong", 12),
          ("longNR", 13),
          ("ulongHaul", 14))
    )



class FspR7OpticalInterfaceReachCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capIntra", 1),
          ("capShort", 2),
          ("capLong", 4),
          ("capVlong", 5),
          ("capUlong", 6),
          ("capReg", 7),
          ("capXlong", 8),
          ("capLongn", 10),
          ("capExtended", 11),
          ("capHyperlong", 12),
          ("capLongNR", 13),
          ("capUlongHaul", 14))
    )


class FspR7OpticalLanes(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("lanesNumber4", 1))
    )



class FspR7OpticalMultiplexLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("levelOm1D", 1),
          ("levelOm1C", 2),
          ("levelOm4D", 3),
          ("levelOm4C", 4),
          ("levelOm16D", 5),
          ("levelOm32D", 6),
          ("levelOm40D", 7),
          ("levelOmC", 9),
          ("levelOmD", 10),
          ("levelOtD", 11),
          ("levelOtC", 12),
          ("levelOt", 13))
    )



class FspR7OpticalSubBand(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("d01d16", 1),
          ("d17d32", 2),
          ("d33d48", 3),
          ("d49d64", 4))
    )



class FspR7OpticalSubBandCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capD01d16", 1),
          ("capD17d32", 2),
          ("capD33d48", 3),
          ("capD49d64", 4))
    )


class FspR7OpuPayloadType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("pt01", 1),
          ("pt02", 2),
          ("pt03", 3),
          ("pt04", 4),
          ("pt05", 5),
          ("pt06", 6),
          ("pt07", 7),
          ("pt08", 8),
          ("pt09", 9),
          ("pt0A", 10),
          ("pt0B", 11),
          ("pt0C", 12),
          ("pt0D", 13),
          ("pt0E", 14),
          ("pt0F", 15),
          ("pt10", 16),
          ("pt11", 17),
          ("pt20", 18),
          ("pt21", 19),
          ("pt80", 20),
          ("pt81", 21),
          ("pt82", 22),
          ("pt83", 23),
          ("pt84", 24),
          ("pt85", 25),
          ("pt86", 26),
          ("pt87", 27),
          ("pt88", 28),
          ("pt89", 29),
          ("pt8A", 30),
          ("pt8B", 31),
          ("pt8C", 32),
          ("pt8D", 33),
          ("pt8E", 34),
          ("pt8F", 35),
          ("ptFD", 36),
          ("ptFE", 37))
    )



class FspR7OpuPayloadTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capPt01", 1),
          ("capPt02", 2),
          ("capPt03", 3),
          ("capPt04", 4),
          ("capPt05", 5),
          ("capPt06", 6),
          ("capPt07", 7),
          ("capPt08", 8),
          ("capPt09", 9),
          ("capPt0A", 10),
          ("capPt0B", 11),
          ("capPt0C", 12),
          ("capPt0D", 13),
          ("capPt0E", 14),
          ("capPt0F", 15),
          ("capPt10", 16),
          ("capPt11", 17),
          ("capPt20", 18),
          ("capPt21", 19),
          ("capPt80", 20),
          ("capPt81", 21),
          ("capPt82", 22),
          ("capPt83", 23),
          ("capPt84", 24),
          ("capPt85", 25),
          ("capPt86", 26),
          ("capPt87", 27),
          ("capPt88", 28),
          ("capPt89", 29),
          ("capPt8A", 30),
          ("capPt8B", 31),
          ("capPt8C", 32),
          ("capPt8D", 33),
          ("capPt8E", 34),
          ("capPt8F", 35),
          ("capPtFD", 36),
          ("capPtFE", 37))
    )


class FspR7OspfAreaType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("stub", 1),
          ("normal", 2))
    )



class FspR7OspfAreaTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capStub", 1),
          ("capNormal", 2))
    )


class FspR7OspfMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2),
          ("passive", 3))
    )



class FspR7OspfModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2),
          ("capPassive", 3))
    )


class FspR7OscChannel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              99,
              100,
              106,
              197)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("s1310", 99),
          ("s1630", 100),
          ("s1510", 106),
          ("s1610", 197))
    )



class FspR7OscChannelCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capS1310", 99),
          ("capS1630", 100),
          ("capS1510", 106),
          ("capS1610", 197))
    )


class FspR7OscUsage(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("osctxctrl", 2),
          ("oscrx", 3),
          ("osctxandrx", 4))
    )



class FspR7OscUsageCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capOsctxctrl", 2),
          ("capOscrx", 3),
          ("capOsctxandrx", 4))
    )


class FspR7OtdrPeriod(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("periodNone", 1),
          ("period5ms", 2),
          ("period20ms", 3),
          ("period40ms", 4),
          ("period60ms", 5))
    )



class FspR7Overwrite(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("no", 1),
          ("yes", 2))
    )



class FspR7PacketsLayer(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("lambda", 1),
          ("fiber", 2),
          ("tdm", 3),
          ("psc1", 4),
          ("psc2", 5),
          ("psc3", 6),
          ("psc4", 7),
          ("l2sc", 8),
          ("ethSvlan", 9),
          ("unspecified", 10),
          ("subLsc", 11),
          ("dcsc", 12),
          ("otn", 13))
    )



class FspR7PacketsLayerCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capLambda", 1),
          ("capFiber", 2),
          ("capTdm", 3),
          ("capPsc1", 4),
          ("capPsc2", 5),
          ("capPsc3", 6),
          ("capPsc4", 7),
          ("capL2sc", 8),
          ("capEthSvlan", 9),
          ("capUnspecified", 10),
          ("capSubLsc", 11),
          ("capDcsc", 12),
          ("capOtn", 13))
    )


class FspR7ParityBit(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("no", 1))
    )



class FspR7PathNode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("node1", 1),
          ("node2", 2),
          ("node3", 3),
          ("node4", 4),
          ("node5", 5),
          ("node6", 6),
          ("node7", 7),
          ("node8", 8),
          ("node9", 9),
          ("node10", 10),
          ("node11", 11),
          ("node12", 12),
          ("node13", 13),
          ("node14", 14),
          ("node15", 15),
          ("node16", 16),
          ("node17", 17),
          ("node18", 18),
          ("node19", 19),
          ("node20", 20),
          ("node21", 21),
          ("node22", 22),
          ("node23", 23),
          ("node24", 24),
          ("node25", 25),
          ("node26", 26),
          ("node27", 27),
          ("node28", 28),
          ("node29", 29),
          ("node30", 30),
          ("node31", 31),
          ("node32", 32),
          ("node33", 33),
          ("node34", 34),
          ("node35", 35),
          ("node36", 36),
          ("node37", 37),
          ("node38", 38),
          ("node39", 39),
          ("node40", 40),
          ("node41", 41),
          ("node42", 42),
          ("node43", 43),
          ("node44", 44),
          ("node45", 45),
          ("node46", 46),
          ("node47", 47),
          ("node48", 48),
          ("node49", 49),
          ("node50", 50),
          ("node51", 51),
          ("node52", 52),
          ("node53", 53),
          ("node54", 54),
          ("node55", 55),
          ("node56", 56),
          ("node57", 57),
          ("node58", 58),
          ("node59", 59),
          ("node60", 60),
          ("node61", 61),
          ("node62", 62),
          ("node63", 63),
          ("node64", 64),
          ("node65", 65),
          ("node66", 66),
          ("node67", 67),
          ("node68", 68),
          ("node69", 69),
          ("node70", 70),
          ("node71", 71),
          ("node72", 72),
          ("node73", 73),
          ("node74", 74),
          ("node75", 75),
          ("node76", 76),
          ("node77", 77),
          ("node78", 78),
          ("node79", 79),
          ("node80", 80),
          ("node81", 81),
          ("node82", 82),
          ("node83", 83),
          ("node84", 84),
          ("node85", 85),
          ("node86", 86),
          ("node87", 87),
          ("node88", 88),
          ("node89", 89),
          ("node90", 90),
          ("node91", 91),
          ("node92", 92),
          ("node93", 93),
          ("node94", 94),
          ("node95", 95),
          ("node96", 96),
          ("node97", 97),
          ("node98", 98),
          ("node99", 99),
          ("node100", 100),
          ("node101", 101),
          ("node102", 102),
          ("node103", 103),
          ("node104", 104),
          ("node105", 105),
          ("node106", 106),
          ("node107", 107),
          ("node108", 108),
          ("node109", 109),
          ("node110", 110),
          ("node111", 111),
          ("node112", 112),
          ("node113", 113),
          ("node114", 114),
          ("node115", 115),
          ("node116", 116),
          ("node117", 117),
          ("node118", 118))
    )



class FspR7PathNodeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNode1", 1),
          ("capNode2", 2),
          ("capNode3", 3),
          ("capNode4", 4),
          ("capNode5", 5),
          ("capNode6", 6),
          ("capNode7", 7),
          ("capNode8", 8),
          ("capNode9", 9),
          ("capNode10", 10),
          ("capNode11", 11),
          ("capNode12", 12),
          ("capNode13", 13),
          ("capNode14", 14),
          ("capNode15", 15),
          ("capNode16", 16),
          ("capNode17", 17),
          ("capNode18", 18),
          ("capNode19", 19),
          ("capNode20", 20),
          ("capNode21", 21),
          ("capNode22", 22),
          ("capNode23", 23),
          ("capNode24", 24),
          ("capNode25", 25),
          ("capNode26", 26),
          ("capNode27", 27),
          ("capNode28", 28),
          ("capNode29", 29),
          ("capNode30", 30),
          ("capNode31", 31),
          ("capNode32", 32),
          ("capNode33", 33),
          ("capNode34", 34),
          ("capNode35", 35),
          ("capNode36", 36),
          ("capNode37", 37),
          ("capNode38", 38),
          ("capNode39", 39),
          ("capNode40", 40),
          ("capNode41", 41),
          ("capNode42", 42),
          ("capNode43", 43),
          ("capNode44", 44),
          ("capNode45", 45),
          ("capNode46", 46),
          ("capNode47", 47),
          ("capNode48", 48),
          ("capNode49", 49),
          ("capNode50", 50),
          ("capNode51", 51),
          ("capNode52", 52),
          ("capNode53", 53),
          ("capNode54", 54),
          ("capNode55", 55),
          ("capNode56", 56),
          ("capNode57", 57),
          ("capNode58", 58),
          ("capNode59", 59),
          ("capNode60", 60),
          ("capNode61", 61),
          ("capNode62", 62),
          ("capNode63", 63),
          ("capNode64", 64),
          ("capNode65", 65),
          ("capNode66", 66),
          ("capNode67", 67),
          ("capNode68", 68),
          ("capNode69", 69),
          ("capNode70", 70),
          ("capNode71", 71),
          ("capNode72", 72),
          ("capNode73", 73),
          ("capNode74", 74),
          ("capNode75", 75),
          ("capNode76", 76),
          ("capNode77", 77),
          ("capNode78", 78),
          ("capNode79", 79),
          ("capNode80", 80),
          ("capNode81", 81),
          ("capNode82", 82),
          ("capNode83", 83),
          ("capNode84", 84),
          ("capNode85", 85),
          ("capNode86", 86),
          ("capNode87", 87),
          ("capNode88", 88),
          ("capNode89", 89),
          ("capNode90", 90),
          ("capNode91", 91),
          ("capNode92", 92),
          ("capNode93", 93),
          ("capNode94", 94),
          ("capNode95", 95),
          ("capNode96", 96),
          ("capNode97", 97),
          ("capNode98", 98),
          ("capNode99", 99),
          ("capNode100", 100),
          ("capNode101", 101),
          ("capNode102", 102),
          ("capNode103", 103),
          ("capNode104", 104),
          ("capNode105", 105),
          ("capNode106", 106),
          ("capNode107", 107),
          ("capNode108", 108),
          ("capNode109", 109),
          ("capNode110", 110),
          ("capNode111", 111),
          ("capNode112", 112),
          ("capNode113", 113),
          ("capNode114", 114),
          ("capNode115", 115),
          ("capNode116", 116),
          ("capNode117", 117),
          ("capNode118", 118))
    )


class FspR7PceMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("optimalTe", 1),
          ("osnrConstr", 2),
          ("optimalOsnr", 3))
    )



class FspR7PceModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capOptimalTe", 1),
          ("capOsnrConstr", 2),
          ("capOptimalOsnr", 3))
    )


class FspR7PlugDataRate(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rateCouplingLink", 1),
          ("rateHighSpeed", 2),
          ("rateGBe", 3),
          ("rate2G1", 4),
          ("rate2G5", 5),
          ("rate4G", 6),
          ("rate10G", 7),
          ("any", 8),
          ("rate11G", 9),
          ("rateFE", 10),
          ("rate10G2R", 11),
          ("rate8G", 12),
          ("rate103G", 13),
          ("rate112G", 14),
          ("rate16G", 15),
          ("rate3gSdi", 16))
    )



class FspR7PlugDataRateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRateCouplingLink", 1),
          ("capRateHighSpeed", 2),
          ("capRateGBe", 3),
          ("capRate2G1", 4),
          ("capRate2G5", 5),
          ("capRate4G", 6),
          ("capRate10G", 7),
          ("capAny", 8),
          ("capRate11G", 9),
          ("capRateFE", 10),
          ("capRate10G2R", 11),
          ("capRate8G", 12),
          ("capRate103G", 13),
          ("capRate112G", 14),
          ("capRate16G", 15),
          ("capRate3gSdi", 16))
    )


class FspR7PmSnapshotParameterTypes(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("outputPower", 1),
          ("inputPower", 2),
          ("attenuation", 3),
          ("attenuationOfVoa", 4),
          ("oscGain", 5),
          ("backreflectionPowerReceived", 6),
          ("ramanPumpPower", 7),
          ("oscPowerReceived", 8),
          ("variableGain", 9),
          ("txLineAttenuation", 10),
          ("rxLineAttenuation", 11))
    )



class FspR7PmReset(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("all", 2),
          ("curr", 3))
    )



class FspR7PmResetCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capAll", 2),
          ("capCurr", 3))
    )


class FspR7PmSnapshotStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("inProgress", 2),
          ("success", 3),
          ("error", 4))
    )



class FspR7PortBehaviour(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("client", 1),
          ("network", 2))
    )



class FspR7PortBehaviourCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capClient", 1),
          ("capNetwork", 2))
    )


class FspR7PortMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("port", 1),
          ("cTag", 2),
          ("sTag", 3))
    )



class FspR7PortModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capPort", 1),
          ("capCTag", 2),
          ("capSTag", 3))
    )


class FspR7PortRole(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("uni", 1),
          ("i-nni", 2),
          ("nni", 3))
    )



class FspR7PortRoleCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capUni", 1),
          ("capI-nni", 2),
          ("capNni", 3))
    )


class FspR7PrbsPmReset(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("all", 2))
    )



class FspR7PrbsPmResetCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capAll", 2))
    )


class FspR7PreferredFacilityType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("sdh", 1),
          ("sonet", 2))
    )



class FspR7PreferredFacilityTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capSdh", 1),
          ("capSonet", 2))
    )


class FspR7ProfileCmd(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("idle", 1),
          ("copyToRdisk", 2),
          ("copyToPdisk", 3))
    )



class FspR7ProfileType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("ech", 1),
          ("mod", 2))
    )



class FspR7ProtectionRole(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("wkg", 1),
          ("protn", 2),
          ("na", 3))
    )



class FspR7ProtectionType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("dpring", 1),
          ("line", 2))
    )



class FspR7ProtectionTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capDpring", 1),
          ("capLine", 2))
    )


class FspR7Protocol(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("local", 1),
          ("static", 2),
          ("ospf", 3))
    )



class FspR7PsuOutputPower(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("pwrOut120w", 1),
          ("pwrOut130w", 2),
          ("pwrOut400w", 3),
          ("pwrOut600w", 4),
          ("pwrOut170w", 5),
          ("pwrOut200w", 6),
          ("pwrOut1000w", 7),
          ("pwrOut0w", 8),
          ("pwrOut800w", 9),
          ("pwrOut150w", 10))
    )



class FspR7PsuOutputPowerCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capPwrOut120w", 1),
          ("capPwrOut130w", 2),
          ("capPwrOut400w", 3),
          ("capPwrOut600w", 4),
          ("capPwrOut170w", 5),
          ("capPwrOut200w", 6),
          ("capPwrOut1000w", 7),
          ("capPwrOut0w", 8),
          ("capPwrOut800w", 9),
          ("capPwrOut150w", 10))
    )


class FspR7RedLinedState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7RedLinedStateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capYes", 1),
          ("capNo", 2))
    )


class FspR7RemoteAlarmPath(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("curr", 1),
          ("nonCurr", 2))
    )



class FspR7RemoteAlarmType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("out", 1),
          ("outAndOscDown", 2))
    )



class FspR7RemoteAuth(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("radius", 2))
    )



class FspR7RemoteAuthCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNone", 1),
          ("capRadius", 2))
    )


class FspR7ResetRfi(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("resetRfi", 2))
    )



class FspR7ResetRfiCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capResetRfi", 2))
    )


class FspR7RoadmNumber(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rNo1", 1),
          ("rNo2", 2),
          ("rNo3", 3),
          ("rNo4", 4),
          ("rNo5", 5),
          ("rNo6", 6),
          ("rNo7", 7),
          ("rNo8", 8))
    )



class FspR7RoadmNumberCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRNo1", 1),
          ("capRNo2", 2),
          ("capRNo3", 3),
          ("capRNo4", 4),
          ("capRNo5", 5),
          ("capRNo6", 6),
          ("capRNo7", 7),
          ("capRNo8", 8))
    )


class FspR7RouteRedist(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("static", 2))
    )



class FspR7RowStatusCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capActive", 1),
          ("capNotInService", 2),
          ("capNotReady", 3),
          ("capCreateAndGo", 4),
          ("capCreateAndWait", 5),
          ("capDestroy", 6))
    )


class FspR7Scrambling(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7ScramblingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2))
    )


class FspR7ScuDbBackup(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7ScuRing(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7ScuRingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capEnable", 1),
          ("capDisable", 2))
    )


class FspR7SecurityMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("basic", 1),
          ("enhanced", 2))
    )



class FspR7SecurityModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBasic", 1),
          ("capEnhanced", 2))
    )


class FspR7SecurityName(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("readOnly", 1),
          ("readWrite", 2))
    )



class FspR7SessionStatus(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("active", 1),
          ("inactive", 2))
    )



class FspR7SessionStatusCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capActive", 1),
          ("capInactive", 2))
    )


class FspR7SignalDirection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("networkToClient", 1),
          ("cientToNetwork", 2),
          ("upgradeToNetwork", 3),
          ("networkToUpgrade", 4))
    )



class FspR7SignalMapping(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("gfp", 1),
          ("proprietary", 2))
    )



class FspR7SignalMappingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capGfp", 1),
          ("capProprietary", 2))
    )


class FspR7SingleFiberLocation(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("locationA", 1),
          ("locationB", 2))
    )



class FspR7SingleFiberLocationCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capLocationA", 1),
          ("capLocationB", 2))
    )


class FspR7SnmpHexString(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )



class FspR7SnmpLongString(TextualConvention, OctetString):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 65535),
    )



class FspR7SnmpPrivLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("admin", 1),
          ("provision", 2),
          ("operator", 3),
          ("monitor", 4),
          ("crypto", 5))
    )



class FspR7SnmpPrivLevelCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAdmin", 1),
          ("capProvision", 2),
          ("capOperator", 3),
          ("capMonitor", 4),
          ("capCrypto", 5))
    )


class FspR7SnmpSecuLevel(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("noAuthNoPriv", 1),
          ("authNoPriv", 2),
          ("authPriv", 3))
    )



class FspR7SnmpSecuLevelCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNoAuthNoPriv", 1),
          ("capAuthNoPriv", 2),
          ("capAuthPriv", 3))
    )


class FspR7SshDeamon(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("enable", 1),
          ("disable", 2))
    )



class FspR7SshHostKeyEncryptAlgorithm(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rsa", 1),
          ("dsa", 2),
          ("rsa1", 3))
    )



class FspR7SshHostKeyEncryptAlgorithmCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRsa", 1),
          ("capDsa", 2),
          ("capRsa1", 3))
    )


class FspR7Stages(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("st1", 1),
          ("st2", 2))
    )



class FspR7StandingConditionTypes(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1007,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1026,
              1030,
              1031,
              1034,
              1037,
              1040,
              1041,
              1043,
              1045,
              1047,
              1048,
              1049,
              1050,
              1051,
              1052,
              1053,
              1054,
              1055,
              1056,
              1057,
              1058,
              1059,
              1060,
              1061,
              1062,
              1063,
              1064,
              1065,
              1066,
              1067,
              1068,
              1069,
              1070,
              1071,
              1072,
              1073,
              1074,
              1075,
              1076,
              1077,
              1078,
              1079,
              1080,
              1081,
              1083,
              1084,
              1085,
              1086,
              1087,
              1088,
              1089,
              1090,
              1091,
              1092,
              1093,
              1095,
              1096,
              1097,
              1098,
              1099,
              1100,
              1101,
              1105,
              1106,
              1107,
              1108,
              1109,
              1110,
              1111,
              1112,
              1113,
              1114,
              1115,
              1116,
              1117,
              1118,
              1119,
              1121,
              1122,
              1123,
              1124,
              1125,
              1126,
              1127,
              1128,
              1129,
              1130,
              1131,
              1132,
              1133,
              1134,
              1135,
              1136,
              1137,
              1138,
              1139,
              1142,
              1147,
              1148,
              1149,
              1150,
              1151,
              1152,
              1153,
              1154,
              1155,
              1156,
              1157,
              1158,
              1159,
              1160,
              1161,
              1162,
              1165,
              1166,
              1167,
              1168,
              1169,
              1170,
              1171,
              1172,
              1173,
              1174,
              1175,
              1176,
              1177,
              1178,
              1179,
              1180,
              1181,
              1182,
              1183,
              1184,
              1185,
              1186,
              1187,
              1188,
              1189,
              1190,
              1191,
              1192,
              1193,
              1194,
              1195,
              1196,
              1197,
              1198,
              1199,
              1200,
              1201,
              1202,
              1203,
              1204,
              1205,
              1206,
              1207,
              1208,
              1209,
              1210,
              1211,
              1212,
              1213,
              1214,
              1215,
              1216,
              1217,
              1218,
              1219,
              1220,
              1221,
              1222,
              1223,
              1224,
              1225,
              1226,
              1227,
              1228,
              1229,
              1230,
              1231,
              1232,
              1233,
              1234,
              1235,
              1236,
              1237,
              1238,
              1239,
              1240,
              1241,
              1242,
              1243,
              1244,
              1245,
              1246,
              1247,
              1248,
              1249,
              1250,
              1251,
              1252,
              1253,
              1254,
              1255,
              1256,
              1257,
              1258,
              1259,
              1260,
              1261,
              1262,
              1263,
              1264,
              1266,
              1267,
              1268,
              1269,
              1270,
              1271,
              1272,
              1273,
              1274,
              1275,
              1276,
              1277,
              1278,
              1279,
              1280,
              1281,
              1282,
              1283,
              1284,
              1285,
              1286,
              1287,
              1288,
              1289,
              1301,
              1302,
              1303,
              1304,
              1305,
              1306,
              1307,
              1308,
              1309,
              1310,
              1311,
              1312,
              1313,
              1315,
              1316,
              1317,
              1320,
              1321,
              1322,
              1325,
              1326,
              1327,
              1328,
              1329,
              1330,
              1331,
              1335,
              1336,
              1337,
              1338,
              1339,
              1340,
              1341,
              1342,
              1343,
              1344,
              1345,
              1346,
              1350,
              1351,
              1352,
              1353,
              1354,
              1355,
              1356,
              1380,
              1381,
              1385,
              1386,
              1387,
              1388,
              1389,
              1390,
              1391,
              1392,
              1393,
              1394,
              1395,
              1396,
              1397,
              1398,
              1399,
              1400,
              1401,
              1402,
              1403,
              1404,
              1405,
              1406,
              1407,
              1408,
              1409,
              1410,
              1412,
              1413,
              1414,
              1415,
              1416,
              1417,
              1418,
              1419,
              1420,
              1421,
              1422,
              1423,
              1424,
              1425,
              1426,
              1427,
              1428,
              1429,
              1430,
              1431,
              1432,
              1433,
              1434,
              1435,
              1436,
              1437,
              1438,
              1439,
              1440,
              1441,
              1442,
              1443,
              1444,
              1445,
              1446,
              1447,
              1448,
              1449,
              1450,
              1451,
              1456,
              1459)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("thirdPartyPlug", 1001),
          ("facilityLoopback", 1002),
          ("terminalLoopback", 1003),
          ("facilityForcedOn", 1004),
          ("oosDisabled", 1005),
          ("receiverDisabled", 1006),
          ("transmitterDisabledOff", 1007),
          ("transmittedDisabledIdle", 1008),
          ("transmitterDisabledAis", 1009),
          ("transmitterDisabledEpc", 1010),
          ("oosManagement", 1011),
          ("oosMaintenance", 1012),
          ("oosAins", 1013),
          ("dcnCommunicationFail", 1014),
          ("removed", 1015),
          ("mismatch", 1016),
          ("equipmentNotAccepted", 1017),
          ("facilityDataRateNotSupported", 1018),
          ("equipmentNotSupportedByPhysicalLayer", 1019),
          ("equipmentNotApproved", 1020),
          ("equipmentMismatch", 1021),
          ("powerMissing", 1026),
          ("temperatureTooLow", 1030),
          ("temperatureTooHigh", 1031),
          ("lossOfSignal", 1034),
          ("lossOfReceiverClockRecovery", 1037),
          ("laserFailure", 1040),
          ("switchFailed", 1041),
          ("autoShutdownLaserOffDueToErrFwd", 1043),
          ("autoShutdownAls", 1045),
          ("thermoElectricCoolerEndOfLife", 1047),
          ("opticalInputPwrReceivedTooLow", 1048),
          ("opticalInputPwrReceivedTooHigh", 1049),
          ("laserTemperatureTooHigh", 1050),
          ("laserTemperatureTooLow", 1051),
          ("opticalOutputPowerTransmittedTooLow", 1052),
          ("opticalOutputPowerTransmittedTooHigh", 1053),
          ("laserBiasCurrentNormalizedtooHigh", 1054),
          ("lossOfSignalTransmitter", 1055),
          ("attOnReceiverFiberLowerThanMonitor", 1056),
          ("attOnReceiverFiberHigherThanMonitor", 1057),
          ("attOnTransmitterFiberLowerThanMonitor", 1058),
          ("attOnTransmitterFiberHigherThanMonitor", 1059),
          ("autoShutdownSendingAisOtu", 1060),
          ("lossOfFrameOtu", 1061),
          ("lossOfMultiFrameOtu", 1062),
          ("alarmIndicationSignalOtu", 1063),
          ("signalDegradeOtu", 1064),
          ("backwardDefectIndicationOtu", 1065),
          ("autoShutdownSendingAisOdu", 1066),
          ("lossOfFrameLossOfMultiFrameOdu", 1067),
          ("alarmIndicationSignalOdu", 1068),
          ("openConnectionIndicationOdu", 1069),
          ("lockedDefectOdu", 1070),
          ("signalDegradeOdu", 1071),
          ("backwardDefectIndicationOdu", 1072),
          ("alarmIndicationSignalOduTcmA", 1073),
          ("openConnectionIndicationOduTcmA", 1074),
          ("lockedDefectOduTcmA", 1075),
          ("lossofTandemConnectionOduTcmA", 1076),
          ("signalDegradeOduTcmA", 1077),
          ("backwardDefectIndicationOduTcmA", 1078),
          ("payloadMismatchOPU", 1079),
          ("multiplexStructureIdentifierMismatchOPU", 1080),
          ("lossOfFrame", 1081),
          ("autoShutdownSendingAisLine", 1083),
          ("alarmIndicationSignalLine", 1084),
          ("remoteDefectIndicationLine", 1085),
          ("signalDegradeLine", 1086),
          ("alarmIndicationSignalHigherOrderPath", 1087),
          ("lossOfPointerHigherOrderPath", 1088),
          ("lossofMultiframeHigherOrderPath", 1089),
          ("lossofSequenceHigherOrderPath", 1090),
          ("unequippedHigherOrderPath", 1091),
          ("payloadMismatchHigherOrderPath", 1092),
          ("remoteDefectIndicationHigherOrderPath", 1093),
          ("alarmIndicationSignalLowerOrderPath", 1095),
          ("lossOfPointerLowerOrderPath", 1096),
          ("lossofMultiframeLowerOrderPath", 1097),
          ("lossofSequenceLowerOrderPath", 1098),
          ("unequippedLowerOrderPath", 1099),
          ("payloadMismatchLowerOrderPath", 1100),
          ("remoteDefectIndicationLowerOrderPath", 1101),
          ("autoShutdownSendingEPC", 1105),
          ("thres15MinExceededPhysConvES", 1106),
          ("thres15MinExceededPhysConvCV", 1107),
          ("thres15MinExceededPhysConvDE", 1108),
          ("thres15MinExceededPhysConvCVDE", 1109),
          ("lossOfGfpFrame", 1110),
          ("payloadMismatchGfp", 1111),
          ("gfpLossOfClientSig", 1112),
          ("lossOfCharSyncFromFarEnd", 1113),
          ("switchtoProtectionInhibited", 1114),
          ("switchtoWorkingInhibited", 1115),
          ("oTDRMeasuringinProgress", 1116),
          ("protectionNotAvailable", 1117),
          ("apsConfigMismatch", 1118),
          ("embeddedOperationsChannelFailure", 1119),
          ("signalDegradationonLinkVector", 1121),
          ("signalFailureonLinkVector", 1122),
          ("inputVoltageFailure", 1123),
          ("powerSupplyUnitFailure", 1124),
          ("currentTooLow", 1125),
          ("currentTooHigh", 1126),
          ("multipleFanFailure", 1127),
          ("singleFanFailure", 1128),
          ("linkDown", 1129),
          ("voltageOutOfRange", 1130),
          ("peerLink", 1131),
          ("hwFailure", 1132),
          ("alarmIndicationSignalOduTcmB", 1133),
          ("openConnectionIndicationOduTcmB", 1134),
          ("lockedDefectOduTcmB", 1135),
          ("lossofTandemConnectionOduTcmB", 1136),
          ("signalDegradeOduTcmB", 1137),
          ("backwardDefectIndicationOduTcmB", 1138),
          ("apsProtocolFailure", 1139),
          ("linkControlProtocolFailure", 1142),
          ("subModuleTempTooHigh", 1147),
          ("signalDegradeOlm", 1148),
          ("receiverOverloadProtection", 1149),
          ("lossOfFrameMux", 1150),
          ("lossOfFrameMuxFarEnd", 1151),
          ("lossOfCharSync", 1152),
          ("thres15MinExceededFecCE", 1153),
          ("thres15MinExceededFecUBE", 1154),
          ("thres15MinExceededFecES", 1155),
          ("thres15MinExceededFecSES", 1156),
          ("thres15MinExceededMuxES", 1157),
          ("thres15MinExceededMuxSES", 1158),
          ("thres15MinExceededGfpCHEC", 1159),
          ("thres15MinExceededGfpTHEC", 1160),
          ("thres15MinExceededGfpTHecDisc", 1161),
          ("thres15MinExceededGfpTsuperblockDisc", 1162),
          ("autoShutdownLaserOffDueToHighTemp", 1165),
          ("autoShutdownLaserOffDueToHighTxPwr", 1166),
          ("laserEndOfLife", 1167),
          ("laserBiasCurrAbnormal", 1168),
          ("opticalPowerTxLOS", 1169),
          ("midstageFault", 1170),
          ("farEndIpAddressUnknown", 1171),
          ("topologyDataCalculationInProgress", 1172),
          ("ntpServer1Unreachable", 1173),
          ("ntpServer2Unreachable", 1174),
          ("ntpServer3Unreachable", 1175),
          ("autoShutdownSendingAisOpu", 1176),
          ("alarmIndicationSignalOpu", 1177),
          ("alarmIndicationSignalOduTcmC", 1178),
          ("backwardDefectIndicationOduTcmC", 1179),
          ("lockedDefectOduTcmC", 1180),
          ("lossofTandemConnectionOduTcmC", 1181),
          ("openConnectionIndicationOduTcmC", 1182),
          ("signalDegradeOduTcmC", 1183),
          ("loopbackError", 1184),
          ("sectionTraceMismatch", 1185),
          ("traceIdentifierMismatchOtu", 1186),
          ("traceIdentifierMismatchOdu", 1187),
          ("traceIdentifierMismatchOduTcmA", 1188),
          ("traceIdentifierMismatchOduTcmC", 1189),
          ("traceIdentifierMismatchOduTcmB", 1190),
          ("databaseMismatch", 1191),
          ("databaseNcuMismatch", 1192),
          ("serverSignalFailureSectionRS", 1193),
          ("fwpMismatchDownloadServiceAffecting", 1194),
          ("fwpMismatchDownloadNotServiceAffecting", 1195),
          ("databaseVersionMismatch", 1196),
          ("clientFailForwarding", 1197),
          ("virtualChannelAis", 1198),
          ("serverSignalFailureVf", 1199),
          ("signalFailureOnLink", 1200),
          ("serverSignalFailureGfp", 1201),
          ("serverSignalFailurePath", 1202),
          ("gainTiltNotSettable", 1203),
          ("txPowerLimited", 1204),
          ("equalizationProgress", 1205),
          ("uPortFailure", 1206),
          ("autoShutdownBlock", 1207),
          ("serverSignalFailTx", 1208),
          ("payloadMismatch", 1209),
          ("voaControlFail", 1210),
          ("provisioningLocked", 1211),
          ("mansw", 1212),
          ("wtrTimerRunning", 1213),
          ("pcsSignalDegrade", 1214),
          ("alarmInputTIF", 1215),
          ("thres15MinExceededSonetSectES", 1216),
          ("thres15MinExceededSonetSectSES", 1217),
          ("thres15MinExceededSonetSectSEFS", 1218),
          ("thres15MinExceededSonetSectCV", 1219),
          ("thres15MinExceededSonetLineES", 1220),
          ("thres15MinExceededSonetLineSES", 1221),
          ("thres15MinExceededSonetLineCV", 1222),
          ("thres15MinExceededSonetLineUAS", 1223),
          ("thres15MinExceededOduTcmAES", 1224),
          ("thres15MinExceededOduTcmASES", 1225),
          ("thres15MinExceededOduTcmAUAS", 1226),
          ("thres15MinExceededOduTcmABbe", 1227),
          ("thres15MinExceededOduTcmBES", 1228),
          ("thres15MinExceededOduTcmBSES", 1229),
          ("thres15MinExceededOduTcmBUAS", 1230),
          ("thres15MinExceededOduTcmBBbe", 1231),
          ("thres15MinExceededOduTcmCES", 1232),
          ("thres15MinExceededOduTcmCSES", 1233),
          ("thres15MinExceededOduTcmCUAS", 1234),
          ("thres15MinExceededOduTcmCBbe", 1235),
          ("thres15MinExceededOtuES", 1236),
          ("thres15MinExceededOtuSES", 1237),
          ("thres15MinExceededOtuUAS", 1238),
          ("thres15MinExceededOtuBbe", 1239),
          ("thres15MinExceededOduES", 1240),
          ("thres15MinExceededOduSES", 1241),
          ("thres15MinExceededOduUAS", 1242),
          ("thres15MinExceededOduBbe", 1243),
          ("thresOptPowerCtrlFailureLow", 1244),
          ("thresOptPowerCtrlFailureHigh", 1245),
          ("dcnServerSignalFailure", 1246),
          ("maxPowerConsEquipModulesToHigh", 1247),
          ("maxPowerConsProvModulesToHigh", 1248),
          ("equipmentMismatchAllow", 1249),
          ("oosPrePostSig", 1250),
          ("oosPrePostSigInSetUpProcess", 1251),
          ("oosPrePostSigInTearDownProcess", 1252),
          ("cpTunnelModificationInProgess", 1253),
          ("capabilityLevelMismatch", 1254),
          ("oosPrePostSigEstablishFailed", 1255),
          ("oosPrePostSigAfterPrecompFailed", 1256),
          ("cpTunnelEstablishFailed", 1257),
          ("cpTunnelPrecompFailed", 1258),
          ("localFault", 1259),
          ("oscPwrTooHigh", 1260),
          ("oscPwrTooLow", 1261),
          ("aseTableBuild", 1262),
          ("aseTableNotAvailable", 1263),
          ("automaticPowerReduction", 1264),
          ("highBer", 1266),
          ("pumpLaser1TempTooHigh", 1267),
          ("pumpLaser1TempTooLow", 1268),
          ("pumpLaser2TempTooHigh", 1269),
          ("pumpLaser2TempTooLow", 1270),
          ("ospfIpServerNotAvailable", 1271),
          ("lossOsc", 1272),
          ("brPwrRxTooHigh", 1273),
          ("aseTableGenFailSignalinput", 1274),
          ("aseTableGenFailOscMissing", 1275),
          ("aseTableGenFailHighBackreflection", 1276),
          ("ramanPumpPwrTooHigh", 1277),
          ("ramanPumpPwrTooLow", 1278),
          ("autoPowerShutdown", 1279),
          ("aseTableGenFailLow", 1280),
          ("aseLow", 1281),
          ("configurableOpticalOutputPowerTransmittedTooHigh", 1282),
          ("configurableOpticalOutputPowerTransmittedTooLow", 1283),
          ("losAttProgress", 1284),
          ("aseTableGenProgress", 1285),
          ("signalDegradeScn", 1286),
          ("dispertionTunningCondition", 1287),
          ("turnupCondition", 1288),
          ("turnupFailed", 1289),
          ("faultOnOpm", 1301),
          ("optSignalFailure", 1302),
          ("opmAbnormalCondition", 1303),
          ("hwOprReachedHT", 1304),
          ("disabledChannelPowerTooHigh", 1305),
          ("lossOfSignalCPort", 1306),
          ("lossOfSignalNPort", 1307),
          ("serverSignalFailureODU", 1308),
          ("signalFailureOPU", 1309),
          ("serverSignalFail", 1310),
          ("serverSignalReduced", 1311),
          ("dispersionCompensationTooLow", 1312),
          ("dispersionCompensationTooHigh", 1313),
          ("farEndCommFailure", 1315),
          ("linkAttenuationTooLow", 1316),
          ("linkAttenuationTooHigh", 1317),
          ("entityOutageIndication", 1320),
          ("fiberConnectionMissing", 1321),
          ("farEndInformationMismatch", 1322),
          ("automaticPowerReductionForEyeSafety", 1325),
          ("lossOfPilotSignal", 1326),
          ("pumpLaser3TempTooHigh", 1327),
          ("pumpLaser3TempTooLow", 1328),
          ("pilotReceiveLevelHigh", 1329),
          ("autoShutdownStbyProtection", 1330),
          ("databaseFailure", 1331),
          ("latencyTooHigh", 1335),
          ("latencyTooLow", 1336),
          ("thres15MinExceededFecBERCE", 1337),
          ("autoShutdownSendingLckOdu", 1338),
          ("ntpNotInSync", 1339),
          ("encryptionModuleTamperDetected", 1340),
          ("encryptionModuleCryPasswdMissing", 1341),
          ("encryptionModuleCryPasswdError", 1342),
          ("encryptionModuleFwpUpdateEnabled", 1343),
          ("encryptionModuleSelfTestStarted", 1344),
          ("encryptionModuleSelfTestFail", 1345),
          ("encryptionModuleSelfTestFailCritical", 1346),
          ("encryptionPortAuthPasswdMissing", 1350),
          ("encryptionPortMaxKeyExchgFailuresReachedIs", 1351),
          ("encryptionPortMaxKeyExchgFailuresReachedOos", 1352),
          ("encryptionPortEncryptionSwitchedOff", 1353),
          ("encryptionPortKeyExchangedForced", 1354),
          ("encryptionPortEncryptionSwitchOffEnabled", 1355),
          ("encryptionPortKeyInitExchgMissed", 1356),
          ("roundTripDelayTooHigh", 1380),
          ("roundTripDelayTooLow", 1381),
          ("airDustFilterClogged", 1385),
          ("ntpForSchedEqlzRequired", 1386),
          ("oscOpticalPowerControlFailHigh", 1387),
          ("oscOpticalPowerControlFailLow", 1388),
          ("amplifierAbnormal", 1389),
          ("aseTableGenFailPilot", 1390),
          ("pumpLaser4TempTooHigh", 1391),
          ("pumpLaser4TempTooLow", 1392),
          ("fwdAseTableFailPilot", 1393),
          ("fwdAseTableOnPilot", 1394),
          ("inputVoltageFailurePort1", 1395),
          ("inputVoltageFailurePort2", 1396),
          ("xfpDecisionThresSetFailed", 1397),
          ("ntpSrvOosDsbld", 1398),
          ("thres15MinExceededPhysConvSE", 1399),
          ("thres15MinExceededPhysConvESTX", 1400),
          ("thres15MinExceededPhysConvCVTX", 1401),
          ("thres15MinExceededPhysConvSETX", 1402),
          ("prbsRcvActivated", 1403),
          ("prbsTrmtActivated", 1404),
          ("prbsLossOfSeqSynch", 1405),
          ("opuClientSignalFail", 1406),
          ("lossOfTestSeqSynchOpu", 1407),
          ("autoShutdownOpuClientSignalFail", 1408),
          ("localOscTemperatureTooLow", 1409),
          ("localOscTemperatureTooHigh", 1410),
          ("differentialGroupDelayTooHigh", 1412),
          ("chromaticDispersionTooLow", 1413),
          ("chromaticDispersionTooHigh", 1414),
          ("signalToNoiseRatioTooLow", 1415),
          ("localOscLevelAbnormal", 1416),
          ("carrierFreqOffsetTooLow", 1417),
          ("carrierFreqOffsetTooHigh", 1418),
          ("lossOfLane", 1419),
          ("serverSignalFailureODUcrs", 1420),
          ("autoShutdownSendingOciOdu", 1421),
          ("oduTribMsiMismatch", 1422),
          ("channelMismatch", 1423),
          ("eqlzAdjust", 1424),
          ("hwDegrade", 1425),
          ("hwInitializing", 1426),
          ("ampFailure", 1427),
          ("autoAmpShutdown", 1428),
          ("fiberConnLos", 1429),
          ("fiberConnOptFault", 1430),
          ("fiberConnInvalid", 1431),
          ("fiberConnMismatch", 1432),
          ("fiberConnCommError", 1433),
          ("fiberConnProtocolFailure", 1434),
          ("fiberConnDataFailure", 1435),
          ("fiberAttenuationHigh", 1436),
          ("fiberConnInvalidTx", 1437),
          ("fiberConnMismatchTx", 1438),
          ("fiberAttenuationHighTx", 1439),
          ("switchToDuplexInhibited", 1440),
          ("meaSwRevision", 1441),
          ("dbReplicationIncompleted", 1442),
          ("backupNotResponding", 1443),
          ("backupForcedToHalt", 1444),
          ("duplexLinkFailure", 1445),
          ("provPayloadMismatch", 1446),
          ("autoShutdownOpuFlxCSF", 1447),
          ("logicalLanesSkewTooHigh", 1448),
          ("fiberAttenuationCond", 1449),
          ("laserOnDelay", 1450),
          ("autoShutdownTxRxLasersDueToHighTemp", 1451),
          ("lossOfLaneOtu", 1456),
          ("autoShutdownAmpAps", 1459))
    )



class FspR7StartPmSnapshot(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("apply", 2))
    )



class FspR7StartOpticalPmSnapshotExport(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              19)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("apply", 19))
    )



class FspR7StateConnection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("standard", 1),
          ("mismatchEquipment", 2),
          ("mismatchConnection", 3),
          ("mismatchChannel", 4),
          ("mismatchPhysical", 5),
          ("invalidConfig", 6),
          ("nonStandard", 7),
          ("standardSpeq", 8))
    )



class FspR7Stuff(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7StuffCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capYes", 1),
          ("capNo", 2))
    )


class FspR7SubLayer(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("lambda", 1),
          ("fiber", 2),
          ("tdm", 3),
          ("psc1", 4),
          ("psc2", 5),
          ("psc3", 6),
          ("psc4", 7),
          ("l2sc", 8),
          ("ethSvlan", 9),
          ("none", 10),
          ("subLsc", 11),
          ("dcsc", 12),
          ("otn", 13))
    )



class FspR7SubLayerCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capLambda", 1),
          ("capFiber", 2),
          ("capTdm", 3),
          ("capPsc1", 4),
          ("capPsc2", 5),
          ("capPsc3", 6),
          ("capPsc4", 7),
          ("capL2sc", 8),
          ("capEthSvlan", 9),
          ("capNone", 10),
          ("capSubLsc", 11),
          ("capDcsc", 12),
          ("capOtn", 13))
    )


class FspR7SubLayerEncoding(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("otn", 1),
          ("sonet", 2),
          ("sdh", 3),
          ("eth", 4),
          ("fc", 5),
          ("trans", 6),
          ("cl", 7),
          ("ib", 8),
          ("otnp", 9),
          ("unspecified", 10))
    )



class FspR7SubLayerEncodingCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capOtn", 1),
          ("capSonet", 2),
          ("capSdh", 3),
          ("capEth", 4),
          ("capFc", 5),
          ("capTrans", 6),
          ("capCl", 7),
          ("capIb", 8),
          ("capOtnp", 9),
          ("capUnspecified", 10))
    )


class FspR7SupplyType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("front", 1),
          ("rear", 2))
    )



class FspR7SupplyTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capFront", 1),
          ("capRear", 2))
    )


class FspR7SwitchOverCause(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("notApplicable", 1),
          ("removed", 2),
          ("softwareException", 3),
          ("noResponse", 4),
          ("gracefulShutdown", 9),
          ("switchToDuplex", 10),
          ("buttonPushed", 11))
    )



class FspR7SystemBusy(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("idle", 1),
          ("busyFileTransfer", 2),
          ("busySystemUpdate", 3),
          ("busyEqptUpdate", 4))
    )



class FspR7SysType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("otm", 1),
          ("oadm", 2),
          ("converter", 3),
          ("ila", 4),
          ("hub", 5))
    )



class FspR7TelemetryOutput(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("neAlmCr", 1),
          ("neAlmMj", 2),
          ("neAlmMn", 3),
          ("neAlmMjGe", 4),
          ("neAlmMnGe", 5),
          ("fcuAlmCr", 6),
          ("fcuAlmMj", 7),
          ("fcuAlmMn", 8),
          ("fcuAlmMjGe", 9),
          ("fcuAlmMnGe", 10),
          ("psuAlmCr", 11),
          ("psuAlmMj", 12),
          ("psuAlmMn", 13),
          ("psuAlmMjGe", 14),
          ("psuAlmMnGe", 15),
          ("none", 16))
    )



class FspR7TelemetryOutputCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capNeAlmCr", 1),
          ("capNeAlmMj", 2),
          ("capNeAlmMn", 3),
          ("capNeAlmMjGe", 4),
          ("capNeAlmMnGe", 5),
          ("capFcuAlmCr", 6),
          ("capFcuAlmMj", 7),
          ("capFcuAlmMn", 8),
          ("capFcuAlmMjGe", 9),
          ("capFcuAlmMnGe", 10),
          ("capPsuAlmCr", 11),
          ("capPsuAlmMj", 12),
          ("capPsuAlmMn", 13),
          ("capPsuAlmMjGe", 14),
          ("capPsuAlmMnGe", 15),
          ("capNone", 16))
    )


class FspR7TestMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("testModeRls", 1),
          ("testModePRBS23", 2),
          ("testModePRBS23Inv", 3),
          ("testModePRBS31", 4),
          ("testModePRBS31Inv", 5))
    )



class FspR7TestModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capTestModeRls", 1),
          ("capTestModePRBS23", 2),
          ("capTestModePRBS23Inv", 3),
          ("capTestModePRBS31", 4),
          ("capTestModePRBS31Inv", 5))
    )


class FspR7TifOutputReset(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("opr", 2))
    )



class FspR7TifOutputResetCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capOpr", 2))
    )


class FspR7Time(TextualConvention, OctetString):
    status = "current"
    displayHint = "1d-1d-1d"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 3),
    )
    fixed_length = 3



class FspR7TimeChangeReason(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("none", 1),
          ("manual", 2),
          ("correction", 3),
          ("dst", 4))
    )



class FspR7TiltSet(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("minus1dB0", 1),
          ("minus1dB5", 2),
          ("minus2dB0", 3))
    )



class FspR7TiltSetCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capMinus1dB0", 1),
          ("capMinus1dB5", 2),
          ("capMinus2dB0", 3))
    )


class FspR7TL1InternalState(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("alw", 1),
          ("inh", 2))
    )



class FspR7TL1InternalStateCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAlw", 1),
          ("capInh", 2))
    )


class FspR7TL1TimoutAvailable(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7TL1TimoutAvailableCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capYes", 1),
          ("capNo", 2))
    )


class FspR7TopologyType(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("lad", 1),
          ("ring", 2),
          ("p2p", 3),
          ("unknown", 4))
    )



class FspR7TopologyTypeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capLad", 1),
          ("capRing", 2),
          ("capP2p", 3),
          ("capUnknown", 4))
    )


class FspR7TrafficDirection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("bidi", 1),
          ("uniCton", 2),
          ("uniNtoc", 3))
    )



class FspR7TrafficDirectionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capBidi", 1),
          ("capUniCton", 2),
          ("capUniNtoc", 3))
    )


class FspR7TransmissionMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              21)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("trans", 1),
          ("transE", 2),
          ("transW", 3),
          ("transHst", 4),
          ("mux", 5),
          ("muxE", 6),
          ("muxW", 7),
          ("muxHst", 8),
          ("regen1Way", 9),
          ("regen2Way", 10),
          ("obsolete", 11),
          ("adm", 12),
          ("transDual", 13),
          ("muxDual", 14),
          ("nFixed", 15),
          ("cSelect", 16),
          ("dualClient", 17),
          ("transQuad", 21))
    )



class FspR7TransmissionModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capTrans", 1),
          ("capTransE", 2),
          ("capTransW", 3),
          ("capTransHst", 4),
          ("capMux", 5),
          ("capMuxE", 6),
          ("capMuxW", 7),
          ("capMuxHst", 8),
          ("capRegen1Way", 9),
          ("capRegen2Way", 10),
          ("capObsolete", 11),
          ("capAdm", 12),
          ("capTransDual", 13),
          ("capMuxDual", 14),
          ("capNFixed", 15),
          ("capCSelect", 16),
          ("capDualClient", 17),
          ("capTransQuad", 21))
    )


class FspR7TurnupConfig(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("rls", 1),
          ("oprTurnup", 2))
    )



class FspR7TurnupConfigCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capRls", 1),
          ("capOprTurnup", 2))
    )


class FspR7TypeConnection(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("connection1Way", 1),
          ("connection2Way", 2))
    )



class FspR7TypeConnectionCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capConnection1Way", 1),
          ("capConnection2Way", 2))
    )


class FspR7TypeCrs(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("connection1Way", 1),
          ("connection2Way", 2))
    )



class FspR7TypeCrsCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capConnection1Way", 1),
          ("capConnection2Way", 2))
    )


class FspR7Unsigned32Caps(TextualConvention, OctetString):
    status = "current"
    displayHint = "4d:4d"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )



class FspR7UntaggedFrames(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("accept", 1),
          ("reject", 2))
    )



class FspR7UntaggedFramesCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capAccept", 1),
          ("capReject", 2))
    )


class FspR7VoaMode(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("power", 1),
          ("att", 2))
    )



class FspR7VoaModeCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capPower", 1),
          ("capAtt", 2))
    )


class FspR7Swdx(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("noAction", 1),
          ("manualSwitch", 2))
    )



class FspR7XfpDecisionThres(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("standard", 1),
          ("forwardRaman", 2))
    )



class FspR7XfpDecisionThresCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capStandard", 1),
          ("capForwardRaman", 2))
    )


class FspR7YesNo(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("yes", 1),
          ("no", 2))
    )



class FspR7YesNoCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capYes", 1),
          ("capNo", 2))
    )


class SourceIpAddress(TextualConvention, Integer32):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("sysIp", 1),
          ("defaultIp", 2))
    )



class SourceIpAddressCaps(TextualConvention, Bits):
    status = "current"
    namedValues = NamedValues(
        *(("capUndefined", 0),
          ("capSysIp", 1),
          ("capDefaultIp", 2))
    )


# MIB Managed Objects in the order of their OIDs

_FspR7Products_ObjectIdentity = ObjectIdentity
fspR7Products = _FspR7Products_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 1)
)
_FspR7V1_ObjectIdentity = ObjectIdentity
fspR7V1 = _FspR7V1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 1, 1)
)
if mibBuilder.loadTexts:
    fspR7V1.setStatus("current")
_Ots1000_ObjectIdentity = ObjectIdentity
ots1000 = _Ots1000_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 1, 2)
)
if mibBuilder.loadTexts:
    ots1000.setStatus("current")
_ConditionMIB_ObjectIdentity = ObjectIdentity
conditionMIB = _ConditionMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1)
)
_ConditionFilters_ObjectIdentity = ObjectIdentity
conditionFilters = _ConditionFilters_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1)
)
_ConditionSeverityTable_Object = MibTable
conditionSeverityTable = _ConditionSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 1)
)
if mibBuilder.loadTexts:
    conditionSeverityTable.setStatus("current")
_ConditionSeverityEntry_Object = MibTableRow
conditionSeverityEntry = _ConditionSeverityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 1, 1)
)
conditionSeverityEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "conditionSeverityType"),
)
if mibBuilder.loadTexts:
    conditionSeverityEntry.setStatus("current")
_ConditionSeverityType_Type = FspR7StandingConditionTypes
_ConditionSeverityType_Object = MibTableColumn
conditionSeverityType = _ConditionSeverityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 1, 1, 1),
    _ConditionSeverityType_Type()
)
conditionSeverityType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    conditionSeverityType.setStatus("current")
_ConditionSeverityValue_Type = TrapAlarmSeverity
_ConditionSeverityValue_Object = MibTableColumn
conditionSeverityValue = _ConditionSeverityValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 1, 1, 2),
    _ConditionSeverityValue_Type()
)
conditionSeverityValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    conditionSeverityValue.setStatus("current")
_NtpSysConditionSeverityTable_Object = MibTable
ntpSysConditionSeverityTable = _NtpSysConditionSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 2)
)
if mibBuilder.loadTexts:
    ntpSysConditionSeverityTable.setStatus("current")
_NtpSysConditionSeverityEntry_Object = MibTableRow
ntpSysConditionSeverityEntry = _NtpSysConditionSeverityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 2, 1)
)
ntpSysConditionSeverityEntry.setIndexNames(
    (0, "FspR7-MIB", "ntpSysConditionSeverityType"),
)
if mibBuilder.loadTexts:
    ntpSysConditionSeverityEntry.setStatus("current")
_NtpSysConditionSeverityType_Type = FspR7StandingConditionTypes
_NtpSysConditionSeverityType_Object = MibTableColumn
ntpSysConditionSeverityType = _NtpSysConditionSeverityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 2, 1, 1),
    _NtpSysConditionSeverityType_Type()
)
ntpSysConditionSeverityType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpSysConditionSeverityType.setStatus("current")
_NtpSysConditionSeverityValue_Type = TrapAlarmSeverity
_NtpSysConditionSeverityValue_Object = MibTableColumn
ntpSysConditionSeverityValue = _NtpSysConditionSeverityValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 2, 1, 2),
    _NtpSysConditionSeverityValue_Type()
)
ntpSysConditionSeverityValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSysConditionSeverityValue.setStatus("current")
_NtpSrvConditionSeverityTable_Object = MibTable
ntpSrvConditionSeverityTable = _NtpSrvConditionSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 3)
)
if mibBuilder.loadTexts:
    ntpSrvConditionSeverityTable.setStatus("current")
_NtpSrvConditionSeverityEntry_Object = MibTableRow
ntpSrvConditionSeverityEntry = _NtpSrvConditionSeverityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 3, 1)
)
ntpSrvConditionSeverityEntry.setIndexNames(
    (0, "FspR7-MIB", "ntpServerIp"),
    (0, "FspR7-MIB", "ntpSysConditionSeverityType"),
)
if mibBuilder.loadTexts:
    ntpSrvConditionSeverityEntry.setStatus("current")
_NtpSrvConditionSeverityType_Type = FspR7StandingConditionTypes
_NtpSrvConditionSeverityType_Object = MibTableColumn
ntpSrvConditionSeverityType = _NtpSrvConditionSeverityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 3, 1, 1),
    _NtpSrvConditionSeverityType_Type()
)
ntpSrvConditionSeverityType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpSrvConditionSeverityType.setStatus("current")
_NtpSrvConditionSeverityValue_Type = TrapAlarmSeverity
_NtpSrvConditionSeverityValue_Object = MibTableColumn
ntpSrvConditionSeverityValue = _NtpSrvConditionSeverityValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 3, 1, 2),
    _NtpSrvConditionSeverityValue_Type()
)
ntpSrvConditionSeverityValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpSrvConditionSeverityValue.setStatus("current")
_PtpConditionSeverityTable_Object = MibTable
ptpConditionSeverityTable = _PtpConditionSeverityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 4)
)
if mibBuilder.loadTexts:
    ptpConditionSeverityTable.setStatus("current")
_PtpConditionSeverityEntry_Object = MibTableRow
ptpConditionSeverityEntry = _PtpConditionSeverityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 4, 1)
)
ptpConditionSeverityEntry.setIndexNames(
    (0, "ADVA-MIB", "ptpEntityIndex"),
    (0, "FspR7-MIB", "conditionSeverityType"),
)
if mibBuilder.loadTexts:
    ptpConditionSeverityEntry.setStatus("current")
_PtpConditionSeverityType_Type = FspR7StandingConditionTypes
_PtpConditionSeverityType_Object = MibTableColumn
ptpConditionSeverityType = _PtpConditionSeverityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 4, 1, 1),
    _PtpConditionSeverityType_Type()
)
ptpConditionSeverityType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ptpConditionSeverityType.setStatus("current")
_PtpConditionSeverityValue_Type = TrapAlarmSeverity
_PtpConditionSeverityValue_Object = MibTableColumn
ptpConditionSeverityValue = _PtpConditionSeverityValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 1, 4, 1, 2),
    _PtpConditionSeverityValue_Type()
)
ptpConditionSeverityValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpConditionSeverityValue.setStatus("current")
_CurrentConditions_ObjectIdentity = ObjectIdentity
currentConditions = _CurrentConditions_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2)
)
_CurrentConditionTable_Object = MibTable
currentConditionTable = _CurrentConditionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 1)
)
if mibBuilder.loadTexts:
    currentConditionTable.setStatus("current")
_CurrentConditionEntry_Object = MibTableRow
currentConditionEntry = _CurrentConditionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 1, 1)
)
currentConditionEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "currentConditionType"),
)
if mibBuilder.loadTexts:
    currentConditionEntry.setStatus("current")
_CurrentConditionType_Type = FspR7StandingConditionTypes
_CurrentConditionType_Object = MibTableColumn
currentConditionType = _CurrentConditionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 1, 1, 1),
    _CurrentConditionType_Type()
)
currentConditionType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    currentConditionType.setStatus("current")
_CurrentConditionSeverity_Type = TrapAlarmSeverity
_CurrentConditionSeverity_Object = MibTableColumn
currentConditionSeverity = _CurrentConditionSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 1, 1, 2),
    _CurrentConditionSeverity_Type()
)
currentConditionSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentConditionSeverity.setStatus("current")
_CurrentConditionAffect_Type = ServiceImpairment
_CurrentConditionAffect_Object = MibTableColumn
currentConditionAffect = _CurrentConditionAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 1, 1, 3),
    _CurrentConditionAffect_Type()
)
currentConditionAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentConditionAffect.setStatus("current")
_CurrentConditionTimeStamp_Type = DateAndTime
_CurrentConditionTimeStamp_Object = MibTableColumn
currentConditionTimeStamp = _CurrentConditionTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 1, 1, 4),
    _CurrentConditionTimeStamp_Type()
)
currentConditionTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentConditionTimeStamp.setStatus("current")
_NtpSysCurrentConditionTable_Object = MibTable
ntpSysCurrentConditionTable = _NtpSysCurrentConditionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 2)
)
if mibBuilder.loadTexts:
    ntpSysCurrentConditionTable.setStatus("current")
_NtpSysCurrentConditionEntry_Object = MibTableRow
ntpSysCurrentConditionEntry = _NtpSysCurrentConditionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 2, 1)
)
ntpSysCurrentConditionEntry.setIndexNames(
    (0, "FspR7-MIB", "ntpSysConditionSeverityType"),
)
if mibBuilder.loadTexts:
    ntpSysCurrentConditionEntry.setStatus("current")
_NtpSysCurrentConditionType_Type = FspR7StandingConditionTypes
_NtpSysCurrentConditionType_Object = MibTableColumn
ntpSysCurrentConditionType = _NtpSysCurrentConditionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 2, 1, 1),
    _NtpSysCurrentConditionType_Type()
)
ntpSysCurrentConditionType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpSysCurrentConditionType.setStatus("current")
_NtpSysCurrentConditionSeverity_Type = TrapAlarmSeverity
_NtpSysCurrentConditionSeverity_Object = MibTableColumn
ntpSysCurrentConditionSeverity = _NtpSysCurrentConditionSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 2, 1, 2),
    _NtpSysCurrentConditionSeverity_Type()
)
ntpSysCurrentConditionSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpSysCurrentConditionSeverity.setStatus("current")
_NtpSysCurrentConditionAffect_Type = ServiceImpairment
_NtpSysCurrentConditionAffect_Object = MibTableColumn
ntpSysCurrentConditionAffect = _NtpSysCurrentConditionAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 2, 1, 3),
    _NtpSysCurrentConditionAffect_Type()
)
ntpSysCurrentConditionAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpSysCurrentConditionAffect.setStatus("current")
_NtpSysCurrentConditionTimeStamp_Type = DateAndTime
_NtpSysCurrentConditionTimeStamp_Object = MibTableColumn
ntpSysCurrentConditionTimeStamp = _NtpSysCurrentConditionTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 2, 1, 4),
    _NtpSysCurrentConditionTimeStamp_Type()
)
ntpSysCurrentConditionTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpSysCurrentConditionTimeStamp.setStatus("current")
_NtpSrvCurrentConditionTable_Object = MibTable
ntpSrvCurrentConditionTable = _NtpSrvCurrentConditionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 3)
)
if mibBuilder.loadTexts:
    ntpSrvCurrentConditionTable.setStatus("current")
_NtpSrvCurrentConditionEntry_Object = MibTableRow
ntpSrvCurrentConditionEntry = _NtpSrvCurrentConditionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 3, 1)
)
ntpSrvCurrentConditionEntry.setIndexNames(
    (0, "FspR7-MIB", "ntpServerIp"),
    (0, "FspR7-MIB", "ntpSrvConditionSeverityType"),
)
if mibBuilder.loadTexts:
    ntpSrvCurrentConditionEntry.setStatus("current")
_NtpSrvCurrentConditionType_Type = FspR7StandingConditionTypes
_NtpSrvCurrentConditionType_Object = MibTableColumn
ntpSrvCurrentConditionType = _NtpSrvCurrentConditionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 3, 1, 1),
    _NtpSrvCurrentConditionType_Type()
)
ntpSrvCurrentConditionType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpSrvCurrentConditionType.setStatus("current")
_NtpSrvCurrentConditionSeverity_Type = TrapAlarmSeverity
_NtpSrvCurrentConditionSeverity_Object = MibTableColumn
ntpSrvCurrentConditionSeverity = _NtpSrvCurrentConditionSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 3, 1, 2),
    _NtpSrvCurrentConditionSeverity_Type()
)
ntpSrvCurrentConditionSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpSrvCurrentConditionSeverity.setStatus("current")
_NtpSrvCurrentConditionAffect_Type = ServiceImpairment
_NtpSrvCurrentConditionAffect_Object = MibTableColumn
ntpSrvCurrentConditionAffect = _NtpSrvCurrentConditionAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 3, 1, 3),
    _NtpSrvCurrentConditionAffect_Type()
)
ntpSrvCurrentConditionAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpSrvCurrentConditionAffect.setStatus("current")
_NtpSrvCurrentConditionTimeStamp_Type = DateAndTime
_NtpSrvCurrentConditionTimeStamp_Object = MibTableColumn
ntpSrvCurrentConditionTimeStamp = _NtpSrvCurrentConditionTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 3, 1, 4),
    _NtpSrvCurrentConditionTimeStamp_Type()
)
ntpSrvCurrentConditionTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpSrvCurrentConditionTimeStamp.setStatus("current")
_PtpCurrentConditionTable_Object = MibTable
ptpCurrentConditionTable = _PtpCurrentConditionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 4)
)
if mibBuilder.loadTexts:
    ptpCurrentConditionTable.setStatus("current")
_PtpCurrentConditionEntry_Object = MibTableRow
ptpCurrentConditionEntry = _PtpCurrentConditionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 4, 1)
)
ptpCurrentConditionEntry.setIndexNames(
    (0, "ADVA-MIB", "ptpEntityIndex"),
    (0, "FspR7-MIB", "currentConditionType"),
)
if mibBuilder.loadTexts:
    ptpCurrentConditionEntry.setStatus("current")
_PtpCurrentConditionType_Type = FspR7StandingConditionTypes
_PtpCurrentConditionType_Object = MibTableColumn
ptpCurrentConditionType = _PtpCurrentConditionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 4, 1, 1),
    _PtpCurrentConditionType_Type()
)
ptpCurrentConditionType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ptpCurrentConditionType.setStatus("current")
_PtpCurrentConditionSeverity_Type = TrapAlarmSeverity
_PtpCurrentConditionSeverity_Object = MibTableColumn
ptpCurrentConditionSeverity = _PtpCurrentConditionSeverity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 4, 1, 2),
    _PtpCurrentConditionSeverity_Type()
)
ptpCurrentConditionSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpCurrentConditionSeverity.setStatus("current")
_PtpCurrentConditionAffect_Type = ServiceImpairment
_PtpCurrentConditionAffect_Object = MibTableColumn
ptpCurrentConditionAffect = _PtpCurrentConditionAffect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 4, 1, 3),
    _PtpCurrentConditionAffect_Type()
)
ptpCurrentConditionAffect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpCurrentConditionAffect.setStatus("current")
_PtpCurrentConditionTimeStamp_Type = DateAndTime
_PtpCurrentConditionTimeStamp_Object = MibTableColumn
ptpCurrentConditionTimeStamp = _PtpCurrentConditionTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 2, 4, 1, 4),
    _PtpCurrentConditionTimeStamp_Type()
)
ptpCurrentConditionTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpCurrentConditionTimeStamp.setStatus("current")
_AlarmProfileConfig_ObjectIdentity = ObjectIdentity
alarmProfileConfig = _AlarmProfileConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 3)
)
_AlarmProfileTable_Object = MibTable
alarmProfileTable = _AlarmProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 3, 1)
)
if mibBuilder.loadTexts:
    alarmProfileTable.setStatus("current")
_AlarmProfileEntry_Object = MibTableRow
alarmProfileEntry = _AlarmProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 3, 1, 1)
)
alarmProfileEntry.setIndexNames(
    (0, "FspR7-MIB", "alarmProfileAidType"),
    (0, "FspR7-MIB", "conditionSeverityType"),
)
if mibBuilder.loadTexts:
    alarmProfileEntry.setStatus("current")
_AlarmProfileAidType_Type = FspR7AidType
_AlarmProfileAidType_Object = MibTableColumn
alarmProfileAidType = _AlarmProfileAidType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 3, 1, 1, 1),
    _AlarmProfileAidType_Type()
)
alarmProfileAidType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmProfileAidType.setStatus("current")
_AlarmProfileValue_Type = TrapAlarmSeverity
_AlarmProfileValue_Object = MibTableColumn
alarmProfileValue = _AlarmProfileValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 3, 1, 1, 2),
    _AlarmProfileValue_Type()
)
alarmProfileValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmProfileValue.setStatus("current")
_AlarmProfileDefaultValue_Type = TrapAlarmSeverity
_AlarmProfileDefaultValue_Object = MibTableColumn
alarmProfileDefaultValue = _AlarmProfileDefaultValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 1, 3, 1, 1, 3),
    _AlarmProfileDefaultValue_Type()
)
alarmProfileDefaultValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmProfileDefaultValue.setStatus("current")
_AdminMIB_ObjectIdentity = ObjectIdentity
adminMIB = _AdminMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2)
)
_NeAdmin_ObjectIdentity = ObjectIdentity
neAdmin = _NeAdmin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1)
)
_NeSystemId_Type = SnmpAdminString
_NeSystemId_Object = MibScalar
neSystemId = _NeSystemId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 1),
    _NeSystemId_Type()
)
neSystemId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSystemId.setStatus("current")
_NeSysType_Type = FspR7SysType
_NeSysType_Object = MibScalar
neSysType = _NeSysType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 2),
    _NeSysType_Type()
)
neSysType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSysType.setStatus("current")
_NeAutoProvisioning_Type = FspR7YesNo
_NeAutoProvisioning_Object = MibScalar
neAutoProvisioning = _NeAutoProvisioning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 3),
    _NeAutoProvisioning_Type()
)
neAutoProvisioning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAutoProvisioning.setStatus("current")
_NeType_Type = FspR7NeType
_NeType_Object = MibScalar
neType = _NeType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 4),
    _NeType_Type()
)
neType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neType.setStatus("current")
_NeSwVersion_Type = SnmpAdminString
_NeSwVersion_Object = MibScalar
neSwVersion = _NeSwVersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 5),
    _NeSwVersion_Type()
)
neSwVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neSwVersion.setStatus("current")
_NeGradeInventory_Type = Grade
_NeGradeInventory_Object = MibScalar
neGradeInventory = _NeGradeInventory_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 6),
    _NeGradeInventory_Type()
)
neGradeInventory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neGradeInventory.setStatus("current")
_NeModel_Type = FspR7Model
_NeModel_Object = MibScalar
neModel = _NeModel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 7),
    _NeModel_Type()
)
neModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neModel.setStatus("current")
_NeVendorId_Type = SnmpAdminString
_NeVendorId_Object = MibScalar
neVendorId = _NeVendorId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 8),
    _NeVendorId_Type()
)
neVendorId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neVendorId.setStatus("current")
_NeAINSProvEnabled_Type = FspR7YesNo
_NeAINSProvEnabled_Object = MibScalar
neAINSProvEnabled = _NeAINSProvEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 9),
    _NeAINSProvEnabled_Type()
)
neAINSProvEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAINSProvEnabled.setStatus("current")


class _NeAINSDefaultTimer_Type(Unsigned32):
    """Custom type neAINSDefaultTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeAINSDefaultTimer_Type.__name__ = "Unsigned32"
_NeAINSDefaultTimer_Object = MibScalar
neAINSDefaultTimer = _NeAINSDefaultTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 10),
    _NeAINSDefaultTimer_Type()
)
neAINSDefaultTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAINSDefaultTimer.setStatus("current")
if mibBuilder.loadTexts:
    neAINSDefaultTimer.setUnits("Min")
_NePreferredFacilityType_Type = FspR7PreferredFacilityType
_NePreferredFacilityType_Object = MibScalar
nePreferredFacilityType = _NePreferredFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 11),
    _NePreferredFacilityType_Type()
)
nePreferredFacilityType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nePreferredFacilityType.setStatus("current")
_NeForceDelete_Type = EnableState
_NeForceDelete_Object = MibScalar
neForceDelete = _NeForceDelete_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 12),
    _NeForceDelete_Type()
)
neForceDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neForceDelete.setStatus("current")


class _NeSdhSesThreshold_Type(Unsigned32):
    """Custom type neSdhSesThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeSdhSesThreshold_Type.__name__ = "Unsigned32"
_NeSdhSesThreshold_Object = MibScalar
neSdhSesThreshold = _NeSdhSesThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 14),
    _NeSdhSesThreshold_Type()
)
neSdhSesThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSdhSesThreshold.setStatus("current")
if mibBuilder.loadTexts:
    neSdhSesThreshold.setUnits("%")


class _NeOtnSesThreshold_Type(Unsigned32):
    """Custom type neOtnSesThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeOtnSesThreshold_Type.__name__ = "Unsigned32"
_NeOtnSesThreshold_Object = MibScalar
neOtnSesThreshold = _NeOtnSesThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 15),
    _NeOtnSesThreshold_Type()
)
neOtnSesThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neOtnSesThreshold.setStatus("current")
if mibBuilder.loadTexts:
    neOtnSesThreshold.setUnits("%")
_NeTopologyType_Type = FspR7TopologyType
_NeTopologyType_Object = MibScalar
neTopologyType = _NeTopologyType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 16),
    _NeTopologyType_Type()
)
neTopologyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neTopologyType.setStatus("deprecated")
_NeDatabaseSerialNumber_Type = SnmpAdminString
_NeDatabaseSerialNumber_Object = MibScalar
neDatabaseSerialNumber = _NeDatabaseSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 17),
    _NeDatabaseSerialNumber_Type()
)
neDatabaseSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neDatabaseSerialNumber.setStatus("current")
_NeDatabaseType_Type = FspR7DatabaseType
_NeDatabaseType_Object = MibScalar
neDatabaseType = _NeDatabaseType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 18),
    _NeDatabaseType_Type()
)
neDatabaseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neDatabaseType.setStatus("current")


class _NeRackSize_Type(Unsigned32):
    """Custom type neRackSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 45),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeRackSize_Type.__name__ = "Unsigned32"
_NeRackSize_Object = MibScalar
neRackSize = _NeRackSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 19),
    _NeRackSize_Type()
)
neRackSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neRackSize.setStatus("current")
if mibBuilder.loadTexts:
    neRackSize.setUnits("HU")
_NeDatabaseNcuType_Type = FspR7EquipmentType
_NeDatabaseNcuType_Object = MibScalar
neDatabaseNcuType = _NeDatabaseNcuType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 20),
    _NeDatabaseNcuType_Type()
)
neDatabaseNcuType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neDatabaseNcuType.setStatus("current")
_NeDatabaseNcuAid_Type = EntityIndex
_NeDatabaseNcuAid_Object = MibScalar
neDatabaseNcuAid = _NeDatabaseNcuAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 21),
    _NeDatabaseNcuAid_Type()
)
neDatabaseNcuAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neDatabaseNcuAid.setStatus("current")
_NeModusLastRestart_Type = FspR7ModusLastRestart
_NeModusLastRestart_Object = MibScalar
neModusLastRestart = _NeModusLastRestart_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 22),
    _NeModusLastRestart_Type()
)
neModusLastRestart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neModusLastRestart.setStatus("current")
_NeSystemIp_Type = IpAddress
_NeSystemIp_Object = MibScalar
neSystemIp = _NeSystemIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 23),
    _NeSystemIp_Type()
)
neSystemIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSystemIp.setStatus("current")
_NeSystemIpMask_Type = IpAddress
_NeSystemIpMask_Object = MibScalar
neSystemIpMask = _NeSystemIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 24),
    _NeSystemIpMask_Type()
)
neSystemIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSystemIpMask.setStatus("current")
_NeAreaId_Type = IpAddress
_NeAreaId_Object = MibScalar
neAreaId = _NeAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 25),
    _NeAreaId_Type()
)
neAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAreaId.setStatus("current")
_NeBackupScuAvailable_Type = FspR7ScuDbBackup
_NeBackupScuAvailable_Object = MibScalar
neBackupScuAvailable = _NeBackupScuAvailable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 26),
    _NeBackupScuAvailable_Type()
)
neBackupScuAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neBackupScuAvailable.setStatus("current")
_NeRouteRedistribution_Type = FspR7RouteRedist
_NeRouteRedistribution_Object = MibScalar
neRouteRedistribution = _NeRouteRedistribution_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 27),
    _NeRouteRedistribution_Type()
)
neRouteRedistribution.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neRouteRedistribution.setStatus("current")


class _NeAlarmActivationTime_Type(Unsigned32):
    """Custom type neAlarmActivationTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeAlarmActivationTime_Type.__name__ = "Unsigned32"
_NeAlarmActivationTime_Object = MibScalar
neAlarmActivationTime = _NeAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 28),
    _NeAlarmActivationTime_Type()
)
neAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    neAlarmActivationTime.setUnits("0.1 s")


class _NeAlarmDeactivationTime_Type(Unsigned32):
    """Custom type neAlarmDeactivationTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeAlarmDeactivationTime_Type.__name__ = "Unsigned32"
_NeAlarmDeactivationTime_Object = MibScalar
neAlarmDeactivationTime = _NeAlarmDeactivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 29),
    _NeAlarmDeactivationTime_Type()
)
neAlarmDeactivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAlarmDeactivationTime.setStatus("current")
if mibBuilder.loadTexts:
    neAlarmDeactivationTime.setUnits("0.1 s")
_NeTimeConfig_ObjectIdentity = ObjectIdentity
neTimeConfig = _NeTimeConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30)
)
_NeDate_Type = FspR7Date
_NeDate_Object = MibScalar
neDate = _NeDate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 1),
    _NeDate_Type()
)
neDate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neDate.setStatus("current")
_NeTime_Type = FspR7Time
_NeTime_Object = MibScalar
neTime = _NeTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 2),
    _NeTime_Type()
)
neTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neTime.setStatus("current")
_NeTimeZone_Type = SnmpAdminString
_NeTimeZone_Object = MibScalar
neTimeZone = _NeTimeZone_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 3),
    _NeTimeZone_Type()
)
neTimeZone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neTimeZone.setStatus("current")
_NeNetworkTimeProtocol_Type = EnableState
_NeNetworkTimeProtocol_Object = MibScalar
neNetworkTimeProtocol = _NeNetworkTimeProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 4),
    _NeNetworkTimeProtocol_Type()
)
neNetworkTimeProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neNetworkTimeProtocol.setStatus("deprecated")
_NeNtpServer1_Type = IpAddress
_NeNtpServer1_Object = MibScalar
neNtpServer1 = _NeNtpServer1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 5),
    _NeNtpServer1_Type()
)
neNtpServer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neNtpServer1.setStatus("deprecated")
_NeNtpServer2_Type = IpAddress
_NeNtpServer2_Object = MibScalar
neNtpServer2 = _NeNtpServer2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 6),
    _NeNtpServer2_Type()
)
neNtpServer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neNtpServer2.setStatus("deprecated")
_NeNtpServer3_Type = IpAddress
_NeNtpServer3_Object = MibScalar
neNtpServer3 = _NeNtpServer3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 7),
    _NeNtpServer3_Type()
)
neNtpServer3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neNtpServer3.setStatus("deprecated")
_NeNtpStatusServer1_Type = FspR7NtpServerStatus
_NeNtpStatusServer1_Object = MibScalar
neNtpStatusServer1 = _NeNtpStatusServer1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 8),
    _NeNtpStatusServer1_Type()
)
neNtpStatusServer1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neNtpStatusServer1.setStatus("deprecated")
_NeNtpStatusServer2_Type = FspR7NtpServerStatus
_NeNtpStatusServer2_Object = MibScalar
neNtpStatusServer2 = _NeNtpStatusServer2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 9),
    _NeNtpStatusServer2_Type()
)
neNtpStatusServer2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neNtpStatusServer2.setStatus("deprecated")
_NeNtpStatusServer3_Type = FspR7NtpServerStatus
_NeNtpStatusServer3_Object = MibScalar
neNtpStatusServer3 = _NeNtpStatusServer3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 10),
    _NeNtpStatusServer3_Type()
)
neNtpStatusServer3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neNtpStatusServer3.setStatus("deprecated")
_NeNtpSourceIp_Type = SourceIpAddress
_NeNtpSourceIp_Object = MibScalar
neNtpSourceIp = _NeNtpSourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 11),
    _NeNtpSourceIp_Type()
)
neNtpSourceIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neNtpSourceIp.setStatus("deprecated")
_NeTimeZoneOffset_Type = Integer32
_NeTimeZoneOffset_Object = MibScalar
neTimeZoneOffset = _NeTimeZoneOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 12),
    _NeTimeZoneOffset_Type()
)
neTimeZoneOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neTimeZoneOffset.setStatus("current")
_NeDaylightSavingsTimeEnabled_Type = FspR7YesNo
_NeDaylightSavingsTimeEnabled_Object = MibScalar
neDaylightSavingsTimeEnabled = _NeDaylightSavingsTimeEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 13),
    _NeDaylightSavingsTimeEnabled_Type()
)
neDaylightSavingsTimeEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neDaylightSavingsTimeEnabled.setStatus("current")
_NeNtpMode_Type = FspR7NtpMode
_NeNtpMode_Object = MibScalar
neNtpMode = _NeNtpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 14),
    _NeNtpMode_Type()
)
neNtpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neNtpMode.setStatus("current")
_NeTimeChangeReason_Type = FspR7TimeChangeReason
_NeTimeChangeReason_Object = MibScalar
neTimeChangeReason = _NeTimeChangeReason_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 15),
    _NeTimeChangeReason_Type()
)
neTimeChangeReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neTimeChangeReason.setStatus("current")
_NeDateUtc_Type = FspR7Date
_NeDateUtc_Object = MibScalar
neDateUtc = _NeDateUtc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 16),
    _NeDateUtc_Type()
)
neDateUtc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neDateUtc.setStatus("current")
_NeTimeUtc_Type = FspR7Time
_NeTimeUtc_Object = MibScalar
neTimeUtc = _NeTimeUtc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 17),
    _NeTimeUtc_Type()
)
neTimeUtc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neTimeUtc.setStatus("current")
_NtpServerTable_Object = MibTable
ntpServerTable = _NtpServerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20)
)
if mibBuilder.loadTexts:
    ntpServerTable.setStatus("current")
_NtpServerEntry_Object = MibTableRow
ntpServerEntry = _NtpServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1)
)
ntpServerEntry.setIndexNames(
    (0, "FspR7-MIB", "ntpServerIp"),
)
if mibBuilder.loadTexts:
    ntpServerEntry.setStatus("current")
_NtpServerIp_Type = IpAddress
_NtpServerIp_Object = MibTableColumn
ntpServerIp = _NtpServerIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 1),
    _NtpServerIp_Type()
)
ntpServerIp.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    ntpServerIp.setStatus("current")
_NtpServerSourceIp_Type = SourceIpAddress
_NtpServerSourceIp_Object = MibTableColumn
ntpServerSourceIp = _NtpServerSourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 2),
    _NtpServerSourceIp_Type()
)
ntpServerSourceIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpServerSourceIp.setStatus("current")
_NtpServerTest_Type = FspR7NtpTest
_NtpServerTest_Object = MibTableColumn
ntpServerTest = _NtpServerTest_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 3),
    _NtpServerTest_Type()
)
ntpServerTest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpServerTest.setStatus("current")
_NtpServerTestStatus_Type = FspR7NtpTestStatus
_NtpServerTestStatus_Object = MibTableColumn
ntpServerTestStatus = _NtpServerTestStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 4),
    _NtpServerTestStatus_Type()
)
ntpServerTestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpServerTestStatus.setStatus("current")
_NtpServerSyncStatus_Type = FspR7NtpSyncStatus
_NtpServerSyncStatus_Object = MibTableColumn
ntpServerSyncStatus = _NtpServerSyncStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 5),
    _NtpServerSyncStatus_Type()
)
ntpServerSyncStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpServerSyncStatus.setStatus("current")
_NtpServerAdminState_Type = FspR7NtpAdminState
_NtpServerAdminState_Object = MibTableColumn
ntpServerAdminState = _NtpServerAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 6),
    _NtpServerAdminState_Type()
)
ntpServerAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpServerAdminState.setStatus("current")
_NtpServerOperState_Type = FspR7OperState
_NtpServerOperState_Object = MibTableColumn
ntpServerOperState = _NtpServerOperState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 7),
    _NtpServerOperState_Type()
)
ntpServerOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpServerOperState.setStatus("current")
_NtpServerRowStatus_Type = RowStatus
_NtpServerRowStatus_Object = MibTableColumn
ntpServerRowStatus = _NtpServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 20, 1, 8),
    _NtpServerRowStatus_Type()
)
ntpServerRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ntpServerRowStatus.setStatus("current")
_NtpTimeZoneCapsTable_Object = MibTable
ntpTimeZoneCapsTable = _NtpTimeZoneCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 21)
)
if mibBuilder.loadTexts:
    ntpTimeZoneCapsTable.setStatus("current")
_NtpTimeZoneCapsEntry_Object = MibTableRow
ntpTimeZoneCapsEntry = _NtpTimeZoneCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 21, 1)
)
ntpTimeZoneCapsEntry.setIndexNames(
    (0, "FspR7-MIB", "ntpTimeZoneCapsIndex"),
)
if mibBuilder.loadTexts:
    ntpTimeZoneCapsEntry.setStatus("current")


class _NtpTimeZoneCapsIndex_Type(Integer32):
    """Custom type ntpTimeZoneCapsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 101),
    )


_NtpTimeZoneCapsIndex_Type.__name__ = "Integer32"
_NtpTimeZoneCapsIndex_Object = MibTableColumn
ntpTimeZoneCapsIndex = _NtpTimeZoneCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 21, 1, 1),
    _NtpTimeZoneCapsIndex_Type()
)
ntpTimeZoneCapsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ntpTimeZoneCapsIndex.setStatus("current")
_NtpTimeZoneCapsValue_Type = SnmpAdminString
_NtpTimeZoneCapsValue_Object = MibTableColumn
ntpTimeZoneCapsValue = _NtpTimeZoneCapsValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 30, 21, 1, 2),
    _NtpTimeZoneCapsValue_Type()
)
ntpTimeZoneCapsValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ntpTimeZoneCapsValue.setStatus("current")


class _NeTimerForceOprToRls_Type(Unsigned32):
    """Custom type neTimerForceOprToRls based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1440),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeTimerForceOprToRls_Type.__name__ = "Unsigned32"
_NeTimerForceOprToRls_Object = MibScalar
neTimerForceOprToRls = _NeTimerForceOprToRls_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 31),
    _NeTimerForceOprToRls_Type()
)
neTimerForceOprToRls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neTimerForceOprToRls.setStatus("current")
if mibBuilder.loadTexts:
    neTimerForceOprToRls.setUnits("min")
_NeScuRing_Type = FspR7ScuRing
_NeScuRing_Object = MibScalar
neScuRing = _NeScuRing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 32),
    _NeScuRing_Type()
)
neScuRing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neScuRing.setStatus("current")
_NeScuRingCap_Type = FspR7ScuRingCaps
_NeScuRingCap_Object = MibScalar
neScuRingCap = _NeScuRingCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 33),
    _NeScuRingCap_Type()
)
neScuRingCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neScuRingCap.setStatus("current")
_NeAlarmProfileApply_Type = FspR7ApplyAlarmProfile
_NeAlarmProfileApply_Object = MibScalar
neAlarmProfileApply = _NeAlarmProfileApply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 34),
    _NeAlarmProfileApply_Type()
)
neAlarmProfileApply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAlarmProfileApply.setStatus("current")
_NeAlarmProfileApplyCap_Type = FspR7ApplyAlarmProfileCaps
_NeAlarmProfileApplyCap_Object = MibScalar
neAlarmProfileApplyCap = _NeAlarmProfileApplyCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 35),
    _NeAlarmProfileApplyCap_Type()
)
neAlarmProfileApplyCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neAlarmProfileApplyCap.setStatus("current")
_NeFtpServer_Type = FspR7FtpServer
_NeFtpServer_Object = MibScalar
neFtpServer = _NeFtpServer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 36),
    _NeFtpServer_Type()
)
neFtpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neFtpServer.setStatus("current")
_NeFtpServerCap_Type = FspR7FtpServerCaps
_NeFtpServerCap_Object = MibScalar
neFtpServerCap = _NeFtpServerCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 37),
    _NeFtpServerCap_Type()
)
neFtpServerCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neFtpServerCap.setStatus("current")
_NeFtpClient_Type = FspR7FtpClient
_NeFtpClient_Object = MibScalar
neFtpClient = _NeFtpClient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 38),
    _NeFtpClient_Type()
)
neFtpClient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neFtpClient.setStatus("current")
_NeSshDeamon_Type = FspR7SshDeamon
_NeSshDeamon_Object = MibScalar
neSshDeamon = _NeSshDeamon_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 39),
    _NeSshDeamon_Type()
)
neSshDeamon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSshDeamon.setStatus("current")
_NeEqlzAdmin_Type = FspR7EqlzAdminState
_NeEqlzAdmin_Object = MibScalar
neEqlzAdmin = _NeEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 40),
    _NeEqlzAdmin_Type()
)
neEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neEqlzAdmin.setStatus("current")
_NeEqlzAdminCap_Type = FspR7EqlzAdminStateCaps
_NeEqlzAdminCap_Object = MibScalar
neEqlzAdminCap = _NeEqlzAdminCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 41),
    _NeEqlzAdminCap_Type()
)
neEqlzAdminCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neEqlzAdminCap.setStatus("current")
_NeEqlzInterval_Type = FspR7EqlzInterval
_NeEqlzInterval_Object = MibScalar
neEqlzInterval = _NeEqlzInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 42),
    _NeEqlzInterval_Type()
)
neEqlzInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neEqlzInterval.setStatus("current")
_NeEqlzIntervalCap_Type = FspR7EqlzIntervalCaps
_NeEqlzIntervalCap_Object = MibScalar
neEqlzIntervalCap = _NeEqlzIntervalCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 43),
    _NeEqlzIntervalCap_Type()
)
neEqlzIntervalCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neEqlzIntervalCap.setStatus("current")
_NeEqlzStartDate_Type = FspR7Date
_NeEqlzStartDate_Object = MibScalar
neEqlzStartDate = _NeEqlzStartDate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 44),
    _NeEqlzStartDate_Type()
)
neEqlzStartDate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neEqlzStartDate.setStatus("current")
_NeEqlzStartTime_Type = FspR7Time
_NeEqlzStartTime_Object = MibScalar
neEqlzStartTime = _NeEqlzStartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 45),
    _NeEqlzStartTime_Type()
)
neEqlzStartTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neEqlzStartTime.setStatus("current")
_NeDefaultGateway_Type = IpAddress
_NeDefaultGateway_Object = MibScalar
neDefaultGateway = _NeDefaultGateway_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 46),
    _NeDefaultGateway_Type()
)
neDefaultGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neDefaultGateway.setStatus("current")
_NeSwType_Type = FspR7EquipmentType
_NeSwType_Object = MibScalar
neSwType = _NeSwType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 47),
    _NeSwType_Type()
)
neSwType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neSwType.setStatus("current")


class _NeCpPcsPriority_Type(Unsigned32):
    """Custom type neCpPcsPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeCpPcsPriority_Type.__name__ = "Unsigned32"
_NeCpPcsPriority_Object = MibScalar
neCpPcsPriority = _NeCpPcsPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 48),
    _NeCpPcsPriority_Type()
)
neCpPcsPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neCpPcsPriority.setStatus("current")
_NeScuAutoRestoreEnabled_Type = FspR7ScuDbBackup
_NeScuAutoRestoreEnabled_Object = MibScalar
neScuAutoRestoreEnabled = _NeScuAutoRestoreEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 49),
    _NeScuAutoRestoreEnabled_Type()
)
neScuAutoRestoreEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neScuAutoRestoreEnabled.setStatus("current")
_NeNodeNameSyntax_Type = FspR7NodeId
_NeNodeNameSyntax_Object = MibScalar
neNodeNameSyntax = _NeNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 50),
    _NeNodeNameSyntax_Type()
)
neNodeNameSyntax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neNodeNameSyntax.setStatus("current")
_NeAutoProvLifCp_Type = FspR7AutopLif
_NeAutoProvLifCp_Object = MibScalar
neAutoProvLifCp = _NeAutoProvLifCp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 51),
    _NeAutoProvLifCp_Type()
)
neAutoProvLifCp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neAutoProvLifCp.setStatus("current")
_AuthTrapSrcIp_Type = IpAddress
_AuthTrapSrcIp_Object = MibScalar
authTrapSrcIp = _AuthTrapSrcIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 60),
    _AuthTrapSrcIp_Type()
)
authTrapSrcIp.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapSrcIp.setStatus("current")
_AuthTrapLctIp_Type = IpAddress
_AuthTrapLctIp_Object = MibScalar
authTrapLctIp = _AuthTrapLctIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 61),
    _AuthTrapLctIp_Type()
)
authTrapLctIp.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapLctIp.setStatus("current")
_AuthTrapStatus_Type = FspR7AccessStatus
_AuthTrapStatus_Object = MibScalar
authTrapStatus = _AuthTrapStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 62),
    _AuthTrapStatus_Type()
)
authTrapStatus.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapStatus.setStatus("current")
_AuthTrapSessionId_Type = SnmpAdminString
_AuthTrapSessionId_Object = MibScalar
authTrapSessionId = _AuthTrapSessionId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 63),
    _AuthTrapSessionId_Type()
)
authTrapSessionId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapSessionId.setStatus("current")
_AuthTrapProtocol_Type = FspR7AccessProtocol
_AuthTrapProtocol_Object = MibScalar
authTrapProtocol = _AuthTrapProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 64),
    _AuthTrapProtocol_Type()
)
authTrapProtocol.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapProtocol.setStatus("current")
_AuthTrapPort_Type = Unsigned32
_AuthTrapPort_Object = MibScalar
authTrapPort = _AuthTrapPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 65),
    _AuthTrapPort_Type()
)
authTrapPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapPort.setStatus("current")
_AuthTrapUserName_Type = SnmpAdminString
_AuthTrapUserName_Object = MibScalar
authTrapUserName = _AuthTrapUserName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 66),
    _AuthTrapUserName_Type()
)
authTrapUserName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapUserName.setStatus("current")
_AuthTrapRadUserName_Type = SnmpAdminString
_AuthTrapRadUserName_Object = MibScalar
authTrapRadUserName = _AuthTrapRadUserName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 67),
    _AuthTrapRadUserName_Type()
)
authTrapRadUserName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapRadUserName.setStatus("current")
_AuthTrapSuccessfulAuthCount_Type = Unsigned32
_AuthTrapSuccessfulAuthCount_Object = MibScalar
authTrapSuccessfulAuthCount = _AuthTrapSuccessfulAuthCount_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 68),
    _AuthTrapSuccessfulAuthCount_Type()
)
authTrapSuccessfulAuthCount.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapSuccessfulAuthCount.setStatus("current")
_AuthTrapUnsuccessfulAuthCount_Type = Unsigned32
_AuthTrapUnsuccessfulAuthCount_Object = MibScalar
authTrapUnsuccessfulAuthCount = _AuthTrapUnsuccessfulAuthCount_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 69),
    _AuthTrapUnsuccessfulAuthCount_Type()
)
authTrapUnsuccessfulAuthCount.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authTrapUnsuccessfulAuthCount.setStatus("current")
_SystemBusy_Type = FspR7SystemBusy
_SystemBusy_Object = MibScalar
systemBusy = _SystemBusy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 70),
    _SystemBusy_Type()
)
systemBusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemBusy.setStatus("current")
_SnmpAgentStartupDate_Type = DateAndTime
_SnmpAgentStartupDate_Object = MibScalar
snmpAgentStartupDate = _SnmpAgentStartupDate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 71),
    _SnmpAgentStartupDate_Type()
)
snmpAgentStartupDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpAgentStartupDate.setStatus("current")
_LastErrorStatusCounter_Type = Unsigned32
_LastErrorStatusCounter_Object = MibScalar
lastErrorStatusCounter = _LastErrorStatusCounter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 72),
    _LastErrorStatusCounter_Type()
)
lastErrorStatusCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lastErrorStatusCounter.setStatus("current")
_LastErrorStatus_Type = SnmpAdminString
_LastErrorStatus_Object = MibScalar
lastErrorStatus = _LastErrorStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 73),
    _LastErrorStatus_Type()
)
lastErrorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lastErrorStatus.setStatus("current")
_StartPmSnapshot_Type = FspR7StartPmSnapshot
_StartPmSnapshot_Object = MibScalar
startPmSnapshot = _StartPmSnapshot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 74),
    _StartPmSnapshot_Type()
)
startPmSnapshot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    startPmSnapshot.setStatus("current")
_PmSnapshotStatus_Type = FspR7PmSnapshotStatus
_PmSnapshotStatus_Object = MibScalar
pmSnapshotStatus = _PmSnapshotStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 75),
    _PmSnapshotStatus_Type()
)
pmSnapshotStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pmSnapshotStatus.setStatus("current")
_MaxBackplaneBandwidth_Type = Unsigned32
_MaxBackplaneBandwidth_Object = MibScalar
maxBackplaneBandwidth = _MaxBackplaneBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 76),
    _MaxBackplaneBandwidth_Type()
)
maxBackplaneBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    maxBackplaneBandwidth.setStatus("current")
if mibBuilder.loadTexts:
    maxBackplaneBandwidth.setUnits("kbit/s")
_UsedBackplaneBandwidth_Type = Unsigned32
_UsedBackplaneBandwidth_Object = MibScalar
usedBackplaneBandwidth = _UsedBackplaneBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 77),
    _UsedBackplaneBandwidth_Type()
)
usedBackplaneBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    usedBackplaneBandwidth.setStatus("current")
if mibBuilder.loadTexts:
    usedBackplaneBandwidth.setUnits("kbit/s")
_NeSecurityMode_Type = FspR7SecurityMode
_NeSecurityMode_Object = MibScalar
neSecurityMode = _NeSecurityMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 78),
    _NeSecurityMode_Type()
)
neSecurityMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neSecurityMode.setStatus("current")
_NeSecurityModeCapability_Type = FspR7SecurityModeCaps
_NeSecurityModeCapability_Object = MibScalar
neSecurityModeCapability = _NeSecurityModeCapability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 79),
    _NeSecurityModeCapability_Type()
)
neSecurityModeCapability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neSecurityModeCapability.setStatus("current")


class _NeMinPasswordLength_Type(Unsigned32):
    """Custom type neMinPasswordLength based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 31),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_NeMinPasswordLength_Type.__name__ = "Unsigned32"
_NeMinPasswordLength_Object = MibScalar
neMinPasswordLength = _NeMinPasswordLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 80),
    _NeMinPasswordLength_Type()
)
neMinPasswordLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neMinPasswordLength.setStatus("current")
_NeFiberDetect_Type = FspR7FiberDetect
_NeFiberDetect_Object = MibScalar
neFiberDetect = _NeFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 81),
    _NeFiberDetect_Type()
)
neFiberDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    neFiberDetect.setStatus("current")
_StartOpticalPmSnapshotExport_Type = FspR7StartOpticalPmSnapshotExport
_StartOpticalPmSnapshotExport_Object = MibScalar
startOpticalPmSnapshotExport = _StartOpticalPmSnapshotExport_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 82),
    _StartOpticalPmSnapshotExport_Type()
)
startOpticalPmSnapshotExport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    startOpticalPmSnapshotExport.setStatus("current")
_RemoteAuthentication_Type = FspR7RemoteAuth
_RemoteAuthentication_Object = MibScalar
remoteAuthentication = _RemoteAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 83),
    _RemoteAuthentication_Type()
)
remoteAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteAuthentication.setStatus("current")
_BootloaderAccess_Type = FspR7BootloaderAccess
_BootloaderAccess_Object = MibScalar
bootloaderAccess = _BootloaderAccess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 84),
    _BootloaderAccess_Type()
)
bootloaderAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootloaderAccess.setStatus("current")


class _CraftSessionTimeOut_Type(Unsigned32):
    """Custom type craftSessionTimeOut based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_CraftSessionTimeOut_Type.__name__ = "Unsigned32"
_CraftSessionTimeOut_Object = MibScalar
craftSessionTimeOut = _CraftSessionTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 85),
    _CraftSessionTimeOut_Type()
)
craftSessionTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    craftSessionTimeOut.setStatus("current")
if mibBuilder.loadTexts:
    craftSessionTimeOut.setUnits("sec")


class _SerTelnetLogTimeOut_Type(Unsigned32):
    """Custom type serTelnetLogTimeOut based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_SerTelnetLogTimeOut_Type.__name__ = "Unsigned32"
_SerTelnetLogTimeOut_Object = MibScalar
serTelnetLogTimeOut = _SerTelnetLogTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 86),
    _SerTelnetLogTimeOut_Type()
)
serTelnetLogTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serTelnetLogTimeOut.setStatus("current")
if mibBuilder.loadTexts:
    serTelnetLogTimeOut.setUnits("sec")


class _ShhLogTimeOut_Type(Unsigned32):
    """Custom type shhLogTimeOut based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ShhLogTimeOut_Type.__name__ = "Unsigned32"
_ShhLogTimeOut_Object = MibScalar
shhLogTimeOut = _ShhLogTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 87),
    _ShhLogTimeOut_Type()
)
shhLogTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shhLogTimeOut.setStatus("current")
if mibBuilder.loadTexts:
    shhLogTimeOut.setUnits("sec")


class _WebGuiSessionTimeOut_Type(Unsigned32):
    """Custom type webGuiSessionTimeOut based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_WebGuiSessionTimeOut_Type.__name__ = "Unsigned32"
_WebGuiSessionTimeOut_Object = MibScalar
webGuiSessionTimeOut = _WebGuiSessionTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 88),
    _WebGuiSessionTimeOut_Type()
)
webGuiSessionTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    webGuiSessionTimeOut.setStatus("current")
if mibBuilder.loadTexts:
    webGuiSessionTimeOut.setUnits("sec")


class _Tl1LogTimeOut_Type(Unsigned32):
    """Custom type tl1LogTimeOut based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_Tl1LogTimeOut_Type.__name__ = "Unsigned32"
_Tl1LogTimeOut_Object = MibScalar
tl1LogTimeOut = _Tl1LogTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 89),
    _Tl1LogTimeOut_Type()
)
tl1LogTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tl1LogTimeOut.setStatus("current")
if mibBuilder.loadTexts:
    tl1LogTimeOut.setUnits("sec")


class _SnmpSessionTimeOut_Type(Unsigned32):
    """Custom type snmpSessionTimeOut based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_SnmpSessionTimeOut_Type.__name__ = "Unsigned32"
_SnmpSessionTimeOut_Object = MibScalar
snmpSessionTimeOut = _SnmpSessionTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 1, 90),
    _SnmpSessionTimeOut_Type()
)
snmpSessionTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpSessionTimeOut.setStatus("current")
if mibBuilder.loadTexts:
    snmpSessionTimeOut.setUnits("sec")
_RoutingMIB_ObjectIdentity = ObjectIdentity
routingMIB = _RoutingMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2)
)
_RoutingIpTable_Object = MibTable
routingIpTable = _RoutingIpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1)
)
if mibBuilder.loadTexts:
    routingIpTable.setStatus("current")
_RoutingIpEntry_Object = MibTableRow
routingIpEntry = _RoutingIpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1)
)
routingIpEntry.setIndexNames(
    (0, "FspR7-MIB", "routingIpDestination"),
    (0, "FspR7-MIB", "routingIpMask"),
    (0, "FspR7-MIB", "routingIpGateway"),
    (0, "FspR7-MIB", "routingIpDevice"),
)
if mibBuilder.loadTexts:
    routingIpEntry.setStatus("current")
_RoutingIpDestination_Type = IpAddress
_RoutingIpDestination_Object = MibTableColumn
routingIpDestination = _RoutingIpDestination_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1, 1),
    _RoutingIpDestination_Type()
)
routingIpDestination.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    routingIpDestination.setStatus("current")
_RoutingIpMask_Type = IpAddress
_RoutingIpMask_Object = MibTableColumn
routingIpMask = _RoutingIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1, 2),
    _RoutingIpMask_Type()
)
routingIpMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    routingIpMask.setStatus("current")
_RoutingIpGateway_Type = IpAddress
_RoutingIpGateway_Object = MibTableColumn
routingIpGateway = _RoutingIpGateway_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1, 3),
    _RoutingIpGateway_Type()
)
routingIpGateway.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    routingIpGateway.setStatus("current")
_RoutingIpDevice_Type = EntityIndex
_RoutingIpDevice_Object = MibTableColumn
routingIpDevice = _RoutingIpDevice_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1, 4),
    _RoutingIpDevice_Type()
)
routingIpDevice.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    routingIpDevice.setStatus("current")
_RoutingIpRouteType_Type = FspR7Protocol
_RoutingIpRouteType_Object = MibTableColumn
routingIpRouteType = _RoutingIpRouteType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1, 5),
    _RoutingIpRouteType_Type()
)
routingIpRouteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routingIpRouteType.setStatus("current")


class _RoutingIpRoutingMetric_Type(Unsigned32):
    """Custom type routingIpRoutingMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_RoutingIpRoutingMetric_Type.__name__ = "Unsigned32"
_RoutingIpRoutingMetric_Object = MibTableColumn
routingIpRoutingMetric = _RoutingIpRoutingMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1, 6),
    _RoutingIpRoutingMetric_Type()
)
routingIpRoutingMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routingIpRoutingMetric.setStatus("current")
_RoutingIpRowStatus_Type = RowStatus
_RoutingIpRowStatus_Object = MibTableColumn
routingIpRowStatus = _RoutingIpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 1, 1, 7),
    _RoutingIpRowStatus_Type()
)
routingIpRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routingIpRowStatus.setStatus("current")
_InactiveRoutingIpTable_Object = MibTable
inactiveRoutingIpTable = _InactiveRoutingIpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2)
)
if mibBuilder.loadTexts:
    inactiveRoutingIpTable.setStatus("current")
_InactiveRoutingIpEntry_Object = MibTableRow
inactiveRoutingIpEntry = _InactiveRoutingIpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1)
)
inactiveRoutingIpEntry.setIndexNames(
    (0, "FspR7-MIB", "routingIpDestination"),
    (0, "FspR7-MIB", "routingIpMask"),
    (0, "FspR7-MIB", "routingIpGateway"),
    (0, "FspR7-MIB", "routingIpDevice"),
)
if mibBuilder.loadTexts:
    inactiveRoutingIpEntry.setStatus("current")
_InactiveRoutingIpDestination_Type = IpAddress
_InactiveRoutingIpDestination_Object = MibTableColumn
inactiveRoutingIpDestination = _InactiveRoutingIpDestination_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1, 1),
    _InactiveRoutingIpDestination_Type()
)
inactiveRoutingIpDestination.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inactiveRoutingIpDestination.setStatus("current")
_InactiveRoutingIpMask_Type = IpAddress
_InactiveRoutingIpMask_Object = MibTableColumn
inactiveRoutingIpMask = _InactiveRoutingIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1, 2),
    _InactiveRoutingIpMask_Type()
)
inactiveRoutingIpMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inactiveRoutingIpMask.setStatus("current")
_InactiveRoutingIpGateway_Type = IpAddress
_InactiveRoutingIpGateway_Object = MibTableColumn
inactiveRoutingIpGateway = _InactiveRoutingIpGateway_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1, 3),
    _InactiveRoutingIpGateway_Type()
)
inactiveRoutingIpGateway.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inactiveRoutingIpGateway.setStatus("current")
_InactiveRoutingIpDevice_Type = EntityIndex
_InactiveRoutingIpDevice_Object = MibTableColumn
inactiveRoutingIpDevice = _InactiveRoutingIpDevice_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1, 4),
    _InactiveRoutingIpDevice_Type()
)
inactiveRoutingIpDevice.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inactiveRoutingIpDevice.setStatus("current")
_InactiveRoutingIpRouteType_Type = FspR7Protocol
_InactiveRoutingIpRouteType_Object = MibTableColumn
inactiveRoutingIpRouteType = _InactiveRoutingIpRouteType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1, 5),
    _InactiveRoutingIpRouteType_Type()
)
inactiveRoutingIpRouteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inactiveRoutingIpRouteType.setStatus("current")


class _InactiveRoutingIpRoutingMetric_Type(Unsigned32):
    """Custom type inactiveRoutingIpRoutingMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_InactiveRoutingIpRoutingMetric_Type.__name__ = "Unsigned32"
_InactiveRoutingIpRoutingMetric_Object = MibTableColumn
inactiveRoutingIpRoutingMetric = _InactiveRoutingIpRoutingMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1, 6),
    _InactiveRoutingIpRoutingMetric_Type()
)
inactiveRoutingIpRoutingMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inactiveRoutingIpRoutingMetric.setStatus("current")
_InactiveRoutingIpRowStatus_Type = RowStatus
_InactiveRoutingIpRowStatus_Object = MibTableColumn
inactiveRoutingIpRowStatus = _InactiveRoutingIpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 2, 1, 7),
    _InactiveRoutingIpRowStatus_Type()
)
inactiveRoutingIpRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inactiveRoutingIpRowStatus.setStatus("current")
_KnownHostTable_Object = MibTable
knownHostTable = _KnownHostTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 3)
)
if mibBuilder.loadTexts:
    knownHostTable.setStatus("current")
_KnownHostEntry_Object = MibTableRow
knownHostEntry = _KnownHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 3, 1)
)
knownHostEntry.setIndexNames(
    (0, "FspR7-MIB", "knownHostIP"),
    (0, "FspR7-MIB", "knownHostKeyEncryptAlgorithm"),
)
if mibBuilder.loadTexts:
    knownHostEntry.setStatus("current")
_KnownHostIP_Type = IpAddress
_KnownHostIP_Object = MibTableColumn
knownHostIP = _KnownHostIP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 3, 1, 1),
    _KnownHostIP_Type()
)
knownHostIP.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    knownHostIP.setStatus("current")
_KnownHostKeyEncryptAlgorithm_Type = FspR7SshHostKeyEncryptAlgorithm
_KnownHostKeyEncryptAlgorithm_Object = MibTableColumn
knownHostKeyEncryptAlgorithm = _KnownHostKeyEncryptAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 3, 1, 2),
    _KnownHostKeyEncryptAlgorithm_Type()
)
knownHostKeyEncryptAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    knownHostKeyEncryptAlgorithm.setStatus("current")
_KnownHostRowStatus_Type = RowStatus
_KnownHostRowStatus_Object = MibTableColumn
knownHostRowStatus = _KnownHostRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 3, 1, 3),
    _KnownHostRowStatus_Type()
)
knownHostRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    knownHostRowStatus.setStatus("current")
_KnownHostFingerprint_Type = FspR7SnmpHexString
_KnownHostFingerprint_Object = MibTableColumn
knownHostFingerprint = _KnownHostFingerprint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 2, 3, 1, 4),
    _KnownHostFingerprint_Type()
)
knownHostFingerprint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    knownHostFingerprint.setStatus("current")
_FspUser_ObjectIdentity = ObjectIdentity
fspUser = _FspUser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3)
)
_FspUserSpinLock_Type = Unsigned32
_FspUserSpinLock_Object = MibScalar
fspUserSpinLock = _FspUserSpinLock_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 1),
    _FspUserSpinLock_Type()
)
fspUserSpinLock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserSpinLock.setStatus("current")
_FspUserManagementTable_Object = MibTable
fspUserManagementTable = _FspUserManagementTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10)
)
if mibBuilder.loadTexts:
    fspUserManagementTable.setStatus("current")
_FspUserManagementEntry_Object = MibTableRow
fspUserManagementEntry = _FspUserManagementEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1)
)
fspUserManagementEntry.setIndexNames(
    (0, "FspR7-MIB", "fspUserManagementEngineID"),
    (0, "FspR7-MIB", "fspUserManagementName"),
)
if mibBuilder.loadTexts:
    fspUserManagementEntry.setStatus("current")
_FspUserManagementEngineID_Type = SnmpAdminString
_FspUserManagementEngineID_Object = MibTableColumn
fspUserManagementEngineID = _FspUserManagementEngineID_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 1),
    _FspUserManagementEngineID_Type()
)
fspUserManagementEngineID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fspUserManagementEngineID.setStatus("current")
_FspUserManagementName_Type = SnmpAdminString
_FspUserManagementName_Object = MibTableColumn
fspUserManagementName = _FspUserManagementName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 2),
    _FspUserManagementName_Type()
)
fspUserManagementName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fspUserManagementName.setStatus("current")
_FspUserManagementRowStatus_Type = RowStatus
_FspUserManagementRowStatus_Object = MibTableColumn
fspUserManagementRowStatus = _FspUserManagementRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 3),
    _FspUserManagementRowStatus_Type()
)
fspUserManagementRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementRowStatus.setStatus("current")
_FspUserManagementSecurityName_Type = SnmpAdminString
_FspUserManagementSecurityName_Object = MibTableColumn
fspUserManagementSecurityName = _FspUserManagementSecurityName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 4),
    _FspUserManagementSecurityName_Type()
)
fspUserManagementSecurityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementSecurityName.setStatus("current")
_FspUserManagementPrivilegeLevel_Type = FspR7SnmpPrivLevel
_FspUserManagementPrivilegeLevel_Object = MibTableColumn
fspUserManagementPrivilegeLevel = _FspUserManagementPrivilegeLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 5),
    _FspUserManagementPrivilegeLevel_Type()
)
fspUserManagementPrivilegeLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementPrivilegeLevel.setStatus("current")
_FspUserManagementSecurityLevel_Type = FspR7SnmpSecuLevel
_FspUserManagementSecurityLevel_Object = MibTableColumn
fspUserManagementSecurityLevel = _FspUserManagementSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 6),
    _FspUserManagementSecurityLevel_Type()
)
fspUserManagementSecurityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementSecurityLevel.setStatus("current")
_FspUserManagementAuthPrivKey_Type = SnmpAdminString
_FspUserManagementAuthPrivKey_Object = MibTableColumn
fspUserManagementAuthPrivKey = _FspUserManagementAuthPrivKey_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 7),
    _FspUserManagementAuthPrivKey_Type()
)
fspUserManagementAuthPrivKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementAuthPrivKey.setStatus("current")
_FspUserManagementInternalState_Type = FspR7TL1InternalState
_FspUserManagementInternalState_Object = MibTableColumn
fspUserManagementInternalState = _FspUserManagementInternalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 8),
    _FspUserManagementInternalState_Type()
)
fspUserManagementInternalState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementInternalState.setStatus("current")
_FspUserManagementTl1TimeoutAvailable_Type = FspR7TL1TimoutAvailable
_FspUserManagementTl1TimeoutAvailable_Object = MibTableColumn
fspUserManagementTl1TimeoutAvailable = _FspUserManagementTl1TimeoutAvailable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 9),
    _FspUserManagementTl1TimeoutAvailable_Type()
)
fspUserManagementTl1TimeoutAvailable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementTl1TimeoutAvailable.setStatus("current")


class _FspUserManagementTl1TimeoutValue_Type(Integer32):
    """Custom type fspUserManagementTl1TimeoutValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_FspUserManagementTl1TimeoutValue_Type.__name__ = "Integer32"
_FspUserManagementTl1TimeoutValue_Object = MibTableColumn
fspUserManagementTl1TimeoutValue = _FspUserManagementTl1TimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 10),
    _FspUserManagementTl1TimeoutValue_Type()
)
fspUserManagementTl1TimeoutValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementTl1TimeoutValue.setStatus("current")


class _FspUserManagementSnmpTimeoutValue_Type(Unsigned32):
    """Custom type fspUserManagementSnmpTimeoutValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_FspUserManagementSnmpTimeoutValue_Type.__name__ = "Unsigned32"
_FspUserManagementSnmpTimeoutValue_Object = MibTableColumn
fspUserManagementSnmpTimeoutValue = _FspUserManagementSnmpTimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 11),
    _FspUserManagementSnmpTimeoutValue_Type()
)
fspUserManagementSnmpTimeoutValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementSnmpTimeoutValue.setStatus("current")
if mibBuilder.loadTexts:
    fspUserManagementSnmpTimeoutValue.setUnits("sec")
_FspUserManagementUdpSessionStatus_Type = FspR7SessionStatus
_FspUserManagementUdpSessionStatus_Object = MibTableColumn
fspUserManagementUdpSessionStatus = _FspUserManagementUdpSessionStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 12),
    _FspUserManagementUdpSessionStatus_Type()
)
fspUserManagementUdpSessionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementUdpSessionStatus.setStatus("current")
_FspUserManagementTcpSessionStatus_Type = FspR7SessionStatus
_FspUserManagementTcpSessionStatus_Object = MibTableColumn
fspUserManagementTcpSessionStatus = _FspUserManagementTcpSessionStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 13),
    _FspUserManagementTcpSessionStatus_Type()
)
fspUserManagementTcpSessionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementTcpSessionStatus.setStatus("current")
_FspUserManagementAuthPrivKeyOld_Type = SnmpAdminString
_FspUserManagementAuthPrivKeyOld_Object = MibTableColumn
fspUserManagementAuthPrivKeyOld = _FspUserManagementAuthPrivKeyOld_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 14),
    _FspUserManagementAuthPrivKeyOld_Type()
)
fspUserManagementAuthPrivKeyOld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementAuthPrivKeyOld.setStatus("current")
_FspUserManagementAccountFlag_Type = FspR7AccountFlag
_FspUserManagementAccountFlag_Object = MibTableColumn
fspUserManagementAccountFlag = _FspUserManagementAccountFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 10, 1, 15),
    _FspUserManagementAccountFlag_Type()
)
fspUserManagementAccountFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fspUserManagementAccountFlag.setStatus("current")
_FspUserManagementCapTable_Object = MibTable
fspUserManagementCapTable = _FspUserManagementCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 11)
)
if mibBuilder.loadTexts:
    fspUserManagementCapTable.setStatus("current")
_FspUserManagementCapEntry_Object = MibTableRow
fspUserManagementCapEntry = _FspUserManagementCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 11, 1)
)
fspUserManagementCapEntry.setIndexNames(
    (0, "FspR7-MIB", "fspUserManagementEngineID"),
    (0, "FspR7-MIB", "fspUserManagementName"),
)
if mibBuilder.loadTexts:
    fspUserManagementCapEntry.setStatus("current")
_FspUserManagementCapRowStatus_Type = FspR7RowStatusCaps
_FspUserManagementCapRowStatus_Object = MibTableColumn
fspUserManagementCapRowStatus = _FspUserManagementCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 11, 1, 1),
    _FspUserManagementCapRowStatus_Type()
)
fspUserManagementCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementCapRowStatus.setStatus("current")
_FspUserManagementCapPrivilegeLevel_Type = FspR7SnmpPrivLevelCaps
_FspUserManagementCapPrivilegeLevel_Object = MibTableColumn
fspUserManagementCapPrivilegeLevel = _FspUserManagementCapPrivilegeLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 11, 1, 2),
    _FspUserManagementCapPrivilegeLevel_Type()
)
fspUserManagementCapPrivilegeLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementCapPrivilegeLevel.setStatus("current")
_FspUserManagementCapSecurityLevel_Type = FspR7SnmpSecuLevelCaps
_FspUserManagementCapSecurityLevel_Object = MibTableColumn
fspUserManagementCapSecurityLevel = _FspUserManagementCapSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 11, 1, 3),
    _FspUserManagementCapSecurityLevel_Type()
)
fspUserManagementCapSecurityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementCapSecurityLevel.setStatus("current")
_FspUserManagementCapInternalState_Type = FspR7TL1InternalStateCaps
_FspUserManagementCapInternalState_Object = MibTableColumn
fspUserManagementCapInternalState = _FspUserManagementCapInternalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 11, 1, 4),
    _FspUserManagementCapInternalState_Type()
)
fspUserManagementCapInternalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementCapInternalState.setStatus("current")
_FspUserManagementCapTimeoutAvailable_Type = FspR7TL1TimoutAvailableCaps
_FspUserManagementCapTimeoutAvailable_Object = MibTableColumn
fspUserManagementCapTimeoutAvailable = _FspUserManagementCapTimeoutAvailable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 11, 1, 5),
    _FspUserManagementCapTimeoutAvailable_Type()
)
fspUserManagementCapTimeoutAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementCapTimeoutAvailable.setStatus("current")
_FspUserManagementDefaultsTable_Object = MibTable
fspUserManagementDefaultsTable = _FspUserManagementDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12)
)
if mibBuilder.loadTexts:
    fspUserManagementDefaultsTable.setStatus("current")
_FspUserManagementDefaultsEntry_Object = MibTableRow
fspUserManagementDefaultsEntry = _FspUserManagementDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12, 1)
)
fspUserManagementDefaultsEntry.setIndexNames(
    (0, "FspR7-MIB", "fspUserManagementEngineID"),
    (0, "FspR7-MIB", "fspUserManagementName"),
)
if mibBuilder.loadTexts:
    fspUserManagementDefaultsEntry.setStatus("current")
_FspUserManagementDefaultsPrivilegeLevel_Type = FspR7SnmpPrivLevel
_FspUserManagementDefaultsPrivilegeLevel_Object = MibTableColumn
fspUserManagementDefaultsPrivilegeLevel = _FspUserManagementDefaultsPrivilegeLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12, 1, 1),
    _FspUserManagementDefaultsPrivilegeLevel_Type()
)
fspUserManagementDefaultsPrivilegeLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementDefaultsPrivilegeLevel.setStatus("current")
_FspUserManagementDefaultsSecurityLevel_Type = FspR7SnmpSecuLevel
_FspUserManagementDefaultsSecurityLevel_Object = MibTableColumn
fspUserManagementDefaultsSecurityLevel = _FspUserManagementDefaultsSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12, 1, 2),
    _FspUserManagementDefaultsSecurityLevel_Type()
)
fspUserManagementDefaultsSecurityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementDefaultsSecurityLevel.setStatus("current")
_FspUserManagementDefaultsInternalState_Type = FspR7TL1InternalState
_FspUserManagementDefaultsInternalState_Object = MibTableColumn
fspUserManagementDefaultsInternalState = _FspUserManagementDefaultsInternalState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12, 1, 3),
    _FspUserManagementDefaultsInternalState_Type()
)
fspUserManagementDefaultsInternalState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementDefaultsInternalState.setStatus("current")
_FspUserManagementDefaultsTimeoutAvailable_Type = FspR7TL1TimoutAvailable
_FspUserManagementDefaultsTimeoutAvailable_Object = MibTableColumn
fspUserManagementDefaultsTimeoutAvailable = _FspUserManagementDefaultsTimeoutAvailable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12, 1, 4),
    _FspUserManagementDefaultsTimeoutAvailable_Type()
)
fspUserManagementDefaultsTimeoutAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementDefaultsTimeoutAvailable.setStatus("current")


class _FspUserManagementDefaultsTimeoutValue_Type(Integer32):
    """Custom type fspUserManagementDefaultsTimeoutValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_FspUserManagementDefaultsTimeoutValue_Type.__name__ = "Integer32"
_FspUserManagementDefaultsTimeoutValue_Object = MibTableColumn
fspUserManagementDefaultsTimeoutValue = _FspUserManagementDefaultsTimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12, 1, 5),
    _FspUserManagementDefaultsTimeoutValue_Type()
)
fspUserManagementDefaultsTimeoutValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementDefaultsTimeoutValue.setStatus("current")


class _FspUserManagementDefaultsSnmpTimeoutValue_Type(Unsigned32):
    """Custom type fspUserManagementDefaultsSnmpTimeoutValue based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_FspUserManagementDefaultsSnmpTimeoutValue_Type.__name__ = "Unsigned32"
_FspUserManagementDefaultsSnmpTimeoutValue_Object = MibTableColumn
fspUserManagementDefaultsSnmpTimeoutValue = _FspUserManagementDefaultsSnmpTimeoutValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 3, 12, 1, 6),
    _FspUserManagementDefaultsSnmpTimeoutValue_Type()
)
fspUserManagementDefaultsSnmpTimeoutValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fspUserManagementDefaultsSnmpTimeoutValue.setStatus("current")
if mibBuilder.loadTexts:
    fspUserManagementDefaultsSnmpTimeoutValue.setUnits("sec")
_SrvSyslog_ObjectIdentity = ObjectIdentity
srvSyslog = _SrvSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4)
)
_DeployProvSyslogTable_Object = MibTable
deployProvSyslogTable = _DeployProvSyslogTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 1)
)
if mibBuilder.loadTexts:
    deployProvSyslogTable.setStatus("current")
_DeployProvSyslogEntry_Object = MibTableRow
deployProvSyslogEntry = _DeployProvSyslogEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 1, 1)
)
deployProvSyslogEntry.setIndexNames(
    (0, "FspR7-MIB", "syslogDataIp"),
)
if mibBuilder.loadTexts:
    deployProvSyslogEntry.setStatus("current")
_DeployProvSyslogRowStatus_Type = RowStatus
_DeployProvSyslogRowStatus_Object = MibTableColumn
deployProvSyslogRowStatus = _DeployProvSyslogRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 1, 1, 1),
    _DeployProvSyslogRowStatus_Type()
)
deployProvSyslogRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSyslogRowStatus.setStatus("current")
_DeployProvSyslogStatus_Type = FspR7EnableDisable
_DeployProvSyslogStatus_Object = MibTableColumn
deployProvSyslogStatus = _DeployProvSyslogStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 1, 1, 2),
    _DeployProvSyslogStatus_Type()
)
deployProvSyslogStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSyslogStatus.setStatus("current")
_DeployProvSyslogReportsStatus_Type = FspR7EnableDisable
_DeployProvSyslogReportsStatus_Object = MibTableColumn
deployProvSyslogReportsStatus = _DeployProvSyslogReportsStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 1, 1, 3),
    _DeployProvSyslogReportsStatus_Type()
)
deployProvSyslogReportsStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSyslogReportsStatus.setStatus("current")
_DeployProvSyslogSourceIp_Type = SourceIpAddress
_DeployProvSyslogSourceIp_Object = MibTableColumn
deployProvSyslogSourceIp = _DeployProvSyslogSourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 1, 1, 4),
    _DeployProvSyslogSourceIp_Type()
)
deployProvSyslogSourceIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSyslogSourceIp.setStatus("deprecated")
_SyslogConfigTable_Object = MibTable
syslogConfigTable = _SyslogConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 4)
)
if mibBuilder.loadTexts:
    syslogConfigTable.setStatus("current")
_SyslogConfigEntry_Object = MibTableRow
syslogConfigEntry = _SyslogConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 4, 1)
)
syslogConfigEntry.setIndexNames(
    (0, "FspR7-MIB", "syslogDataIp"),
)
if mibBuilder.loadTexts:
    syslogConfigEntry.setStatus("current")
_SyslogConfigStatus_Type = FspR7EnableDisable
_SyslogConfigStatus_Object = MibTableColumn
syslogConfigStatus = _SyslogConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 4, 1, 1),
    _SyslogConfigStatus_Type()
)
syslogConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogConfigStatus.setStatus("current")
_SyslogConfigReportsStatus_Type = FspR7EnableDisable
_SyslogConfigReportsStatus_Object = MibTableColumn
syslogConfigReportsStatus = _SyslogConfigReportsStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 4, 1, 2),
    _SyslogConfigReportsStatus_Type()
)
syslogConfigReportsStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogConfigReportsStatus.setStatus("current")
_SyslogConfigSourceIp_Type = SourceIpAddress
_SyslogConfigSourceIp_Object = MibTableColumn
syslogConfigSourceIp = _SyslogConfigSourceIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 4, 1, 3),
    _SyslogConfigSourceIp_Type()
)
syslogConfigSourceIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogConfigSourceIp.setStatus("deprecated")
_SyslogDataTable_Object = MibTable
syslogDataTable = _SyslogDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 6)
)
if mibBuilder.loadTexts:
    syslogDataTable.setStatus("current")
_SyslogDataEntry_Object = MibTableRow
syslogDataEntry = _SyslogDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 6, 1)
)
syslogDataEntry.setIndexNames(
    (0, "FspR7-MIB", "syslogDataIp"),
)
if mibBuilder.loadTexts:
    syslogDataEntry.setStatus("current")
_SyslogDataIp_Type = IpAddress
_SyslogDataIp_Object = MibTableColumn
syslogDataIp = _SyslogDataIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 6, 1, 1),
    _SyslogDataIp_Type()
)
syslogDataIp.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    syslogDataIp.setStatus("current")
_SyslogDataIpAddr_Type = IpAddress
_SyslogDataIpAddr_Object = MibTableColumn
syslogDataIpAddr = _SyslogDataIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 4, 6, 1, 2),
    _SyslogDataIpAddr_Type()
)
syslogDataIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    syslogDataIpAddr.setStatus("current")
_ChannelTrace_ObjectIdentity = ObjectIdentity
channelTrace = _ChannelTrace_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5)
)
_NodeChannelTraceTable_Object = MibTable
nodeChannelTraceTable = _NodeChannelTraceTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2)
)
if mibBuilder.loadTexts:
    nodeChannelTraceTable.setStatus("current")
_NodeChannelTraceEntry_Object = MibTableRow
nodeChannelTraceEntry = _NodeChannelTraceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1)
)
nodeChannelTraceEntry.setIndexNames(
    (0, "FspR7-MIB", "nodeChannelTraceStartAid"),
    (0, "FspR7-MIB", "nodeChannelTraceChannelNumber"),
    (0, "FspR7-MIB", "nodeChannelTraceRouteId"),
    (0, "FspR7-MIB", "nodeChannelTraceRouteElementId"),
)
if mibBuilder.loadTexts:
    nodeChannelTraceEntry.setStatus("current")
_NodeChannelTraceStartAid_Type = EntityIndex
_NodeChannelTraceStartAid_Object = MibTableColumn
nodeChannelTraceStartAid = _NodeChannelTraceStartAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 1),
    _NodeChannelTraceStartAid_Type()
)
nodeChannelTraceStartAid.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    nodeChannelTraceStartAid.setStatus("current")
_NodeChannelTraceChannelNumber_Type = FspR7ChannelNumber
_NodeChannelTraceChannelNumber_Object = MibTableColumn
nodeChannelTraceChannelNumber = _NodeChannelTraceChannelNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 2),
    _NodeChannelTraceChannelNumber_Type()
)
nodeChannelTraceChannelNumber.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    nodeChannelTraceChannelNumber.setStatus("current")
_NodeChannelTraceRouteId_Type = FspR7NCTraceId
_NodeChannelTraceRouteId_Object = MibTableColumn
nodeChannelTraceRouteId = _NodeChannelTraceRouteId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 3),
    _NodeChannelTraceRouteId_Type()
)
nodeChannelTraceRouteId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    nodeChannelTraceRouteId.setStatus("current")
_NodeChannelTraceRouteElementId_Type = EntityIndex
_NodeChannelTraceRouteElementId_Object = MibTableColumn
nodeChannelTraceRouteElementId = _NodeChannelTraceRouteElementId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 4),
    _NodeChannelTraceRouteElementId_Type()
)
nodeChannelTraceRouteElementId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    nodeChannelTraceRouteElementId.setStatus("current")
_NodeChannelTraceFromAid_Type = EntityIndex
_NodeChannelTraceFromAid_Object = MibTableColumn
nodeChannelTraceFromAid = _NodeChannelTraceFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 5),
    _NodeChannelTraceFromAid_Type()
)
nodeChannelTraceFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeChannelTraceFromAid.setStatus("current")
_NodeChannelTraceToAid_Type = EntityIndex
_NodeChannelTraceToAid_Object = MibTableColumn
nodeChannelTraceToAid = _NodeChannelTraceToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 6),
    _NodeChannelTraceToAid_Type()
)
nodeChannelTraceToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeChannelTraceToAid.setStatus("current")
_NodeChannelTraceRouteType_Type = FspR7NCTRouteType
_NodeChannelTraceRouteType_Object = MibTableColumn
nodeChannelTraceRouteType = _NodeChannelTraceRouteType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 7),
    _NodeChannelTraceRouteType_Type()
)
nodeChannelTraceRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeChannelTraceRouteType.setStatus("current")
_NodeChannelTraceChannelRx_Type = FspR7ChannelNumber
_NodeChannelTraceChannelRx_Object = MibTableColumn
nodeChannelTraceChannelRx = _NodeChannelTraceChannelRx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 8),
    _NodeChannelTraceChannelRx_Type()
)
nodeChannelTraceChannelRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeChannelTraceChannelRx.setStatus("current")
_NodeChannelTraceChannelTx_Type = FspR7ChannelNumber
_NodeChannelTraceChannelTx_Object = MibTableColumn
nodeChannelTraceChannelTx = _NodeChannelTraceChannelTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 9),
    _NodeChannelTraceChannelTx_Type()
)
nodeChannelTraceChannelTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeChannelTraceChannelTx.setStatus("current")
_NodeChannelTraceFromAidString_Type = SnmpAdminString
_NodeChannelTraceFromAidString_Object = MibTableColumn
nodeChannelTraceFromAidString = _NodeChannelTraceFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 10),
    _NodeChannelTraceFromAidString_Type()
)
nodeChannelTraceFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeChannelTraceFromAidString.setStatus("current")
_NodeChannelTraceToAidString_Type = SnmpAdminString
_NodeChannelTraceToAidString_Object = MibTableColumn
nodeChannelTraceToAidString = _NodeChannelTraceToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 5, 2, 1, 11),
    _NodeChannelTraceToAidString_Type()
)
nodeChannelTraceToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nodeChannelTraceToAidString.setStatus("current")
_DcnOspf_ObjectIdentity = ObjectIdentity
dcnOspf = _DcnOspf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6)
)
_DcnOspfAreaTable_Object = MibTable
dcnOspfAreaTable = _DcnOspfAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 1)
)
if mibBuilder.loadTexts:
    dcnOspfAreaTable.setStatus("current")
_DcnOspfAreaEntry_Object = MibTableRow
dcnOspfAreaEntry = _DcnOspfAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 1, 1)
)
dcnOspfAreaEntry.setIndexNames(
    (0, "FspR7-MIB", "dcnOspfAreaId"),
    (0, "FspR7-MIB", "dcnOspfAreaType"),
)
if mibBuilder.loadTexts:
    dcnOspfAreaEntry.setStatus("current")
_DcnOspfAreaId_Type = IpAddress
_DcnOspfAreaId_Object = MibTableColumn
dcnOspfAreaId = _DcnOspfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 1, 1, 1),
    _DcnOspfAreaId_Type()
)
dcnOspfAreaId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    dcnOspfAreaId.setStatus("current")
_DcnOspfAreaType_Type = FspR7OspfAreaType
_DcnOspfAreaType_Object = MibTableColumn
dcnOspfAreaType = _DcnOspfAreaType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 1, 1, 2),
    _DcnOspfAreaType_Type()
)
dcnOspfAreaType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    dcnOspfAreaType.setStatus("current")
_DcnOspfAreaRowStatus_Type = RowStatus
_DcnOspfAreaRowStatus_Object = MibTableColumn
dcnOspfAreaRowStatus = _DcnOspfAreaRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 1, 1, 3),
    _DcnOspfAreaRowStatus_Type()
)
dcnOspfAreaRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dcnOspfAreaRowStatus.setStatus("current")
_DcnOspfAreaIfListSize_Type = Unsigned32
_DcnOspfAreaIfListSize_Object = MibTableColumn
dcnOspfAreaIfListSize = _DcnOspfAreaIfListSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 1, 1, 4),
    _DcnOspfAreaIfListSize_Type()
)
dcnOspfAreaIfListSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnOspfAreaIfListSize.setStatus("current")


class _DcnOspfAreaStubDefaultMetric_Type(Unsigned32):
    """Custom type dcnOspfAreaStubDefaultMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DcnOspfAreaStubDefaultMetric_Type.__name__ = "Unsigned32"
_DcnOspfAreaStubDefaultMetric_Object = MibTableColumn
dcnOspfAreaStubDefaultMetric = _DcnOspfAreaStubDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 1, 1, 5),
    _DcnOspfAreaStubDefaultMetric_Type()
)
dcnOspfAreaStubDefaultMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    dcnOspfAreaStubDefaultMetric.setStatus("current")
_DcnOspfAreaCapTable_Object = MibTable
dcnOspfAreaCapTable = _DcnOspfAreaCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 2)
)
if mibBuilder.loadTexts:
    dcnOspfAreaCapTable.setStatus("current")
_DcnOspfAreaCapEntry_Object = MibTableRow
dcnOspfAreaCapEntry = _DcnOspfAreaCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 2, 1)
)
dcnOspfAreaCapEntry.setIndexNames(
    (0, "FspR7-MIB", "dcnOspfAreaId"),
    (0, "FspR7-MIB", "dcnOspfAreaType"),
)
if mibBuilder.loadTexts:
    dcnOspfAreaCapEntry.setStatus("current")
_DcnOspfAreaCapRowStatus_Type = FspR7RowStatusCaps
_DcnOspfAreaCapRowStatus_Object = MibTableColumn
dcnOspfAreaCapRowStatus = _DcnOspfAreaCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 2, 1, 1),
    _DcnOspfAreaCapRowStatus_Type()
)
dcnOspfAreaCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnOspfAreaCapRowStatus.setStatus("current")
_DcnOspfAreaCapStubDefaultMetric_Type = FspR7Unsigned32Caps
_DcnOspfAreaCapStubDefaultMetric_Object = MibTableColumn
dcnOspfAreaCapStubDefaultMetric = _DcnOspfAreaCapStubDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 2, 1, 2),
    _DcnOspfAreaCapStubDefaultMetric_Type()
)
dcnOspfAreaCapStubDefaultMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnOspfAreaCapStubDefaultMetric.setStatus("current")
_DcnOspfAreaInterfaceTable_Object = MibTable
dcnOspfAreaInterfaceTable = _DcnOspfAreaInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 3)
)
if mibBuilder.loadTexts:
    dcnOspfAreaInterfaceTable.setStatus("current")
_DcnOspfAreaInterfaceEntry_Object = MibTableRow
dcnOspfAreaInterfaceEntry = _DcnOspfAreaInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 3, 1)
)
dcnOspfAreaInterfaceEntry.setIndexNames(
    (0, "FspR7-MIB", "dcnOspfAreaId"),
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    dcnOspfAreaInterfaceEntry.setStatus("current")
_DcnOspfAreaInterfaceIndexAid_Type = SnmpAdminString
_DcnOspfAreaInterfaceIndexAid_Object = MibTableColumn
dcnOspfAreaInterfaceIndexAid = _DcnOspfAreaInterfaceIndexAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 6, 3, 1, 1),
    _DcnOspfAreaInterfaceIndexAid_Type()
)
dcnOspfAreaInterfaceIndexAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnOspfAreaInterfaceIndexAid.setStatus("current")
_HaMIB_ObjectIdentity = ObjectIdentity
haMIB = _HaMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7)
)
_HighAvailabilityTable_Object = MibTable
highAvailabilityTable = _HighAvailabilityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7, 1)
)
if mibBuilder.loadTexts:
    highAvailabilityTable.setStatus("current")
_HighAvailabilityEntry_Object = MibTableRow
highAvailabilityEntry = _HighAvailabilityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7, 1, 1)
)
highAvailabilityEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    highAvailabilityEntry.setStatus("current")
_HighAvailabilityProtectionIndexAid_Type = EntityIndex
_HighAvailabilityProtectionIndexAid_Object = MibTableColumn
highAvailabilityProtectionIndexAid = _HighAvailabilityProtectionIndexAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7, 1, 1, 1),
    _HighAvailabilityProtectionIndexAid_Type()
)
highAvailabilityProtectionIndexAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    highAvailabilityProtectionIndexAid.setStatus("current")
_HighAvailabilityInhSwitching_Type = FspR7YesNo
_HighAvailabilityInhSwitching_Object = MibTableColumn
highAvailabilityInhSwitching = _HighAvailabilityInhSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7, 1, 1, 2),
    _HighAvailabilityInhSwitching_Type()
)
highAvailabilityInhSwitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    highAvailabilityInhSwitching.setStatus("current")
_HighAvailabilitySwitchToDuplex_Type = FspR7Swdx
_HighAvailabilitySwitchToDuplex_Object = MibTableColumn
highAvailabilitySwitchToDuplex = _HighAvailabilitySwitchToDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7, 1, 1, 3),
    _HighAvailabilitySwitchToDuplex_Type()
)
highAvailabilitySwitchToDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    highAvailabilitySwitchToDuplex.setStatus("current")
_HighAvailabilitySwitchOverCause_Type = FspR7SwitchOverCause
_HighAvailabilitySwitchOverCause_Object = MibTableColumn
highAvailabilitySwitchOverCause = _HighAvailabilitySwitchOverCause_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7, 1, 1, 4),
    _HighAvailabilitySwitchOverCause_Type()
)
highAvailabilitySwitchOverCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    highAvailabilitySwitchOverCause.setStatus("current")
_HighAvailabilitySoftwareVersion_Type = SnmpAdminString
_HighAvailabilitySoftwareVersion_Object = MibTableColumn
highAvailabilitySoftwareVersion = _HighAvailabilitySoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 7, 1, 1, 5),
    _HighAvailabilitySoftwareVersion_Type()
)
highAvailabilitySoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    highAvailabilitySoftwareVersion.setStatus("current")
_Radius_ObjectIdentity = ObjectIdentity
radius = _Radius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8)
)
_RadiusServerTable_Object = MibTable
radiusServerTable = _RadiusServerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1)
)
if mibBuilder.loadTexts:
    radiusServerTable.setStatus("current")
_RadiusServerEntry_Object = MibTableRow
radiusServerEntry = _RadiusServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1)
)
radiusServerEntry.setIndexNames(
    (0, "FspR7-MIB", "radiusServerPriority"),
)
if mibBuilder.loadTexts:
    radiusServerEntry.setStatus("current")


class _RadiusServerPriority_Type(Unsigned32):
    """Custom type radiusServerPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_RadiusServerPriority_Type.__name__ = "Unsigned32"
_RadiusServerPriority_Object = MibTableColumn
radiusServerPriority = _RadiusServerPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 1),
    _RadiusServerPriority_Type()
)
radiusServerPriority.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    radiusServerPriority.setStatus("current")
_RadiusServerIp_Type = IpAddress
_RadiusServerIp_Object = MibTableColumn
radiusServerIp = _RadiusServerIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 2),
    _RadiusServerIp_Type()
)
radiusServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusServerIp.setStatus("current")


class _RadiusServerUdpPort_Type(Unsigned32):
    """Custom type radiusServerUdpPort based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_RadiusServerUdpPort_Type.__name__ = "Unsigned32"
_RadiusServerUdpPort_Object = MibTableColumn
radiusServerUdpPort = _RadiusServerUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 3),
    _RadiusServerUdpPort_Type()
)
radiusServerUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusServerUdpPort.setStatus("current")


class _RadiusServerRadiusTimeout_Type(Unsigned32):
    """Custom type radiusServerRadiusTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_RadiusServerRadiusTimeout_Type.__name__ = "Unsigned32"
_RadiusServerRadiusTimeout_Object = MibTableColumn
radiusServerRadiusTimeout = _RadiusServerRadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 4),
    _RadiusServerRadiusTimeout_Type()
)
radiusServerRadiusTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusServerRadiusTimeout.setStatus("current")
if mibBuilder.loadTexts:
    radiusServerRadiusTimeout.setUnits("s")
_RadiusServerRadiusSecret_Type = SnmpAdminString
_RadiusServerRadiusSecret_Object = MibTableColumn
radiusServerRadiusSecret = _RadiusServerRadiusSecret_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 5),
    _RadiusServerRadiusSecret_Type()
)
radiusServerRadiusSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusServerRadiusSecret.setStatus("current")
_RadiusServerOwnIp_Type = SourceIpAddress
_RadiusServerOwnIp_Object = MibTableColumn
radiusServerOwnIp = _RadiusServerOwnIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 6),
    _RadiusServerOwnIp_Type()
)
radiusServerOwnIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusServerOwnIp.setStatus("current")
_RadiusServerAdminState_Type = FspR7NtpAdminState
_RadiusServerAdminState_Object = MibTableColumn
radiusServerAdminState = _RadiusServerAdminState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 7),
    _RadiusServerAdminState_Type()
)
radiusServerAdminState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusServerAdminState.setStatus("current")
_RadiusServerRowStatus_Type = RowStatus
_RadiusServerRowStatus_Object = MibTableColumn
radiusServerRowStatus = _RadiusServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 8, 1, 1, 8),
    _RadiusServerRowStatus_Type()
)
radiusServerRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusServerRowStatus.setStatus("current")
_SnmpCommunityMIB_ObjectIdentity = ObjectIdentity
snmpCommunityMIB = _SnmpCommunityMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9)
)
_CommunityCmd_Type = FspR7CommunityCmd
_CommunityCmd_Object = MibScalar
communityCmd = _CommunityCmd_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 1),
    _CommunityCmd_Type()
)
communityCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    communityCmd.setStatus("current")
_CommunityName_Type = SnmpAdminString
_CommunityName_Object = MibScalar
communityName = _CommunityName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 2),
    _CommunityName_Type()
)
communityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    communityName.setStatus("current")
_CommunitySecurityName_Type = FspR7SecurityName
_CommunitySecurityName_Object = MibScalar
communitySecurityName = _CommunitySecurityName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 3),
    _CommunitySecurityName_Type()
)
communitySecurityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    communitySecurityName.setStatus("current")
_CommunityIpAddr_Type = IpAddress
_CommunityIpAddr_Object = MibScalar
communityIpAddr = _CommunityIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 4),
    _CommunityIpAddr_Type()
)
communityIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    communityIpAddr.setStatus("current")
_CommunityIpAddrMask_Type = IpAddress
_CommunityIpAddrMask_Object = MibScalar
communityIpAddrMask = _CommunityIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 5),
    _CommunityIpAddrMask_Type()
)
communityIpAddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    communityIpAddrMask.setStatus("current")
_SnmpCommunityTable_Object = MibTable
snmpCommunityTable = _SnmpCommunityTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 10)
)
if mibBuilder.loadTexts:
    snmpCommunityTable.setStatus("current")
_SnmpCommunityEntry_Object = MibTableRow
snmpCommunityEntry = _SnmpCommunityEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 10, 1)
)
snmpCommunityEntry.setIndexNames(
    (0, "FspR7-MIB", "snmpCommunityIndex"),
)
if mibBuilder.loadTexts:
    snmpCommunityEntry.setStatus("current")
_SnmpCommunityIndex_Type = Unsigned32
_SnmpCommunityIndex_Object = MibTableColumn
snmpCommunityIndex = _SnmpCommunityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 10, 1, 1),
    _SnmpCommunityIndex_Type()
)
snmpCommunityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpCommunityIndex.setStatus("current")
_SnmpCommunityName_Type = SnmpAdminString
_SnmpCommunityName_Object = MibTableColumn
snmpCommunityName = _SnmpCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 10, 1, 2),
    _SnmpCommunityName_Type()
)
snmpCommunityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpCommunityName.setStatus("current")
_SnmpCommunitySecurityName_Type = FspR7SecurityName
_SnmpCommunitySecurityName_Object = MibTableColumn
snmpCommunitySecurityName = _SnmpCommunitySecurityName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 10, 1, 3),
    _SnmpCommunitySecurityName_Type()
)
snmpCommunitySecurityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpCommunitySecurityName.setStatus("current")
_SnmpCommunityIpAddr_Type = IpAddress
_SnmpCommunityIpAddr_Object = MibTableColumn
snmpCommunityIpAddr = _SnmpCommunityIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 10, 1, 4),
    _SnmpCommunityIpAddr_Type()
)
snmpCommunityIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpCommunityIpAddr.setStatus("current")
_SnmpCommunityIpAddrMask_Type = IpAddress
_SnmpCommunityIpAddrMask_Object = MibTableColumn
snmpCommunityIpAddrMask = _SnmpCommunityIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 9, 10, 1, 5),
    _SnmpCommunityIpAddrMask_Type()
)
snmpCommunityIpAddrMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpCommunityIpAddrMask.setStatus("current")
_ProfileMIB_ObjectIdentity = ObjectIdentity
profileMIB = _ProfileMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10)
)
_ProfileIndexLock_Type = Unsigned32
_ProfileIndexLock_Object = MibScalar
profileIndexLock = _ProfileIndexLock_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 1),
    _ProfileIndexLock_Type()
)
profileIndexLock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileIndexLock.setStatus("current")
_ProfileName_Type = SnmpAdminString
_ProfileName_Object = MibScalar
profileName = _ProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 2),
    _ProfileName_Type()
)
profileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileName.setStatus("current")
_ProfileForceCopyEnabled_Type = FspR7Overwrite
_ProfileForceCopyEnabled_Object = MibScalar
profileForceCopyEnabled = _ProfileForceCopyEnabled_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 3),
    _ProfileForceCopyEnabled_Type()
)
profileForceCopyEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileForceCopyEnabled.setStatus("current")
_ProfileCmd_Type = FspR7ProfileCmd
_ProfileCmd_Object = MibScalar
profileCmd = _ProfileCmd_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 4),
    _ProfileCmd_Type()
)
profileCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    profileCmd.setStatus("current")
_ConfigProfileTable_Object = MibTable
configProfileTable = _ConfigProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10)
)
if mibBuilder.loadTexts:
    configProfileTable.setStatus("current")
_ConfigProfileEntry_Object = MibTableRow
configProfileEntry = _ConfigProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1)
)
configProfileEntry.setIndexNames(
    (0, "FspR7-MIB", "configProfileId"),
)
if mibBuilder.loadTexts:
    configProfileEntry.setStatus("current")
_ConfigProfileId_Type = Unsigned32
_ConfigProfileId_Object = MibTableColumn
configProfileId = _ConfigProfileId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 1),
    _ConfigProfileId_Type()
)
configProfileId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    configProfileId.setStatus("current")
_ConfigProfileRowStatus_Type = RowStatus
_ConfigProfileRowStatus_Object = MibTableColumn
configProfileRowStatus = _ConfigProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 2),
    _ConfigProfileRowStatus_Type()
)
configProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    configProfileRowStatus.setStatus("current")
_ConfigProfileName_Type = SnmpAdminString
_ConfigProfileName_Object = MibTableColumn
configProfileName = _ConfigProfileName_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 3),
    _ConfigProfileName_Type()
)
configProfileName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    configProfileName.setStatus("current")
_ConfigProfileSourceEntityIndex_Type = EntityIndex
_ConfigProfileSourceEntityIndex_Object = MibTableColumn
configProfileSourceEntityIndex = _ConfigProfileSourceEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 4),
    _ConfigProfileSourceEntityIndex_Type()
)
configProfileSourceEntityIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    configProfileSourceEntityIndex.setStatus("current")
_ConfigProfileSourceEntityExtIndex_Type = SnmpAdminString
_ConfigProfileSourceEntityExtIndex_Object = MibTableColumn
configProfileSourceEntityExtIndex = _ConfigProfileSourceEntityExtIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 5),
    _ConfigProfileSourceEntityExtIndex_Type()
)
configProfileSourceEntityExtIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    configProfileSourceEntityExtIndex.setStatus("current")
_ConfigProfileType_Type = FspR7ProfileType
_ConfigProfileType_Object = MibTableColumn
configProfileType = _ConfigProfileType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 6),
    _ConfigProfileType_Type()
)
configProfileType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configProfileType.setStatus("current")
_ConfigProfileEntityType_Type = FspR7EntityType
_ConfigProfileEntityType_Object = MibTableColumn
configProfileEntityType = _ConfigProfileEntityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 7),
    _ConfigProfileEntityType_Type()
)
configProfileEntityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configProfileEntityType.setStatus("current")
_ConfigProfileMaxAccessLevel_Type = FspR7AccessLevel
_ConfigProfileMaxAccessLevel_Object = MibTableColumn
configProfileMaxAccessLevel = _ConfigProfileMaxAccessLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 10, 1, 8),
    _ConfigProfileMaxAccessLevel_Type()
)
configProfileMaxAccessLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    configProfileMaxAccessLevel.setStatus("current")
_ContentProfileDataTable_Object = MibTable
contentProfileDataTable = _ContentProfileDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11)
)
if mibBuilder.loadTexts:
    contentProfileDataTable.setStatus("current")
_ContentProfileDataEntry_Object = MibTableRow
contentProfileDataEntry = _ContentProfileDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1)
)
contentProfileDataEntry.setIndexNames(
    (0, "FspR7-MIB", "configProfileId"),
)
if mibBuilder.loadTexts:
    contentProfileDataEntry.setStatus("current")
_ContentProfileDataBitrate_Type = Unsigned32
_ContentProfileDataBitrate_Object = MibTableColumn
contentProfileDataBitrate = _ContentProfileDataBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 1),
    _ContentProfileDataBitrate_Type()
)
contentProfileDataBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataBitrate.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataBitrate.setUnits("Mbit/s")
_ContentProfileDataFecType_Type = FspR7FecType
_ContentProfileDataFecType_Object = MibTableColumn
contentProfileDataFecType = _ContentProfileDataFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 2),
    _ContentProfileDataFecType_Type()
)
contentProfileDataFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataFecType.setStatus("current")
_ContentProfileDataLineCoding_Type = FspR7LineCoding
_ContentProfileDataLineCoding_Object = MibTableColumn
contentProfileDataLineCoding = _ContentProfileDataLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 3),
    _ContentProfileDataLineCoding_Type()
)
contentProfileDataLineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataLineCoding.setStatus("current")
_ContentProfileDataFrameFormat_Type = FspR7FrameFormat
_ContentProfileDataFrameFormat_Object = MibTableColumn
contentProfileDataFrameFormat = _ContentProfileDataFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 4),
    _ContentProfileDataFrameFormat_Type()
)
contentProfileDataFrameFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataFrameFormat.setStatus("current")


class _ContentProfileDataOpticalPowerTx_Type(Integer32):
    """Custom type contentProfileDataOpticalPowerTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-9900, 600),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ContentProfileDataOpticalPowerTx_Type.__name__ = "Integer32"
_ContentProfileDataOpticalPowerTx_Object = MibTableColumn
contentProfileDataOpticalPowerTx = _ContentProfileDataOpticalPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 5),
    _ContentProfileDataOpticalPowerTx_Type()
)
contentProfileDataOpticalPowerTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataOpticalPowerTx.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataOpticalPowerTx.setUnits("0.1 dBm")


class _ContentProfileDataOSNRTransmit_Type(Unsigned32):
    """Custom type contentProfileDataOSNRTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ContentProfileDataOSNRTransmit_Type.__name__ = "Unsigned32"
_ContentProfileDataOSNRTransmit_Object = MibTableColumn
contentProfileDataOSNRTransmit = _ContentProfileDataOSNRTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 6),
    _ContentProfileDataOSNRTransmit_Type()
)
contentProfileDataOSNRTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataOSNRTransmit.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataOSNRTransmit.setUnits("dB")


class _ContentProfileDataPMDTransmit_Type(Unsigned32):
    """Custom type contentProfileDataPMDTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ContentProfileDataPMDTransmit_Type.__name__ = "Unsigned32"
_ContentProfileDataPMDTransmit_Object = MibTableColumn
contentProfileDataPMDTransmit = _ContentProfileDataPMDTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 7),
    _ContentProfileDataPMDTransmit_Type()
)
contentProfileDataPMDTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataPMDTransmit.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataPMDTransmit.setUnits("ps")


class _ContentProfileDataChromaticDispersionTx_Type(Integer32):
    """Custom type contentProfileDataChromaticDispersionTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ContentProfileDataChromaticDispersionTx_Type.__name__ = "Integer32"
_ContentProfileDataChromaticDispersionTx_Object = MibTableColumn
contentProfileDataChromaticDispersionTx = _ContentProfileDataChromaticDispersionTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 8),
    _ContentProfileDataChromaticDispersionTx_Type()
)
contentProfileDataChromaticDispersionTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataChromaticDispersionTx.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataChromaticDispersionTx.setUnits("ps/nm")


class _ContentProfileDataMinimumOSNRRcv_Type(Unsigned32):
    """Custom type contentProfileDataMinimumOSNRRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ContentProfileDataMinimumOSNRRcv_Type.__name__ = "Unsigned32"
_ContentProfileDataMinimumOSNRRcv_Object = MibTableColumn
contentProfileDataMinimumOSNRRcv = _ContentProfileDataMinimumOSNRRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 9),
    _ContentProfileDataMinimumOSNRRcv_Type()
)
contentProfileDataMinimumOSNRRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataMinimumOSNRRcv.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataMinimumOSNRRcv.setUnits("dB")


class _ContentProfileDataMinimumOpticalPowerRcv_Type(Integer32):
    """Custom type contentProfileDataMinimumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ContentProfileDataMinimumOpticalPowerRcv_Type.__name__ = "Integer32"
_ContentProfileDataMinimumOpticalPowerRcv_Object = MibTableColumn
contentProfileDataMinimumOpticalPowerRcv = _ContentProfileDataMinimumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 10),
    _ContentProfileDataMinimumOpticalPowerRcv_Type()
)
contentProfileDataMinimumOpticalPowerRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataMinimumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataMinimumOpticalPowerRcv.setUnits("0.1 dBm")


class _ContentProfileDataMaximumOpticalPowerRcv_Type(Integer32):
    """Custom type contentProfileDataMaximumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1000, 1000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ContentProfileDataMaximumOpticalPowerRcv_Type.__name__ = "Integer32"
_ContentProfileDataMaximumOpticalPowerRcv_Object = MibTableColumn
contentProfileDataMaximumOpticalPowerRcv = _ContentProfileDataMaximumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 11),
    _ContentProfileDataMaximumOpticalPowerRcv_Type()
)
contentProfileDataMaximumOpticalPowerRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataMaximumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataMaximumOpticalPowerRcv.setUnits("0.1 dBm")


class _ContentProfileDataMaximumPMDRcv_Type(Unsigned32):
    """Custom type contentProfileDataMaximumPMDRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ContentProfileDataMaximumPMDRcv_Type.__name__ = "Unsigned32"
_ContentProfileDataMaximumPMDRcv_Object = MibTableColumn
contentProfileDataMaximumPMDRcv = _ContentProfileDataMaximumPMDRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 12),
    _ContentProfileDataMaximumPMDRcv_Type()
)
contentProfileDataMaximumPMDRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataMaximumPMDRcv.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataMaximumPMDRcv.setUnits("ps")


class _ContentProfileDataMinChromaticDispersionRcv_Type(Integer32):
    """Custom type contentProfileDataMinChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ContentProfileDataMinChromaticDispersionRcv_Type.__name__ = "Integer32"
_ContentProfileDataMinChromaticDispersionRcv_Object = MibTableColumn
contentProfileDataMinChromaticDispersionRcv = _ContentProfileDataMinChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 13),
    _ContentProfileDataMinChromaticDispersionRcv_Type()
)
contentProfileDataMinChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataMinChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataMinChromaticDispersionRcv.setUnits("ps/nm")


class _ContentProfileDataMaxChromaticDispersionRcv_Type(Integer32):
    """Custom type contentProfileDataMaxChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ContentProfileDataMaxChromaticDispersionRcv_Type.__name__ = "Integer32"
_ContentProfileDataMaxChromaticDispersionRcv_Object = MibTableColumn
contentProfileDataMaxChromaticDispersionRcv = _ContentProfileDataMaxChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 14),
    _ContentProfileDataMaxChromaticDispersionRcv_Type()
)
contentProfileDataMaxChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataMaxChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    contentProfileDataMaxChromaticDispersionRcv.setUnits("ps/nm")
_ContentProfileDataMaxBitErrorRate_Type = FspR7MaxBitErrorRate
_ContentProfileDataMaxBitErrorRate_Object = MibTableColumn
contentProfileDataMaxBitErrorRate = _ContentProfileDataMaxBitErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 2, 10, 11, 1, 15),
    _ContentProfileDataMaxBitErrorRate_Type()
)
contentProfileDataMaxBitErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    contentProfileDataMaxBitErrorRate.setStatus("current")
_TrapMIB_ObjectIdentity = ObjectIdentity
trapMIB = _TrapMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3)
)
_TrapMibPrefix_ObjectIdentity = ObjectIdentity
trapMibPrefix = _TrapMibPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0)
)
_TrapVariables_ObjectIdentity = ObjectIdentity
trapVariables = _TrapVariables_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 1)
)
_ConfigAndStatusMIB_ObjectIdentity = ObjectIdentity
configAndStatusMIB = _ConfigAndStatusMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4)
)
_CommonConfigAndStatus_ObjectIdentity = ObjectIdentity
commonConfigAndStatus = _CommonConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1)
)
_EntityStateTable_Object = MibTable
entityStateTable = _EntityStateTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 1)
)
if mibBuilder.loadTexts:
    entityStateTable.setStatus("current")
_EntityStateEntry_Object = MibTableRow
entityStateEntry = _EntityStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 1, 1)
)
entityStateEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    entityStateEntry.setStatus("current")
_EntityStateAdmin_Type = FspR7AdminState
_EntityStateAdmin_Object = MibTableColumn
entityStateAdmin = _EntityStateAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 1, 1, 1),
    _EntityStateAdmin_Type()
)
entityStateAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    entityStateAdmin.setStatus("current")
_EntityStateOper_Type = FspR7OperState
_EntityStateOper_Object = MibTableColumn
entityStateOper = _EntityStateOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 1, 1, 2),
    _EntityStateOper_Type()
)
entityStateOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityStateOper.setStatus("current")
_EntityStateSecondaryStates_Type = FspR7EntitySecondaryStates
_EntityStateSecondaryStates_Object = MibTableColumn
entityStateSecondaryStates = _EntityStateSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 1, 1, 3),
    _EntityStateSecondaryStates_Type()
)
entityStateSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityStateSecondaryStates.setStatus("current")
_EntityStateCapTable_Object = MibTable
entityStateCapTable = _EntityStateCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 2)
)
if mibBuilder.loadTexts:
    entityStateCapTable.setStatus("current")
_EntityStateCapEntry_Object = MibTableRow
entityStateCapEntry = _EntityStateCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 2, 1)
)
entityStateCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    entityStateCapEntry.setStatus("current")
_EntityStateCapAdmin_Type = FspR7AdminStateCaps
_EntityStateCapAdmin_Object = MibTableColumn
entityStateCapAdmin = _EntityStateCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 2, 1, 1),
    _EntityStateCapAdmin_Type()
)
entityStateCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entityStateCapAdmin.setStatus("current")
_ControlPlaneWdmEntityStateTable_Object = MibTable
controlPlaneWdmEntityStateTable = _ControlPlaneWdmEntityStateTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 3)
)
if mibBuilder.loadTexts:
    controlPlaneWdmEntityStateTable.setStatus("current")
_ControlPlaneWdmEntityStateEntry_Object = MibTableRow
controlPlaneWdmEntityStateEntry = _ControlPlaneWdmEntityStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 3, 1)
)
controlPlaneWdmEntityStateEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneWdmEntityStateEntry.setStatus("current")
_ControlPlaneWdmEntityStateAdmin_Type = FspR7AdminState
_ControlPlaneWdmEntityStateAdmin_Object = MibTableColumn
controlPlaneWdmEntityStateAdmin = _ControlPlaneWdmEntityStateAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 3, 1, 1),
    _ControlPlaneWdmEntityStateAdmin_Type()
)
controlPlaneWdmEntityStateAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmEntityStateAdmin.setStatus("current")
_ControlPlaneWdmEntityStateOper_Type = FspR7OperState
_ControlPlaneWdmEntityStateOper_Object = MibTableColumn
controlPlaneWdmEntityStateOper = _ControlPlaneWdmEntityStateOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 3, 1, 2),
    _ControlPlaneWdmEntityStateOper_Type()
)
controlPlaneWdmEntityStateOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmEntityStateOper.setStatus("current")
_ControlPlaneWdmEntityStateSecondaryStates_Type = FspR7EntitySecondaryStates
_ControlPlaneWdmEntityStateSecondaryStates_Object = MibTableColumn
controlPlaneWdmEntityStateSecondaryStates = _ControlPlaneWdmEntityStateSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 3, 1, 3),
    _ControlPlaneWdmEntityStateSecondaryStates_Type()
)
controlPlaneWdmEntityStateSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmEntityStateSecondaryStates.setStatus("current")
_ControlPlaneEntityStateCapTable_Object = MibTable
controlPlaneEntityStateCapTable = _ControlPlaneEntityStateCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 4)
)
if mibBuilder.loadTexts:
    controlPlaneEntityStateCapTable.setStatus("current")
_ControlPlaneEntityStateCapEntry_Object = MibTableRow
controlPlaneEntityStateCapEntry = _ControlPlaneEntityStateCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 4, 1)
)
controlPlaneEntityStateCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneEntityStateCapEntry.setStatus("current")
_ControlPlaneEntityStateCapAdmin_Type = FspR7AdminStateCaps
_ControlPlaneEntityStateCapAdmin_Object = MibTableColumn
controlPlaneEntityStateCapAdmin = _ControlPlaneEntityStateCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 4, 1, 1),
    _ControlPlaneEntityStateCapAdmin_Type()
)
controlPlaneEntityStateCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEntityStateCapAdmin.setStatus("current")
_DependenciesTable_Object = MibTable
dependenciesTable = _DependenciesTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 5)
)
if mibBuilder.loadTexts:
    dependenciesTable.setStatus("current")
_DependenciesEntry_Object = MibTableRow
dependenciesEntry = _DependenciesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 5, 1)
)
dependenciesEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "dependenciesIndex"),
)
if mibBuilder.loadTexts:
    dependenciesEntry.setStatus("current")
_DependenciesIndex_Type = Unsigned32
_DependenciesIndex_Object = MibTableColumn
dependenciesIndex = _DependenciesIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 5, 1, 1),
    _DependenciesIndex_Type()
)
dependenciesIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dependenciesIndex.setStatus("current")
_DependenciesAid_Type = SnmpAdminString
_DependenciesAid_Object = MibTableColumn
dependenciesAid = _DependenciesAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 5, 1, 2),
    _DependenciesAid_Type()
)
dependenciesAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dependenciesAid.setStatus("current")
_ControlPlaneEthEntityStateTable_Object = MibTable
controlPlaneEthEntityStateTable = _ControlPlaneEthEntityStateTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 6)
)
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateTable.setStatus("current")
_ControlPlaneEthEntityStateEntry_Object = MibTableRow
controlPlaneEthEntityStateEntry = _ControlPlaneEthEntityStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 6, 1)
)
controlPlaneEthEntityStateEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateEntry.setStatus("current")
_ControlPlaneEthEntityStateAdmin_Type = FspR7AdminState
_ControlPlaneEthEntityStateAdmin_Object = MibTableColumn
controlPlaneEthEntityStateAdmin = _ControlPlaneEthEntityStateAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 6, 1, 1),
    _ControlPlaneEthEntityStateAdmin_Type()
)
controlPlaneEthEntityStateAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateAdmin.setStatus("current")
_ControlPlaneEthEntityStateOper_Type = FspR7OperState
_ControlPlaneEthEntityStateOper_Object = MibTableColumn
controlPlaneEthEntityStateOper = _ControlPlaneEthEntityStateOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 6, 1, 2),
    _ControlPlaneEthEntityStateOper_Type()
)
controlPlaneEthEntityStateOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateOper.setStatus("current")
_ControlPlaneEthEntityStateSecondaryStates_Type = FspR7EntitySecondaryStates
_ControlPlaneEthEntityStateSecondaryStates_Object = MibTableColumn
controlPlaneEthEntityStateSecondaryStates = _ControlPlaneEthEntityStateSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 6, 1, 3),
    _ControlPlaneEthEntityStateSecondaryStates_Type()
)
controlPlaneEthEntityStateSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateSecondaryStates.setStatus("current")
_ControlPlaneEthEntityStateCapTable_Object = MibTable
controlPlaneEthEntityStateCapTable = _ControlPlaneEthEntityStateCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 7)
)
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateCapTable.setStatus("current")
_ControlPlaneEthEntityStateCapEntry_Object = MibTableRow
controlPlaneEthEntityStateCapEntry = _ControlPlaneEthEntityStateCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 7, 1)
)
controlPlaneEthEntityStateCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateCapEntry.setStatus("current")
_ControlPlaneEthEntityStateCapAdmin_Type = FspR7AdminStateCaps
_ControlPlaneEthEntityStateCapAdmin_Object = MibTableColumn
controlPlaneEthEntityStateCapAdmin = _ControlPlaneEthEntityStateCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 7, 1, 1),
    _ControlPlaneEthEntityStateCapAdmin_Type()
)
controlPlaneEthEntityStateCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthEntityStateCapAdmin.setStatus("current")
_ControlPlaneOtnEntityStateTable_Object = MibTable
controlPlaneOtnEntityStateTable = _ControlPlaneOtnEntityStateTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 8)
)
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateTable.setStatus("current")
_ControlPlaneOtnEntityStateEntry_Object = MibTableRow
controlPlaneOtnEntityStateEntry = _ControlPlaneOtnEntityStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 8, 1)
)
controlPlaneOtnEntityStateEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateEntry.setStatus("current")
_ControlPlaneOtnEntityStateAdmin_Type = FspR7AdminState
_ControlPlaneOtnEntityStateAdmin_Object = MibTableColumn
controlPlaneOtnEntityStateAdmin = _ControlPlaneOtnEntityStateAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 8, 1, 1),
    _ControlPlaneOtnEntityStateAdmin_Type()
)
controlPlaneOtnEntityStateAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateAdmin.setStatus("current")
_ControlPlaneOtnEntityStateOper_Type = FspR7OperState
_ControlPlaneOtnEntityStateOper_Object = MibTableColumn
controlPlaneOtnEntityStateOper = _ControlPlaneOtnEntityStateOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 8, 1, 2),
    _ControlPlaneOtnEntityStateOper_Type()
)
controlPlaneOtnEntityStateOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateOper.setStatus("current")
_ControlPlaneOtnEntityStateSecondaryStates_Type = FspR7EntitySecondaryStates
_ControlPlaneOtnEntityStateSecondaryStates_Object = MibTableColumn
controlPlaneOtnEntityStateSecondaryStates = _ControlPlaneOtnEntityStateSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 8, 1, 3),
    _ControlPlaneOtnEntityStateSecondaryStates_Type()
)
controlPlaneOtnEntityStateSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateSecondaryStates.setStatus("current")
_ControlPlaneOtnEntityStateCapTable_Object = MibTable
controlPlaneOtnEntityStateCapTable = _ControlPlaneOtnEntityStateCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 9)
)
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateCapTable.setStatus("current")
_ControlPlaneOtnEntityStateCapEntry_Object = MibTableRow
controlPlaneOtnEntityStateCapEntry = _ControlPlaneOtnEntityStateCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 9, 1)
)
controlPlaneOtnEntityStateCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateCapEntry.setStatus("current")
_ControlPlaneOtnEntityStateCapAdmin_Type = FspR7AdminStateCaps
_ControlPlaneOtnEntityStateCapAdmin_Object = MibTableColumn
controlPlaneOtnEntityStateCapAdmin = _ControlPlaneOtnEntityStateCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 9, 1, 1),
    _ControlPlaneOtnEntityStateCapAdmin_Type()
)
controlPlaneOtnEntityStateCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnEntityStateCapAdmin.setStatus("current")
_PtpEntityStateTable_Object = MibTable
ptpEntityStateTable = _PtpEntityStateTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 10)
)
if mibBuilder.loadTexts:
    ptpEntityStateTable.setStatus("current")
_PtpEntityStateEntry_Object = MibTableRow
ptpEntityStateEntry = _PtpEntityStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 10, 1)
)
ptpEntityStateEntry.setIndexNames(
    (0, "ADVA-MIB", "ptpEntityIndex"),
)
if mibBuilder.loadTexts:
    ptpEntityStateEntry.setStatus("current")
_PtpEntityStateAdmin_Type = FspR7AdminState
_PtpEntityStateAdmin_Object = MibTableColumn
ptpEntityStateAdmin = _PtpEntityStateAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 10, 1, 1),
    _PtpEntityStateAdmin_Type()
)
ptpEntityStateAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpEntityStateAdmin.setStatus("current")
_PtpEntityStateOper_Type = FspR7OperState
_PtpEntityStateOper_Object = MibTableColumn
ptpEntityStateOper = _PtpEntityStateOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 10, 1, 2),
    _PtpEntityStateOper_Type()
)
ptpEntityStateOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityStateOper.setStatus("current")
_PtpEntityStateSecondaryStates_Type = FspR7EntitySecondaryStates
_PtpEntityStateSecondaryStates_Object = MibTableColumn
ptpEntityStateSecondaryStates = _PtpEntityStateSecondaryStates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 10, 1, 3),
    _PtpEntityStateSecondaryStates_Type()
)
ptpEntityStateSecondaryStates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityStateSecondaryStates.setStatus("current")
_PtpEntityStateCapTable_Object = MibTable
ptpEntityStateCapTable = _PtpEntityStateCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 11)
)
if mibBuilder.loadTexts:
    ptpEntityStateCapTable.setStatus("current")
_PtpEntityStateCapEntry_Object = MibTableRow
ptpEntityStateCapEntry = _PtpEntityStateCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 11, 1)
)
ptpEntityStateCapEntry.setIndexNames(
    (0, "ADVA-MIB", "ptpEntityIndex"),
)
if mibBuilder.loadTexts:
    ptpEntityStateCapEntry.setStatus("current")
_PtpEntityStateCapAdmin_Type = FspR7AdminStateCaps
_PtpEntityStateCapAdmin_Object = MibTableColumn
ptpEntityStateCapAdmin = _PtpEntityStateCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 11, 1, 1),
    _PtpEntityStateCapAdmin_Type()
)
ptpEntityStateCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityStateCapAdmin.setStatus("current")
_ChildrenTable_Object = MibTable
childrenTable = _ChildrenTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 12)
)
if mibBuilder.loadTexts:
    childrenTable.setStatus("current")
_ChildrenEntry_Object = MibTableRow
childrenEntry = _ChildrenEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 12, 1)
)
childrenEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "childrenId"),
)
if mibBuilder.loadTexts:
    childrenEntry.setStatus("current")
_ChildrenId_Type = Unsigned32
_ChildrenId_Object = MibTableColumn
childrenId = _ChildrenId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 12, 1, 1),
    _ChildrenId_Type()
)
childrenId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    childrenId.setStatus("current")
_ChildrenRowPointer_Type = RowPointer
_ChildrenRowPointer_Object = MibTableColumn
childrenRowPointer = _ChildrenRowPointer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 1, 12, 1, 2),
    _ChildrenRowPointer_Type()
)
childrenRowPointer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    childrenRowPointer.setStatus("current")
_EquipmentConfigAndStatus_ObjectIdentity = ObjectIdentity
equipmentConfigAndStatus = _EquipmentConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2)
)
_ModuleDiagnosticsTable_Object = MibTable
moduleDiagnosticsTable = _ModuleDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1)
)
if mibBuilder.loadTexts:
    moduleDiagnosticsTable.setStatus("current")
_ModuleDiagnosticsEntry_Object = MibTableRow
moduleDiagnosticsEntry = _ModuleDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1)
)
moduleDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    moduleDiagnosticsEntry.setStatus("current")
_ModuleDiagnosticsTemp_Type = Integer32
_ModuleDiagnosticsTemp_Object = MibTableColumn
moduleDiagnosticsTemp = _ModuleDiagnosticsTemp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 1),
    _ModuleDiagnosticsTemp_Type()
)
moduleDiagnosticsTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsTemp.setStatus("current")
if mibBuilder.loadTexts:
    moduleDiagnosticsTemp.setUnits("0.1 degree Celsius")
_ModuleDiagnosticsUpperTempThres_Type = Integer32
_ModuleDiagnosticsUpperTempThres_Object = MibTableColumn
moduleDiagnosticsUpperTempThres = _ModuleDiagnosticsUpperTempThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 2),
    _ModuleDiagnosticsUpperTempThres_Type()
)
moduleDiagnosticsUpperTempThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsUpperTempThres.setStatus("current")
if mibBuilder.loadTexts:
    moduleDiagnosticsUpperTempThres.setUnits("0.1 degree Celsius")
_ModuleDiagnosticsLowerTempThres_Type = Integer32
_ModuleDiagnosticsLowerTempThres_Object = MibTableColumn
moduleDiagnosticsLowerTempThres = _ModuleDiagnosticsLowerTempThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 3),
    _ModuleDiagnosticsLowerTempThres_Type()
)
moduleDiagnosticsLowerTempThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsLowerTempThres.setStatus("current")
if mibBuilder.loadTexts:
    moduleDiagnosticsLowerTempThres.setUnits("0.1 degree Celsius")
_ModuleDiagnosticsCapabilityLevel_Type = FspR7CapInventory
_ModuleDiagnosticsCapabilityLevel_Object = MibTableColumn
moduleDiagnosticsCapabilityLevel = _ModuleDiagnosticsCapabilityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 4),
    _ModuleDiagnosticsCapabilityLevel_Type()
)
moduleDiagnosticsCapabilityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsCapabilityLevel.setStatus("current")
_ModuleDiagnosticsCurrentLowThres_Type = Unsigned32
_ModuleDiagnosticsCurrentLowThres_Object = MibTableColumn
moduleDiagnosticsCurrentLowThres = _ModuleDiagnosticsCurrentLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 5),
    _ModuleDiagnosticsCurrentLowThres_Type()
)
moduleDiagnosticsCurrentLowThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsCurrentLowThres.setStatus("current")
if mibBuilder.loadTexts:
    moduleDiagnosticsCurrentLowThres.setUnits("0.001 A")
_ModuleDiagnosticsCurrentHighThres_Type = Unsigned32
_ModuleDiagnosticsCurrentHighThres_Object = MibTableColumn
moduleDiagnosticsCurrentHighThres = _ModuleDiagnosticsCurrentHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 6),
    _ModuleDiagnosticsCurrentHighThres_Type()
)
moduleDiagnosticsCurrentHighThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsCurrentHighThres.setStatus("current")
if mibBuilder.loadTexts:
    moduleDiagnosticsCurrentHighThres.setUnits("0.001 A")
_ModuleDiagnosticsDescription_Type = SnmpAdminString
_ModuleDiagnosticsDescription_Object = MibTableColumn
moduleDiagnosticsDescription = _ModuleDiagnosticsDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 7),
    _ModuleDiagnosticsDescription_Type()
)
moduleDiagnosticsDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsDescription.setStatus("current")
_ModuleDiagnosticsInventoryDescription_Type = SnmpAdminString
_ModuleDiagnosticsInventoryDescription_Object = MibTableColumn
moduleDiagnosticsInventoryDescription = _ModuleDiagnosticsInventoryDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 1, 1, 8),
    _ModuleDiagnosticsInventoryDescription_Type()
)
moduleDiagnosticsInventoryDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDiagnosticsInventoryDescription.setStatus("current")
_CurrentDiagnosticsTable_Object = MibTable
currentDiagnosticsTable = _CurrentDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 2)
)
if mibBuilder.loadTexts:
    currentDiagnosticsTable.setStatus("current")
_CurrentDiagnosticsEntry_Object = MibTableRow
currentDiagnosticsEntry = _CurrentDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 2, 1)
)
currentDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentDiagnosticsEntry.setStatus("current")
_CurrentDiagnosticsAmpere_Type = Unsigned32
_CurrentDiagnosticsAmpere_Object = MibTableColumn
currentDiagnosticsAmpere = _CurrentDiagnosticsAmpere_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 2, 1, 1),
    _CurrentDiagnosticsAmpere_Type()
)
currentDiagnosticsAmpere.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentDiagnosticsAmpere.setStatus("current")
if mibBuilder.loadTexts:
    currentDiagnosticsAmpere.setUnits("0.001 A")
_CurrentDiagnosticsUpperThres_Type = Unsigned32
_CurrentDiagnosticsUpperThres_Object = MibTableColumn
currentDiagnosticsUpperThres = _CurrentDiagnosticsUpperThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 2, 1, 2),
    _CurrentDiagnosticsUpperThres_Type()
)
currentDiagnosticsUpperThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentDiagnosticsUpperThres.setStatus("current")
if mibBuilder.loadTexts:
    currentDiagnosticsUpperThres.setUnits("0.001 A")
_CurrentDiagnosticsPsuOutputPower_Type = FspR7PsuOutputPower
_CurrentDiagnosticsPsuOutputPower_Object = MibTableColumn
currentDiagnosticsPsuOutputPower = _CurrentDiagnosticsPsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 2, 1, 3),
    _CurrentDiagnosticsPsuOutputPower_Type()
)
currentDiagnosticsPsuOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentDiagnosticsPsuOutputPower.setStatus("current")
_ModuleConfigTable_Object = MibTable
moduleConfigTable = _ModuleConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3)
)
if mibBuilder.loadTexts:
    moduleConfigTable.setStatus("current")
_ModuleConfigEntry_Object = MibTableRow
moduleConfigEntry = _ModuleConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1)
)
moduleConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    moduleConfigEntry.setStatus("current")
_ModuleConfigAlias_Type = SnmpAdminString
_ModuleConfigAlias_Object = MibTableColumn
moduleConfigAlias = _ModuleConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 1),
    _ModuleConfigAlias_Type()
)
moduleConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigAlias.setStatus("current")
_ModuleConfigCapabilityLevelProvision_Type = FspR7CapInventory
_ModuleConfigCapabilityLevelProvision_Object = MibTableColumn
moduleConfigCapabilityLevelProvision = _ModuleConfigCapabilityLevelProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 2),
    _ModuleConfigCapabilityLevelProvision_Type()
)
moduleConfigCapabilityLevelProvision.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigCapabilityLevelProvision.setStatus("current")
_ModuleConfigOutputReset_Type = FspR7TifOutputReset
_ModuleConfigOutputReset_Object = MibTableColumn
moduleConfigOutputReset = _ModuleConfigOutputReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 3),
    _ModuleConfigOutputReset_Type()
)
moduleConfigOutputReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigOutputReset.setStatus("current")
_ModuleConfigScrambling_Type = FspR7Scrambling
_ModuleConfigScrambling_Object = MibTableColumn
moduleConfigScrambling = _ModuleConfigScrambling_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 4),
    _ModuleConfigScrambling_Type()
)
moduleConfigScrambling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigScrambling.setStatus("current")


class _ModuleConfigLagSysPrio_Type(Unsigned32):
    """Custom type moduleConfigLagSysPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ModuleConfigLagSysPrio_Type.__name__ = "Unsigned32"
_ModuleConfigLagSysPrio_Object = MibTableColumn
moduleConfigLagSysPrio = _ModuleConfigLagSysPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 5),
    _ModuleConfigLagSysPrio_Type()
)
moduleConfigLagSysPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigLagSysPrio.setStatus("current")
_ModuleConfigEqlzAdmin_Type = FspR7EqlzAdminState
_ModuleConfigEqlzAdmin_Object = MibTableColumn
moduleConfigEqlzAdmin = _ModuleConfigEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 6),
    _ModuleConfigEqlzAdmin_Type()
)
moduleConfigEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigEqlzAdmin.setStatus("current")
_ModuleConfigInitiateEqualization_Type = FspR7InitEqualization
_ModuleConfigInitiateEqualization_Object = MibTableColumn
moduleConfigInitiateEqualization = _ModuleConfigInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 7),
    _ModuleConfigInitiateEqualization_Type()
)
moduleConfigInitiateEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigInitiateEqualization.setStatus("current")
_ModuleConfigCac_Type = FspR7L2CacEnable
_ModuleConfigCac_Object = MibTableColumn
moduleConfigCac = _ModuleConfigCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 8),
    _ModuleConfigCac_Type()
)
moduleConfigCac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigCac.setStatus("current")
_ModuleConfigFiberDetect_Type = FspR7FiberDetect
_ModuleConfigFiberDetect_Object = MibTableColumn
moduleConfigFiberDetect = _ModuleConfigFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 3, 1, 9),
    _ModuleConfigFiberDetect_Type()
)
moduleConfigFiberDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    moduleConfigFiberDetect.setStatus("current")
_ModuleDataTable_Object = MibTable
moduleDataTable = _ModuleDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4)
)
if mibBuilder.loadTexts:
    moduleDataTable.setStatus("current")
_ModuleDataEntry_Object = MibTableRow
moduleDataEntry = _ModuleDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1)
)
moduleDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    moduleDataEntry.setStatus("current")
_ModuleDataDeploymentScenario_Type = FspR7DeploymentScenario
_ModuleDataDeploymentScenario_Object = MibTableColumn
moduleDataDeploymentScenario = _ModuleDataDeploymentScenario_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 1),
    _ModuleDataDeploymentScenario_Type()
)
moduleDataDeploymentScenario.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataDeploymentScenario.setStatus("current")
_ModuleDataHeight_Type = Unsigned32
_ModuleDataHeight_Object = MibTableColumn
moduleDataHeight = _ModuleDataHeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 2),
    _ModuleDataHeight_Type()
)
moduleDataHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataHeight.setStatus("current")
if mibBuilder.loadTexts:
    moduleDataHeight.setUnits("0.1 HU")
_ModuleDataWidth_Type = Unsigned32
_ModuleDataWidth_Object = MibTableColumn
moduleDataWidth = _ModuleDataWidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 3),
    _ModuleDataWidth_Type()
)
moduleDataWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataWidth.setStatus("current")
if mibBuilder.loadTexts:
    moduleDataWidth.setUnits("0.1 HP")
_ModuleDataNetworkPorts_Type = Unsigned32
_ModuleDataNetworkPorts_Object = MibTableColumn
moduleDataNetworkPorts = _ModuleDataNetworkPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 4),
    _ModuleDataNetworkPorts_Type()
)
moduleDataNetworkPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataNetworkPorts.setStatus("current")


class _ModuleDataClientPorts_Type(Unsigned32):
    """Custom type moduleDataClientPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 96),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ModuleDataClientPorts_Type.__name__ = "Unsigned32"
_ModuleDataClientPorts_Object = MibTableColumn
moduleDataClientPorts = _ModuleDataClientPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 5),
    _ModuleDataClientPorts_Type()
)
moduleDataClientPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataClientPorts.setStatus("current")
_ModuleDataStages_Type = FspR7Stages
_ModuleDataStages_Object = MibTableColumn
moduleDataStages = _ModuleDataStages_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 6),
    _ModuleDataStages_Type()
)
moduleDataStages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataStages.setStatus("current")
_ModuleDataConnectionLocation_Type = Unsigned32
_ModuleDataConnectionLocation_Object = MibTableColumn
moduleDataConnectionLocation = _ModuleDataConnectionLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 7),
    _ModuleDataConnectionLocation_Type()
)
moduleDataConnectionLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataConnectionLocation.setStatus("current")
_ModuleDataInternalPorts_Type = Unsigned32
_ModuleDataInternalPorts_Object = MibTableColumn
moduleDataInternalPorts = _ModuleDataInternalPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 8),
    _ModuleDataInternalPorts_Type()
)
moduleDataInternalPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataInternalPorts.setStatus("current")
_ModuleDataInternalPlugs_Type = FspR7EquipmentTypeCaps
_ModuleDataInternalPlugs_Object = MibTableColumn
moduleDataInternalPlugs = _ModuleDataInternalPlugs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 9),
    _ModuleDataInternalPlugs_Type()
)
moduleDataInternalPlugs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataInternalPlugs.setStatus("current")
_ModuleDataInternalPlugRates_Type = FspR7PlugDataRateCaps
_ModuleDataInternalPlugRates_Object = MibTableColumn
moduleDataInternalPlugRates = _ModuleDataInternalPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 10),
    _ModuleDataInternalPlugRates_Type()
)
moduleDataInternalPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataInternalPlugRates.setStatus("current")
_ModuleDataChannel_Type = FspR7ChannelIdentifierCaps
_ModuleDataChannel_Object = MibTableColumn
moduleDataChannel = _ModuleDataChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 11),
    _ModuleDataChannel_Type()
)
moduleDataChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataChannel.setStatus("current")
_ModuleDataUpgradePorts_Type = Unsigned32
_ModuleDataUpgradePorts_Object = MibTableColumn
moduleDataUpgradePorts = _ModuleDataUpgradePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 12),
    _ModuleDataUpgradePorts_Type()
)
moduleDataUpgradePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataUpgradePorts.setStatus("current")


class _ModuleDataSerialPorts_Type(Unsigned32):
    """Custom type moduleDataSerialPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ModuleDataSerialPorts_Type.__name__ = "Unsigned32"
_ModuleDataSerialPorts_Object = MibTableColumn
moduleDataSerialPorts = _ModuleDataSerialPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 13),
    _ModuleDataSerialPorts_Type()
)
moduleDataSerialPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataSerialPorts.setStatus("current")


class _ModuleDataEccPorts_Type(Unsigned32):
    """Custom type moduleDataEccPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ModuleDataEccPorts_Type.__name__ = "Unsigned32"
_ModuleDataEccPorts_Object = MibTableColumn
moduleDataEccPorts = _ModuleDataEccPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 14),
    _ModuleDataEccPorts_Type()
)
moduleDataEccPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataEccPorts.setStatus("current")
_ModuleDataMaxPowerConsumption_Type = Unsigned32
_ModuleDataMaxPowerConsumption_Object = MibTableColumn
moduleDataMaxPowerConsumption = _ModuleDataMaxPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 15),
    _ModuleDataMaxPowerConsumption_Type()
)
moduleDataMaxPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataMaxPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    moduleDataMaxPowerConsumption.setUnits("0.1 W")
_ModuleDataScuRing_Type = FspR7ScuRing
_ModuleDataScuRing_Object = MibTableColumn
moduleDataScuRing = _ModuleDataScuRing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 16),
    _ModuleDataScuRing_Type()
)
moduleDataScuRing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataScuRing.setStatus("current")
_ModuleDataNetworkPlugs_Type = FspR7EquipmentTypeCaps
_ModuleDataNetworkPlugs_Object = MibTableColumn
moduleDataNetworkPlugs = _ModuleDataNetworkPlugs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 17),
    _ModuleDataNetworkPlugs_Type()
)
moduleDataNetworkPlugs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataNetworkPlugs.setStatus("current")
_ModuleDataMidstagePorts_Type = Unsigned32
_ModuleDataMidstagePorts_Object = MibTableColumn
moduleDataMidstagePorts = _ModuleDataMidstagePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 18),
    _ModuleDataMidstagePorts_Type()
)
moduleDataMidstagePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataMidstagePorts.setStatus("current")
_ModuleDataMode_Type = FspR7TransmissionMode
_ModuleDataMode_Object = MibTableColumn
moduleDataMode = _ModuleDataMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 19),
    _ModuleDataMode_Type()
)
moduleDataMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataMode.setStatus("current")
_ModuleDataRoadmNumber_Type = FspR7RoadmNumber
_ModuleDataRoadmNumber_Object = MibTableColumn
moduleDataRoadmNumber = _ModuleDataRoadmNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 20),
    _ModuleDataRoadmNumber_Type()
)
moduleDataRoadmNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataRoadmNumber.setStatus("current")
_ModuleDataChannelsNumber_Type = FspR7NumberOfChannels
_ModuleDataChannelsNumber_Object = MibTableColumn
moduleDataChannelsNumber = _ModuleDataChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 21),
    _ModuleDataChannelsNumber_Type()
)
moduleDataChannelsNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataChannelsNumber.setStatus("current")
_ModuleDataChannelSpacing_Type = FspR7ChannelSpacing
_ModuleDataChannelSpacing_Object = MibTableColumn
moduleDataChannelSpacing = _ModuleDataChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 22),
    _ModuleDataChannelSpacing_Type()
)
moduleDataChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataChannelSpacing.setStatus("current")
_ModuleDataTransmitChannel_Type = FspR7ChannelIdentifier
_ModuleDataTransmitChannel_Object = MibTableColumn
moduleDataTransmitChannel = _ModuleDataTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 23),
    _ModuleDataTransmitChannel_Type()
)
moduleDataTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataTransmitChannel.setStatus("current")
_ModuleDataCategory_Type = FspR7Category
_ModuleDataCategory_Object = MibTableColumn
moduleDataCategory = _ModuleDataCategory_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 24),
    _ModuleDataCategory_Type()
)
moduleDataCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataCategory.setStatus("current")


class _ModuleDataFanPorts_Type(Unsigned32):
    """Custom type moduleDataFanPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ModuleDataFanPorts_Type.__name__ = "Unsigned32"
_ModuleDataFanPorts_Object = MibTableColumn
moduleDataFanPorts = _ModuleDataFanPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 25),
    _ModuleDataFanPorts_Type()
)
moduleDataFanPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataFanPorts.setStatus("current")


class _ModuleDataLanPorts_Type(Unsigned32):
    """Custom type moduleDataLanPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ModuleDataLanPorts_Type.__name__ = "Unsigned32"
_ModuleDataLanPorts_Object = MibTableColumn
moduleDataLanPorts = _ModuleDataLanPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 26),
    _ModuleDataLanPorts_Type()
)
moduleDataLanPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataLanPorts.setStatus("current")
_ModuleDataMapping_Type = FspR7Mapping
_ModuleDataMapping_Object = MibTableColumn
moduleDataMapping = _ModuleDataMapping_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 27),
    _ModuleDataMapping_Type()
)
moduleDataMapping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataMapping.setStatus("current")
_ModuleDataBand_Type = FspR7OpticalBand
_ModuleDataBand_Object = MibTableColumn
moduleDataBand = _ModuleDataBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 28),
    _ModuleDataBand_Type()
)
moduleDataBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataBand.setStatus("current")
_ModuleDataChannelsProvision_Type = FspR7NumberOfChannels
_ModuleDataChannelsProvision_Object = MibTableColumn
moduleDataChannelsProvision = _ModuleDataChannelsProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 29),
    _ModuleDataChannelsProvision_Type()
)
moduleDataChannelsProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataChannelsProvision.setStatus("current")
_ModuleDataType_Type = FspR7EquipmentType
_ModuleDataType_Object = MibTableColumn
moduleDataType = _ModuleDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 30),
    _ModuleDataType_Type()
)
moduleDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataType.setStatus("current")
_ModuleDataTerminationType_Type = FspR7EquipmentType
_ModuleDataTerminationType_Object = MibTableColumn
moduleDataTerminationType = _ModuleDataTerminationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 31),
    _ModuleDataTerminationType_Type()
)
moduleDataTerminationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataTerminationType.setStatus("current")
_ModuleDataFiberDetectStatus_Type = FspR7FDStatus
_ModuleDataFiberDetectStatus_Object = MibTableColumn
moduleDataFiberDetectStatus = _ModuleDataFiberDetectStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 32),
    _ModuleDataFiberDetectStatus_Type()
)
moduleDataFiberDetectStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataFiberDetectStatus.setStatus("current")
_ModuleDataInternalPlugsReach_Type = FspR7OpticalInterfaceReachCaps
_ModuleDataInternalPlugsReach_Object = MibTableColumn
moduleDataInternalPlugsReach = _ModuleDataInternalPlugsReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 33),
    _ModuleDataInternalPlugsReach_Type()
)
moduleDataInternalPlugsReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataInternalPlugsReach.setStatus("current")
_ModuleDataSpeqAlsConf_Type = FspR7EnableDisable
_ModuleDataSpeqAlsConf_Object = MibTableColumn
moduleDataSpeqAlsConf = _ModuleDataSpeqAlsConf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 35),
    _ModuleDataSpeqAlsConf_Type()
)
moduleDataSpeqAlsConf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataSpeqAlsConf.setStatus("current")
_ModuleDataTrafficDirection_Type = FspR7TrafficDirection
_ModuleDataTrafficDirection_Object = MibTableColumn
moduleDataTrafficDirection = _ModuleDataTrafficDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 36),
    _ModuleDataTrafficDirection_Type()
)
moduleDataTrafficDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataTrafficDirection.setStatus("current")
_ModuleDataOscUsage_Type = FspR7OscUsage
_ModuleDataOscUsage_Object = MibTableColumn
moduleDataOscUsage = _ModuleDataOscUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 4, 1, 37),
    _ModuleDataOscUsage_Type()
)
moduleDataOscUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleDataOscUsage.setStatus("current")
_WdmChannelModuleInventoryTable_Object = MibTable
wdmChannelModuleInventoryTable = _WdmChannelModuleInventoryTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 5)
)
if mibBuilder.loadTexts:
    wdmChannelModuleInventoryTable.setStatus("current")
_WdmChannelModuleInventoryEntry_Object = MibTableRow
wdmChannelModuleInventoryEntry = _WdmChannelModuleInventoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 5, 1)
)
wdmChannelModuleInventoryEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    wdmChannelModuleInventoryEntry.setStatus("current")
_WdmChannelModuleInventoryChannelId_Type = FspR7ChannelIdentifier
_WdmChannelModuleInventoryChannelId_Object = MibTableColumn
wdmChannelModuleInventoryChannelId = _WdmChannelModuleInventoryChannelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 5, 1, 1),
    _WdmChannelModuleInventoryChannelId_Type()
)
wdmChannelModuleInventoryChannelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdmChannelModuleInventoryChannelId.setStatus("current")
_WdmChannelModuleInventoryReach_Type = FspR7OpticalInterfaceReach
_WdmChannelModuleInventoryReach_Object = MibTableColumn
wdmChannelModuleInventoryReach = _WdmChannelModuleInventoryReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 5, 1, 2),
    _WdmChannelModuleInventoryReach_Type()
)
wdmChannelModuleInventoryReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdmChannelModuleInventoryReach.setStatus("current")
_WdmChannelModuleDataTable_Object = MibTable
wdmChannelModuleDataTable = _WdmChannelModuleDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 6)
)
if mibBuilder.loadTexts:
    wdmChannelModuleDataTable.setStatus("current")
_WdmChannelModuleDataEntry_Object = MibTableRow
wdmChannelModuleDataEntry = _WdmChannelModuleDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 6, 1)
)
wdmChannelModuleDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    wdmChannelModuleDataEntry.setStatus("current")
_WdmChannelModuleDataSuppClientPlugRates_Type = FspR7PlugDataRateCaps
_WdmChannelModuleDataSuppClientPlugRates_Object = MibTableColumn
wdmChannelModuleDataSuppClientPlugRates = _WdmChannelModuleDataSuppClientPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 6, 1, 1),
    _WdmChannelModuleDataSuppClientPlugRates_Type()
)
wdmChannelModuleDataSuppClientPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdmChannelModuleDataSuppClientPlugRates.setStatus("current")
_WdmChannelModuleDataSuppNetworkPlugRates_Type = FspR7PlugDataRateCaps
_WdmChannelModuleDataSuppNetworkPlugRates_Object = MibTableColumn
wdmChannelModuleDataSuppNetworkPlugRates = _WdmChannelModuleDataSuppNetworkPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 6, 1, 2),
    _WdmChannelModuleDataSuppNetworkPlugRates_Type()
)
wdmChannelModuleDataSuppNetworkPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdmChannelModuleDataSuppNetworkPlugRates.setStatus("current")
_WdmChannelModuleDataSuppClientPlugTypes_Type = FspR7EquipmentTypeCaps
_WdmChannelModuleDataSuppClientPlugTypes_Object = MibTableColumn
wdmChannelModuleDataSuppClientPlugTypes = _WdmChannelModuleDataSuppClientPlugTypes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 6, 1, 3),
    _WdmChannelModuleDataSuppClientPlugTypes_Type()
)
wdmChannelModuleDataSuppClientPlugTypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdmChannelModuleDataSuppClientPlugTypes.setStatus("current")
_WdmChannelModuleDataSuppNetworkPlugTypes_Type = FspR7EquipmentTypeCaps
_WdmChannelModuleDataSuppNetworkPlugTypes_Object = MibTableColumn
wdmChannelModuleDataSuppNetworkPlugTypes = _WdmChannelModuleDataSuppNetworkPlugTypes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 6, 1, 4),
    _WdmChannelModuleDataSuppNetworkPlugTypes_Type()
)
wdmChannelModuleDataSuppNetworkPlugTypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wdmChannelModuleDataSuppNetworkPlugTypes.setStatus("current")
_PlugInventoryTable_Object = MibTable
plugInventoryTable = _PlugInventoryTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 7)
)
if mibBuilder.loadTexts:
    plugInventoryTable.setStatus("current")
_PlugInventoryEntry_Object = MibTableRow
plugInventoryEntry = _PlugInventoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 7, 1)
)
plugInventoryEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    plugInventoryEntry.setStatus("current")
_PlugInventoryMaxDataRate_Type = FspR7PlugDataRate
_PlugInventoryMaxDataRate_Object = MibTableColumn
plugInventoryMaxDataRate = _PlugInventoryMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 7, 1, 1),
    _PlugInventoryMaxDataRate_Type()
)
plugInventoryMaxDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugInventoryMaxDataRate.setStatus("current")
_PlugInventoryChannelId_Type = FspR7ChannelIdentifier
_PlugInventoryChannelId_Object = MibTableColumn
plugInventoryChannelId = _PlugInventoryChannelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 7, 1, 2),
    _PlugInventoryChannelId_Type()
)
plugInventoryChannelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugInventoryChannelId.setStatus("current")
_PlugInventoryReach_Type = FspR7OpticalInterfaceReach
_PlugInventoryReach_Object = MibTableColumn
plugInventoryReach = _PlugInventoryReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 7, 1, 3),
    _PlugInventoryReach_Type()
)
plugInventoryReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugInventoryReach.setStatus("current")
_PlugDataTable_Object = MibTable
plugDataTable = _PlugDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 8)
)
if mibBuilder.loadTexts:
    plugDataTable.setStatus("current")
_PlugDataEntry_Object = MibTableRow
plugDataEntry = _PlugDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 8, 1)
)
plugDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    plugDataEntry.setStatus("current")
_PlugDataConnectorType_Type = FspR7ConnectorType
_PlugDataConnectorType_Object = MibTableColumn
plugDataConnectorType = _PlugDataConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 8, 1, 1),
    _PlugDataConnectorType_Type()
)
plugDataConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugDataConnectorType.setStatus("current")
_PlugDataFiberType_Type = FspR7OpticalFiberType
_PlugDataFiberType_Object = MibTableColumn
plugDataFiberType = _PlugDataFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 8, 1, 2),
    _PlugDataFiberType_Type()
)
plugDataFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugDataFiberType.setStatus("current")


class _PlugDataLoopbackAttenuation_Type(Unsigned32):
    """Custom type plugDataLoopbackAttenuation based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_PlugDataLoopbackAttenuation_Type.__name__ = "Unsigned32"
_PlugDataLoopbackAttenuation_Object = MibTableColumn
plugDataLoopbackAttenuation = _PlugDataLoopbackAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 8, 1, 3),
    _PlugDataLoopbackAttenuation_Type()
)
plugDataLoopbackAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugDataLoopbackAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    plugDataLoopbackAttenuation.setUnits("0.1 dB")
_PlugDataMaxPowerConsumption_Type = Unsigned32
_PlugDataMaxPowerConsumption_Object = MibTableColumn
plugDataMaxPowerConsumption = _PlugDataMaxPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 8, 1, 4),
    _PlugDataMaxPowerConsumption_Type()
)
plugDataMaxPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugDataMaxPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    plugDataMaxPowerConsumption.setUnits("0.1 W")


class _PlugDataGenericPorts_Type(Unsigned32):
    """Custom type plugDataGenericPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 40),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_PlugDataGenericPorts_Type.__name__ = "Unsigned32"
_PlugDataGenericPorts_Object = MibTableColumn
plugDataGenericPorts = _PlugDataGenericPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 8, 1, 5),
    _PlugDataGenericPorts_Type()
)
plugDataGenericPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    plugDataGenericPorts.setStatus("current")
_ApsConfigTable_Object = MibTable
apsConfigTable = _ApsConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 9)
)
if mibBuilder.loadTexts:
    apsConfigTable.setStatus("current")
_ApsConfigEntry_Object = MibTableRow
apsConfigEntry = _ApsConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 9, 1)
)
apsConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    apsConfigEntry.setStatus("current")
_ApsConfigSDswitching_Type = EnableState
_ApsConfigSDswitching_Object = MibTableColumn
apsConfigSDswitching = _ApsConfigSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 9, 1, 1),
    _ApsConfigSDswitching_Type()
)
apsConfigSDswitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    apsConfigSDswitching.setStatus("current")
_ApsConfigHoldOffTime_Type = ApsHoldoffTime
_ApsConfigHoldOffTime_Object = MibTableColumn
apsConfigHoldOffTime = _ApsConfigHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 9, 1, 2),
    _ApsConfigHoldOffTime_Type()
)
apsConfigHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    apsConfigHoldOffTime.setStatus("current")


class _ApsConfigWaitToRestore_Type(Unsigned32):
    """Custom type apsConfigWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ApsConfigWaitToRestore_Type.__name__ = "Unsigned32"
_ApsConfigWaitToRestore_Object = MibTableColumn
apsConfigWaitToRestore = _ApsConfigWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 9, 1, 3),
    _ApsConfigWaitToRestore_Type()
)
apsConfigWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    apsConfigWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    apsConfigWaitToRestore.setUnits("min")
_ApsProtGroupStatusTable_Object = MibTable
apsProtGroupStatusTable = _ApsProtGroupStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10)
)
if mibBuilder.loadTexts:
    apsProtGroupStatusTable.setStatus("current")
_ApsProtGroupStatusEntry_Object = MibTableRow
apsProtGroupStatusEntry = _ApsProtGroupStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1)
)
apsProtGroupStatusEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    apsProtGroupStatusEntry.setStatus("current")
_ApsProtGroupStatusApsType_Type = ApsType
_ApsProtGroupStatusApsType_Object = MibTableColumn
apsProtGroupStatusApsType = _ApsProtGroupStatusApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1, 1),
    _ApsProtGroupStatusApsType_Type()
)
apsProtGroupStatusApsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtGroupStatusApsType.setStatus("current")
_ApsProtGroupStatusDirection_Type = ApsDirection
_ApsProtGroupStatusDirection_Object = MibTableColumn
apsProtGroupStatusDirection = _ApsProtGroupStatusDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1, 2),
    _ApsProtGroupStatusDirection_Type()
)
apsProtGroupStatusDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtGroupStatusDirection.setStatus("current")
_ApsProtGroupStatusRevertiveMode_Type = ApsRevertMode
_ApsProtGroupStatusRevertiveMode_Object = MibTableColumn
apsProtGroupStatusRevertiveMode = _ApsProtGroupStatusRevertiveMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1, 3),
    _ApsProtGroupStatusRevertiveMode_Type()
)
apsProtGroupStatusRevertiveMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtGroupStatusRevertiveMode.setStatus("current")
_ApsProtGroupStatusProtectionMech_Type = ProtectionMech
_ApsProtGroupStatusProtectionMech_Object = MibTableColumn
apsProtGroupStatusProtectionMech = _ApsProtGroupStatusProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1, 4),
    _ApsProtGroupStatusProtectionMech_Type()
)
apsProtGroupStatusProtectionMech.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtGroupStatusProtectionMech.setStatus("current")
_ApsProtGroupStatusWorkingIndex_Type = EntityIndex
_ApsProtGroupStatusWorkingIndex_Object = MibTableColumn
apsProtGroupStatusWorkingIndex = _ApsProtGroupStatusWorkingIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1, 5),
    _ApsProtGroupStatusWorkingIndex_Type()
)
apsProtGroupStatusWorkingIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtGroupStatusWorkingIndex.setStatus("current")
_ApsProtGroupStatusProtectionIndex_Type = EntityIndex
_ApsProtGroupStatusProtectionIndex_Object = MibTableColumn
apsProtGroupStatusProtectionIndex = _ApsProtGroupStatusProtectionIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1, 6),
    _ApsProtGroupStatusProtectionIndex_Type()
)
apsProtGroupStatusProtectionIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtGroupStatusProtectionIndex.setStatus("current")
_ApsProtGroupStatusProtectionType_Type = FspR7ProtectionType
_ApsProtGroupStatusProtectionType_Object = MibTableColumn
apsProtGroupStatusProtectionType = _ApsProtGroupStatusProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 10, 1, 7),
    _ApsProtGroupStatusProtectionType_Type()
)
apsProtGroupStatusProtectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtGroupStatusProtectionType.setStatus("current")
_ApsProtFacilityConfigTable_Object = MibTable
apsProtFacilityConfigTable = _ApsProtFacilityConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 11)
)
if mibBuilder.loadTexts:
    apsProtFacilityConfigTable.setStatus("current")
_ApsProtFacilityConfigEntry_Object = MibTableRow
apsProtFacilityConfigEntry = _ApsProtFacilityConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 11, 1)
)
apsProtFacilityConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    apsProtFacilityConfigEntry.setStatus("current")
_ApsProtFacilityConfigSwitchCommand_Type = FspR7APSCommand
_ApsProtFacilityConfigSwitchCommand_Object = MibTableColumn
apsProtFacilityConfigSwitchCommand = _ApsProtFacilityConfigSwitchCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 11, 1, 1),
    _ApsProtFacilityConfigSwitchCommand_Type()
)
apsProtFacilityConfigSwitchCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    apsProtFacilityConfigSwitchCommand.setStatus("current")
_ApsProtFacilityConfigInhibitSwitchToProt_Type = FspR7YesNo
_ApsProtFacilityConfigInhibitSwitchToProt_Object = MibTableColumn
apsProtFacilityConfigInhibitSwitchToProt = _ApsProtFacilityConfigInhibitSwitchToProt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 11, 1, 2),
    _ApsProtFacilityConfigInhibitSwitchToProt_Type()
)
apsProtFacilityConfigInhibitSwitchToProt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    apsProtFacilityConfigInhibitSwitchToProt.setStatus("current")
_ApsProtFacilityConfigInhibitSwitchToWork_Type = FspR7YesNo
_ApsProtFacilityConfigInhibitSwitchToWork_Object = MibTableColumn
apsProtFacilityConfigInhibitSwitchToWork = _ApsProtFacilityConfigInhibitSwitchToWork_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 11, 1, 3),
    _ApsProtFacilityConfigInhibitSwitchToWork_Type()
)
apsProtFacilityConfigInhibitSwitchToWork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    apsProtFacilityConfigInhibitSwitchToWork.setStatus("current")
_ShelfDiagnosticsTable_Object = MibTable
shelfDiagnosticsTable = _ShelfDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 12)
)
if mibBuilder.loadTexts:
    shelfDiagnosticsTable.setStatus("current")
_ShelfDiagnosticsEntry_Object = MibTableRow
shelfDiagnosticsEntry = _ShelfDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 12, 1)
)
shelfDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    shelfDiagnosticsEntry.setStatus("current")
_ShelfDiagnosticsPowerConsumption_Type = Unsigned32
_ShelfDiagnosticsPowerConsumption_Object = MibTableColumn
shelfDiagnosticsPowerConsumption = _ShelfDiagnosticsPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 12, 1, 1),
    _ShelfDiagnosticsPowerConsumption_Type()
)
shelfDiagnosticsPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfDiagnosticsPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    shelfDiagnosticsPowerConsumption.setUnits("W")
_ShelfDiagnosticsPowerOutput_Type = Unsigned32
_ShelfDiagnosticsPowerOutput_Object = MibTableColumn
shelfDiagnosticsPowerOutput = _ShelfDiagnosticsPowerOutput_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 12, 1, 2),
    _ShelfDiagnosticsPowerOutput_Type()
)
shelfDiagnosticsPowerOutput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfDiagnosticsPowerOutput.setStatus("current")
if mibBuilder.loadTexts:
    shelfDiagnosticsPowerOutput.setUnits("W")
_ShelfDiagnosticsMaxPowerConsumption_Type = Unsigned32
_ShelfDiagnosticsMaxPowerConsumption_Object = MibTableColumn
shelfDiagnosticsMaxPowerConsumption = _ShelfDiagnosticsMaxPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 12, 1, 3),
    _ShelfDiagnosticsMaxPowerConsumption_Type()
)
shelfDiagnosticsMaxPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfDiagnosticsMaxPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    shelfDiagnosticsMaxPowerConsumption.setUnits("0.1 W")
_DcnTopologyDataTable_Object = MibTable
dcnTopologyDataTable = _DcnTopologyDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 13)
)
if mibBuilder.loadTexts:
    dcnTopologyDataTable.setStatus("current")
_DcnTopologyDataEntry_Object = MibTableRow
dcnTopologyDataEntry = _DcnTopologyDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 13, 1)
)
dcnTopologyDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "dcnTopologyDataIndex"),
)
if mibBuilder.loadTexts:
    dcnTopologyDataEntry.setStatus("current")
_DcnTopologyDataIndex_Type = Unsigned32
_DcnTopologyDataIndex_Object = MibTableColumn
dcnTopologyDataIndex = _DcnTopologyDataIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 13, 1, 1),
    _DcnTopologyDataIndex_Type()
)
dcnTopologyDataIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dcnTopologyDataIndex.setStatus("current")
_DcnTopologyDataNodeIpAddress_Type = IpAddress
_DcnTopologyDataNodeIpAddress_Object = MibTableColumn
dcnTopologyDataNodeIpAddress = _DcnTopologyDataNodeIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 13, 1, 2),
    _DcnTopologyDataNodeIpAddress_Type()
)
dcnTopologyDataNodeIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnTopologyDataNodeIpAddress.setStatus("current")
_DcnTopologyConfigTable_Object = MibTable
dcnTopologyConfigTable = _DcnTopologyConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 14)
)
if mibBuilder.loadTexts:
    dcnTopologyConfigTable.setStatus("current")
_DcnTopologyConfigEntry_Object = MibTableRow
dcnTopologyConfigEntry = _DcnTopologyConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 14, 1)
)
dcnTopologyConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    dcnTopologyConfigEntry.setStatus("current")
_DcnTopologyConfigActivateDetect_Type = FspR7YesNo
_DcnTopologyConfigActivateDetect_Object = MibTableColumn
dcnTopologyConfigActivateDetect = _DcnTopologyConfigActivateDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 14, 1, 1),
    _DcnTopologyConfigActivateDetect_Type()
)
dcnTopologyConfigActivateDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dcnTopologyConfigActivateDetect.setStatus("current")
_DcnTopologyStatusTable_Object = MibTable
dcnTopologyStatusTable = _DcnTopologyStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 15)
)
if mibBuilder.loadTexts:
    dcnTopologyStatusTable.setStatus("current")
_DcnTopologyStatusEntry_Object = MibTableRow
dcnTopologyStatusEntry = _DcnTopologyStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 15, 1)
)
dcnTopologyStatusEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    dcnTopologyStatusEntry.setStatus("current")
_DcnTopologyStatusTopologyType_Type = FspR7TopologyType
_DcnTopologyStatusTopologyType_Object = MibTableColumn
dcnTopologyStatusTopologyType = _DcnTopologyStatusTopologyType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 15, 1, 1),
    _DcnTopologyStatusTopologyType_Type()
)
dcnTopologyStatusTopologyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnTopologyStatusTopologyType.setStatus("current")
_OtdrConfigTable_Object = MibTable
otdrConfigTable = _OtdrConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 16)
)
if mibBuilder.loadTexts:
    otdrConfigTable.setStatus("current")
_OtdrConfigEntry_Object = MibTableRow
otdrConfigEntry = _OtdrConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 16, 1)
)
otdrConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    otdrConfigEntry.setStatus("current")
_OtdrConfigTimePeriod_Type = FspR7OtdrPeriod
_OtdrConfigTimePeriod_Object = MibTableColumn
otdrConfigTimePeriod = _OtdrConfigTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 16, 1, 1),
    _OtdrConfigTimePeriod_Type()
)
otdrConfigTimePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    otdrConfigTimePeriod.setStatus("current")
_OtdrDataTable_Object = MibTable
otdrDataTable = _OtdrDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 17)
)
if mibBuilder.loadTexts:
    otdrDataTable.setStatus("current")
_OtdrDataEntry_Object = MibTableRow
otdrDataEntry = _OtdrDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 17, 1)
)
otdrDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    otdrDataEntry.setStatus("current")
_OtdrDataRemainingTime_Type = Unsigned32
_OtdrDataRemainingTime_Object = MibTableColumn
otdrDataRemainingTime = _OtdrDataRemainingTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 17, 1, 1),
    _OtdrDataRemainingTime_Type()
)
otdrDataRemainingTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    otdrDataRemainingTime.setStatus("current")
if mibBuilder.loadTexts:
    otdrDataRemainingTime.setUnits("Min")
_EdfaConfigTable_Object = MibTable
edfaConfigTable = _EdfaConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 18)
)
if mibBuilder.loadTexts:
    edfaConfigTable.setStatus("current")
_EdfaConfigEntry_Object = MibTableRow
edfaConfigEntry = _EdfaConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 18, 1)
)
edfaConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    edfaConfigEntry.setStatus("current")


class _EdfaConfigTilt_Type(Integer32):
    """Custom type edfaConfigTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_EdfaConfigTilt_Type.__name__ = "Integer32"
_EdfaConfigTilt_Object = MibTableColumn
edfaConfigTilt = _EdfaConfigTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 18, 1, 1),
    _EdfaConfigTilt_Type()
)
edfaConfigTilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    edfaConfigTilt.setStatus("current")
if mibBuilder.loadTexts:
    edfaConfigTilt.setUnits("0.1 dB")
_EdfaConfigGain_Type = FspR7Gain
_EdfaConfigGain_Object = MibTableColumn
edfaConfigGain = _EdfaConfigGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 18, 1, 2),
    _EdfaConfigGain_Type()
)
edfaConfigGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    edfaConfigGain.setStatus("current")


class _EdfaConfigVariableGain_Type(Unsigned32):
    """Custom type edfaConfigVariableGain based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 350),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_EdfaConfigVariableGain_Type.__name__ = "Unsigned32"
_EdfaConfigVariableGain_Object = MibTableColumn
edfaConfigVariableGain = _EdfaConfigVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 18, 1, 3),
    _EdfaConfigVariableGain_Type()
)
edfaConfigVariableGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    edfaConfigVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    edfaConfigVariableGain.setUnits("0.1 dB")
_OpticalAmplifierEquipmentDiagnosticsTable_Object = MibTable
opticalAmplifierEquipmentDiagnosticsTable = _OpticalAmplifierEquipmentDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 19)
)
if mibBuilder.loadTexts:
    opticalAmplifierEquipmentDiagnosticsTable.setStatus("current")
_OpticalAmplifierEquipmentDiagnosticsEntry_Object = MibTableRow
opticalAmplifierEquipmentDiagnosticsEntry = _OpticalAmplifierEquipmentDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 19, 1)
)
opticalAmplifierEquipmentDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalAmplifierEquipmentDiagnosticsEntry.setStatus("current")
_OpticalAmplifierEquipmentDiagnosticsSubTemp_Type = Integer32
_OpticalAmplifierEquipmentDiagnosticsSubTemp_Object = MibTableColumn
opticalAmplifierEquipmentDiagnosticsSubTemp = _OpticalAmplifierEquipmentDiagnosticsSubTemp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 19, 1, 1),
    _OpticalAmplifierEquipmentDiagnosticsSubTemp_Type()
)
opticalAmplifierEquipmentDiagnosticsSubTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierEquipmentDiagnosticsSubTemp.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierEquipmentDiagnosticsSubTemp.setUnits("0.1 degree Celsius")
_OpticalAmplifierEquipmentDiagnosticsUpperSubTempThres_Type = Integer32
_OpticalAmplifierEquipmentDiagnosticsUpperSubTempThres_Object = MibTableColumn
opticalAmplifierEquipmentDiagnosticsUpperSubTempThres = _OpticalAmplifierEquipmentDiagnosticsUpperSubTempThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 19, 1, 2),
    _OpticalAmplifierEquipmentDiagnosticsUpperSubTempThres_Type()
)
opticalAmplifierEquipmentDiagnosticsUpperSubTempThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierEquipmentDiagnosticsUpperSubTempThres.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierEquipmentDiagnosticsUpperSubTempThres.setUnits("0.1 degree Celsius")
_ShelfConfigTable_Object = MibTable
shelfConfigTable = _ShelfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 20)
)
if mibBuilder.loadTexts:
    shelfConfigTable.setStatus("current")
_ShelfConfigEntry_Object = MibTableRow
shelfConfigEntry = _ShelfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 20, 1)
)
shelfConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    shelfConfigEntry.setStatus("current")
_ShelfConfigRack_Type = SnmpAdminString
_ShelfConfigRack_Object = MibTableColumn
shelfConfigRack = _ShelfConfigRack_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 20, 1, 1),
    _ShelfConfigRack_Type()
)
shelfConfigRack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shelfConfigRack.setStatus("current")


class _ShelfConfigRackNumber_Type(Unsigned32):
    """Custom type shelfConfigRackNumber based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ShelfConfigRackNumber_Type.__name__ = "Unsigned32"
_ShelfConfigRackNumber_Object = MibTableColumn
shelfConfigRackNumber = _ShelfConfigRackNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 20, 1, 2),
    _ShelfConfigRackNumber_Type()
)
shelfConfigRackNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shelfConfigRackNumber.setStatus("current")


class _ShelfConfigRackOrder_Type(Unsigned32):
    """Custom type shelfConfigRackOrder based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 45),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ShelfConfigRackOrder_Type.__name__ = "Unsigned32"
_ShelfConfigRackOrder_Object = MibTableColumn
shelfConfigRackOrder = _ShelfConfigRackOrder_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 20, 1, 3),
    _ShelfConfigRackOrder_Type()
)
shelfConfigRackOrder.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shelfConfigRackOrder.setStatus("current")
_DcnTopologyConfigCapTable_Object = MibTable
dcnTopologyConfigCapTable = _DcnTopologyConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 21)
)
if mibBuilder.loadTexts:
    dcnTopologyConfigCapTable.setStatus("current")
_DcnTopologyConfigCapEntry_Object = MibTableRow
dcnTopologyConfigCapEntry = _DcnTopologyConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 21, 1)
)
dcnTopologyConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    dcnTopologyConfigCapEntry.setStatus("current")
_DcnTopologyConfigCapActivateDetect_Type = FspR7YesNoCaps
_DcnTopologyConfigCapActivateDetect_Object = MibTableColumn
dcnTopologyConfigCapActivateDetect = _DcnTopologyConfigCapActivateDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 21, 1, 1),
    _DcnTopologyConfigCapActivateDetect_Type()
)
dcnTopologyConfigCapActivateDetect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dcnTopologyConfigCapActivateDetect.setStatus("current")
_LanIpDataTable_Object = MibTable
lanIpDataTable = _LanIpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 22)
)
if mibBuilder.loadTexts:
    lanIpDataTable.setStatus("current")
_LanIpDataEntry_Object = MibTableRow
lanIpDataEntry = _LanIpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 22, 1)
)
lanIpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    lanIpDataEntry.setStatus("current")
_LanIpDataOscmMembers_Type = SnmpAdminString
_LanIpDataOscmMembers_Object = MibTableColumn
lanIpDataOscmMembers = _LanIpDataOscmMembers_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 22, 1, 1),
    _LanIpDataOscmMembers_Type()
)
lanIpDataOscmMembers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lanIpDataOscmMembers.setStatus("current")
_ERoadmConfigTable_Object = MibTable
eRoadmConfigTable = _ERoadmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 23)
)
if mibBuilder.loadTexts:
    eRoadmConfigTable.setStatus("current")
_ERoadmConfigEntry_Object = MibTableRow
eRoadmConfigEntry = _ERoadmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 23, 1)
)
eRoadmConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    eRoadmConfigEntry.setStatus("current")


class _ERoadmConfigOpticalSetPoint_Type(Integer32):
    """Custom type eRoadmConfigOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ERoadmConfigOpticalSetPoint_Type.__name__ = "Integer32"
_ERoadmConfigOpticalSetPoint_Object = MibTableColumn
eRoadmConfigOpticalSetPoint = _ERoadmConfigOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 23, 1, 1),
    _ERoadmConfigOpticalSetPoint_Type()
)
eRoadmConfigOpticalSetPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    eRoadmConfigOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmConfigOpticalSetPoint.setUnits("0.1 dBm")


class _ERoadmConfigOffset_Type(Integer32):
    """Custom type eRoadmConfigOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ERoadmConfigOffset_Type.__name__ = "Integer32"
_ERoadmConfigOffset_Object = MibTableColumn
eRoadmConfigOffset = _ERoadmConfigOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 23, 1, 2),
    _ERoadmConfigOffset_Type()
)
eRoadmConfigOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    eRoadmConfigOffset.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmConfigOffset.setUnits("0.1 dB")


class _ERoadmConfigTilt_Type(Integer32):
    """Custom type eRoadmConfigTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ERoadmConfigTilt_Type.__name__ = "Integer32"
_ERoadmConfigTilt_Object = MibTableColumn
eRoadmConfigTilt = _ERoadmConfigTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 23, 1, 3),
    _ERoadmConfigTilt_Type()
)
eRoadmConfigTilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    eRoadmConfigTilt.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmConfigTilt.setUnits("0.1 dB")
_ERoadmConfigInitiateEqualization_Type = FspR7InitEqualization
_ERoadmConfigInitiateEqualization_Object = MibTableColumn
eRoadmConfigInitiateEqualization = _ERoadmConfigInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 23, 1, 4),
    _ERoadmConfigInitiateEqualization_Type()
)
eRoadmConfigInitiateEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    eRoadmConfigInitiateEqualization.setStatus("current")
_ERoadmDataTable_Object = MibTable
eRoadmDataTable = _ERoadmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 24)
)
if mibBuilder.loadTexts:
    eRoadmDataTable.setStatus("current")
_ERoadmDataEntry_Object = MibTableRow
eRoadmDataEntry = _ERoadmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 24, 1)
)
eRoadmDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    eRoadmDataEntry.setStatus("current")


class _ERoadmDataSumTransmited_Type(Unsigned32):
    """Custom type eRoadmDataSumTransmited based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 96),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ERoadmDataSumTransmited_Type.__name__ = "Unsigned32"
_ERoadmDataSumTransmited_Object = MibTableColumn
eRoadmDataSumTransmited = _ERoadmDataSumTransmited_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 24, 1, 1),
    _ERoadmDataSumTransmited_Type()
)
eRoadmDataSumTransmited.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmDataSumTransmited.setStatus("current")


class _ERoadmDataSumReceived_Type(Unsigned32):
    """Custom type eRoadmDataSumReceived based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 80),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ERoadmDataSumReceived_Type.__name__ = "Unsigned32"
_ERoadmDataSumReceived_Object = MibTableColumn
eRoadmDataSumReceived = _ERoadmDataSumReceived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 24, 1, 2),
    _ERoadmDataSumReceived_Type()
)
eRoadmDataSumReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmDataSumReceived.setStatus("current")
_ERoadmDataConnectionState_Type = FspR7ConnectState
_ERoadmDataConnectionState_Object = MibTableColumn
eRoadmDataConnectionState = _ERoadmDataConnectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 24, 1, 3),
    _ERoadmDataConnectionState_Type()
)
eRoadmDataConnectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmDataConnectionState.setStatus("current")
_ERoadmInfoTable_Object = MibTable
eRoadmInfoTable = _ERoadmInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25)
)
if mibBuilder.loadTexts:
    eRoadmInfoTable.setStatus("current")
_ERoadmInfoEntry_Object = MibTableRow
eRoadmInfoEntry = _ERoadmInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1)
)
eRoadmInfoEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    eRoadmInfoEntry.setStatus("current")
_ERoadmInfoNetworkPorts_Type = Unsigned32
_ERoadmInfoNetworkPorts_Object = MibTableColumn
eRoadmInfoNetworkPorts = _ERoadmInfoNetworkPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 1),
    _ERoadmInfoNetworkPorts_Type()
)
eRoadmInfoNetworkPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoNetworkPorts.setStatus("current")


class _ERoadmInfoClientPorts_Type(Unsigned32):
    """Custom type eRoadmInfoClientPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 96),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ERoadmInfoClientPorts_Type.__name__ = "Unsigned32"
_ERoadmInfoClientPorts_Object = MibTableColumn
eRoadmInfoClientPorts = _ERoadmInfoClientPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 2),
    _ERoadmInfoClientPorts_Type()
)
eRoadmInfoClientPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoClientPorts.setStatus("current")
_ERoadmInfoInternalPorts_Type = Unsigned32
_ERoadmInfoInternalPorts_Object = MibTableColumn
eRoadmInfoInternalPorts = _ERoadmInfoInternalPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 3),
    _ERoadmInfoInternalPorts_Type()
)
eRoadmInfoInternalPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoInternalPorts.setStatus("current")
_ERoadmInfoInternalPlugs_Type = FspR7EquipmentTypeCaps
_ERoadmInfoInternalPlugs_Object = MibTableColumn
eRoadmInfoInternalPlugs = _ERoadmInfoInternalPlugs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 4),
    _ERoadmInfoInternalPlugs_Type()
)
eRoadmInfoInternalPlugs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoInternalPlugs.setStatus("current")
_ERoadmInfoInternalPlugRates_Type = FspR7PlugDataRateCaps
_ERoadmInfoInternalPlugRates_Object = MibTableColumn
eRoadmInfoInternalPlugRates = _ERoadmInfoInternalPlugRates_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 5),
    _ERoadmInfoInternalPlugRates_Type()
)
eRoadmInfoInternalPlugRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoInternalPlugRates.setStatus("current")
_ERoadmInfoChannel_Type = FspR7ChannelIdentifierCaps
_ERoadmInfoChannel_Object = MibTableColumn
eRoadmInfoChannel = _ERoadmInfoChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 6),
    _ERoadmInfoChannel_Type()
)
eRoadmInfoChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoChannel.setStatus("current")
_ERoadmInfoShelfHeight_Type = Unsigned32
_ERoadmInfoShelfHeight_Object = MibTableColumn
eRoadmInfoShelfHeight = _ERoadmInfoShelfHeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 7),
    _ERoadmInfoShelfHeight_Type()
)
eRoadmInfoShelfHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoShelfHeight.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmInfoShelfHeight.setUnits("HU")
_ERoadmInfoUpgradePorts_Type = Unsigned32
_ERoadmInfoUpgradePorts_Object = MibTableColumn
eRoadmInfoUpgradePorts = _ERoadmInfoUpgradePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 8),
    _ERoadmInfoUpgradePorts_Type()
)
eRoadmInfoUpgradePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoUpgradePorts.setStatus("current")
_ERoadmInfoMaxPowerConsumption_Type = Unsigned32
_ERoadmInfoMaxPowerConsumption_Object = MibTableColumn
eRoadmInfoMaxPowerConsumption = _ERoadmInfoMaxPowerConsumption_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 9),
    _ERoadmInfoMaxPowerConsumption_Type()
)
eRoadmInfoMaxPowerConsumption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoMaxPowerConsumption.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmInfoMaxPowerConsumption.setUnits("0.1 W")
_ERoadmInfoScuRing_Type = FspR7ScuRing
_ERoadmInfoScuRing_Object = MibTableColumn
eRoadmInfoScuRing = _ERoadmInfoScuRing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 10),
    _ERoadmInfoScuRing_Type()
)
eRoadmInfoScuRing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoScuRing.setStatus("current")
_ERoadmInfoChannelSpacing_Type = FspR7ChannelSpacing
_ERoadmInfoChannelSpacing_Object = MibTableColumn
eRoadmInfoChannelSpacing = _ERoadmInfoChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 25, 1, 11),
    _ERoadmInfoChannelSpacing_Type()
)
eRoadmInfoChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmInfoChannelSpacing.setStatus("current")
_ShelfInfoTable_Object = MibTable
shelfInfoTable = _ShelfInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26)
)
if mibBuilder.loadTexts:
    shelfInfoTable.setStatus("current")
_ShelfInfoEntry_Object = MibTableRow
shelfInfoEntry = _ShelfInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1)
)
shelfInfoEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    shelfInfoEntry.setStatus("current")


class _ShelfInfoStandardSlots_Type(Unsigned32):
    """Custom type shelfInfoStandardSlots based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 20),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ShelfInfoStandardSlots_Type.__name__ = "Unsigned32"
_ShelfInfoStandardSlots_Object = MibTableColumn
shelfInfoStandardSlots = _ShelfInfoStandardSlots_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 1),
    _ShelfInfoStandardSlots_Type()
)
shelfInfoStandardSlots.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoStandardSlots.setStatus("current")
_ShelfInfoShelfHeight_Type = Unsigned32
_ShelfInfoShelfHeight_Object = MibTableColumn
shelfInfoShelfHeight = _ShelfInfoShelfHeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 2),
    _ShelfInfoShelfHeight_Type()
)
shelfInfoShelfHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoShelfHeight.setStatus("current")
if mibBuilder.loadTexts:
    shelfInfoShelfHeight.setUnits("HU")
_ShelfInfoStandardSlotHeight_Type = Unsigned32
_ShelfInfoStandardSlotHeight_Object = MibTableColumn
shelfInfoStandardSlotHeight = _ShelfInfoStandardSlotHeight_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 3),
    _ShelfInfoStandardSlotHeight_Type()
)
shelfInfoStandardSlotHeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoStandardSlotHeight.setStatus("current")
if mibBuilder.loadTexts:
    shelfInfoStandardSlotHeight.setUnits("HU")
_ShelfInfoNetworkPorts_Type = Unsigned32
_ShelfInfoNetworkPorts_Object = MibTableColumn
shelfInfoNetworkPorts = _ShelfInfoNetworkPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 4),
    _ShelfInfoNetworkPorts_Type()
)
shelfInfoNetworkPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoNetworkPorts.setStatus("current")


class _ShelfInfoClientPorts_Type(Unsigned32):
    """Custom type shelfInfoClientPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 96),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ShelfInfoClientPorts_Type.__name__ = "Unsigned32"
_ShelfInfoClientPorts_Object = MibTableColumn
shelfInfoClientPorts = _ShelfInfoClientPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 5),
    _ShelfInfoClientPorts_Type()
)
shelfInfoClientPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoClientPorts.setStatus("current")
_ShelfInfoInternalPorts_Type = Unsigned32
_ShelfInfoInternalPorts_Object = MibTableColumn
shelfInfoInternalPorts = _ShelfInfoInternalPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 6),
    _ShelfInfoInternalPorts_Type()
)
shelfInfoInternalPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoInternalPorts.setStatus("current")
_ShelfInfoUpgradePorts_Type = Unsigned32
_ShelfInfoUpgradePorts_Object = MibTableColumn
shelfInfoUpgradePorts = _ShelfInfoUpgradePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 7),
    _ShelfInfoUpgradePorts_Type()
)
shelfInfoUpgradePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoUpgradePorts.setStatus("current")


class _ShelfInfoOscPorts_Type(Unsigned32):
    """Custom type shelfInfoOscPorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ShelfInfoOscPorts_Type.__name__ = "Unsigned32"
_ShelfInfoOscPorts_Object = MibTableColumn
shelfInfoOscPorts = _ShelfInfoOscPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 8),
    _ShelfInfoOscPorts_Type()
)
shelfInfoOscPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoOscPorts.setStatus("current")
_ShelfInfoOscChannel_Type = FspR7OscChannel
_ShelfInfoOscChannel_Object = MibTableColumn
shelfInfoOscChannel = _ShelfInfoOscChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 9),
    _ShelfInfoOscChannel_Type()
)
shelfInfoOscChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoOscChannel.setStatus("current")
_ShelfInfoOmBand_Type = FspR7OpticalBand
_ShelfInfoOmBand_Object = MibTableColumn
shelfInfoOmBand = _ShelfInfoOmBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 10),
    _ShelfInfoOmBand_Type()
)
shelfInfoOmBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoOmBand.setStatus("current")
_ShelfInfoShelfId_Type = Unsigned32
_ShelfInfoShelfId_Object = MibTableColumn
shelfInfoShelfId = _ShelfInfoShelfId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 11),
    _ShelfInfoShelfId_Type()
)
shelfInfoShelfId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    shelfInfoShelfId.setStatus("current")
_ShelfInfoChannelBandwidth_Type = FspR7ChannelBandwidth
_ShelfInfoChannelBandwidth_Object = MibTableColumn
shelfInfoChannelBandwidth = _ShelfInfoChannelBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 26, 1, 12),
    _ShelfInfoChannelBandwidth_Type()
)
shelfInfoChannelBandwidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    shelfInfoChannelBandwidth.setStatus("current")
_ERoadmConfigCapTable_Object = MibTable
eRoadmConfigCapTable = _ERoadmConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 27)
)
if mibBuilder.loadTexts:
    eRoadmConfigCapTable.setStatus("current")
_ERoadmConfigCapEntry_Object = MibTableRow
eRoadmConfigCapEntry = _ERoadmConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 27, 1)
)
eRoadmConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    eRoadmConfigCapEntry.setStatus("current")
_ERoadmConfigCapOpticalSetPoint_Type = FspR7Integer32Caps
_ERoadmConfigCapOpticalSetPoint_Object = MibTableColumn
eRoadmConfigCapOpticalSetPoint = _ERoadmConfigCapOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 27, 1, 1),
    _ERoadmConfigCapOpticalSetPoint_Type()
)
eRoadmConfigCapOpticalSetPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmConfigCapOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmConfigCapOpticalSetPoint.setUnits("0.1 dBm")
_ERoadmConfigCapOffset_Type = FspR7Integer32Caps
_ERoadmConfigCapOffset_Object = MibTableColumn
eRoadmConfigCapOffset = _ERoadmConfigCapOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 27, 1, 2),
    _ERoadmConfigCapOffset_Type()
)
eRoadmConfigCapOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmConfigCapOffset.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmConfigCapOffset.setUnits("0.1 dB")
_ERoadmConfigCapTilt_Type = FspR7Integer32Caps
_ERoadmConfigCapTilt_Object = MibTableColumn
eRoadmConfigCapTilt = _ERoadmConfigCapTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 27, 1, 3),
    _ERoadmConfigCapTilt_Type()
)
eRoadmConfigCapTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmConfigCapTilt.setStatus("current")
if mibBuilder.loadTexts:
    eRoadmConfigCapTilt.setUnits("0.1 dB")
_ERoadmConfigCapInitiateEqualization_Type = FspR7InitEqualizationCaps
_ERoadmConfigCapInitiateEqualization_Object = MibTableColumn
eRoadmConfigCapInitiateEqualization = _ERoadmConfigCapInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 27, 1, 4),
    _ERoadmConfigCapInitiateEqualization_Type()
)
eRoadmConfigCapInitiateEqualization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eRoadmConfigCapInitiateEqualization.setStatus("current")
_CapabilityDataTable_Object = MibTable
capabilityDataTable = _CapabilityDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 28)
)
if mibBuilder.loadTexts:
    capabilityDataTable.setStatus("current")
_CapabilityDataEntry_Object = MibTableRow
capabilityDataEntry = _CapabilityDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 28, 1)
)
capabilityDataEntry.setIndexNames(
    (0, "FspR7-MIB", "capabilityDataType"),
    (0, "FspR7-MIB", "capabilityDataCapabilityLevel"),
)
if mibBuilder.loadTexts:
    capabilityDataEntry.setStatus("current")
_CapabilityDataType_Type = FspR7EquipmentType
_CapabilityDataType_Object = MibTableColumn
capabilityDataType = _CapabilityDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 28, 1, 1),
    _CapabilityDataType_Type()
)
capabilityDataType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    capabilityDataType.setStatus("current")
_CapabilityDataCapabilityLevel_Type = FspR7CapInventory
_CapabilityDataCapabilityLevel_Object = MibTableColumn
capabilityDataCapabilityLevel = _CapabilityDataCapabilityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 28, 1, 2),
    _CapabilityDataCapabilityLevel_Type()
)
capabilityDataCapabilityLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    capabilityDataCapabilityLevel.setStatus("current")
_CapabilityDataDescription_Type = SnmpAdminString
_CapabilityDataDescription_Object = MibTableColumn
capabilityDataDescription = _CapabilityDataDescription_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 28, 1, 3),
    _CapabilityDataDescription_Type()
)
capabilityDataDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    capabilityDataDescription.setStatus("current")
_FarEndPlugDiagnosticsTable_Object = MibTable
farEndPlugDiagnosticsTable = _FarEndPlugDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 29)
)
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsTable.setStatus("current")
_FarEndPlugDiagnosticsEntry_Object = MibTableRow
farEndPlugDiagnosticsEntry = _FarEndPlugDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 29, 1)
)
farEndPlugDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsEntry.setStatus("current")
_FarEndPlugDiagnosticsTemp_Type = Integer32
_FarEndPlugDiagnosticsTemp_Object = MibTableColumn
farEndPlugDiagnosticsTemp = _FarEndPlugDiagnosticsTemp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 29, 1, 1),
    _FarEndPlugDiagnosticsTemp_Type()
)
farEndPlugDiagnosticsTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsTemp.setStatus("current")
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsTemp.setUnits("0.1 degree Celsius")
_FarEndPlugDiagnosticsUpperTempThres_Type = Integer32
_FarEndPlugDiagnosticsUpperTempThres_Object = MibTableColumn
farEndPlugDiagnosticsUpperTempThres = _FarEndPlugDiagnosticsUpperTempThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 29, 1, 2),
    _FarEndPlugDiagnosticsUpperTempThres_Type()
)
farEndPlugDiagnosticsUpperTempThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsUpperTempThres.setStatus("current")
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsUpperTempThres.setUnits("0.1 degree Celsius")
_FarEndPlugDiagnosticsLowerTempThres_Type = Integer32
_FarEndPlugDiagnosticsLowerTempThres_Object = MibTableColumn
farEndPlugDiagnosticsLowerTempThres = _FarEndPlugDiagnosticsLowerTempThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 29, 1, 3),
    _FarEndPlugDiagnosticsLowerTempThres_Type()
)
farEndPlugDiagnosticsLowerTempThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsLowerTempThres.setStatus("current")
if mibBuilder.loadTexts:
    farEndPlugDiagnosticsLowerTempThres.setUnits("0.1 degree Celsius")
_FarEndPlugConfigTable_Object = MibTable
farEndPlugConfigTable = _FarEndPlugConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 30)
)
if mibBuilder.loadTexts:
    farEndPlugConfigTable.setStatus("current")
_FarEndPlugConfigEntry_Object = MibTableRow
farEndPlugConfigEntry = _FarEndPlugConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 30, 1)
)
farEndPlugConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndPlugConfigEntry.setStatus("current")
_FarEndPlugConfigAlias_Type = SnmpAdminString
_FarEndPlugConfigAlias_Object = MibTableColumn
farEndPlugConfigAlias = _FarEndPlugConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 30, 1, 1),
    _FarEndPlugConfigAlias_Type()
)
farEndPlugConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    farEndPlugConfigAlias.setStatus("current")
_FarEndPlugConfigMaxDataRate_Type = FspR7PlugDataRate
_FarEndPlugConfigMaxDataRate_Object = MibTableColumn
farEndPlugConfigMaxDataRate = _FarEndPlugConfigMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 30, 1, 2),
    _FarEndPlugConfigMaxDataRate_Type()
)
farEndPlugConfigMaxDataRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    farEndPlugConfigMaxDataRate.setStatus("current")
_FarEndPlugConfigCapTable_Object = MibTable
farEndPlugConfigCapTable = _FarEndPlugConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 31)
)
if mibBuilder.loadTexts:
    farEndPlugConfigCapTable.setStatus("current")
_FarEndPlugConfigCapEntry_Object = MibTableRow
farEndPlugConfigCapEntry = _FarEndPlugConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 31, 1)
)
farEndPlugConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndPlugConfigCapEntry.setStatus("current")
_FarEndPlugConfigCapMaxDataRate_Type = FspR7PlugDataRateCaps
_FarEndPlugConfigCapMaxDataRate_Object = MibTableColumn
farEndPlugConfigCapMaxDataRate = _FarEndPlugConfigCapMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 31, 1, 1),
    _FarEndPlugConfigCapMaxDataRate_Type()
)
farEndPlugConfigCapMaxDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugConfigCapMaxDataRate.setStatus("current")
_FarEndPlugDataTable_Object = MibTable
farEndPlugDataTable = _FarEndPlugDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32)
)
if mibBuilder.loadTexts:
    farEndPlugDataTable.setStatus("current")
_FarEndPlugDataEntry_Object = MibTableRow
farEndPlugDataEntry = _FarEndPlugDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1)
)
farEndPlugDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndPlugDataEntry.setStatus("current")
_FarEndPlugDataType_Type = FspR7EquipmentType
_FarEndPlugDataType_Object = MibTableColumn
farEndPlugDataType = _FarEndPlugDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1, 1),
    _FarEndPlugDataType_Type()
)
farEndPlugDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDataType.setStatus("current")
_FarEndPlugDataMaxDataRate_Type = FspR7PlugDataRate
_FarEndPlugDataMaxDataRate_Object = MibTableColumn
farEndPlugDataMaxDataRate = _FarEndPlugDataMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1, 2),
    _FarEndPlugDataMaxDataRate_Type()
)
farEndPlugDataMaxDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDataMaxDataRate.setStatus("current")
_FarEndPlugDataTransmitChannel_Type = FspR7ChannelIdentifier
_FarEndPlugDataTransmitChannel_Object = MibTableColumn
farEndPlugDataTransmitChannel = _FarEndPlugDataTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1, 3),
    _FarEndPlugDataTransmitChannel_Type()
)
farEndPlugDataTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDataTransmitChannel.setStatus("current")
_FarEndPlugDataReach_Type = FspR7OpticalInterfaceReach
_FarEndPlugDataReach_Object = MibTableColumn
farEndPlugDataReach = _FarEndPlugDataReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1, 4),
    _FarEndPlugDataReach_Type()
)
farEndPlugDataReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDataReach.setStatus("current")
_FarEndPlugDataFiberType_Type = FspR7OpticalFiberType
_FarEndPlugDataFiberType_Object = MibTableColumn
farEndPlugDataFiberType = _FarEndPlugDataFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1, 5),
    _FarEndPlugDataFiberType_Type()
)
farEndPlugDataFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDataFiberType.setStatus("current")
_FarEndPlugDataConnectorType_Type = FspR7ConnectorType
_FarEndPlugDataConnectorType_Object = MibTableColumn
farEndPlugDataConnectorType = _FarEndPlugDataConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1, 6),
    _FarEndPlugDataConnectorType_Type()
)
farEndPlugDataConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDataConnectorType.setStatus("current")
_FarEndPlugDataAdmin_Type = FspR7AdminState
_FarEndPlugDataAdmin_Object = MibTableColumn
farEndPlugDataAdmin = _FarEndPlugDataAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 32, 1, 7),
    _FarEndPlugDataAdmin_Type()
)
farEndPlugDataAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndPlugDataAdmin.setStatus("current")
_ModuleConfigCapTable_Object = MibTable
moduleConfigCapTable = _ModuleConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 35)
)
if mibBuilder.loadTexts:
    moduleConfigCapTable.setStatus("current")
_ModuleConfigCapEntry_Object = MibTableRow
moduleConfigCapEntry = _ModuleConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 35, 1)
)
moduleConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    moduleConfigCapEntry.setStatus("current")
_ModuleConfigCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_ModuleConfigCapEqlzAdmin_Object = MibTableColumn
moduleConfigCapEqlzAdmin = _ModuleConfigCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 35, 1, 1),
    _ModuleConfigCapEqlzAdmin_Type()
)
moduleConfigCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleConfigCapEqlzAdmin.setStatus("current")
_ModuleConfigCapInitiateEqualization_Type = FspR7InitEqualizationCaps
_ModuleConfigCapInitiateEqualization_Object = MibTableColumn
moduleConfigCapInitiateEqualization = _ModuleConfigCapInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 35, 1, 2),
    _ModuleConfigCapInitiateEqualization_Type()
)
moduleConfigCapInitiateEqualization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleConfigCapInitiateEqualization.setStatus("current")
_ModuleConfigCapCac_Type = FspR7L2CacEnableCaps
_ModuleConfigCapCac_Object = MibTableColumn
moduleConfigCapCac = _ModuleConfigCapCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 35, 1, 3),
    _ModuleConfigCapCac_Type()
)
moduleConfigCapCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleConfigCapCac.setStatus("current")
_ModuleConfigCapFiberDetect_Type = FspR7FiberDetectCaps
_ModuleConfigCapFiberDetect_Object = MibTableColumn
moduleConfigCapFiberDetect = _ModuleConfigCapFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 2, 35, 1, 4),
    _ModuleConfigCapFiberDetect_Type()
)
moduleConfigCapFiberDetect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleConfigCapFiberDetect.setStatus("current")
_InterfaceConfigAndStatus_ObjectIdentity = ObjectIdentity
interfaceConfigAndStatus = _InterfaceConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3)
)
_InterfaceConfigTable_Object = MibTable
interfaceConfigTable = _InterfaceConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1)
)
if mibBuilder.loadTexts:
    interfaceConfigTable.setStatus("current")
_InterfaceConfigEntry_Object = MibTableRow
interfaceConfigEntry = _InterfaceConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1)
)
interfaceConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    interfaceConfigEntry.setStatus("current")
_InterfaceConfigIdentifier_Type = SnmpAdminString
_InterfaceConfigIdentifier_Object = MibTableColumn
interfaceConfigIdentifier = _InterfaceConfigIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 1),
    _InterfaceConfigIdentifier_Type()
)
interfaceConfigIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigIdentifier.setStatus("current")
_InterfaceConfigLoopConfig_Type = LoopConfig
_InterfaceConfigLoopConfig_Object = MibTableColumn
interfaceConfigLoopConfig = _InterfaceConfigLoopConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 2),
    _InterfaceConfigLoopConfig_Type()
)
interfaceConfigLoopConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigLoopConfig.setStatus("current")
_InterfaceConfigDataLayerPmReset_Type = FspR7PmReset
_InterfaceConfigDataLayerPmReset_Object = MibTableColumn
interfaceConfigDataLayerPmReset = _InterfaceConfigDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 3),
    _InterfaceConfigDataLayerPmReset_Type()
)
interfaceConfigDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigDataLayerPmReset.setStatus("current")
_InterfaceConfigEqlzAdmin_Type = FspR7EqlzAdminState
_InterfaceConfigEqlzAdmin_Object = MibTableColumn
interfaceConfigEqlzAdmin = _InterfaceConfigEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 4),
    _InterfaceConfigEqlzAdmin_Type()
)
interfaceConfigEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigEqlzAdmin.setStatus("current")
_InterfaceConfigDispertionConfig_Type = FspR7DispersionConfig
_InterfaceConfigDispertionConfig_Object = MibTableColumn
interfaceConfigDispertionConfig = _InterfaceConfigDispertionConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 5),
    _InterfaceConfigDispertionConfig_Type()
)
interfaceConfigDispertionConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigDispertionConfig.setStatus("current")
_InterfaceConfigTurnupConfig_Type = FspR7TurnupConfig
_InterfaceConfigTurnupConfig_Object = MibTableColumn
interfaceConfigTurnupConfig = _InterfaceConfigTurnupConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 6),
    _InterfaceConfigTurnupConfig_Type()
)
interfaceConfigTurnupConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigTurnupConfig.setStatus("current")
_InterfaceConfigInitiateEqualization_Type = FspR7InitEqualization
_InterfaceConfigInitiateEqualization_Object = MibTableColumn
interfaceConfigInitiateEqualization = _InterfaceConfigInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 7),
    _InterfaceConfigInitiateEqualization_Type()
)
interfaceConfigInitiateEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigInitiateEqualization.setStatus("current")


class _InterfaceConfigExternalVid_Type(Unsigned32):
    """Custom type interfaceConfigExternalVid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_InterfaceConfigExternalVid_Type.__name__ = "Unsigned32"
_InterfaceConfigExternalVid_Object = MibTableColumn
interfaceConfigExternalVid = _InterfaceConfigExternalVid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 8),
    _InterfaceConfigExternalVid_Type()
)
interfaceConfigExternalVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigExternalVid.setStatus("current")
_InterfaceConfigLanAid_Type = EntityIndex
_InterfaceConfigLanAid_Object = MibTableColumn
interfaceConfigLanAid = _InterfaceConfigLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 9),
    _InterfaceConfigLanAid_Type()
)
interfaceConfigLanAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigLanAid.setStatus("current")
_InterfaceConfigBehaviour_Type = FspR7PortBehaviour
_InterfaceConfigBehaviour_Object = MibTableColumn
interfaceConfigBehaviour = _InterfaceConfigBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 10),
    _InterfaceConfigBehaviour_Type()
)
interfaceConfigBehaviour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigBehaviour.setStatus("current")
_InterfaceConfigInitiateRamanEqualization_Type = FspR7InitEqualization
_InterfaceConfigInitiateRamanEqualization_Object = MibTableColumn
interfaceConfigInitiateRamanEqualization = _InterfaceConfigInitiateRamanEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 11),
    _InterfaceConfigInitiateRamanEqualization_Type()
)
interfaceConfigInitiateRamanEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigInitiateRamanEqualization.setStatus("current")


class _InterfaceConfigSigDegPcslThreshold_Type(Unsigned32):
    """Custom type interfaceConfigSigDegPcslThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_InterfaceConfigSigDegPcslThreshold_Type.__name__ = "Unsigned32"
_InterfaceConfigSigDegPcslThreshold_Object = MibTableColumn
interfaceConfigSigDegPcslThreshold = _InterfaceConfigSigDegPcslThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 1, 1, 12),
    _InterfaceConfigSigDegPcslThreshold_Type()
)
interfaceConfigSigDegPcslThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceConfigSigDegPcslThreshold.setStatus("current")
if mibBuilder.loadTexts:
    interfaceConfigSigDegPcslThreshold.setUnits("%")
_InterfaceDataTable_Object = MibTable
interfaceDataTable = _InterfaceDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2)
)
if mibBuilder.loadTexts:
    interfaceDataTable.setStatus("current")
_InterfaceDataEntry_Object = MibTableRow
interfaceDataEntry = _InterfaceDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1)
)
interfaceDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    interfaceDataEntry.setStatus("current")
_InterfaceDataConnector_Type = FspR7ConnectorType
_InterfaceDataConnector_Object = MibTableColumn
interfaceDataConnector = _InterfaceDataConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 1),
    _InterfaceDataConnector_Type()
)
interfaceDataConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataConnector.setStatus("current")
_InterfaceDataSignalMapping_Type = FspR7SignalMapping
_InterfaceDataSignalMapping_Object = MibTableColumn
interfaceDataSignalMapping = _InterfaceDataSignalMapping_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 2),
    _InterfaceDataSignalMapping_Type()
)
interfaceDataSignalMapping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataSignalMapping.setStatus("deprecated")
_InterfaceDataRate_Type = Unsigned32
_InterfaceDataRate_Object = MibTableColumn
interfaceDataRate = _InterfaceDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 3),
    _InterfaceDataRate_Type()
)
interfaceDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataRate.setStatus("current")
if mibBuilder.loadTexts:
    interfaceDataRate.setUnits("Mbit/s")
_InterfaceDataBehaviour_Type = FspR7PortBehaviour
_InterfaceDataBehaviour_Object = MibTableColumn
interfaceDataBehaviour = _InterfaceDataBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 4),
    _InterfaceDataBehaviour_Type()
)
interfaceDataBehaviour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataBehaviour.setStatus("current")
_InterfaceDataTermLevel_Type = OhTerminationLevel
_InterfaceDataTermLevel_Object = MibTableColumn
interfaceDataTermLevel = _InterfaceDataTermLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 5),
    _InterfaceDataTermLevel_Type()
)
interfaceDataTermLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataTermLevel.setStatus("current")
_InterfaceDataConnectionType_Type = FspR7TypeConnection
_InterfaceDataConnectionType_Object = MibTableColumn
interfaceDataConnectionType = _InterfaceDataConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 6),
    _InterfaceDataConnectionType_Type()
)
interfaceDataConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataConnectionType.setStatus("current")
_InterfaceDataMonLevel_Type = FspR7MonLevel
_InterfaceDataMonLevel_Object = MibTableColumn
interfaceDataMonLevel = _InterfaceDataMonLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 7),
    _InterfaceDataMonLevel_Type()
)
interfaceDataMonLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataMonLevel.setStatus("current")


class _InterfaceDataValidSignalTimer_Type(Unsigned32):
    """Custom type interfaceDataValidSignalTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_InterfaceDataValidSignalTimer_Type.__name__ = "Unsigned32"
_InterfaceDataValidSignalTimer_Object = MibTableColumn
interfaceDataValidSignalTimer = _InterfaceDataValidSignalTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 8),
    _InterfaceDataValidSignalTimer_Type()
)
interfaceDataValidSignalTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataValidSignalTimer.setStatus("current")
if mibBuilder.loadTexts:
    interfaceDataValidSignalTimer.setUnits("min")
_InterfaceDataPayload_Type = OtnPayloadType
_InterfaceDataPayload_Object = MibTableColumn
interfaceDataPayload = _InterfaceDataPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 9),
    _InterfaceDataPayload_Type()
)
interfaceDataPayload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataPayload.setStatus("current")
_InterfaceDataParity_Type = FspR7ParityBit
_InterfaceDataParity_Object = MibTableColumn
interfaceDataParity = _InterfaceDataParity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 10),
    _InterfaceDataParity_Type()
)
interfaceDataParity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataParity.setStatus("current")
_InterfaceDataPhysIfBaseType_Type = FspR7InterfaceType
_InterfaceDataPhysIfBaseType_Object = MibTableColumn
interfaceDataPhysIfBaseType = _InterfaceDataPhysIfBaseType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 11),
    _InterfaceDataPhysIfBaseType_Type()
)
interfaceDataPhysIfBaseType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataPhysIfBaseType.setStatus("current")


class _InterfaceDataLaserReleaseTimer_Type(Unsigned32):
    """Custom type interfaceDataLaserReleaseTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1440),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_InterfaceDataLaserReleaseTimer_Type.__name__ = "Unsigned32"
_InterfaceDataLaserReleaseTimer_Object = MibTableColumn
interfaceDataLaserReleaseTimer = _InterfaceDataLaserReleaseTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 12),
    _InterfaceDataLaserReleaseTimer_Type()
)
interfaceDataLaserReleaseTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataLaserReleaseTimer.setStatus("current")
if mibBuilder.loadTexts:
    interfaceDataLaserReleaseTimer.setUnits("min")
_InterfaceDataCir_Type = Unsigned32
_InterfaceDataCir_Object = MibTableColumn
interfaceDataCir = _InterfaceDataCir_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 13),
    _InterfaceDataCir_Type()
)
interfaceDataCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataCir.setStatus("current")
if mibBuilder.loadTexts:
    interfaceDataCir.setUnits("Mbit/s")
_InterfaceDataTransmitWavelength_Type = Unsigned32
_InterfaceDataTransmitWavelength_Object = MibTableColumn
interfaceDataTransmitWavelength = _InterfaceDataTransmitWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 14),
    _InterfaceDataTransmitWavelength_Type()
)
interfaceDataTransmitWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataTransmitWavelength.setStatus("current")
if mibBuilder.loadTexts:
    interfaceDataTransmitWavelength.setUnits("0.01 nm")
_InterfaceDataTransmitFrequency_Type = Unsigned32
_InterfaceDataTransmitFrequency_Object = MibTableColumn
interfaceDataTransmitFrequency = _InterfaceDataTransmitFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 15),
    _InterfaceDataTransmitFrequency_Type()
)
interfaceDataTransmitFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataTransmitFrequency.setStatus("current")
if mibBuilder.loadTexts:
    interfaceDataTransmitFrequency.setUnits("0.01 THz")
_InterfaceDataTransmitChannel_Type = FspR7ChannelIdentifier
_InterfaceDataTransmitChannel_Object = MibTableColumn
interfaceDataTransmitChannel = _InterfaceDataTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 16),
    _InterfaceDataTransmitChannel_Type()
)
interfaceDataTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataTransmitChannel.setStatus("current")
_InterfaceDataType_Type = FspR7EquipmentType
_InterfaceDataType_Object = MibTableColumn
interfaceDataType = _InterfaceDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 17),
    _InterfaceDataType_Type()
)
interfaceDataType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    interfaceDataType.setStatus("current")
_InterfaceDataConnectionState_Type = FspR7ConnectState
_InterfaceDataConnectionState_Object = MibTableColumn
interfaceDataConnectionState = _InterfaceDataConnectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 18),
    _InterfaceDataConnectionState_Type()
)
interfaceDataConnectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataConnectionState.setStatus("current")
_InterfaceDataFacilityType_Type = FspR7InterfaceType
_InterfaceDataFacilityType_Object = MibTableColumn
interfaceDataFacilityType = _InterfaceDataFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 19),
    _InterfaceDataFacilityType_Type()
)
interfaceDataFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataFacilityType.setStatus("current")
_InterfaceDataProtectionRole_Type = FspR7ProtectionRole
_InterfaceDataProtectionRole_Object = MibTableColumn
interfaceDataProtectionRole = _InterfaceDataProtectionRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 20),
    _InterfaceDataProtectionRole_Type()
)
interfaceDataProtectionRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataProtectionRole.setStatus("current")
_InterfaceDataReach_Type = FspR7OpticalInterfaceReach
_InterfaceDataReach_Object = MibTableColumn
interfaceDataReach = _InterfaceDataReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 21),
    _InterfaceDataReach_Type()
)
interfaceDataReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataReach.setStatus("current")
_InterfaceDataFiberType_Type = FspR7OpticalFiberType
_InterfaceDataFiberType_Object = MibTableColumn
interfaceDataFiberType = _InterfaceDataFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 22),
    _InterfaceDataFiberType_Type()
)
interfaceDataFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataFiberType.setStatus("current")
_InterfaceDataOdtuType_Type = FspR7OdtuType
_InterfaceDataOdtuType_Object = MibTableColumn
interfaceDataOdtuType = _InterfaceDataOdtuType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 23),
    _InterfaceDataOdtuType_Type()
)
interfaceDataOdtuType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataOdtuType.setStatus("current")
_InterfaceDataOduTribPortNo_Type = SnmpAdminString
_InterfaceDataOduTribPortNo_Object = MibTableColumn
interfaceDataOduTribPortNo = _InterfaceDataOduTribPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 24),
    _InterfaceDataOduTribPortNo_Type()
)
interfaceDataOduTribPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataOduTribPortNo.setStatus("current")
_InterfaceDataOduTribTimeSlottNo_Type = SnmpAdminString
_InterfaceDataOduTribTimeSlottNo_Object = MibTableColumn
interfaceDataOduTribTimeSlottNo = _InterfaceDataOduTribTimeSlottNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 25),
    _InterfaceDataOduTribTimeSlottNo_Type()
)
interfaceDataOduTribTimeSlottNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataOduTribTimeSlottNo.setStatus("current")
_InterfaceDataRevertiveMode_Type = ApsRevertMode
_InterfaceDataRevertiveMode_Object = MibTableColumn
interfaceDataRevertiveMode = _InterfaceDataRevertiveMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 26),
    _InterfaceDataRevertiveMode_Type()
)
interfaceDataRevertiveMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataRevertiveMode.setStatus("current")
_InterfaceDataSignalDirection_Type = FspR7SignalDirection
_InterfaceDataSignalDirection_Object = MibTableColumn
interfaceDataSignalDirection = _InterfaceDataSignalDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 2, 1, 27),
    _InterfaceDataSignalDirection_Type()
)
interfaceDataSignalDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceDataSignalDirection.setStatus("current")
_OpticalIfConfigTable_Object = MibTable
opticalIfConfigTable = _OpticalIfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3)
)
if mibBuilder.loadTexts:
    opticalIfConfigTable.setStatus("current")
_OpticalIfConfigEntry_Object = MibTableRow
opticalIfConfigEntry = _OpticalIfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1)
)
opticalIfConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalIfConfigEntry.setStatus("current")
_OpticalIfConfigAlsMode_Type = FspR7AlsMode
_OpticalIfConfigAlsMode_Object = MibTableColumn
opticalIfConfigAlsMode = _OpticalIfConfigAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 1),
    _OpticalIfConfigAlsMode_Type()
)
opticalIfConfigAlsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigAlsMode.setStatus("current")
_OpticalIfConfigErrorForwarding_Type = FspR7ErrorFwdMode
_OpticalIfConfigErrorForwarding_Object = MibTableColumn
opticalIfConfigErrorForwarding = _OpticalIfConfigErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 2),
    _OpticalIfConfigErrorForwarding_Type()
)
opticalIfConfigErrorForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigErrorForwarding.setStatus("current")
_OpticalIfConfigFecType_Type = FspR7FecType
_OpticalIfConfigFecType_Object = MibTableColumn
opticalIfConfigFecType = _OpticalIfConfigFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 3),
    _OpticalIfConfigFecType_Type()
)
opticalIfConfigFecType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigFecType.setStatus("current")
_OpticalIfConfigLaserOffDelayFunction_Type = EnableState
_OpticalIfConfigLaserOffDelayFunction_Object = MibTableColumn
opticalIfConfigLaserOffDelayFunction = _OpticalIfConfigLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 4),
    _OpticalIfConfigLaserOffDelayFunction_Type()
)
opticalIfConfigLaserOffDelayFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLaserOffDelayFunction.setStatus("current")
_OpticalIfConfigForceLaserOn_Type = FspR7LaserForcedOperation
_OpticalIfConfigForceLaserOn_Object = MibTableColumn
opticalIfConfigForceLaserOn = _OpticalIfConfigForceLaserOn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 5),
    _OpticalIfConfigForceLaserOn_Type()
)
opticalIfConfigForceLaserOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigForceLaserOn.setStatus("current")
_OpticalIfConfigLossAttenuation_Type = FspR7LossAttenuation
_OpticalIfConfigLossAttenuation_Object = MibTableColumn
opticalIfConfigLossAttenuation = _OpticalIfConfigLossAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 6),
    _OpticalIfConfigLossAttenuation_Type()
)
opticalIfConfigLossAttenuation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLossAttenuation.setStatus("current")
_OpticalIfConfigAprHighThreshold_Type = Unsigned32
_OpticalIfConfigAprHighThreshold_Object = MibTableColumn
opticalIfConfigAprHighThreshold = _OpticalIfConfigAprHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 7),
    _OpticalIfConfigAprHighThreshold_Type()
)
opticalIfConfigAprHighThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigAprHighThreshold.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigAprHighThreshold.setUnits("0.1 dBm")
_OpticalIfConfigAseTabCreation_Type = FspR7AseTabOpr
_OpticalIfConfigAseTabCreation_Object = MibTableColumn
opticalIfConfigAseTabCreation = _OpticalIfConfigAseTabCreation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 8),
    _OpticalIfConfigAseTabCreation_Type()
)
opticalIfConfigAseTabCreation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigAseTabCreation.setStatus("current")
_OpticalIfConfigWdmRxChannel_Type = FspR7ChannelIdentifier
_OpticalIfConfigWdmRxChannel_Object = MibTableColumn
opticalIfConfigWdmRxChannel = _OpticalIfConfigWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 9),
    _OpticalIfConfigWdmRxChannel_Type()
)
opticalIfConfigWdmRxChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigWdmRxChannel.setStatus("current")


class _OpticalIfConfigSigDegThresOtu_Type(Integer32):
    """Custom type opticalIfConfigSigDegThresOtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_OpticalIfConfigSigDegThresOtu_Type.__name__ = "Integer32"
_OpticalIfConfigSigDegThresOtu_Object = MibTableColumn
opticalIfConfigSigDegThresOtu = _OpticalIfConfigSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 10),
    _OpticalIfConfigSigDegThresOtu_Type()
)
opticalIfConfigSigDegThresOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegThresOtu.setUnits("%")


class _OpticalIfConfigSigDegPeriodOtu_Type(Unsigned32):
    """Custom type opticalIfConfigSigDegPeriodOtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigSigDegPeriodOtu_Type.__name__ = "Unsigned32"
_OpticalIfConfigSigDegPeriodOtu_Object = MibTableColumn
opticalIfConfigSigDegPeriodOtu = _OpticalIfConfigSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 11),
    _OpticalIfConfigSigDegPeriodOtu_Type()
)
opticalIfConfigSigDegPeriodOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegPeriodOtu.setUnits("s")


class _OpticalIfConfigSigDegThresOdu_Type(Integer32):
    """Custom type opticalIfConfigSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_OpticalIfConfigSigDegThresOdu_Type.__name__ = "Integer32"
_OpticalIfConfigSigDegThresOdu_Object = MibTableColumn
opticalIfConfigSigDegThresOdu = _OpticalIfConfigSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 12),
    _OpticalIfConfigSigDegThresOdu_Type()
)
opticalIfConfigSigDegThresOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegThresOdu.setUnits("%")


class _OpticalIfConfigSigDegPeriodOdu_Type(Unsigned32):
    """Custom type opticalIfConfigSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_OpticalIfConfigSigDegPeriodOdu_Object = MibTableColumn
opticalIfConfigSigDegPeriodOdu = _OpticalIfConfigSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 13),
    _OpticalIfConfigSigDegPeriodOdu_Type()
)
opticalIfConfigSigDegPeriodOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegPeriodOdu.setUnits("s")
_OpticalIfConfigSigDegThresSonetSection_Type = FspR7BERThresholdSection
_OpticalIfConfigSigDegThresSonetSection_Object = MibTableColumn
opticalIfConfigSigDegThresSonetSection = _OpticalIfConfigSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 14),
    _OpticalIfConfigSigDegThresSonetSection_Type()
)
opticalIfConfigSigDegThresSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegThresSonetSection.setStatus("current")


class _OpticalIfConfigSigDegThresSdhSection_Type(Unsigned32):
    """Custom type opticalIfConfigSigDegThresSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigSigDegThresSdhSection_Type.__name__ = "Unsigned32"
_OpticalIfConfigSigDegThresSdhSection_Object = MibTableColumn
opticalIfConfigSigDegThresSdhSection = _OpticalIfConfigSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 15),
    _OpticalIfConfigSigDegThresSdhSection_Type()
)
opticalIfConfigSigDegThresSdhSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegThresSdhSection.setUnits("%")


class _OpticalIfConfigSigDegPeriodSdhSection_Type(Unsigned32):
    """Custom type opticalIfConfigSigDegPeriodSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigSigDegPeriodSdhSection_Type.__name__ = "Unsigned32"
_OpticalIfConfigSigDegPeriodSdhSection_Object = MibTableColumn
opticalIfConfigSigDegPeriodSdhSection = _OpticalIfConfigSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 16),
    _OpticalIfConfigSigDegPeriodSdhSection_Type()
)
opticalIfConfigSigDegPeriodSdhSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigSigDegPeriodSdhSection.setUnits("s")
_OpticalIfConfigDispersionMode_Type = FspR7DispersionModes
_OpticalIfConfigDispersionMode_Object = MibTableColumn
opticalIfConfigDispersionMode = _OpticalIfConfigDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 17),
    _OpticalIfConfigDispersionMode_Type()
)
opticalIfConfigDispersionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigDispersionMode.setStatus("current")


class _OpticalIfConfigDispersionSetting_Type(Integer32):
    """Custom type opticalIfConfigDispersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_OpticalIfConfigDispersionSetting_Type.__name__ = "Integer32"
_OpticalIfConfigDispersionSetting_Object = MibTableColumn
opticalIfConfigDispersionSetting = _OpticalIfConfigDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 18),
    _OpticalIfConfigDispersionSetting_Type()
)
opticalIfConfigDispersionSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigDispersionSetting.setUnits("ps/nm")


class _OpticalIfConfigOpticalSetPoint_Type(Integer32):
    """Custom type opticalIfConfigOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_OpticalIfConfigOpticalSetPoint_Type.__name__ = "Integer32"
_OpticalIfConfigOpticalSetPoint_Object = MibTableColumn
opticalIfConfigOpticalSetPoint = _OpticalIfConfigOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 19),
    _OpticalIfConfigOpticalSetPoint_Type()
)
opticalIfConfigOpticalSetPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigOpticalSetPoint.setUnits("0.1 dBm")


class _OpticalIfConfigOffset_Type(Integer32):
    """Custom type opticalIfConfigOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_OpticalIfConfigOffset_Type.__name__ = "Integer32"
_OpticalIfConfigOffset_Object = MibTableColumn
opticalIfConfigOffset = _OpticalIfConfigOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 20),
    _OpticalIfConfigOffset_Type()
)
opticalIfConfigOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigOffset.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigOffset.setUnits("0.1 dB")


class _OpticalIfConfigTilt_Type(Integer32):
    """Custom type opticalIfConfigTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_OpticalIfConfigTilt_Type.__name__ = "Integer32"
_OpticalIfConfigTilt_Object = MibTableColumn
opticalIfConfigTilt = _OpticalIfConfigTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 21),
    _OpticalIfConfigTilt_Type()
)
opticalIfConfigTilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigTilt.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigTilt.setUnits("0.1 dB")
_OpticalIfConfigAreaId_Type = IpAddress
_OpticalIfConfigAreaId_Object = MibTableColumn
opticalIfConfigAreaId = _OpticalIfConfigAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 22),
    _OpticalIfConfigAreaId_Type()
)
opticalIfConfigAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigAreaId.setStatus("current")
_OpticalIfConfigAutoThresReset_Type = FspR7AutoThresReset
_OpticalIfConfigAutoThresReset_Object = MibTableColumn
opticalIfConfigAutoThresReset = _OpticalIfConfigAutoThresReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 23),
    _OpticalIfConfigAutoThresReset_Type()
)
opticalIfConfigAutoThresReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigAutoThresReset.setStatus("current")
_OpticalIfConfigUtag_Type = FspR7UntaggedFrames
_OpticalIfConfigUtag_Object = MibTableColumn
opticalIfConfigUtag = _OpticalIfConfigUtag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 24),
    _OpticalIfConfigUtag_Type()
)
opticalIfConfigUtag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigUtag.setStatus("current")


class _OpticalIfConfigPvid_Type(Unsigned32):
    """Custom type opticalIfConfigPvid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigPvid_Type.__name__ = "Unsigned32"
_OpticalIfConfigPvid_Object = MibTableColumn
opticalIfConfigPvid = _OpticalIfConfigPvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 25),
    _OpticalIfConfigPvid_Type()
)
opticalIfConfigPvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigPvid.setStatus("current")


class _OpticalIfConfigPriority_Type(Unsigned32):
    """Custom type opticalIfConfigPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigPriority_Type.__name__ = "Unsigned32"
_OpticalIfConfigPriority_Object = MibTableColumn
opticalIfConfigPriority = _OpticalIfConfigPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 26),
    _OpticalIfConfigPriority_Type()
)
opticalIfConfigPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigPriority.setStatus("current")
_OpticalIfConfigStagType_Type = FspR7SnmpHexString
_OpticalIfConfigStagType_Object = MibTableColumn
opticalIfConfigStagType = _OpticalIfConfigStagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 27),
    _OpticalIfConfigStagType_Type()
)
opticalIfConfigStagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigStagType.setStatus("current")
_OpticalIfConfigCac_Type = FspR7L2CacEnable
_OpticalIfConfigCac_Object = MibTableColumn
opticalIfConfigCac = _OpticalIfConfigCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 28),
    _OpticalIfConfigCac_Type()
)
opticalIfConfigCac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigCac.setStatus("current")


class _OpticalIfConfigMaxFrameSize_Type(Unsigned32):
    """Custom type opticalIfConfigMaxFrameSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1518, 9600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigMaxFrameSize_Type.__name__ = "Unsigned32"
_OpticalIfConfigMaxFrameSize_Object = MibTableColumn
opticalIfConfigMaxFrameSize = _OpticalIfConfigMaxFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 29),
    _OpticalIfConfigMaxFrameSize_Type()
)
opticalIfConfigMaxFrameSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigMaxFrameSize.setStatus("current")


class _OpticalIfConfigLagActivePorts_Type(Unsigned32):
    """Custom type opticalIfConfigLagActivePorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigLagActivePorts_Type.__name__ = "Unsigned32"
_OpticalIfConfigLagActivePorts_Object = MibTableColumn
opticalIfConfigLagActivePorts = _OpticalIfConfigLagActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 30),
    _OpticalIfConfigLagActivePorts_Type()
)
opticalIfConfigLagActivePorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLagActivePorts.setStatus("current")


class _OpticalIfConfigLagPrio_Type(Unsigned32):
    """Custom type opticalIfConfigLagPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigLagPrio_Type.__name__ = "Unsigned32"
_OpticalIfConfigLagPrio_Object = MibTableColumn
opticalIfConfigLagPrio = _OpticalIfConfigLagPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 31),
    _OpticalIfConfigLagPrio_Type()
)
opticalIfConfigLagPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLagPrio.setStatus("current")
_OpticalIfConfigLagLoadBallanceSource_Type = FspR7LagLoadBallanceSource
_OpticalIfConfigLagLoadBallanceSource_Object = MibTableColumn
opticalIfConfigLagLoadBallanceSource = _OpticalIfConfigLagLoadBallanceSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 32),
    _OpticalIfConfigLagLoadBallanceSource_Type()
)
opticalIfConfigLagLoadBallanceSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLagLoadBallanceSource.setStatus("current")
_OpticalIfConfigLacpTimeout_Type = FspR7LacpTimeout
_OpticalIfConfigLacpTimeout_Object = MibTableColumn
opticalIfConfigLacpTimeout = _OpticalIfConfigLacpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 33),
    _OpticalIfConfigLacpTimeout_Type()
)
opticalIfConfigLacpTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLacpTimeout.setStatus("current")
_OpticalIfConfigTransmitChannel_Type = FspR7ChannelIdentifier
_OpticalIfConfigTransmitChannel_Object = MibTableColumn
opticalIfConfigTransmitChannel = _OpticalIfConfigTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 34),
    _OpticalIfConfigTransmitChannel_Type()
)
opticalIfConfigTransmitChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigTransmitChannel.setStatus("current")
_OpticalIfConfigFarEndCommunication_Type = FspR7YesNo
_OpticalIfConfigFarEndCommunication_Object = MibTableColumn
opticalIfConfigFarEndCommunication = _OpticalIfConfigFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 35),
    _OpticalIfConfigFarEndCommunication_Type()
)
opticalIfConfigFarEndCommunication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigFarEndCommunication.setStatus("current")
_OpticalIfConfigLacpMode_Type = FspR7LacpMode
_OpticalIfConfigLacpMode_Object = MibTableColumn
opticalIfConfigLacpMode = _OpticalIfConfigLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 36),
    _OpticalIfConfigLacpMode_Type()
)
opticalIfConfigLacpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLacpMode.setStatus("current")
_OpticalIfConfigTxOffDelay_Type = FspR7EnableDisable
_OpticalIfConfigTxOffDelay_Object = MibTableColumn
opticalIfConfigTxOffDelay = _OpticalIfConfigTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 37),
    _OpticalIfConfigTxOffDelay_Type()
)
opticalIfConfigTxOffDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigTxOffDelay.setStatus("current")
_OpticalIfConfigOpuPayloadType_Type = FspR7OpuPayloadType
_OpticalIfConfigOpuPayloadType_Object = MibTableColumn
opticalIfConfigOpuPayloadType = _OpticalIfConfigOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 38),
    _OpticalIfConfigOpuPayloadType_Type()
)
opticalIfConfigOpuPayloadType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigOpuPayloadType.setStatus("current")


class _OpticalIfConfigOscOpticalSetpoint_Type(Integer32):
    """Custom type opticalIfConfigOscOpticalSetpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_OpticalIfConfigOscOpticalSetpoint_Type.__name__ = "Integer32"
_OpticalIfConfigOscOpticalSetpoint_Object = MibTableColumn
opticalIfConfigOscOpticalSetpoint = _OpticalIfConfigOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 39),
    _OpticalIfConfigOscOpticalSetpoint_Type()
)
opticalIfConfigOscOpticalSetpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigOscOpticalSetpoint.setUnits("0.1 dBm")
_OpticalIfConfigFiberBrand_Type = FspR7FiberBrand
_OpticalIfConfigFiberBrand_Object = MibTableColumn
opticalIfConfigFiberBrand = _OpticalIfConfigFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 40),
    _OpticalIfConfigFiberBrand_Type()
)
opticalIfConfigFiberBrand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigFiberBrand.setStatus("current")
_OpticalIfConfigTiltSet_Type = FspR7TiltSet
_OpticalIfConfigTiltSet_Object = MibTableColumn
opticalIfConfigTiltSet = _OpticalIfConfigTiltSet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 41),
    _OpticalIfConfigTiltSet_Type()
)
opticalIfConfigTiltSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigTiltSet.setStatus("current")
_OpticalIfConfigForceFwdAsePilotOn_Type = FspR7LaserForcedOperation
_OpticalIfConfigForceFwdAsePilotOn_Object = MibTableColumn
opticalIfConfigForceFwdAsePilotOn = _OpticalIfConfigForceFwdAsePilotOn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 42),
    _OpticalIfConfigForceFwdAsePilotOn_Type()
)
opticalIfConfigForceFwdAsePilotOn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigForceFwdAsePilotOn.setStatus("current")
_OpticalIfConfigXfpDecisionThres_Type = FspR7XfpDecisionThres
_OpticalIfConfigXfpDecisionThres_Object = MibTableColumn
opticalIfConfigXfpDecisionThres = _OpticalIfConfigXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 43),
    _OpticalIfConfigXfpDecisionThres_Type()
)
opticalIfConfigXfpDecisionThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigXfpDecisionThres.setStatus("current")
_OpticalIfConfigDisparityCorrection_Type = EnableState
_OpticalIfConfigDisparityCorrection_Object = MibTableColumn
opticalIfConfigDisparityCorrection = _OpticalIfConfigDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 44),
    _OpticalIfConfigDisparityCorrection_Type()
)
opticalIfConfigDisparityCorrection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigDisparityCorrection.setStatus("current")
_OpticalIfConfigPrbsPmReset_Type = FspR7PrbsPmReset
_OpticalIfConfigPrbsPmReset_Object = MibTableColumn
opticalIfConfigPrbsPmReset = _OpticalIfConfigPrbsPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 45),
    _OpticalIfConfigPrbsPmReset_Type()
)
opticalIfConfigPrbsPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigPrbsPmReset.setStatus("current")
_OpticalIfConfigTestPrbsRcvMode_Type = FspR7TestMode
_OpticalIfConfigTestPrbsRcvMode_Object = MibTableColumn
opticalIfConfigTestPrbsRcvMode = _OpticalIfConfigTestPrbsRcvMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 46),
    _OpticalIfConfigTestPrbsRcvMode_Type()
)
opticalIfConfigTestPrbsRcvMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigTestPrbsRcvMode.setStatus("current")
_OpticalIfConfigTestPrbsTrmtMode_Type = FspR7TestMode
_OpticalIfConfigTestPrbsTrmtMode_Object = MibTableColumn
opticalIfConfigTestPrbsTrmtMode = _OpticalIfConfigTestPrbsTrmtMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 47),
    _OpticalIfConfigTestPrbsTrmtMode_Type()
)
opticalIfConfigTestPrbsTrmtMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigTestPrbsTrmtMode.setStatus("current")
_OpticalIfConfigTributarySlotMethod_Type = FspR7ManualAuto
_OpticalIfConfigTributarySlotMethod_Object = MibTableColumn
opticalIfConfigTributarySlotMethod = _OpticalIfConfigTributarySlotMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 48),
    _OpticalIfConfigTributarySlotMethod_Type()
)
opticalIfConfigTributarySlotMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigTributarySlotMethod.setStatus("current")
_OpticalIfConfigLaserDelayTimer_Type = FspR7LaserDelayTimer
_OpticalIfConfigLaserDelayTimer_Object = MibTableColumn
opticalIfConfigLaserDelayTimer = _OpticalIfConfigLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 49),
    _OpticalIfConfigLaserDelayTimer_Type()
)
opticalIfConfigLaserDelayTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLaserDelayTimer.setStatus("current")


class _OpticalIfConfigLaserOffTimer_Type(Unsigned32):
    """Custom type opticalIfConfigLaserOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigLaserOffTimer_Type.__name__ = "Unsigned32"
_OpticalIfConfigLaserOffTimer_Object = MibTableColumn
opticalIfConfigLaserOffTimer = _OpticalIfConfigLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 50),
    _OpticalIfConfigLaserOffTimer_Type()
)
opticalIfConfigLaserOffTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigLaserOffTimer.setUnits("ms")


class _OpticalIfConfigLaserOnTimer_Type(Unsigned32):
    """Custom type opticalIfConfigLaserOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfConfigLaserOnTimer_Type.__name__ = "Unsigned32"
_OpticalIfConfigLaserOnTimer_Object = MibTableColumn
opticalIfConfigLaserOnTimer = _OpticalIfConfigLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 51),
    _OpticalIfConfigLaserOnTimer_Type()
)
opticalIfConfigLaserOnTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigLaserOnTimer.setUnits("ms")
_OpticalIfConfigLaneChannelSetting_Type = FspR7ChannelIdentifier
_OpticalIfConfigLaneChannelSetting_Object = MibTableColumn
opticalIfConfigLaneChannelSetting = _OpticalIfConfigLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 52),
    _OpticalIfConfigLaneChannelSetting_Type()
)
opticalIfConfigLaneChannelSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigLaneChannelSetting.setStatus("current")
_OpticalIfConfigBip_Type = FspR7Bip
_OpticalIfConfigBip_Object = MibTableColumn
opticalIfConfigBip = _OpticalIfConfigBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 53),
    _OpticalIfConfigBip_Type()
)
opticalIfConfigBip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigBip.setStatus("current")
_OpticalIfConfigCodeGain_Type = FspR7CodeGain
_OpticalIfConfigCodeGain_Object = MibTableColumn
opticalIfConfigCodeGain = _OpticalIfConfigCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 3, 1, 54),
    _OpticalIfConfigCodeGain_Type()
)
opticalIfConfigCodeGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalIfConfigCodeGain.setStatus("current")
_OpticalIfDataTable_Object = MibTable
opticalIfDataTable = _OpticalIfDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4)
)
if mibBuilder.loadTexts:
    opticalIfDataTable.setStatus("current")
_OpticalIfDataEntry_Object = MibTableRow
opticalIfDataEntry = _OpticalIfDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1)
)
opticalIfDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalIfDataEntry.setStatus("current")
_OpticalIfDataWdmChannel_Type = FspR7ChannelIdentifier
_OpticalIfDataWdmChannel_Object = MibTableColumn
opticalIfDataWdmChannel = _OpticalIfDataWdmChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 1),
    _OpticalIfDataWdmChannel_Type()
)
opticalIfDataWdmChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataWdmChannel.setStatus("current")
_OpticalIfDataWavelength_Type = SnmpAdminString
_OpticalIfDataWavelength_Object = MibTableColumn
opticalIfDataWavelength = _OpticalIfDataWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 2),
    _OpticalIfDataWavelength_Type()
)
opticalIfDataWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataWavelength.setStatus("deprecated")
_OpticalIfDataFiberType_Type = FspR7OpticalFiberType
_OpticalIfDataFiberType_Object = MibTableColumn
opticalIfDataFiberType = _OpticalIfDataFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 3),
    _OpticalIfDataFiberType_Type()
)
opticalIfDataFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataFiberType.setStatus("current")
_OpticalIfDataLinkLength_Type = FspR7OpticalInterfaceReach
_OpticalIfDataLinkLength_Object = MibTableColumn
opticalIfDataLinkLength = _OpticalIfDataLinkLength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 4),
    _OpticalIfDataLinkLength_Type()
)
opticalIfDataLinkLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLinkLength.setStatus("current")
_OpticalIfDataAlsHoldoff_Type = FspR7AlsHoldoff
_OpticalIfDataAlsHoldoff_Object = MibTableColumn
opticalIfDataAlsHoldoff = _OpticalIfDataAlsHoldoff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 5),
    _OpticalIfDataAlsHoldoff_Type()
)
opticalIfDataAlsHoldoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataAlsHoldoff.setStatus("current")
_OpticalIfDataLaserOffDelayTime_Type = FspR7LaserOffDelayTime
_OpticalIfDataLaserOffDelayTime_Object = MibTableColumn
opticalIfDataLaserOffDelayTime = _OpticalIfDataLaserOffDelayTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 6),
    _OpticalIfDataLaserOffDelayTime_Type()
)
opticalIfDataLaserOffDelayTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLaserOffDelayTime.setStatus("current")
_OpticalIfDataProtectionRole_Type = FspR7ProtectionRole
_OpticalIfDataProtectionRole_Object = MibTableColumn
opticalIfDataProtectionRole = _OpticalIfDataProtectionRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 7),
    _OpticalIfDataProtectionRole_Type()
)
opticalIfDataProtectionRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataProtectionRole.setStatus("current")
_OpticalIfDataChannelSpacing_Type = FspR7ChannelSpacing
_OpticalIfDataChannelSpacing_Object = MibTableColumn
opticalIfDataChannelSpacing = _OpticalIfDataChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 8),
    _OpticalIfDataChannelSpacing_Type()
)
opticalIfDataChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataChannelSpacing.setStatus("current")
_OpticalIfDataTunableLowestChannel_Type = FspR7ChannelIdentifier
_OpticalIfDataTunableLowestChannel_Object = MibTableColumn
opticalIfDataTunableLowestChannel = _OpticalIfDataTunableLowestChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 9),
    _OpticalIfDataTunableLowestChannel_Type()
)
opticalIfDataTunableLowestChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataTunableLowestChannel.setStatus("current")
_OpticalIfDataTunableHighestChannel_Type = FspR7ChannelIdentifier
_OpticalIfDataTunableHighestChannel_Object = MibTableColumn
opticalIfDataTunableHighestChannel = _OpticalIfDataTunableHighestChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 10),
    _OpticalIfDataTunableHighestChannel_Type()
)
opticalIfDataTunableHighestChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataTunableHighestChannel.setStatus("current")
_OpticalIfDataTransmitWavelength_Type = Unsigned32
_OpticalIfDataTransmitWavelength_Object = MibTableColumn
opticalIfDataTransmitWavelength = _OpticalIfDataTransmitWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 11),
    _OpticalIfDataTransmitWavelength_Type()
)
opticalIfDataTransmitWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataTransmitWavelength.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataTransmitWavelength.setUnits("0.01 nm")
_OpticalIfDataFrequency_Type = Unsigned32
_OpticalIfDataFrequency_Object = MibTableColumn
opticalIfDataFrequency = _OpticalIfDataFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 12),
    _OpticalIfDataFrequency_Type()
)
opticalIfDataFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataFrequency.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataFrequency.setUnits("0.01 THz")
_OpticalIfDataChannelsNumber_Type = FspR7NumberOfChannels
_OpticalIfDataChannelsNumber_Object = MibTableColumn
opticalIfDataChannelsNumber = _OpticalIfDataChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 13),
    _OpticalIfDataChannelsNumber_Type()
)
opticalIfDataChannelsNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataChannelsNumber.setStatus("current")
_OpticalIfDataFunction_Type = FspR7InterfaceFunction
_OpticalIfDataFunction_Object = MibTableColumn
opticalIfDataFunction = _OpticalIfDataFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 14),
    _OpticalIfDataFunction_Type()
)
opticalIfDataFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataFunction.setStatus("current")
_OpticalIfDataPortMode_Type = FspR7PortMode
_OpticalIfDataPortMode_Object = MibTableColumn
opticalIfDataPortMode = _OpticalIfDataPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 15),
    _OpticalIfDataPortMode_Type()
)
opticalIfDataPortMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataPortMode.setStatus("current")
_OpticalIfDataPortRole_Type = FspR7PortRole
_OpticalIfDataPortRole_Object = MibTableColumn
opticalIfDataPortRole = _OpticalIfDataPortRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 16),
    _OpticalIfDataPortRole_Type()
)
opticalIfDataPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataPortRole.setStatus("current")
_OpticalIfDataCirRcv_Type = Unsigned32
_OpticalIfDataCirRcv_Object = MibTableColumn
opticalIfDataCirRcv = _OpticalIfDataCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 17),
    _OpticalIfDataCirRcv_Type()
)
opticalIfDataCirRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataCirRcv.setUnits("Mbit/s")


class _OpticalIfDataCbsRcv_Type(Unsigned32):
    """Custom type opticalIfDataCbsRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26214400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfDataCbsRcv_Type.__name__ = "Unsigned32"
_OpticalIfDataCbsRcv_Object = MibTableColumn
opticalIfDataCbsRcv = _OpticalIfDataCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 18),
    _OpticalIfDataCbsRcv_Type()
)
opticalIfDataCbsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataCbsRcv.setUnits("bytes")
_OpticalIfDataCirTrmt_Type = Unsigned32
_OpticalIfDataCirTrmt_Object = MibTableColumn
opticalIfDataCirTrmt = _OpticalIfDataCirTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 19),
    _OpticalIfDataCirTrmt_Type()
)
opticalIfDataCirTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataCirTrmt.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataCirTrmt.setUnits("Mbit/s")


class _OpticalIfDataCbsTrmt_Type(Unsigned32):
    """Custom type opticalIfDataCbsTrmt based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 25600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfDataCbsTrmt_Type.__name__ = "Unsigned32"
_OpticalIfDataCbsTrmt_Object = MibTableColumn
opticalIfDataCbsTrmt = _OpticalIfDataCbsTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 20),
    _OpticalIfDataCbsTrmt_Type()
)
opticalIfDataCbsTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataCbsTrmt.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataCbsTrmt.setUnits("Kbytes")
_OpticalIfDataVethAid_Type = EntityIndex
_OpticalIfDataVethAid_Object = MibTableColumn
opticalIfDataVethAid = _OpticalIfDataVethAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 21),
    _OpticalIfDataVethAid_Type()
)
opticalIfDataVethAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataVethAid.setStatus("current")
_OpticalIfDataLagPorts_Type = FspR7LagPorts
_OpticalIfDataLagPorts_Object = MibTableColumn
opticalIfDataLagPorts = _OpticalIfDataLagPorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 22),
    _OpticalIfDataLagPorts_Type()
)
opticalIfDataLagPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagPorts.setStatus("current")
_OpticalIfDataLagPortType_Type = FspR7LagPortType
_OpticalIfDataLagPortType_Object = MibTableColumn
opticalIfDataLagPortType = _OpticalIfDataLagPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 23),
    _OpticalIfDataLagPortType_Type()
)
opticalIfDataLagPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagPortType.setStatus("current")
_OpticalIfDataLagStandby_Type = FspR7LagStandby
_OpticalIfDataLagStandby_Object = MibTableColumn
opticalIfDataLagStandby = _OpticalIfDataLagStandby_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 24),
    _OpticalIfDataLagStandby_Type()
)
opticalIfDataLagStandby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagStandby.setStatus("current")
_OpticalIfDataLacpMode_Type = FspR7LacpMode
_OpticalIfDataLacpMode_Object = MibTableColumn
opticalIfDataLacpMode = _OpticalIfDataLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 25),
    _OpticalIfDataLacpMode_Type()
)
opticalIfDataLacpMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLacpMode.setStatus("current")
_OpticalIfDataLagKey_Type = Unsigned32
_OpticalIfDataLagKey_Object = MibTableColumn
opticalIfDataLagKey = _OpticalIfDataLagKey_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 26),
    _OpticalIfDataLagKey_Type()
)
opticalIfDataLagKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagKey.setStatus("current")
_OpticalIfDataLagPortNo_Type = Unsigned32
_OpticalIfDataLagPortNo_Object = MibTableColumn
opticalIfDataLagPortNo = _OpticalIfDataLagPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 27),
    _OpticalIfDataLagPortNo_Type()
)
opticalIfDataLagPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagPortNo.setStatus("current")
_OpticalIfDataLagState_Type = FspR7LagState
_OpticalIfDataLagState_Object = MibTableColumn
opticalIfDataLagState = _OpticalIfDataLagState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 28),
    _OpticalIfDataLagState_Type()
)
opticalIfDataLagState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagState.setStatus("current")
_OpticalIfDataLagIdFend_Type = FspR7LagIdFend
_OpticalIfDataLagIdFend_Object = MibTableColumn
opticalIfDataLagIdFend = _OpticalIfDataLagIdFend_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 29),
    _OpticalIfDataLagIdFend_Type()
)
opticalIfDataLagIdFend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagIdFend.setStatus("current")
_OpticalIfDataLagFendState_Type = FspR7LagFendState
_OpticalIfDataLagFendState_Object = MibTableColumn
opticalIfDataLagFendState = _OpticalIfDataLagFendState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 30),
    _OpticalIfDataLagFendState_Type()
)
opticalIfDataLagFendState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagFendState.setStatus("current")
_OpticalIfDataLagSysMac_Type = MacAddress
_OpticalIfDataLagSysMac_Object = MibTableColumn
opticalIfDataLagSysMac = _OpticalIfDataLagSysMac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 31),
    _OpticalIfDataLagSysMac_Type()
)
opticalIfDataLagSysMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagSysMac.setStatus("current")
_OpticalIfDataLagSysIdFend_Type = FspR7LagSysIdFend
_OpticalIfDataLagSysIdFend_Object = MibTableColumn
opticalIfDataLagSysIdFend = _OpticalIfDataLagSysIdFend_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 32),
    _OpticalIfDataLagSysIdFend_Type()
)
opticalIfDataLagSysIdFend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagSysIdFend.setStatus("current")


class _OpticalIfDataLagSysPrio_Type(Unsigned32):
    """Custom type opticalIfDataLagSysPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfDataLagSysPrio_Type.__name__ = "Unsigned32"
_OpticalIfDataLagSysPrio_Object = MibTableColumn
opticalIfDataLagSysPrio = _OpticalIfDataLagSysPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 33),
    _OpticalIfDataLagSysPrio_Type()
)
opticalIfDataLagSysPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLagSysPrio.setStatus("current")
_OpticalIfDataBand_Type = FspR7OpticalBand
_OpticalIfDataBand_Object = MibTableColumn
opticalIfDataBand = _OpticalIfDataBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 34),
    _OpticalIfDataBand_Type()
)
opticalIfDataBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataBand.setStatus("current")
_OpticalIfDataStuff_Type = FspR7Stuff
_OpticalIfDataStuff_Object = MibTableColumn
opticalIfDataStuff = _OpticalIfDataStuff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 35),
    _OpticalIfDataStuff_Type()
)
opticalIfDataStuff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataStuff.setStatus("current")
_OpticalIfDataChannelsProvision_Type = FspR7NumberOfChannels
_OpticalIfDataChannelsProvision_Object = MibTableColumn
opticalIfDataChannelsProvision = _OpticalIfDataChannelsProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 36),
    _OpticalIfDataChannelsProvision_Type()
)
opticalIfDataChannelsProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataChannelsProvision.setStatus("current")
_OpticalIfDataAutoPTassignment_Type = FspR7ManualAuto
_OpticalIfDataAutoPTassignment_Object = MibTableColumn
opticalIfDataAutoPTassignment = _OpticalIfDataAutoPTassignment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 37),
    _OpticalIfDataAutoPTassignment_Type()
)
opticalIfDataAutoPTassignment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataAutoPTassignment.setStatus("current")


class _OpticalIfDataTributaryFreeSlotNo_Type(Unsigned32):
    """Custom type opticalIfDataTributaryFreeSlotNo based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfDataTributaryFreeSlotNo_Type.__name__ = "Unsigned32"
_OpticalIfDataTributaryFreeSlotNo_Object = MibTableColumn
opticalIfDataTributaryFreeSlotNo = _OpticalIfDataTributaryFreeSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 38),
    _OpticalIfDataTributaryFreeSlotNo_Type()
)
opticalIfDataTributaryFreeSlotNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataTributaryFreeSlotNo.setStatus("current")


class _OpticalIfDataTributaryAssignedSlotNo_Type(Unsigned32):
    """Custom type opticalIfDataTributaryAssignedSlotNo based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfDataTributaryAssignedSlotNo_Type.__name__ = "Unsigned32"
_OpticalIfDataTributaryAssignedSlotNo_Object = MibTableColumn
opticalIfDataTributaryAssignedSlotNo = _OpticalIfDataTributaryAssignedSlotNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 39),
    _OpticalIfDataTributaryAssignedSlotNo_Type()
)
opticalIfDataTributaryAssignedSlotNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataTributaryAssignedSlotNo.setStatus("current")
_OpticalIfDataOdtuType_Type = FspR7OdtuType
_OpticalIfDataOdtuType_Object = MibTableColumn
opticalIfDataOdtuType = _OpticalIfDataOdtuType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 40),
    _OpticalIfDataOdtuType_Type()
)
opticalIfDataOdtuType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataOdtuType.setStatus("current")
_OpticalIfDataOduTribPortNo_Type = SnmpAdminString
_OpticalIfDataOduTribPortNo_Object = MibTableColumn
opticalIfDataOduTribPortNo = _OpticalIfDataOduTribPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 41),
    _OpticalIfDataOduTribPortNo_Type()
)
opticalIfDataOduTribPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataOduTribPortNo.setStatus("current")
_OpticalIfDataOduTribTimeSlottNo_Type = SnmpAdminString
_OpticalIfDataOduTribTimeSlottNo_Object = MibTableColumn
opticalIfDataOduTribTimeSlottNo = _OpticalIfDataOduTribTimeSlottNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 42),
    _OpticalIfDataOduTribTimeSlottNo_Type()
)
opticalIfDataOduTribTimeSlottNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataOduTribTimeSlottNo.setStatus("current")
_OpticalIfDataLaserDelayTimer_Type = FspR7LaneGroupInventory
_OpticalIfDataLaserDelayTimer_Object = MibTableColumn
opticalIfDataLaserDelayTimer = _OpticalIfDataLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 43),
    _OpticalIfDataLaserDelayTimer_Type()
)
opticalIfDataLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLaserDelayTimer.setStatus("current")
_OpticalIfDataLaneChannel1_Type = FspR7ChannelIdentifier
_OpticalIfDataLaneChannel1_Object = MibTableColumn
opticalIfDataLaneChannel1 = _OpticalIfDataLaneChannel1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 44),
    _OpticalIfDataLaneChannel1_Type()
)
opticalIfDataLaneChannel1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLaneChannel1.setStatus("current")
_OpticalIfDataLaneChannel2_Type = FspR7ChannelIdentifier
_OpticalIfDataLaneChannel2_Object = MibTableColumn
opticalIfDataLaneChannel2 = _OpticalIfDataLaneChannel2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 45),
    _OpticalIfDataLaneChannel2_Type()
)
opticalIfDataLaneChannel2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLaneChannel2.setStatus("current")
_OpticalIfDataLaneChannel3_Type = FspR7ChannelIdentifier
_OpticalIfDataLaneChannel3_Object = MibTableColumn
opticalIfDataLaneChannel3 = _OpticalIfDataLaneChannel3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 46),
    _OpticalIfDataLaneChannel3_Type()
)
opticalIfDataLaneChannel3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLaneChannel3.setStatus("current")
_OpticalIfDataLaneChannel4_Type = FspR7ChannelIdentifier
_OpticalIfDataLaneChannel4_Object = MibTableColumn
opticalIfDataLaneChannel4 = _OpticalIfDataLaneChannel4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 47),
    _OpticalIfDataLaneChannel4_Type()
)
opticalIfDataLaneChannel4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataLaneChannel4.setStatus("current")
_OpticalIfDataReceiverWavelength_Type = Unsigned32
_OpticalIfDataReceiverWavelength_Object = MibTableColumn
opticalIfDataReceiverWavelength = _OpticalIfDataReceiverWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 48),
    _OpticalIfDataReceiverWavelength_Type()
)
opticalIfDataReceiverWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataReceiverWavelength.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataReceiverWavelength.setUnits("0.01 nm")
_OpticalIfDataReceiverFrequency_Type = Unsigned32
_OpticalIfDataReceiverFrequency_Object = MibTableColumn
opticalIfDataReceiverFrequency = _OpticalIfDataReceiverFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 4, 1, 49),
    _OpticalIfDataReceiverFrequency_Type()
)
opticalIfDataReceiverFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDataReceiverFrequency.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDataReceiverFrequency.setUnits("0.01 THz")
_OpticalIfDiagTable_Object = MibTable
opticalIfDiagTable = _OpticalIfDiagTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5)
)
if mibBuilder.loadTexts:
    opticalIfDiagTable.setStatus("current")
_OpticalIfDiagEntry_Object = MibTableRow
opticalIfDiagEntry = _OpticalIfDiagEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1)
)
opticalIfDiagEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalIfDiagEntry.setStatus("current")
_OpticalIfDiagLaserBiasCurrentNormalized_Type = Unsigned32
_OpticalIfDiagLaserBiasCurrentNormalized_Object = MibTableColumn
opticalIfDiagLaserBiasCurrentNormalized = _OpticalIfDiagLaserBiasCurrentNormalized_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 1),
    _OpticalIfDiagLaserBiasCurrentNormalized_Type()
)
opticalIfDiagLaserBiasCurrentNormalized.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLaserBiasCurrentNormalized.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLaserBiasCurrentNormalized.setUnits("%")
_OpticalIfDiagLaserTemp_Type = Integer32
_OpticalIfDiagLaserTemp_Object = MibTableColumn
opticalIfDiagLaserTemp = _OpticalIfDiagLaserTemp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 2),
    _OpticalIfDiagLaserTemp_Type()
)
opticalIfDiagLaserTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLaserTemp.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLaserTemp.setUnits("0.1 degree Celsius")
_OpticalIfDiagInputPower_Type = Integer32
_OpticalIfDiagInputPower_Object = MibTableColumn
opticalIfDiagInputPower = _OpticalIfDiagInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 3),
    _OpticalIfDiagInputPower_Type()
)
opticalIfDiagInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagInputPower.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagInputPower.setUnits("0.1 dBm")
_OpticalIfDiagOutputPower_Type = Integer32
_OpticalIfDiagOutputPower_Object = MibTableColumn
opticalIfDiagOutputPower = _OpticalIfDiagOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 4),
    _OpticalIfDiagOutputPower_Type()
)
opticalIfDiagOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagOutputPower.setUnits("0.1 dBm")
_OpticalIfDiagLaserBiasCurrentLevel_Type = Unsigned32
_OpticalIfDiagLaserBiasCurrentLevel_Object = MibTableColumn
opticalIfDiagLaserBiasCurrentLevel = _OpticalIfDiagLaserBiasCurrentLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 5),
    _OpticalIfDiagLaserBiasCurrentLevel_Type()
)
opticalIfDiagLaserBiasCurrentLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLaserBiasCurrentLevel.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLaserBiasCurrentLevel.setUnits("0.001 A")
_OpticalIfDiagPumpLaser1Temp_Type = Integer32
_OpticalIfDiagPumpLaser1Temp_Object = MibTableColumn
opticalIfDiagPumpLaser1Temp = _OpticalIfDiagPumpLaser1Temp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 6),
    _OpticalIfDiagPumpLaser1Temp_Type()
)
opticalIfDiagPumpLaser1Temp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser1Temp.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser1Temp.setUnits("0.1 degree Celsius")
_OpticalIfDiagPumpLaser2Temp_Type = Integer32
_OpticalIfDiagPumpLaser2Temp_Object = MibTableColumn
opticalIfDiagPumpLaser2Temp = _OpticalIfDiagPumpLaser2Temp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 7),
    _OpticalIfDiagPumpLaser2Temp_Type()
)
opticalIfDiagPumpLaser2Temp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser2Temp.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser2Temp.setUnits("0.1 degree Celsius")
_OpticalIfDiagPumpLaserBiasCurrent1_Type = Unsigned32
_OpticalIfDiagPumpLaserBiasCurrent1_Object = MibTableColumn
opticalIfDiagPumpLaserBiasCurrent1 = _OpticalIfDiagPumpLaserBiasCurrent1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 8),
    _OpticalIfDiagPumpLaserBiasCurrent1_Type()
)
opticalIfDiagPumpLaserBiasCurrent1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent1.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent1.setUnits("0.001 A")
_OpticalIfDiagPumpLaserBiasCurrent2_Type = Unsigned32
_OpticalIfDiagPumpLaserBiasCurrent2_Object = MibTableColumn
opticalIfDiagPumpLaserBiasCurrent2 = _OpticalIfDiagPumpLaserBiasCurrent2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 9),
    _OpticalIfDiagPumpLaserBiasCurrent2_Type()
)
opticalIfDiagPumpLaserBiasCurrent2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent2.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent2.setUnits("0.001 A")
_OpticalIfDiagAttenuationOfVoa_Type = Unsigned32
_OpticalIfDiagAttenuationOfVoa_Object = MibTableColumn
opticalIfDiagAttenuationOfVoa = _OpticalIfDiagAttenuationOfVoa_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 10),
    _OpticalIfDiagAttenuationOfVoa_Type()
)
opticalIfDiagAttenuationOfVoa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagAttenuationOfVoa.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagAttenuationOfVoa.setUnits("0.1 dB")
_OpticalIfDiagBackreflectionPowerReceived_Type = Integer32
_OpticalIfDiagBackreflectionPowerReceived_Object = MibTableColumn
opticalIfDiagBackreflectionPowerReceived = _OpticalIfDiagBackreflectionPowerReceived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 11),
    _OpticalIfDiagBackreflectionPowerReceived_Type()
)
opticalIfDiagBackreflectionPowerReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagBackreflectionPowerReceived.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagBackreflectionPowerReceived.setUnits("0.1 dB")
_OpticalIfDiagOscGain_Type = Unsigned32
_OpticalIfDiagOscGain_Object = MibTableColumn
opticalIfDiagOscGain = _OpticalIfDiagOscGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 12),
    _OpticalIfDiagOscGain_Type()
)
opticalIfDiagOscGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagOscGain.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagOscGain.setUnits("0.1 dB")
_OpticalIfDiagOscPowerReceived_Type = Integer32
_OpticalIfDiagOscPowerReceived_Object = MibTableColumn
opticalIfDiagOscPowerReceived = _OpticalIfDiagOscPowerReceived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 13),
    _OpticalIfDiagOscPowerReceived_Type()
)
opticalIfDiagOscPowerReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagOscPowerReceived.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagOscPowerReceived.setUnits("0.1 dBm")
_OpticalIfDiagRamanPumpPower_Type = Integer32
_OpticalIfDiagRamanPumpPower_Object = MibTableColumn
opticalIfDiagRamanPumpPower = _OpticalIfDiagRamanPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 14),
    _OpticalIfDiagRamanPumpPower_Type()
)
opticalIfDiagRamanPumpPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagRamanPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagRamanPumpPower.setUnits("0.1 dBm")
_OpticalIfDiagRamanEstSignalGain_Type = Unsigned32
_OpticalIfDiagRamanEstSignalGain_Object = MibTableColumn
opticalIfDiagRamanEstSignalGain = _OpticalIfDiagRamanEstSignalGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 15),
    _OpticalIfDiagRamanEstSignalGain_Type()
)
opticalIfDiagRamanEstSignalGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagRamanEstSignalGain.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagRamanEstSignalGain.setUnits("0.1 dB")
_OpticalIfDiagChromaticDispersionCompensation_Type = Integer32
_OpticalIfDiagChromaticDispersionCompensation_Object = MibTableColumn
opticalIfDiagChromaticDispersionCompensation = _OpticalIfDiagChromaticDispersionCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 16),
    _OpticalIfDiagChromaticDispersionCompensation_Type()
)
opticalIfDiagChromaticDispersionCompensation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagChromaticDispersionCompensation.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagChromaticDispersionCompensation.setUnits("ps/nm")
_OpticalIfDiagLinkAttenuation_Type = Integer32
_OpticalIfDiagLinkAttenuation_Object = MibTableColumn
opticalIfDiagLinkAttenuation = _OpticalIfDiagLinkAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 17),
    _OpticalIfDiagLinkAttenuation_Type()
)
opticalIfDiagLinkAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLinkAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLinkAttenuation.setUnits("0.1 dB")
_OpticalIfDiagPumpLaserBiasCurrent3_Type = Unsigned32
_OpticalIfDiagPumpLaserBiasCurrent3_Object = MibTableColumn
opticalIfDiagPumpLaserBiasCurrent3 = _OpticalIfDiagPumpLaserBiasCurrent3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 18),
    _OpticalIfDiagPumpLaserBiasCurrent3_Type()
)
opticalIfDiagPumpLaserBiasCurrent3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent3.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent3.setUnits("0.001 A")
_OpticalIfDiagPumpLaser3Temp_Type = Integer32
_OpticalIfDiagPumpLaser3Temp_Object = MibTableColumn
opticalIfDiagPumpLaser3Temp = _OpticalIfDiagPumpLaser3Temp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 19),
    _OpticalIfDiagPumpLaser3Temp_Type()
)
opticalIfDiagPumpLaser3Temp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser3Temp.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser3Temp.setUnits("0.1 degree Celsius")


class _OpticalIfDiagLatency_Type(Unsigned32):
    """Custom type opticalIfDiagLatency based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfDiagLatency_Type.__name__ = "Unsigned32"
_OpticalIfDiagLatency_Object = MibTableColumn
opticalIfDiagLatency = _OpticalIfDiagLatency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 20),
    _OpticalIfDiagLatency_Type()
)
opticalIfDiagLatency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLatency.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLatency.setUnits("0.1 us")


class _OpticalIfDiagRoundTripDelay_Type(Unsigned32):
    """Custom type opticalIfDiagRoundTripDelay based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30000000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OpticalIfDiagRoundTripDelay_Type.__name__ = "Unsigned32"
_OpticalIfDiagRoundTripDelay_Object = MibTableColumn
opticalIfDiagRoundTripDelay = _OpticalIfDiagRoundTripDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 21),
    _OpticalIfDiagRoundTripDelay_Type()
)
opticalIfDiagRoundTripDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagRoundTripDelay.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagRoundTripDelay.setUnits("ns")
_OpticalIfDiagOscOutputPower_Type = Integer32
_OpticalIfDiagOscOutputPower_Object = MibTableColumn
opticalIfDiagOscOutputPower = _OpticalIfDiagOscOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 22),
    _OpticalIfDiagOscOutputPower_Type()
)
opticalIfDiagOscOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagOscOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagOscOutputPower.setUnits("0.1 dBm")
_OpticalIfDiagPumpLaser4Temp_Type = Integer32
_OpticalIfDiagPumpLaser4Temp_Object = MibTableColumn
opticalIfDiagPumpLaser4Temp = _OpticalIfDiagPumpLaser4Temp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 23),
    _OpticalIfDiagPumpLaser4Temp_Type()
)
opticalIfDiagPumpLaser4Temp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser4Temp.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaser4Temp.setUnits("0.1 degree Celsius")
_OpticalIfDiagPumpLaserBiasCurrent4_Type = Unsigned32
_OpticalIfDiagPumpLaserBiasCurrent4_Object = MibTableColumn
opticalIfDiagPumpLaserBiasCurrent4 = _OpticalIfDiagPumpLaserBiasCurrent4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 24),
    _OpticalIfDiagPumpLaserBiasCurrent4_Type()
)
opticalIfDiagPumpLaserBiasCurrent4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent4.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPumpLaserBiasCurrent4.setUnits("0.001 A")
_OpticalIfDiagEstimatedChPwrRcv_Type = Integer32
_OpticalIfDiagEstimatedChPwrRcv_Object = MibTableColumn
opticalIfDiagEstimatedChPwrRcv = _OpticalIfDiagEstimatedChPwrRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 25),
    _OpticalIfDiagEstimatedChPwrRcv_Type()
)
opticalIfDiagEstimatedChPwrRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagEstimatedChPwrRcv.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagEstimatedChPwrRcv.setUnits("0.1 dBm")
_OpticalIfDiagLocalOscTemp_Type = Integer32
_OpticalIfDiagLocalOscTemp_Object = MibTableColumn
opticalIfDiagLocalOscTemp = _OpticalIfDiagLocalOscTemp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 26),
    _OpticalIfDiagLocalOscTemp_Type()
)
opticalIfDiagLocalOscTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLocalOscTemp.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLocalOscTemp.setUnits("0.1 degree Celsius")
_OpticalIfDiagDifferentialGroupDelay_Type = Integer32
_OpticalIfDiagDifferentialGroupDelay_Object = MibTableColumn
opticalIfDiagDifferentialGroupDelay = _OpticalIfDiagDifferentialGroupDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 27),
    _OpticalIfDiagDifferentialGroupDelay_Type()
)
opticalIfDiagDifferentialGroupDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagDifferentialGroupDelay.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagDifferentialGroupDelay.setUnits("ps")
_OpticalIfDiagChromaticDispersion_Type = Integer32
_OpticalIfDiagChromaticDispersion_Object = MibTableColumn
opticalIfDiagChromaticDispersion = _OpticalIfDiagChromaticDispersion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 28),
    _OpticalIfDiagChromaticDispersion_Type()
)
opticalIfDiagChromaticDispersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagChromaticDispersion.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagChromaticDispersion.setUnits("ps/nm")
_OpticalIfDiagSignalToNoiseRatio_Type = Integer32
_OpticalIfDiagSignalToNoiseRatio_Object = MibTableColumn
opticalIfDiagSignalToNoiseRatio = _OpticalIfDiagSignalToNoiseRatio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 29),
    _OpticalIfDiagSignalToNoiseRatio_Type()
)
opticalIfDiagSignalToNoiseRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagSignalToNoiseRatio.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagSignalToNoiseRatio.setUnits("0.1 dB")
_OpticalIfDiagCarrierFreqOffset_Type = Integer32
_OpticalIfDiagCarrierFreqOffset_Object = MibTableColumn
opticalIfDiagCarrierFreqOffset = _OpticalIfDiagCarrierFreqOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 30),
    _OpticalIfDiagCarrierFreqOffset_Type()
)
opticalIfDiagCarrierFreqOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagCarrierFreqOffset.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagCarrierFreqOffset.setUnits("0.001 GHz")
_OpticalIfDiagLocalOscBiasLevel_Type = Unsigned32
_OpticalIfDiagLocalOscBiasLevel_Object = MibTableColumn
opticalIfDiagLocalOscBiasLevel = _OpticalIfDiagLocalOscBiasLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 31),
    _OpticalIfDiagLocalOscBiasLevel_Type()
)
opticalIfDiagLocalOscBiasLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLocalOscBiasLevel.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLocalOscBiasLevel.setUnits("0.001 A")
_OpticalIfDiagPrbsElapsedTime_Type = Unsigned32
_OpticalIfDiagPrbsElapsedTime_Object = MibTableColumn
opticalIfDiagPrbsElapsedTime = _OpticalIfDiagPrbsElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 32),
    _OpticalIfDiagPrbsElapsedTime_Type()
)
opticalIfDiagPrbsElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsElapsedTime.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsElapsedTime.setUnits("s")
_OpticalIfDiagPrbsErrorFreeTime_Type = Unsigned32
_OpticalIfDiagPrbsErrorFreeTime_Object = MibTableColumn
opticalIfDiagPrbsErrorFreeTime = _OpticalIfDiagPrbsErrorFreeTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 33),
    _OpticalIfDiagPrbsErrorFreeTime_Type()
)
opticalIfDiagPrbsErrorFreeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsErrorFreeTime.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsErrorFreeTime.setUnits("s")
_OpticalIfDiagPrbsAvgBER_Type = Counter64String
_OpticalIfDiagPrbsAvgBER_Object = MibTableColumn
opticalIfDiagPrbsAvgBER = _OpticalIfDiagPrbsAvgBER_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 34),
    _OpticalIfDiagPrbsAvgBER_Type()
)
opticalIfDiagPrbsAvgBER.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsAvgBER.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsAvgBER.setUnits("1.0E-15")
_OpticalIfDiagPrbsMaxBER_Type = Counter64String
_OpticalIfDiagPrbsMaxBER_Object = MibTableColumn
opticalIfDiagPrbsMaxBER = _OpticalIfDiagPrbsMaxBER_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 35),
    _OpticalIfDiagPrbsMaxBER_Type()
)
opticalIfDiagPrbsMaxBER.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsMaxBER.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagPrbsMaxBER.setUnits("1.0E-15")
_OpticalIfDiagLogicalLanesSkew_Type = Integer32
_OpticalIfDiagLogicalLanesSkew_Object = MibTableColumn
opticalIfDiagLogicalLanesSkew = _OpticalIfDiagLogicalLanesSkew_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 36),
    _OpticalIfDiagLogicalLanesSkew_Type()
)
opticalIfDiagLogicalLanesSkew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagLogicalLanesSkew.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagLogicalLanesSkew.setUnits("ns")
_OpticalIfDiagCurrentEdfaOpt_Type = Integer32
_OpticalIfDiagCurrentEdfaOpt_Object = MibTableColumn
opticalIfDiagCurrentEdfaOpt = _OpticalIfDiagCurrentEdfaOpt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 37),
    _OpticalIfDiagCurrentEdfaOpt_Type()
)
opticalIfDiagCurrentEdfaOpt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagCurrentEdfaOpt.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagCurrentEdfaOpt.setUnits("0.1 dBm")
_OpticalIfDiagTotalGainMeasurement_Type = Integer32
_OpticalIfDiagTotalGainMeasurement_Object = MibTableColumn
opticalIfDiagTotalGainMeasurement = _OpticalIfDiagTotalGainMeasurement_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 5, 1, 38),
    _OpticalIfDiagTotalGainMeasurement_Type()
)
opticalIfDiagTotalGainMeasurement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfDiagTotalGainMeasurement.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfDiagTotalGainMeasurement.setUnits("0.1 dB")
_EthernetConfigTable_Object = MibTable
ethernetConfigTable = _EthernetConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6)
)
if mibBuilder.loadTexts:
    ethernetConfigTable.setStatus("current")
_EthernetConfigEntry_Object = MibTableRow
ethernetConfigEntry = _EthernetConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1)
)
ethernetConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    ethernetConfigEntry.setStatus("current")
_EthernetConfigAutoNegotiation_Type = EnableState
_EthernetConfigAutoNegotiation_Object = MibTableColumn
ethernetConfigAutoNegotiation = _EthernetConfigAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 1),
    _EthernetConfigAutoNegotiation_Type()
)
ethernetConfigAutoNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetConfigAutoNegotiation.setStatus("current")
_EthernetConfigDuplexMode_Type = EthDuplexMode
_EthernetConfigDuplexMode_Object = MibTableColumn
ethernetConfigDuplexMode = _EthernetConfigDuplexMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 2),
    _EthernetConfigDuplexMode_Type()
)
ethernetConfigDuplexMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetConfigDuplexMode.setStatus("current")
_EthernetConfigBitrate_Type = FspR7Bitrate
_EthernetConfigBitrate_Object = MibTableColumn
ethernetConfigBitrate = _EthernetConfigBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 3),
    _EthernetConfigBitrate_Type()
)
ethernetConfigBitrate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetConfigBitrate.setStatus("current")
_EthernetConfigFlowControl_Type = FspR7FlowControlMode
_EthernetConfigFlowControl_Object = MibTableColumn
ethernetConfigFlowControl = _EthernetConfigFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 4),
    _EthernetConfigFlowControl_Type()
)
ethernetConfigFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetConfigFlowControl.setStatus("current")
_EthernetConfigIpType_Type = FspR7IpType
_EthernetConfigIpType_Object = MibTableColumn
ethernetConfigIpType = _EthernetConfigIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 5),
    _EthernetConfigIpType_Type()
)
ethernetConfigIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetConfigIpType.setStatus("current")
_EthernetConfigIpAddrMonitor_Type = IpAddress
_EthernetConfigIpAddrMonitor_Object = MibTableColumn
ethernetConfigIpAddrMonitor = _EthernetConfigIpAddrMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 6),
    _EthernetConfigIpAddrMonitor_Type()
)
ethernetConfigIpAddrMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetConfigIpAddrMonitor.setStatus("current")
_EthernetConfigIpMaskMonitor_Type = IpAddress
_EthernetConfigIpMaskMonitor_Object = MibTableColumn
ethernetConfigIpMaskMonitor = _EthernetConfigIpMaskMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 7),
    _EthernetConfigIpMaskMonitor_Type()
)
ethernetConfigIpMaskMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetConfigIpMaskMonitor.setStatus("current")
_EthernetConfigAreaId_Type = IpAddress
_EthernetConfigAreaId_Object = MibTableColumn
ethernetConfigAreaId = _EthernetConfigAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 6, 1, 8),
    _EthernetConfigAreaId_Type()
)
ethernetConfigAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetConfigAreaId.setStatus("current")
_LanIpConfigTable_Object = MibTable
lanIpConfigTable = _LanIpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 8)
)
if mibBuilder.loadTexts:
    lanIpConfigTable.setStatus("current")
_LanIpConfigEntry_Object = MibTableRow
lanIpConfigEntry = _LanIpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 8, 1)
)
lanIpConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    lanIpConfigEntry.setStatus("current")
_LanIpConfigIpAddr_Type = IpAddress
_LanIpConfigIpAddr_Object = MibTableColumn
lanIpConfigIpAddr = _LanIpConfigIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 8, 1, 1),
    _LanIpConfigIpAddr_Type()
)
lanIpConfigIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lanIpConfigIpAddr.setStatus("current")
_LanIpConfigIpAddrMask_Type = IpAddress
_LanIpConfigIpAddrMask_Object = MibTableColumn
lanIpConfigIpAddrMask = _LanIpConfigIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 8, 1, 2),
    _LanIpConfigIpAddrMask_Type()
)
lanIpConfigIpAddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lanIpConfigIpAddrMask.setStatus("current")


class _LanIpConfigPrio_Type(Unsigned32):
    """Custom type lanIpConfigPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LanIpConfigPrio_Type.__name__ = "Unsigned32"
_LanIpConfigPrio_Object = MibTableColumn
lanIpConfigPrio = _LanIpConfigPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 8, 1, 3),
    _LanIpConfigPrio_Type()
)
lanIpConfigPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lanIpConfigPrio.setStatus("current")
_LanIpConfigAuthType_Type = FspR7CpAuthType
_LanIpConfigAuthType_Object = MibTableColumn
lanIpConfigAuthType = _LanIpConfigAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 8, 1, 4),
    _LanIpConfigAuthType_Type()
)
lanIpConfigAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lanIpConfigAuthType.setStatus("current")
_LanIpConfigAuthString_Type = SnmpAdminString
_LanIpConfigAuthString_Object = MibTableColumn
lanIpConfigAuthString = _LanIpConfigAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 8, 1, 5),
    _LanIpConfigAuthString_Type()
)
lanIpConfigAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    lanIpConfigAuthString.setStatus("current")
_OspfConfigTable_Object = MibTable
ospfConfigTable = _OspfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 9)
)
if mibBuilder.loadTexts:
    ospfConfigTable.setStatus("current")
_OspfConfigEntry_Object = MibTableRow
ospfConfigEntry = _OspfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 9, 1)
)
ospfConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    ospfConfigEntry.setStatus("current")
_OspfConfigOspf_Type = FspR7OspfMode
_OspfConfigOspf_Object = MibTableColumn
ospfConfigOspf = _OspfConfigOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 9, 1, 1),
    _OspfConfigOspf_Type()
)
ospfConfigOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfConfigOspf.setStatus("current")


class _OspfConfigMetric_Type(Unsigned32):
    """Custom type ospfConfigMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_OspfConfigMetric_Type.__name__ = "Unsigned32"
_OspfConfigMetric_Object = MibTableColumn
ospfConfigMetric = _OspfConfigMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 9, 1, 2),
    _OspfConfigMetric_Type()
)
ospfConfigMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ospfConfigMetric.setStatus("current")
_OspfDataTable_Object = MibTable
ospfDataTable = _OspfDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 10)
)
if mibBuilder.loadTexts:
    ospfDataTable.setStatus("current")
_OspfDataEntry_Object = MibTableRow
ospfDataEntry = _OspfDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 10, 1)
)
ospfDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    ospfDataEntry.setStatus("current")
_OspfDataDesignatedRouter_Type = IpAddress
_OspfDataDesignatedRouter_Object = MibTableColumn
ospfDataDesignatedRouter = _OspfDataDesignatedRouter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 10, 1, 1),
    _OspfDataDesignatedRouter_Type()
)
ospfDataDesignatedRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfDataDesignatedRouter.setStatus("current")
_OspfDataBkupDesignatedRouter_Type = IpAddress
_OspfDataBkupDesignatedRouter_Object = MibTableColumn
ospfDataBkupDesignatedRouter = _OspfDataBkupDesignatedRouter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 10, 1, 2),
    _OspfDataBkupDesignatedRouter_Type()
)
ospfDataBkupDesignatedRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ospfDataBkupDesignatedRouter.setStatus("current")
_PppfConfigTable_Object = MibTable
pppfConfigTable = _PppfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11)
)
if mibBuilder.loadTexts:
    pppfConfigTable.setStatus("current")
_PppfConfigEntry_Object = MibTableRow
pppfConfigEntry = _PppfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1)
)
pppfConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    pppfConfigEntry.setStatus("current")


class _PppfConfigBitrate_Type(Unsigned32):
    """Custom type pppfConfigBitrate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1312),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_PppfConfigBitrate_Type.__name__ = "Unsigned32"
_PppfConfigBitrate_Object = MibTableColumn
pppfConfigBitrate = _PppfConfigBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 1),
    _PppfConfigBitrate_Type()
)
pppfConfigBitrate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigBitrate.setStatus("current")
if mibBuilder.loadTexts:
    pppfConfigBitrate.setUnits("kbit/s")
_PppfConfigIpType_Type = FspR7IpType
_PppfConfigIpType_Object = MibTableColumn
pppfConfigIpType = _PppfConfigIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 2),
    _PppfConfigIpType_Type()
)
pppfConfigIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigIpType.setStatus("current")
_PppfConfigDataLayerPmReset_Type = FspR7PmReset
_PppfConfigDataLayerPmReset_Object = MibTableColumn
pppfConfigDataLayerPmReset = _PppfConfigDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 3),
    _PppfConfigDataLayerPmReset_Type()
)
pppfConfigDataLayerPmReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigDataLayerPmReset.setStatus("current")
_PppfConfigAreaId_Type = IpAddress
_PppfConfigAreaId_Object = MibTableColumn
pppfConfigAreaId = _PppfConfigAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 4),
    _PppfConfigAreaId_Type()
)
pppfConfigAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigAreaId.setStatus("current")
_PppfConfigBaud_Type = FspR7Baund
_PppfConfigBaud_Object = MibTableColumn
pppfConfigBaud = _PppfConfigBaud_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 5),
    _PppfConfigBaud_Type()
)
pppfConfigBaud.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigBaud.setStatus("current")
_PppfConfigAlias_Type = SnmpAdminString
_PppfConfigAlias_Object = MibTableColumn
pppfConfigAlias = _PppfConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 6),
    _PppfConfigAlias_Type()
)
pppfConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigAlias.setStatus("current")
_PppfConfigAuthType_Type = FspR7CpAuthType
_PppfConfigAuthType_Object = MibTableColumn
pppfConfigAuthType = _PppfConfigAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 7),
    _PppfConfigAuthType_Type()
)
pppfConfigAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigAuthType.setStatus("current")
_PppfConfigAuthString_Type = SnmpAdminString
_PppfConfigAuthString_Object = MibTableColumn
pppfConfigAuthString = _PppfConfigAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 11, 1, 8),
    _PppfConfigAuthString_Type()
)
pppfConfigAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pppfConfigAuthString.setStatus("current")
_PppDataTable_Object = MibTable
pppDataTable = _PppDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 12)
)
if mibBuilder.loadTexts:
    pppDataTable.setStatus("current")
_PppDataEntry_Object = MibTableRow
pppDataEntry = _PppDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 12, 1)
)
pppDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    pppDataEntry.setStatus("current")
_PppDataNearEndIp_Type = IpAddress
_PppDataNearEndIp_Object = MibTableColumn
pppDataNearEndIp = _PppDataNearEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 12, 1, 1),
    _PppDataNearEndIp_Type()
)
pppDataNearEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppDataNearEndIp.setStatus("current")
_PppDataFarEndIp_Type = IpAddress
_PppDataFarEndIp_Object = MibTableColumn
pppDataFarEndIp = _PppDataFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 12, 1, 2),
    _PppDataFarEndIp_Type()
)
pppDataFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppDataFarEndIp.setStatus("current")
_PppDataEccInstance_Type = EntityIndex
_PppDataEccInstance_Object = MibTableColumn
pppDataEccInstance = _PppDataEccInstance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 12, 1, 3),
    _PppDataEccInstance_Type()
)
pppDataEccInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppDataEccInstance.setStatus("current")
_PppDataNearEndIpMonitor_Type = IpAddress
_PppDataNearEndIpMonitor_Object = MibTableColumn
pppDataNearEndIpMonitor = _PppDataNearEndIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 12, 1, 4),
    _PppDataNearEndIpMonitor_Type()
)
pppDataNearEndIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppDataNearEndIpMonitor.setStatus("current")
_PppDataProxyArp_Type = FspR7NoYes
_PppDataProxyArp_Object = MibTableColumn
pppDataProxyArp = _PppDataProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 12, 1, 5),
    _PppDataProxyArp_Type()
)
pppDataProxyArp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pppDataProxyArp.setStatus("current")
_CrsDcnDataTable_Object = MibTable
crsDcnDataTable = _CrsDcnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 13)
)
if mibBuilder.loadTexts:
    crsDcnDataTable.setStatus("current")
_CrsDcnDataEntry_Object = MibTableRow
crsDcnDataEntry = _CrsDcnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 13, 1)
)
crsDcnDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    crsDcnDataEntry.setStatus("current")
_CrsDcnDataPppInstance_Type = EntityIndex
_CrsDcnDataPppInstance_Object = MibTableColumn
crsDcnDataPppInstance = _CrsDcnDataPppInstance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 13, 1, 1),
    _CrsDcnDataPppInstance_Type()
)
crsDcnDataPppInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsDcnDataPppInstance.setStatus("current")
_CrsDcnDataEccInstance_Type = EntityIndex
_CrsDcnDataEccInstance_Object = MibTableColumn
crsDcnDataEccInstance = _CrsDcnDataEccInstance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 13, 1, 2),
    _CrsDcnDataEccInstance_Type()
)
crsDcnDataEccInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsDcnDataEccInstance.setStatus("current")
_EocDataTable_Object = MibTable
eocDataTable = _EocDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 14)
)
if mibBuilder.loadTexts:
    eocDataTable.setStatus("current")
_EocDataEntry_Object = MibTableRow
eocDataEntry = _EocDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 14, 1)
)
eocDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    eocDataEntry.setStatus("current")
_EocDataProtAvailability_Type = FspR7EocProtAvailability
_EocDataProtAvailability_Object = MibTableColumn
eocDataProtAvailability = _EocDataProtAvailability_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 14, 1, 1),
    _EocDataProtAvailability_Type()
)
eocDataProtAvailability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eocDataProtAvailability.setStatus("current")
_EocDataIpEntity_Type = EntityIndex
_EocDataIpEntity_Object = MibTableColumn
eocDataIpEntity = _EocDataIpEntity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 14, 1, 2),
    _EocDataIpEntity_Type()
)
eocDataIpEntity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eocDataIpEntity.setStatus("current")
_EocDataMaxDataRate_Type = Unsigned32
_EocDataMaxDataRate_Object = MibTableColumn
eocDataMaxDataRate = _EocDataMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 14, 1, 3),
    _EocDataMaxDataRate_Type()
)
eocDataMaxDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eocDataMaxDataRate.setStatus("current")
if mibBuilder.loadTexts:
    eocDataMaxDataRate.setUnits("kbit/s")
_EocDataConnectionType_Type = FspR7TypeConnection
_EocDataConnectionType_Object = MibTableColumn
eocDataConnectionType = _EocDataConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 14, 1, 4),
    _EocDataConnectionType_Type()
)
eocDataConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eocDataConnectionType.setStatus("current")
_EocDataProtectionRole_Type = FspR7ProtectionRole
_EocDataProtectionRole_Object = MibTableColumn
eocDataProtectionRole = _EocDataProtectionRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 14, 1, 5),
    _EocDataProtectionRole_Type()
)
eocDataProtectionRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eocDataProtectionRole.setStatus("current")
_OpticalIfOlmTable_Object = MibTable
opticalIfOlmTable = _OpticalIfOlmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 15)
)
if mibBuilder.loadTexts:
    opticalIfOlmTable.setStatus("current")
_OpticalIfOlmEntry_Object = MibTableRow
opticalIfOlmEntry = _OpticalIfOlmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 15, 1)
)
opticalIfOlmEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalIfOlmEntry.setStatus("current")
_OpticalIfOlmRxLineAttenuation_Type = Integer32
_OpticalIfOlmRxLineAttenuation_Object = MibTableColumn
opticalIfOlmRxLineAttenuation = _OpticalIfOlmRxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 15, 1, 1),
    _OpticalIfOlmRxLineAttenuation_Type()
)
opticalIfOlmRxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfOlmRxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfOlmRxLineAttenuation.setUnits("0.1 dB")
_OpticalIfOlmTxLineAttenuation_Type = Integer32
_OpticalIfOlmTxLineAttenuation_Object = MibTableColumn
opticalIfOlmTxLineAttenuation = _OpticalIfOlmTxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 15, 1, 2),
    _OpticalIfOlmTxLineAttenuation_Type()
)
opticalIfOlmTxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfOlmTxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfOlmTxLineAttenuation.setUnits("0.1 dB")
_OpticalIfOlmFarEndSigDegThres_Type = Unsigned32
_OpticalIfOlmFarEndSigDegThres_Object = MibTableColumn
opticalIfOlmFarEndSigDegThres = _OpticalIfOlmFarEndSigDegThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 15, 1, 3),
    _OpticalIfOlmFarEndSigDegThres_Type()
)
opticalIfOlmFarEndSigDegThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfOlmFarEndSigDegThres.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfOlmFarEndSigDegThres.setUnits("0.1 dB")
_OpticalAmplifierInterfaceDiagnosticsTable_Object = MibTable
opticalAmplifierInterfaceDiagnosticsTable = _OpticalAmplifierInterfaceDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16)
)
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsTable.setStatus("current")
_OpticalAmplifierInterfaceDiagnosticsEntry_Object = MibTableRow
opticalAmplifierInterfaceDiagnosticsEntry = _OpticalAmplifierInterfaceDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16, 1)
)
opticalAmplifierInterfaceDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsEntry.setStatus("current")
_OpticalAmplifierInterfaceDiagnosticsOperatingHours_Type = Unsigned32
_OpticalAmplifierInterfaceDiagnosticsOperatingHours_Object = MibTableColumn
opticalAmplifierInterfaceDiagnosticsOperatingHours = _OpticalAmplifierInterfaceDiagnosticsOperatingHours_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16, 1, 1),
    _OpticalAmplifierInterfaceDiagnosticsOperatingHours_Type()
)
opticalAmplifierInterfaceDiagnosticsOperatingHours.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsOperatingHours.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsOperatingHours.setUnits("0.1 H")
_OpticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage_Type = Unsigned32
_OpticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage_Object = MibTableColumn
opticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage = _OpticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16, 1, 2),
    _OpticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage_Type()
)
opticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage.setUnits("0.001 A")
_OpticalAmplifierInterfaceDiagnosticsAttenuation_Type = Integer32
_OpticalAmplifierInterfaceDiagnosticsAttenuation_Object = MibTableColumn
opticalAmplifierInterfaceDiagnosticsAttenuation = _OpticalAmplifierInterfaceDiagnosticsAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16, 1, 3),
    _OpticalAmplifierInterfaceDiagnosticsAttenuation_Type()
)
opticalAmplifierInterfaceDiagnosticsAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsAttenuation.setUnits("0.1 dB")
_OpticalAmplifierInterfaceDiagnosticsAttenuationVoa_Type = Unsigned32
_OpticalAmplifierInterfaceDiagnosticsAttenuationVoa_Object = MibTableColumn
opticalAmplifierInterfaceDiagnosticsAttenuationVoa = _OpticalAmplifierInterfaceDiagnosticsAttenuationVoa_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16, 1, 4),
    _OpticalAmplifierInterfaceDiagnosticsAttenuationVoa_Type()
)
opticalAmplifierInterfaceDiagnosticsAttenuationVoa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsAttenuationVoa.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsAttenuationVoa.setUnits("0.1 dB")
_OpticalAmplifierInterfaceDiagnosticsSubTemp_Type = Integer32
_OpticalAmplifierInterfaceDiagnosticsSubTemp_Object = MibTableColumn
opticalAmplifierInterfaceDiagnosticsSubTemp = _OpticalAmplifierInterfaceDiagnosticsSubTemp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16, 1, 5),
    _OpticalAmplifierInterfaceDiagnosticsSubTemp_Type()
)
opticalAmplifierInterfaceDiagnosticsSubTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsSubTemp.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsSubTemp.setUnits("0.1 degree Celsius")
_OpticalAmplifierInterfaceDiagnosticsUpperSubTempThres_Type = Integer32
_OpticalAmplifierInterfaceDiagnosticsUpperSubTempThres_Object = MibTableColumn
opticalAmplifierInterfaceDiagnosticsUpperSubTempThres = _OpticalAmplifierInterfaceDiagnosticsUpperSubTempThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 16, 1, 6),
    _OpticalAmplifierInterfaceDiagnosticsUpperSubTempThres_Type()
)
opticalAmplifierInterfaceDiagnosticsUpperSubTempThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsUpperSubTempThres.setStatus("current")
if mibBuilder.loadTexts:
    opticalAmplifierInterfaceDiagnosticsUpperSubTempThres.setUnits("0.1 degree Celsius")
_EthernetDataTable_Object = MibTable
ethernetDataTable = _EthernetDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 17)
)
if mibBuilder.loadTexts:
    ethernetDataTable.setStatus("current")
_EthernetDataEntry_Object = MibTableRow
ethernetDataEntry = _EthernetDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 17, 1)
)
ethernetDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    ethernetDataEntry.setStatus("current")
_EthernetDataMonitoredDuplexMode_Type = EthDuplexMode
_EthernetDataMonitoredDuplexMode_Object = MibTableColumn
ethernetDataMonitoredDuplexMode = _EthernetDataMonitoredDuplexMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 17, 1, 1),
    _EthernetDataMonitoredDuplexMode_Type()
)
ethernetDataMonitoredDuplexMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetDataMonitoredDuplexMode.setStatus("current")
_EthernetDataMonitoredBitrate_Type = Unsigned32
_EthernetDataMonitoredBitrate_Object = MibTableColumn
ethernetDataMonitoredBitrate = _EthernetDataMonitoredBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 17, 1, 2),
    _EthernetDataMonitoredBitrate_Type()
)
ethernetDataMonitoredBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetDataMonitoredBitrate.setStatus("current")
if mibBuilder.loadTexts:
    ethernetDataMonitoredBitrate.setUnits("Mbit/s")
_EthernetDataType_Type = FspR7InterfaceType
_EthernetDataType_Object = MibTableColumn
ethernetDataType = _EthernetDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 17, 1, 3),
    _EthernetDataType_Type()
)
ethernetDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetDataType.setStatus("current")


class _EthernetDataValidSignalTimer_Type(Unsigned32):
    """Custom type ethernetDataValidSignalTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_EthernetDataValidSignalTimer_Type.__name__ = "Unsigned32"
_EthernetDataValidSignalTimer_Object = MibTableColumn
ethernetDataValidSignalTimer = _EthernetDataValidSignalTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 17, 1, 4),
    _EthernetDataValidSignalTimer_Type()
)
ethernetDataValidSignalTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetDataValidSignalTimer.setStatus("current")
if mibBuilder.loadTexts:
    ethernetDataValidSignalTimer.setUnits("min")
_OpticalFilterIfDataTable_Object = MibTable
opticalFilterIfDataTable = _OpticalFilterIfDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 19)
)
if mibBuilder.loadTexts:
    opticalFilterIfDataTable.setStatus("current")
_OpticalFilterIfDataEntry_Object = MibTableRow
opticalFilterIfDataEntry = _OpticalFilterIfDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 19, 1)
)
opticalFilterIfDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalFilterIfDataEntry.setStatus("current")
_OpticalFilterIfDataMultiplexLevel_Type = FspR7OpticalMultiplexLevel
_OpticalFilterIfDataMultiplexLevel_Object = MibTableColumn
opticalFilterIfDataMultiplexLevel = _OpticalFilterIfDataMultiplexLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 19, 1, 1),
    _OpticalFilterIfDataMultiplexLevel_Type()
)
opticalFilterIfDataMultiplexLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalFilterIfDataMultiplexLevel.setStatus("current")
_ApsProtFacilityConfigCapTable_Object = MibTable
apsProtFacilityConfigCapTable = _ApsProtFacilityConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 20)
)
if mibBuilder.loadTexts:
    apsProtFacilityConfigCapTable.setStatus("current")
_ApsProtFacilityConfigCapEntry_Object = MibTableRow
apsProtFacilityConfigCapEntry = _ApsProtFacilityConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 20, 1)
)
apsProtFacilityConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    apsProtFacilityConfigCapEntry.setStatus("current")
_ApsProtFacilityConfigCapSwitchCommand_Type = FspR7APSCommandCaps
_ApsProtFacilityConfigCapSwitchCommand_Object = MibTableColumn
apsProtFacilityConfigCapSwitchCommand = _ApsProtFacilityConfigCapSwitchCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 20, 1, 1),
    _ApsProtFacilityConfigCapSwitchCommand_Type()
)
apsProtFacilityConfigCapSwitchCommand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtFacilityConfigCapSwitchCommand.setStatus("current")
_ApsProtFacilityConfigCapInhibitSwitchToProt_Type = FspR7YesNoCaps
_ApsProtFacilityConfigCapInhibitSwitchToProt_Object = MibTableColumn
apsProtFacilityConfigCapInhibitSwitchToProt = _ApsProtFacilityConfigCapInhibitSwitchToProt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 20, 1, 2),
    _ApsProtFacilityConfigCapInhibitSwitchToProt_Type()
)
apsProtFacilityConfigCapInhibitSwitchToProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtFacilityConfigCapInhibitSwitchToProt.setStatus("current")
_ApsProtFacilityConfigCapInhibitSwitchToWork_Type = FspR7YesNoCaps
_ApsProtFacilityConfigCapInhibitSwitchToWork_Object = MibTableColumn
apsProtFacilityConfigCapInhibitSwitchToWork = _ApsProtFacilityConfigCapInhibitSwitchToWork_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 20, 1, 3),
    _ApsProtFacilityConfigCapInhibitSwitchToWork_Type()
)
apsProtFacilityConfigCapInhibitSwitchToWork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsProtFacilityConfigCapInhibitSwitchToWork.setStatus("current")
_InterfaceConfigCapTable_Object = MibTable
interfaceConfigCapTable = _InterfaceConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21)
)
if mibBuilder.loadTexts:
    interfaceConfigCapTable.setStatus("current")
_InterfaceConfigCapEntry_Object = MibTableRow
interfaceConfigCapEntry = _InterfaceConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1)
)
interfaceConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    interfaceConfigCapEntry.setStatus("current")
_InterfaceConfigCapLoopConfig_Type = LoopConfigCaps
_InterfaceConfigCapLoopConfig_Object = MibTableColumn
interfaceConfigCapLoopConfig = _InterfaceConfigCapLoopConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 1),
    _InterfaceConfigCapLoopConfig_Type()
)
interfaceConfigCapLoopConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapLoopConfig.setStatus("current")
_InterfaceConfigCapDataLayerPmReset_Type = FspR7PmResetCaps
_InterfaceConfigCapDataLayerPmReset_Object = MibTableColumn
interfaceConfigCapDataLayerPmReset = _InterfaceConfigCapDataLayerPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 2),
    _InterfaceConfigCapDataLayerPmReset_Type()
)
interfaceConfigCapDataLayerPmReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapDataLayerPmReset.setStatus("current")
_InterfaceConfigCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_InterfaceConfigCapEqlzAdmin_Object = MibTableColumn
interfaceConfigCapEqlzAdmin = _InterfaceConfigCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 3),
    _InterfaceConfigCapEqlzAdmin_Type()
)
interfaceConfigCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapEqlzAdmin.setStatus("current")
_InterfaceConfigCapDispertionConfig_Type = FspR7DispersionConfigCaps
_InterfaceConfigCapDispertionConfig_Object = MibTableColumn
interfaceConfigCapDispertionConfig = _InterfaceConfigCapDispertionConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 4),
    _InterfaceConfigCapDispertionConfig_Type()
)
interfaceConfigCapDispertionConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapDispertionConfig.setStatus("current")
_InterfaceConfigCapTurnupConfig_Type = FspR7TurnupConfigCaps
_InterfaceConfigCapTurnupConfig_Object = MibTableColumn
interfaceConfigCapTurnupConfig = _InterfaceConfigCapTurnupConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 5),
    _InterfaceConfigCapTurnupConfig_Type()
)
interfaceConfigCapTurnupConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapTurnupConfig.setStatus("current")
_InterfaceConfigCapInitiateEqualization_Type = FspR7InitEqualizationCaps
_InterfaceConfigCapInitiateEqualization_Object = MibTableColumn
interfaceConfigCapInitiateEqualization = _InterfaceConfigCapInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 6),
    _InterfaceConfigCapInitiateEqualization_Type()
)
interfaceConfigCapInitiateEqualization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapInitiateEqualization.setStatus("current")
_InterfaceConfigCapBehaviour_Type = FspR7PortBehaviourCaps
_InterfaceConfigCapBehaviour_Object = MibTableColumn
interfaceConfigCapBehaviour = _InterfaceConfigCapBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 7),
    _InterfaceConfigCapBehaviour_Type()
)
interfaceConfigCapBehaviour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapBehaviour.setStatus("current")
_InterfaceConfigCapInitiateRamanEqualization_Type = FspR7InitEqualizationCaps
_InterfaceConfigCapInitiateRamanEqualization_Object = MibTableColumn
interfaceConfigCapInitiateRamanEqualization = _InterfaceConfigCapInitiateRamanEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 8),
    _InterfaceConfigCapInitiateRamanEqualization_Type()
)
interfaceConfigCapInitiateRamanEqualization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapInitiateRamanEqualization.setStatus("current")
_InterfaceConfigCapSigDegPcslThreshold_Type = FspR7Unsigned32Caps
_InterfaceConfigCapSigDegPcslThreshold_Object = MibTableColumn
interfaceConfigCapSigDegPcslThreshold = _InterfaceConfigCapSigDegPcslThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 21, 1, 9),
    _InterfaceConfigCapSigDegPcslThreshold_Type()
)
interfaceConfigCapSigDegPcslThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigCapSigDegPcslThreshold.setStatus("current")
if mibBuilder.loadTexts:
    interfaceConfigCapSigDegPcslThreshold.setUnits("%")
_OpticalIfConfigCapTable_Object = MibTable
opticalIfConfigCapTable = _OpticalIfConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22)
)
if mibBuilder.loadTexts:
    opticalIfConfigCapTable.setStatus("current")
_OpticalIfConfigCapEntry_Object = MibTableRow
opticalIfConfigCapEntry = _OpticalIfConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1)
)
opticalIfConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalIfConfigCapEntry.setStatus("current")
_OpticalIfConfigCapForceLaserOn_Type = FspR7LaserForcedOperationCaps
_OpticalIfConfigCapForceLaserOn_Object = MibTableColumn
opticalIfConfigCapForceLaserOn = _OpticalIfConfigCapForceLaserOn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 1),
    _OpticalIfConfigCapForceLaserOn_Type()
)
opticalIfConfigCapForceLaserOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapForceLaserOn.setStatus("current")
_OpticalIfConfigCapLossAttenuation_Type = FspR7LossAttenuationCaps
_OpticalIfConfigCapLossAttenuation_Object = MibTableColumn
opticalIfConfigCapLossAttenuation = _OpticalIfConfigCapLossAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 2),
    _OpticalIfConfigCapLossAttenuation_Type()
)
opticalIfConfigCapLossAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLossAttenuation.setStatus("current")
_OpticalIfConfigCapWdmRxChannel_Type = FspR7ChannelIdentifierCaps
_OpticalIfConfigCapWdmRxChannel_Object = MibTableColumn
opticalIfConfigCapWdmRxChannel = _OpticalIfConfigCapWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 3),
    _OpticalIfConfigCapWdmRxChannel_Type()
)
opticalIfConfigCapWdmRxChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapWdmRxChannel.setStatus("current")
_OpticalIfConfigCapSigDegThresSonetSection_Type = FspR7BERThresholdSectionCaps
_OpticalIfConfigCapSigDegThresSonetSection_Object = MibTableColumn
opticalIfConfigCapSigDegThresSonetSection = _OpticalIfConfigCapSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 4),
    _OpticalIfConfigCapSigDegThresSonetSection_Type()
)
opticalIfConfigCapSigDegThresSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapSigDegThresSonetSection.setStatus("current")
_OpticalIfConfigCapDispersionMode_Type = FspR7DispersionModesCaps
_OpticalIfConfigCapDispersionMode_Object = MibTableColumn
opticalIfConfigCapDispersionMode = _OpticalIfConfigCapDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 5),
    _OpticalIfConfigCapDispersionMode_Type()
)
opticalIfConfigCapDispersionMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapDispersionMode.setStatus("current")
_OpticalIfConfigCapAutoThresReset_Type = FspR7AutoThresResetCaps
_OpticalIfConfigCapAutoThresReset_Object = MibTableColumn
opticalIfConfigCapAutoThresReset = _OpticalIfConfigCapAutoThresReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 6),
    _OpticalIfConfigCapAutoThresReset_Type()
)
opticalIfConfigCapAutoThresReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapAutoThresReset.setStatus("current")
_OpticalIfConfigCapAseTabCreation_Type = FspR7AseTabOprCaps
_OpticalIfConfigCapAseTabCreation_Object = MibTableColumn
opticalIfConfigCapAseTabCreation = _OpticalIfConfigCapAseTabCreation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 7),
    _OpticalIfConfigCapAseTabCreation_Type()
)
opticalIfConfigCapAseTabCreation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapAseTabCreation.setStatus("current")
_OpticalIfConfigCapUtag_Type = FspR7UntaggedFramesCaps
_OpticalIfConfigCapUtag_Object = MibTableColumn
opticalIfConfigCapUtag = _OpticalIfConfigCapUtag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 8),
    _OpticalIfConfigCapUtag_Type()
)
opticalIfConfigCapUtag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapUtag.setStatus("current")
_OpticalIfConfigCapCac_Type = FspR7L2CacEnableCaps
_OpticalIfConfigCapCac_Object = MibTableColumn
opticalIfConfigCapCac = _OpticalIfConfigCapCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 9),
    _OpticalIfConfigCapCac_Type()
)
opticalIfConfigCapCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapCac.setStatus("current")
_OpticalIfConfigCapLagLoadBallanceSource_Type = FspR7LagLoadBallanceSourceCaps
_OpticalIfConfigCapLagLoadBallanceSource_Object = MibTableColumn
opticalIfConfigCapLagLoadBallanceSource = _OpticalIfConfigCapLagLoadBallanceSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 10),
    _OpticalIfConfigCapLagLoadBallanceSource_Type()
)
opticalIfConfigCapLagLoadBallanceSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLagLoadBallanceSource.setStatus("current")
_OpticalIfConfigCapLacpTimeout_Type = FspR7LacpTimeoutCaps
_OpticalIfConfigCapLacpTimeout_Object = MibTableColumn
opticalIfConfigCapLacpTimeout = _OpticalIfConfigCapLacpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 11),
    _OpticalIfConfigCapLacpTimeout_Type()
)
opticalIfConfigCapLacpTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLacpTimeout.setStatus("current")
_OpticalIfConfigCapFarEndCommunication_Type = FspR7YesNoCaps
_OpticalIfConfigCapFarEndCommunication_Object = MibTableColumn
opticalIfConfigCapFarEndCommunication = _OpticalIfConfigCapFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 12),
    _OpticalIfConfigCapFarEndCommunication_Type()
)
opticalIfConfigCapFarEndCommunication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapFarEndCommunication.setStatus("current")
_OpticalIfConfigCapLacpMode_Type = FspR7LacpModeCaps
_OpticalIfConfigCapLacpMode_Object = MibTableColumn
opticalIfConfigCapLacpMode = _OpticalIfConfigCapLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 13),
    _OpticalIfConfigCapLacpMode_Type()
)
opticalIfConfigCapLacpMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLacpMode.setStatus("current")
_OpticalIfConfigCapTxOffDelay_Type = FspR7EnableDisableCaps
_OpticalIfConfigCapTxOffDelay_Object = MibTableColumn
opticalIfConfigCapTxOffDelay = _OpticalIfConfigCapTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 14),
    _OpticalIfConfigCapTxOffDelay_Type()
)
opticalIfConfigCapTxOffDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapTxOffDelay.setStatus("current")
_OpticalIfConfigCapOpuPayloadType_Type = FspR7OpuPayloadTypeCaps
_OpticalIfConfigCapOpuPayloadType_Object = MibTableColumn
opticalIfConfigCapOpuPayloadType = _OpticalIfConfigCapOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 15),
    _OpticalIfConfigCapOpuPayloadType_Type()
)
opticalIfConfigCapOpuPayloadType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapOpuPayloadType.setStatus("current")
_OpticalIfConfigCapOpticalSetPoint_Type = FspR7Integer32Caps
_OpticalIfConfigCapOpticalSetPoint_Object = MibTableColumn
opticalIfConfigCapOpticalSetPoint = _OpticalIfConfigCapOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 16),
    _OpticalIfConfigCapOpticalSetPoint_Type()
)
opticalIfConfigCapOpticalSetPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigCapOpticalSetPoint.setUnits("0.1 dBm")
_OpticalIfConfigCapTransmitChannel_Type = FspR7ChannelIdentifierCaps
_OpticalIfConfigCapTransmitChannel_Object = MibTableColumn
opticalIfConfigCapTransmitChannel = _OpticalIfConfigCapTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 17),
    _OpticalIfConfigCapTransmitChannel_Type()
)
opticalIfConfigCapTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapTransmitChannel.setStatus("current")
_OpticalIfConfigCapFiberBrand_Type = FspR7FiberBrandCaps
_OpticalIfConfigCapFiberBrand_Object = MibTableColumn
opticalIfConfigCapFiberBrand = _OpticalIfConfigCapFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 18),
    _OpticalIfConfigCapFiberBrand_Type()
)
opticalIfConfigCapFiberBrand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapFiberBrand.setStatus("current")
_OpticalIfConfigCapTiltSet_Type = FspR7TiltSetCaps
_OpticalIfConfigCapTiltSet_Object = MibTableColumn
opticalIfConfigCapTiltSet = _OpticalIfConfigCapTiltSet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 19),
    _OpticalIfConfigCapTiltSet_Type()
)
opticalIfConfigCapTiltSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapTiltSet.setStatus("current")
_OpticalIfConfigCapForceFwdAsePilotOn_Type = FspR7LaserForcedOperationCaps
_OpticalIfConfigCapForceFwdAsePilotOn_Object = MibTableColumn
opticalIfConfigCapForceFwdAsePilotOn = _OpticalIfConfigCapForceFwdAsePilotOn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 20),
    _OpticalIfConfigCapForceFwdAsePilotOn_Type()
)
opticalIfConfigCapForceFwdAsePilotOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapForceFwdAsePilotOn.setStatus("current")
_OpticalIfConfigCapXfpDecisionThres_Type = FspR7XfpDecisionThresCaps
_OpticalIfConfigCapXfpDecisionThres_Object = MibTableColumn
opticalIfConfigCapXfpDecisionThres = _OpticalIfConfigCapXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 21),
    _OpticalIfConfigCapXfpDecisionThres_Type()
)
opticalIfConfigCapXfpDecisionThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapXfpDecisionThres.setStatus("current")
_OpticalIfConfigCapPrbsPmReset_Type = FspR7PrbsPmResetCaps
_OpticalIfConfigCapPrbsPmReset_Object = MibTableColumn
opticalIfConfigCapPrbsPmReset = _OpticalIfConfigCapPrbsPmReset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 22),
    _OpticalIfConfigCapPrbsPmReset_Type()
)
opticalIfConfigCapPrbsPmReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapPrbsPmReset.setStatus("current")
_OpticalIfConfigCapTestPrbsRcvMode_Type = FspR7TestModeCaps
_OpticalIfConfigCapTestPrbsRcvMode_Object = MibTableColumn
opticalIfConfigCapTestPrbsRcvMode = _OpticalIfConfigCapTestPrbsRcvMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 23),
    _OpticalIfConfigCapTestPrbsRcvMode_Type()
)
opticalIfConfigCapTestPrbsRcvMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapTestPrbsRcvMode.setStatus("current")
_OpticalIfConfigCapTestPrbsTrmtMode_Type = FspR7TestModeCaps
_OpticalIfConfigCapTestPrbsTrmtMode_Object = MibTableColumn
opticalIfConfigCapTestPrbsTrmtMode = _OpticalIfConfigCapTestPrbsTrmtMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 24),
    _OpticalIfConfigCapTestPrbsTrmtMode_Type()
)
opticalIfConfigCapTestPrbsTrmtMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapTestPrbsTrmtMode.setStatus("current")
_OpticalIfConfigCapTributarySlotMethod_Type = FspR7ManualAutoCaps
_OpticalIfConfigCapTributarySlotMethod_Object = MibTableColumn
opticalIfConfigCapTributarySlotMethod = _OpticalIfConfigCapTributarySlotMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 25),
    _OpticalIfConfigCapTributarySlotMethod_Type()
)
opticalIfConfigCapTributarySlotMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapTributarySlotMethod.setStatus("current")
_OpticalIfConfigCapOffset_Type = FspR7Integer32Caps
_OpticalIfConfigCapOffset_Object = MibTableColumn
opticalIfConfigCapOffset = _OpticalIfConfigCapOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 26),
    _OpticalIfConfigCapOffset_Type()
)
opticalIfConfigCapOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapOffset.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigCapOffset.setUnits("0.1 dB")
_OpticalIfConfigCapTilt_Type = FspR7Integer32Caps
_OpticalIfConfigCapTilt_Object = MibTableColumn
opticalIfConfigCapTilt = _OpticalIfConfigCapTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 27),
    _OpticalIfConfigCapTilt_Type()
)
opticalIfConfigCapTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapTilt.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigCapTilt.setUnits("0.1 dB")
_OpticalIfConfigCapLaserDelayTimer_Type = FspR7LaserDelayTimerCaps
_OpticalIfConfigCapLaserDelayTimer_Object = MibTableColumn
opticalIfConfigCapLaserDelayTimer = _OpticalIfConfigCapLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 28),
    _OpticalIfConfigCapLaserDelayTimer_Type()
)
opticalIfConfigCapLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLaserDelayTimer.setStatus("current")
_OpticalIfConfigCapLaserOffTimer_Type = FspR7Unsigned32Caps
_OpticalIfConfigCapLaserOffTimer_Object = MibTableColumn
opticalIfConfigCapLaserOffTimer = _OpticalIfConfigCapLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 29),
    _OpticalIfConfigCapLaserOffTimer_Type()
)
opticalIfConfigCapLaserOffTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigCapLaserOffTimer.setUnits("ms")
_OpticalIfConfigCapLaserOnTimer_Type = FspR7Unsigned32Caps
_OpticalIfConfigCapLaserOnTimer_Object = MibTableColumn
opticalIfConfigCapLaserOnTimer = _OpticalIfConfigCapLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 30),
    _OpticalIfConfigCapLaserOnTimer_Type()
)
opticalIfConfigCapLaserOnTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    opticalIfConfigCapLaserOnTimer.setUnits("ms")
_OpticalIfConfigCapLaneChannelSetting_Type = FspR7ChannelIdentifierCaps
_OpticalIfConfigCapLaneChannelSetting_Object = MibTableColumn
opticalIfConfigCapLaneChannelSetting = _OpticalIfConfigCapLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 31),
    _OpticalIfConfigCapLaneChannelSetting_Type()
)
opticalIfConfigCapLaneChannelSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapLaneChannelSetting.setStatus("current")
_OpticalIfConfigCapBip_Type = FspR7BipCaps
_OpticalIfConfigCapBip_Object = MibTableColumn
opticalIfConfigCapBip = _OpticalIfConfigCapBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 32),
    _OpticalIfConfigCapBip_Type()
)
opticalIfConfigCapBip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapBip.setStatus("current")
_OpticalIfConfigCapCodeGain_Type = FspR7CodeGainCaps
_OpticalIfConfigCapCodeGain_Object = MibTableColumn
opticalIfConfigCapCodeGain = _OpticalIfConfigCapCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 22, 1, 33),
    _OpticalIfConfigCapCodeGain_Type()
)
opticalIfConfigCapCodeGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalIfConfigCapCodeGain.setStatus("current")
_EroadmIfDiagnosticsTable_Object = MibTable
eroadmIfDiagnosticsTable = _EroadmIfDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 23)
)
if mibBuilder.loadTexts:
    eroadmIfDiagnosticsTable.setStatus("current")
_EroadmIfDiagnosticsEntry_Object = MibTableRow
eroadmIfDiagnosticsEntry = _EroadmIfDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 23, 1)
)
eroadmIfDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    eroadmIfDiagnosticsEntry.setStatus("current")
_EroadmIfDiagnosticsAttenuationVoa_Type = Unsigned32
_EroadmIfDiagnosticsAttenuationVoa_Object = MibTableColumn
eroadmIfDiagnosticsAttenuationVoa = _EroadmIfDiagnosticsAttenuationVoa_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 23, 1, 1),
    _EroadmIfDiagnosticsAttenuationVoa_Type()
)
eroadmIfDiagnosticsAttenuationVoa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eroadmIfDiagnosticsAttenuationVoa.setStatus("current")
if mibBuilder.loadTexts:
    eroadmIfDiagnosticsAttenuationVoa.setUnits("0.1 dB")
_EroadmIfDiagnosticsOutputPower_Type = Integer32
_EroadmIfDiagnosticsOutputPower_Object = MibTableColumn
eroadmIfDiagnosticsOutputPower = _EroadmIfDiagnosticsOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 23, 1, 2),
    _EroadmIfDiagnosticsOutputPower_Type()
)
eroadmIfDiagnosticsOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    eroadmIfDiagnosticsOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    eroadmIfDiagnosticsOutputPower.setUnits("0.1 dBm")
_TifiConfigTable_Object = MibTable
tifiConfigTable = _TifiConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 24)
)
if mibBuilder.loadTexts:
    tifiConfigTable.setStatus("current")
_TifiConfigEntry_Object = MibTableRow
tifiConfigEntry = _TifiConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 24, 1)
)
tifiConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    tifiConfigEntry.setStatus("current")
_TifiConfigInvertTifInputLogic_Type = FspR7InvertTelemetryInputLogic
_TifiConfigInvertTifInputLogic_Object = MibTableColumn
tifiConfigInvertTifInputLogic = _TifiConfigInvertTifInputLogic_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 24, 1, 1),
    _TifiConfigInvertTifInputLogic_Type()
)
tifiConfigInvertTifInputLogic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tifiConfigInvertTifInputLogic.setStatus("current")
_TifiConfigTifAlarmType_Type = SnmpAdminString
_TifiConfigTifAlarmType_Object = MibTableColumn
tifiConfigTifAlarmType = _TifiConfigTifAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 24, 1, 2),
    _TifiConfigTifAlarmType_Type()
)
tifiConfigTifAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tifiConfigTifAlarmType.setStatus("current")
_TifiConfigTifAlarmMessage_Type = SnmpAdminString
_TifiConfigTifAlarmMessage_Object = MibTableColumn
tifiConfigTifAlarmMessage = _TifiConfigTifAlarmMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 24, 1, 3),
    _TifiConfigTifAlarmMessage_Type()
)
tifiConfigTifAlarmMessage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tifiConfigTifAlarmMessage.setStatus("current")
_TifiDataTable_Object = MibTable
tifiDataTable = _TifiDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 25)
)
if mibBuilder.loadTexts:
    tifiDataTable.setStatus("current")
_TifiDataEntry_Object = MibTableRow
tifiDataEntry = _TifiDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 25, 1)
)
tifiDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    tifiDataEntry.setStatus("current")
_TifiDataTifAlarmType_Type = SnmpAdminString
_TifiDataTifAlarmType_Object = MibTableColumn
tifiDataTifAlarmType = _TifiDataTifAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 25, 1, 1),
    _TifiDataTifAlarmType_Type()
)
tifiDataTifAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tifiDataTifAlarmType.setStatus("current")
_TifiDataTifAlarmMessage_Type = SnmpAdminString
_TifiDataTifAlarmMessage_Object = MibTableColumn
tifiDataTifAlarmMessage = _TifiDataTifAlarmMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 25, 1, 2),
    _TifiDataTifAlarmMessage_Type()
)
tifiDataTifAlarmMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tifiDataTifAlarmMessage.setStatus("current")
_TifoDataTable_Object = MibTable
tifoDataTable = _TifoDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 26)
)
if mibBuilder.loadTexts:
    tifoDataTable.setStatus("current")
_TifoDataEntry_Object = MibTableRow
tifoDataEntry = _TifoDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 26, 1)
)
tifoDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    tifoDataEntry.setStatus("current")
_TifoDataTelemetry_Type = FspR7TelemetryOutput
_TifoDataTelemetry_Object = MibTableColumn
tifoDataTelemetry = _TifoDataTelemetry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 26, 1, 1),
    _TifoDataTelemetry_Type()
)
tifoDataTelemetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tifoDataTelemetry.setStatus("current")
_TifoConfigTable_Object = MibTable
tifoConfigTable = _TifoConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 27)
)
if mibBuilder.loadTexts:
    tifoConfigTable.setStatus("current")
_TifoConfigEntry_Object = MibTableRow
tifoConfigEntry = _TifoConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 27, 1)
)
tifoConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    tifoConfigEntry.setStatus("current")
_TifoConfigTelemetry_Type = FspR7TelemetryOutput
_TifoConfigTelemetry_Object = MibTableColumn
tifoConfigTelemetry = _TifoConfigTelemetry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 27, 1, 1),
    _TifoConfigTelemetry_Type()
)
tifoConfigTelemetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tifoConfigTelemetry.setStatus("current")
_OpticalLinkConfigTable_Object = MibTable
opticalLinkConfigTable = _OpticalLinkConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 28)
)
if mibBuilder.loadTexts:
    opticalLinkConfigTable.setStatus("current")
_OpticalLinkConfigEntry_Object = MibTableRow
opticalLinkConfigEntry = _OpticalLinkConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 28, 1)
)
opticalLinkConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalLinkConfigEntry.setStatus("current")
_OpticalLinkConfigTxLineAttenuation_Type = Integer32
_OpticalLinkConfigTxLineAttenuation_Object = MibTableColumn
opticalLinkConfigTxLineAttenuation = _OpticalLinkConfigTxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 28, 1, 1),
    _OpticalLinkConfigTxLineAttenuation_Type()
)
opticalLinkConfigTxLineAttenuation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalLinkConfigTxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalLinkConfigTxLineAttenuation.setUnits("0.1 dB")
_OpticalLinkConfigRxLineAttenuation_Type = Integer32
_OpticalLinkConfigRxLineAttenuation_Object = MibTableColumn
opticalLinkConfigRxLineAttenuation = _OpticalLinkConfigRxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 28, 1, 2),
    _OpticalLinkConfigRxLineAttenuation_Type()
)
opticalLinkConfigRxLineAttenuation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalLinkConfigRxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    opticalLinkConfigRxLineAttenuation.setUnits("0.1 dB")
_OpticalLinkConfigFarEndLocation_Type = SnmpAdminString
_OpticalLinkConfigFarEndLocation_Object = MibTableColumn
opticalLinkConfigFarEndLocation = _OpticalLinkConfigFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 28, 1, 3),
    _OpticalLinkConfigFarEndLocation_Type()
)
opticalLinkConfigFarEndLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    opticalLinkConfigFarEndLocation.setStatus("current")
_OpticalLinkDataTable_Object = MibTable
opticalLinkDataTable = _OpticalLinkDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 29)
)
if mibBuilder.loadTexts:
    opticalLinkDataTable.setStatus("current")
_OpticalLinkDataEntry_Object = MibTableRow
opticalLinkDataEntry = _OpticalLinkDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 29, 1)
)
opticalLinkDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    opticalLinkDataEntry.setStatus("current")
_OpticalLinkDataLogicalInterfaceAid_Type = EntityIndex
_OpticalLinkDataLogicalInterfaceAid_Object = MibTableColumn
opticalLinkDataLogicalInterfaceAid = _OpticalLinkDataLogicalInterfaceAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 29, 1, 1),
    _OpticalLinkDataLogicalInterfaceAid_Type()
)
opticalLinkDataLogicalInterfaceAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    opticalLinkDataLogicalInterfaceAid.setStatus("current")
_VirtualOpticalChannelConfigTable_Object = MibTable
virtualOpticalChannelConfigTable = _VirtualOpticalChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 30)
)
if mibBuilder.loadTexts:
    virtualOpticalChannelConfigTable.setStatus("current")
_VirtualOpticalChannelConfigEntry_Object = MibTableRow
virtualOpticalChannelConfigEntry = _VirtualOpticalChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 30, 1)
)
virtualOpticalChannelConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    virtualOpticalChannelConfigEntry.setStatus("current")
_VirtualOpticalChannelConfigAlias_Type = SnmpAdminString
_VirtualOpticalChannelConfigAlias_Object = MibTableColumn
virtualOpticalChannelConfigAlias = _VirtualOpticalChannelConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 30, 1, 1),
    _VirtualOpticalChannelConfigAlias_Type()
)
virtualOpticalChannelConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualOpticalChannelConfigAlias.setStatus("current")
_VirtualOpticalChannelDataTable_Object = MibTable
virtualOpticalChannelDataTable = _VirtualOpticalChannelDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 31)
)
if mibBuilder.loadTexts:
    virtualOpticalChannelDataTable.setStatus("current")
_VirtualOpticalChannelDataEntry_Object = MibTableRow
virtualOpticalChannelDataEntry = _VirtualOpticalChannelDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 31, 1)
)
virtualOpticalChannelDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    virtualOpticalChannelDataEntry.setStatus("current")
_VirtualOpticalChannelDataTransmitWavelength_Type = Unsigned32
_VirtualOpticalChannelDataTransmitWavelength_Object = MibTableColumn
virtualOpticalChannelDataTransmitWavelength = _VirtualOpticalChannelDataTransmitWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 31, 1, 1),
    _VirtualOpticalChannelDataTransmitWavelength_Type()
)
virtualOpticalChannelDataTransmitWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualOpticalChannelDataTransmitWavelength.setStatus("current")
if mibBuilder.loadTexts:
    virtualOpticalChannelDataTransmitWavelength.setUnits("0.01 nm")
_VirtualOpticalChannelDataTransmitFrequency_Type = Unsigned32
_VirtualOpticalChannelDataTransmitFrequency_Object = MibTableColumn
virtualOpticalChannelDataTransmitFrequency = _VirtualOpticalChannelDataTransmitFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 31, 1, 2),
    _VirtualOpticalChannelDataTransmitFrequency_Type()
)
virtualOpticalChannelDataTransmitFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualOpticalChannelDataTransmitFrequency.setStatus("current")
if mibBuilder.loadTexts:
    virtualOpticalChannelDataTransmitFrequency.setUnits("0.01 THz")
_VirtualOpticalChannelDataTransmitChannel_Type = FspR7ChannelIdentifier
_VirtualOpticalChannelDataTransmitChannel_Object = MibTableColumn
virtualOpticalChannelDataTransmitChannel = _VirtualOpticalChannelDataTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 31, 1, 3),
    _VirtualOpticalChannelDataTransmitChannel_Type()
)
virtualOpticalChannelDataTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualOpticalChannelDataTransmitChannel.setStatus("current")
_VirtualOpticalChannelDataConnectState_Type = FspR7ConnectState
_VirtualOpticalChannelDataConnectState_Object = MibTableColumn
virtualOpticalChannelDataConnectState = _VirtualOpticalChannelDataConnectState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 31, 1, 4),
    _VirtualOpticalChannelDataConnectState_Type()
)
virtualOpticalChannelDataConnectState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualOpticalChannelDataConnectState.setStatus("current")
_VirtualOpticalChannelDataOwnerAid_Type = EntityIndex
_VirtualOpticalChannelDataOwnerAid_Object = MibTableColumn
virtualOpticalChannelDataOwnerAid = _VirtualOpticalChannelDataOwnerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 31, 1, 5),
    _VirtualOpticalChannelDataOwnerAid_Type()
)
virtualOpticalChannelDataOwnerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualOpticalChannelDataOwnerAid.setStatus("current")
_LogicalIfConfigTable_Object = MibTable
logicalIfConfigTable = _LogicalIfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32)
)
if mibBuilder.loadTexts:
    logicalIfConfigTable.setStatus("current")
_LogicalIfConfigEntry_Object = MibTableRow
logicalIfConfigEntry = _LogicalIfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1)
)
logicalIfConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    logicalIfConfigEntry.setStatus("current")
_LogicalIfConfigAlias_Type = SnmpAdminString
_LogicalIfConfigAlias_Object = MibTableColumn
logicalIfConfigAlias = _LogicalIfConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 1),
    _LogicalIfConfigAlias_Type()
)
logicalIfConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigAlias.setStatus("current")
_LogicalIfConfigAreaId_Type = IpAddress
_LogicalIfConfigAreaId_Object = MibTableColumn
logicalIfConfigAreaId = _LogicalIfConfigAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 2),
    _LogicalIfConfigAreaId_Type()
)
logicalIfConfigAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigAreaId.setStatus("current")


class _LogicalIfConfigMetric_Type(Unsigned32):
    """Custom type logicalIfConfigMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalIfConfigMetric_Type.__name__ = "Unsigned32"
_LogicalIfConfigMetric_Object = MibTableColumn
logicalIfConfigMetric = _LogicalIfConfigMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 3),
    _LogicalIfConfigMetric_Type()
)
logicalIfConfigMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigMetric.setStatus("current")


class _LogicalIfConfigHelloInterval_Type(Unsigned32):
    """Custom type logicalIfConfigHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalIfConfigHelloInterval_Type.__name__ = "Unsigned32"
_LogicalIfConfigHelloInterval_Object = MibTableColumn
logicalIfConfigHelloInterval = _LogicalIfConfigHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 4),
    _LogicalIfConfigHelloInterval_Type()
)
logicalIfConfigHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    logicalIfConfigHelloInterval.setUnits("s")


class _LogicalIfConfigDeadInterval_Type(Unsigned32):
    """Custom type logicalIfConfigDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalIfConfigDeadInterval_Type.__name__ = "Unsigned32"
_LogicalIfConfigDeadInterval_Object = MibTableColumn
logicalIfConfigDeadInterval = _LogicalIfConfigDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 5),
    _LogicalIfConfigDeadInterval_Type()
)
logicalIfConfigDeadInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    logicalIfConfigDeadInterval.setUnits("s")


class _LogicalIfConfigPrio_Type(Unsigned32):
    """Custom type logicalIfConfigPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalIfConfigPrio_Type.__name__ = "Unsigned32"
_LogicalIfConfigPrio_Object = MibTableColumn
logicalIfConfigPrio = _LogicalIfConfigPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 6),
    _LogicalIfConfigPrio_Type()
)
logicalIfConfigPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigPrio.setStatus("current")


class _LogicalIfConfigRetransmitInterval_Type(Unsigned32):
    """Custom type logicalIfConfigRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalIfConfigRetransmitInterval_Type.__name__ = "Unsigned32"
_LogicalIfConfigRetransmitInterval_Object = MibTableColumn
logicalIfConfigRetransmitInterval = _LogicalIfConfigRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 7),
    _LogicalIfConfigRetransmitInterval_Type()
)
logicalIfConfigRetransmitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    logicalIfConfigRetransmitInterval.setUnits("s")
_LogicalIfConfigAuthType_Type = FspR7CpAuthType
_LogicalIfConfigAuthType_Object = MibTableColumn
logicalIfConfigAuthType = _LogicalIfConfigAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 8),
    _LogicalIfConfigAuthType_Type()
)
logicalIfConfigAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigAuthType.setStatus("current")
_LogicalIfConfigAuthString_Type = SnmpAdminString
_LogicalIfConfigAuthString_Object = MibTableColumn
logicalIfConfigAuthString = _LogicalIfConfigAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 9),
    _LogicalIfConfigAuthString_Type()
)
logicalIfConfigAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigAuthString.setStatus("current")
_LogicalIfConfigOspf_Type = FspR7OspfMode
_LogicalIfConfigOspf_Object = MibTableColumn
logicalIfConfigOspf = _LogicalIfConfigOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 10),
    _LogicalIfConfigOspf_Type()
)
logicalIfConfigOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigOspf.setStatus("current")
_LogicalIfConfigPushedNearEndIpHeader_Type = IpAddress
_LogicalIfConfigPushedNearEndIpHeader_Object = MibTableColumn
logicalIfConfigPushedNearEndIpHeader = _LogicalIfConfigPushedNearEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 11),
    _LogicalIfConfigPushedNearEndIpHeader_Type()
)
logicalIfConfigPushedNearEndIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigPushedNearEndIpHeader.setStatus("current")
_LogicalIfConfigPushedFarEndIpHeader_Type = IpAddress
_LogicalIfConfigPushedFarEndIpHeader_Object = MibTableColumn
logicalIfConfigPushedFarEndIpHeader = _LogicalIfConfigPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 12),
    _LogicalIfConfigPushedFarEndIpHeader_Type()
)
logicalIfConfigPushedFarEndIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigPushedFarEndIpHeader.setStatus("current")


class _LogicalIfConfigTimeToLive_Type(Unsigned32):
    """Custom type logicalIfConfigTimeToLive based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalIfConfigTimeToLive_Type.__name__ = "Unsigned32"
_LogicalIfConfigTimeToLive_Object = MibTableColumn
logicalIfConfigTimeToLive = _LogicalIfConfigTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 32, 1, 13),
    _LogicalIfConfigTimeToLive_Type()
)
logicalIfConfigTimeToLive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalIfConfigTimeToLive.setStatus("current")
_LogicalIfDataTable_Object = MibTable
logicalIfDataTable = _LogicalIfDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33)
)
if mibBuilder.loadTexts:
    logicalIfDataTable.setStatus("current")
_LogicalIfDataEntry_Object = MibTableRow
logicalIfDataEntry = _LogicalIfDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1)
)
logicalIfDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    logicalIfDataEntry.setStatus("current")
_LogicalIfDataFacilityType_Type = FspR7InterfaceType
_LogicalIfDataFacilityType_Object = MibTableColumn
logicalIfDataFacilityType = _LogicalIfDataFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 1),
    _LogicalIfDataFacilityType_Type()
)
logicalIfDataFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataFacilityType.setStatus("current")
_LogicalIfDataLanLinkAid_Type = EntityIndex
_LogicalIfDataLanLinkAid_Object = MibTableColumn
logicalIfDataLanLinkAid = _LogicalIfDataLanLinkAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 2),
    _LogicalIfDataLanLinkAid_Type()
)
logicalIfDataLanLinkAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataLanLinkAid.setStatus("current")
_LogicalIfDataLogicalInterfaceId_Type = Unsigned32
_LogicalIfDataLogicalInterfaceId_Object = MibTableColumn
logicalIfDataLogicalInterfaceId = _LogicalIfDataLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 3),
    _LogicalIfDataLogicalInterfaceId_Type()
)
logicalIfDataLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataLogicalInterfaceId.setStatus("current")
_LogicalIfDataOspf_Type = FspR7OspfMode
_LogicalIfDataOspf_Object = MibTableColumn
logicalIfDataOspf = _LogicalIfDataOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 4),
    _LogicalIfDataOspf_Type()
)
logicalIfDataOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataOspf.setStatus("current")
_LogicalIfDataDcnAid_Type = EntityIndex
_LogicalIfDataDcnAid_Object = MibTableColumn
logicalIfDataDcnAid = _LogicalIfDataDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 5),
    _LogicalIfDataDcnAid_Type()
)
logicalIfDataDcnAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataDcnAid.setStatus("current")
_LogicalIfDataLanLinkAidDerived_Type = EntityIndex
_LogicalIfDataLanLinkAidDerived_Object = MibTableColumn
logicalIfDataLanLinkAidDerived = _LogicalIfDataLanLinkAidDerived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 6),
    _LogicalIfDataLanLinkAidDerived_Type()
)
logicalIfDataLanLinkAidDerived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataLanLinkAidDerived.setStatus("current")
_LogicalIfDataIpType_Type = FspR7IpType
_LogicalIfDataIpType_Object = MibTableColumn
logicalIfDataIpType = _LogicalIfDataIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 7),
    _LogicalIfDataIpType_Type()
)
logicalIfDataIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataIpType.setStatus("current")
_LogicalIfDataIpAddr_Type = IpAddress
_LogicalIfDataIpAddr_Object = MibTableColumn
logicalIfDataIpAddr = _LogicalIfDataIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 8),
    _LogicalIfDataIpAddr_Type()
)
logicalIfDataIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataIpAddr.setStatus("current")
_LogicalIfDataIpAddrMonitor_Type = IpAddress
_LogicalIfDataIpAddrMonitor_Object = MibTableColumn
logicalIfDataIpAddrMonitor = _LogicalIfDataIpAddrMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 9),
    _LogicalIfDataIpAddrMonitor_Type()
)
logicalIfDataIpAddrMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataIpAddrMonitor.setStatus("current")
_LogicalIfDataIpMask_Type = IpAddress
_LogicalIfDataIpMask_Object = MibTableColumn
logicalIfDataIpMask = _LogicalIfDataIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 10),
    _LogicalIfDataIpMask_Type()
)
logicalIfDataIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataIpMask.setStatus("current")
_LogicalIfDataIpMaskMonitor_Type = IpAddress
_LogicalIfDataIpMaskMonitor_Object = MibTableColumn
logicalIfDataIpMaskMonitor = _LogicalIfDataIpMaskMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 11),
    _LogicalIfDataIpMaskMonitor_Type()
)
logicalIfDataIpMaskMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataIpMaskMonitor.setStatus("current")
_LogicalIfDataEncapsulation_Type = FspR7CpEncapsulation
_LogicalIfDataEncapsulation_Object = MibTableColumn
logicalIfDataEncapsulation = _LogicalIfDataEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 33, 1, 12),
    _LogicalIfDataEncapsulation_Type()
)
logicalIfDataEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalIfDataEncapsulation.setStatus("current")
_PtpEntityDataTable_Object = MibTable
ptpEntityDataTable = _PtpEntityDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34)
)
if mibBuilder.loadTexts:
    ptpEntityDataTable.setStatus("current")
_PtpEntityDataEntry_Object = MibTableRow
ptpEntityDataEntry = _PtpEntityDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1)
)
ptpEntityDataEntry.setIndexNames(
    (0, "ADVA-MIB", "ptpEntityIndex"),
)
if mibBuilder.loadTexts:
    ptpEntityDataEntry.setStatus("current")
_PtpEntityDataConnEqptState_Type = FspR7ConnectState
_PtpEntityDataConnEqptState_Object = MibTableColumn
ptpEntityDataConnEqptState = _PtpEntityDataConnEqptState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 1),
    _PtpEntityDataConnEqptState_Type()
)
ptpEntityDataConnEqptState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataConnEqptState.setStatus("current")
_PtpEntityDataChannelProvision_Type = FspR7ChannelIdentifier
_PtpEntityDataChannelProvision_Object = MibTableColumn
ptpEntityDataChannelProvision = _PtpEntityDataChannelProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 2),
    _PtpEntityDataChannelProvision_Type()
)
ptpEntityDataChannelProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataChannelProvision.setStatus("current")
_PtpEntityDataLambda_Type = Unsigned32
_PtpEntityDataLambda_Object = MibTableColumn
ptpEntityDataLambda = _PtpEntityDataLambda_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 3),
    _PtpEntityDataLambda_Type()
)
ptpEntityDataLambda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataLambda.setStatus("current")
if mibBuilder.loadTexts:
    ptpEntityDataLambda.setUnits("0.01 nm")
_PtpEntityDataFrequency_Type = Unsigned32
_PtpEntityDataFrequency_Object = MibTableColumn
ptpEntityDataFrequency = _PtpEntityDataFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 4),
    _PtpEntityDataFrequency_Type()
)
ptpEntityDataFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataFrequency.setStatus("current")
if mibBuilder.loadTexts:
    ptpEntityDataFrequency.setUnits("0.01 THz")
_PtpEntityDataReach_Type = FspR7OpticalInterfaceReach
_PtpEntityDataReach_Object = MibTableColumn
ptpEntityDataReach = _PtpEntityDataReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 5),
    _PtpEntityDataReach_Type()
)
ptpEntityDataReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataReach.setStatus("current")
_PtpEntityDataBandProvision_Type = FspR7OpticalBand
_PtpEntityDataBandProvision_Object = MibTableColumn
ptpEntityDataBandProvision = _PtpEntityDataBandProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 6),
    _PtpEntityDataBandProvision_Type()
)
ptpEntityDataBandProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataBandProvision.setStatus("current")
_PtpEntityDataSubBandProvision_Type = FspR7OpticalSubBand
_PtpEntityDataSubBandProvision_Object = MibTableColumn
ptpEntityDataSubBandProvision = _PtpEntityDataSubBandProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 7),
    _PtpEntityDataSubBandProvision_Type()
)
ptpEntityDataSubBandProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataSubBandProvision.setStatus("current")
_PtpEntityDataGroupProvision_Type = FspR7OpticalGroup
_PtpEntityDataGroupProvision_Object = MibTableColumn
ptpEntityDataGroupProvision = _PtpEntityDataGroupProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 8),
    _PtpEntityDataGroupProvision_Type()
)
ptpEntityDataGroupProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataGroupProvision.setStatus("current")
_PtpEntityDataSfProvision_Type = FspR7SingleFiberLocation
_PtpEntityDataSfProvision_Object = MibTableColumn
ptpEntityDataSfProvision = _PtpEntityDataSfProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 9),
    _PtpEntityDataSfProvision_Type()
)
ptpEntityDataSfProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataSfProvision.setStatus("current")
_PtpEntityDataConnector_Type = FspR7ConnectorType
_PtpEntityDataConnector_Object = MibTableColumn
ptpEntityDataConnector = _PtpEntityDataConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 10),
    _PtpEntityDataConnector_Type()
)
ptpEntityDataConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataConnector.setStatus("current")
_PtpEntityDataFiber_Type = FspR7OpticalFiberType
_PtpEntityDataFiber_Object = MibTableColumn
ptpEntityDataFiber = _PtpEntityDataFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 11),
    _PtpEntityDataFiber_Type()
)
ptpEntityDataFiber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataFiber.setStatus("current")
_PtpEntityDataDirection_Type = ApsDirection
_PtpEntityDataDirection_Object = MibTableColumn
ptpEntityDataDirection = _PtpEntityDataDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 12),
    _PtpEntityDataDirection_Type()
)
ptpEntityDataDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataDirection.setStatus("current")
_PtpEntityDataLevel_Type = FspR7OpticalMultiplexLevel
_PtpEntityDataLevel_Object = MibTableColumn
ptpEntityDataLevel = _PtpEntityDataLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 13),
    _PtpEntityDataLevel_Type()
)
ptpEntityDataLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataLevel.setStatus("current")
_PtpEntityDataFunction_Type = FspR7InterfaceFunction
_PtpEntityDataFunction_Object = MibTableColumn
ptpEntityDataFunction = _PtpEntityDataFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 14),
    _PtpEntityDataFunction_Type()
)
ptpEntityDataFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataFunction.setStatus("current")
_PtpEntityDataPartnerAid_Type = EntityIndex
_PtpEntityDataPartnerAid_Object = MibTableColumn
ptpEntityDataPartnerAid = _PtpEntityDataPartnerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 15),
    _PtpEntityDataPartnerAid_Type()
)
ptpEntityDataPartnerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataPartnerAid.setStatus("current")
_PtpEntityDataTerminationType_Type = FspR7EquipmentType
_PtpEntityDataTerminationType_Object = MibTableColumn
ptpEntityDataTerminationType = _PtpEntityDataTerminationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 16),
    _PtpEntityDataTerminationType_Type()
)
ptpEntityDataTerminationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataTerminationType.setStatus("current")


class _PtpEntityDataValidSignalTimer_Type(Unsigned32):
    """Custom type ptpEntityDataValidSignalTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5760),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_PtpEntityDataValidSignalTimer_Type.__name__ = "Unsigned32"
_PtpEntityDataValidSignalTimer_Object = MibTableColumn
ptpEntityDataValidSignalTimer = _PtpEntityDataValidSignalTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 17),
    _PtpEntityDataValidSignalTimer_Type()
)
ptpEntityDataValidSignalTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataValidSignalTimer.setStatus("current")
if mibBuilder.loadTexts:
    ptpEntityDataValidSignalTimer.setUnits("min")
_PtpEntityDataConnectionType_Type = FspR7TypeConnection
_PtpEntityDataConnectionType_Object = MibTableColumn
ptpEntityDataConnectionType = _PtpEntityDataConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 18),
    _PtpEntityDataConnectionType_Type()
)
ptpEntityDataConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataConnectionType.setStatus("current")
_PtpEntityDataOutputPower_Type = Integer32
_PtpEntityDataOutputPower_Object = MibTableColumn
ptpEntityDataOutputPower = _PtpEntityDataOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 19),
    _PtpEntityDataOutputPower_Type()
)
ptpEntityDataOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    ptpEntityDataOutputPower.setUnits("0.1 dBm")
_PtpEntityDataInputPower_Type = Integer32
_PtpEntityDataInputPower_Object = MibTableColumn
ptpEntityDataInputPower = _PtpEntityDataInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 20),
    _PtpEntityDataInputPower_Type()
)
ptpEntityDataInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataInputPower.setStatus("current")
if mibBuilder.loadTexts:
    ptpEntityDataInputPower.setUnits("0.1 dBm")
_PtpEntityDataFiberConnAttenuation_Type = Integer32
_PtpEntityDataFiberConnAttenuation_Object = MibTableColumn
ptpEntityDataFiberConnAttenuation = _PtpEntityDataFiberConnAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 21),
    _PtpEntityDataFiberConnAttenuation_Type()
)
ptpEntityDataFiberConnAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataFiberConnAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    ptpEntityDataFiberConnAttenuation.setUnits("0.1 dB")
_PtpEntityDataFiberDetectStatus_Type = FspR7FDStatus
_PtpEntityDataFiberDetectStatus_Object = MibTableColumn
ptpEntityDataFiberDetectStatus = _PtpEntityDataFiberDetectStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 34, 1, 22),
    _PtpEntityDataFiberDetectStatus_Type()
)
ptpEntityDataFiberDetectStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityDataFiberDetectStatus.setStatus("current")
_FarEndIfDiagnosticsTable_Object = MibTable
farEndIfDiagnosticsTable = _FarEndIfDiagnosticsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 35)
)
if mibBuilder.loadTexts:
    farEndIfDiagnosticsTable.setStatus("current")
_FarEndIfDiagnosticsEntry_Object = MibTableRow
farEndIfDiagnosticsEntry = _FarEndIfDiagnosticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 35, 1)
)
farEndIfDiagnosticsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndIfDiagnosticsEntry.setStatus("current")
_FarEndIfDiagnosticsLaserBiasCurrentLevel_Type = Unsigned32
_FarEndIfDiagnosticsLaserBiasCurrentLevel_Object = MibTableColumn
farEndIfDiagnosticsLaserBiasCurrentLevel = _FarEndIfDiagnosticsLaserBiasCurrentLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 35, 1, 1),
    _FarEndIfDiagnosticsLaserBiasCurrentLevel_Type()
)
farEndIfDiagnosticsLaserBiasCurrentLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDiagnosticsLaserBiasCurrentLevel.setStatus("current")
if mibBuilder.loadTexts:
    farEndIfDiagnosticsLaserBiasCurrentLevel.setUnits("0.001 A")
_FarEndIfDiagnosticsInputPower_Type = Integer32
_FarEndIfDiagnosticsInputPower_Object = MibTableColumn
farEndIfDiagnosticsInputPower = _FarEndIfDiagnosticsInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 35, 1, 2),
    _FarEndIfDiagnosticsInputPower_Type()
)
farEndIfDiagnosticsInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDiagnosticsInputPower.setStatus("current")
if mibBuilder.loadTexts:
    farEndIfDiagnosticsInputPower.setUnits("0.1 dBm")
_FarEndIfDiagnosticsOutputPower_Type = Integer32
_FarEndIfDiagnosticsOutputPower_Object = MibTableColumn
farEndIfDiagnosticsOutputPower = _FarEndIfDiagnosticsOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 35, 1, 3),
    _FarEndIfDiagnosticsOutputPower_Type()
)
farEndIfDiagnosticsOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDiagnosticsOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    farEndIfDiagnosticsOutputPower.setUnits("0.1 dBm")
_FarEndIfConfigTable_Object = MibTable
farEndIfConfigTable = _FarEndIfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 36)
)
if mibBuilder.loadTexts:
    farEndIfConfigTable.setStatus("current")
_FarEndIfConfigEntry_Object = MibTableRow
farEndIfConfigEntry = _FarEndIfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 36, 1)
)
farEndIfConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndIfConfigEntry.setStatus("current")
_FarEndIfConfigAlias_Type = SnmpAdminString
_FarEndIfConfigAlias_Object = MibTableColumn
farEndIfConfigAlias = _FarEndIfConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 36, 1, 1),
    _FarEndIfConfigAlias_Type()
)
farEndIfConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    farEndIfConfigAlias.setStatus("current")
_FarEndIfConfigLoopConfig_Type = LoopConfig
_FarEndIfConfigLoopConfig_Object = MibTableColumn
farEndIfConfigLoopConfig = _FarEndIfConfigLoopConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 36, 1, 2),
    _FarEndIfConfigLoopConfig_Type()
)
farEndIfConfigLoopConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    farEndIfConfigLoopConfig.setStatus("current")
_FarEndIfConfigCapTable_Object = MibTable
farEndIfConfigCapTable = _FarEndIfConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 37)
)
if mibBuilder.loadTexts:
    farEndIfConfigCapTable.setStatus("current")
_FarEndIfConfigCapEntry_Object = MibTableRow
farEndIfConfigCapEntry = _FarEndIfConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 37, 1)
)
farEndIfConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndIfConfigCapEntry.setStatus("current")
_FarEndIfConfigCapLoopConfig_Type = LoopConfigCaps
_FarEndIfConfigCapLoopConfig_Object = MibTableColumn
farEndIfConfigCapLoopConfig = _FarEndIfConfigCapLoopConfig_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 37, 1, 1),
    _FarEndIfConfigCapLoopConfig_Type()
)
farEndIfConfigCapLoopConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfConfigCapLoopConfig.setStatus("current")
_FarEndIfDataTable_Object = MibTable
farEndIfDataTable = _FarEndIfDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38)
)
if mibBuilder.loadTexts:
    farEndIfDataTable.setStatus("current")
_FarEndIfDataEntry_Object = MibTableRow
farEndIfDataEntry = _FarEndIfDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1)
)
farEndIfDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    farEndIfDataEntry.setStatus("current")
_FarEndIfDataType_Type = FspR7InterfaceType
_FarEndIfDataType_Object = MibTableColumn
farEndIfDataType = _FarEndIfDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 1),
    _FarEndIfDataType_Type()
)
farEndIfDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataType.setStatus("current")
_FarEndIfDataTransmitChannel_Type = FspR7ChannelIdentifier
_FarEndIfDataTransmitChannel_Object = MibTableColumn
farEndIfDataTransmitChannel = _FarEndIfDataTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 2),
    _FarEndIfDataTransmitChannel_Type()
)
farEndIfDataTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataTransmitChannel.setStatus("current")
_FarEndIfDataTransmitWavelength_Type = Unsigned32
_FarEndIfDataTransmitWavelength_Object = MibTableColumn
farEndIfDataTransmitWavelength = _FarEndIfDataTransmitWavelength_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 3),
    _FarEndIfDataTransmitWavelength_Type()
)
farEndIfDataTransmitWavelength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataTransmitWavelength.setStatus("current")
if mibBuilder.loadTexts:
    farEndIfDataTransmitWavelength.setUnits("0.01 nm")
_FarEndIfDataTransmitFrequency_Type = Unsigned32
_FarEndIfDataTransmitFrequency_Object = MibTableColumn
farEndIfDataTransmitFrequency = _FarEndIfDataTransmitFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 4),
    _FarEndIfDataTransmitFrequency_Type()
)
farEndIfDataTransmitFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataTransmitFrequency.setStatus("current")
if mibBuilder.loadTexts:
    farEndIfDataTransmitFrequency.setUnits("0.01 THz")
_FarEndIfDataReach_Type = FspR7OpticalInterfaceReach
_FarEndIfDataReach_Object = MibTableColumn
farEndIfDataReach = _FarEndIfDataReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 5),
    _FarEndIfDataReach_Type()
)
farEndIfDataReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataReach.setStatus("current")
_FarEndIfDataConnector_Type = FspR7ConnectorType
_FarEndIfDataConnector_Object = MibTableColumn
farEndIfDataConnector = _FarEndIfDataConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 6),
    _FarEndIfDataConnector_Type()
)
farEndIfDataConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataConnector.setStatus("current")
_FarEndIfDataFiberType_Type = FspR7OpticalFiberType
_FarEndIfDataFiberType_Object = MibTableColumn
farEndIfDataFiberType = _FarEndIfDataFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 7),
    _FarEndIfDataFiberType_Type()
)
farEndIfDataFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataFiberType.setStatus("current")
_FarEndIfDataConnectionType_Type = FspR7TypeConnection
_FarEndIfDataConnectionType_Object = MibTableColumn
farEndIfDataConnectionType = _FarEndIfDataConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 8),
    _FarEndIfDataConnectionType_Type()
)
farEndIfDataConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataConnectionType.setStatus("current")
_FarEndIfDataAdmin_Type = FspR7AdminState
_FarEndIfDataAdmin_Object = MibTableColumn
farEndIfDataAdmin = _FarEndIfDataAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 38, 1, 9),
    _FarEndIfDataAdmin_Type()
)
farEndIfDataAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    farEndIfDataAdmin.setStatus("current")
_InterfaceConfigExternalVidCapsTable_Object = MibTable
interfaceConfigExternalVidCapsTable = _InterfaceConfigExternalVidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 39)
)
if mibBuilder.loadTexts:
    interfaceConfigExternalVidCapsTable.setStatus("current")
_InterfaceConfigExternalVidCapsEntry_Object = MibTableRow
interfaceConfigExternalVidCapsEntry = _InterfaceConfigExternalVidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 39, 1)
)
interfaceConfigExternalVidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvDcnExternalVidCapsIndexCap"),
)
if mibBuilder.loadTexts:
    interfaceConfigExternalVidCapsEntry.setStatus("current")
_InterfaceConfigExternalVidCapsStringCap_Type = SnmpAdminString
_InterfaceConfigExternalVidCapsStringCap_Object = MibTableColumn
interfaceConfigExternalVidCapsStringCap = _InterfaceConfigExternalVidCapsStringCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 39, 1, 1),
    _InterfaceConfigExternalVidCapsStringCap_Type()
)
interfaceConfigExternalVidCapsStringCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigExternalVidCapsStringCap.setStatus("current")
_InterfaceConfigLanAidCapsTable_Object = MibTable
interfaceConfigLanAidCapsTable = _InterfaceConfigLanAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 40)
)
if mibBuilder.loadTexts:
    interfaceConfigLanAidCapsTable.setStatus("current")
_InterfaceConfigLanAidCapsEntry_Object = MibTableRow
interfaceConfigLanAidCapsEntry = _InterfaceConfigLanAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 40, 1)
)
interfaceConfigLanAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "interfaceConfigLanAidCapsIndex"),
)
if mibBuilder.loadTexts:
    interfaceConfigLanAidCapsEntry.setStatus("current")
_InterfaceConfigLanAidCapsIndex_Type = EntityIndex
_InterfaceConfigLanAidCapsIndex_Object = MibTableColumn
interfaceConfigLanAidCapsIndex = _InterfaceConfigLanAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 40, 1, 1),
    _InterfaceConfigLanAidCapsIndex_Type()
)
interfaceConfigLanAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceConfigLanAidCapsIndex.setStatus("current")
_NeighborDiscoveryDataTable_Object = MibTable
neighborDiscoveryDataTable = _NeighborDiscoveryDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41)
)
if mibBuilder.loadTexts:
    neighborDiscoveryDataTable.setStatus("current")
_NeighborDiscoveryDataEntry_Object = MibTableRow
neighborDiscoveryDataEntry = _NeighborDiscoveryDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41, 1)
)
neighborDiscoveryDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    neighborDiscoveryDataEntry.setStatus("current")
_NeighborDiscoveryDataFarEndIp_Type = IpAddress
_NeighborDiscoveryDataFarEndIp_Object = MibTableColumn
neighborDiscoveryDataFarEndIp = _NeighborDiscoveryDataFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41, 1, 1),
    _NeighborDiscoveryDataFarEndIp_Type()
)
neighborDiscoveryDataFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborDiscoveryDataFarEndIp.setStatus("current")
_NeighborDiscoveryDataFarEndPort_Type = EntityIndex
_NeighborDiscoveryDataFarEndPort_Object = MibTableColumn
neighborDiscoveryDataFarEndPort = _NeighborDiscoveryDataFarEndPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41, 1, 2),
    _NeighborDiscoveryDataFarEndPort_Type()
)
neighborDiscoveryDataFarEndPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborDiscoveryDataFarEndPort.setStatus("current")
_NeighborDiscoveryDataFarEndTid_Type = SnmpAdminString
_NeighborDiscoveryDataFarEndTid_Object = MibTableColumn
neighborDiscoveryDataFarEndTid = _NeighborDiscoveryDataFarEndTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41, 1, 3),
    _NeighborDiscoveryDataFarEndTid_Type()
)
neighborDiscoveryDataFarEndTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborDiscoveryDataFarEndTid.setStatus("current")
_NeighborDiscoveryDataFarEndTranLayerTermPoint_Type = EntityIndex
_NeighborDiscoveryDataFarEndTranLayerTermPoint_Object = MibTableColumn
neighborDiscoveryDataFarEndTranLayerTermPoint = _NeighborDiscoveryDataFarEndTranLayerTermPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41, 1, 4),
    _NeighborDiscoveryDataFarEndTranLayerTermPoint_Type()
)
neighborDiscoveryDataFarEndTranLayerTermPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborDiscoveryDataFarEndTranLayerTermPoint.setStatus("current")
_NeighborDiscoveryDataFarEndPortAid_Type = SnmpAdminString
_NeighborDiscoveryDataFarEndPortAid_Object = MibTableColumn
neighborDiscoveryDataFarEndPortAid = _NeighborDiscoveryDataFarEndPortAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41, 1, 5),
    _NeighborDiscoveryDataFarEndPortAid_Type()
)
neighborDiscoveryDataFarEndPortAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborDiscoveryDataFarEndPortAid.setStatus("current")
_NeighborDiscoveryDataFarEndTranLayerTermPointAid_Type = SnmpAdminString
_NeighborDiscoveryDataFarEndTranLayerTermPointAid_Object = MibTableColumn
neighborDiscoveryDataFarEndTranLayerTermPointAid = _NeighborDiscoveryDataFarEndTranLayerTermPointAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 41, 1, 6),
    _NeighborDiscoveryDataFarEndTranLayerTermPointAid_Type()
)
neighborDiscoveryDataFarEndTranLayerTermPointAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    neighborDiscoveryDataFarEndTranLayerTermPointAid.setStatus("current")
_ExChannelConfigTable_Object = MibTable
exChannelConfigTable = _ExChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42)
)
if mibBuilder.loadTexts:
    exChannelConfigTable.setStatus("current")
_ExChannelConfigEntry_Object = MibTableRow
exChannelConfigEntry = _ExChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1)
)
exChannelConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    exChannelConfigEntry.setStatus("current")
_ExChannelConfigAlias_Type = SnmpAdminString
_ExChannelConfigAlias_Object = MibTableColumn
exChannelConfigAlias = _ExChannelConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 1),
    _ExChannelConfigAlias_Type()
)
exChannelConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigAlias.setStatus("current")
_ExChannelConfigFarEndLocation_Type = SnmpAdminString
_ExChannelConfigFarEndLocation_Object = MibTableColumn
exChannelConfigFarEndLocation = _ExChannelConfigFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 2),
    _ExChannelConfigFarEndLocation_Type()
)
exChannelConfigFarEndLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigFarEndLocation.setStatus("current")
_ExChannelConfigBitrate_Type = Unsigned32
_ExChannelConfigBitrate_Object = MibTableColumn
exChannelConfigBitrate = _ExChannelConfigBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 3),
    _ExChannelConfigBitrate_Type()
)
exChannelConfigBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exChannelConfigBitrate.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigBitrate.setUnits("Mbit/s")
_ExChannelConfigFecType_Type = FspR7FecType
_ExChannelConfigFecType_Object = MibTableColumn
exChannelConfigFecType = _ExChannelConfigFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 4),
    _ExChannelConfigFecType_Type()
)
exChannelConfigFecType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigFecType.setStatus("current")
_ExChannelConfigLineCoding_Type = FspR7LineCoding
_ExChannelConfigLineCoding_Object = MibTableColumn
exChannelConfigLineCoding = _ExChannelConfigLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 5),
    _ExChannelConfigLineCoding_Type()
)
exChannelConfigLineCoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigLineCoding.setStatus("current")
_ExChannelConfigFrameFormat_Type = FspR7FrameFormat
_ExChannelConfigFrameFormat_Object = MibTableColumn
exChannelConfigFrameFormat = _ExChannelConfigFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 6),
    _ExChannelConfigFrameFormat_Type()
)
exChannelConfigFrameFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigFrameFormat.setStatus("current")


class _ExChannelConfigOpticalPowerTx_Type(Integer32):
    """Custom type exChannelConfigOpticalPowerTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-9900, 600),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ExChannelConfigOpticalPowerTx_Type.__name__ = "Integer32"
_ExChannelConfigOpticalPowerTx_Object = MibTableColumn
exChannelConfigOpticalPowerTx = _ExChannelConfigOpticalPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 7),
    _ExChannelConfigOpticalPowerTx_Type()
)
exChannelConfigOpticalPowerTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigOpticalPowerTx.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigOpticalPowerTx.setUnits("0.1 dBm")


class _ExChannelConfigOSNRTransmit_Type(Unsigned32):
    """Custom type exChannelConfigOSNRTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ExChannelConfigOSNRTransmit_Type.__name__ = "Unsigned32"
_ExChannelConfigOSNRTransmit_Object = MibTableColumn
exChannelConfigOSNRTransmit = _ExChannelConfigOSNRTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 8),
    _ExChannelConfigOSNRTransmit_Type()
)
exChannelConfigOSNRTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigOSNRTransmit.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigOSNRTransmit.setUnits("dB")


class _ExChannelConfigPMDTransmit_Type(Unsigned32):
    """Custom type exChannelConfigPMDTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ExChannelConfigPMDTransmit_Type.__name__ = "Unsigned32"
_ExChannelConfigPMDTransmit_Object = MibTableColumn
exChannelConfigPMDTransmit = _ExChannelConfigPMDTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 9),
    _ExChannelConfigPMDTransmit_Type()
)
exChannelConfigPMDTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigPMDTransmit.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigPMDTransmit.setUnits("ps")


class _ExChannelConfigChromaticDispersionTx_Type(Integer32):
    """Custom type exChannelConfigChromaticDispersionTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ExChannelConfigChromaticDispersionTx_Type.__name__ = "Integer32"
_ExChannelConfigChromaticDispersionTx_Object = MibTableColumn
exChannelConfigChromaticDispersionTx = _ExChannelConfigChromaticDispersionTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 10),
    _ExChannelConfigChromaticDispersionTx_Type()
)
exChannelConfigChromaticDispersionTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigChromaticDispersionTx.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigChromaticDispersionTx.setUnits("ps/nm")


class _ExChannelConfigMinimumOSNRRcv_Type(Unsigned32):
    """Custom type exChannelConfigMinimumOSNRRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ExChannelConfigMinimumOSNRRcv_Type.__name__ = "Unsigned32"
_ExChannelConfigMinimumOSNRRcv_Object = MibTableColumn
exChannelConfigMinimumOSNRRcv = _ExChannelConfigMinimumOSNRRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 11),
    _ExChannelConfigMinimumOSNRRcv_Type()
)
exChannelConfigMinimumOSNRRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigMinimumOSNRRcv.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigMinimumOSNRRcv.setUnits("dB")


class _ExChannelConfigMinimumOpticalPowerRcv_Type(Integer32):
    """Custom type exChannelConfigMinimumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ExChannelConfigMinimumOpticalPowerRcv_Type.__name__ = "Integer32"
_ExChannelConfigMinimumOpticalPowerRcv_Object = MibTableColumn
exChannelConfigMinimumOpticalPowerRcv = _ExChannelConfigMinimumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 12),
    _ExChannelConfigMinimumOpticalPowerRcv_Type()
)
exChannelConfigMinimumOpticalPowerRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigMinimumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigMinimumOpticalPowerRcv.setUnits("0.1 dBm")


class _ExChannelConfigMaximumOpticalPowerRcv_Type(Integer32):
    """Custom type exChannelConfigMaximumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1000, 1000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ExChannelConfigMaximumOpticalPowerRcv_Type.__name__ = "Integer32"
_ExChannelConfigMaximumOpticalPowerRcv_Object = MibTableColumn
exChannelConfigMaximumOpticalPowerRcv = _ExChannelConfigMaximumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 13),
    _ExChannelConfigMaximumOpticalPowerRcv_Type()
)
exChannelConfigMaximumOpticalPowerRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigMaximumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigMaximumOpticalPowerRcv.setUnits("0.1 dBm")


class _ExChannelConfigMaximumPMDRcv_Type(Unsigned32):
    """Custom type exChannelConfigMaximumPMDRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ExChannelConfigMaximumPMDRcv_Type.__name__ = "Unsigned32"
_ExChannelConfigMaximumPMDRcv_Object = MibTableColumn
exChannelConfigMaximumPMDRcv = _ExChannelConfigMaximumPMDRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 14),
    _ExChannelConfigMaximumPMDRcv_Type()
)
exChannelConfigMaximumPMDRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigMaximumPMDRcv.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigMaximumPMDRcv.setUnits("ps")


class _ExChannelConfigChromaticDispersionRcv_Type(Integer32):
    """Custom type exChannelConfigChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ExChannelConfigChromaticDispersionRcv_Type.__name__ = "Integer32"
_ExChannelConfigChromaticDispersionRcv_Object = MibTableColumn
exChannelConfigChromaticDispersionRcv = _ExChannelConfigChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 15),
    _ExChannelConfigChromaticDispersionRcv_Type()
)
exChannelConfigChromaticDispersionRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigChromaticDispersionRcv.setStatus("deprecated")
if mibBuilder.loadTexts:
    exChannelConfigChromaticDispersionRcv.setUnits("ps/nm")
_ExChannelConfigMaxBitErrorRate_Type = FspR7MaxBitErrorRate
_ExChannelConfigMaxBitErrorRate_Object = MibTableColumn
exChannelConfigMaxBitErrorRate = _ExChannelConfigMaxBitErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 16),
    _ExChannelConfigMaxBitErrorRate_Type()
)
exChannelConfigMaxBitErrorRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigMaxBitErrorRate.setStatus("current")


class _ExChannelConfigMinChromaticDispersionRcv_Type(Integer32):
    """Custom type exChannelConfigMinChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ExChannelConfigMinChromaticDispersionRcv_Type.__name__ = "Integer32"
_ExChannelConfigMinChromaticDispersionRcv_Object = MibTableColumn
exChannelConfigMinChromaticDispersionRcv = _ExChannelConfigMinChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 17),
    _ExChannelConfigMinChromaticDispersionRcv_Type()
)
exChannelConfigMinChromaticDispersionRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigMinChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigMinChromaticDispersionRcv.setUnits("ps/nm")


class _ExChannelConfigMaxChromaticDispersionRcv_Type(Integer32):
    """Custom type exChannelConfigMaxChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ExChannelConfigMaxChromaticDispersionRcv_Type.__name__ = "Integer32"
_ExChannelConfigMaxChromaticDispersionRcv_Object = MibTableColumn
exChannelConfigMaxChromaticDispersionRcv = _ExChannelConfigMaxChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 42, 1, 18),
    _ExChannelConfigMaxChromaticDispersionRcv_Type()
)
exChannelConfigMaxChromaticDispersionRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelConfigMaxChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    exChannelConfigMaxChromaticDispersionRcv.setUnits("ps/nm")
_ExChannelDataTable_Object = MibTable
exChannelDataTable = _ExChannelDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 43)
)
if mibBuilder.loadTexts:
    exChannelDataTable.setStatus("current")
_ExChannelDataEntry_Object = MibTableRow
exChannelDataEntry = _ExChannelDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 43, 1)
)
exChannelDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    exChannelDataEntry.setStatus("current")
_ExChannelDataType_Type = FspR7InterfaceType
_ExChannelDataType_Object = MibTableColumn
exChannelDataType = _ExChannelDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 43, 1, 1),
    _ExChannelDataType_Type()
)
exChannelDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exChannelDataType.setStatus("current")
_ExChannelDataTransmitChannel_Type = FspR7ChannelIdentifier
_ExChannelDataTransmitChannel_Object = MibTableColumn
exChannelDataTransmitChannel = _ExChannelDataTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 43, 1, 2),
    _ExChannelDataTransmitChannel_Type()
)
exChannelDataTransmitChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelDataTransmitChannel.setStatus("current")
_ExChannelDataChannelBandwidth_Type = FspR7ChannelBandwidth
_ExChannelDataChannelBandwidth_Object = MibTableColumn
exChannelDataChannelBandwidth = _ExChannelDataChannelBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 43, 1, 3),
    _ExChannelDataChannelBandwidth_Type()
)
exChannelDataChannelBandwidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exChannelDataChannelBandwidth.setStatus("current")
_ExChannelDataConnectionState_Type = FspR7ConnectState
_ExChannelDataConnectionState_Object = MibTableColumn
exChannelDataConnectionState = _ExChannelDataConnectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 43, 1, 4),
    _ExChannelDataConnectionState_Type()
)
exChannelDataConnectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exChannelDataConnectionState.setStatus("current")
_VtpEntityDataTable_Object = MibTable
vtpEntityDataTable = _VtpEntityDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44)
)
if mibBuilder.loadTexts:
    vtpEntityDataTable.setStatus("current")
_VtpEntityDataEntry_Object = MibTableRow
vtpEntityDataEntry = _VtpEntityDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1)
)
vtpEntityDataEntry.setIndexNames(
    (0, "ADVA-MIB", "vtpEntityIndex"),
)
if mibBuilder.loadTexts:
    vtpEntityDataEntry.setStatus("current")
_VtpEntityDataConnEqptState_Type = FspR7ConnectState
_VtpEntityDataConnEqptState_Object = MibTableColumn
vtpEntityDataConnEqptState = _VtpEntityDataConnEqptState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 1),
    _VtpEntityDataConnEqptState_Type()
)
vtpEntityDataConnEqptState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataConnEqptState.setStatus("current")
_VtpEntityDataChannelProvision_Type = FspR7ChannelIdentifier
_VtpEntityDataChannelProvision_Object = MibTableColumn
vtpEntityDataChannelProvision = _VtpEntityDataChannelProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 2),
    _VtpEntityDataChannelProvision_Type()
)
vtpEntityDataChannelProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataChannelProvision.setStatus("current")
_VtpEntityDataLambda_Type = Unsigned32
_VtpEntityDataLambda_Object = MibTableColumn
vtpEntityDataLambda = _VtpEntityDataLambda_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 3),
    _VtpEntityDataLambda_Type()
)
vtpEntityDataLambda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataLambda.setStatus("current")
if mibBuilder.loadTexts:
    vtpEntityDataLambda.setUnits("0.01 nm")
_VtpEntityDataFrequency_Type = Unsigned32
_VtpEntityDataFrequency_Object = MibTableColumn
vtpEntityDataFrequency = _VtpEntityDataFrequency_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 4),
    _VtpEntityDataFrequency_Type()
)
vtpEntityDataFrequency.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataFrequency.setStatus("current")
if mibBuilder.loadTexts:
    vtpEntityDataFrequency.setUnits("0.01 THz")
_VtpEntityDataReach_Type = FspR7OpticalInterfaceReach
_VtpEntityDataReach_Object = MibTableColumn
vtpEntityDataReach = _VtpEntityDataReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 5),
    _VtpEntityDataReach_Type()
)
vtpEntityDataReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataReach.setStatus("current")
_VtpEntityDataBandProvision_Type = FspR7OpticalBand
_VtpEntityDataBandProvision_Object = MibTableColumn
vtpEntityDataBandProvision = _VtpEntityDataBandProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 6),
    _VtpEntityDataBandProvision_Type()
)
vtpEntityDataBandProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataBandProvision.setStatus("current")
_VtpEntityDataSubBandProvision_Type = FspR7OpticalSubBand
_VtpEntityDataSubBandProvision_Object = MibTableColumn
vtpEntityDataSubBandProvision = _VtpEntityDataSubBandProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 7),
    _VtpEntityDataSubBandProvision_Type()
)
vtpEntityDataSubBandProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataSubBandProvision.setStatus("current")
_VtpEntityDataGroupProvision_Type = FspR7OpticalGroup
_VtpEntityDataGroupProvision_Object = MibTableColumn
vtpEntityDataGroupProvision = _VtpEntityDataGroupProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 8),
    _VtpEntityDataGroupProvision_Type()
)
vtpEntityDataGroupProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataGroupProvision.setStatus("current")
_VtpEntityDataSfProvision_Type = FspR7SingleFiberLocation
_VtpEntityDataSfProvision_Object = MibTableColumn
vtpEntityDataSfProvision = _VtpEntityDataSfProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 9),
    _VtpEntityDataSfProvision_Type()
)
vtpEntityDataSfProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataSfProvision.setStatus("current")
_VtpEntityDataConnector_Type = FspR7ConnectorType
_VtpEntityDataConnector_Object = MibTableColumn
vtpEntityDataConnector = _VtpEntityDataConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 10),
    _VtpEntityDataConnector_Type()
)
vtpEntityDataConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataConnector.setStatus("current")
_VtpEntityDataFiber_Type = FspR7OpticalFiberType
_VtpEntityDataFiber_Object = MibTableColumn
vtpEntityDataFiber = _VtpEntityDataFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 11),
    _VtpEntityDataFiber_Type()
)
vtpEntityDataFiber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataFiber.setStatus("current")
_VtpEntityDataDirection_Type = ApsDirection
_VtpEntityDataDirection_Object = MibTableColumn
vtpEntityDataDirection = _VtpEntityDataDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 12),
    _VtpEntityDataDirection_Type()
)
vtpEntityDataDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataDirection.setStatus("current")
_VtpEntityDataLevel_Type = FspR7OpticalMultiplexLevel
_VtpEntityDataLevel_Object = MibTableColumn
vtpEntityDataLevel = _VtpEntityDataLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 13),
    _VtpEntityDataLevel_Type()
)
vtpEntityDataLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataLevel.setStatus("current")
_VtpEntityDataFunction_Type = FspR7InterfaceFunction
_VtpEntityDataFunction_Object = MibTableColumn
vtpEntityDataFunction = _VtpEntityDataFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 44, 1, 14),
    _VtpEntityDataFunction_Type()
)
vtpEntityDataFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vtpEntityDataFunction.setStatus("current")
_PtpEntityConfigTable_Object = MibTable
ptpEntityConfigTable = _PtpEntityConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 45)
)
if mibBuilder.loadTexts:
    ptpEntityConfigTable.setStatus("current")
_PtpEntityConfigEntry_Object = MibTableRow
ptpEntityConfigEntry = _PtpEntityConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 45, 1)
)
ptpEntityConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "ptpEntityIndex"),
)
if mibBuilder.loadTexts:
    ptpEntityConfigEntry.setStatus("current")
_PtpEntityConfigAlias_Type = SnmpAdminString
_PtpEntityConfigAlias_Object = MibTableColumn
ptpEntityConfigAlias = _PtpEntityConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 45, 1, 1),
    _PtpEntityConfigAlias_Type()
)
ptpEntityConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpEntityConfigAlias.setStatus("current")
_PtpEntityConfigFiberDetect_Type = FspR7FiberDetect
_PtpEntityConfigFiberDetect_Object = MibTableColumn
ptpEntityConfigFiberDetect = _PtpEntityConfigFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 45, 1, 2),
    _PtpEntityConfigFiberDetect_Type()
)
ptpEntityConfigFiberDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ptpEntityConfigFiberDetect.setStatus("current")
_PtpEntityConfigCapTable_Object = MibTable
ptpEntityConfigCapTable = _PtpEntityConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 46)
)
if mibBuilder.loadTexts:
    ptpEntityConfigCapTable.setStatus("current")
_PtpEntityConfigCapEntry_Object = MibTableRow
ptpEntityConfigCapEntry = _PtpEntityConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 46, 1)
)
ptpEntityConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "ptpEntityIndex"),
)
if mibBuilder.loadTexts:
    ptpEntityConfigCapEntry.setStatus("current")
_PtpEntityConfigCapFiberDetect_Type = FspR7FiberDetectCaps
_PtpEntityConfigCapFiberDetect_Object = MibTableColumn
ptpEntityConfigCapFiberDetect = _PtpEntityConfigCapFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 46, 1, 1),
    _PtpEntityConfigCapFiberDetect_Type()
)
ptpEntityConfigCapFiberDetect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ptpEntityConfigCapFiberDetect.setStatus("current")
_SuperChannelDataTable_Object = MibTable
superChannelDataTable = _SuperChannelDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47)
)
if mibBuilder.loadTexts:
    superChannelDataTable.setStatus("current")
_SuperChannelDataEntry_Object = MibTableRow
superChannelDataEntry = _SuperChannelDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1)
)
superChannelDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    superChannelDataEntry.setStatus("current")
_SuperChannelDataChannelSpacing_Type = FspR7ChannelSpacing
_SuperChannelDataChannelSpacing_Object = MibTableColumn
superChannelDataChannelSpacing = _SuperChannelDataChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 1),
    _SuperChannelDataChannelSpacing_Type()
)
superChannelDataChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataChannelSpacing.setStatus("current")
_SuperChannelDataChannelBandwith_Type = FspR7ChannelBandwidth
_SuperChannelDataChannelBandwith_Object = MibTableColumn
superChannelDataChannelBandwith = _SuperChannelDataChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 2),
    _SuperChannelDataChannelBandwith_Type()
)
superChannelDataChannelBandwith.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataChannelBandwith.setStatus("current")
_SuperChannelDataLaneChannel1_Type = FspR7ChannelIdentifier
_SuperChannelDataLaneChannel1_Object = MibTableColumn
superChannelDataLaneChannel1 = _SuperChannelDataLaneChannel1_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 3),
    _SuperChannelDataLaneChannel1_Type()
)
superChannelDataLaneChannel1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataLaneChannel1.setStatus("current")
_SuperChannelDataLaneChannel2_Type = FspR7ChannelIdentifier
_SuperChannelDataLaneChannel2_Object = MibTableColumn
superChannelDataLaneChannel2 = _SuperChannelDataLaneChannel2_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 4),
    _SuperChannelDataLaneChannel2_Type()
)
superChannelDataLaneChannel2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataLaneChannel2.setStatus("current")
_SuperChannelDataLaneChannel3_Type = FspR7ChannelIdentifier
_SuperChannelDataLaneChannel3_Object = MibTableColumn
superChannelDataLaneChannel3 = _SuperChannelDataLaneChannel3_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 5),
    _SuperChannelDataLaneChannel3_Type()
)
superChannelDataLaneChannel3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataLaneChannel3.setStatus("current")
_SuperChannelDataLaneChannel4_Type = FspR7ChannelIdentifier
_SuperChannelDataLaneChannel4_Object = MibTableColumn
superChannelDataLaneChannel4 = _SuperChannelDataLaneChannel4_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 6),
    _SuperChannelDataLaneChannel4_Type()
)
superChannelDataLaneChannel4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataLaneChannel4.setStatus("current")
_SuperChannelDataFacilities_Type = SnmpAdminString
_SuperChannelDataFacilities_Object = MibTableColumn
superChannelDataFacilities = _SuperChannelDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 7),
    _SuperChannelDataFacilities_Type()
)
superChannelDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataFacilities.setStatus("current")
_SuperChannelDataConnectionState_Type = FspR7ConnectState
_SuperChannelDataConnectionState_Object = MibTableColumn
superChannelDataConnectionState = _SuperChannelDataConnectionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 8),
    _SuperChannelDataConnectionState_Type()
)
superChannelDataConnectionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataConnectionState.setStatus("current")
_SuperChannelDataLanes_Type = FspR7OpticalLanes
_SuperChannelDataLanes_Object = MibTableColumn
superChannelDataLanes = _SuperChannelDataLanes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 9),
    _SuperChannelDataLanes_Type()
)
superChannelDataLanes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataLanes.setStatus("current")
_SuperChannelDataFacilitiesIndexes_Type = SnmpAdminString
_SuperChannelDataFacilitiesIndexes_Object = MibTableColumn
superChannelDataFacilitiesIndexes = _SuperChannelDataFacilitiesIndexes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 47, 1, 10),
    _SuperChannelDataFacilitiesIndexes_Type()
)
superChannelDataFacilitiesIndexes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelDataFacilitiesIndexes.setStatus("current")
_SuperChannelConfigTable_Object = MibTable
superChannelConfigTable = _SuperChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 48)
)
if mibBuilder.loadTexts:
    superChannelConfigTable.setStatus("current")
_SuperChannelConfigEntry_Object = MibTableRow
superChannelConfigEntry = _SuperChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 48, 1)
)
superChannelConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    superChannelConfigEntry.setStatus("current")
_SuperChannelConfigEqlzAdmin_Type = FspR7EqlzAdminState
_SuperChannelConfigEqlzAdmin_Object = MibTableColumn
superChannelConfigEqlzAdmin = _SuperChannelConfigEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 48, 1, 1),
    _SuperChannelConfigEqlzAdmin_Type()
)
superChannelConfigEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    superChannelConfigEqlzAdmin.setStatus("current")
_SuperChannelConfigAlias_Type = SnmpAdminString
_SuperChannelConfigAlias_Object = MibTableColumn
superChannelConfigAlias = _SuperChannelConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 48, 1, 2),
    _SuperChannelConfigAlias_Type()
)
superChannelConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    superChannelConfigAlias.setStatus("current")
_SuperChannelConfigInitiateEqualization_Type = FspR7InitEqualization
_SuperChannelConfigInitiateEqualization_Object = MibTableColumn
superChannelConfigInitiateEqualization = _SuperChannelConfigInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 48, 1, 3),
    _SuperChannelConfigInitiateEqualization_Type()
)
superChannelConfigInitiateEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    superChannelConfigInitiateEqualization.setStatus("current")
_SuperChannelConfigCapTable_Object = MibTable
superChannelConfigCapTable = _SuperChannelConfigCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 49)
)
if mibBuilder.loadTexts:
    superChannelConfigCapTable.setStatus("current")
_SuperChannelConfigCapEntry_Object = MibTableRow
superChannelConfigCapEntry = _SuperChannelConfigCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 49, 1)
)
superChannelConfigCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    superChannelConfigCapEntry.setStatus("current")
_SuperChannelConfigCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_SuperChannelConfigCapEqlzAdmin_Object = MibTableColumn
superChannelConfigCapEqlzAdmin = _SuperChannelConfigCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 49, 1, 1),
    _SuperChannelConfigCapEqlzAdmin_Type()
)
superChannelConfigCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelConfigCapEqlzAdmin.setStatus("current")
_SuperChannelConfigCapInitiateEqualization_Type = FspR7InitEqualizationCaps
_SuperChannelConfigCapInitiateEqualization_Object = MibTableColumn
superChannelConfigCapInitiateEqualization = _SuperChannelConfigCapInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 3, 49, 1, 2),
    _SuperChannelConfigCapInitiateEqualization_Type()
)
superChannelConfigCapInitiateEqualization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    superChannelConfigCapInitiateEqualization.setStatus("current")
_ServiceConfigAndStatus_ObjectIdentity = ObjectIdentity
serviceConfigAndStatus = _ServiceConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4)
)
_GfpServiceConfigAndStatus_ObjectIdentity = ObjectIdentity
gfpServiceConfigAndStatus = _GfpServiceConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1)
)
_Vc4allocatedTable_Object = MibTable
vc4allocatedTable = _Vc4allocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 1)
)
if mibBuilder.loadTexts:
    vc4allocatedTable.setStatus("current")
_Vc4allocatedEntry_Object = MibTableRow
vc4allocatedEntry = _Vc4allocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 1, 1)
)
vc4allocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vc4allocatedEntry.setStatus("current")
_Vc4allocatedContainer_Type = EntityIndex
_Vc4allocatedContainer_Object = MibTableColumn
vc4allocatedContainer = _Vc4allocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 1, 1, 1),
    _Vc4allocatedContainer_Type()
)
vc4allocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4allocatedContainer.setStatus("current")


class _Vc4allocatedClassInstanceNumber_Type(Integer32):
    """Custom type vc4allocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Vc4allocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Vc4allocatedClassInstanceNumber_Object = MibTableColumn
vc4allocatedClassInstanceNumber = _Vc4allocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 1, 1, 2),
    _Vc4allocatedClassInstanceNumber_Type()
)
vc4allocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4allocatedClassInstanceNumber.setStatus("current")
_Vc4allocatedSequenceNumber_Type = Unsigned32
_Vc4allocatedSequenceNumber_Object = MibTableColumn
vc4allocatedSequenceNumber = _Vc4allocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 1, 1, 3),
    _Vc4allocatedSequenceNumber_Type()
)
vc4allocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4allocatedSequenceNumber.setStatus("current")
_Vc3allocatedTable_Object = MibTable
vc3allocatedTable = _Vc3allocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 2)
)
if mibBuilder.loadTexts:
    vc3allocatedTable.setStatus("current")
_Vc3allocatedEntry_Object = MibTableRow
vc3allocatedEntry = _Vc3allocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 2, 1)
)
vc3allocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vc3allocatedEntry.setStatus("current")
_Vc3allocatedContainer_Type = EntityIndex
_Vc3allocatedContainer_Object = MibTableColumn
vc3allocatedContainer = _Vc3allocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 2, 1, 1),
    _Vc3allocatedContainer_Type()
)
vc3allocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc3allocatedContainer.setStatus("current")


class _Vc3allocatedClassInstanceNumber_Type(Integer32):
    """Custom type vc3allocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Vc3allocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Vc3allocatedClassInstanceNumber_Object = MibTableColumn
vc3allocatedClassInstanceNumber = _Vc3allocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 2, 1, 2),
    _Vc3allocatedClassInstanceNumber_Type()
)
vc3allocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc3allocatedClassInstanceNumber.setStatus("current")
_Vc3allocatedSequenceNumber_Type = Unsigned32
_Vc3allocatedSequenceNumber_Object = MibTableColumn
vc3allocatedSequenceNumber = _Vc3allocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 2, 1, 3),
    _Vc3allocatedSequenceNumber_Type()
)
vc3allocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc3allocatedSequenceNumber.setStatus("current")
_Sts1allocatedTable_Object = MibTable
sts1allocatedTable = _Sts1allocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 3)
)
if mibBuilder.loadTexts:
    sts1allocatedTable.setStatus("current")
_Sts1allocatedEntry_Object = MibTableRow
sts1allocatedEntry = _Sts1allocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 3, 1)
)
sts1allocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    sts1allocatedEntry.setStatus("current")
_Sts1allocatedContainer_Type = EntityIndex
_Sts1allocatedContainer_Object = MibTableColumn
sts1allocatedContainer = _Sts1allocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 3, 1, 1),
    _Sts1allocatedContainer_Type()
)
sts1allocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts1allocatedContainer.setStatus("current")


class _Sts1allocatedClassInstanceNumber_Type(Integer32):
    """Custom type sts1allocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Sts1allocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Sts1allocatedClassInstanceNumber_Object = MibTableColumn
sts1allocatedClassInstanceNumber = _Sts1allocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 3, 1, 2),
    _Sts1allocatedClassInstanceNumber_Type()
)
sts1allocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts1allocatedClassInstanceNumber.setStatus("current")
_Sts1allocatedSequenceNumber_Type = Unsigned32
_Sts1allocatedSequenceNumber_Object = MibTableColumn
sts1allocatedSequenceNumber = _Sts1allocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 3, 1, 3),
    _Sts1allocatedSequenceNumber_Type()
)
sts1allocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts1allocatedSequenceNumber.setStatus("current")
_VchConfigTable_Object = MibTable
vchConfigTable = _VchConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 4)
)
if mibBuilder.loadTexts:
    vchConfigTable.setStatus("current")
_VchConfigEntry_Object = MibTableRow
vchConfigEntry = _VchConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 4, 1)
)
vchConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vchConfigEntry.setStatus("current")
_VchConfigBundle_Type = SonetVcBundleAllocation
_VchConfigBundle_Object = MibTableColumn
vchConfigBundle = _VchConfigBundle_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 4, 1, 1),
    _VchConfigBundle_Type()
)
vchConfigBundle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vchConfigBundle.setStatus("current")
_VchConfigCir_Type = Unsigned32
_VchConfigCir_Object = MibTableColumn
vchConfigCir = _VchConfigCir_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 4, 1, 2),
    _VchConfigCir_Type()
)
vchConfigCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vchConfigCir.setStatus("current")
if mibBuilder.loadTexts:
    vchConfigCir.setUnits("Mbit/s")
_VchDataTable_Object = MibTable
vchDataTable = _VchDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 5)
)
if mibBuilder.loadTexts:
    vchDataTable.setStatus("current")
_VchDataEntry_Object = MibTableRow
vchDataEntry = _VchDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 5, 1)
)
vchDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vchDataEntry.setStatus("current")
_VchDataVcType_Type = VirtualContainerType
_VchDataVcType_Object = MibTableColumn
vchDataVcType = _VchDataVcType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 5, 1, 1),
    _VchDataVcType_Type()
)
vchDataVcType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vchDataVcType.setStatus("current")
_VchDataOpuPayloadType_Type = FspR7OpuPayloadType
_VchDataOpuPayloadType_Object = MibTableColumn
vchDataOpuPayloadType = _VchDataOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 5, 1, 2),
    _VchDataOpuPayloadType_Type()
)
vchDataOpuPayloadType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vchDataOpuPayloadType.setStatus("current")
_VchDataOwnerAid_Type = EntityIndex
_VchDataOwnerAid_Object = MibTableColumn
vchDataOwnerAid = _VchDataOwnerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 5, 1, 3),
    _VchDataOwnerAid_Type()
)
vchDataOwnerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vchDataOwnerAid.setStatus("current")
_GfpServiceDefTable_Object = MibTable
gfpServiceDefTable = _GfpServiceDefTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 6)
)
if mibBuilder.loadTexts:
    gfpServiceDefTable.setStatus("current")
_GfpServiceDefEntry_Object = MibTableRow
gfpServiceDefEntry = _GfpServiceDefEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 6, 1)
)
gfpServiceDefEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    gfpServiceDefEntry.setStatus("current")
_GfpServiceDefBundleAllocation_Type = SonetVcBundleAllocation
_GfpServiceDefBundleAllocation_Object = MibTableColumn
gfpServiceDefBundleAllocation = _GfpServiceDefBundleAllocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 6, 1, 1),
    _GfpServiceDefBundleAllocation_Type()
)
gfpServiceDefBundleAllocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gfpServiceDefBundleAllocation.setStatus("current")


class _GfpServiceDefBandwidth_Type(Unsigned32):
    """Custom type gfpServiceDefBandwidth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_GfpServiceDefBandwidth_Type.__name__ = "Unsigned32"
_GfpServiceDefBandwidth_Object = MibTableColumn
gfpServiceDefBandwidth = _GfpServiceDefBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 6, 1, 2),
    _GfpServiceDefBandwidth_Type()
)
gfpServiceDefBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gfpServiceDefBandwidth.setStatus("current")
if mibBuilder.loadTexts:
    gfpServiceDefBandwidth.setUnits("Mbit/s")
_GfpServiceDefVcType_Type = VirtualContainerType
_GfpServiceDefVcType_Object = MibTableColumn
gfpServiceDefVcType = _GfpServiceDefVcType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 6, 1, 3),
    _GfpServiceDefVcType_Type()
)
gfpServiceDefVcType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gfpServiceDefVcType.setStatus("current")
_Sts3callocatedTable_Object = MibTable
sts3callocatedTable = _Sts3callocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 7)
)
if mibBuilder.loadTexts:
    sts3callocatedTable.setStatus("current")
_Sts3callocatedEntry_Object = MibTableRow
sts3callocatedEntry = _Sts3callocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 7, 1)
)
sts3callocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    sts3callocatedEntry.setStatus("current")
_Sts3callocatedContainer_Type = EntityIndex
_Sts3callocatedContainer_Object = MibTableColumn
sts3callocatedContainer = _Sts3callocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 7, 1, 1),
    _Sts3callocatedContainer_Type()
)
sts3callocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts3callocatedContainer.setStatus("current")


class _Sts3callocatedClassInstanceNumber_Type(Integer32):
    """Custom type sts3callocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Sts3callocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Sts3callocatedClassInstanceNumber_Object = MibTableColumn
sts3callocatedClassInstanceNumber = _Sts3callocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 7, 1, 2),
    _Sts3callocatedClassInstanceNumber_Type()
)
sts3callocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts3callocatedClassInstanceNumber.setStatus("current")
_Sts3callocatedSequenceNumber_Type = Unsigned32
_Sts3callocatedSequenceNumber_Object = MibTableColumn
sts3callocatedSequenceNumber = _Sts3callocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 7, 1, 3),
    _Sts3callocatedSequenceNumber_Type()
)
sts3callocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts3callocatedSequenceNumber.setStatus("current")
_Vs1allocatedTable_Object = MibTable
vs1allocatedTable = _Vs1allocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 8)
)
if mibBuilder.loadTexts:
    vs1allocatedTable.setStatus("current")
_Vs1allocatedEntry_Object = MibTableRow
vs1allocatedEntry = _Vs1allocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 8, 1)
)
vs1allocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vs1allocatedEntry.setStatus("current")
_Vs1allocatedContainer_Type = EntityIndex
_Vs1allocatedContainer_Object = MibTableColumn
vs1allocatedContainer = _Vs1allocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 8, 1, 1),
    _Vs1allocatedContainer_Type()
)
vs1allocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vs1allocatedContainer.setStatus("current")


class _Vs1allocatedClassInstanceNumber_Type(Integer32):
    """Custom type vs1allocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Vs1allocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Vs1allocatedClassInstanceNumber_Object = MibTableColumn
vs1allocatedClassInstanceNumber = _Vs1allocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 8, 1, 2),
    _Vs1allocatedClassInstanceNumber_Type()
)
vs1allocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vs1allocatedClassInstanceNumber.setStatus("current")
_Vs1allocatedSequenceNumber_Type = Unsigned32
_Vs1allocatedSequenceNumber_Object = MibTableColumn
vs1allocatedSequenceNumber = _Vs1allocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 8, 1, 3),
    _Vs1allocatedSequenceNumber_Type()
)
vs1allocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vs1allocatedSequenceNumber.setStatus("current")
_Vs1allocatedFacilityType_Type = FspR7InterfaceType
_Vs1allocatedFacilityType_Object = MibTableColumn
vs1allocatedFacilityType = _Vs1allocatedFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 8, 1, 4),
    _Vs1allocatedFacilityType_Type()
)
vs1allocatedFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vs1allocatedFacilityType.setStatus("current")
_Sts24callocatedTable_Object = MibTable
sts24callocatedTable = _Sts24callocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 9)
)
if mibBuilder.loadTexts:
    sts24callocatedTable.setStatus("current")
_Sts24callocatedEntry_Object = MibTableRow
sts24callocatedEntry = _Sts24callocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 9, 1)
)
sts24callocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    sts24callocatedEntry.setStatus("current")
_Sts24callocatedContainer_Type = EntityIndex
_Sts24callocatedContainer_Object = MibTableColumn
sts24callocatedContainer = _Sts24callocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 9, 1, 1),
    _Sts24callocatedContainer_Type()
)
sts24callocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts24callocatedContainer.setStatus("current")


class _Sts24callocatedClassInstanceNumber_Type(Integer32):
    """Custom type sts24callocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Sts24callocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Sts24callocatedClassInstanceNumber_Object = MibTableColumn
sts24callocatedClassInstanceNumber = _Sts24callocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 9, 1, 2),
    _Sts24callocatedClassInstanceNumber_Type()
)
sts24callocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts24callocatedClassInstanceNumber.setStatus("current")
_Sts24callocatedSequenceNumber_Type = Unsigned32
_Sts24callocatedSequenceNumber_Object = MibTableColumn
sts24callocatedSequenceNumber = _Sts24callocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 9, 1, 3),
    _Sts24callocatedSequenceNumber_Type()
)
sts24callocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts24callocatedSequenceNumber.setStatus("current")
_Sts24callocatedFacilityType_Type = FspR7InterfaceType
_Sts24callocatedFacilityType_Object = MibTableColumn
sts24callocatedFacilityType = _Sts24callocatedFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 9, 1, 4),
    _Sts24callocatedFacilityType_Type()
)
sts24callocatedFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts24callocatedFacilityType.setStatus("current")
_Sts48callocatedTable_Object = MibTable
sts48callocatedTable = _Sts48callocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 10)
)
if mibBuilder.loadTexts:
    sts48callocatedTable.setStatus("current")
_Sts48callocatedEntry_Object = MibTableRow
sts48callocatedEntry = _Sts48callocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 10, 1)
)
sts48callocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    sts48callocatedEntry.setStatus("current")
_Sts48callocatedContainer_Type = EntityIndex
_Sts48callocatedContainer_Object = MibTableColumn
sts48callocatedContainer = _Sts48callocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 10, 1, 1),
    _Sts48callocatedContainer_Type()
)
sts48callocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts48callocatedContainer.setStatus("current")


class _Sts48callocatedClassInstanceNumber_Type(Integer32):
    """Custom type sts48callocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Sts48callocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Sts48callocatedClassInstanceNumber_Object = MibTableColumn
sts48callocatedClassInstanceNumber = _Sts48callocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 10, 1, 2),
    _Sts48callocatedClassInstanceNumber_Type()
)
sts48callocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts48callocatedClassInstanceNumber.setStatus("current")
_Sts48callocatedSequenceNumber_Type = Unsigned32
_Sts48callocatedSequenceNumber_Object = MibTableColumn
sts48callocatedSequenceNumber = _Sts48callocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 10, 1, 3),
    _Sts48callocatedSequenceNumber_Type()
)
sts48callocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts48callocatedSequenceNumber.setStatus("current")
_Sts48callocatedFacilityType_Type = FspR7InterfaceType
_Sts48callocatedFacilityType_Object = MibTableColumn
sts48callocatedFacilityType = _Sts48callocatedFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 10, 1, 4),
    _Sts48callocatedFacilityType_Type()
)
sts48callocatedFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts48callocatedFacilityType.setStatus("current")
_Vc4c8allocatedTable_Object = MibTable
vc4c8allocatedTable = _Vc4c8allocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 12)
)
if mibBuilder.loadTexts:
    vc4c8allocatedTable.setStatus("current")
_Vc4c8allocatedEntry_Object = MibTableRow
vc4c8allocatedEntry = _Vc4c8allocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 12, 1)
)
vc4c8allocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vc4c8allocatedEntry.setStatus("current")
_Vc4c8allocatedContainer_Type = EntityIndex
_Vc4c8allocatedContainer_Object = MibTableColumn
vc4c8allocatedContainer = _Vc4c8allocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 12, 1, 1),
    _Vc4c8allocatedContainer_Type()
)
vc4c8allocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4c8allocatedContainer.setStatus("current")


class _Vc4c8allocatedClassInstanceNumber_Type(Integer32):
    """Custom type vc4c8allocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Vc4c8allocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Vc4c8allocatedClassInstanceNumber_Object = MibTableColumn
vc4c8allocatedClassInstanceNumber = _Vc4c8allocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 12, 1, 2),
    _Vc4c8allocatedClassInstanceNumber_Type()
)
vc4c8allocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4c8allocatedClassInstanceNumber.setStatus("current")
_Vc4c8allocatedSequenceNumber_Type = Unsigned32
_Vc4c8allocatedSequenceNumber_Object = MibTableColumn
vc4c8allocatedSequenceNumber = _Vc4c8allocatedSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 12, 1, 3),
    _Vc4c8allocatedSequenceNumber_Type()
)
vc4c8allocatedSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4c8allocatedSequenceNumber.setStatus("current")
_Vc4c8allocatedFacilityType_Type = FspR7InterfaceType
_Vc4c8allocatedFacilityType_Object = MibTableColumn
vc4c8allocatedFacilityType = _Vc4c8allocatedFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 12, 1, 4),
    _Vc4c8allocatedFacilityType_Type()
)
vc4c8allocatedFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4c8allocatedFacilityType.setStatus("current")
_Vs0allocatedTable_Object = MibTable
vs0allocatedTable = _Vs0allocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 13)
)
if mibBuilder.loadTexts:
    vs0allocatedTable.setStatus("current")
_Vs0allocatedEntry_Object = MibTableRow
vs0allocatedEntry = _Vs0allocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 13, 1)
)
vs0allocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vs0allocatedEntry.setStatus("current")
_Vs0allocatedContainer_Type = EntityIndex
_Vs0allocatedContainer_Object = MibTableColumn
vs0allocatedContainer = _Vs0allocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 13, 1, 1),
    _Vs0allocatedContainer_Type()
)
vs0allocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vs0allocatedContainer.setStatus("current")


class _Vs0allocatedClassInstanceNumber_Type(Integer32):
    """Custom type vs0allocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Vs0allocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Vs0allocatedClassInstanceNumber_Object = MibTableColumn
vs0allocatedClassInstanceNumber = _Vs0allocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 13, 1, 2),
    _Vs0allocatedClassInstanceNumber_Type()
)
vs0allocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vs0allocatedClassInstanceNumber.setStatus("current")
_Vs0allocatedFacilityType_Type = FspR7InterfaceType
_Vs0allocatedFacilityType_Object = MibTableColumn
vs0allocatedFacilityType = _Vs0allocatedFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 13, 1, 3),
    _Vs0allocatedFacilityType_Type()
)
vs0allocatedFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vs0allocatedFacilityType.setStatus("current")
_Vc4c16allocatedTable_Object = MibTable
vc4c16allocatedTable = _Vc4c16allocatedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 14)
)
if mibBuilder.loadTexts:
    vc4c16allocatedTable.setStatus("current")
_Vc4c16allocatedEntry_Object = MibTableRow
vc4c16allocatedEntry = _Vc4c16allocatedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 14, 1)
)
vc4c16allocatedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    vc4c16allocatedEntry.setStatus("current")
_Vc4c16allocatedContainer_Type = EntityIndex
_Vc4c16allocatedContainer_Object = MibTableColumn
vc4c16allocatedContainer = _Vc4c16allocatedContainer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 14, 1, 1),
    _Vc4c16allocatedContainer_Type()
)
vc4c16allocatedContainer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4c16allocatedContainer.setStatus("current")


class _Vc4c16allocatedClassInstanceNumber_Type(Integer32):
    """Custom type vc4c16allocatedClassInstanceNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_Vc4c16allocatedClassInstanceNumber_Type.__name__ = "Integer32"
_Vc4c16allocatedClassInstanceNumber_Object = MibTableColumn
vc4c16allocatedClassInstanceNumber = _Vc4c16allocatedClassInstanceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 14, 1, 2),
    _Vc4c16allocatedClassInstanceNumber_Type()
)
vc4c16allocatedClassInstanceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4c16allocatedClassInstanceNumber.setStatus("current")
_Vc4c16allocatedFacilityType_Type = FspR7InterfaceType
_Vc4c16allocatedFacilityType_Object = MibTableColumn
vc4c16allocatedFacilityType = _Vc4c16allocatedFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 4, 1, 14, 1, 3),
    _Vc4c16allocatedFacilityType_Type()
)
vc4c16allocatedFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vc4c16allocatedFacilityType.setStatus("current")
_ConnectionConfigAndStatus_ObjectIdentity = ObjectIdentity
connectionConfigAndStatus = _ConnectionConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5)
)


class _IntraNeConnectionsLastChanged_Type(Integer32):
    """Custom type intraNeConnectionsLastChanged based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("undefined", 0),
          ("notYetDefined", 1))
    )


_IntraNeConnectionsLastChanged_Type.__name__ = "Integer32"
_IntraNeConnectionsLastChanged_Object = MibScalar
intraNeConnectionsLastChanged = _IntraNeConnectionsLastChanged_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 2),
    _IntraNeConnectionsLastChanged_Type()
)
intraNeConnectionsLastChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intraNeConnectionsLastChanged.setStatus("deprecated")
_IntraNeConnectionsTable_Object = MibTable
intraNeConnectionsTable = _IntraNeConnectionsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 3)
)
if mibBuilder.loadTexts:
    intraNeConnectionsTable.setStatus("current")
_IntraNeConnectionsEntry_Object = MibTableRow
intraNeConnectionsEntry = _IntraNeConnectionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 3, 1)
)
intraNeConnectionsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    intraNeConnectionsEntry.setStatus("current")
_IntraNeConnectionsType_Type = FspR7TypeConnection
_IntraNeConnectionsType_Object = MibTableColumn
intraNeConnectionsType = _IntraNeConnectionsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 3, 1, 1),
    _IntraNeConnectionsType_Type()
)
intraNeConnectionsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intraNeConnectionsType.setStatus("current")
_IntraNeConnectionsEndpointA_Type = EntityIndex
_IntraNeConnectionsEndpointA_Object = MibTableColumn
intraNeConnectionsEndpointA = _IntraNeConnectionsEndpointA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 3, 1, 2),
    _IntraNeConnectionsEndpointA_Type()
)
intraNeConnectionsEndpointA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intraNeConnectionsEndpointA.setStatus("current")
_IntraNeConnectionsEndpointB_Type = EntityIndex
_IntraNeConnectionsEndpointB_Object = MibTableColumn
intraNeConnectionsEndpointB = _IntraNeConnectionsEndpointB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 3, 1, 3),
    _IntraNeConnectionsEndpointB_Type()
)
intraNeConnectionsEndpointB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intraNeConnectionsEndpointB.setStatus("current")
_IntraNeConnectionsState_Type = FspR7StateConnection
_IntraNeConnectionsState_Object = MibTableColumn
intraNeConnectionsState = _IntraNeConnectionsState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 3, 1, 4),
    _IntraNeConnectionsState_Type()
)
intraNeConnectionsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intraNeConnectionsState.setStatus("current")
_CrsConnConfigTable_Object = MibTable
crsConnConfigTable = _CrsConnConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 4)
)
if mibBuilder.loadTexts:
    crsConnConfigTable.setStatus("current")
_CrsConnConfigEntry_Object = MibTableRow
crsConnConfigEntry = _CrsConnConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 4, 1)
)
crsConnConfigEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnDeployProvFrom"),
    (0, "FspR7-MIB", "crsConnDeployProvTo"),
)
if mibBuilder.loadTexts:
    crsConnConfigEntry.setStatus("current")
_CrsConnConfigAlias_Type = SnmpAdminString
_CrsConnConfigAlias_Object = MibTableColumn
crsConnConfigAlias = _CrsConnConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 4, 1, 1),
    _CrsConnConfigAlias_Type()
)
crsConnConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnConfigAlias.setStatus("current")
_CrsConnConfigRedLineState_Type = FspR7RedLinedState
_CrsConnConfigRedLineState_Object = MibTableColumn
crsConnConfigRedLineState = _CrsConnConfigRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 4, 1, 2),
    _CrsConnConfigRedLineState_Type()
)
crsConnConfigRedLineState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnConfigRedLineState.setStatus("current")
_CrsConnConfigType_Type = FspR7InterfaceType
_CrsConnConfigType_Object = MibTableColumn
crsConnConfigType = _CrsConnConfigType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 4, 1, 3),
    _CrsConnConfigType_Type()
)
crsConnConfigType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnConfigType.setStatus("deprecated")
_CrsConnConfigPathNode_Type = FspR7PathNode
_CrsConnConfigPathNode_Object = MibTableColumn
crsConnConfigPathNode = _CrsConnConfigPathNode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 4, 1, 4),
    _CrsConnConfigPathNode_Type()
)
crsConnConfigPathNode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnConfigPathNode.setStatus("current")
_CrsConnConfigTunnelAid_Type = SnmpAdminString
_CrsConnConfigTunnelAid_Object = MibTableColumn
crsConnConfigTunnelAid = _CrsConnConfigTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 4, 1, 5),
    _CrsConnConfigTunnelAid_Type()
)
crsConnConfigTunnelAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnConfigTunnelAid.setStatus("deprecated")
_CrsConnDataTable_Object = MibTable
crsConnDataTable = _CrsConnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5)
)
if mibBuilder.loadTexts:
    crsConnDataTable.setStatus("current")
_CrsConnDataEntry_Object = MibTableRow
crsConnDataEntry = _CrsConnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1)
)
crsConnDataEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnDeployProvFrom"),
    (0, "FspR7-MIB", "crsConnDeployProvTo"),
)
if mibBuilder.loadTexts:
    crsConnDataEntry.setStatus("current")
_CrsConnDataCrsType_Type = FspR7TypeCrs
_CrsConnDataCrsType_Object = MibTableColumn
crsConnDataCrsType = _CrsConnDataCrsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 1),
    _CrsConnDataCrsType_Type()
)
crsConnDataCrsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataCrsType.setStatus("current")
_CrsConnDataType_Type = FspR7InterfaceType
_CrsConnDataType_Object = MibTableColumn
crsConnDataType = _CrsConnDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 2),
    _CrsConnDataType_Type()
)
crsConnDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataType.setStatus("current")
_CrsConnDataConn_Type = FspR7Conn
_CrsConnDataConn_Object = MibTableColumn
crsConnDataConn = _CrsConnDataConn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 3),
    _CrsConnDataConn_Type()
)
crsConnDataConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataConn.setStatus("current")
_CrsConnDataCrsFunction_Type = FspR7FunctionCrs
_CrsConnDataCrsFunction_Object = MibTableColumn
crsConnDataCrsFunction = _CrsConnDataCrsFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 4),
    _CrsConnDataCrsFunction_Type()
)
crsConnDataCrsFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataCrsFunction.setStatus("current")
_CrsConnDataOper_Type = FspR7OperState
_CrsConnDataOper_Object = MibTableColumn
crsConnDataOper = _CrsConnDataOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 5),
    _CrsConnDataOper_Type()
)
crsConnDataOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataOper.setStatus("current")
_CrsConnDataEntityOutage_Type = FspR7NoYes
_CrsConnDataEntityOutage_Object = MibTableColumn
crsConnDataEntityOutage = _CrsConnDataEntityOutage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 6),
    _CrsConnDataEntityOutage_Type()
)
crsConnDataEntityOutage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataEntityOutage.setStatus("current")
_CrsConnDataTunnelId_Type = SnmpAdminString
_CrsConnDataTunnelId_Object = MibTableColumn
crsConnDataTunnelId = _CrsConnDataTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 7),
    _CrsConnDataTunnelId_Type()
)
crsConnDataTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataTunnelId.setStatus("current")
_CrsConnDataTunnelAid_Type = SnmpAdminString
_CrsConnDataTunnelAid_Object = MibTableColumn
crsConnDataTunnelAid = _CrsConnDataTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 8),
    _CrsConnDataTunnelAid_Type()
)
crsConnDataTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataTunnelAid.setStatus("current")
_CrsConnDataIngressTid_Type = SnmpAdminString
_CrsConnDataIngressTid_Object = MibTableColumn
crsConnDataIngressTid = _CrsConnDataIngressTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 9),
    _CrsConnDataIngressTid_Type()
)
crsConnDataIngressTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataIngressTid.setStatus("current")
_CrsConnDataIngressNodeIp_Type = IpAddress
_CrsConnDataIngressNodeIp_Object = MibTableColumn
crsConnDataIngressNodeIp = _CrsConnDataIngressNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 10),
    _CrsConnDataIngressNodeIp_Type()
)
crsConnDataIngressNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataIngressNodeIp.setStatus("current")
_CrsConnDataChannelSpacing_Type = FspR7ChannelSpacing
_CrsConnDataChannelSpacing_Object = MibTableColumn
crsConnDataChannelSpacing = _CrsConnDataChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 5, 1, 11),
    _CrsConnDataChannelSpacing_Type()
)
crsConnDataChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDataChannelSpacing.setStatus("current")
_CrsConnWdmConfigTable_Object = MibTable
crsConnWdmConfigTable = _CrsConnWdmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 6)
)
if mibBuilder.loadTexts:
    crsConnWdmConfigTable.setStatus("current")
_CrsConnWdmConfigEntry_Object = MibTableRow
crsConnWdmConfigEntry = _CrsConnWdmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 6, 1)
)
crsConnWdmConfigEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnDeployProvFrom"),
    (0, "FspR7-MIB", "crsConnDeployProvTo"),
)
if mibBuilder.loadTexts:
    crsConnWdmConfigEntry.setStatus("current")
_CrsConnWdmConfigAlias_Type = SnmpAdminString
_CrsConnWdmConfigAlias_Object = MibTableColumn
crsConnWdmConfigAlias = _CrsConnWdmConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 6, 1, 1),
    _CrsConnWdmConfigAlias_Type()
)
crsConnWdmConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnWdmConfigAlias.setStatus("current")
_CrsConnWdmConfigRedLineState_Type = FspR7RedLinedState
_CrsConnWdmConfigRedLineState_Object = MibTableColumn
crsConnWdmConfigRedLineState = _CrsConnWdmConfigRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 6, 1, 2),
    _CrsConnWdmConfigRedLineState_Type()
)
crsConnWdmConfigRedLineState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnWdmConfigRedLineState.setStatus("current")
_CrsConnWdmConfigType_Type = FspR7InterfaceType
_CrsConnWdmConfigType_Object = MibTableColumn
crsConnWdmConfigType = _CrsConnWdmConfigType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 6, 1, 3),
    _CrsConnWdmConfigType_Type()
)
crsConnWdmConfigType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnWdmConfigType.setStatus("current")
_CrsConnWdmConfigTunnelAid_Type = SnmpAdminString
_CrsConnWdmConfigTunnelAid_Object = MibTableColumn
crsConnWdmConfigTunnelAid = _CrsConnWdmConfigTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 6, 1, 4),
    _CrsConnWdmConfigTunnelAid_Type()
)
crsConnWdmConfigTunnelAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnWdmConfigTunnelAid.setStatus("deprecated")
_CrsConnWdmConfigPathNode_Type = FspR7PathNode
_CrsConnWdmConfigPathNode_Object = MibTableColumn
crsConnWdmConfigPathNode = _CrsConnWdmConfigPathNode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 6, 1, 5),
    _CrsConnWdmConfigPathNode_Type()
)
crsConnWdmConfigPathNode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnWdmConfigPathNode.setStatus("current")
_CrsConnWdmDataTable_Object = MibTable
crsConnWdmDataTable = _CrsConnWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7)
)
if mibBuilder.loadTexts:
    crsConnWdmDataTable.setStatus("current")
_CrsConnWdmDataEntry_Object = MibTableRow
crsConnWdmDataEntry = _CrsConnWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1)
)
crsConnWdmDataEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnDeployProvFrom"),
    (0, "FspR7-MIB", "crsConnDeployProvTo"),
)
if mibBuilder.loadTexts:
    crsConnWdmDataEntry.setStatus("current")
_CrsConnWdmDataCrsType_Type = FspR7TypeCrs
_CrsConnWdmDataCrsType_Object = MibTableColumn
crsConnWdmDataCrsType = _CrsConnWdmDataCrsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 1),
    _CrsConnWdmDataCrsType_Type()
)
crsConnWdmDataCrsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataCrsType.setStatus("current")
_CrsConnWdmDataType_Type = FspR7InterfaceType
_CrsConnWdmDataType_Object = MibTableColumn
crsConnWdmDataType = _CrsConnWdmDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 2),
    _CrsConnWdmDataType_Type()
)
crsConnWdmDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataType.setStatus("current")
_CrsConnWdmDataConn_Type = FspR7Conn
_CrsConnWdmDataConn_Object = MibTableColumn
crsConnWdmDataConn = _CrsConnWdmDataConn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 3),
    _CrsConnWdmDataConn_Type()
)
crsConnWdmDataConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataConn.setStatus("current")
_CrsConnWdmDataCrsFunction_Type = FspR7FunctionCrs
_CrsConnWdmDataCrsFunction_Object = MibTableColumn
crsConnWdmDataCrsFunction = _CrsConnWdmDataCrsFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 4),
    _CrsConnWdmDataCrsFunction_Type()
)
crsConnWdmDataCrsFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataCrsFunction.setStatus("current")
_CrsConnWdmDataOper_Type = FspR7OperState
_CrsConnWdmDataOper_Object = MibTableColumn
crsConnWdmDataOper = _CrsConnWdmDataOper_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 5),
    _CrsConnWdmDataOper_Type()
)
crsConnWdmDataOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataOper.setStatus("current")
_CrsConnWdmDataEntityOutage_Type = FspR7NoYes
_CrsConnWdmDataEntityOutage_Object = MibTableColumn
crsConnWdmDataEntityOutage = _CrsConnWdmDataEntityOutage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 6),
    _CrsConnWdmDataEntityOutage_Type()
)
crsConnWdmDataEntityOutage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataEntityOutage.setStatus("current")
_CrsConnWdmDataTunnelAid_Type = SnmpAdminString
_CrsConnWdmDataTunnelAid_Object = MibTableColumn
crsConnWdmDataTunnelAid = _CrsConnWdmDataTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 7),
    _CrsConnWdmDataTunnelAid_Type()
)
crsConnWdmDataTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataTunnelAid.setStatus("current")
_CrsConnWdmDataIngressTid_Type = SnmpAdminString
_CrsConnWdmDataIngressTid_Object = MibTableColumn
crsConnWdmDataIngressTid = _CrsConnWdmDataIngressTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 8),
    _CrsConnWdmDataIngressTid_Type()
)
crsConnWdmDataIngressTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataIngressTid.setStatus("current")
_CrsConnWdmDataIngressNodeIp_Type = IpAddress
_CrsConnWdmDataIngressNodeIp_Object = MibTableColumn
crsConnWdmDataIngressNodeIp = _CrsConnWdmDataIngressNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 9),
    _CrsConnWdmDataIngressNodeIp_Type()
)
crsConnWdmDataIngressNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataIngressNodeIp.setStatus("current")
_CrsConnWdmDataChannelSpacing_Type = FspR7ChannelSpacing
_CrsConnWdmDataChannelSpacing_Object = MibTableColumn
crsConnWdmDataChannelSpacing = _CrsConnWdmDataChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 7, 1, 10),
    _CrsConnWdmDataChannelSpacing_Type()
)
crsConnWdmDataChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmDataChannelSpacing.setStatus("current")
_PhysicalTerminationPointTable_Object = MibTable
physicalTerminationPointTable = _PhysicalTerminationPointTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 8)
)
if mibBuilder.loadTexts:
    physicalTerminationPointTable.setStatus("current")
_PhysicalTerminationPointEntry_Object = MibTableRow
physicalTerminationPointEntry = _PhysicalTerminationPointEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 8, 1)
)
physicalTerminationPointEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    physicalTerminationPointEntry.setStatus("current")
_PhysicalTerminationPointIndex_Type = EntityIndex
_PhysicalTerminationPointIndex_Object = MibTableColumn
physicalTerminationPointIndex = _PhysicalTerminationPointIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 5, 8, 1, 1),
    _PhysicalTerminationPointIndex_Type()
)
physicalTerminationPointIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    physicalTerminationPointIndex.setStatus("current")
_SystemConfigAndStatus_ObjectIdentity = ObjectIdentity
systemConfigAndStatus = _SystemConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 6)
)
_ControlPlaneConfigAndStatus_ObjectIdentity = ObjectIdentity
controlPlaneConfigAndStatus = _ControlPlaneConfigAndStatus_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7)
)
_ControlPlaneWdmConfigTable_Object = MibTable
controlPlaneWdmConfigTable = _ControlPlaneWdmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1)
)
if mibBuilder.loadTexts:
    controlPlaneWdmConfigTable.setStatus("current")
_ControlPlaneWdmConfigEntry_Object = MibTableRow
controlPlaneWdmConfigEntry = _ControlPlaneWdmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1)
)
controlPlaneWdmConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneWdmConfigEntry.setStatus("current")
_ControlPlaneWdmConfigCtmConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigCtmConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigCtmConfigFlag = _ControlPlaneWdmConfigCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 1),
    _ControlPlaneWdmConfigCtmConfigFlag_Type()
)
controlPlaneWdmConfigCtmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmConfigFlag.setStatus("current")
_ControlPlaneWdmConfigCtmTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigCtmTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigCtmTraceDetail = _ControlPlaneWdmConfigCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 2),
    _ControlPlaneWdmConfigCtmTraceDetail_Type()
)
controlPlaneWdmConfigCtmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmTraceDetail.setStatus("current")
_ControlPlaneWdmConfigCtmSetupTimeout_Type = Unsigned32
_ControlPlaneWdmConfigCtmSetupTimeout_Object = MibTableColumn
controlPlaneWdmConfigCtmSetupTimeout = _ControlPlaneWdmConfigCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 3),
    _ControlPlaneWdmConfigCtmSetupTimeout_Type()
)
controlPlaneWdmConfigCtmSetupTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmSetupTimeout.setUnits("s")
_ControlPlaneWdmConfigCtmShutdownTimeout_Type = Unsigned32
_ControlPlaneWdmConfigCtmShutdownTimeout_Object = MibTableColumn
controlPlaneWdmConfigCtmShutdownTimeout = _ControlPlaneWdmConfigCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 4),
    _ControlPlaneWdmConfigCtmShutdownTimeout_Type()
)
controlPlaneWdmConfigCtmShutdownTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmShutdownTimeout.setUnits("s")
_ControlPlaneWdmConfigCtmRetryWait_Type = Unsigned32
_ControlPlaneWdmConfigCtmRetryWait_Object = MibTableColumn
controlPlaneWdmConfigCtmRetryWait = _ControlPlaneWdmConfigCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 5),
    _ControlPlaneWdmConfigCtmRetryWait_Type()
)
controlPlaneWdmConfigCtmRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmRetryWait.setUnits("s")
_ControlPlaneWdmConfigCtmRetryWaitMultiplier_Type = Unsigned32
_ControlPlaneWdmConfigCtmRetryWaitMultiplier_Object = MibTableColumn
controlPlaneWdmConfigCtmRetryWaitMultiplier = _ControlPlaneWdmConfigCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 6),
    _ControlPlaneWdmConfigCtmRetryWaitMultiplier_Type()
)
controlPlaneWdmConfigCtmRetryWaitMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmRetryWaitMultiplier.setStatus("current")
_ControlPlaneWdmConfigCtmMaximumRetryWait_Type = Unsigned32
_ControlPlaneWdmConfigCtmMaximumRetryWait_Object = MibTableColumn
controlPlaneWdmConfigCtmMaximumRetryWait = _ControlPlaneWdmConfigCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 7),
    _ControlPlaneWdmConfigCtmMaximumRetryWait_Type()
)
controlPlaneWdmConfigCtmMaximumRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmMaximumRetryWait.setUnits("s")
_ControlPlaneWdmConfigCtmMaximumRetryNumber_Type = Unsigned32
_ControlPlaneWdmConfigCtmMaximumRetryNumber_Object = MibTableColumn
controlPlaneWdmConfigCtmMaximumRetryNumber = _ControlPlaneWdmConfigCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 8),
    _ControlPlaneWdmConfigCtmMaximumRetryNumber_Type()
)
controlPlaneWdmConfigCtmMaximumRetryNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCtmMaximumRetryNumber.setStatus("current")
_ControlPlaneWdmConfigRaConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigRaConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigRaConfigFlag = _ControlPlaneWdmConfigRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 9),
    _ControlPlaneWdmConfigRaConfigFlag_Type()
)
controlPlaneWdmConfigRaConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRaConfigFlag.setStatus("current")
_ControlPlaneWdmConfigRaTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigRaTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigRaTraceDetail = _ControlPlaneWdmConfigRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 10),
    _ControlPlaneWdmConfigRaTraceDetail_Type()
)
controlPlaneWdmConfigRaTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRaTraceDetail.setStatus("current")
_ControlPlaneWdmConfigRaAlarmActivationTime_Type = Unsigned32
_ControlPlaneWdmConfigRaAlarmActivationTime_Object = MibTableColumn
controlPlaneWdmConfigRaAlarmActivationTime = _ControlPlaneWdmConfigRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 11),
    _ControlPlaneWdmConfigRaAlarmActivationTime_Type()
)
controlPlaneWdmConfigRaAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRaAlarmActivationTime.setUnits("s")
_ControlPlaneWdmConfigCmConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigCmConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigCmConfigFlag = _ControlPlaneWdmConfigCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 12),
    _ControlPlaneWdmConfigCmConfigFlag_Type()
)
controlPlaneWdmConfigCmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmConfigFlag.setStatus("current")
_ControlPlaneWdmConfigCmTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigCmTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigCmTraceDetail = _ControlPlaneWdmConfigCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 13),
    _ControlPlaneWdmConfigCmTraceDetail_Type()
)
controlPlaneWdmConfigCmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmTraceDetail.setStatus("current")
_ControlPlaneWdmConfigCmAlarmActivationTime_Type = Unsigned32
_ControlPlaneWdmConfigCmAlarmActivationTime_Object = MibTableColumn
controlPlaneWdmConfigCmAlarmActivationTime = _ControlPlaneWdmConfigCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 14),
    _ControlPlaneWdmConfigCmAlarmActivationTime_Type()
)
controlPlaneWdmConfigCmAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmAlarmActivationTime.setUnits("s")
_ControlPlaneWdmConfigCmFisFrsTimeout_Type = Unsigned32
_ControlPlaneWdmConfigCmFisFrsTimeout_Object = MibTableColumn
controlPlaneWdmConfigCmFisFrsTimeout = _ControlPlaneWdmConfigCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 15),
    _ControlPlaneWdmConfigCmFisFrsTimeout_Type()
)
controlPlaneWdmConfigCmFisFrsTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmFisFrsTimeout.setUnits("s")
_ControlPlaneWdmConfigCmCrankBackTimeout_Type = Unsigned32
_ControlPlaneWdmConfigCmCrankBackTimeout_Object = MibTableColumn
controlPlaneWdmConfigCmCrankBackTimeout = _ControlPlaneWdmConfigCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 16),
    _ControlPlaneWdmConfigCmCrankBackTimeout_Type()
)
controlPlaneWdmConfigCmCrankBackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCmCrankBackTimeout.setUnits("s")
_ControlPlaneWdmConfigCdbConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigCdbConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigCdbConfigFlag = _ControlPlaneWdmConfigCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 17),
    _ControlPlaneWdmConfigCdbConfigFlag_Type()
)
controlPlaneWdmConfigCdbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCdbConfigFlag.setStatus("current")
_ControlPlaneWdmConfigCdbDetail_Type = Unsigned32
_ControlPlaneWdmConfigCdbDetail_Object = MibTableColumn
controlPlaneWdmConfigCdbDetail = _ControlPlaneWdmConfigCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 18),
    _ControlPlaneWdmConfigCdbDetail_Type()
)
controlPlaneWdmConfigCdbDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCdbDetail.setStatus("current")
_ControlPlaneWdmConfigCdbMaxSize_Type = Unsigned32
_ControlPlaneWdmConfigCdbMaxSize_Object = MibTableColumn
controlPlaneWdmConfigCdbMaxSize = _ControlPlaneWdmConfigCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 19),
    _ControlPlaneWdmConfigCdbMaxSize_Type()
)
controlPlaneWdmConfigCdbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCdbMaxSize.setStatus("current")
_ControlPlaneWdmConfigRsvpConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigRsvpConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigRsvpConfigFlag = _ControlPlaneWdmConfigRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 20),
    _ControlPlaneWdmConfigRsvpConfigFlag_Type()
)
controlPlaneWdmConfigRsvpConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRsvpConfigFlag.setStatus("current")
_ControlPlaneWdmConfigRsvpMaxExpRestartTime_Type = Counter64String
_ControlPlaneWdmConfigRsvpMaxExpRestartTime_Object = MibTableColumn
controlPlaneWdmConfigRsvpMaxExpRestartTime = _ControlPlaneWdmConfigRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 21),
    _ControlPlaneWdmConfigRsvpMaxExpRestartTime_Type()
)
controlPlaneWdmConfigRsvpMaxExpRestartTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRsvpMaxExpRestartTime.setUnits("ms")
_ControlPlaneWdmConfigRsvpMaxExpRecoveryTime_Type = Unsigned32
_ControlPlaneWdmConfigRsvpMaxExpRecoveryTime_Object = MibTableColumn
controlPlaneWdmConfigRsvpMaxExpRecoveryTime = _ControlPlaneWdmConfigRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 22),
    _ControlPlaneWdmConfigRsvpMaxExpRecoveryTime_Type()
)
controlPlaneWdmConfigRsvpMaxExpRecoveryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRsvpMaxExpRecoveryTime.setUnits("ms")
_ControlPlaneWdmConfigTedbConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigTedbConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigTedbConfigFlag = _ControlPlaneWdmConfigTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 23),
    _ControlPlaneWdmConfigTedbConfigFlag_Type()
)
controlPlaneWdmConfigTedbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigTedbConfigFlag.setStatus("current")
_ControlPlaneWdmConfigTedbTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigTedbTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigTedbTraceDetail = _ControlPlaneWdmConfigTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 24),
    _ControlPlaneWdmConfigTedbTraceDetail_Type()
)
controlPlaneWdmConfigTedbTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigTedbTraceDetail.setStatus("current")
_ControlPlaneWdmConfigTedbMaxSize_Type = Unsigned32
_ControlPlaneWdmConfigTedbMaxSize_Object = MibTableColumn
controlPlaneWdmConfigTedbMaxSize = _ControlPlaneWdmConfigTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 25),
    _ControlPlaneWdmConfigTedbMaxSize_Type()
)
controlPlaneWdmConfigTedbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigTedbMaxSize.setStatus("current")
_ControlPlaneWdmConfigTedbRouterId_Type = IpAddress
_ControlPlaneWdmConfigTedbRouterId_Object = MibTableColumn
controlPlaneWdmConfigTedbRouterId = _ControlPlaneWdmConfigTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 26),
    _ControlPlaneWdmConfigTedbRouterId_Type()
)
controlPlaneWdmConfigTedbRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigTedbRouterId.setStatus("current")
_ControlPlaneWdmConfigTedbMinAdvertWait_Type = Unsigned32
_ControlPlaneWdmConfigTedbMinAdvertWait_Object = MibTableColumn
controlPlaneWdmConfigTedbMinAdvertWait = _ControlPlaneWdmConfigTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 27),
    _ControlPlaneWdmConfigTedbMinAdvertWait_Type()
)
controlPlaneWdmConfigTedbMinAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigTedbMinAdvertWait.setUnits("s")
_ControlPlaneWdmConfigNaasConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigNaasConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigNaasConfigFlag = _ControlPlaneWdmConfigNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 28),
    _ControlPlaneWdmConfigNaasConfigFlag_Type()
)
controlPlaneWdmConfigNaasConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigNaasConfigFlag.setStatus("current")
_ControlPlaneWdmConfigNaasTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigNaasTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigNaasTraceDetail = _ControlPlaneWdmConfigNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 29),
    _ControlPlaneWdmConfigNaasTraceDetail_Type()
)
controlPlaneWdmConfigNaasTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigNaasTraceDetail.setStatus("current")
_ControlPlaneWdmConfigNaasMaxSize_Type = Unsigned32
_ControlPlaneWdmConfigNaasMaxSize_Object = MibTableColumn
controlPlaneWdmConfigNaasMaxSize = _ControlPlaneWdmConfigNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 30),
    _ControlPlaneWdmConfigNaasMaxSize_Type()
)
controlPlaneWdmConfigNaasMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigNaasMaxSize.setStatus("current")
_ControlPlaneWdmConfigNaasAdvertWait_Type = Unsigned32
_ControlPlaneWdmConfigNaasAdvertWait_Object = MibTableColumn
controlPlaneWdmConfigNaasAdvertWait = _ControlPlaneWdmConfigNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 31),
    _ControlPlaneWdmConfigNaasAdvertWait_Type()
)
controlPlaneWdmConfigNaasAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigNaasAdvertWait.setUnits("s")
_ControlPlaneWdmConfigPcConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigPcConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigPcConfigFlag = _ControlPlaneWdmConfigPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 32),
    _ControlPlaneWdmConfigPcConfigFlag_Type()
)
controlPlaneWdmConfigPcConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigPcConfigFlag.setStatus("current")
_ControlPlaneWdmConfigPcTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigPcTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigPcTraceDetail = _ControlPlaneWdmConfigPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 33),
    _ControlPlaneWdmConfigPcTraceDetail_Type()
)
controlPlaneWdmConfigPcTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigPcTraceDetail.setStatus("current")
_ControlPlaneWdmConfigCdConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigCdConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigCdConfigFlag = _ControlPlaneWdmConfigCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 34),
    _ControlPlaneWdmConfigCdConfigFlag_Type()
)
controlPlaneWdmConfigCdConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCdConfigFlag.setStatus("current")
_ControlPlaneWdmConfigCdTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigCdTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigCdTraceDetail = _ControlPlaneWdmConfigCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 35),
    _ControlPlaneWdmConfigCdTraceDetail_Type()
)
controlPlaneWdmConfigCdTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCdTraceDetail.setStatus("current")
_ControlPlaneWdmConfigCdResyncTimeout_Type = Unsigned32
_ControlPlaneWdmConfigCdResyncTimeout_Object = MibTableColumn
controlPlaneWdmConfigCdResyncTimeout = _ControlPlaneWdmConfigCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 36),
    _ControlPlaneWdmConfigCdResyncTimeout_Type()
)
controlPlaneWdmConfigCdResyncTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigCdResyncTimeout.setStatus("current")
_ControlPlaneWdmConfigRmConfigFlag_Type = Unsigned32
_ControlPlaneWdmConfigRmConfigFlag_Object = MibTableColumn
controlPlaneWdmConfigRmConfigFlag = _ControlPlaneWdmConfigRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 37),
    _ControlPlaneWdmConfigRmConfigFlag_Type()
)
controlPlaneWdmConfigRmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRmConfigFlag.setStatus("current")
_ControlPlaneWdmConfigRmTraceDetail_Type = Unsigned32
_ControlPlaneWdmConfigRmTraceDetail_Object = MibTableColumn
controlPlaneWdmConfigRmTraceDetail = _ControlPlaneWdmConfigRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 38),
    _ControlPlaneWdmConfigRmTraceDetail_Type()
)
controlPlaneWdmConfigRmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRmTraceDetail.setStatus("current")
_ControlPlaneWdmConfigRmTraceTarget_Type = Unsigned32
_ControlPlaneWdmConfigRmTraceTarget_Object = MibTableColumn
controlPlaneWdmConfigRmTraceTarget = _ControlPlaneWdmConfigRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 39),
    _ControlPlaneWdmConfigRmTraceTarget_Type()
)
controlPlaneWdmConfigRmTraceTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigRmTraceTarget.setStatus("current")


class _ControlPlaneWdmConfigWaitToRestore_Type(Unsigned32):
    """Custom type controlPlaneWdmConfigWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ControlPlaneWdmConfigWaitToRestore_Type.__name__ = "Unsigned32"
_ControlPlaneWdmConfigWaitToRestore_Object = MibTableColumn
controlPlaneWdmConfigWaitToRestore = _ControlPlaneWdmConfigWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 1, 1, 40),
    _ControlPlaneWdmConfigWaitToRestore_Type()
)
controlPlaneWdmConfigWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneWdmConfigWaitToRestore.setUnits("min")
_ControlPlaneWdmDataTable_Object = MibTable
controlPlaneWdmDataTable = _ControlPlaneWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2)
)
if mibBuilder.loadTexts:
    controlPlaneWdmDataTable.setStatus("current")
_ControlPlaneWdmDataEntry_Object = MibTableRow
controlPlaneWdmDataEntry = _ControlPlaneWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1)
)
controlPlaneWdmDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneWdmDataEntry.setStatus("current")
_ControlPlaneWdmDataCtmAlias_Type = SnmpAdminString
_ControlPlaneWdmDataCtmAlias_Object = MibTableColumn
controlPlaneWdmDataCtmAlias = _ControlPlaneWdmDataCtmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 1),
    _ControlPlaneWdmDataCtmAlias_Type()
)
controlPlaneWdmDataCtmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataCtmAlias.setStatus("current")
_ControlPlaneWdmDataRaAlias_Type = SnmpAdminString
_ControlPlaneWdmDataRaAlias_Object = MibTableColumn
controlPlaneWdmDataRaAlias = _ControlPlaneWdmDataRaAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 2),
    _ControlPlaneWdmDataRaAlias_Type()
)
controlPlaneWdmDataRaAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataRaAlias.setStatus("current")
_ControlPlaneWdmDataCmAlias_Type = SnmpAdminString
_ControlPlaneWdmDataCmAlias_Object = MibTableColumn
controlPlaneWdmDataCmAlias = _ControlPlaneWdmDataCmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 3),
    _ControlPlaneWdmDataCmAlias_Type()
)
controlPlaneWdmDataCmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataCmAlias.setStatus("current")
_ControlPlaneWdmDataCdbAlias_Type = SnmpAdminString
_ControlPlaneWdmDataCdbAlias_Object = MibTableColumn
controlPlaneWdmDataCdbAlias = _ControlPlaneWdmDataCdbAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 4),
    _ControlPlaneWdmDataCdbAlias_Type()
)
controlPlaneWdmDataCdbAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataCdbAlias.setStatus("current")
_ControlPlaneWdmDataTedbAlias_Type = SnmpAdminString
_ControlPlaneWdmDataTedbAlias_Object = MibTableColumn
controlPlaneWdmDataTedbAlias = _ControlPlaneWdmDataTedbAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 5),
    _ControlPlaneWdmDataTedbAlias_Type()
)
controlPlaneWdmDataTedbAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataTedbAlias.setStatus("current")
_ControlPlaneWdmDataNaasAlias_Type = SnmpAdminString
_ControlPlaneWdmDataNaasAlias_Object = MibTableColumn
controlPlaneWdmDataNaasAlias = _ControlPlaneWdmDataNaasAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 6),
    _ControlPlaneWdmDataNaasAlias_Type()
)
controlPlaneWdmDataNaasAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataNaasAlias.setStatus("current")
_ControlPlaneWdmDataPcAlias_Type = SnmpAdminString
_ControlPlaneWdmDataPcAlias_Object = MibTableColumn
controlPlaneWdmDataPcAlias = _ControlPlaneWdmDataPcAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 7),
    _ControlPlaneWdmDataPcAlias_Type()
)
controlPlaneWdmDataPcAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataPcAlias.setStatus("current")
_ControlPlaneWdmDataRsvpAlias_Type = SnmpAdminString
_ControlPlaneWdmDataRsvpAlias_Object = MibTableColumn
controlPlaneWdmDataRsvpAlias = _ControlPlaneWdmDataRsvpAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 8),
    _ControlPlaneWdmDataRsvpAlias_Type()
)
controlPlaneWdmDataRsvpAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataRsvpAlias.setStatus("current")
_ControlPlaneWdmDataCdAlias_Type = SnmpAdminString
_ControlPlaneWdmDataCdAlias_Object = MibTableColumn
controlPlaneWdmDataCdAlias = _ControlPlaneWdmDataCdAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 9),
    _ControlPlaneWdmDataCdAlias_Type()
)
controlPlaneWdmDataCdAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataCdAlias.setStatus("current")
_ControlPlaneWdmDataRmAlias_Type = SnmpAdminString
_ControlPlaneWdmDataRmAlias_Object = MibTableColumn
controlPlaneWdmDataRmAlias = _ControlPlaneWdmDataRmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 10),
    _ControlPlaneWdmDataRmAlias_Type()
)
controlPlaneWdmDataRmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataRmAlias.setStatus("current")
_ControlPlaneWdmDataNodeNameSyntax_Type = FspR7NodeId
_ControlPlaneWdmDataNodeNameSyntax_Object = MibTableColumn
controlPlaneWdmDataNodeNameSyntax = _ControlPlaneWdmDataNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 2, 1, 11),
    _ControlPlaneWdmDataNodeNameSyntax_Type()
)
controlPlaneWdmDataNodeNameSyntax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneWdmDataNodeNameSyntax.setStatus("deprecated")
_TunnelWdmConfigTable_Object = MibTable
tunnelWdmConfigTable = _TunnelWdmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3)
)
if mibBuilder.loadTexts:
    tunnelWdmConfigTable.setStatus("current")
_TunnelWdmConfigEntry_Object = MibTableRow
tunnelWdmConfigEntry = _TunnelWdmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1)
)
tunnelWdmConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    tunnelWdmConfigEntry.setStatus("current")
_TunnelWdmConfigAlias_Type = SnmpAdminString
_TunnelWdmConfigAlias_Object = MibTableColumn
tunnelWdmConfigAlias = _TunnelWdmConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 1),
    _TunnelWdmConfigAlias_Type()
)
tunnelWdmConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigAlias.setStatus("current")
_TunnelWdmConfigFacilityType_Type = FspR7InterfaceType
_TunnelWdmConfigFacilityType_Object = MibTableColumn
tunnelWdmConfigFacilityType = _TunnelWdmConfigFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 2),
    _TunnelWdmConfigFacilityType_Type()
)
tunnelWdmConfigFacilityType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigFacilityType.setStatus("current")
_TunnelWdmConfigTerminationLevel_Type = OhTerminationLevel
_TunnelWdmConfigTerminationLevel_Object = MibTableColumn
tunnelWdmConfigTerminationLevel = _TunnelWdmConfigTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 3),
    _TunnelWdmConfigTerminationLevel_Type()
)
tunnelWdmConfigTerminationLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigTerminationLevel.setStatus("current")
_TunnelWdmConfigFecType_Type = FspR7FecType
_TunnelWdmConfigFecType_Object = MibTableColumn
tunnelWdmConfigFecType = _TunnelWdmConfigFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 4),
    _TunnelWdmConfigFecType_Type()
)
tunnelWdmConfigFecType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigFecType.setStatus("current")
_TunnelWdmConfigStuff_Type = FspR7Stuff
_TunnelWdmConfigStuff_Object = MibTableColumn
tunnelWdmConfigStuff = _TunnelWdmConfigStuff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 5),
    _TunnelWdmConfigStuff_Type()
)
tunnelWdmConfigStuff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigStuff.setStatus("current")
_TunnelWdmConfigProvisionedPaths_Type = SnmpAdminString
_TunnelWdmConfigProvisionedPaths_Object = MibTableColumn
tunnelWdmConfigProvisionedPaths = _TunnelWdmConfigProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 6),
    _TunnelWdmConfigProvisionedPaths_Type()
)
tunnelWdmConfigProvisionedPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigProvisionedPaths.setStatus("current")
_TunnelWdmConfigRecoveryType_Type = FspR7CpRecoveryType
_TunnelWdmConfigRecoveryType_Object = MibTableColumn
tunnelWdmConfigRecoveryType = _TunnelWdmConfigRecoveryType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 7),
    _TunnelWdmConfigRecoveryType_Type()
)
tunnelWdmConfigRecoveryType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigRecoveryType.setStatus("current")
_TunnelWdmConfigPin_Type = FspR7CpPinning
_TunnelWdmConfigPin_Object = MibTableColumn
tunnelWdmConfigPin = _TunnelWdmConfigPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 8),
    _TunnelWdmConfigPin_Type()
)
tunnelWdmConfigPin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigPin.setStatus("current")
_TunnelWdmConfigInitiateEqualization_Type = FspR7InitEqualization
_TunnelWdmConfigInitiateEqualization_Object = MibTableColumn
tunnelWdmConfigInitiateEqualization = _TunnelWdmConfigInitiateEqualization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 9),
    _TunnelWdmConfigInitiateEqualization_Type()
)
tunnelWdmConfigInitiateEqualization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigInitiateEqualization.setStatus("current")
_TunnelWdmConfigAbortProcess_Type = FspR7CpAbortProcess
_TunnelWdmConfigAbortProcess_Object = MibTableColumn
tunnelWdmConfigAbortProcess = _TunnelWdmConfigAbortProcess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 10),
    _TunnelWdmConfigAbortProcess_Type()
)
tunnelWdmConfigAbortProcess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigAbortProcess.setStatus("current")
_TunnelWdmConfigAdminModifier_Type = FspR7CommandModifier
_TunnelWdmConfigAdminModifier_Object = MibTableColumn
tunnelWdmConfigAdminModifier = _TunnelWdmConfigAdminModifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 11),
    _TunnelWdmConfigAdminModifier_Type()
)
tunnelWdmConfigAdminModifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigAdminModifier.setStatus("current")
_TunnelWdmConfigCommand_Type = FspR7CpCommand
_TunnelWdmConfigCommand_Object = MibTableColumn
tunnelWdmConfigCommand = _TunnelWdmConfigCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 12),
    _TunnelWdmConfigCommand_Type()
)
tunnelWdmConfigCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigCommand.setStatus("current")
_TunnelWdmConfigRestorationType_Type = FspR7CpRestorationType
_TunnelWdmConfigRestorationType_Object = MibTableColumn
tunnelWdmConfigRestorationType = _TunnelWdmConfigRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 13),
    _TunnelWdmConfigRestorationType_Type()
)
tunnelWdmConfigRestorationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigRestorationType.setStatus("current")
_TunnelWdmConfigSubLayer_Type = FspR7SubLayer
_TunnelWdmConfigSubLayer_Object = MibTableColumn
tunnelWdmConfigSubLayer = _TunnelWdmConfigSubLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 14),
    _TunnelWdmConfigSubLayer_Type()
)
tunnelWdmConfigSubLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigSubLayer.setStatus("current")
_TunnelWdmConfigMonitorEntities_Type = FspR7EnableDisable
_TunnelWdmConfigMonitorEntities_Object = MibTableColumn
tunnelWdmConfigMonitorEntities = _TunnelWdmConfigMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 15),
    _TunnelWdmConfigMonitorEntities_Type()
)
tunnelWdmConfigMonitorEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigMonitorEntities.setStatus("current")
_TunnelWdmConfigSubLayerEncoding_Type = FspR7SubLayerEncoding
_TunnelWdmConfigSubLayerEncoding_Object = MibTableColumn
tunnelWdmConfigSubLayerEncoding = _TunnelWdmConfigSubLayerEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 16),
    _TunnelWdmConfigSubLayerEncoding_Type()
)
tunnelWdmConfigSubLayerEncoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigSubLayerEncoding.setStatus("current")
_TunnelWdmConfigPceMode_Type = FspR7PceMode
_TunnelWdmConfigPceMode_Object = MibTableColumn
tunnelWdmConfigPceMode = _TunnelWdmConfigPceMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 17),
    _TunnelWdmConfigPceMode_Type()
)
tunnelWdmConfigPceMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigPceMode.setStatus("current")
_TunnelWdmConfigOperateReversion_Type = FspR7CpOperateReversion
_TunnelWdmConfigOperateReversion_Object = MibTableColumn
tunnelWdmConfigOperateReversion = _TunnelWdmConfigOperateReversion_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 18),
    _TunnelWdmConfigOperateReversion_Type()
)
tunnelWdmConfigOperateReversion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigOperateReversion.setStatus("current")
_TunnelWdmConfigReversionType_Type = FspR7CpReversionType
_TunnelWdmConfigReversionType_Object = MibTableColumn
tunnelWdmConfigReversionType = _TunnelWdmConfigReversionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 19),
    _TunnelWdmConfigReversionType_Type()
)
tunnelWdmConfigReversionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigReversionType.setStatus("current")
_TunnelWdmConfigRestorationMode_Type = FspR7CpRestorationMode
_TunnelWdmConfigRestorationMode_Object = MibTableColumn
tunnelWdmConfigRestorationMode = _TunnelWdmConfigRestorationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 20),
    _TunnelWdmConfigRestorationMode_Type()
)
tunnelWdmConfigRestorationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigRestorationMode.setStatus("current")
_TunnelWdmConfigRestPathsNoProv_Type = Unsigned32
_TunnelWdmConfigRestPathsNoProv_Object = MibTableColumn
tunnelWdmConfigRestPathsNoProv = _TunnelWdmConfigRestPathsNoProv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 21),
    _TunnelWdmConfigRestPathsNoProv_Type()
)
tunnelWdmConfigRestPathsNoProv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigRestPathsNoProv.setStatus("current")
_TunnelWdmConfigRestorationPaths_Type = SnmpAdminString
_TunnelWdmConfigRestorationPaths_Object = MibTableColumn
tunnelWdmConfigRestorationPaths = _TunnelWdmConfigRestorationPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 22),
    _TunnelWdmConfigRestorationPaths_Type()
)
tunnelWdmConfigRestorationPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigRestorationPaths.setStatus("current")
_TunnelWdmConfigRestorationPathsComputed_Type = SnmpAdminString
_TunnelWdmConfigRestorationPathsComputed_Object = MibTableColumn
tunnelWdmConfigRestorationPathsComputed = _TunnelWdmConfigRestorationPathsComputed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 23),
    _TunnelWdmConfigRestorationPathsComputed_Type()
)
tunnelWdmConfigRestorationPathsComputed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigRestorationPathsComputed.setStatus("current")
_TunnelWdmConfigResetRetainedFailureIndications_Type = FspR7ResetRfi
_TunnelWdmConfigResetRetainedFailureIndications_Object = MibTableColumn
tunnelWdmConfigResetRetainedFailureIndications = _TunnelWdmConfigResetRetainedFailureIndications_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 3, 1, 24),
    _TunnelWdmConfigResetRetainedFailureIndications_Type()
)
tunnelWdmConfigResetRetainedFailureIndications.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelWdmConfigResetRetainedFailureIndications.setStatus("current")
_TunnelWdmDataTable_Object = MibTable
tunnelWdmDataTable = _TunnelWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4)
)
if mibBuilder.loadTexts:
    tunnelWdmDataTable.setStatus("current")
_TunnelWdmDataEntry_Object = MibTableRow
tunnelWdmDataEntry = _TunnelWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1)
)
tunnelWdmDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    tunnelWdmDataEntry.setStatus("current")
_TunnelWdmDataTunnelId_Type = SnmpAdminString
_TunnelWdmDataTunnelId_Object = MibTableColumn
tunnelWdmDataTunnelId = _TunnelWdmDataTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 1),
    _TunnelWdmDataTunnelId_Type()
)
tunnelWdmDataTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataTunnelId.setStatus("current")
_TunnelWdmDataTunnelNo_Type = Unsigned32
_TunnelWdmDataTunnelNo_Object = MibTableColumn
tunnelWdmDataTunnelNo = _TunnelWdmDataTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 2),
    _TunnelWdmDataTunnelNo_Type()
)
tunnelWdmDataTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataTunnelNo.setStatus("current")
_TunnelWdmDataTunnelType_Type = FspR7CpTunnelType
_TunnelWdmDataTunnelType_Object = MibTableColumn
tunnelWdmDataTunnelType = _TunnelWdmDataTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 3),
    _TunnelWdmDataTunnelType_Type()
)
tunnelWdmDataTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataTunnelType.setStatus("current")
_TunnelWdmDataFromTid_Type = SnmpAdminString
_TunnelWdmDataFromTid_Object = MibTableColumn
tunnelWdmDataFromTid = _TunnelWdmDataFromTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 4),
    _TunnelWdmDataFromTid_Type()
)
tunnelWdmDataFromTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataFromTid.setStatus("current")
_TunnelWdmDataFromNodeIP_Type = IpAddress
_TunnelWdmDataFromNodeIP_Object = MibTableColumn
tunnelWdmDataFromNodeIP = _TunnelWdmDataFromNodeIP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 5),
    _TunnelWdmDataFromNodeIP_Type()
)
tunnelWdmDataFromNodeIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataFromNodeIP.setStatus("current")
_TunnelWdmDataToTid_Type = SnmpAdminString
_TunnelWdmDataToTid_Object = MibTableColumn
tunnelWdmDataToTid = _TunnelWdmDataToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 6),
    _TunnelWdmDataToTid_Type()
)
tunnelWdmDataToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataToTid.setStatus("current")
_TunnelWdmDataToTidMonitor_Type = SnmpAdminString
_TunnelWdmDataToTidMonitor_Object = MibTableColumn
tunnelWdmDataToTidMonitor = _TunnelWdmDataToTidMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 7),
    _TunnelWdmDataToTidMonitor_Type()
)
tunnelWdmDataToTidMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataToTidMonitor.setStatus("current")
_TunnelWdmDataToNodeIp_Type = IpAddress
_TunnelWdmDataToNodeIp_Object = MibTableColumn
tunnelWdmDataToNodeIp = _TunnelWdmDataToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 8),
    _TunnelWdmDataToNodeIp_Type()
)
tunnelWdmDataToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataToNodeIp.setStatus("current")
_TunnelWdmDataToNodeIpMonitor_Type = IpAddress
_TunnelWdmDataToNodeIpMonitor_Object = MibTableColumn
tunnelWdmDataToNodeIpMonitor = _TunnelWdmDataToNodeIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 9),
    _TunnelWdmDataToNodeIpMonitor_Type()
)
tunnelWdmDataToNodeIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataToNodeIpMonitor.setStatus("current")
_TunnelWdmDataFromAid_Type = EntityIndex
_TunnelWdmDataFromAid_Object = MibTableColumn
tunnelWdmDataFromAid = _TunnelWdmDataFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 10),
    _TunnelWdmDataFromAid_Type()
)
tunnelWdmDataFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataFromAid.setStatus("current")
_TunnelWdmDataToAid_Type = EntityIndex
_TunnelWdmDataToAid_Object = MibTableColumn
tunnelWdmDataToAid = _TunnelWdmDataToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 11),
    _TunnelWdmDataToAid_Type()
)
tunnelWdmDataToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataToAid.setStatus("current")
_TunnelWdmDataConnectionDirection_Type = FspR7Conn
_TunnelWdmDataConnectionDirection_Object = MibTableColumn
tunnelWdmDataConnectionDirection = _TunnelWdmDataConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 12),
    _TunnelWdmDataConnectionDirection_Type()
)
tunnelWdmDataConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataConnectionDirection.setStatus("current")
_TunnelWdmDataBitrate_Type = Unsigned32
_TunnelWdmDataBitrate_Object = MibTableColumn
tunnelWdmDataBitrate = _TunnelWdmDataBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 13),
    _TunnelWdmDataBitrate_Type()
)
tunnelWdmDataBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataBitrate.setStatus("current")
if mibBuilder.loadTexts:
    tunnelWdmDataBitrate.setUnits("Mbit/s")
_TunnelWdmDataEncode_Type = FspR7CpEncode
_TunnelWdmDataEncode_Object = MibTableColumn
tunnelWdmDataEncode = _TunnelWdmDataEncode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 14),
    _TunnelWdmDataEncode_Type()
)
tunnelWdmDataEncode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataEncode.setStatus("current")
_TunnelWdmDataComputedPaths_Type = SnmpAdminString
_TunnelWdmDataComputedPaths_Object = MibTableColumn
tunnelWdmDataComputedPaths = _TunnelWdmDataComputedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 15),
    _TunnelWdmDataComputedPaths_Type()
)
tunnelWdmDataComputedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataComputedPaths.setStatus("current")
_TunnelWdmDataComputationState_Type = FspR7CpCompState
_TunnelWdmDataComputationState_Object = MibTableColumn
tunnelWdmDataComputationState = _TunnelWdmDataComputationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 16),
    _TunnelWdmDataComputationState_Type()
)
tunnelWdmDataComputationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataComputationState.setStatus("current")
_TunnelWdmDataErrorMessage_Type = SnmpAdminString
_TunnelWdmDataErrorMessage_Object = MibTableColumn
tunnelWdmDataErrorMessage = _TunnelWdmDataErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 17),
    _TunnelWdmDataErrorMessage_Type()
)
tunnelWdmDataErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataErrorMessage.setStatus("current")
_TunnelWdmDataErrorCodeMajor_Type = Unsigned32
_TunnelWdmDataErrorCodeMajor_Object = MibTableColumn
tunnelWdmDataErrorCodeMajor = _TunnelWdmDataErrorCodeMajor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 18),
    _TunnelWdmDataErrorCodeMajor_Type()
)
tunnelWdmDataErrorCodeMajor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataErrorCodeMajor.setStatus("current")
_TunnelWdmDataErrorCodeMinor_Type = Integer32
_TunnelWdmDataErrorCodeMinor_Object = MibTableColumn
tunnelWdmDataErrorCodeMinor = _TunnelWdmDataErrorCodeMinor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 19),
    _TunnelWdmDataErrorCodeMinor_Type()
)
tunnelWdmDataErrorCodeMinor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataErrorCodeMinor.setStatus("current")
_TunnelWdmDataErrorIp_Type = IpAddress
_TunnelWdmDataErrorIp_Object = MibTableColumn
tunnelWdmDataErrorIp = _TunnelWdmDataErrorIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 20),
    _TunnelWdmDataErrorIp_Type()
)
tunnelWdmDataErrorIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataErrorIp.setStatus("current")
_TunnelWdmDataErrorTid_Type = SnmpAdminString
_TunnelWdmDataErrorTid_Object = MibTableColumn
tunnelWdmDataErrorTid = _TunnelWdmDataErrorTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 21),
    _TunnelWdmDataErrorTid_Type()
)
tunnelWdmDataErrorTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataErrorTid.setStatus("current")
_TunnelWdmDataErrorCategory_Type = FspR7CpErrorCategory
_TunnelWdmDataErrorCategory_Object = MibTableColumn
tunnelWdmDataErrorCategory = _TunnelWdmDataErrorCategory_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 22),
    _TunnelWdmDataErrorCategory_Type()
)
tunnelWdmDataErrorCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataErrorCategory.setStatus("current")
_TunnelWdmDataSpecificErrorMessage_Type = SnmpAdminString
_TunnelWdmDataSpecificErrorMessage_Object = MibTableColumn
tunnelWdmDataSpecificErrorMessage = _TunnelWdmDataSpecificErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 23),
    _TunnelWdmDataSpecificErrorMessage_Type()
)
tunnelWdmDataSpecificErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataSpecificErrorMessage.setStatus("current")
_TunnelWdmDataTunnelScope_Type = FspR7CpTunnelScope
_TunnelWdmDataTunnelScope_Object = MibTableColumn
tunnelWdmDataTunnelScope = _TunnelWdmDataTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 24),
    _TunnelWdmDataTunnelScope_Type()
)
tunnelWdmDataTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataTunnelScope.setStatus("current")
_TunnelWdmDataLayer_Type = FspR7PacketsLayer
_TunnelWdmDataLayer_Object = MibTableColumn
tunnelWdmDataLayer = _TunnelWdmDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 25),
    _TunnelWdmDataLayer_Type()
)
tunnelWdmDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataLayer.setStatus("current")
_TunnelWdmDataLogicalIfAid_Type = EntityIndex
_TunnelWdmDataLogicalIfAid_Object = MibTableColumn
tunnelWdmDataLogicalIfAid = _TunnelWdmDataLogicalIfAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 26),
    _TunnelWdmDataLogicalIfAid_Type()
)
tunnelWdmDataLogicalIfAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataLogicalIfAid.setStatus("current")
_TunnelWdmDataOifUni_Type = FspR7YesNo
_TunnelWdmDataOifUni_Object = MibTableColumn
tunnelWdmDataOifUni = _TunnelWdmDataOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 27),
    _TunnelWdmDataOifUni_Type()
)
tunnelWdmDataOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataOifUni.setStatus("current")
_TunnelWdmDataTunnelNumberExtension_Type = Unsigned32
_TunnelWdmDataTunnelNumberExtension_Object = MibTableColumn
tunnelWdmDataTunnelNumberExtension = _TunnelWdmDataTunnelNumberExtension_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 28),
    _TunnelWdmDataTunnelNumberExtension_Type()
)
tunnelWdmDataTunnelNumberExtension.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataTunnelNumberExtension.setStatus("current")
_TunnelWdmDataRestorationState_Type = FspR7CpRestorationState
_TunnelWdmDataRestorationState_Object = MibTableColumn
tunnelWdmDataRestorationState = _TunnelWdmDataRestorationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 29),
    _TunnelWdmDataRestorationState_Type()
)
tunnelWdmDataRestorationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataRestorationState.setStatus("current")
_TunnelWdmDataTunnelTemplate_Type = FspR7YesNo
_TunnelWdmDataTunnelTemplate_Object = MibTableColumn
tunnelWdmDataTunnelTemplate = _TunnelWdmDataTunnelTemplate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 30),
    _TunnelWdmDataTunnelTemplate_Type()
)
tunnelWdmDataTunnelTemplate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataTunnelTemplate.setStatus("current")
_TunnelWdmDataRestPathsNoAvail_Type = Unsigned32
_TunnelWdmDataRestPathsNoAvail_Object = MibTableColumn
tunnelWdmDataRestPathsNoAvail = _TunnelWdmDataRestPathsNoAvail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 31),
    _TunnelWdmDataRestPathsNoAvail_Type()
)
tunnelWdmDataRestPathsNoAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataRestPathsNoAvail.setStatus("current")
_TunnelWdmDataReversionState_Type = FspR7CpReversionState
_TunnelWdmDataReversionState_Object = MibTableColumn
tunnelWdmDataReversionState = _TunnelWdmDataReversionState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 32),
    _TunnelWdmDataReversionState_Type()
)
tunnelWdmDataReversionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataReversionState.setStatus("current")
_TunnelWdmDataMonitorEntitiesDerive_Type = FspR7EnableDisable
_TunnelWdmDataMonitorEntitiesDerive_Object = MibTableColumn
tunnelWdmDataMonitorEntitiesDerive = _TunnelWdmDataMonitorEntitiesDerive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 33),
    _TunnelWdmDataMonitorEntitiesDerive_Type()
)
tunnelWdmDataMonitorEntitiesDerive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataMonitorEntitiesDerive.setStatus("current")
_TunnelWdmDataRfiList_Type = SnmpAdminString
_TunnelWdmDataRfiList_Object = MibTableColumn
tunnelWdmDataRfiList = _TunnelWdmDataRfiList_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 34),
    _TunnelWdmDataRfiList_Type()
)
tunnelWdmDataRfiList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataRfiList.setStatus("current")
_TunnelWdmDataFromAidString_Type = SnmpAdminString
_TunnelWdmDataFromAidString_Object = MibTableColumn
tunnelWdmDataFromAidString = _TunnelWdmDataFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 35),
    _TunnelWdmDataFromAidString_Type()
)
tunnelWdmDataFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataFromAidString.setStatus("current")
_TunnelWdmDataToAidString_Type = SnmpAdminString
_TunnelWdmDataToAidString_Object = MibTableColumn
tunnelWdmDataToAidString = _TunnelWdmDataToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 4, 1, 36),
    _TunnelWdmDataToAidString_Type()
)
tunnelWdmDataToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelWdmDataToAidString.setStatus("current")
_PathWdmDataTable_Object = MibTable
pathWdmDataTable = _PathWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 6)
)
if mibBuilder.loadTexts:
    pathWdmDataTable.setStatus("current")
_PathWdmDataEntry_Object = MibTableRow
pathWdmDataEntry = _PathWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 6, 1)
)
pathWdmDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    pathWdmDataEntry.setStatus("current")
_PathWdmDataPathId_Type = SnmpAdminString
_PathWdmDataPathId_Object = MibTableColumn
pathWdmDataPathId = _PathWdmDataPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 6, 1, 1),
    _PathWdmDataPathId_Type()
)
pathWdmDataPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathWdmDataPathId.setStatus("current")
_PathWdmDataPathType_Type = FspR7CpPathType
_PathWdmDataPathType_Object = MibTableColumn
pathWdmDataPathType = _PathWdmDataPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 6, 1, 2),
    _PathWdmDataPathType_Type()
)
pathWdmDataPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathWdmDataPathType.setStatus("current")
_PathWdmDataConnectionTunnelAid_Type = EntityIndex
_PathWdmDataConnectionTunnelAid_Object = MibTableColumn
pathWdmDataConnectionTunnelAid = _PathWdmDataConnectionTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 6, 1, 3),
    _PathWdmDataConnectionTunnelAid_Type()
)
pathWdmDataConnectionTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathWdmDataConnectionTunnelAid.setStatus("current")
_PathWdmDataRole_Type = FspR7CpRole
_PathWdmDataRole_Object = MibTableColumn
pathWdmDataRole = _PathWdmDataRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 6, 1, 4),
    _PathWdmDataRole_Type()
)
pathWdmDataRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathWdmDataRole.setStatus("current")
_PathElementWdmDataTable_Object = MibTable
pathElementWdmDataTable = _PathElementWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8)
)
if mibBuilder.loadTexts:
    pathElementWdmDataTable.setStatus("current")
_PathElementWdmDataEntry_Object = MibTableRow
pathElementWdmDataEntry = _PathElementWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1)
)
pathElementWdmDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    pathElementWdmDataEntry.setStatus("current")
_PathElementWdmDataPathId_Type = SnmpAdminString
_PathElementWdmDataPathId_Object = MibTableColumn
pathElementWdmDataPathId = _PathElementWdmDataPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 1),
    _PathElementWdmDataPathId_Type()
)
pathElementWdmDataPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataPathId.setStatus("current")
_PathElementWdmDataSequenceNumber_Type = Unsigned32
_PathElementWdmDataSequenceNumber_Object = MibTableColumn
pathElementWdmDataSequenceNumber = _PathElementWdmDataSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 2),
    _PathElementWdmDataSequenceNumber_Type()
)
pathElementWdmDataSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataSequenceNumber.setStatus("current")
_PathElementWdmDataPathType_Type = FspR7CpPathType
_PathElementWdmDataPathType_Object = MibTableColumn
pathElementWdmDataPathType = _PathElementWdmDataPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 3),
    _PathElementWdmDataPathType_Type()
)
pathElementWdmDataPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataPathType.setStatus("current")
_PathElementWdmDataTrafficEngineeringType_Type = FspR7CpTEType
_PathElementWdmDataTrafficEngineeringType_Object = MibTableColumn
pathElementWdmDataTrafficEngineeringType = _PathElementWdmDataTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 4),
    _PathElementWdmDataTrafficEngineeringType_Type()
)
pathElementWdmDataTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataTrafficEngineeringType.setStatus("current")
_PathElementWdmDataLifIp_Type = IpAddress
_PathElementWdmDataLifIp_Object = MibTableColumn
pathElementWdmDataLifIp = _PathElementWdmDataLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 5),
    _PathElementWdmDataLifIp_Type()
)
pathElementWdmDataLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataLifIp.setStatus("current")
_PathElementWdmDataNodeIp_Type = IpAddress
_PathElementWdmDataNodeIp_Object = MibTableColumn
pathElementWdmDataNodeIp = _PathElementWdmDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 6),
    _PathElementWdmDataNodeIp_Type()
)
pathElementWdmDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataNodeIp.setStatus("current")
_PathElementWdmDataNodeIpMonitor_Type = IpAddress
_PathElementWdmDataNodeIpMonitor_Object = MibTableColumn
pathElementWdmDataNodeIpMonitor = _PathElementWdmDataNodeIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 7),
    _PathElementWdmDataNodeIpMonitor_Type()
)
pathElementWdmDataNodeIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataNodeIpMonitor.setStatus("current")
_PathElementWdmDataTid_Type = SnmpAdminString
_PathElementWdmDataTid_Object = MibTableColumn
pathElementWdmDataTid = _PathElementWdmDataTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 8),
    _PathElementWdmDataTid_Type()
)
pathElementWdmDataTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataTid.setStatus("current")
_PathElementWdmDataTidMonitor_Type = SnmpAdminString
_PathElementWdmDataTidMonitor_Object = MibTableColumn
pathElementWdmDataTidMonitor = _PathElementWdmDataTidMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 9),
    _PathElementWdmDataTidMonitor_Type()
)
pathElementWdmDataTidMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataTidMonitor.setStatus("current")
_PathElementWdmDataLogicalInterfaceId_Type = Unsigned32
_PathElementWdmDataLogicalInterfaceId_Object = MibTableColumn
pathElementWdmDataLogicalInterfaceId = _PathElementWdmDataLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 10),
    _PathElementWdmDataLogicalInterfaceId_Type()
)
pathElementWdmDataLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataLogicalInterfaceId.setStatus("current")
_PathElementWdmDataTie_Type = FspR7CpTie
_PathElementWdmDataTie_Object = MibTableColumn
pathElementWdmDataTie = _PathElementWdmDataTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 11),
    _PathElementWdmDataTie_Type()
)
pathElementWdmDataTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataTie.setStatus("current")
_PathElementWdmDataChannelUp_Type = FspR7ChannelNumber
_PathElementWdmDataChannelUp_Object = MibTableColumn
pathElementWdmDataChannelUp = _PathElementWdmDataChannelUp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 12),
    _PathElementWdmDataChannelUp_Type()
)
pathElementWdmDataChannelUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataChannelUp.setStatus("current")
_PathElementWdmDataChannelDown_Type = FspR7ChannelNumber
_PathElementWdmDataChannelDown_Object = MibTableColumn
pathElementWdmDataChannelDown = _PathElementWdmDataChannelDown_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 13),
    _PathElementWdmDataChannelDown_Type()
)
pathElementWdmDataChannelDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataChannelDown.setStatus("current")
_PathElementWdmDataLine_Type = EntityIndex
_PathElementWdmDataLine_Object = MibTableColumn
pathElementWdmDataLine = _PathElementWdmDataLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 14),
    _PathElementWdmDataLine_Type()
)
pathElementWdmDataLine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataLine.setStatus("current")
_PathElementWdmDataUpstreamModuleAid_Type = EntityIndex
_PathElementWdmDataUpstreamModuleAid_Object = MibTableColumn
pathElementWdmDataUpstreamModuleAid = _PathElementWdmDataUpstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 15),
    _PathElementWdmDataUpstreamModuleAid_Type()
)
pathElementWdmDataUpstreamModuleAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataUpstreamModuleAid.setStatus("current")
_PathElementWdmDataDownstreamModuleAid_Type = EntityIndex
_PathElementWdmDataDownstreamModuleAid_Object = MibTableColumn
pathElementWdmDataDownstreamModuleAid = _PathElementWdmDataDownstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 16),
    _PathElementWdmDataDownstreamModuleAid_Type()
)
pathElementWdmDataDownstreamModuleAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataDownstreamModuleAid.setStatus("current")
_PathElementWdmDataComputedOnsrForward_Type = Integer32
_PathElementWdmDataComputedOnsrForward_Object = MibTableColumn
pathElementWdmDataComputedOnsrForward = _PathElementWdmDataComputedOnsrForward_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 17),
    _PathElementWdmDataComputedOnsrForward_Type()
)
pathElementWdmDataComputedOnsrForward.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOnsrForward.setStatus("current")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOnsrForward.setUnits("0.01 %")
_PathElementWdmDataComputedOnsrReverse_Type = Integer32
_PathElementWdmDataComputedOnsrReverse_Object = MibTableColumn
pathElementWdmDataComputedOnsrReverse = _PathElementWdmDataComputedOnsrReverse_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 18),
    _PathElementWdmDataComputedOnsrReverse_Type()
)
pathElementWdmDataComputedOnsrReverse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOnsrReverse.setStatus("current")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOnsrReverse.setUnits("0.01 %")
_PathElementWdmDataComputedOptPowerForward_Type = Integer32
_PathElementWdmDataComputedOptPowerForward_Object = MibTableColumn
pathElementWdmDataComputedOptPowerForward = _PathElementWdmDataComputedOptPowerForward_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 19),
    _PathElementWdmDataComputedOptPowerForward_Type()
)
pathElementWdmDataComputedOptPowerForward.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOptPowerForward.setStatus("current")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOptPowerForward.setUnits("0.01 dBm")
_PathElementWdmDataComputedOptPowerReverse_Type = Integer32
_PathElementWdmDataComputedOptPowerReverse_Object = MibTableColumn
pathElementWdmDataComputedOptPowerReverse = _PathElementWdmDataComputedOptPowerReverse_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 8, 1, 20),
    _PathElementWdmDataComputedOptPowerReverse_Type()
)
pathElementWdmDataComputedOptPowerReverse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOptPowerReverse.setStatus("current")
if mibBuilder.loadTexts:
    pathElementWdmDataComputedOptPowerReverse.setUnits("0.01 dBm")
_ConnectionWdmConfigTable_Object = MibTable
connectionWdmConfigTable = _ConnectionWdmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 9)
)
if mibBuilder.loadTexts:
    connectionWdmConfigTable.setStatus("current")
_ConnectionWdmConfigEntry_Object = MibTableRow
connectionWdmConfigEntry = _ConnectionWdmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 9, 1)
)
connectionWdmConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    connectionWdmConfigEntry.setStatus("current")
_ConnectionWdmConfigCancelConnEntities_Type = FspR7CpCancConnection
_ConnectionWdmConfigCancelConnEntities_Object = MibTableColumn
connectionWdmConfigCancelConnEntities = _ConnectionWdmConfigCancelConnEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 9, 1, 1),
    _ConnectionWdmConfigCancelConnEntities_Type()
)
connectionWdmConfigCancelConnEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connectionWdmConfigCancelConnEntities.setStatus("current")
_ConnectionWdmConfigCancelModifier_Type = FspR7CommandModifier
_ConnectionWdmConfigCancelModifier_Object = MibTableColumn
connectionWdmConfigCancelModifier = _ConnectionWdmConfigCancelModifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 9, 1, 2),
    _ConnectionWdmConfigCancelModifier_Type()
)
connectionWdmConfigCancelModifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connectionWdmConfigCancelModifier.setStatus("current")
_ConnectionWdmDataTable_Object = MibTable
connectionWdmDataTable = _ConnectionWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10)
)
if mibBuilder.loadTexts:
    connectionWdmDataTable.setStatus("current")
_ConnectionWdmDataEntry_Object = MibTableRow
connectionWdmDataEntry = _ConnectionWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1)
)
connectionWdmDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    connectionWdmDataEntry.setStatus("current")
_ConnectionWdmDataTunnelId_Type = SnmpAdminString
_ConnectionWdmDataTunnelId_Object = MibTableColumn
connectionWdmDataTunnelId = _ConnectionWdmDataTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 1),
    _ConnectionWdmDataTunnelId_Type()
)
connectionWdmDataTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataTunnelId.setStatus("current")
_ConnectionWdmDataTunnelNo_Type = Unsigned32
_ConnectionWdmDataTunnelNo_Object = MibTableColumn
connectionWdmDataTunnelNo = _ConnectionWdmDataTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 2),
    _ConnectionWdmDataTunnelNo_Type()
)
connectionWdmDataTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataTunnelNo.setStatus("current")
_ConnectionWdmDataTunnelType_Type = FspR7CpTunnelType
_ConnectionWdmDataTunnelType_Object = MibTableColumn
connectionWdmDataTunnelType = _ConnectionWdmDataTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 3),
    _ConnectionWdmDataTunnelType_Type()
)
connectionWdmDataTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataTunnelType.setStatus("current")
_ConnectionWdmDataFromTid_Type = SnmpAdminString
_ConnectionWdmDataFromTid_Object = MibTableColumn
connectionWdmDataFromTid = _ConnectionWdmDataFromTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 4),
    _ConnectionWdmDataFromTid_Type()
)
connectionWdmDataFromTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataFromTid.setStatus("current")
_ConnectionWdmDataFromNodeIp_Type = IpAddress
_ConnectionWdmDataFromNodeIp_Object = MibTableColumn
connectionWdmDataFromNodeIp = _ConnectionWdmDataFromNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 5),
    _ConnectionWdmDataFromNodeIp_Type()
)
connectionWdmDataFromNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataFromNodeIp.setStatus("current")
_ConnectionWdmDataToTid_Type = SnmpAdminString
_ConnectionWdmDataToTid_Object = MibTableColumn
connectionWdmDataToTid = _ConnectionWdmDataToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 6),
    _ConnectionWdmDataToTid_Type()
)
connectionWdmDataToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataToTid.setStatus("current")
_ConnectionWdmDataToNodeIp_Type = IpAddress
_ConnectionWdmDataToNodeIp_Object = MibTableColumn
connectionWdmDataToNodeIp = _ConnectionWdmDataToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 7),
    _ConnectionWdmDataToNodeIp_Type()
)
connectionWdmDataToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataToNodeIp.setStatus("current")
_ConnectionWdmDataFromAid_Type = EntityIndex
_ConnectionWdmDataFromAid_Object = MibTableColumn
connectionWdmDataFromAid = _ConnectionWdmDataFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 8),
    _ConnectionWdmDataFromAid_Type()
)
connectionWdmDataFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataFromAid.setStatus("current")
_ConnectionWdmDataToAid_Type = EntityIndex
_ConnectionWdmDataToAid_Object = MibTableColumn
connectionWdmDataToAid = _ConnectionWdmDataToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 9),
    _ConnectionWdmDataToAid_Type()
)
connectionWdmDataToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataToAid.setStatus("current")
_ConnectionWdmDataConnectionDirection_Type = FspR7Conn
_ConnectionWdmDataConnectionDirection_Object = MibTableColumn
connectionWdmDataConnectionDirection = _ConnectionWdmDataConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 10),
    _ConnectionWdmDataConnectionDirection_Type()
)
connectionWdmDataConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataConnectionDirection.setStatus("current")
_ConnectionWdmDataNetworkElementPosition_Type = FspR7CpNePosition
_ConnectionWdmDataNetworkElementPosition_Object = MibTableColumn
connectionWdmDataNetworkElementPosition = _ConnectionWdmDataNetworkElementPosition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 11),
    _ConnectionWdmDataNetworkElementPosition_Type()
)
connectionWdmDataNetworkElementPosition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataNetworkElementPosition.setStatus("current")
_ConnectionWdmDataFacilityType_Type = FspR7InterfaceType
_ConnectionWdmDataFacilityType_Object = MibTableColumn
connectionWdmDataFacilityType = _ConnectionWdmDataFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 12),
    _ConnectionWdmDataFacilityType_Type()
)
connectionWdmDataFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataFacilityType.setStatus("current")
_ConnectionWdmDataBitrate_Type = Unsigned32
_ConnectionWdmDataBitrate_Object = MibTableColumn
connectionWdmDataBitrate = _ConnectionWdmDataBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 13),
    _ConnectionWdmDataBitrate_Type()
)
connectionWdmDataBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataBitrate.setStatus("current")
if mibBuilder.loadTexts:
    connectionWdmDataBitrate.setUnits("Mbit/s")
_ConnectionWdmDataEncode_Type = FspR7CpEncode
_ConnectionWdmDataEncode_Object = MibTableColumn
connectionWdmDataEncode = _ConnectionWdmDataEncode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 14),
    _ConnectionWdmDataEncode_Type()
)
connectionWdmDataEncode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataEncode.setStatus("current")
_ConnectionWdmDataTerminationLevel_Type = OhTerminationLevel
_ConnectionWdmDataTerminationLevel_Object = MibTableColumn
connectionWdmDataTerminationLevel = _ConnectionWdmDataTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 15),
    _ConnectionWdmDataTerminationLevel_Type()
)
connectionWdmDataTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataTerminationLevel.setStatus("current")
_ConnectionWdmDataFecType_Type = FspR7FecType
_ConnectionWdmDataFecType_Object = MibTableColumn
connectionWdmDataFecType = _ConnectionWdmDataFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 16),
    _ConnectionWdmDataFecType_Type()
)
connectionWdmDataFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataFecType.setStatus("current")
_ConnectionWdmDataStuff_Type = FspR7Stuff
_ConnectionWdmDataStuff_Object = MibTableColumn
connectionWdmDataStuff = _ConnectionWdmDataStuff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 17),
    _ConnectionWdmDataStuff_Type()
)
connectionWdmDataStuff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataStuff.setStatus("current")
_ConnectionWdmDataSignalledPaths_Type = SnmpAdminString
_ConnectionWdmDataSignalledPaths_Object = MibTableColumn
connectionWdmDataSignalledPaths = _ConnectionWdmDataSignalledPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 18),
    _ConnectionWdmDataSignalledPaths_Type()
)
connectionWdmDataSignalledPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataSignalledPaths.setStatus("current")
_ConnectionWdmDataComputedPaths_Type = SnmpAdminString
_ConnectionWdmDataComputedPaths_Object = MibTableColumn
connectionWdmDataComputedPaths = _ConnectionWdmDataComputedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 19),
    _ConnectionWdmDataComputedPaths_Type()
)
connectionWdmDataComputedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataComputedPaths.setStatus("current")
_ConnectionWdmDataRole_Type = FspR7CpRole
_ConnectionWdmDataRole_Object = MibTableColumn
connectionWdmDataRole = _ConnectionWdmDataRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 20),
    _ConnectionWdmDataRole_Type()
)
connectionWdmDataRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataRole.setStatus("current")
_ConnectionWdmDataErrorMessage_Type = SnmpAdminString
_ConnectionWdmDataErrorMessage_Object = MibTableColumn
connectionWdmDataErrorMessage = _ConnectionWdmDataErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 21),
    _ConnectionWdmDataErrorMessage_Type()
)
connectionWdmDataErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataErrorMessage.setStatus("current")
_ConnectionWdmDataActivationState_Type = FspR7CpActivState
_ConnectionWdmDataActivationState_Object = MibTableColumn
connectionWdmDataActivationState = _ConnectionWdmDataActivationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 22),
    _ConnectionWdmDataActivationState_Type()
)
connectionWdmDataActivationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataActivationState.setStatus("current")
_ConnectionWdmDataRestorable_Type = FspR7FalseTrue
_ConnectionWdmDataRestorable_Object = MibTableColumn
connectionWdmDataRestorable = _ConnectionWdmDataRestorable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 23),
    _ConnectionWdmDataRestorable_Type()
)
connectionWdmDataRestorable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataRestorable.setStatus("current")
_ConnectionWdmDataRestorationState_Type = FspR7CpRestorationState
_ConnectionWdmDataRestorationState_Object = MibTableColumn
connectionWdmDataRestorationState = _ConnectionWdmDataRestorationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 24),
    _ConnectionWdmDataRestorationState_Type()
)
connectionWdmDataRestorationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataRestorationState.setStatus("deprecated")
_ConnectionWdmDataEqualizationState_Type = FspR7CpCompState
_ConnectionWdmDataEqualizationState_Object = MibTableColumn
connectionWdmDataEqualizationState = _ConnectionWdmDataEqualizationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 25),
    _ConnectionWdmDataEqualizationState_Type()
)
connectionWdmDataEqualizationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataEqualizationState.setStatus("current")
_ConnectionWdmDataModificationState_Type = FspR7CpCompState
_ConnectionWdmDataModificationState_Object = MibTableColumn
connectionWdmDataModificationState = _ConnectionWdmDataModificationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 26),
    _ConnectionWdmDataModificationState_Type()
)
connectionWdmDataModificationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataModificationState.setStatus("current")
_ConnectionWdmDataMonitorEntities_Type = FspR7EnableDisable
_ConnectionWdmDataMonitorEntities_Object = MibTableColumn
connectionWdmDataMonitorEntities = _ConnectionWdmDataMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 27),
    _ConnectionWdmDataMonitorEntities_Type()
)
connectionWdmDataMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataMonitorEntities.setStatus("deprecated")
_ConnectionWdmDataTunnelScope_Type = FspR7CpTunnelScope
_ConnectionWdmDataTunnelScope_Object = MibTableColumn
connectionWdmDataTunnelScope = _ConnectionWdmDataTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 28),
    _ConnectionWdmDataTunnelScope_Type()
)
connectionWdmDataTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataTunnelScope.setStatus("current")
_ConnectionWdmDataLayer_Type = FspR7PacketsLayer
_ConnectionWdmDataLayer_Object = MibTableColumn
connectionWdmDataLayer = _ConnectionWdmDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 29),
    _ConnectionWdmDataLayer_Type()
)
connectionWdmDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataLayer.setStatus("current")
_ConnectionWdmDataSourceTna_Type = IpAddress
_ConnectionWdmDataSourceTna_Object = MibTableColumn
connectionWdmDataSourceTna = _ConnectionWdmDataSourceTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 30),
    _ConnectionWdmDataSourceTna_Type()
)
connectionWdmDataSourceTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataSourceTna.setStatus("current")
_ConnectionWdmDataDestinationTna_Type = IpAddress
_ConnectionWdmDataDestinationTna_Object = MibTableColumn
connectionWdmDataDestinationTna = _ConnectionWdmDataDestinationTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 31),
    _ConnectionWdmDataDestinationTna_Type()
)
connectionWdmDataDestinationTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataDestinationTna.setStatus("current")
_ConnectionWdmDataTunnelNumberExtension_Type = Unsigned32
_ConnectionWdmDataTunnelNumberExtension_Object = MibTableColumn
connectionWdmDataTunnelNumberExtension = _ConnectionWdmDataTunnelNumberExtension_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 32),
    _ConnectionWdmDataTunnelNumberExtension_Type()
)
connectionWdmDataTunnelNumberExtension.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataTunnelNumberExtension.setStatus("current")
_ConnectionWdmDataTunnelInstance_Type = Unsigned32
_ConnectionWdmDataTunnelInstance_Object = MibTableColumn
connectionWdmDataTunnelInstance = _ConnectionWdmDataTunnelInstance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 33),
    _ConnectionWdmDataTunnelInstance_Type()
)
connectionWdmDataTunnelInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataTunnelInstance.setStatus("current")
_ConnectionWdmDataConnectionNo_Type = Unsigned32
_ConnectionWdmDataConnectionNo_Object = MibTableColumn
connectionWdmDataConnectionNo = _ConnectionWdmDataConnectionNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 10, 1, 34),
    _ConnectionWdmDataConnectionNo_Type()
)
connectionWdmDataConnectionNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionWdmDataConnectionNo.setStatus("current")
_LogicalCpIfConfigTable_Object = MibTable
logicalCpIfConfigTable = _LogicalCpIfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11)
)
if mibBuilder.loadTexts:
    logicalCpIfConfigTable.setStatus("current")
_LogicalCpIfConfigEntry_Object = MibTableRow
logicalCpIfConfigEntry = _LogicalCpIfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1)
)
logicalCpIfConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    logicalCpIfConfigEntry.setStatus("current")
_LogicalCpIfConfigAlias_Type = SnmpAdminString
_LogicalCpIfConfigAlias_Object = MibTableColumn
logicalCpIfConfigAlias = _LogicalCpIfConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 1),
    _LogicalCpIfConfigAlias_Type()
)
logicalCpIfConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigAlias.setStatus("current")
_LogicalCpIfConfigOspf_Type = FspR7OspfMode
_LogicalCpIfConfigOspf_Object = MibTableColumn
logicalCpIfConfigOspf = _LogicalCpIfConfigOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 2),
    _LogicalCpIfConfigOspf_Type()
)
logicalCpIfConfigOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigOspf.setStatus("current")
_LogicalCpIfConfigLayer_Type = FspR7PacketsLayer
_LogicalCpIfConfigLayer_Object = MibTableColumn
logicalCpIfConfigLayer = _LogicalCpIfConfigLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 3),
    _LogicalCpIfConfigLayer_Type()
)
logicalCpIfConfigLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigLayer.setStatus("current")
_LogicalCpIfConfigAreaId_Type = IpAddress
_LogicalCpIfConfigAreaId_Object = MibTableColumn
logicalCpIfConfigAreaId = _LogicalCpIfConfigAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 4),
    _LogicalCpIfConfigAreaId_Type()
)
logicalCpIfConfigAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigAreaId.setStatus("current")


class _LogicalCpIfConfigMetric_Type(Unsigned32):
    """Custom type logicalCpIfConfigMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigMetric_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigMetric_Object = MibTableColumn
logicalCpIfConfigMetric = _LogicalCpIfConfigMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 5),
    _LogicalCpIfConfigMetric_Type()
)
logicalCpIfConfigMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigMetric.setStatus("current")


class _LogicalCpIfConfigHelloInterval_Type(Unsigned32):
    """Custom type logicalCpIfConfigHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigHelloInterval_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigHelloInterval_Object = MibTableColumn
logicalCpIfConfigHelloInterval = _LogicalCpIfConfigHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 6),
    _LogicalCpIfConfigHelloInterval_Type()
)
logicalCpIfConfigHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    logicalCpIfConfigHelloInterval.setUnits("s")


class _LogicalCpIfConfigDeadInterval_Type(Unsigned32):
    """Custom type logicalCpIfConfigDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigDeadInterval_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigDeadInterval_Object = MibTableColumn
logicalCpIfConfigDeadInterval = _LogicalCpIfConfigDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 7),
    _LogicalCpIfConfigDeadInterval_Type()
)
logicalCpIfConfigDeadInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    logicalCpIfConfigDeadInterval.setUnits("s")


class _LogicalCpIfConfigPrio_Type(Unsigned32):
    """Custom type logicalCpIfConfigPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigPrio_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigPrio_Object = MibTableColumn
logicalCpIfConfigPrio = _LogicalCpIfConfigPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 8),
    _LogicalCpIfConfigPrio_Type()
)
logicalCpIfConfigPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigPrio.setStatus("current")


class _LogicalCpIfConfigRetransmitInterval_Type(Unsigned32):
    """Custom type logicalCpIfConfigRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigRetransmitInterval_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigRetransmitInterval_Object = MibTableColumn
logicalCpIfConfigRetransmitInterval = _LogicalCpIfConfigRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 9),
    _LogicalCpIfConfigRetransmitInterval_Type()
)
logicalCpIfConfigRetransmitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    logicalCpIfConfigRetransmitInterval.setUnits("s")
_LogicalCpIfConfigAuthType_Type = FspR7CpAuthType
_LogicalCpIfConfigAuthType_Object = MibTableColumn
logicalCpIfConfigAuthType = _LogicalCpIfConfigAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 10),
    _LogicalCpIfConfigAuthType_Type()
)
logicalCpIfConfigAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigAuthType.setStatus("current")
_LogicalCpIfConfigAuthString_Type = SnmpAdminString
_LogicalCpIfConfigAuthString_Object = MibTableColumn
logicalCpIfConfigAuthString = _LogicalCpIfConfigAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 11),
    _LogicalCpIfConfigAuthString_Type()
)
logicalCpIfConfigAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigAuthString.setStatus("current")
_LogicalCpIfConfigCpType_Type = FspR7CpType
_LogicalCpIfConfigCpType_Object = MibTableColumn
logicalCpIfConfigCpType = _LogicalCpIfConfigCpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 12),
    _LogicalCpIfConfigCpType_Type()
)
logicalCpIfConfigCpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigCpType.setStatus("current")


class _LogicalCpIfConfigRefreshTimeout_Type(Unsigned32):
    """Custom type logicalCpIfConfigRefreshTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigRefreshTimeout_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigRefreshTimeout_Object = MibTableColumn
logicalCpIfConfigRefreshTimeout = _LogicalCpIfConfigRefreshTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 13),
    _LogicalCpIfConfigRefreshTimeout_Type()
)
logicalCpIfConfigRefreshTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigRefreshTimeout.setStatus("current")
if mibBuilder.loadTexts:
    logicalCpIfConfigRefreshTimeout.setUnits("s")


class _LogicalCpIfConfigRefreshMultiplier_Type(Unsigned32):
    """Custom type logicalCpIfConfigRefreshMultiplier based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigRefreshMultiplier_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigRefreshMultiplier_Object = MibTableColumn
logicalCpIfConfigRefreshMultiplier = _LogicalCpIfConfigRefreshMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 14),
    _LogicalCpIfConfigRefreshMultiplier_Type()
)
logicalCpIfConfigRefreshMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigRefreshMultiplier.setStatus("current")


class _LogicalCpIfConfigTeMetric_Type(Unsigned32):
    """Custom type logicalCpIfConfigTeMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigTeMetric_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigTeMetric_Object = MibTableColumn
logicalCpIfConfigTeMetric = _LogicalCpIfConfigTeMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 15),
    _LogicalCpIfConfigTeMetric_Type()
)
logicalCpIfConfigTeMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigTeMetric.setStatus("current")
_LogicalCpIfConfigTeAreaId_Type = IpAddress
_LogicalCpIfConfigTeAreaId_Object = MibTableColumn
logicalCpIfConfigTeAreaId = _LogicalCpIfConfigTeAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 16),
    _LogicalCpIfConfigTeAreaId_Type()
)
logicalCpIfConfigTeAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigTeAreaId.setStatus("current")
_LogicalCpIfConfigLinkColor_Type = Unsigned32
_LogicalCpIfConfigLinkColor_Object = MibTableColumn
logicalCpIfConfigLinkColor = _LogicalCpIfConfigLinkColor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 17),
    _LogicalCpIfConfigLinkColor_Type()
)
logicalCpIfConfigLinkColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigLinkColor.setStatus("current")
_LogicalCpIfConfigPushedNearEndIpHeader_Type = IpAddress
_LogicalCpIfConfigPushedNearEndIpHeader_Object = MibTableColumn
logicalCpIfConfigPushedNearEndIpHeader = _LogicalCpIfConfigPushedNearEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 18),
    _LogicalCpIfConfigPushedNearEndIpHeader_Type()
)
logicalCpIfConfigPushedNearEndIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigPushedNearEndIpHeader.setStatus("current")
_LogicalCpIfConfigPushedFarEndIpHeader_Type = IpAddress
_LogicalCpIfConfigPushedFarEndIpHeader_Object = MibTableColumn
logicalCpIfConfigPushedFarEndIpHeader = _LogicalCpIfConfigPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 19),
    _LogicalCpIfConfigPushedFarEndIpHeader_Type()
)
logicalCpIfConfigPushedFarEndIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigPushedFarEndIpHeader.setStatus("current")


class _LogicalCpIfConfigTimeToLive_Type(Unsigned32):
    """Custom type logicalCpIfConfigTimeToLive based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_LogicalCpIfConfigTimeToLive_Type.__name__ = "Unsigned32"
_LogicalCpIfConfigTimeToLive_Object = MibTableColumn
logicalCpIfConfigTimeToLive = _LogicalCpIfConfigTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 11, 1, 20),
    _LogicalCpIfConfigTimeToLive_Type()
)
logicalCpIfConfigTimeToLive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    logicalCpIfConfigTimeToLive.setStatus("current")
_LogicalCpIfDataTable_Object = MibTable
logicalCpIfDataTable = _LogicalCpIfDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12)
)
if mibBuilder.loadTexts:
    logicalCpIfDataTable.setStatus("current")
_LogicalCpIfDataEntry_Object = MibTableRow
logicalCpIfDataEntry = _LogicalCpIfDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1)
)
logicalCpIfDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    logicalCpIfDataEntry.setStatus("current")
_LogicalCpIfDataFacilityType_Type = FspR7InterfaceType
_LogicalCpIfDataFacilityType_Object = MibTableColumn
logicalCpIfDataFacilityType = _LogicalCpIfDataFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 1),
    _LogicalCpIfDataFacilityType_Type()
)
logicalCpIfDataFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFacilityType.setStatus("current")
_LogicalCpIfDataDcnAid_Type = EntityIndex
_LogicalCpIfDataDcnAid_Object = MibTableColumn
logicalCpIfDataDcnAid = _LogicalCpIfDataDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 2),
    _LogicalCpIfDataDcnAid_Type()
)
logicalCpIfDataDcnAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataDcnAid.setStatus("current")
_LogicalCpIfDataLanLinkAidDerived_Type = EntityIndex
_LogicalCpIfDataLanLinkAidDerived_Object = MibTableColumn
logicalCpIfDataLanLinkAidDerived = _LogicalCpIfDataLanLinkAidDerived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 3),
    _LogicalCpIfDataLanLinkAidDerived_Type()
)
logicalCpIfDataLanLinkAidDerived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataLanLinkAidDerived.setStatus("current")
_LogicalCpIfDataLogicalInterfaceId_Type = Unsigned32
_LogicalCpIfDataLogicalInterfaceId_Object = MibTableColumn
logicalCpIfDataLogicalInterfaceId = _LogicalCpIfDataLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 4),
    _LogicalCpIfDataLogicalInterfaceId_Type()
)
logicalCpIfDataLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataLogicalInterfaceId.setStatus("current")
_LogicalCpIfDataTransport_Type = SnmpAdminString
_LogicalCpIfDataTransport_Object = MibTableColumn
logicalCpIfDataTransport = _LogicalCpIfDataTransport_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 5),
    _LogicalCpIfDataTransport_Type()
)
logicalCpIfDataTransport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataTransport.setStatus("current")
_LogicalCpIfDataFarEndLifId_Type = EntityIndex
_LogicalCpIfDataFarEndLifId_Object = MibTableColumn
logicalCpIfDataFarEndLifId = _LogicalCpIfDataFarEndLifId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 6),
    _LogicalCpIfDataFarEndLifId_Type()
)
logicalCpIfDataFarEndLifId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFarEndLifId.setStatus("current")
_LogicalCpIfDataFarEndNodeIp_Type = IpAddress
_LogicalCpIfDataFarEndNodeIp_Object = MibTableColumn
logicalCpIfDataFarEndNodeIp = _LogicalCpIfDataFarEndNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 7),
    _LogicalCpIfDataFarEndNodeIp_Type()
)
logicalCpIfDataFarEndNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFarEndNodeIp.setStatus("current")
_LogicalCpIfDataFarEndNodeIpMonitor_Type = IpAddress
_LogicalCpIfDataFarEndNodeIpMonitor_Object = MibTableColumn
logicalCpIfDataFarEndNodeIpMonitor = _LogicalCpIfDataFarEndNodeIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 8),
    _LogicalCpIfDataFarEndNodeIpMonitor_Type()
)
logicalCpIfDataFarEndNodeIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFarEndNodeIpMonitor.setStatus("current")
_LogicalCpIfDataFarEndTid_Type = SnmpAdminString
_LogicalCpIfDataFarEndTid_Object = MibTableColumn
logicalCpIfDataFarEndTid = _LogicalCpIfDataFarEndTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 9),
    _LogicalCpIfDataFarEndTid_Type()
)
logicalCpIfDataFarEndTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFarEndTid.setStatus("current")
_LogicalCpIfDataFarEndTidMonitor_Type = SnmpAdminString
_LogicalCpIfDataFarEndTidMonitor_Object = MibTableColumn
logicalCpIfDataFarEndTidMonitor = _LogicalCpIfDataFarEndTidMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 10),
    _LogicalCpIfDataFarEndTidMonitor_Type()
)
logicalCpIfDataFarEndTidMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFarEndTidMonitor.setStatus("current")
_LogicalCpIfDataIpType_Type = FspR7IpType
_LogicalCpIfDataIpType_Object = MibTableColumn
logicalCpIfDataIpType = _LogicalCpIfDataIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 11),
    _LogicalCpIfDataIpType_Type()
)
logicalCpIfDataIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataIpType.setStatus("current")
_LogicalCpIfDataIpAddr_Type = IpAddress
_LogicalCpIfDataIpAddr_Object = MibTableColumn
logicalCpIfDataIpAddr = _LogicalCpIfDataIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 12),
    _LogicalCpIfDataIpAddr_Type()
)
logicalCpIfDataIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataIpAddr.setStatus("current")
_LogicalCpIfDataIpAddrMonitor_Type = IpAddress
_LogicalCpIfDataIpAddrMonitor_Object = MibTableColumn
logicalCpIfDataIpAddrMonitor = _LogicalCpIfDataIpAddrMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 13),
    _LogicalCpIfDataIpAddrMonitor_Type()
)
logicalCpIfDataIpAddrMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataIpAddrMonitor.setStatus("current")
_LogicalCpIfDataIpMask_Type = IpAddress
_LogicalCpIfDataIpMask_Object = MibTableColumn
logicalCpIfDataIpMask = _LogicalCpIfDataIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 14),
    _LogicalCpIfDataIpMask_Type()
)
logicalCpIfDataIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataIpMask.setStatus("current")
_LogicalCpIfDataIpMaskMonitor_Type = IpAddress
_LogicalCpIfDataIpMaskMonitor_Object = MibTableColumn
logicalCpIfDataIpMaskMonitor = _LogicalCpIfDataIpMaskMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 15),
    _LogicalCpIfDataIpMaskMonitor_Type()
)
logicalCpIfDataIpMaskMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataIpMaskMonitor.setStatus("current")
_LogicalCpIfDataOspf_Type = FspR7OspfMode
_LogicalCpIfDataOspf_Object = MibTableColumn
logicalCpIfDataOspf = _LogicalCpIfDataOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 16),
    _LogicalCpIfDataOspf_Type()
)
logicalCpIfDataOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataOspf.setStatus("current")
_LogicalCpIfDataEncapsulation_Type = FspR7CpEncapsulation
_LogicalCpIfDataEncapsulation_Object = MibTableColumn
logicalCpIfDataEncapsulation = _LogicalCpIfDataEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 17),
    _LogicalCpIfDataEncapsulation_Type()
)
logicalCpIfDataEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataEncapsulation.setStatus("current")
_LogicalCpIfDataNendTeLinkIdNum_Type = IpAddress
_LogicalCpIfDataNendTeLinkIdNum_Object = MibTableColumn
logicalCpIfDataNendTeLinkIdNum = _LogicalCpIfDataNendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 18),
    _LogicalCpIfDataNendTeLinkIdNum_Type()
)
logicalCpIfDataNendTeLinkIdNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataNendTeLinkIdNum.setStatus("current")
_LogicalCpIfDataFendTeLinkIdNum_Type = IpAddress
_LogicalCpIfDataFendTeLinkIdNum_Object = MibTableColumn
logicalCpIfDataFendTeLinkIdNum = _LogicalCpIfDataFendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 19),
    _LogicalCpIfDataFendTeLinkIdNum_Type()
)
logicalCpIfDataFendTeLinkIdNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFendTeLinkIdNum.setStatus("current")
_LogicalCpIfDataFendDataLinkId_Type = Unsigned32
_LogicalCpIfDataFendDataLinkId_Object = MibTableColumn
logicalCpIfDataFendDataLinkId = _LogicalCpIfDataFendDataLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 20),
    _LogicalCpIfDataFendDataLinkId_Type()
)
logicalCpIfDataFendDataLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFendDataLinkId.setStatus("current")
_LogicalCpIfDataNendTeLinkIdUnn_Type = Unsigned32
_LogicalCpIfDataNendTeLinkIdUnn_Object = MibTableColumn
logicalCpIfDataNendTeLinkIdUnn = _LogicalCpIfDataNendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 21),
    _LogicalCpIfDataNendTeLinkIdUnn_Type()
)
logicalCpIfDataNendTeLinkIdUnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataNendTeLinkIdUnn.setStatus("current")
_LogicalCpIfDataFendTeLinkIdUnn_Type = Unsigned32
_LogicalCpIfDataFendTeLinkIdUnn_Object = MibTableColumn
logicalCpIfDataFendTeLinkIdUnn = _LogicalCpIfDataFendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 22),
    _LogicalCpIfDataFendTeLinkIdUnn_Type()
)
logicalCpIfDataFendTeLinkIdUnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFendTeLinkIdUnn.setStatus("current")
_LogicalCpIfDataPushedNearEndIpHeader_Type = IpAddress
_LogicalCpIfDataPushedNearEndIpHeader_Object = MibTableColumn
logicalCpIfDataPushedNearEndIpHeader = _LogicalCpIfDataPushedNearEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 23),
    _LogicalCpIfDataPushedNearEndIpHeader_Type()
)
logicalCpIfDataPushedNearEndIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataPushedNearEndIpHeader.setStatus("current")
_LogicalCpIfDataPushedFarEndIpHeader_Type = IpAddress
_LogicalCpIfDataPushedFarEndIpHeader_Object = MibTableColumn
logicalCpIfDataPushedFarEndIpHeader = _LogicalCpIfDataPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 24),
    _LogicalCpIfDataPushedFarEndIpHeader_Type()
)
logicalCpIfDataPushedFarEndIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataPushedFarEndIpHeader.setStatus("current")
_LogicalCpIfDataEncoding_Type = FspR7CpEncode
_LogicalCpIfDataEncoding_Object = MibTableColumn
logicalCpIfDataEncoding = _LogicalCpIfDataEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 25),
    _LogicalCpIfDataEncoding_Type()
)
logicalCpIfDataEncoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataEncoding.setStatus("current")
_LogicalCpIfDataLayer_Type = FspR7PacketsLayer
_LogicalCpIfDataLayer_Object = MibTableColumn
logicalCpIfDataLayer = _LogicalCpIfDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 26),
    _LogicalCpIfDataLayer_Type()
)
logicalCpIfDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataLayer.setStatus("current")
_LogicalCpIfDataNendTeLinkAid_Type = EntityIndex
_LogicalCpIfDataNendTeLinkAid_Object = MibTableColumn
logicalCpIfDataNendTeLinkAid = _LogicalCpIfDataNendTeLinkAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 27),
    _LogicalCpIfDataNendTeLinkAid_Type()
)
logicalCpIfDataNendTeLinkAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataNendTeLinkAid.setStatus("current")
_LogicalCpIfDataFendTeLinkAid_Type = EntityIndex
_LogicalCpIfDataFendTeLinkAid_Object = MibTableColumn
logicalCpIfDataFendTeLinkAid = _LogicalCpIfDataFendTeLinkAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 28),
    _LogicalCpIfDataFendTeLinkAid_Type()
)
logicalCpIfDataFendTeLinkAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataFendTeLinkAid.setStatus("current")
_LogicalCpIfDataTunnelAid_Type = EntityIndex
_LogicalCpIfDataTunnelAid_Object = MibTableColumn
logicalCpIfDataTunnelAid = _LogicalCpIfDataTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 29),
    _LogicalCpIfDataTunnelAid_Type()
)
logicalCpIfDataTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataTunnelAid.setStatus("current")
_LogicalCpIfDataActivationState_Type = FspR7CpActivState
_LogicalCpIfDataActivationState_Object = MibTableColumn
logicalCpIfDataActivationState = _LogicalCpIfDataActivationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 30),
    _LogicalCpIfDataActivationState_Type()
)
logicalCpIfDataActivationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataActivationState.setStatus("current")
_LogicalCpIfDataExtAdvertised_Type = FspR7YesNo
_LogicalCpIfDataExtAdvertised_Object = MibTableColumn
logicalCpIfDataExtAdvertised = _LogicalCpIfDataExtAdvertised_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 31),
    _LogicalCpIfDataExtAdvertised_Type()
)
logicalCpIfDataExtAdvertised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataExtAdvertised.setStatus("current")
_LogicalCpIfDataVTeType_Type = FspR7CpVTeType
_LogicalCpIfDataVTeType_Object = MibTableColumn
logicalCpIfDataVTeType = _LogicalCpIfDataVTeType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 32),
    _LogicalCpIfDataVTeType_Type()
)
logicalCpIfDataVTeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataVTeType.setStatus("current")
_LogicalCpIfDataVNodeIp_Type = IpAddress
_LogicalCpIfDataVNodeIp_Object = MibTableColumn
logicalCpIfDataVNodeIp = _LogicalCpIfDataVNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 33),
    _LogicalCpIfDataVNodeIp_Type()
)
logicalCpIfDataVNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataVNodeIp.setStatus("current")
_LogicalCpIfDataVNodeTltp_Type = SnmpAdminString
_LogicalCpIfDataVNodeTltp_Object = MibTableColumn
logicalCpIfDataVNodeTltp = _LogicalCpIfDataVNodeTltp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 12, 1, 34),
    _LogicalCpIfDataVNodeTltp_Type()
)
logicalCpIfDataVNodeTltp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    logicalCpIfDataVNodeTltp.setStatus("current")
_InventoryCpWdmDownDataTable_Object = MibTable
inventoryCpWdmDownDataTable = _InventoryCpWdmDownDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 13)
)
if mibBuilder.loadTexts:
    inventoryCpWdmDownDataTable.setStatus("current")
_InventoryCpWdmDownDataEntry_Object = MibTableRow
inventoryCpWdmDownDataEntry = _InventoryCpWdmDownDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 13, 1)
)
inventoryCpWdmDownDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpWdmDownDataNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpWdmDownDataEntry.setStatus("current")
_InventoryCpWdmDownDataNumber_Type = EntityIndex
_InventoryCpWdmDownDataNumber_Object = MibTableColumn
inventoryCpWdmDownDataNumber = _InventoryCpWdmDownDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 13, 1, 1),
    _InventoryCpWdmDownDataNumber_Type()
)
inventoryCpWdmDownDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpWdmDownDataNumber.setStatus("current")
_InventoryCpWdmDownDataResources_Type = EntityIndex
_InventoryCpWdmDownDataResources_Object = MibTableColumn
inventoryCpWdmDownDataResources = _InventoryCpWdmDownDataResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 13, 1, 2),
    _InventoryCpWdmDownDataResources_Type()
)
inventoryCpWdmDownDataResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmDownDataResources.setStatus("current")
_InventoryCpWdmDownDataFacilities_Type = EntityIndex
_InventoryCpWdmDownDataFacilities_Object = MibTableColumn
inventoryCpWdmDownDataFacilities = _InventoryCpWdmDownDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 13, 1, 3),
    _InventoryCpWdmDownDataFacilities_Type()
)
inventoryCpWdmDownDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmDownDataFacilities.setStatus("current")
_InventoryCpWdmDownDataPhysicalTermPoints_Type = EntityIndex
_InventoryCpWdmDownDataPhysicalTermPoints_Object = MibTableColumn
inventoryCpWdmDownDataPhysicalTermPoints = _InventoryCpWdmDownDataPhysicalTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 13, 1, 4),
    _InventoryCpWdmDownDataPhysicalTermPoints_Type()
)
inventoryCpWdmDownDataPhysicalTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmDownDataPhysicalTermPoints.setStatus("current")
_InventoryCpWdmUpDataTable_Object = MibTable
inventoryCpWdmUpDataTable = _InventoryCpWdmUpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 14)
)
if mibBuilder.loadTexts:
    inventoryCpWdmUpDataTable.setStatus("current")
_InventoryCpWdmUpDataEntry_Object = MibTableRow
inventoryCpWdmUpDataEntry = _InventoryCpWdmUpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 14, 1)
)
inventoryCpWdmUpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpWdmUpDataNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpWdmUpDataEntry.setStatus("current")
_InventoryCpWdmUpDataNumber_Type = EntityIndex
_InventoryCpWdmUpDataNumber_Object = MibTableColumn
inventoryCpWdmUpDataNumber = _InventoryCpWdmUpDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 14, 1, 1),
    _InventoryCpWdmUpDataNumber_Type()
)
inventoryCpWdmUpDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpWdmUpDataNumber.setStatus("current")
_InventoryCpWdmUpDataResources_Type = EntityIndex
_InventoryCpWdmUpDataResources_Object = MibTableColumn
inventoryCpWdmUpDataResources = _InventoryCpWdmUpDataResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 14, 1, 2),
    _InventoryCpWdmUpDataResources_Type()
)
inventoryCpWdmUpDataResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmUpDataResources.setStatus("current")
_InventoryCpWdmUpDataFacilities_Type = EntityIndex
_InventoryCpWdmUpDataFacilities_Object = MibTableColumn
inventoryCpWdmUpDataFacilities = _InventoryCpWdmUpDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 14, 1, 3),
    _InventoryCpWdmUpDataFacilities_Type()
)
inventoryCpWdmUpDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmUpDataFacilities.setStatus("current")
_InventoryCpWdmUpDataPhysicalTermPoints_Type = EntityIndex
_InventoryCpWdmUpDataPhysicalTermPoints_Object = MibTableColumn
inventoryCpWdmUpDataPhysicalTermPoints = _InventoryCpWdmUpDataPhysicalTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 14, 1, 4),
    _InventoryCpWdmUpDataPhysicalTermPoints_Type()
)
inventoryCpWdmUpDataPhysicalTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmUpDataPhysicalTermPoints.setStatus("current")
_InventoryCpWdmCrsDownDataTable_Object = MibTable
inventoryCpWdmCrsDownDataTable = _InventoryCpWdmCrsDownDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 15)
)
if mibBuilder.loadTexts:
    inventoryCpWdmCrsDownDataTable.setStatus("current")
_InventoryCpWdmCrsDownDataEntry_Object = MibTableRow
inventoryCpWdmCrsDownDataEntry = _InventoryCpWdmCrsDownDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 15, 1)
)
inventoryCpWdmCrsDownDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpWdmCrsDownDataNumber"),
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    inventoryCpWdmCrsDownDataEntry.setStatus("current")
_InventoryCpWdmCrsDownDataNumber_Type = EntityIndex
_InventoryCpWdmCrsDownDataNumber_Object = MibTableColumn
inventoryCpWdmCrsDownDataNumber = _InventoryCpWdmCrsDownDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 15, 1, 1),
    _InventoryCpWdmCrsDownDataNumber_Type()
)
inventoryCpWdmCrsDownDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpWdmCrsDownDataNumber.setStatus("current")
_InventoryCpWdmCrsDownDataAids_Type = EntityIndex
_InventoryCpWdmCrsDownDataAids_Object = MibTableColumn
inventoryCpWdmCrsDownDataAids = _InventoryCpWdmCrsDownDataAids_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 15, 1, 2),
    _InventoryCpWdmCrsDownDataAids_Type()
)
inventoryCpWdmCrsDownDataAids.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmCrsDownDataAids.setStatus("current")
_InventoryCpWdmCrsUpDataTable_Object = MibTable
inventoryCpWdmCrsUpDataTable = _InventoryCpWdmCrsUpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 16)
)
if mibBuilder.loadTexts:
    inventoryCpWdmCrsUpDataTable.setStatus("current")
_InventoryCpWdmCrsUpDataEntry_Object = MibTableRow
inventoryCpWdmCrsUpDataEntry = _InventoryCpWdmCrsUpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 16, 1)
)
inventoryCpWdmCrsUpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpWdmCrsUpDataNumber"),
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    inventoryCpWdmCrsUpDataEntry.setStatus("current")
_InventoryCpWdmCrsUpDataNumber_Type = EntityIndex
_InventoryCpWdmCrsUpDataNumber_Object = MibTableColumn
inventoryCpWdmCrsUpDataNumber = _InventoryCpWdmCrsUpDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 16, 1, 1),
    _InventoryCpWdmCrsUpDataNumber_Type()
)
inventoryCpWdmCrsUpDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpWdmCrsUpDataNumber.setStatus("current")
_InventoryCpWdmCrsUpDataAids_Type = EntityIndex
_InventoryCpWdmCrsUpDataAids_Object = MibTableColumn
inventoryCpWdmCrsUpDataAids = _InventoryCpWdmCrsUpDataAids_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 16, 1, 2),
    _InventoryCpWdmCrsUpDataAids_Type()
)
inventoryCpWdmCrsUpDataAids.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmCrsUpDataAids.setStatus("current")
_TeRouterDataTable_Object = MibTable
teRouterDataTable = _TeRouterDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 17)
)
if mibBuilder.loadTexts:
    teRouterDataTable.setStatus("current")
_TeRouterDataEntry_Object = MibTableRow
teRouterDataEntry = _TeRouterDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 17, 1)
)
teRouterDataEntry.setIndexNames(
    (0, "FspR7-MIB", "teRouterDataIp"),
)
if mibBuilder.loadTexts:
    teRouterDataEntry.setStatus("current")
_TeRouterDataIp_Type = IpAddress
_TeRouterDataIp_Object = MibTableColumn
teRouterDataIp = _TeRouterDataIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 17, 1, 1),
    _TeRouterDataIp_Type()
)
teRouterDataIp.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    teRouterDataIp.setStatus("current")
_TeRouterDataNodeIp_Type = IpAddress
_TeRouterDataNodeIp_Object = MibTableColumn
teRouterDataNodeIp = _TeRouterDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 17, 1, 2),
    _TeRouterDataNodeIp_Type()
)
teRouterDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teRouterDataNodeIp.setStatus("current")
_TeRouterDataNodeTid_Type = SnmpAdminString
_TeRouterDataNodeTid_Object = MibTableColumn
teRouterDataNodeTid = _TeRouterDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 17, 1, 3),
    _TeRouterDataNodeTid_Type()
)
teRouterDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teRouterDataNodeTid.setStatus("current")
_TeRouterDataInfo_Type = SnmpAdminString
_TeRouterDataInfo_Object = MibTableColumn
teRouterDataInfo = _TeRouterDataInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 17, 1, 4),
    _TeRouterDataInfo_Type()
)
teRouterDataInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teRouterDataInfo.setStatus("current")
_TeUnnumLinkWdmDataTable_Object = MibTable
teUnnumLinkWdmDataTable = _TeUnnumLinkWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18)
)
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataTable.setStatus("current")
_TeUnnumLinkWdmDataEntry_Object = MibTableRow
teUnnumLinkWdmDataEntry = _TeUnnumLinkWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1)
)
teUnnumLinkWdmDataEntry.setIndexNames(
    (0, "FspR7-MIB", "teRouterDataIp"),
    (0, "FspR7-MIB", "teUnnumLinkWdmDataNumber"),
)
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataEntry.setStatus("current")
_TeUnnumLinkWdmDataNumber_Type = Unsigned32
_TeUnnumLinkWdmDataNumber_Object = MibTableColumn
teUnnumLinkWdmDataNumber = _TeUnnumLinkWdmDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 1),
    _TeUnnumLinkWdmDataNumber_Type()
)
teUnnumLinkWdmDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataNumber.setStatus("current")
_TeUnnumLinkWdmDataNodeIp_Type = IpAddress
_TeUnnumLinkWdmDataNodeIp_Object = MibTableColumn
teUnnumLinkWdmDataNodeIp = _TeUnnumLinkWdmDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 2),
    _TeUnnumLinkWdmDataNodeIp_Type()
)
teUnnumLinkWdmDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataNodeIp.setStatus("current")
_TeUnnumLinkWdmDataNodeTid_Type = SnmpAdminString
_TeUnnumLinkWdmDataNodeTid_Object = MibTableColumn
teUnnumLinkWdmDataNodeTid = _TeUnnumLinkWdmDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 3),
    _TeUnnumLinkWdmDataNodeTid_Type()
)
teUnnumLinkWdmDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataNodeTid.setStatus("current")
_TeUnnumLinkWdmDataTeLinkId_Type = Unsigned32
_TeUnnumLinkWdmDataTeLinkId_Object = MibTableColumn
teUnnumLinkWdmDataTeLinkId = _TeUnnumLinkWdmDataTeLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 4),
    _TeUnnumLinkWdmDataTeLinkId_Type()
)
teUnnumLinkWdmDataTeLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataTeLinkId.setStatus("current")
_TeUnnumLinkWdmDataPhysicalLink_Type = Unsigned32
_TeUnnumLinkWdmDataPhysicalLink_Object = MibTableColumn
teUnnumLinkWdmDataPhysicalLink = _TeUnnumLinkWdmDataPhysicalLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 5),
    _TeUnnumLinkWdmDataPhysicalLink_Type()
)
teUnnumLinkWdmDataPhysicalLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataPhysicalLink.setStatus("current")
_TeUnnumLinkWdmDataSynchronization_Type = FspR7YesNo
_TeUnnumLinkWdmDataSynchronization_Object = MibTableColumn
teUnnumLinkWdmDataSynchronization = _TeUnnumLinkWdmDataSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 6),
    _TeUnnumLinkWdmDataSynchronization_Type()
)
teUnnumLinkWdmDataSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataSynchronization.setStatus("current")
_TeUnnumLinkWdmDataDiscarded_Type = FspR7YesNo
_TeUnnumLinkWdmDataDiscarded_Object = MibTableColumn
teUnnumLinkWdmDataDiscarded = _TeUnnumLinkWdmDataDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 7),
    _TeUnnumLinkWdmDataDiscarded_Type()
)
teUnnumLinkWdmDataDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataDiscarded.setStatus("current")
_TeUnnumLinkWdmDataFendNodeIp_Type = IpAddress
_TeUnnumLinkWdmDataFendNodeIp_Object = MibTableColumn
teUnnumLinkWdmDataFendNodeIp = _TeUnnumLinkWdmDataFendNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 8),
    _TeUnnumLinkWdmDataFendNodeIp_Type()
)
teUnnumLinkWdmDataFendNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataFendNodeIp.setStatus("current")
_TeUnnumLinkWdmDataFendTeLinkId_Type = Unsigned32
_TeUnnumLinkWdmDataFendTeLinkId_Object = MibTableColumn
teUnnumLinkWdmDataFendTeLinkId = _TeUnnumLinkWdmDataFendTeLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 9),
    _TeUnnumLinkWdmDataFendTeLinkId_Type()
)
teUnnumLinkWdmDataFendTeLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataFendTeLinkId.setStatus("current")
_TeUnnumLinkWdmDataInfo_Type = SnmpAdminString
_TeUnnumLinkWdmDataInfo_Object = MibTableColumn
teUnnumLinkWdmDataInfo = _TeUnnumLinkWdmDataInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 18, 1, 10),
    _TeUnnumLinkWdmDataInfo_Type()
)
teUnnumLinkWdmDataInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkWdmDataInfo.setStatus("current")
_TeNumLinkWdmDataTable_Object = MibTable
teNumLinkWdmDataTable = _TeNumLinkWdmDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19)
)
if mibBuilder.loadTexts:
    teNumLinkWdmDataTable.setStatus("current")
_TeNumLinkWdmDataEntry_Object = MibTableRow
teNumLinkWdmDataEntry = _TeNumLinkWdmDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1)
)
teNumLinkWdmDataEntry.setIndexNames(
    (0, "FspR7-MIB", "teRouterDataIp"),
)
if mibBuilder.loadTexts:
    teNumLinkWdmDataEntry.setStatus("current")
_TeNumLinkWdmDataNodeIp_Type = IpAddress
_TeNumLinkWdmDataNodeIp_Object = MibTableColumn
teNumLinkWdmDataNodeIp = _TeNumLinkWdmDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 1),
    _TeNumLinkWdmDataNodeIp_Type()
)
teNumLinkWdmDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataNodeIp.setStatus("current")
_TeNumLinkWdmDataNodeTid_Type = SnmpAdminString
_TeNumLinkWdmDataNodeTid_Object = MibTableColumn
teNumLinkWdmDataNodeTid = _TeNumLinkWdmDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 2),
    _TeNumLinkWdmDataNodeTid_Type()
)
teNumLinkWdmDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataNodeTid.setStatus("current")
_TeNumLinkWdmDataTeLinkIp_Type = IpAddress
_TeNumLinkWdmDataTeLinkIp_Object = MibTableColumn
teNumLinkWdmDataTeLinkIp = _TeNumLinkWdmDataTeLinkIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 3),
    _TeNumLinkWdmDataTeLinkIp_Type()
)
teNumLinkWdmDataTeLinkIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataTeLinkIp.setStatus("current")
_TeNumLinkWdmDataPhysicalLink_Type = Unsigned32
_TeNumLinkWdmDataPhysicalLink_Object = MibTableColumn
teNumLinkWdmDataPhysicalLink = _TeNumLinkWdmDataPhysicalLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 4),
    _TeNumLinkWdmDataPhysicalLink_Type()
)
teNumLinkWdmDataPhysicalLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataPhysicalLink.setStatus("current")
_TeNumLinkWdmDataSynchronization_Type = FspR7YesNo
_TeNumLinkWdmDataSynchronization_Object = MibTableColumn
teNumLinkWdmDataSynchronization = _TeNumLinkWdmDataSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 5),
    _TeNumLinkWdmDataSynchronization_Type()
)
teNumLinkWdmDataSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataSynchronization.setStatus("current")
_TeNumLinkWdmDataDiscarded_Type = FspR7YesNo
_TeNumLinkWdmDataDiscarded_Object = MibTableColumn
teNumLinkWdmDataDiscarded = _TeNumLinkWdmDataDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 6),
    _TeNumLinkWdmDataDiscarded_Type()
)
teNumLinkWdmDataDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataDiscarded.setStatus("current")
_TeNumLinkWdmDataFendNodeIp_Type = IpAddress
_TeNumLinkWdmDataFendNodeIp_Object = MibTableColumn
teNumLinkWdmDataFendNodeIp = _TeNumLinkWdmDataFendNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 7),
    _TeNumLinkWdmDataFendNodeIp_Type()
)
teNumLinkWdmDataFendNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataFendNodeIp.setStatus("current")
_TeNumLinkWdmDataFendTeLinkIp_Type = IpAddress
_TeNumLinkWdmDataFendTeLinkIp_Object = MibTableColumn
teNumLinkWdmDataFendTeLinkIp = _TeNumLinkWdmDataFendTeLinkIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 8),
    _TeNumLinkWdmDataFendTeLinkIp_Type()
)
teNumLinkWdmDataFendTeLinkIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataFendTeLinkIp.setStatus("current")
_TeNumLinkWdmDataInfo_Type = SnmpAdminString
_TeNumLinkWdmDataInfo_Object = MibTableColumn
teNumLinkWdmDataInfo = _TeNumLinkWdmDataInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 19, 1, 9),
    _TeNumLinkWdmDataInfo_Type()
)
teNumLinkWdmDataInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkWdmDataInfo.setStatus("current")
_TnaMapDataTable_Object = MibTable
tnaMapDataTable = _TnaMapDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 20)
)
if mibBuilder.loadTexts:
    tnaMapDataTable.setStatus("current")
_TnaMapDataEntry_Object = MibTableRow
tnaMapDataEntry = _TnaMapDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 20, 1)
)
tnaMapDataEntry.setIndexNames(
    (0, "FspR7-MIB", "tnaMapDataNodeIp"),
    (0, "FspR7-MIB", "tnaMapDataRemoteTna"),
)
if mibBuilder.loadTexts:
    tnaMapDataEntry.setStatus("current")
_TnaMapDataNodeIp_Type = IpAddress
_TnaMapDataNodeIp_Object = MibTableColumn
tnaMapDataNodeIp = _TnaMapDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 20, 1, 1),
    _TnaMapDataNodeIp_Type()
)
tnaMapDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tnaMapDataNodeIp.setStatus("current")
_TnaMapDataRemoteTna_Type = IpAddress
_TnaMapDataRemoteTna_Object = MibTableColumn
tnaMapDataRemoteTna = _TnaMapDataRemoteTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 20, 1, 2),
    _TnaMapDataRemoteTna_Type()
)
tnaMapDataRemoteTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tnaMapDataRemoteTna.setStatus("current")
_TnaMapDataRemoteTnaMask_Type = IpAddress
_TnaMapDataRemoteTnaMask_Object = MibTableColumn
tnaMapDataRemoteTnaMask = _TnaMapDataRemoteTnaMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 20, 1, 3),
    _TnaMapDataRemoteTnaMask_Type()
)
tnaMapDataRemoteTnaMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tnaMapDataRemoteTnaMask.setStatus("current")
_TnaMapDataLocalPort_Type = EntityIndex
_TnaMapDataLocalPort_Object = MibTableColumn
tnaMapDataLocalPort = _TnaMapDataLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 20, 1, 4),
    _TnaMapDataLocalPort_Type()
)
tnaMapDataLocalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tnaMapDataLocalPort.setStatus("current")
_ControlPlaneEthConfigTable_Object = MibTable
controlPlaneEthConfigTable = _ControlPlaneEthConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32)
)
if mibBuilder.loadTexts:
    controlPlaneEthConfigTable.setStatus("current")
_ControlPlaneEthConfigEntry_Object = MibTableRow
controlPlaneEthConfigEntry = _ControlPlaneEthConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1)
)
controlPlaneEthConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneEthConfigEntry.setStatus("current")
_ControlPlaneEthConfigCtmConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigCtmConfigFlag_Object = MibTableColumn
controlPlaneEthConfigCtmConfigFlag = _ControlPlaneEthConfigCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 1),
    _ControlPlaneEthConfigCtmConfigFlag_Type()
)
controlPlaneEthConfigCtmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmConfigFlag.setStatus("current")
_ControlPlaneEthConfigCtmTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigCtmTraceDetail_Object = MibTableColumn
controlPlaneEthConfigCtmTraceDetail = _ControlPlaneEthConfigCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 2),
    _ControlPlaneEthConfigCtmTraceDetail_Type()
)
controlPlaneEthConfigCtmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmTraceDetail.setStatus("current")
_ControlPlaneEthConfigCtmSetupTimeout_Type = Unsigned32
_ControlPlaneEthConfigCtmSetupTimeout_Object = MibTableColumn
controlPlaneEthConfigCtmSetupTimeout = _ControlPlaneEthConfigCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 3),
    _ControlPlaneEthConfigCtmSetupTimeout_Type()
)
controlPlaneEthConfigCtmSetupTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmSetupTimeout.setUnits("s")
_ControlPlaneEthConfigCtmShutdownTimeout_Type = Unsigned32
_ControlPlaneEthConfigCtmShutdownTimeout_Object = MibTableColumn
controlPlaneEthConfigCtmShutdownTimeout = _ControlPlaneEthConfigCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 4),
    _ControlPlaneEthConfigCtmShutdownTimeout_Type()
)
controlPlaneEthConfigCtmShutdownTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmShutdownTimeout.setUnits("s")
_ControlPlaneEthConfigCtmRetryWait_Type = Unsigned32
_ControlPlaneEthConfigCtmRetryWait_Object = MibTableColumn
controlPlaneEthConfigCtmRetryWait = _ControlPlaneEthConfigCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 5),
    _ControlPlaneEthConfigCtmRetryWait_Type()
)
controlPlaneEthConfigCtmRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmRetryWait.setUnits("s")
_ControlPlaneEthConfigCtmRetryWaitMultiplier_Type = Unsigned32
_ControlPlaneEthConfigCtmRetryWaitMultiplier_Object = MibTableColumn
controlPlaneEthConfigCtmRetryWaitMultiplier = _ControlPlaneEthConfigCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 6),
    _ControlPlaneEthConfigCtmRetryWaitMultiplier_Type()
)
controlPlaneEthConfigCtmRetryWaitMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmRetryWaitMultiplier.setStatus("current")
_ControlPlaneEthConfigCtmMaximumRetryWait_Type = Unsigned32
_ControlPlaneEthConfigCtmMaximumRetryWait_Object = MibTableColumn
controlPlaneEthConfigCtmMaximumRetryWait = _ControlPlaneEthConfigCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 7),
    _ControlPlaneEthConfigCtmMaximumRetryWait_Type()
)
controlPlaneEthConfigCtmMaximumRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmMaximumRetryWait.setUnits("s")
_ControlPlaneEthConfigCtmMaximumRetryNumber_Type = Unsigned32
_ControlPlaneEthConfigCtmMaximumRetryNumber_Object = MibTableColumn
controlPlaneEthConfigCtmMaximumRetryNumber = _ControlPlaneEthConfigCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 8),
    _ControlPlaneEthConfigCtmMaximumRetryNumber_Type()
)
controlPlaneEthConfigCtmMaximumRetryNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCtmMaximumRetryNumber.setStatus("current")
_ControlPlaneEthConfigRaConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigRaConfigFlag_Object = MibTableColumn
controlPlaneEthConfigRaConfigFlag = _ControlPlaneEthConfigRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 9),
    _ControlPlaneEthConfigRaConfigFlag_Type()
)
controlPlaneEthConfigRaConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRaConfigFlag.setStatus("current")
_ControlPlaneEthConfigRaTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigRaTraceDetail_Object = MibTableColumn
controlPlaneEthConfigRaTraceDetail = _ControlPlaneEthConfigRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 10),
    _ControlPlaneEthConfigRaTraceDetail_Type()
)
controlPlaneEthConfigRaTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRaTraceDetail.setStatus("current")
_ControlPlaneEthConfigRaAlarmActivationTime_Type = Unsigned32
_ControlPlaneEthConfigRaAlarmActivationTime_Object = MibTableColumn
controlPlaneEthConfigRaAlarmActivationTime = _ControlPlaneEthConfigRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 11),
    _ControlPlaneEthConfigRaAlarmActivationTime_Type()
)
controlPlaneEthConfigRaAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRaAlarmActivationTime.setUnits("s")
_ControlPlaneEthConfigCmConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigCmConfigFlag_Object = MibTableColumn
controlPlaneEthConfigCmConfigFlag = _ControlPlaneEthConfigCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 12),
    _ControlPlaneEthConfigCmConfigFlag_Type()
)
controlPlaneEthConfigCmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmConfigFlag.setStatus("current")
_ControlPlaneEthConfigCmTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigCmTraceDetail_Object = MibTableColumn
controlPlaneEthConfigCmTraceDetail = _ControlPlaneEthConfigCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 13),
    _ControlPlaneEthConfigCmTraceDetail_Type()
)
controlPlaneEthConfigCmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmTraceDetail.setStatus("current")
_ControlPlaneEthConfigCmAlarmActivationTime_Type = Unsigned32
_ControlPlaneEthConfigCmAlarmActivationTime_Object = MibTableColumn
controlPlaneEthConfigCmAlarmActivationTime = _ControlPlaneEthConfigCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 14),
    _ControlPlaneEthConfigCmAlarmActivationTime_Type()
)
controlPlaneEthConfigCmAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmAlarmActivationTime.setUnits("s")
_ControlPlaneEthConfigCmFisFrsTimeout_Type = Unsigned32
_ControlPlaneEthConfigCmFisFrsTimeout_Object = MibTableColumn
controlPlaneEthConfigCmFisFrsTimeout = _ControlPlaneEthConfigCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 15),
    _ControlPlaneEthConfigCmFisFrsTimeout_Type()
)
controlPlaneEthConfigCmFisFrsTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmFisFrsTimeout.setUnits("s")
_ControlPlaneEthConfigCmCrankBackTimeout_Type = Unsigned32
_ControlPlaneEthConfigCmCrankBackTimeout_Object = MibTableColumn
controlPlaneEthConfigCmCrankBackTimeout = _ControlPlaneEthConfigCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 16),
    _ControlPlaneEthConfigCmCrankBackTimeout_Type()
)
controlPlaneEthConfigCmCrankBackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCmCrankBackTimeout.setUnits("s")
_ControlPlaneEthConfigCdbConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigCdbConfigFlag_Object = MibTableColumn
controlPlaneEthConfigCdbConfigFlag = _ControlPlaneEthConfigCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 17),
    _ControlPlaneEthConfigCdbConfigFlag_Type()
)
controlPlaneEthConfigCdbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCdbConfigFlag.setStatus("current")
_ControlPlaneEthConfigCdbDetail_Type = Unsigned32
_ControlPlaneEthConfigCdbDetail_Object = MibTableColumn
controlPlaneEthConfigCdbDetail = _ControlPlaneEthConfigCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 18),
    _ControlPlaneEthConfigCdbDetail_Type()
)
controlPlaneEthConfigCdbDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCdbDetail.setStatus("current")
_ControlPlaneEthConfigCdbMaxSize_Type = Unsigned32
_ControlPlaneEthConfigCdbMaxSize_Object = MibTableColumn
controlPlaneEthConfigCdbMaxSize = _ControlPlaneEthConfigCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 19),
    _ControlPlaneEthConfigCdbMaxSize_Type()
)
controlPlaneEthConfigCdbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCdbMaxSize.setStatus("current")
_ControlPlaneEthConfigRsvpConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigRsvpConfigFlag_Object = MibTableColumn
controlPlaneEthConfigRsvpConfigFlag = _ControlPlaneEthConfigRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 20),
    _ControlPlaneEthConfigRsvpConfigFlag_Type()
)
controlPlaneEthConfigRsvpConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRsvpConfigFlag.setStatus("current")
_ControlPlaneEthConfigRsvpMaxExpRestartTime_Type = Counter64String
_ControlPlaneEthConfigRsvpMaxExpRestartTime_Object = MibTableColumn
controlPlaneEthConfigRsvpMaxExpRestartTime = _ControlPlaneEthConfigRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 21),
    _ControlPlaneEthConfigRsvpMaxExpRestartTime_Type()
)
controlPlaneEthConfigRsvpMaxExpRestartTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRsvpMaxExpRestartTime.setUnits("ms")
_ControlPlaneEthConfigRsvpMaxExpRecoveryTime_Type = Unsigned32
_ControlPlaneEthConfigRsvpMaxExpRecoveryTime_Object = MibTableColumn
controlPlaneEthConfigRsvpMaxExpRecoveryTime = _ControlPlaneEthConfigRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 22),
    _ControlPlaneEthConfigRsvpMaxExpRecoveryTime_Type()
)
controlPlaneEthConfigRsvpMaxExpRecoveryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRsvpMaxExpRecoveryTime.setUnits("ms")
_ControlPlaneEthConfigTedbConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigTedbConfigFlag_Object = MibTableColumn
controlPlaneEthConfigTedbConfigFlag = _ControlPlaneEthConfigTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 23),
    _ControlPlaneEthConfigTedbConfigFlag_Type()
)
controlPlaneEthConfigTedbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigTedbConfigFlag.setStatus("current")
_ControlPlaneEthConfigTedbTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigTedbTraceDetail_Object = MibTableColumn
controlPlaneEthConfigTedbTraceDetail = _ControlPlaneEthConfigTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 24),
    _ControlPlaneEthConfigTedbTraceDetail_Type()
)
controlPlaneEthConfigTedbTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigTedbTraceDetail.setStatus("current")
_ControlPlaneEthConfigTedbMaxSize_Type = Unsigned32
_ControlPlaneEthConfigTedbMaxSize_Object = MibTableColumn
controlPlaneEthConfigTedbMaxSize = _ControlPlaneEthConfigTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 25),
    _ControlPlaneEthConfigTedbMaxSize_Type()
)
controlPlaneEthConfigTedbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigTedbMaxSize.setStatus("current")
_ControlPlaneEthConfigTedbRouterId_Type = IpAddress
_ControlPlaneEthConfigTedbRouterId_Object = MibTableColumn
controlPlaneEthConfigTedbRouterId = _ControlPlaneEthConfigTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 26),
    _ControlPlaneEthConfigTedbRouterId_Type()
)
controlPlaneEthConfigTedbRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigTedbRouterId.setStatus("current")
_ControlPlaneEthConfigTedbMinAdvertWait_Type = Unsigned32
_ControlPlaneEthConfigTedbMinAdvertWait_Object = MibTableColumn
controlPlaneEthConfigTedbMinAdvertWait = _ControlPlaneEthConfigTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 27),
    _ControlPlaneEthConfigTedbMinAdvertWait_Type()
)
controlPlaneEthConfigTedbMinAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigTedbMinAdvertWait.setUnits("s")
_ControlPlaneEthConfigNaasConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigNaasConfigFlag_Object = MibTableColumn
controlPlaneEthConfigNaasConfigFlag = _ControlPlaneEthConfigNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 28),
    _ControlPlaneEthConfigNaasConfigFlag_Type()
)
controlPlaneEthConfigNaasConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigNaasConfigFlag.setStatus("current")
_ControlPlaneEthConfigNaasTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigNaasTraceDetail_Object = MibTableColumn
controlPlaneEthConfigNaasTraceDetail = _ControlPlaneEthConfigNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 29),
    _ControlPlaneEthConfigNaasTraceDetail_Type()
)
controlPlaneEthConfigNaasTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigNaasTraceDetail.setStatus("current")
_ControlPlaneEthConfigNaasMaxSize_Type = Unsigned32
_ControlPlaneEthConfigNaasMaxSize_Object = MibTableColumn
controlPlaneEthConfigNaasMaxSize = _ControlPlaneEthConfigNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 30),
    _ControlPlaneEthConfigNaasMaxSize_Type()
)
controlPlaneEthConfigNaasMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigNaasMaxSize.setStatus("current")
_ControlPlaneEthConfigNaasAdvertWait_Type = Unsigned32
_ControlPlaneEthConfigNaasAdvertWait_Object = MibTableColumn
controlPlaneEthConfigNaasAdvertWait = _ControlPlaneEthConfigNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 31),
    _ControlPlaneEthConfigNaasAdvertWait_Type()
)
controlPlaneEthConfigNaasAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneEthConfigNaasAdvertWait.setUnits("s")
_ControlPlaneEthConfigPcConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigPcConfigFlag_Object = MibTableColumn
controlPlaneEthConfigPcConfigFlag = _ControlPlaneEthConfigPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 32),
    _ControlPlaneEthConfigPcConfigFlag_Type()
)
controlPlaneEthConfigPcConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigPcConfigFlag.setStatus("current")
_ControlPlaneEthConfigPcTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigPcTraceDetail_Object = MibTableColumn
controlPlaneEthConfigPcTraceDetail = _ControlPlaneEthConfigPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 33),
    _ControlPlaneEthConfigPcTraceDetail_Type()
)
controlPlaneEthConfigPcTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigPcTraceDetail.setStatus("current")
_ControlPlaneEthConfigCdConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigCdConfigFlag_Object = MibTableColumn
controlPlaneEthConfigCdConfigFlag = _ControlPlaneEthConfigCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 34),
    _ControlPlaneEthConfigCdConfigFlag_Type()
)
controlPlaneEthConfigCdConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCdConfigFlag.setStatus("current")
_ControlPlaneEthConfigCdTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigCdTraceDetail_Object = MibTableColumn
controlPlaneEthConfigCdTraceDetail = _ControlPlaneEthConfigCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 35),
    _ControlPlaneEthConfigCdTraceDetail_Type()
)
controlPlaneEthConfigCdTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCdTraceDetail.setStatus("current")
_ControlPlaneEthConfigCdResyncTimeout_Type = Unsigned32
_ControlPlaneEthConfigCdResyncTimeout_Object = MibTableColumn
controlPlaneEthConfigCdResyncTimeout = _ControlPlaneEthConfigCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 36),
    _ControlPlaneEthConfigCdResyncTimeout_Type()
)
controlPlaneEthConfigCdResyncTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigCdResyncTimeout.setStatus("current")
_ControlPlaneEthConfigRmConfigFlag_Type = Unsigned32
_ControlPlaneEthConfigRmConfigFlag_Object = MibTableColumn
controlPlaneEthConfigRmConfigFlag = _ControlPlaneEthConfigRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 37),
    _ControlPlaneEthConfigRmConfigFlag_Type()
)
controlPlaneEthConfigRmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRmConfigFlag.setStatus("current")
_ControlPlaneEthConfigRmTraceDetail_Type = Unsigned32
_ControlPlaneEthConfigRmTraceDetail_Object = MibTableColumn
controlPlaneEthConfigRmTraceDetail = _ControlPlaneEthConfigRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 38),
    _ControlPlaneEthConfigRmTraceDetail_Type()
)
controlPlaneEthConfigRmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRmTraceDetail.setStatus("current")
_ControlPlaneEthConfigRmTraceTarget_Type = Unsigned32
_ControlPlaneEthConfigRmTraceTarget_Object = MibTableColumn
controlPlaneEthConfigRmTraceTarget = _ControlPlaneEthConfigRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 32, 1, 39),
    _ControlPlaneEthConfigRmTraceTarget_Type()
)
controlPlaneEthConfigRmTraceTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneEthConfigRmTraceTarget.setStatus("current")
_ControlPlaneEthDataTable_Object = MibTable
controlPlaneEthDataTable = _ControlPlaneEthDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33)
)
if mibBuilder.loadTexts:
    controlPlaneEthDataTable.setStatus("current")
_ControlPlaneEthDataEntry_Object = MibTableRow
controlPlaneEthDataEntry = _ControlPlaneEthDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1)
)
controlPlaneEthDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneEthDataEntry.setStatus("current")
_ControlPlaneEthDataCtmAlias_Type = SnmpAdminString
_ControlPlaneEthDataCtmAlias_Object = MibTableColumn
controlPlaneEthDataCtmAlias = _ControlPlaneEthDataCtmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 1),
    _ControlPlaneEthDataCtmAlias_Type()
)
controlPlaneEthDataCtmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataCtmAlias.setStatus("current")
_ControlPlaneEthDataRaAlias_Type = SnmpAdminString
_ControlPlaneEthDataRaAlias_Object = MibTableColumn
controlPlaneEthDataRaAlias = _ControlPlaneEthDataRaAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 2),
    _ControlPlaneEthDataRaAlias_Type()
)
controlPlaneEthDataRaAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataRaAlias.setStatus("current")
_ControlPlaneEthDataCmAlias_Type = SnmpAdminString
_ControlPlaneEthDataCmAlias_Object = MibTableColumn
controlPlaneEthDataCmAlias = _ControlPlaneEthDataCmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 3),
    _ControlPlaneEthDataCmAlias_Type()
)
controlPlaneEthDataCmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataCmAlias.setStatus("current")
_ControlPlaneEthDataCdbAlias_Type = SnmpAdminString
_ControlPlaneEthDataCdbAlias_Object = MibTableColumn
controlPlaneEthDataCdbAlias = _ControlPlaneEthDataCdbAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 4),
    _ControlPlaneEthDataCdbAlias_Type()
)
controlPlaneEthDataCdbAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataCdbAlias.setStatus("current")
_ControlPlaneEthDataTedbAlias_Type = SnmpAdminString
_ControlPlaneEthDataTedbAlias_Object = MibTableColumn
controlPlaneEthDataTedbAlias = _ControlPlaneEthDataTedbAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 5),
    _ControlPlaneEthDataTedbAlias_Type()
)
controlPlaneEthDataTedbAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataTedbAlias.setStatus("current")
_ControlPlaneEthDataNaasAlias_Type = SnmpAdminString
_ControlPlaneEthDataNaasAlias_Object = MibTableColumn
controlPlaneEthDataNaasAlias = _ControlPlaneEthDataNaasAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 6),
    _ControlPlaneEthDataNaasAlias_Type()
)
controlPlaneEthDataNaasAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataNaasAlias.setStatus("current")
_ControlPlaneEthDataPcAlias_Type = SnmpAdminString
_ControlPlaneEthDataPcAlias_Object = MibTableColumn
controlPlaneEthDataPcAlias = _ControlPlaneEthDataPcAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 7),
    _ControlPlaneEthDataPcAlias_Type()
)
controlPlaneEthDataPcAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataPcAlias.setStatus("current")
_ControlPlaneEthDataRsvpAlias_Type = SnmpAdminString
_ControlPlaneEthDataRsvpAlias_Object = MibTableColumn
controlPlaneEthDataRsvpAlias = _ControlPlaneEthDataRsvpAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 8),
    _ControlPlaneEthDataRsvpAlias_Type()
)
controlPlaneEthDataRsvpAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataRsvpAlias.setStatus("current")
_ControlPlaneEthDataCdAlias_Type = SnmpAdminString
_ControlPlaneEthDataCdAlias_Object = MibTableColumn
controlPlaneEthDataCdAlias = _ControlPlaneEthDataCdAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 9),
    _ControlPlaneEthDataCdAlias_Type()
)
controlPlaneEthDataCdAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataCdAlias.setStatus("current")
_ControlPlaneEthDataRmAlias_Type = SnmpAdminString
_ControlPlaneEthDataRmAlias_Object = MibTableColumn
controlPlaneEthDataRmAlias = _ControlPlaneEthDataRmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 33, 1, 10),
    _ControlPlaneEthDataRmAlias_Type()
)
controlPlaneEthDataRmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneEthDataRmAlias.setStatus("current")
_TunnelEthConfigTable_Object = MibTable
tunnelEthConfigTable = _TunnelEthConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34)
)
if mibBuilder.loadTexts:
    tunnelEthConfigTable.setStatus("current")
_TunnelEthConfigEntry_Object = MibTableRow
tunnelEthConfigEntry = _TunnelEthConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1)
)
tunnelEthConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    tunnelEthConfigEntry.setStatus("current")
_TunnelEthConfigAlias_Type = SnmpAdminString
_TunnelEthConfigAlias_Object = MibTableColumn
tunnelEthConfigAlias = _TunnelEthConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 1),
    _TunnelEthConfigAlias_Type()
)
tunnelEthConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigAlias.setStatus("current")
_TunnelEthConfigProvisionedPaths_Type = SnmpAdminString
_TunnelEthConfigProvisionedPaths_Object = MibTableColumn
tunnelEthConfigProvisionedPaths = _TunnelEthConfigProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 2),
    _TunnelEthConfigProvisionedPaths_Type()
)
tunnelEthConfigProvisionedPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigProvisionedPaths.setStatus("current")
_TunnelEthConfigPin_Type = FspR7CpPinning
_TunnelEthConfigPin_Object = MibTableColumn
tunnelEthConfigPin = _TunnelEthConfigPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 3),
    _TunnelEthConfigPin_Type()
)
tunnelEthConfigPin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigPin.setStatus("current")
_TunnelEthConfigAbortProcess_Type = FspR7CpAbortProcess
_TunnelEthConfigAbortProcess_Object = MibTableColumn
tunnelEthConfigAbortProcess = _TunnelEthConfigAbortProcess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 4),
    _TunnelEthConfigAbortProcess_Type()
)
tunnelEthConfigAbortProcess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigAbortProcess.setStatus("current")
_TunnelEthConfigCommand_Type = FspR7CpCommand
_TunnelEthConfigCommand_Object = MibTableColumn
tunnelEthConfigCommand = _TunnelEthConfigCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 5),
    _TunnelEthConfigCommand_Type()
)
tunnelEthConfigCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigCommand.setStatus("current")
_TunnelEthConfigCirRcv_Type = Unsigned32
_TunnelEthConfigCirRcv_Object = MibTableColumn
tunnelEthConfigCirRcv = _TunnelEthConfigCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 6),
    _TunnelEthConfigCirRcv_Type()
)
tunnelEthConfigCirRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    tunnelEthConfigCirRcv.setUnits("Mbit/s")


class _TunnelEthConfigCbsRcv_Type(Unsigned32):
    """Custom type tunnelEthConfigCbsRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26214400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_TunnelEthConfigCbsRcv_Type.__name__ = "Unsigned32"
_TunnelEthConfigCbsRcv_Object = MibTableColumn
tunnelEthConfigCbsRcv = _TunnelEthConfigCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 7),
    _TunnelEthConfigCbsRcv_Type()
)
tunnelEthConfigCbsRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    tunnelEthConfigCbsRcv.setUnits("bytes")
_TunnelEthConfigProtectionType_Type = FspR7CpProtectionType
_TunnelEthConfigProtectionType_Object = MibTableColumn
tunnelEthConfigProtectionType = _TunnelEthConfigProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 8),
    _TunnelEthConfigProtectionType_Type()
)
tunnelEthConfigProtectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigProtectionType.setStatus("current")
_TunnelEthConfigRestorationType_Type = FspR7CpRestorationType
_TunnelEthConfigRestorationType_Object = MibTableColumn
tunnelEthConfigRestorationType = _TunnelEthConfigRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 9),
    _TunnelEthConfigRestorationType_Type()
)
tunnelEthConfigRestorationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigRestorationType.setStatus("current")
_TunnelEthConfigMonitorEntities_Type = FspR7EnableDisable
_TunnelEthConfigMonitorEntities_Object = MibTableColumn
tunnelEthConfigMonitorEntities = _TunnelEthConfigMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 10),
    _TunnelEthConfigMonitorEntities_Type()
)
tunnelEthConfigMonitorEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigMonitorEntities.setStatus("current")
_TunnelEthConfigAdminModifier_Type = FspR7CommandModifier
_TunnelEthConfigAdminModifier_Object = MibTableColumn
tunnelEthConfigAdminModifier = _TunnelEthConfigAdminModifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 34, 1, 11),
    _TunnelEthConfigAdminModifier_Type()
)
tunnelEthConfigAdminModifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelEthConfigAdminModifier.setStatus("current")
_TunnelEthDataTable_Object = MibTable
tunnelEthDataTable = _TunnelEthDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35)
)
if mibBuilder.loadTexts:
    tunnelEthDataTable.setStatus("current")
_TunnelEthDataEntry_Object = MibTableRow
tunnelEthDataEntry = _TunnelEthDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1)
)
tunnelEthDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    tunnelEthDataEntry.setStatus("current")
_TunnelEthDataTunnelId_Type = SnmpAdminString
_TunnelEthDataTunnelId_Object = MibTableColumn
tunnelEthDataTunnelId = _TunnelEthDataTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 1),
    _TunnelEthDataTunnelId_Type()
)
tunnelEthDataTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataTunnelId.setStatus("current")
_TunnelEthDataTunnelNo_Type = Unsigned32
_TunnelEthDataTunnelNo_Object = MibTableColumn
tunnelEthDataTunnelNo = _TunnelEthDataTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 2),
    _TunnelEthDataTunnelNo_Type()
)
tunnelEthDataTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataTunnelNo.setStatus("current")
_TunnelEthDataTunnelType_Type = FspR7CpTunnelType
_TunnelEthDataTunnelType_Object = MibTableColumn
tunnelEthDataTunnelType = _TunnelEthDataTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 3),
    _TunnelEthDataTunnelType_Type()
)
tunnelEthDataTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataTunnelType.setStatus("current")
_TunnelEthDataFromTid_Type = SnmpAdminString
_TunnelEthDataFromTid_Object = MibTableColumn
tunnelEthDataFromTid = _TunnelEthDataFromTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 4),
    _TunnelEthDataFromTid_Type()
)
tunnelEthDataFromTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataFromTid.setStatus("current")
_TunnelEthDataFromNodeIP_Type = IpAddress
_TunnelEthDataFromNodeIP_Object = MibTableColumn
tunnelEthDataFromNodeIP = _TunnelEthDataFromNodeIP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 5),
    _TunnelEthDataFromNodeIP_Type()
)
tunnelEthDataFromNodeIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataFromNodeIP.setStatus("current")
_TunnelEthDataToTid_Type = SnmpAdminString
_TunnelEthDataToTid_Object = MibTableColumn
tunnelEthDataToTid = _TunnelEthDataToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 6),
    _TunnelEthDataToTid_Type()
)
tunnelEthDataToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataToTid.setStatus("current")
_TunnelEthDataToTidMonitor_Type = SnmpAdminString
_TunnelEthDataToTidMonitor_Object = MibTableColumn
tunnelEthDataToTidMonitor = _TunnelEthDataToTidMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 7),
    _TunnelEthDataToTidMonitor_Type()
)
tunnelEthDataToTidMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataToTidMonitor.setStatus("current")
_TunnelEthDataToNodeIp_Type = IpAddress
_TunnelEthDataToNodeIp_Object = MibTableColumn
tunnelEthDataToNodeIp = _TunnelEthDataToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 8),
    _TunnelEthDataToNodeIp_Type()
)
tunnelEthDataToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataToNodeIp.setStatus("current")
_TunnelEthDataToNodeIpMonitor_Type = IpAddress
_TunnelEthDataToNodeIpMonitor_Object = MibTableColumn
tunnelEthDataToNodeIpMonitor = _TunnelEthDataToNodeIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 9),
    _TunnelEthDataToNodeIpMonitor_Type()
)
tunnelEthDataToNodeIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataToNodeIpMonitor.setStatus("current")
_TunnelEthDataFromAid_Type = EntityIndex
_TunnelEthDataFromAid_Object = MibTableColumn
tunnelEthDataFromAid = _TunnelEthDataFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 10),
    _TunnelEthDataFromAid_Type()
)
tunnelEthDataFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataFromAid.setStatus("current")
_TunnelEthDataToAid_Type = EntityIndex
_TunnelEthDataToAid_Object = MibTableColumn
tunnelEthDataToAid = _TunnelEthDataToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 11),
    _TunnelEthDataToAid_Type()
)
tunnelEthDataToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataToAid.setStatus("current")
_TunnelEthDataConnectionDirection_Type = FspR7Conn
_TunnelEthDataConnectionDirection_Object = MibTableColumn
tunnelEthDataConnectionDirection = _TunnelEthDataConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 12),
    _TunnelEthDataConnectionDirection_Type()
)
tunnelEthDataConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataConnectionDirection.setStatus("current")
_TunnelEthDataFacilityType_Type = FspR7InterfaceType
_TunnelEthDataFacilityType_Object = MibTableColumn
tunnelEthDataFacilityType = _TunnelEthDataFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 13),
    _TunnelEthDataFacilityType_Type()
)
tunnelEthDataFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataFacilityType.setStatus("current")
_TunnelEthDataComputedPaths_Type = SnmpAdminString
_TunnelEthDataComputedPaths_Object = MibTableColumn
tunnelEthDataComputedPaths = _TunnelEthDataComputedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 14),
    _TunnelEthDataComputedPaths_Type()
)
tunnelEthDataComputedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataComputedPaths.setStatus("current")
_TunnelEthDataComputationState_Type = FspR7CpCompState
_TunnelEthDataComputationState_Object = MibTableColumn
tunnelEthDataComputationState = _TunnelEthDataComputationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 15),
    _TunnelEthDataComputationState_Type()
)
tunnelEthDataComputationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataComputationState.setStatus("current")
_TunnelEthDataErrorMessage_Type = SnmpAdminString
_TunnelEthDataErrorMessage_Object = MibTableColumn
tunnelEthDataErrorMessage = _TunnelEthDataErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 16),
    _TunnelEthDataErrorMessage_Type()
)
tunnelEthDataErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataErrorMessage.setStatus("current")
_TunnelEthDataCirTrmt_Type = Unsigned32
_TunnelEthDataCirTrmt_Object = MibTableColumn
tunnelEthDataCirTrmt = _TunnelEthDataCirTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 17),
    _TunnelEthDataCirTrmt_Type()
)
tunnelEthDataCirTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataCirTrmt.setStatus("current")
if mibBuilder.loadTexts:
    tunnelEthDataCirTrmt.setUnits("Mbit/s")


class _TunnelEthDataCbsTrmt_Type(Unsigned32):
    """Custom type tunnelEthDataCbsTrmt based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 25600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_TunnelEthDataCbsTrmt_Type.__name__ = "Unsigned32"
_TunnelEthDataCbsTrmt_Object = MibTableColumn
tunnelEthDataCbsTrmt = _TunnelEthDataCbsTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 18),
    _TunnelEthDataCbsTrmt_Type()
)
tunnelEthDataCbsTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataCbsTrmt.setStatus("current")
if mibBuilder.loadTexts:
    tunnelEthDataCbsTrmt.setUnits("Kbytes")
_TunnelEthDataErrorCodeMajor_Type = Unsigned32
_TunnelEthDataErrorCodeMajor_Object = MibTableColumn
tunnelEthDataErrorCodeMajor = _TunnelEthDataErrorCodeMajor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 19),
    _TunnelEthDataErrorCodeMajor_Type()
)
tunnelEthDataErrorCodeMajor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataErrorCodeMajor.setStatus("current")
_TunnelEthDataErrorCodeMinor_Type = Integer32
_TunnelEthDataErrorCodeMinor_Object = MibTableColumn
tunnelEthDataErrorCodeMinor = _TunnelEthDataErrorCodeMinor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 20),
    _TunnelEthDataErrorCodeMinor_Type()
)
tunnelEthDataErrorCodeMinor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataErrorCodeMinor.setStatus("current")
_TunnelEthDataErrorIp_Type = IpAddress
_TunnelEthDataErrorIp_Object = MibTableColumn
tunnelEthDataErrorIp = _TunnelEthDataErrorIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 21),
    _TunnelEthDataErrorIp_Type()
)
tunnelEthDataErrorIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataErrorIp.setStatus("current")
_TunnelEthDataErrorTid_Type = SnmpAdminString
_TunnelEthDataErrorTid_Object = MibTableColumn
tunnelEthDataErrorTid = _TunnelEthDataErrorTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 22),
    _TunnelEthDataErrorTid_Type()
)
tunnelEthDataErrorTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataErrorTid.setStatus("current")
_TunnelEthDataErrorCategory_Type = FspR7CpErrorCategory
_TunnelEthDataErrorCategory_Object = MibTableColumn
tunnelEthDataErrorCategory = _TunnelEthDataErrorCategory_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 23),
    _TunnelEthDataErrorCategory_Type()
)
tunnelEthDataErrorCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataErrorCategory.setStatus("current")
_TunnelEthDataSpecificErrorMessage_Type = SnmpAdminString
_TunnelEthDataSpecificErrorMessage_Object = MibTableColumn
tunnelEthDataSpecificErrorMessage = _TunnelEthDataSpecificErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 24),
    _TunnelEthDataSpecificErrorMessage_Type()
)
tunnelEthDataSpecificErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataSpecificErrorMessage.setStatus("current")
_TunnelEthDataTunnelScope_Type = FspR7CpTunnelScope
_TunnelEthDataTunnelScope_Object = MibTableColumn
tunnelEthDataTunnelScope = _TunnelEthDataTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 25),
    _TunnelEthDataTunnelScope_Type()
)
tunnelEthDataTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataTunnelScope.setStatus("current")
_TunnelEthDataLayer_Type = FspR7PacketsLayer
_TunnelEthDataLayer_Object = MibTableColumn
tunnelEthDataLayer = _TunnelEthDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 26),
    _TunnelEthDataLayer_Type()
)
tunnelEthDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataLayer.setStatus("current")
_TunnelEthDataOifUni_Type = FspR7YesNo
_TunnelEthDataOifUni_Object = MibTableColumn
tunnelEthDataOifUni = _TunnelEthDataOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 27),
    _TunnelEthDataOifUni_Type()
)
tunnelEthDataOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataOifUni.setStatus("current")
_TunnelEthDataTunnelNumberExtension_Type = Unsigned32
_TunnelEthDataTunnelNumberExtension_Object = MibTableColumn
tunnelEthDataTunnelNumberExtension = _TunnelEthDataTunnelNumberExtension_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 28),
    _TunnelEthDataTunnelNumberExtension_Type()
)
tunnelEthDataTunnelNumberExtension.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataTunnelNumberExtension.setStatus("current")
_TunnelEthDataFromAidString_Type = SnmpAdminString
_TunnelEthDataFromAidString_Object = MibTableColumn
tunnelEthDataFromAidString = _TunnelEthDataFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 29),
    _TunnelEthDataFromAidString_Type()
)
tunnelEthDataFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataFromAidString.setStatus("current")
_TunnelEthDataToAidString_Type = SnmpAdminString
_TunnelEthDataToAidString_Object = MibTableColumn
tunnelEthDataToAidString = _TunnelEthDataToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 35, 1, 30),
    _TunnelEthDataToAidString_Type()
)
tunnelEthDataToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelEthDataToAidString.setStatus("current")
_ConnectionEthConfigTable_Object = MibTable
connectionEthConfigTable = _ConnectionEthConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 36)
)
if mibBuilder.loadTexts:
    connectionEthConfigTable.setStatus("current")
_ConnectionEthConfigEntry_Object = MibTableRow
connectionEthConfigEntry = _ConnectionEthConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 36, 1)
)
connectionEthConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    connectionEthConfigEntry.setStatus("current")
_ConnectionEthConfigCancelConnEntities_Type = FspR7CpCancConnection
_ConnectionEthConfigCancelConnEntities_Object = MibTableColumn
connectionEthConfigCancelConnEntities = _ConnectionEthConfigCancelConnEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 36, 1, 1),
    _ConnectionEthConfigCancelConnEntities_Type()
)
connectionEthConfigCancelConnEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connectionEthConfigCancelConnEntities.setStatus("current")
_ConnectionEthDataTable_Object = MibTable
connectionEthDataTable = _ConnectionEthDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37)
)
if mibBuilder.loadTexts:
    connectionEthDataTable.setStatus("current")
_ConnectionEthDataEntry_Object = MibTableRow
connectionEthDataEntry = _ConnectionEthDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1)
)
connectionEthDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    connectionEthDataEntry.setStatus("current")
_ConnectionEthDataTunnelId_Type = SnmpAdminString
_ConnectionEthDataTunnelId_Object = MibTableColumn
connectionEthDataTunnelId = _ConnectionEthDataTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 1),
    _ConnectionEthDataTunnelId_Type()
)
connectionEthDataTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataTunnelId.setStatus("current")
_ConnectionEthDataTunnelNo_Type = Unsigned32
_ConnectionEthDataTunnelNo_Object = MibTableColumn
connectionEthDataTunnelNo = _ConnectionEthDataTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 2),
    _ConnectionEthDataTunnelNo_Type()
)
connectionEthDataTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataTunnelNo.setStatus("current")
_ConnectionEthDataTunnelType_Type = FspR7CpTunnelType
_ConnectionEthDataTunnelType_Object = MibTableColumn
connectionEthDataTunnelType = _ConnectionEthDataTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 3),
    _ConnectionEthDataTunnelType_Type()
)
connectionEthDataTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataTunnelType.setStatus("current")
_ConnectionEthDataFromTid_Type = SnmpAdminString
_ConnectionEthDataFromTid_Object = MibTableColumn
connectionEthDataFromTid = _ConnectionEthDataFromTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 4),
    _ConnectionEthDataFromTid_Type()
)
connectionEthDataFromTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataFromTid.setStatus("current")
_ConnectionEthDataFromNodeIp_Type = IpAddress
_ConnectionEthDataFromNodeIp_Object = MibTableColumn
connectionEthDataFromNodeIp = _ConnectionEthDataFromNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 5),
    _ConnectionEthDataFromNodeIp_Type()
)
connectionEthDataFromNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataFromNodeIp.setStatus("current")
_ConnectionEthDataToTid_Type = SnmpAdminString
_ConnectionEthDataToTid_Object = MibTableColumn
connectionEthDataToTid = _ConnectionEthDataToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 6),
    _ConnectionEthDataToTid_Type()
)
connectionEthDataToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataToTid.setStatus("current")
_ConnectionEthDataToNodeIp_Type = IpAddress
_ConnectionEthDataToNodeIp_Object = MibTableColumn
connectionEthDataToNodeIp = _ConnectionEthDataToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 7),
    _ConnectionEthDataToNodeIp_Type()
)
connectionEthDataToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataToNodeIp.setStatus("current")
_ConnectionEthDataFromAid_Type = EntityIndex
_ConnectionEthDataFromAid_Object = MibTableColumn
connectionEthDataFromAid = _ConnectionEthDataFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 8),
    _ConnectionEthDataFromAid_Type()
)
connectionEthDataFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataFromAid.setStatus("current")
_ConnectionEthDataToAid_Type = EntityIndex
_ConnectionEthDataToAid_Object = MibTableColumn
connectionEthDataToAid = _ConnectionEthDataToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 9),
    _ConnectionEthDataToAid_Type()
)
connectionEthDataToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataToAid.setStatus("current")
_ConnectionEthDataConnectionDirection_Type = FspR7Conn
_ConnectionEthDataConnectionDirection_Object = MibTableColumn
connectionEthDataConnectionDirection = _ConnectionEthDataConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 10),
    _ConnectionEthDataConnectionDirection_Type()
)
connectionEthDataConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataConnectionDirection.setStatus("current")
_ConnectionEthDataNetworkElementPosition_Type = FspR7CpNePosition
_ConnectionEthDataNetworkElementPosition_Object = MibTableColumn
connectionEthDataNetworkElementPosition = _ConnectionEthDataNetworkElementPosition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 11),
    _ConnectionEthDataNetworkElementPosition_Type()
)
connectionEthDataNetworkElementPosition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataNetworkElementPosition.setStatus("current")
_ConnectionEthDataSignalledPaths_Type = SnmpAdminString
_ConnectionEthDataSignalledPaths_Object = MibTableColumn
connectionEthDataSignalledPaths = _ConnectionEthDataSignalledPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 12),
    _ConnectionEthDataSignalledPaths_Type()
)
connectionEthDataSignalledPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataSignalledPaths.setStatus("current")
_ConnectionEthDataComputedPaths_Type = SnmpAdminString
_ConnectionEthDataComputedPaths_Object = MibTableColumn
connectionEthDataComputedPaths = _ConnectionEthDataComputedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 13),
    _ConnectionEthDataComputedPaths_Type()
)
connectionEthDataComputedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataComputedPaths.setStatus("current")
_ConnectionEthDataRole_Type = FspR7CpRole
_ConnectionEthDataRole_Object = MibTableColumn
connectionEthDataRole = _ConnectionEthDataRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 14),
    _ConnectionEthDataRole_Type()
)
connectionEthDataRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataRole.setStatus("current")
_ConnectionEthDataErrorMessage_Type = SnmpAdminString
_ConnectionEthDataErrorMessage_Object = MibTableColumn
connectionEthDataErrorMessage = _ConnectionEthDataErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 15),
    _ConnectionEthDataErrorMessage_Type()
)
connectionEthDataErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataErrorMessage.setStatus("current")
_ConnectionEthDataCirTrmt_Type = Unsigned32
_ConnectionEthDataCirTrmt_Object = MibTableColumn
connectionEthDataCirTrmt = _ConnectionEthDataCirTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 16),
    _ConnectionEthDataCirTrmt_Type()
)
connectionEthDataCirTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataCirTrmt.setStatus("current")
if mibBuilder.loadTexts:
    connectionEthDataCirTrmt.setUnits("Mbit/s")


class _ConnectionEthDataCbsTrmt_Type(Unsigned32):
    """Custom type connectionEthDataCbsTrmt based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 25600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ConnectionEthDataCbsTrmt_Type.__name__ = "Unsigned32"
_ConnectionEthDataCbsTrmt_Object = MibTableColumn
connectionEthDataCbsTrmt = _ConnectionEthDataCbsTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 17),
    _ConnectionEthDataCbsTrmt_Type()
)
connectionEthDataCbsTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataCbsTrmt.setStatus("current")
if mibBuilder.loadTexts:
    connectionEthDataCbsTrmt.setUnits("Kbytes")
_ConnectionEthDataCirRcv_Type = Unsigned32
_ConnectionEthDataCirRcv_Object = MibTableColumn
connectionEthDataCirRcv = _ConnectionEthDataCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 18),
    _ConnectionEthDataCirRcv_Type()
)
connectionEthDataCirRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    connectionEthDataCirRcv.setUnits("Mbit/s")


class _ConnectionEthDataCbsRcv_Type(Unsigned32):
    """Custom type connectionEthDataCbsRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26214400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ConnectionEthDataCbsRcv_Type.__name__ = "Unsigned32"
_ConnectionEthDataCbsRcv_Object = MibTableColumn
connectionEthDataCbsRcv = _ConnectionEthDataCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 19),
    _ConnectionEthDataCbsRcv_Type()
)
connectionEthDataCbsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    connectionEthDataCbsRcv.setUnits("bytes")
_ConnectionEthDataActivationState_Type = FspR7CpActivState
_ConnectionEthDataActivationState_Object = MibTableColumn
connectionEthDataActivationState = _ConnectionEthDataActivationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 20),
    _ConnectionEthDataActivationState_Type()
)
connectionEthDataActivationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataActivationState.setStatus("current")
_ConnectionEthDataRestorable_Type = FspR7FalseTrue
_ConnectionEthDataRestorable_Object = MibTableColumn
connectionEthDataRestorable = _ConnectionEthDataRestorable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 21),
    _ConnectionEthDataRestorable_Type()
)
connectionEthDataRestorable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataRestorable.setStatus("current")
_ConnectionEthDataModificationState_Type = FspR7CpCompState
_ConnectionEthDataModificationState_Object = MibTableColumn
connectionEthDataModificationState = _ConnectionEthDataModificationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 22),
    _ConnectionEthDataModificationState_Type()
)
connectionEthDataModificationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataModificationState.setStatus("current")
_ConnectionEthDataRestorationState_Type = FspR7CpRestorationState
_ConnectionEthDataRestorationState_Object = MibTableColumn
connectionEthDataRestorationState = _ConnectionEthDataRestorationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 23),
    _ConnectionEthDataRestorationState_Type()
)
connectionEthDataRestorationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataRestorationState.setStatus("current")
_ConnectionEthDataMonitorEntities_Type = FspR7EnableDisable
_ConnectionEthDataMonitorEntities_Object = MibTableColumn
connectionEthDataMonitorEntities = _ConnectionEthDataMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 24),
    _ConnectionEthDataMonitorEntities_Type()
)
connectionEthDataMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataMonitorEntities.setStatus("current")
_ConnectionEthDataTunnelScope_Type = FspR7CpTunnelScope
_ConnectionEthDataTunnelScope_Object = MibTableColumn
connectionEthDataTunnelScope = _ConnectionEthDataTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 25),
    _ConnectionEthDataTunnelScope_Type()
)
connectionEthDataTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataTunnelScope.setStatus("current")
_ConnectionEthDataLayer_Type = FspR7PacketsLayer
_ConnectionEthDataLayer_Object = MibTableColumn
connectionEthDataLayer = _ConnectionEthDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 26),
    _ConnectionEthDataLayer_Type()
)
connectionEthDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataLayer.setStatus("current")
_ConnectionEthDataSourceTna_Type = IpAddress
_ConnectionEthDataSourceTna_Object = MibTableColumn
connectionEthDataSourceTna = _ConnectionEthDataSourceTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 27),
    _ConnectionEthDataSourceTna_Type()
)
connectionEthDataSourceTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataSourceTna.setStatus("current")
_ConnectionEthDataDestinationTna_Type = IpAddress
_ConnectionEthDataDestinationTna_Object = MibTableColumn
connectionEthDataDestinationTna = _ConnectionEthDataDestinationTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 28),
    _ConnectionEthDataDestinationTna_Type()
)
connectionEthDataDestinationTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataDestinationTna.setStatus("current")
_ConnectionEthDataTunnelNumberExtension_Type = Unsigned32
_ConnectionEthDataTunnelNumberExtension_Object = MibTableColumn
connectionEthDataTunnelNumberExtension = _ConnectionEthDataTunnelNumberExtension_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 29),
    _ConnectionEthDataTunnelNumberExtension_Type()
)
connectionEthDataTunnelNumberExtension.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataTunnelNumberExtension.setStatus("current")
_ConnectionEthDataTunnelInstance_Type = Unsigned32
_ConnectionEthDataTunnelInstance_Object = MibTableColumn
connectionEthDataTunnelInstance = _ConnectionEthDataTunnelInstance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 30),
    _ConnectionEthDataTunnelInstance_Type()
)
connectionEthDataTunnelInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataTunnelInstance.setStatus("current")
_ConnectionEthDataConnectionNo_Type = Unsigned32
_ConnectionEthDataConnectionNo_Object = MibTableColumn
connectionEthDataConnectionNo = _ConnectionEthDataConnectionNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 37, 1, 31),
    _ConnectionEthDataConnectionNo_Type()
)
connectionEthDataConnectionNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionEthDataConnectionNo.setStatus("current")
_PathEthDataTable_Object = MibTable
pathEthDataTable = _PathEthDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 38)
)
if mibBuilder.loadTexts:
    pathEthDataTable.setStatus("current")
_PathEthDataEntry_Object = MibTableRow
pathEthDataEntry = _PathEthDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 38, 1)
)
pathEthDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    pathEthDataEntry.setStatus("current")
_PathEthDataPathId_Type = SnmpAdminString
_PathEthDataPathId_Object = MibTableColumn
pathEthDataPathId = _PathEthDataPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 38, 1, 1),
    _PathEthDataPathId_Type()
)
pathEthDataPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathEthDataPathId.setStatus("current")
_PathEthDataPathType_Type = FspR7CpPathType
_PathEthDataPathType_Object = MibTableColumn
pathEthDataPathType = _PathEthDataPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 38, 1, 2),
    _PathEthDataPathType_Type()
)
pathEthDataPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathEthDataPathType.setStatus("current")
_PathEthDataConnectionTunnelAid_Type = EntityIndex
_PathEthDataConnectionTunnelAid_Object = MibTableColumn
pathEthDataConnectionTunnelAid = _PathEthDataConnectionTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 38, 1, 3),
    _PathEthDataConnectionTunnelAid_Type()
)
pathEthDataConnectionTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathEthDataConnectionTunnelAid.setStatus("current")
_PathEthDataRole_Type = FspR7CpRole
_PathEthDataRole_Object = MibTableColumn
pathEthDataRole = _PathEthDataRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 38, 1, 4),
    _PathEthDataRole_Type()
)
pathEthDataRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathEthDataRole.setStatus("current")
_PathElementEthDataTable_Object = MibTable
pathElementEthDataTable = _PathElementEthDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39)
)
if mibBuilder.loadTexts:
    pathElementEthDataTable.setStatus("current")
_PathElementEthDataEntry_Object = MibTableRow
pathElementEthDataEntry = _PathElementEthDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1)
)
pathElementEthDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    pathElementEthDataEntry.setStatus("current")
_PathElementEthDataPathId_Type = SnmpAdminString
_PathElementEthDataPathId_Object = MibTableColumn
pathElementEthDataPathId = _PathElementEthDataPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 1),
    _PathElementEthDataPathId_Type()
)
pathElementEthDataPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataPathId.setStatus("current")
_PathElementEthDataSequenceNumber_Type = Unsigned32
_PathElementEthDataSequenceNumber_Object = MibTableColumn
pathElementEthDataSequenceNumber = _PathElementEthDataSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 2),
    _PathElementEthDataSequenceNumber_Type()
)
pathElementEthDataSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataSequenceNumber.setStatus("current")
_PathElementEthDataPathType_Type = FspR7CpPathType
_PathElementEthDataPathType_Object = MibTableColumn
pathElementEthDataPathType = _PathElementEthDataPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 3),
    _PathElementEthDataPathType_Type()
)
pathElementEthDataPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataPathType.setStatus("current")
_PathElementEthDataTrafficEngineeringType_Type = FspR7CpTEType
_PathElementEthDataTrafficEngineeringType_Object = MibTableColumn
pathElementEthDataTrafficEngineeringType = _PathElementEthDataTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 4),
    _PathElementEthDataTrafficEngineeringType_Type()
)
pathElementEthDataTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataTrafficEngineeringType.setStatus("current")
_PathElementEthDataLifIp_Type = IpAddress
_PathElementEthDataLifIp_Object = MibTableColumn
pathElementEthDataLifIp = _PathElementEthDataLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 5),
    _PathElementEthDataLifIp_Type()
)
pathElementEthDataLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataLifIp.setStatus("current")
_PathElementEthDataNodeIp_Type = IpAddress
_PathElementEthDataNodeIp_Object = MibTableColumn
pathElementEthDataNodeIp = _PathElementEthDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 6),
    _PathElementEthDataNodeIp_Type()
)
pathElementEthDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataNodeIp.setStatus("current")
_PathElementEthDataNodeIpMonitor_Type = IpAddress
_PathElementEthDataNodeIpMonitor_Object = MibTableColumn
pathElementEthDataNodeIpMonitor = _PathElementEthDataNodeIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 7),
    _PathElementEthDataNodeIpMonitor_Type()
)
pathElementEthDataNodeIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataNodeIpMonitor.setStatus("current")
_PathElementEthDataTid_Type = SnmpAdminString
_PathElementEthDataTid_Object = MibTableColumn
pathElementEthDataTid = _PathElementEthDataTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 8),
    _PathElementEthDataTid_Type()
)
pathElementEthDataTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataTid.setStatus("current")
_PathElementEthDataTidMonitor_Type = SnmpAdminString
_PathElementEthDataTidMonitor_Object = MibTableColumn
pathElementEthDataTidMonitor = _PathElementEthDataTidMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 9),
    _PathElementEthDataTidMonitor_Type()
)
pathElementEthDataTidMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataTidMonitor.setStatus("current")
_PathElementEthDataLogicalInterfaceId_Type = Unsigned32
_PathElementEthDataLogicalInterfaceId_Object = MibTableColumn
pathElementEthDataLogicalInterfaceId = _PathElementEthDataLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 10),
    _PathElementEthDataLogicalInterfaceId_Type()
)
pathElementEthDataLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataLogicalInterfaceId.setStatus("current")
_PathElementEthDataTie_Type = FspR7CpTie
_PathElementEthDataTie_Object = MibTableColumn
pathElementEthDataTie = _PathElementEthDataTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 11),
    _PathElementEthDataTie_Type()
)
pathElementEthDataTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataTie.setStatus("current")
_PathElementEthDataUpstreamSvid_Type = Unsigned32
_PathElementEthDataUpstreamSvid_Object = MibTableColumn
pathElementEthDataUpstreamSvid = _PathElementEthDataUpstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 12),
    _PathElementEthDataUpstreamSvid_Type()
)
pathElementEthDataUpstreamSvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataUpstreamSvid.setStatus("current")
_PathElementEthDataDownstreamSvid_Type = Unsigned32
_PathElementEthDataDownstreamSvid_Object = MibTableColumn
pathElementEthDataDownstreamSvid = _PathElementEthDataDownstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 39, 1, 13),
    _PathElementEthDataDownstreamSvid_Type()
)
pathElementEthDataDownstreamSvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementEthDataDownstreamSvid.setStatus("current")
_InventoryCpEthDownDataTable_Object = MibTable
inventoryCpEthDownDataTable = _InventoryCpEthDownDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 40)
)
if mibBuilder.loadTexts:
    inventoryCpEthDownDataTable.setStatus("current")
_InventoryCpEthDownDataEntry_Object = MibTableRow
inventoryCpEthDownDataEntry = _InventoryCpEthDownDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 40, 1)
)
inventoryCpEthDownDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthDownDataNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpEthDownDataEntry.setStatus("current")
_InventoryCpEthDownDataNumber_Type = EntityIndex
_InventoryCpEthDownDataNumber_Object = MibTableColumn
inventoryCpEthDownDataNumber = _InventoryCpEthDownDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 40, 1, 1),
    _InventoryCpEthDownDataNumber_Type()
)
inventoryCpEthDownDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpEthDownDataNumber.setStatus("current")
_InventoryCpEthDownDataResources_Type = EntityIndex
_InventoryCpEthDownDataResources_Object = MibTableColumn
inventoryCpEthDownDataResources = _InventoryCpEthDownDataResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 40, 1, 2),
    _InventoryCpEthDownDataResources_Type()
)
inventoryCpEthDownDataResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthDownDataResources.setStatus("current")
_InventoryCpEthDownDataFacilities_Type = EntityIndex
_InventoryCpEthDownDataFacilities_Object = MibTableColumn
inventoryCpEthDownDataFacilities = _InventoryCpEthDownDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 40, 1, 3),
    _InventoryCpEthDownDataFacilities_Type()
)
inventoryCpEthDownDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthDownDataFacilities.setStatus("current")
_InventoryCpEthUpDataTable_Object = MibTable
inventoryCpEthUpDataTable = _InventoryCpEthUpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 41)
)
if mibBuilder.loadTexts:
    inventoryCpEthUpDataTable.setStatus("current")
_InventoryCpEthUpDataEntry_Object = MibTableRow
inventoryCpEthUpDataEntry = _InventoryCpEthUpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 41, 1)
)
inventoryCpEthUpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthUpDataNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpEthUpDataEntry.setStatus("current")
_InventoryCpEthUpDataNumber_Type = EntityIndex
_InventoryCpEthUpDataNumber_Object = MibTableColumn
inventoryCpEthUpDataNumber = _InventoryCpEthUpDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 41, 1, 1),
    _InventoryCpEthUpDataNumber_Type()
)
inventoryCpEthUpDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpEthUpDataNumber.setStatus("current")
_InventoryCpEthUpDataResources_Type = EntityIndex
_InventoryCpEthUpDataResources_Object = MibTableColumn
inventoryCpEthUpDataResources = _InventoryCpEthUpDataResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 41, 1, 2),
    _InventoryCpEthUpDataResources_Type()
)
inventoryCpEthUpDataResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthUpDataResources.setStatus("current")
_InventoryCpEthUpDataFacilities_Type = EntityIndex
_InventoryCpEthUpDataFacilities_Object = MibTableColumn
inventoryCpEthUpDataFacilities = _InventoryCpEthUpDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 41, 1, 3),
    _InventoryCpEthUpDataFacilities_Type()
)
inventoryCpEthUpDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthUpDataFacilities.setStatus("current")
_InventoryCpEthCrsDownDataTable_Object = MibTable
inventoryCpEthCrsDownDataTable = _InventoryCpEthCrsDownDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 42)
)
if mibBuilder.loadTexts:
    inventoryCpEthCrsDownDataTable.setStatus("current")
_InventoryCpEthCrsDownDataEntry_Object = MibTableRow
inventoryCpEthCrsDownDataEntry = _InventoryCpEthCrsDownDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 42, 1)
)
inventoryCpEthCrsDownDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthCrsDownDataNumber"),
    (0, "FspR7-MIB", "inventoryCpEthCrsDownDataIndexEthFrom"),
    (0, "FspR7-MIB", "inventoryCpEthCrsDownDataIndexFlowFrom"),
    (0, "FspR7-MIB", "inventoryCpEthCrsDownDataIndexEthTo"),
)
if mibBuilder.loadTexts:
    inventoryCpEthCrsDownDataEntry.setStatus("current")
_InventoryCpEthCrsDownDataNumber_Type = EntityIndex
_InventoryCpEthCrsDownDataNumber_Object = MibTableColumn
inventoryCpEthCrsDownDataNumber = _InventoryCpEthCrsDownDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 42, 1, 1),
    _InventoryCpEthCrsDownDataNumber_Type()
)
inventoryCpEthCrsDownDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpEthCrsDownDataNumber.setStatus("current")
_InventoryCpEthCrsDownDataIndexEthFrom_Type = EntityIndex
_InventoryCpEthCrsDownDataIndexEthFrom_Object = MibTableColumn
inventoryCpEthCrsDownDataIndexEthFrom = _InventoryCpEthCrsDownDataIndexEthFrom_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 42, 1, 2),
    _InventoryCpEthCrsDownDataIndexEthFrom_Type()
)
inventoryCpEthCrsDownDataIndexEthFrom.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    inventoryCpEthCrsDownDataIndexEthFrom.setStatus("current")
_InventoryCpEthCrsDownDataIndexFlowFrom_Type = EntityIndex
_InventoryCpEthCrsDownDataIndexFlowFrom_Object = MibTableColumn
inventoryCpEthCrsDownDataIndexFlowFrom = _InventoryCpEthCrsDownDataIndexFlowFrom_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 42, 1, 3),
    _InventoryCpEthCrsDownDataIndexFlowFrom_Type()
)
inventoryCpEthCrsDownDataIndexFlowFrom.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    inventoryCpEthCrsDownDataIndexFlowFrom.setStatus("current")
_InventoryCpEthCrsDownDataIndexEthTo_Type = EntityIndex
_InventoryCpEthCrsDownDataIndexEthTo_Object = MibTableColumn
inventoryCpEthCrsDownDataIndexEthTo = _InventoryCpEthCrsDownDataIndexEthTo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 42, 1, 4),
    _InventoryCpEthCrsDownDataIndexEthTo_Type()
)
inventoryCpEthCrsDownDataIndexEthTo.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    inventoryCpEthCrsDownDataIndexEthTo.setStatus("current")
_InventoryCpEthCrsDownDataAids_Type = EntityIndex
_InventoryCpEthCrsDownDataAids_Object = MibTableColumn
inventoryCpEthCrsDownDataAids = _InventoryCpEthCrsDownDataAids_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 42, 1, 5),
    _InventoryCpEthCrsDownDataAids_Type()
)
inventoryCpEthCrsDownDataAids.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthCrsDownDataAids.setStatus("current")
_InventoryCpEthCrsUpDataTable_Object = MibTable
inventoryCpEthCrsUpDataTable = _InventoryCpEthCrsUpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 43)
)
if mibBuilder.loadTexts:
    inventoryCpEthCrsUpDataTable.setStatus("current")
_InventoryCpEthCrsUpDataEntry_Object = MibTableRow
inventoryCpEthCrsUpDataEntry = _InventoryCpEthCrsUpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 43, 1)
)
inventoryCpEthCrsUpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthCrsUpDataNumber"),
    (0, "FspR7-MIB", "inventoryCpEthCrsDownDataIndexEthFrom"),
    (0, "FspR7-MIB", "inventoryCpEthCrsDownDataIndexFlowFrom"),
    (0, "FspR7-MIB", "inventoryCpEthCrsDownDataIndexEthTo"),
)
if mibBuilder.loadTexts:
    inventoryCpEthCrsUpDataEntry.setStatus("current")
_InventoryCpEthCrsUpDataNumber_Type = EntityIndex
_InventoryCpEthCrsUpDataNumber_Object = MibTableColumn
inventoryCpEthCrsUpDataNumber = _InventoryCpEthCrsUpDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 43, 1, 1),
    _InventoryCpEthCrsUpDataNumber_Type()
)
inventoryCpEthCrsUpDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpEthCrsUpDataNumber.setStatus("current")
_InventoryCpEthCrsUpDataAids_Type = EntityIndex
_InventoryCpEthCrsUpDataAids_Object = MibTableColumn
inventoryCpEthCrsUpDataAids = _InventoryCpEthCrsUpDataAids_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 43, 1, 2),
    _InventoryCpEthCrsUpDataAids_Type()
)
inventoryCpEthCrsUpDataAids.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthCrsUpDataAids.setStatus("current")
_TeUnnumLinkEthDataTable_Object = MibTable
teUnnumLinkEthDataTable = _TeUnnumLinkEthDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44)
)
if mibBuilder.loadTexts:
    teUnnumLinkEthDataTable.setStatus("current")
_TeUnnumLinkEthDataEntry_Object = MibTableRow
teUnnumLinkEthDataEntry = _TeUnnumLinkEthDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1)
)
teUnnumLinkEthDataEntry.setIndexNames(
    (0, "FspR7-MIB", "teRouterDataIp"),
    (0, "FspR7-MIB", "teUnnumLinkEthDataNumber"),
)
if mibBuilder.loadTexts:
    teUnnumLinkEthDataEntry.setStatus("current")
_TeUnnumLinkEthDataNumber_Type = Unsigned32
_TeUnnumLinkEthDataNumber_Object = MibTableColumn
teUnnumLinkEthDataNumber = _TeUnnumLinkEthDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 1),
    _TeUnnumLinkEthDataNumber_Type()
)
teUnnumLinkEthDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataNumber.setStatus("current")
_TeUnnumLinkEthDataNodeIp_Type = IpAddress
_TeUnnumLinkEthDataNodeIp_Object = MibTableColumn
teUnnumLinkEthDataNodeIp = _TeUnnumLinkEthDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 2),
    _TeUnnumLinkEthDataNodeIp_Type()
)
teUnnumLinkEthDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataNodeIp.setStatus("current")
_TeUnnumLinkEthDataNodeTid_Type = SnmpAdminString
_TeUnnumLinkEthDataNodeTid_Object = MibTableColumn
teUnnumLinkEthDataNodeTid = _TeUnnumLinkEthDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 3),
    _TeUnnumLinkEthDataNodeTid_Type()
)
teUnnumLinkEthDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataNodeTid.setStatus("current")
_TeUnnumLinkEthDataTeLinkId_Type = Unsigned32
_TeUnnumLinkEthDataTeLinkId_Object = MibTableColumn
teUnnumLinkEthDataTeLinkId = _TeUnnumLinkEthDataTeLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 4),
    _TeUnnumLinkEthDataTeLinkId_Type()
)
teUnnumLinkEthDataTeLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataTeLinkId.setStatus("current")
_TeUnnumLinkEthDataPhysicalLink_Type = Unsigned32
_TeUnnumLinkEthDataPhysicalLink_Object = MibTableColumn
teUnnumLinkEthDataPhysicalLink = _TeUnnumLinkEthDataPhysicalLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 5),
    _TeUnnumLinkEthDataPhysicalLink_Type()
)
teUnnumLinkEthDataPhysicalLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataPhysicalLink.setStatus("current")
_TeUnnumLinkEthDataSynchronization_Type = FspR7YesNo
_TeUnnumLinkEthDataSynchronization_Object = MibTableColumn
teUnnumLinkEthDataSynchronization = _TeUnnumLinkEthDataSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 6),
    _TeUnnumLinkEthDataSynchronization_Type()
)
teUnnumLinkEthDataSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataSynchronization.setStatus("current")
_TeUnnumLinkEthDataDiscarded_Type = FspR7YesNo
_TeUnnumLinkEthDataDiscarded_Object = MibTableColumn
teUnnumLinkEthDataDiscarded = _TeUnnumLinkEthDataDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 7),
    _TeUnnumLinkEthDataDiscarded_Type()
)
teUnnumLinkEthDataDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataDiscarded.setStatus("current")
_TeUnnumLinkEthDataFendNodeIp_Type = IpAddress
_TeUnnumLinkEthDataFendNodeIp_Object = MibTableColumn
teUnnumLinkEthDataFendNodeIp = _TeUnnumLinkEthDataFendNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 8),
    _TeUnnumLinkEthDataFendNodeIp_Type()
)
teUnnumLinkEthDataFendNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataFendNodeIp.setStatus("current")
_TeUnnumLinkEthDataFendTeLinkId_Type = Unsigned32
_TeUnnumLinkEthDataFendTeLinkId_Object = MibTableColumn
teUnnumLinkEthDataFendTeLinkId = _TeUnnumLinkEthDataFendTeLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 9),
    _TeUnnumLinkEthDataFendTeLinkId_Type()
)
teUnnumLinkEthDataFendTeLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataFendTeLinkId.setStatus("current")
_TeUnnumLinkEthDataInfo_Type = SnmpAdminString
_TeUnnumLinkEthDataInfo_Object = MibTableColumn
teUnnumLinkEthDataInfo = _TeUnnumLinkEthDataInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 44, 1, 10),
    _TeUnnumLinkEthDataInfo_Type()
)
teUnnumLinkEthDataInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkEthDataInfo.setStatus("current")
_TeNumLinkEthDataTable_Object = MibTable
teNumLinkEthDataTable = _TeNumLinkEthDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45)
)
if mibBuilder.loadTexts:
    teNumLinkEthDataTable.setStatus("current")
_TeNumLinkEthDataEntry_Object = MibTableRow
teNumLinkEthDataEntry = _TeNumLinkEthDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1)
)
teNumLinkEthDataEntry.setIndexNames(
    (0, "FspR7-MIB", "teRouterDataIp"),
)
if mibBuilder.loadTexts:
    teNumLinkEthDataEntry.setStatus("current")
_TeNumLinkEthDataNodeIp_Type = IpAddress
_TeNumLinkEthDataNodeIp_Object = MibTableColumn
teNumLinkEthDataNodeIp = _TeNumLinkEthDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 1),
    _TeNumLinkEthDataNodeIp_Type()
)
teNumLinkEthDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataNodeIp.setStatus("current")
_TeNumLinkEthDataNodeTid_Type = SnmpAdminString
_TeNumLinkEthDataNodeTid_Object = MibTableColumn
teNumLinkEthDataNodeTid = _TeNumLinkEthDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 2),
    _TeNumLinkEthDataNodeTid_Type()
)
teNumLinkEthDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataNodeTid.setStatus("current")
_TeNumLinkEthDataTeLinkIp_Type = IpAddress
_TeNumLinkEthDataTeLinkIp_Object = MibTableColumn
teNumLinkEthDataTeLinkIp = _TeNumLinkEthDataTeLinkIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 3),
    _TeNumLinkEthDataTeLinkIp_Type()
)
teNumLinkEthDataTeLinkIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataTeLinkIp.setStatus("current")
_TeNumLinkEthDataPhysicalLink_Type = Unsigned32
_TeNumLinkEthDataPhysicalLink_Object = MibTableColumn
teNumLinkEthDataPhysicalLink = _TeNumLinkEthDataPhysicalLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 4),
    _TeNumLinkEthDataPhysicalLink_Type()
)
teNumLinkEthDataPhysicalLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataPhysicalLink.setStatus("current")
_TeNumLinkEthDataSynchronization_Type = FspR7YesNo
_TeNumLinkEthDataSynchronization_Object = MibTableColumn
teNumLinkEthDataSynchronization = _TeNumLinkEthDataSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 5),
    _TeNumLinkEthDataSynchronization_Type()
)
teNumLinkEthDataSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataSynchronization.setStatus("current")
_TeNumLinkEthDataDiscarded_Type = FspR7YesNo
_TeNumLinkEthDataDiscarded_Object = MibTableColumn
teNumLinkEthDataDiscarded = _TeNumLinkEthDataDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 6),
    _TeNumLinkEthDataDiscarded_Type()
)
teNumLinkEthDataDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataDiscarded.setStatus("current")
_TeNumLinkEthDataFendNodeIp_Type = IpAddress
_TeNumLinkEthDataFendNodeIp_Object = MibTableColumn
teNumLinkEthDataFendNodeIp = _TeNumLinkEthDataFendNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 7),
    _TeNumLinkEthDataFendNodeIp_Type()
)
teNumLinkEthDataFendNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataFendNodeIp.setStatus("current")
_TeNumLinkEthDataFendTeLinkIp_Type = IpAddress
_TeNumLinkEthDataFendTeLinkIp_Object = MibTableColumn
teNumLinkEthDataFendTeLinkIp = _TeNumLinkEthDataFendTeLinkIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 8),
    _TeNumLinkEthDataFendTeLinkIp_Type()
)
teNumLinkEthDataFendTeLinkIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataFendTeLinkIp.setStatus("current")
_TeNumLinkEthDataInfo_Type = SnmpAdminString
_TeNumLinkEthDataInfo_Object = MibTableColumn
teNumLinkEthDataInfo = _TeNumLinkEthDataInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 45, 1, 9),
    _TeNumLinkEthDataInfo_Type()
)
teNumLinkEthDataInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkEthDataInfo.setStatus("current")
_RemoteAlarmCpDataTable_Object = MibTable
remoteAlarmCpDataTable = _RemoteAlarmCpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46)
)
if mibBuilder.loadTexts:
    remoteAlarmCpDataTable.setStatus("current")
_RemoteAlarmCpDataEntry_Object = MibTableRow
remoteAlarmCpDataEntry = _RemoteAlarmCpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1)
)
remoteAlarmCpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    remoteAlarmCpDataEntry.setStatus("current")
_RemoteAlarmCpDataNumber_Type = EntityIndex
_RemoteAlarmCpDataNumber_Object = MibTableColumn
remoteAlarmCpDataNumber = _RemoteAlarmCpDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 1),
    _RemoteAlarmCpDataNumber_Type()
)
remoteAlarmCpDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    remoteAlarmCpDataNumber.setStatus("current")
_RemoteAlarmCpDataNodeTid_Type = SnmpAdminString
_RemoteAlarmCpDataNodeTid_Object = MibTableColumn
remoteAlarmCpDataNodeTid = _RemoteAlarmCpDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 2),
    _RemoteAlarmCpDataNodeTid_Type()
)
remoteAlarmCpDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteAlarmCpDataNodeTid.setStatus("current")
_RemoteAlarmCpDataNodeIp_Type = IpAddress
_RemoteAlarmCpDataNodeIp_Object = MibTableColumn
remoteAlarmCpDataNodeIp = _RemoteAlarmCpDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 3),
    _RemoteAlarmCpDataNodeIp_Type()
)
remoteAlarmCpDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteAlarmCpDataNodeIp.setStatus("current")
_RemoteAlarmCpDataSource_Type = EntityIndex
_RemoteAlarmCpDataSource_Object = MibTableColumn
remoteAlarmCpDataSource = _RemoteAlarmCpDataSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 4),
    _RemoteAlarmCpDataSource_Type()
)
remoteAlarmCpDataSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteAlarmCpDataSource.setStatus("current")
_RemoteAlarmCpDataType_Type = FspR7RemoteAlarmType
_RemoteAlarmCpDataType_Object = MibTableColumn
remoteAlarmCpDataType = _RemoteAlarmCpDataType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 5),
    _RemoteAlarmCpDataType_Type()
)
remoteAlarmCpDataType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteAlarmCpDataType.setStatus("current")
_RemoteAlarmCpDataDate_Type = FspR7Date
_RemoteAlarmCpDataDate_Object = MibTableColumn
remoteAlarmCpDataDate = _RemoteAlarmCpDataDate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 6),
    _RemoteAlarmCpDataDate_Type()
)
remoteAlarmCpDataDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteAlarmCpDataDate.setStatus("current")
_RemoteAlarmCpDataTime_Type = FspR7Time
_RemoteAlarmCpDataTime_Object = MibTableColumn
remoteAlarmCpDataTime = _RemoteAlarmCpDataTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 7),
    _RemoteAlarmCpDataTime_Type()
)
remoteAlarmCpDataTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteAlarmCpDataTime.setStatus("current")
_RemoteAlarmCpDataPath_Type = FspR7RemoteAlarmPath
_RemoteAlarmCpDataPath_Object = MibTableColumn
remoteAlarmCpDataPath = _RemoteAlarmCpDataPath_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 46, 1, 8),
    _RemoteAlarmCpDataPath_Type()
)
remoteAlarmCpDataPath.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteAlarmCpDataPath.setStatus("current")
_InventoryCpEthDownFlowDataTable_Object = MibTable
inventoryCpEthDownFlowDataTable = _InventoryCpEthDownFlowDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 47)
)
if mibBuilder.loadTexts:
    inventoryCpEthDownFlowDataTable.setStatus("current")
_InventoryCpEthDownFlowDataEntry_Object = MibTableRow
inventoryCpEthDownFlowDataEntry = _InventoryCpEthDownFlowDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 47, 1)
)
inventoryCpEthDownFlowDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthDownDataNumber"),
    (0, "FspR7-MIB", "inventoryCpEthDownFlowDataIndexEth"),
)
if mibBuilder.loadTexts:
    inventoryCpEthDownFlowDataEntry.setStatus("current")
_InventoryCpEthDownFlowDataIndexEth_Type = EntityIndex
_InventoryCpEthDownFlowDataIndexEth_Object = MibTableColumn
inventoryCpEthDownFlowDataIndexEth = _InventoryCpEthDownFlowDataIndexEth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 47, 1, 1),
    _InventoryCpEthDownFlowDataIndexEth_Type()
)
inventoryCpEthDownFlowDataIndexEth.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    inventoryCpEthDownFlowDataIndexEth.setStatus("current")
_InventoryCpEthDownFlowDataFacilities_Type = EntityIndex
_InventoryCpEthDownFlowDataFacilities_Object = MibTableColumn
inventoryCpEthDownFlowDataFacilities = _InventoryCpEthDownFlowDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 47, 1, 2),
    _InventoryCpEthDownFlowDataFacilities_Type()
)
inventoryCpEthDownFlowDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthDownFlowDataFacilities.setStatus("current")
_InventoryCpEthUpFlowDataTable_Object = MibTable
inventoryCpEthUpFlowDataTable = _InventoryCpEthUpFlowDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 48)
)
if mibBuilder.loadTexts:
    inventoryCpEthUpFlowDataTable.setStatus("current")
_InventoryCpEthUpFlowDataEntry_Object = MibTableRow
inventoryCpEthUpFlowDataEntry = _InventoryCpEthUpFlowDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 48, 1)
)
inventoryCpEthUpFlowDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthUpDataNumber"),
    (0, "FspR7-MIB", "inventoryCpEthUpFlowDataIndexEth"),
)
if mibBuilder.loadTexts:
    inventoryCpEthUpFlowDataEntry.setStatus("current")
_InventoryCpEthUpFlowDataIndexEth_Type = EntityIndex
_InventoryCpEthUpFlowDataIndexEth_Object = MibTableColumn
inventoryCpEthUpFlowDataIndexEth = _InventoryCpEthUpFlowDataIndexEth_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 48, 1, 1),
    _InventoryCpEthUpFlowDataIndexEth_Type()
)
inventoryCpEthUpFlowDataIndexEth.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    inventoryCpEthUpFlowDataIndexEth.setStatus("current")
_InventoryCpEthUpFlowDataFacilities_Type = EntityIndex
_InventoryCpEthUpFlowDataFacilities_Object = MibTableColumn
inventoryCpEthUpFlowDataFacilities = _InventoryCpEthUpFlowDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 48, 1, 2),
    _InventoryCpEthUpFlowDataFacilities_Type()
)
inventoryCpEthUpFlowDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthUpFlowDataFacilities.setStatus("current")
_PortBindingDataTable_Object = MibTable
portBindingDataTable = _PortBindingDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51)
)
if mibBuilder.loadTexts:
    portBindingDataTable.setStatus("current")
_PortBindingDataEntry_Object = MibTableRow
portBindingDataEntry = _PortBindingDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1)
)
portBindingDataEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    portBindingDataEntry.setStatus("current")
_PortBindingDataLogicalIfAid_Type = EntityIndex
_PortBindingDataLogicalIfAid_Object = MibTableColumn
portBindingDataLogicalIfAid = _PortBindingDataLogicalIfAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 1),
    _PortBindingDataLogicalIfAid_Type()
)
portBindingDataLogicalIfAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataLogicalIfAid.setStatus("current")
_PortBindingDataLocalPort_Type = EntityIndex
_PortBindingDataLocalPort_Object = MibTableColumn
portBindingDataLocalPort = _PortBindingDataLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 2),
    _PortBindingDataLocalPort_Type()
)
portBindingDataLocalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataLocalPort.setStatus("current")
_PortBindingDataLocalTna_Type = IpAddress
_PortBindingDataLocalTna_Object = MibTableColumn
portBindingDataLocalTna = _PortBindingDataLocalTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 3),
    _PortBindingDataLocalTna_Type()
)
portBindingDataLocalTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataLocalTna.setStatus("current")
_PortBindingDataRemotePort_Type = Unsigned32
_PortBindingDataRemotePort_Object = MibTableColumn
portBindingDataRemotePort = _PortBindingDataRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 4),
    _PortBindingDataRemotePort_Type()
)
portBindingDataRemotePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataRemotePort.setStatus("current")
_PortBindingDataRemoteTna_Type = IpAddress
_PortBindingDataRemoteTna_Object = MibTableColumn
portBindingDataRemoteTna = _PortBindingDataRemoteTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 5),
    _PortBindingDataRemoteTna_Type()
)
portBindingDataRemoteTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataRemoteTna.setStatus("current")
_PortBindingDataRemoteTnaMask_Type = IpAddress
_PortBindingDataRemoteTnaMask_Object = MibTableColumn
portBindingDataRemoteTnaMask = _PortBindingDataRemoteTnaMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 6),
    _PortBindingDataRemoteTnaMask_Type()
)
portBindingDataRemoteTnaMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataRemoteTnaMask.setStatus("current")
_PortBindingDataRemoteNodeIp_Type = IpAddress
_PortBindingDataRemoteNodeIp_Object = MibTableColumn
portBindingDataRemoteNodeIp = _PortBindingDataRemoteNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 7),
    _PortBindingDataRemoteNodeIp_Type()
)
portBindingDataRemoteNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataRemoteNodeIp.setStatus("current")
_PortBindingDataRemoteScn_Type = IpAddress
_PortBindingDataRemoteScn_Object = MibTableColumn
portBindingDataRemoteScn = _PortBindingDataRemoteScn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 8),
    _PortBindingDataRemoteScn_Type()
)
portBindingDataRemoteScn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataRemoteScn.setStatus("current")
_PortBindingDataRemoteScPc_Type = IpAddress
_PortBindingDataRemoteScPc_Object = MibTableColumn
portBindingDataRemoteScPc = _PortBindingDataRemoteScPc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 9),
    _PortBindingDataRemoteScPc_Type()
)
portBindingDataRemoteScPc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataRemoteScPc.setStatus("current")
_PortBindingDataLayer_Type = FspR7PacketsLayer
_PortBindingDataLayer_Object = MibTableColumn
portBindingDataLayer = _PortBindingDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 51, 1, 10),
    _PortBindingDataLayer_Type()
)
portBindingDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingDataLayer.setStatus("current")
_PortBindingLifAidTable_Object = MibTable
portBindingLifAidTable = _PortBindingLifAidTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 52)
)
if mibBuilder.loadTexts:
    portBindingLifAidTable.setStatus("current")
_PortBindingLifAidEntry_Object = MibTableRow
portBindingLifAidEntry = _PortBindingLifAidEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 52, 1)
)
portBindingLifAidEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "portBindingLifAidIndex"),
)
if mibBuilder.loadTexts:
    portBindingLifAidEntry.setStatus("current")
_PortBindingLifAidIndex_Type = EntityIndex
_PortBindingLifAidIndex_Object = MibTableColumn
portBindingLifAidIndex = _PortBindingLifAidIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 52, 1, 1),
    _PortBindingLifAidIndex_Type()
)
portBindingLifAidIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    portBindingLifAidIndex.setStatus("current")
_PortBindingLifAidValue_Type = Integer32
_PortBindingLifAidValue_Object = MibTableColumn
portBindingLifAidValue = _PortBindingLifAidValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 52, 1, 2),
    _PortBindingLifAidValue_Type()
)
portBindingLifAidValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portBindingLifAidValue.setStatus("current")
_ReservationCpDataTable_Object = MibTable
reservationCpDataTable = _ReservationCpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53)
)
if mibBuilder.loadTexts:
    reservationCpDataTable.setStatus("current")
_ReservationCpDataEntry_Object = MibTableRow
reservationCpDataEntry = _ReservationCpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1)
)
reservationCpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    reservationCpDataEntry.setStatus("current")
_ReservationCpDataSeqNumber_Type = Unsigned32
_ReservationCpDataSeqNumber_Object = MibTableColumn
reservationCpDataSeqNumber = _ReservationCpDataSeqNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1, 1),
    _ReservationCpDataSeqNumber_Type()
)
reservationCpDataSeqNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservationCpDataSeqNumber.setStatus("current")
_ReservationCpDataTunnelNo_Type = Unsigned32
_ReservationCpDataTunnelNo_Object = MibTableColumn
reservationCpDataTunnelNo = _ReservationCpDataTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1, 2),
    _ReservationCpDataTunnelNo_Type()
)
reservationCpDataTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservationCpDataTunnelNo.setStatus("current")
_ReservationCpDataTunnelInstance_Type = Unsigned32
_ReservationCpDataTunnelInstance_Object = MibTableColumn
reservationCpDataTunnelInstance = _ReservationCpDataTunnelInstance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1, 3),
    _ReservationCpDataTunnelInstance_Type()
)
reservationCpDataTunnelInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservationCpDataTunnelInstance.setStatus("current")
_ReservationCpDataIngressTid_Type = SnmpAdminString
_ReservationCpDataIngressTid_Object = MibTableColumn
reservationCpDataIngressTid = _ReservationCpDataIngressTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1, 4),
    _ReservationCpDataIngressTid_Type()
)
reservationCpDataIngressTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservationCpDataIngressTid.setStatus("current")
_ReservationCpDataIngressNodeIp_Type = IpAddress
_ReservationCpDataIngressNodeIp_Object = MibTableColumn
reservationCpDataIngressNodeIp = _ReservationCpDataIngressNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1, 5),
    _ReservationCpDataIngressNodeIp_Type()
)
reservationCpDataIngressNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservationCpDataIngressNodeIp.setStatus("current")
_ReservationCpDataChannelUp_Type = FspR7ChannelNumber
_ReservationCpDataChannelUp_Object = MibTableColumn
reservationCpDataChannelUp = _ReservationCpDataChannelUp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1, 6),
    _ReservationCpDataChannelUp_Type()
)
reservationCpDataChannelUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservationCpDataChannelUp.setStatus("current")
_ReservationCpDataChannelDown_Type = FspR7ChannelNumber
_ReservationCpDataChannelDown_Object = MibTableColumn
reservationCpDataChannelDown = _ReservationCpDataChannelDown_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 53, 1, 7),
    _ReservationCpDataChannelDown_Type()
)
reservationCpDataChannelDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    reservationCpDataChannelDown.setStatus("current")
_ControlPlaneOtnConfigTable_Object = MibTable
controlPlaneOtnConfigTable = _ControlPlaneOtnConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55)
)
if mibBuilder.loadTexts:
    controlPlaneOtnConfigTable.setStatus("current")
_ControlPlaneOtnConfigEntry_Object = MibTableRow
controlPlaneOtnConfigEntry = _ControlPlaneOtnConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1)
)
controlPlaneOtnConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneOtnConfigEntry.setStatus("current")
_ControlPlaneOtnConfigCtmConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigCtmConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigCtmConfigFlag = _ControlPlaneOtnConfigCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 1),
    _ControlPlaneOtnConfigCtmConfigFlag_Type()
)
controlPlaneOtnConfigCtmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmConfigFlag.setStatus("current")
_ControlPlaneOtnConfigCtmTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigCtmTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigCtmTraceDetail = _ControlPlaneOtnConfigCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 2),
    _ControlPlaneOtnConfigCtmTraceDetail_Type()
)
controlPlaneOtnConfigCtmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmTraceDetail.setStatus("current")
_ControlPlaneOtnConfigCtmSetupTimeout_Type = Unsigned32
_ControlPlaneOtnConfigCtmSetupTimeout_Object = MibTableColumn
controlPlaneOtnConfigCtmSetupTimeout = _ControlPlaneOtnConfigCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 3),
    _ControlPlaneOtnConfigCtmSetupTimeout_Type()
)
controlPlaneOtnConfigCtmSetupTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmSetupTimeout.setUnits("s")
_ControlPlaneOtnConfigCtmShutdownTimeout_Type = Unsigned32
_ControlPlaneOtnConfigCtmShutdownTimeout_Object = MibTableColumn
controlPlaneOtnConfigCtmShutdownTimeout = _ControlPlaneOtnConfigCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 4),
    _ControlPlaneOtnConfigCtmShutdownTimeout_Type()
)
controlPlaneOtnConfigCtmShutdownTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmShutdownTimeout.setUnits("s")
_ControlPlaneOtnConfigCtmRetryWait_Type = Unsigned32
_ControlPlaneOtnConfigCtmRetryWait_Object = MibTableColumn
controlPlaneOtnConfigCtmRetryWait = _ControlPlaneOtnConfigCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 5),
    _ControlPlaneOtnConfigCtmRetryWait_Type()
)
controlPlaneOtnConfigCtmRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmRetryWait.setUnits("s")
_ControlPlaneOtnConfigCtmRetryWaitMultiplier_Type = Unsigned32
_ControlPlaneOtnConfigCtmRetryWaitMultiplier_Object = MibTableColumn
controlPlaneOtnConfigCtmRetryWaitMultiplier = _ControlPlaneOtnConfigCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 6),
    _ControlPlaneOtnConfigCtmRetryWaitMultiplier_Type()
)
controlPlaneOtnConfigCtmRetryWaitMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmRetryWaitMultiplier.setStatus("current")
_ControlPlaneOtnConfigCtmMaximumRetryWait_Type = Unsigned32
_ControlPlaneOtnConfigCtmMaximumRetryWait_Object = MibTableColumn
controlPlaneOtnConfigCtmMaximumRetryWait = _ControlPlaneOtnConfigCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 7),
    _ControlPlaneOtnConfigCtmMaximumRetryWait_Type()
)
controlPlaneOtnConfigCtmMaximumRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmMaximumRetryWait.setUnits("s")
_ControlPlaneOtnConfigCtmMaximumRetryNumber_Type = Unsigned32
_ControlPlaneOtnConfigCtmMaximumRetryNumber_Object = MibTableColumn
controlPlaneOtnConfigCtmMaximumRetryNumber = _ControlPlaneOtnConfigCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 8),
    _ControlPlaneOtnConfigCtmMaximumRetryNumber_Type()
)
controlPlaneOtnConfigCtmMaximumRetryNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCtmMaximumRetryNumber.setStatus("current")
_ControlPlaneOtnConfigRaConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigRaConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigRaConfigFlag = _ControlPlaneOtnConfigRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 9),
    _ControlPlaneOtnConfigRaConfigFlag_Type()
)
controlPlaneOtnConfigRaConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRaConfigFlag.setStatus("current")
_ControlPlaneOtnConfigRaTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigRaTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigRaTraceDetail = _ControlPlaneOtnConfigRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 10),
    _ControlPlaneOtnConfigRaTraceDetail_Type()
)
controlPlaneOtnConfigRaTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRaTraceDetail.setStatus("current")
_ControlPlaneOtnConfigRaAlarmActivationTime_Type = Unsigned32
_ControlPlaneOtnConfigRaAlarmActivationTime_Object = MibTableColumn
controlPlaneOtnConfigRaAlarmActivationTime = _ControlPlaneOtnConfigRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 11),
    _ControlPlaneOtnConfigRaAlarmActivationTime_Type()
)
controlPlaneOtnConfigRaAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRaAlarmActivationTime.setUnits("s")
_ControlPlaneOtnConfigCmConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigCmConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigCmConfigFlag = _ControlPlaneOtnConfigCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 12),
    _ControlPlaneOtnConfigCmConfigFlag_Type()
)
controlPlaneOtnConfigCmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmConfigFlag.setStatus("current")
_ControlPlaneOtnConfigCmTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigCmTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigCmTraceDetail = _ControlPlaneOtnConfigCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 13),
    _ControlPlaneOtnConfigCmTraceDetail_Type()
)
controlPlaneOtnConfigCmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmTraceDetail.setStatus("current")
_ControlPlaneOtnConfigCmAlarmActivationTime_Type = Unsigned32
_ControlPlaneOtnConfigCmAlarmActivationTime_Object = MibTableColumn
controlPlaneOtnConfigCmAlarmActivationTime = _ControlPlaneOtnConfigCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 14),
    _ControlPlaneOtnConfigCmAlarmActivationTime_Type()
)
controlPlaneOtnConfigCmAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmAlarmActivationTime.setUnits("s")
_ControlPlaneOtnConfigCmFisFrsTimeout_Type = Unsigned32
_ControlPlaneOtnConfigCmFisFrsTimeout_Object = MibTableColumn
controlPlaneOtnConfigCmFisFrsTimeout = _ControlPlaneOtnConfigCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 15),
    _ControlPlaneOtnConfigCmFisFrsTimeout_Type()
)
controlPlaneOtnConfigCmFisFrsTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmFisFrsTimeout.setUnits("s")
_ControlPlaneOtnConfigCmCrankBackTimeout_Type = Unsigned32
_ControlPlaneOtnConfigCmCrankBackTimeout_Object = MibTableColumn
controlPlaneOtnConfigCmCrankBackTimeout = _ControlPlaneOtnConfigCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 16),
    _ControlPlaneOtnConfigCmCrankBackTimeout_Type()
)
controlPlaneOtnConfigCmCrankBackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCmCrankBackTimeout.setUnits("s")
_ControlPlaneOtnConfigCdbConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigCdbConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigCdbConfigFlag = _ControlPlaneOtnConfigCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 17),
    _ControlPlaneOtnConfigCdbConfigFlag_Type()
)
controlPlaneOtnConfigCdbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCdbConfigFlag.setStatus("current")
_ControlPlaneOtnConfigCdbDetail_Type = Unsigned32
_ControlPlaneOtnConfigCdbDetail_Object = MibTableColumn
controlPlaneOtnConfigCdbDetail = _ControlPlaneOtnConfigCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 18),
    _ControlPlaneOtnConfigCdbDetail_Type()
)
controlPlaneOtnConfigCdbDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCdbDetail.setStatus("current")
_ControlPlaneOtnConfigCdbMaxSize_Type = Unsigned32
_ControlPlaneOtnConfigCdbMaxSize_Object = MibTableColumn
controlPlaneOtnConfigCdbMaxSize = _ControlPlaneOtnConfigCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 19),
    _ControlPlaneOtnConfigCdbMaxSize_Type()
)
controlPlaneOtnConfigCdbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCdbMaxSize.setStatus("current")
_ControlPlaneOtnConfigRsvpConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigRsvpConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigRsvpConfigFlag = _ControlPlaneOtnConfigRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 20),
    _ControlPlaneOtnConfigRsvpConfigFlag_Type()
)
controlPlaneOtnConfigRsvpConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRsvpConfigFlag.setStatus("current")
_ControlPlaneOtnConfigRsvpMaxExpRestartTime_Type = Counter64String
_ControlPlaneOtnConfigRsvpMaxExpRestartTime_Object = MibTableColumn
controlPlaneOtnConfigRsvpMaxExpRestartTime = _ControlPlaneOtnConfigRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 21),
    _ControlPlaneOtnConfigRsvpMaxExpRestartTime_Type()
)
controlPlaneOtnConfigRsvpMaxExpRestartTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRsvpMaxExpRestartTime.setUnits("ms")
_ControlPlaneOtnConfigRsvpMaxExpRecoveryTime_Type = Unsigned32
_ControlPlaneOtnConfigRsvpMaxExpRecoveryTime_Object = MibTableColumn
controlPlaneOtnConfigRsvpMaxExpRecoveryTime = _ControlPlaneOtnConfigRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 22),
    _ControlPlaneOtnConfigRsvpMaxExpRecoveryTime_Type()
)
controlPlaneOtnConfigRsvpMaxExpRecoveryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRsvpMaxExpRecoveryTime.setUnits("ms")
_ControlPlaneOtnConfigTedbConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigTedbConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigTedbConfigFlag = _ControlPlaneOtnConfigTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 23),
    _ControlPlaneOtnConfigTedbConfigFlag_Type()
)
controlPlaneOtnConfigTedbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigTedbConfigFlag.setStatus("current")
_ControlPlaneOtnConfigTedbTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigTedbTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigTedbTraceDetail = _ControlPlaneOtnConfigTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 24),
    _ControlPlaneOtnConfigTedbTraceDetail_Type()
)
controlPlaneOtnConfigTedbTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigTedbTraceDetail.setStatus("current")
_ControlPlaneOtnConfigTedbMaxSize_Type = Unsigned32
_ControlPlaneOtnConfigTedbMaxSize_Object = MibTableColumn
controlPlaneOtnConfigTedbMaxSize = _ControlPlaneOtnConfigTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 25),
    _ControlPlaneOtnConfigTedbMaxSize_Type()
)
controlPlaneOtnConfigTedbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigTedbMaxSize.setStatus("current")
_ControlPlaneOtnConfigTedbRouterId_Type = IpAddress
_ControlPlaneOtnConfigTedbRouterId_Object = MibTableColumn
controlPlaneOtnConfigTedbRouterId = _ControlPlaneOtnConfigTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 26),
    _ControlPlaneOtnConfigTedbRouterId_Type()
)
controlPlaneOtnConfigTedbRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigTedbRouterId.setStatus("current")
_ControlPlaneOtnConfigTedbMinAdvertWait_Type = Unsigned32
_ControlPlaneOtnConfigTedbMinAdvertWait_Object = MibTableColumn
controlPlaneOtnConfigTedbMinAdvertWait = _ControlPlaneOtnConfigTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 27),
    _ControlPlaneOtnConfigTedbMinAdvertWait_Type()
)
controlPlaneOtnConfigTedbMinAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigTedbMinAdvertWait.setUnits("s")
_ControlPlaneOtnConfigNaasConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigNaasConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigNaasConfigFlag = _ControlPlaneOtnConfigNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 28),
    _ControlPlaneOtnConfigNaasConfigFlag_Type()
)
controlPlaneOtnConfigNaasConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigNaasConfigFlag.setStatus("current")
_ControlPlaneOtnConfigNaasTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigNaasTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigNaasTraceDetail = _ControlPlaneOtnConfigNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 29),
    _ControlPlaneOtnConfigNaasTraceDetail_Type()
)
controlPlaneOtnConfigNaasTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigNaasTraceDetail.setStatus("current")
_ControlPlaneOtnConfigNaasMaxSize_Type = Unsigned32
_ControlPlaneOtnConfigNaasMaxSize_Object = MibTableColumn
controlPlaneOtnConfigNaasMaxSize = _ControlPlaneOtnConfigNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 30),
    _ControlPlaneOtnConfigNaasMaxSize_Type()
)
controlPlaneOtnConfigNaasMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigNaasMaxSize.setStatus("current")
_ControlPlaneOtnConfigNaasAdvertWait_Type = Unsigned32
_ControlPlaneOtnConfigNaasAdvertWait_Object = MibTableColumn
controlPlaneOtnConfigNaasAdvertWait = _ControlPlaneOtnConfigNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 31),
    _ControlPlaneOtnConfigNaasAdvertWait_Type()
)
controlPlaneOtnConfigNaasAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigNaasAdvertWait.setUnits("s")
_ControlPlaneOtnConfigPcConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigPcConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigPcConfigFlag = _ControlPlaneOtnConfigPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 32),
    _ControlPlaneOtnConfigPcConfigFlag_Type()
)
controlPlaneOtnConfigPcConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigPcConfigFlag.setStatus("current")
_ControlPlaneOtnConfigPcTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigPcTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigPcTraceDetail = _ControlPlaneOtnConfigPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 33),
    _ControlPlaneOtnConfigPcTraceDetail_Type()
)
controlPlaneOtnConfigPcTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigPcTraceDetail.setStatus("current")
_ControlPlaneOtnConfigCdConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigCdConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigCdConfigFlag = _ControlPlaneOtnConfigCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 34),
    _ControlPlaneOtnConfigCdConfigFlag_Type()
)
controlPlaneOtnConfigCdConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCdConfigFlag.setStatus("current")
_ControlPlaneOtnConfigCdTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigCdTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigCdTraceDetail = _ControlPlaneOtnConfigCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 35),
    _ControlPlaneOtnConfigCdTraceDetail_Type()
)
controlPlaneOtnConfigCdTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCdTraceDetail.setStatus("current")
_ControlPlaneOtnConfigCdResyncTimeout_Type = Unsigned32
_ControlPlaneOtnConfigCdResyncTimeout_Object = MibTableColumn
controlPlaneOtnConfigCdResyncTimeout = _ControlPlaneOtnConfigCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 36),
    _ControlPlaneOtnConfigCdResyncTimeout_Type()
)
controlPlaneOtnConfigCdResyncTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigCdResyncTimeout.setStatus("current")
_ControlPlaneOtnConfigRmConfigFlag_Type = Unsigned32
_ControlPlaneOtnConfigRmConfigFlag_Object = MibTableColumn
controlPlaneOtnConfigRmConfigFlag = _ControlPlaneOtnConfigRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 37),
    _ControlPlaneOtnConfigRmConfigFlag_Type()
)
controlPlaneOtnConfigRmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRmConfigFlag.setStatus("current")
_ControlPlaneOtnConfigRmTraceDetail_Type = Unsigned32
_ControlPlaneOtnConfigRmTraceDetail_Object = MibTableColumn
controlPlaneOtnConfigRmTraceDetail = _ControlPlaneOtnConfigRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 38),
    _ControlPlaneOtnConfigRmTraceDetail_Type()
)
controlPlaneOtnConfigRmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRmTraceDetail.setStatus("current")
_ControlPlaneOtnConfigRmTraceTarget_Type = Unsigned32
_ControlPlaneOtnConfigRmTraceTarget_Object = MibTableColumn
controlPlaneOtnConfigRmTraceTarget = _ControlPlaneOtnConfigRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 55, 1, 39),
    _ControlPlaneOtnConfigRmTraceTarget_Type()
)
controlPlaneOtnConfigRmTraceTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    controlPlaneOtnConfigRmTraceTarget.setStatus("current")
_ControlPlaneOtnDataTable_Object = MibTable
controlPlaneOtnDataTable = _ControlPlaneOtnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56)
)
if mibBuilder.loadTexts:
    controlPlaneOtnDataTable.setStatus("current")
_ControlPlaneOtnDataEntry_Object = MibTableRow
controlPlaneOtnDataEntry = _ControlPlaneOtnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1)
)
controlPlaneOtnDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    controlPlaneOtnDataEntry.setStatus("current")
_ControlPlaneOtnDataCtmAlias_Type = SnmpAdminString
_ControlPlaneOtnDataCtmAlias_Object = MibTableColumn
controlPlaneOtnDataCtmAlias = _ControlPlaneOtnDataCtmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 1),
    _ControlPlaneOtnDataCtmAlias_Type()
)
controlPlaneOtnDataCtmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataCtmAlias.setStatus("current")
_ControlPlaneOtnDataRaAlias_Type = SnmpAdminString
_ControlPlaneOtnDataRaAlias_Object = MibTableColumn
controlPlaneOtnDataRaAlias = _ControlPlaneOtnDataRaAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 2),
    _ControlPlaneOtnDataRaAlias_Type()
)
controlPlaneOtnDataRaAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataRaAlias.setStatus("current")
_ControlPlaneOtnDataCmAlias_Type = SnmpAdminString
_ControlPlaneOtnDataCmAlias_Object = MibTableColumn
controlPlaneOtnDataCmAlias = _ControlPlaneOtnDataCmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 3),
    _ControlPlaneOtnDataCmAlias_Type()
)
controlPlaneOtnDataCmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataCmAlias.setStatus("current")
_ControlPlaneOtnDataCdbAlias_Type = SnmpAdminString
_ControlPlaneOtnDataCdbAlias_Object = MibTableColumn
controlPlaneOtnDataCdbAlias = _ControlPlaneOtnDataCdbAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 4),
    _ControlPlaneOtnDataCdbAlias_Type()
)
controlPlaneOtnDataCdbAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataCdbAlias.setStatus("current")
_ControlPlaneOtnDataTedbAlias_Type = SnmpAdminString
_ControlPlaneOtnDataTedbAlias_Object = MibTableColumn
controlPlaneOtnDataTedbAlias = _ControlPlaneOtnDataTedbAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 5),
    _ControlPlaneOtnDataTedbAlias_Type()
)
controlPlaneOtnDataTedbAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataTedbAlias.setStatus("current")
_ControlPlaneOtnDataNaasAlias_Type = SnmpAdminString
_ControlPlaneOtnDataNaasAlias_Object = MibTableColumn
controlPlaneOtnDataNaasAlias = _ControlPlaneOtnDataNaasAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 6),
    _ControlPlaneOtnDataNaasAlias_Type()
)
controlPlaneOtnDataNaasAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataNaasAlias.setStatus("current")
_ControlPlaneOtnDataPcAlias_Type = SnmpAdminString
_ControlPlaneOtnDataPcAlias_Object = MibTableColumn
controlPlaneOtnDataPcAlias = _ControlPlaneOtnDataPcAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 7),
    _ControlPlaneOtnDataPcAlias_Type()
)
controlPlaneOtnDataPcAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataPcAlias.setStatus("current")
_ControlPlaneOtnDataRsvpAlias_Type = SnmpAdminString
_ControlPlaneOtnDataRsvpAlias_Object = MibTableColumn
controlPlaneOtnDataRsvpAlias = _ControlPlaneOtnDataRsvpAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 8),
    _ControlPlaneOtnDataRsvpAlias_Type()
)
controlPlaneOtnDataRsvpAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataRsvpAlias.setStatus("current")
_ControlPlaneOtnDataCdAlias_Type = SnmpAdminString
_ControlPlaneOtnDataCdAlias_Object = MibTableColumn
controlPlaneOtnDataCdAlias = _ControlPlaneOtnDataCdAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 9),
    _ControlPlaneOtnDataCdAlias_Type()
)
controlPlaneOtnDataCdAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataCdAlias.setStatus("current")
_ControlPlaneOtnDataRmAlias_Type = SnmpAdminString
_ControlPlaneOtnDataRmAlias_Object = MibTableColumn
controlPlaneOtnDataRmAlias = _ControlPlaneOtnDataRmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 10),
    _ControlPlaneOtnDataRmAlias_Type()
)
controlPlaneOtnDataRmAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataRmAlias.setStatus("current")
_ControlPlaneOtnDataNodeNameSyntax_Type = FspR7NodeId
_ControlPlaneOtnDataNodeNameSyntax_Object = MibTableColumn
controlPlaneOtnDataNodeNameSyntax = _ControlPlaneOtnDataNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 56, 1, 11),
    _ControlPlaneOtnDataNodeNameSyntax_Type()
)
controlPlaneOtnDataNodeNameSyntax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    controlPlaneOtnDataNodeNameSyntax.setStatus("deprecated")
_TunnelOtnConfigTable_Object = MibTable
tunnelOtnConfigTable = _TunnelOtnConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57)
)
if mibBuilder.loadTexts:
    tunnelOtnConfigTable.setStatus("current")
_TunnelOtnConfigEntry_Object = MibTableRow
tunnelOtnConfigEntry = _TunnelOtnConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1)
)
tunnelOtnConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    tunnelOtnConfigEntry.setStatus("current")
_TunnelOtnConfigAlias_Type = SnmpAdminString
_TunnelOtnConfigAlias_Object = MibTableColumn
tunnelOtnConfigAlias = _TunnelOtnConfigAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 1),
    _TunnelOtnConfigAlias_Type()
)
tunnelOtnConfigAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigAlias.setStatus("current")
_TunnelOtnConfigProvisionedPaths_Type = SnmpAdminString
_TunnelOtnConfigProvisionedPaths_Object = MibTableColumn
tunnelOtnConfigProvisionedPaths = _TunnelOtnConfigProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 2),
    _TunnelOtnConfigProvisionedPaths_Type()
)
tunnelOtnConfigProvisionedPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigProvisionedPaths.setStatus("current")
_TunnelOtnConfigPin_Type = FspR7CpPinning
_TunnelOtnConfigPin_Object = MibTableColumn
tunnelOtnConfigPin = _TunnelOtnConfigPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 3),
    _TunnelOtnConfigPin_Type()
)
tunnelOtnConfigPin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigPin.setStatus("current")
_TunnelOtnConfigAbortProcess_Type = FspR7CpAbortProcess
_TunnelOtnConfigAbortProcess_Object = MibTableColumn
tunnelOtnConfigAbortProcess = _TunnelOtnConfigAbortProcess_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 4),
    _TunnelOtnConfigAbortProcess_Type()
)
tunnelOtnConfigAbortProcess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigAbortProcess.setStatus("current")
_TunnelOtnConfigCommand_Type = FspR7CpCommand
_TunnelOtnConfigCommand_Object = MibTableColumn
tunnelOtnConfigCommand = _TunnelOtnConfigCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 5),
    _TunnelOtnConfigCommand_Type()
)
tunnelOtnConfigCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigCommand.setStatus("current")
_TunnelOtnConfigProtectionType_Type = FspR7CpProtectionType
_TunnelOtnConfigProtectionType_Object = MibTableColumn
tunnelOtnConfigProtectionType = _TunnelOtnConfigProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 6),
    _TunnelOtnConfigProtectionType_Type()
)
tunnelOtnConfigProtectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigProtectionType.setStatus("current")
_TunnelOtnConfigRestorationType_Type = FspR7CpRestorationType
_TunnelOtnConfigRestorationType_Object = MibTableColumn
tunnelOtnConfigRestorationType = _TunnelOtnConfigRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 7),
    _TunnelOtnConfigRestorationType_Type()
)
tunnelOtnConfigRestorationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigRestorationType.setStatus("current")
_TunnelOtnConfigMonitorEntities_Type = FspR7EnableDisable
_TunnelOtnConfigMonitorEntities_Object = MibTableColumn
tunnelOtnConfigMonitorEntities = _TunnelOtnConfigMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 8),
    _TunnelOtnConfigMonitorEntities_Type()
)
tunnelOtnConfigMonitorEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigMonitorEntities.setStatus("current")
_TunnelOtnConfigAdminModifier_Type = FspR7CommandModifier
_TunnelOtnConfigAdminModifier_Object = MibTableColumn
tunnelOtnConfigAdminModifier = _TunnelOtnConfigAdminModifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 57, 1, 9),
    _TunnelOtnConfigAdminModifier_Type()
)
tunnelOtnConfigAdminModifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tunnelOtnConfigAdminModifier.setStatus("current")
_TunnelOtnDataTable_Object = MibTable
tunnelOtnDataTable = _TunnelOtnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58)
)
if mibBuilder.loadTexts:
    tunnelOtnDataTable.setStatus("current")
_TunnelOtnDataEntry_Object = MibTableRow
tunnelOtnDataEntry = _TunnelOtnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1)
)
tunnelOtnDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    tunnelOtnDataEntry.setStatus("current")
_TunnelOtnDataTunnelId_Type = SnmpAdminString
_TunnelOtnDataTunnelId_Object = MibTableColumn
tunnelOtnDataTunnelId = _TunnelOtnDataTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 1),
    _TunnelOtnDataTunnelId_Type()
)
tunnelOtnDataTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataTunnelId.setStatus("current")
_TunnelOtnDataTunnelNo_Type = Unsigned32
_TunnelOtnDataTunnelNo_Object = MibTableColumn
tunnelOtnDataTunnelNo = _TunnelOtnDataTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 2),
    _TunnelOtnDataTunnelNo_Type()
)
tunnelOtnDataTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataTunnelNo.setStatus("current")
_TunnelOtnDataTunnelType_Type = FspR7CpTunnelType
_TunnelOtnDataTunnelType_Object = MibTableColumn
tunnelOtnDataTunnelType = _TunnelOtnDataTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 3),
    _TunnelOtnDataTunnelType_Type()
)
tunnelOtnDataTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataTunnelType.setStatus("current")
_TunnelOtnDataFromTid_Type = SnmpAdminString
_TunnelOtnDataFromTid_Object = MibTableColumn
tunnelOtnDataFromTid = _TunnelOtnDataFromTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 4),
    _TunnelOtnDataFromTid_Type()
)
tunnelOtnDataFromTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataFromTid.setStatus("current")
_TunnelOtnDataFromNodeIP_Type = IpAddress
_TunnelOtnDataFromNodeIP_Object = MibTableColumn
tunnelOtnDataFromNodeIP = _TunnelOtnDataFromNodeIP_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 5),
    _TunnelOtnDataFromNodeIP_Type()
)
tunnelOtnDataFromNodeIP.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataFromNodeIP.setStatus("current")
_TunnelOtnDataToTid_Type = SnmpAdminString
_TunnelOtnDataToTid_Object = MibTableColumn
tunnelOtnDataToTid = _TunnelOtnDataToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 6),
    _TunnelOtnDataToTid_Type()
)
tunnelOtnDataToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataToTid.setStatus("current")
_TunnelOtnDataToTidMonitor_Type = SnmpAdminString
_TunnelOtnDataToTidMonitor_Object = MibTableColumn
tunnelOtnDataToTidMonitor = _TunnelOtnDataToTidMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 7),
    _TunnelOtnDataToTidMonitor_Type()
)
tunnelOtnDataToTidMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataToTidMonitor.setStatus("current")
_TunnelOtnDataToNodeIp_Type = IpAddress
_TunnelOtnDataToNodeIp_Object = MibTableColumn
tunnelOtnDataToNodeIp = _TunnelOtnDataToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 8),
    _TunnelOtnDataToNodeIp_Type()
)
tunnelOtnDataToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataToNodeIp.setStatus("current")
_TunnelOtnDataToNodeIpMonitor_Type = IpAddress
_TunnelOtnDataToNodeIpMonitor_Object = MibTableColumn
tunnelOtnDataToNodeIpMonitor = _TunnelOtnDataToNodeIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 9),
    _TunnelOtnDataToNodeIpMonitor_Type()
)
tunnelOtnDataToNodeIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataToNodeIpMonitor.setStatus("current")
_TunnelOtnDataFromAid_Type = EntityIndex
_TunnelOtnDataFromAid_Object = MibTableColumn
tunnelOtnDataFromAid = _TunnelOtnDataFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 10),
    _TunnelOtnDataFromAid_Type()
)
tunnelOtnDataFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataFromAid.setStatus("current")
_TunnelOtnDataToAid_Type = EntityIndex
_TunnelOtnDataToAid_Object = MibTableColumn
tunnelOtnDataToAid = _TunnelOtnDataToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 11),
    _TunnelOtnDataToAid_Type()
)
tunnelOtnDataToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataToAid.setStatus("current")
_TunnelOtnDataConnectionDirection_Type = FspR7Conn
_TunnelOtnDataConnectionDirection_Object = MibTableColumn
tunnelOtnDataConnectionDirection = _TunnelOtnDataConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 12),
    _TunnelOtnDataConnectionDirection_Type()
)
tunnelOtnDataConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataConnectionDirection.setStatus("current")
_TunnelOtnDataFacilityType_Type = FspR7InterfaceType
_TunnelOtnDataFacilityType_Object = MibTableColumn
tunnelOtnDataFacilityType = _TunnelOtnDataFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 13),
    _TunnelOtnDataFacilityType_Type()
)
tunnelOtnDataFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataFacilityType.setStatus("current")
_TunnelOtnDataComputedPaths_Type = SnmpAdminString
_TunnelOtnDataComputedPaths_Object = MibTableColumn
tunnelOtnDataComputedPaths = _TunnelOtnDataComputedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 14),
    _TunnelOtnDataComputedPaths_Type()
)
tunnelOtnDataComputedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataComputedPaths.setStatus("current")
_TunnelOtnDataComputationState_Type = FspR7CpCompState
_TunnelOtnDataComputationState_Object = MibTableColumn
tunnelOtnDataComputationState = _TunnelOtnDataComputationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 15),
    _TunnelOtnDataComputationState_Type()
)
tunnelOtnDataComputationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataComputationState.setStatus("current")
_TunnelOtnDataErrorMessage_Type = SnmpAdminString
_TunnelOtnDataErrorMessage_Object = MibTableColumn
tunnelOtnDataErrorMessage = _TunnelOtnDataErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 16),
    _TunnelOtnDataErrorMessage_Type()
)
tunnelOtnDataErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataErrorMessage.setStatus("current")
_TunnelOtnDataCirTrmt_Type = Unsigned32
_TunnelOtnDataCirTrmt_Object = MibTableColumn
tunnelOtnDataCirTrmt = _TunnelOtnDataCirTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 17),
    _TunnelOtnDataCirTrmt_Type()
)
tunnelOtnDataCirTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataCirTrmt.setStatus("current")
if mibBuilder.loadTexts:
    tunnelOtnDataCirTrmt.setUnits("Mbit/s")


class _TunnelOtnDataCbsTrmt_Type(Unsigned32):
    """Custom type tunnelOtnDataCbsTrmt based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 25600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_TunnelOtnDataCbsTrmt_Type.__name__ = "Unsigned32"
_TunnelOtnDataCbsTrmt_Object = MibTableColumn
tunnelOtnDataCbsTrmt = _TunnelOtnDataCbsTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 18),
    _TunnelOtnDataCbsTrmt_Type()
)
tunnelOtnDataCbsTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataCbsTrmt.setStatus("current")
if mibBuilder.loadTexts:
    tunnelOtnDataCbsTrmt.setUnits("Kbytes")
_TunnelOtnDataErrorCodeMajor_Type = Unsigned32
_TunnelOtnDataErrorCodeMajor_Object = MibTableColumn
tunnelOtnDataErrorCodeMajor = _TunnelOtnDataErrorCodeMajor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 19),
    _TunnelOtnDataErrorCodeMajor_Type()
)
tunnelOtnDataErrorCodeMajor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataErrorCodeMajor.setStatus("current")
_TunnelOtnDataErrorCodeMinor_Type = Integer32
_TunnelOtnDataErrorCodeMinor_Object = MibTableColumn
tunnelOtnDataErrorCodeMinor = _TunnelOtnDataErrorCodeMinor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 20),
    _TunnelOtnDataErrorCodeMinor_Type()
)
tunnelOtnDataErrorCodeMinor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataErrorCodeMinor.setStatus("current")
_TunnelOtnDataErrorIp_Type = IpAddress
_TunnelOtnDataErrorIp_Object = MibTableColumn
tunnelOtnDataErrorIp = _TunnelOtnDataErrorIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 21),
    _TunnelOtnDataErrorIp_Type()
)
tunnelOtnDataErrorIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataErrorIp.setStatus("current")
_TunnelOtnDataErrorTid_Type = SnmpAdminString
_TunnelOtnDataErrorTid_Object = MibTableColumn
tunnelOtnDataErrorTid = _TunnelOtnDataErrorTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 22),
    _TunnelOtnDataErrorTid_Type()
)
tunnelOtnDataErrorTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataErrorTid.setStatus("current")
_TunnelOtnDataErrorCategory_Type = FspR7CpErrorCategory
_TunnelOtnDataErrorCategory_Object = MibTableColumn
tunnelOtnDataErrorCategory = _TunnelOtnDataErrorCategory_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 23),
    _TunnelOtnDataErrorCategory_Type()
)
tunnelOtnDataErrorCategory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataErrorCategory.setStatus("current")
_TunnelOtnDataSpecificErrorMessage_Type = SnmpAdminString
_TunnelOtnDataSpecificErrorMessage_Object = MibTableColumn
tunnelOtnDataSpecificErrorMessage = _TunnelOtnDataSpecificErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 24),
    _TunnelOtnDataSpecificErrorMessage_Type()
)
tunnelOtnDataSpecificErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataSpecificErrorMessage.setStatus("current")
_TunnelOtnDataTunnelScope_Type = FspR7CpTunnelScope
_TunnelOtnDataTunnelScope_Object = MibTableColumn
tunnelOtnDataTunnelScope = _TunnelOtnDataTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 25),
    _TunnelOtnDataTunnelScope_Type()
)
tunnelOtnDataTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataTunnelScope.setStatus("current")
_TunnelOtnDataLayer_Type = FspR7PacketsLayer
_TunnelOtnDataLayer_Object = MibTableColumn
tunnelOtnDataLayer = _TunnelOtnDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 26),
    _TunnelOtnDataLayer_Type()
)
tunnelOtnDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataLayer.setStatus("current")
_TunnelOtnDataOifUni_Type = FspR7YesNo
_TunnelOtnDataOifUni_Object = MibTableColumn
tunnelOtnDataOifUni = _TunnelOtnDataOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 27),
    _TunnelOtnDataOifUni_Type()
)
tunnelOtnDataOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataOifUni.setStatus("current")
_TunnelOtnDataTunnelNumberExtension_Type = Unsigned32
_TunnelOtnDataTunnelNumberExtension_Object = MibTableColumn
tunnelOtnDataTunnelNumberExtension = _TunnelOtnDataTunnelNumberExtension_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 28),
    _TunnelOtnDataTunnelNumberExtension_Type()
)
tunnelOtnDataTunnelNumberExtension.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataTunnelNumberExtension.setStatus("current")
_TunnelOtnDataMonitorEntitiesDerive_Type = FspR7EnableDisable
_TunnelOtnDataMonitorEntitiesDerive_Object = MibTableColumn
tunnelOtnDataMonitorEntitiesDerive = _TunnelOtnDataMonitorEntitiesDerive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 29),
    _TunnelOtnDataMonitorEntitiesDerive_Type()
)
tunnelOtnDataMonitorEntitiesDerive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataMonitorEntitiesDerive.setStatus("current")
_TunnelOtnDataFromAidString_Type = SnmpAdminString
_TunnelOtnDataFromAidString_Object = MibTableColumn
tunnelOtnDataFromAidString = _TunnelOtnDataFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 30),
    _TunnelOtnDataFromAidString_Type()
)
tunnelOtnDataFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataFromAidString.setStatus("current")
_TunnelOtnDataToAidString_Type = SnmpAdminString
_TunnelOtnDataToAidString_Object = MibTableColumn
tunnelOtnDataToAidString = _TunnelOtnDataToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 58, 1, 31),
    _TunnelOtnDataToAidString_Type()
)
tunnelOtnDataToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tunnelOtnDataToAidString.setStatus("current")
_ConnectionOtnConfigTable_Object = MibTable
connectionOtnConfigTable = _ConnectionOtnConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 59)
)
if mibBuilder.loadTexts:
    connectionOtnConfigTable.setStatus("current")
_ConnectionOtnConfigEntry_Object = MibTableRow
connectionOtnConfigEntry = _ConnectionOtnConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 59, 1)
)
connectionOtnConfigEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    connectionOtnConfigEntry.setStatus("current")
_ConnectionOtnConfigCancelConnEntities_Type = FspR7CpCancConnection
_ConnectionOtnConfigCancelConnEntities_Object = MibTableColumn
connectionOtnConfigCancelConnEntities = _ConnectionOtnConfigCancelConnEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 59, 1, 1),
    _ConnectionOtnConfigCancelConnEntities_Type()
)
connectionOtnConfigCancelConnEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connectionOtnConfigCancelConnEntities.setStatus("current")
_ConnectionOtnConfigCancelModifier_Type = FspR7CommandModifier
_ConnectionOtnConfigCancelModifier_Object = MibTableColumn
connectionOtnConfigCancelModifier = _ConnectionOtnConfigCancelModifier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 59, 1, 2),
    _ConnectionOtnConfigCancelModifier_Type()
)
connectionOtnConfigCancelModifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    connectionOtnConfigCancelModifier.setStatus("current")
_ConnectionOtnDataTable_Object = MibTable
connectionOtnDataTable = _ConnectionOtnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60)
)
if mibBuilder.loadTexts:
    connectionOtnDataTable.setStatus("current")
_ConnectionOtnDataEntry_Object = MibTableRow
connectionOtnDataEntry = _ConnectionOtnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1)
)
connectionOtnDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    connectionOtnDataEntry.setStatus("current")
_ConnectionOtnDataTunnelId_Type = SnmpAdminString
_ConnectionOtnDataTunnelId_Object = MibTableColumn
connectionOtnDataTunnelId = _ConnectionOtnDataTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 1),
    _ConnectionOtnDataTunnelId_Type()
)
connectionOtnDataTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataTunnelId.setStatus("current")
_ConnectionOtnDataTunnelNo_Type = Unsigned32
_ConnectionOtnDataTunnelNo_Object = MibTableColumn
connectionOtnDataTunnelNo = _ConnectionOtnDataTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 2),
    _ConnectionOtnDataTunnelNo_Type()
)
connectionOtnDataTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataTunnelNo.setStatus("current")
_ConnectionOtnDataTunnelType_Type = FspR7CpTunnelType
_ConnectionOtnDataTunnelType_Object = MibTableColumn
connectionOtnDataTunnelType = _ConnectionOtnDataTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 3),
    _ConnectionOtnDataTunnelType_Type()
)
connectionOtnDataTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataTunnelType.setStatus("current")
_ConnectionOtnDataFromTid_Type = SnmpAdminString
_ConnectionOtnDataFromTid_Object = MibTableColumn
connectionOtnDataFromTid = _ConnectionOtnDataFromTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 4),
    _ConnectionOtnDataFromTid_Type()
)
connectionOtnDataFromTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataFromTid.setStatus("current")
_ConnectionOtnDataFromNodeIp_Type = IpAddress
_ConnectionOtnDataFromNodeIp_Object = MibTableColumn
connectionOtnDataFromNodeIp = _ConnectionOtnDataFromNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 5),
    _ConnectionOtnDataFromNodeIp_Type()
)
connectionOtnDataFromNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataFromNodeIp.setStatus("current")
_ConnectionOtnDataToTid_Type = SnmpAdminString
_ConnectionOtnDataToTid_Object = MibTableColumn
connectionOtnDataToTid = _ConnectionOtnDataToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 6),
    _ConnectionOtnDataToTid_Type()
)
connectionOtnDataToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataToTid.setStatus("current")
_ConnectionOtnDataToNodeIp_Type = IpAddress
_ConnectionOtnDataToNodeIp_Object = MibTableColumn
connectionOtnDataToNodeIp = _ConnectionOtnDataToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 7),
    _ConnectionOtnDataToNodeIp_Type()
)
connectionOtnDataToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataToNodeIp.setStatus("current")
_ConnectionOtnDataFromAid_Type = EntityIndex
_ConnectionOtnDataFromAid_Object = MibTableColumn
connectionOtnDataFromAid = _ConnectionOtnDataFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 8),
    _ConnectionOtnDataFromAid_Type()
)
connectionOtnDataFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataFromAid.setStatus("current")
_ConnectionOtnDataToAid_Type = EntityIndex
_ConnectionOtnDataToAid_Object = MibTableColumn
connectionOtnDataToAid = _ConnectionOtnDataToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 9),
    _ConnectionOtnDataToAid_Type()
)
connectionOtnDataToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataToAid.setStatus("current")
_ConnectionOtnDataConnectionDirection_Type = FspR7Conn
_ConnectionOtnDataConnectionDirection_Object = MibTableColumn
connectionOtnDataConnectionDirection = _ConnectionOtnDataConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 10),
    _ConnectionOtnDataConnectionDirection_Type()
)
connectionOtnDataConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataConnectionDirection.setStatus("current")
_ConnectionOtnDataNetworkElementPosition_Type = FspR7CpNePosition
_ConnectionOtnDataNetworkElementPosition_Object = MibTableColumn
connectionOtnDataNetworkElementPosition = _ConnectionOtnDataNetworkElementPosition_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 11),
    _ConnectionOtnDataNetworkElementPosition_Type()
)
connectionOtnDataNetworkElementPosition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataNetworkElementPosition.setStatus("current")
_ConnectionOtnDataFacilityType_Type = FspR7InterfaceType
_ConnectionOtnDataFacilityType_Object = MibTableColumn
connectionOtnDataFacilityType = _ConnectionOtnDataFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 12),
    _ConnectionOtnDataFacilityType_Type()
)
connectionOtnDataFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataFacilityType.setStatus("current")
_ConnectionOtnDataBitrate_Type = Unsigned32
_ConnectionOtnDataBitrate_Object = MibTableColumn
connectionOtnDataBitrate = _ConnectionOtnDataBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 13),
    _ConnectionOtnDataBitrate_Type()
)
connectionOtnDataBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataBitrate.setStatus("current")
if mibBuilder.loadTexts:
    connectionOtnDataBitrate.setUnits("Mbit/s")
_ConnectionOtnDataEncode_Type = FspR7CpEncode
_ConnectionOtnDataEncode_Object = MibTableColumn
connectionOtnDataEncode = _ConnectionOtnDataEncode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 14),
    _ConnectionOtnDataEncode_Type()
)
connectionOtnDataEncode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataEncode.setStatus("current")
_ConnectionOtnDataTerminationLevel_Type = OhTerminationLevel
_ConnectionOtnDataTerminationLevel_Object = MibTableColumn
connectionOtnDataTerminationLevel = _ConnectionOtnDataTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 15),
    _ConnectionOtnDataTerminationLevel_Type()
)
connectionOtnDataTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataTerminationLevel.setStatus("current")
_ConnectionOtnDataFecType_Type = FspR7FecType
_ConnectionOtnDataFecType_Object = MibTableColumn
connectionOtnDataFecType = _ConnectionOtnDataFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 16),
    _ConnectionOtnDataFecType_Type()
)
connectionOtnDataFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataFecType.setStatus("current")
_ConnectionOtnDataStuff_Type = FspR7Stuff
_ConnectionOtnDataStuff_Object = MibTableColumn
connectionOtnDataStuff = _ConnectionOtnDataStuff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 17),
    _ConnectionOtnDataStuff_Type()
)
connectionOtnDataStuff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataStuff.setStatus("current")
_ConnectionOtnDataSignalledPaths_Type = SnmpAdminString
_ConnectionOtnDataSignalledPaths_Object = MibTableColumn
connectionOtnDataSignalledPaths = _ConnectionOtnDataSignalledPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 18),
    _ConnectionOtnDataSignalledPaths_Type()
)
connectionOtnDataSignalledPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataSignalledPaths.setStatus("current")
_ConnectionOtnDataComputedPaths_Type = SnmpAdminString
_ConnectionOtnDataComputedPaths_Object = MibTableColumn
connectionOtnDataComputedPaths = _ConnectionOtnDataComputedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 19),
    _ConnectionOtnDataComputedPaths_Type()
)
connectionOtnDataComputedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataComputedPaths.setStatus("current")
_ConnectionOtnDataRole_Type = FspR7CpRole
_ConnectionOtnDataRole_Object = MibTableColumn
connectionOtnDataRole = _ConnectionOtnDataRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 20),
    _ConnectionOtnDataRole_Type()
)
connectionOtnDataRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataRole.setStatus("current")
_ConnectionOtnDataErrorMessage_Type = SnmpAdminString
_ConnectionOtnDataErrorMessage_Object = MibTableColumn
connectionOtnDataErrorMessage = _ConnectionOtnDataErrorMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 21),
    _ConnectionOtnDataErrorMessage_Type()
)
connectionOtnDataErrorMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataErrorMessage.setStatus("current")
_ConnectionOtnDataActivationState_Type = FspR7CpActivState
_ConnectionOtnDataActivationState_Object = MibTableColumn
connectionOtnDataActivationState = _ConnectionOtnDataActivationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 22),
    _ConnectionOtnDataActivationState_Type()
)
connectionOtnDataActivationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataActivationState.setStatus("current")
_ConnectionOtnDataRestorable_Type = FspR7FalseTrue
_ConnectionOtnDataRestorable_Object = MibTableColumn
connectionOtnDataRestorable = _ConnectionOtnDataRestorable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 23),
    _ConnectionOtnDataRestorable_Type()
)
connectionOtnDataRestorable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataRestorable.setStatus("current")
_ConnectionOtnDataRestorationState_Type = FspR7CpCompState
_ConnectionOtnDataRestorationState_Object = MibTableColumn
connectionOtnDataRestorationState = _ConnectionOtnDataRestorationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 24),
    _ConnectionOtnDataRestorationState_Type()
)
connectionOtnDataRestorationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataRestorationState.setStatus("deprecated")
_ConnectionOtnDataEqualizationState_Type = FspR7CpCompState
_ConnectionOtnDataEqualizationState_Object = MibTableColumn
connectionOtnDataEqualizationState = _ConnectionOtnDataEqualizationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 25),
    _ConnectionOtnDataEqualizationState_Type()
)
connectionOtnDataEqualizationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataEqualizationState.setStatus("current")
_ConnectionOtnDataModificationState_Type = FspR7CpCompState
_ConnectionOtnDataModificationState_Object = MibTableColumn
connectionOtnDataModificationState = _ConnectionOtnDataModificationState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 26),
    _ConnectionOtnDataModificationState_Type()
)
connectionOtnDataModificationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataModificationState.setStatus("current")
_ConnectionOtnDataMonitorEntities_Type = FspR7EnableDisable
_ConnectionOtnDataMonitorEntities_Object = MibTableColumn
connectionOtnDataMonitorEntities = _ConnectionOtnDataMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 27),
    _ConnectionOtnDataMonitorEntities_Type()
)
connectionOtnDataMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataMonitorEntities.setStatus("deprecated")
_ConnectionOtnDataTunnelScope_Type = FspR7CpTunnelScope
_ConnectionOtnDataTunnelScope_Object = MibTableColumn
connectionOtnDataTunnelScope = _ConnectionOtnDataTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 28),
    _ConnectionOtnDataTunnelScope_Type()
)
connectionOtnDataTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataTunnelScope.setStatus("current")
_ConnectionOtnDataLayer_Type = FspR7PacketsLayer
_ConnectionOtnDataLayer_Object = MibTableColumn
connectionOtnDataLayer = _ConnectionOtnDataLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 29),
    _ConnectionOtnDataLayer_Type()
)
connectionOtnDataLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataLayer.setStatus("current")
_ConnectionOtnDataSourceTna_Type = IpAddress
_ConnectionOtnDataSourceTna_Object = MibTableColumn
connectionOtnDataSourceTna = _ConnectionOtnDataSourceTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 30),
    _ConnectionOtnDataSourceTna_Type()
)
connectionOtnDataSourceTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataSourceTna.setStatus("current")
_ConnectionOtnDataDestinationTna_Type = IpAddress
_ConnectionOtnDataDestinationTna_Object = MibTableColumn
connectionOtnDataDestinationTna = _ConnectionOtnDataDestinationTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 31),
    _ConnectionOtnDataDestinationTna_Type()
)
connectionOtnDataDestinationTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataDestinationTna.setStatus("current")
_ConnectionOtnDataTunnelNumberExtension_Type = Unsigned32
_ConnectionOtnDataTunnelNumberExtension_Object = MibTableColumn
connectionOtnDataTunnelNumberExtension = _ConnectionOtnDataTunnelNumberExtension_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 32),
    _ConnectionOtnDataTunnelNumberExtension_Type()
)
connectionOtnDataTunnelNumberExtension.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataTunnelNumberExtension.setStatus("current")
_ConnectionOtnDataTunnelInstance_Type = Unsigned32
_ConnectionOtnDataTunnelInstance_Object = MibTableColumn
connectionOtnDataTunnelInstance = _ConnectionOtnDataTunnelInstance_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 33),
    _ConnectionOtnDataTunnelInstance_Type()
)
connectionOtnDataTunnelInstance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataTunnelInstance.setStatus("current")
_ConnectionOtnDataConnectionNo_Type = Unsigned32
_ConnectionOtnDataConnectionNo_Object = MibTableColumn
connectionOtnDataConnectionNo = _ConnectionOtnDataConnectionNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 60, 1, 34),
    _ConnectionOtnDataConnectionNo_Type()
)
connectionOtnDataConnectionNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    connectionOtnDataConnectionNo.setStatus("current")
_InventoryCpOtnDownDataTable_Object = MibTable
inventoryCpOtnDownDataTable = _InventoryCpOtnDownDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 61)
)
if mibBuilder.loadTexts:
    inventoryCpOtnDownDataTable.setStatus("current")
_InventoryCpOtnDownDataEntry_Object = MibTableRow
inventoryCpOtnDownDataEntry = _InventoryCpOtnDownDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 61, 1)
)
inventoryCpOtnDownDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpOtnDownDataNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpOtnDownDataEntry.setStatus("current")
_InventoryCpOtnDownDataNumber_Type = EntityIndex
_InventoryCpOtnDownDataNumber_Object = MibTableColumn
inventoryCpOtnDownDataNumber = _InventoryCpOtnDownDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 61, 1, 1),
    _InventoryCpOtnDownDataNumber_Type()
)
inventoryCpOtnDownDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpOtnDownDataNumber.setStatus("current")
_InventoryCpOtnDownDataResources_Type = EntityIndex
_InventoryCpOtnDownDataResources_Object = MibTableColumn
inventoryCpOtnDownDataResources = _InventoryCpOtnDownDataResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 61, 1, 2),
    _InventoryCpOtnDownDataResources_Type()
)
inventoryCpOtnDownDataResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnDownDataResources.setStatus("current")
_InventoryCpOtnDownDataFacilities_Type = EntityIndex
_InventoryCpOtnDownDataFacilities_Object = MibTableColumn
inventoryCpOtnDownDataFacilities = _InventoryCpOtnDownDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 61, 1, 3),
    _InventoryCpOtnDownDataFacilities_Type()
)
inventoryCpOtnDownDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnDownDataFacilities.setStatus("current")
_InventoryCpOtnDownDataPhysicalTermPoints_Type = EntityIndex
_InventoryCpOtnDownDataPhysicalTermPoints_Object = MibTableColumn
inventoryCpOtnDownDataPhysicalTermPoints = _InventoryCpOtnDownDataPhysicalTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 61, 1, 4),
    _InventoryCpOtnDownDataPhysicalTermPoints_Type()
)
inventoryCpOtnDownDataPhysicalTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnDownDataPhysicalTermPoints.setStatus("current")
_InventoryCpOtnUpDataTable_Object = MibTable
inventoryCpOtnUpDataTable = _InventoryCpOtnUpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 62)
)
if mibBuilder.loadTexts:
    inventoryCpOtnUpDataTable.setStatus("current")
_InventoryCpOtnUpDataEntry_Object = MibTableRow
inventoryCpOtnUpDataEntry = _InventoryCpOtnUpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 62, 1)
)
inventoryCpOtnUpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpOtnUpDataNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpOtnUpDataEntry.setStatus("current")
_InventoryCpOtnUpDataNumber_Type = EntityIndex
_InventoryCpOtnUpDataNumber_Object = MibTableColumn
inventoryCpOtnUpDataNumber = _InventoryCpOtnUpDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 62, 1, 1),
    _InventoryCpOtnUpDataNumber_Type()
)
inventoryCpOtnUpDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpOtnUpDataNumber.setStatus("current")
_InventoryCpOtnUpDataResources_Type = EntityIndex
_InventoryCpOtnUpDataResources_Object = MibTableColumn
inventoryCpOtnUpDataResources = _InventoryCpOtnUpDataResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 62, 1, 2),
    _InventoryCpOtnUpDataResources_Type()
)
inventoryCpOtnUpDataResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnUpDataResources.setStatus("current")
_InventoryCpOtnUpDataFacilities_Type = EntityIndex
_InventoryCpOtnUpDataFacilities_Object = MibTableColumn
inventoryCpOtnUpDataFacilities = _InventoryCpOtnUpDataFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 62, 1, 3),
    _InventoryCpOtnUpDataFacilities_Type()
)
inventoryCpOtnUpDataFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnUpDataFacilities.setStatus("current")
_InventoryCpOtnUpDataPhysicalTermPoints_Type = EntityIndex
_InventoryCpOtnUpDataPhysicalTermPoints_Object = MibTableColumn
inventoryCpOtnUpDataPhysicalTermPoints = _InventoryCpOtnUpDataPhysicalTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 62, 1, 4),
    _InventoryCpOtnUpDataPhysicalTermPoints_Type()
)
inventoryCpOtnUpDataPhysicalTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnUpDataPhysicalTermPoints.setStatus("current")
_InventoryCpOtnCrsDownDataTable_Object = MibTable
inventoryCpOtnCrsDownDataTable = _InventoryCpOtnCrsDownDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 63)
)
if mibBuilder.loadTexts:
    inventoryCpOtnCrsDownDataTable.setStatus("current")
_InventoryCpOtnCrsDownDataEntry_Object = MibTableRow
inventoryCpOtnCrsDownDataEntry = _InventoryCpOtnCrsDownDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 63, 1)
)
inventoryCpOtnCrsDownDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpOtnCrsDownDataNumber"),
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    inventoryCpOtnCrsDownDataEntry.setStatus("current")
_InventoryCpOtnCrsDownDataNumber_Type = EntityIndex
_InventoryCpOtnCrsDownDataNumber_Object = MibTableColumn
inventoryCpOtnCrsDownDataNumber = _InventoryCpOtnCrsDownDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 63, 1, 1),
    _InventoryCpOtnCrsDownDataNumber_Type()
)
inventoryCpOtnCrsDownDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpOtnCrsDownDataNumber.setStatus("current")
_InventoryCpOtnCrsDownDataAids_Type = EntityIndex
_InventoryCpOtnCrsDownDataAids_Object = MibTableColumn
inventoryCpOtnCrsDownDataAids = _InventoryCpOtnCrsDownDataAids_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 63, 1, 2),
    _InventoryCpOtnCrsDownDataAids_Type()
)
inventoryCpOtnCrsDownDataAids.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnCrsDownDataAids.setStatus("current")
_InventoryCpOtnCrsUpDataTable_Object = MibTable
inventoryCpOtnCrsUpDataTable = _InventoryCpOtnCrsUpDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 64)
)
if mibBuilder.loadTexts:
    inventoryCpOtnCrsUpDataTable.setStatus("current")
_InventoryCpOtnCrsUpDataEntry_Object = MibTableRow
inventoryCpOtnCrsUpDataEntry = _InventoryCpOtnCrsUpDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 64, 1)
)
inventoryCpOtnCrsUpDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpOtnCrsUpDataNumber"),
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    inventoryCpOtnCrsUpDataEntry.setStatus("current")
_InventoryCpOtnCrsUpDataNumber_Type = EntityIndex
_InventoryCpOtnCrsUpDataNumber_Object = MibTableColumn
inventoryCpOtnCrsUpDataNumber = _InventoryCpOtnCrsUpDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 64, 1, 1),
    _InventoryCpOtnCrsUpDataNumber_Type()
)
inventoryCpOtnCrsUpDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpOtnCrsUpDataNumber.setStatus("current")
_InventoryCpOtnCrsUpDataAids_Type = EntityIndex
_InventoryCpOtnCrsUpDataAids_Object = MibTableColumn
inventoryCpOtnCrsUpDataAids = _InventoryCpOtnCrsUpDataAids_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 64, 1, 2),
    _InventoryCpOtnCrsUpDataAids_Type()
)
inventoryCpOtnCrsUpDataAids.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnCrsUpDataAids.setStatus("current")
_PathOtnDataTable_Object = MibTable
pathOtnDataTable = _PathOtnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 65)
)
if mibBuilder.loadTexts:
    pathOtnDataTable.setStatus("current")
_PathOtnDataEntry_Object = MibTableRow
pathOtnDataEntry = _PathOtnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 65, 1)
)
pathOtnDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    pathOtnDataEntry.setStatus("current")
_PathOtnDataPathId_Type = SnmpAdminString
_PathOtnDataPathId_Object = MibTableColumn
pathOtnDataPathId = _PathOtnDataPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 65, 1, 1),
    _PathOtnDataPathId_Type()
)
pathOtnDataPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathOtnDataPathId.setStatus("current")
_PathOtnDataPathType_Type = FspR7CpPathType
_PathOtnDataPathType_Object = MibTableColumn
pathOtnDataPathType = _PathOtnDataPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 65, 1, 2),
    _PathOtnDataPathType_Type()
)
pathOtnDataPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathOtnDataPathType.setStatus("current")
_PathOtnDataConnectionTunnelAid_Type = EntityIndex
_PathOtnDataConnectionTunnelAid_Object = MibTableColumn
pathOtnDataConnectionTunnelAid = _PathOtnDataConnectionTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 65, 1, 3),
    _PathOtnDataConnectionTunnelAid_Type()
)
pathOtnDataConnectionTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathOtnDataConnectionTunnelAid.setStatus("current")
_PathOtnDataRole_Type = FspR7CpRole
_PathOtnDataRole_Object = MibTableColumn
pathOtnDataRole = _PathOtnDataRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 65, 1, 4),
    _PathOtnDataRole_Type()
)
pathOtnDataRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathOtnDataRole.setStatus("current")
_PathElementOtnDataTable_Object = MibTable
pathElementOtnDataTable = _PathElementOtnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66)
)
if mibBuilder.loadTexts:
    pathElementOtnDataTable.setStatus("current")
_PathElementOtnDataEntry_Object = MibTableRow
pathElementOtnDataEntry = _PathElementOtnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1)
)
pathElementOtnDataEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    pathElementOtnDataEntry.setStatus("current")
_PathElementOtnDataPathId_Type = SnmpAdminString
_PathElementOtnDataPathId_Object = MibTableColumn
pathElementOtnDataPathId = _PathElementOtnDataPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 1),
    _PathElementOtnDataPathId_Type()
)
pathElementOtnDataPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataPathId.setStatus("current")
_PathElementOtnDataSequenceNumber_Type = Unsigned32
_PathElementOtnDataSequenceNumber_Object = MibTableColumn
pathElementOtnDataSequenceNumber = _PathElementOtnDataSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 2),
    _PathElementOtnDataSequenceNumber_Type()
)
pathElementOtnDataSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataSequenceNumber.setStatus("current")
_PathElementOtnDataPathType_Type = FspR7CpPathType
_PathElementOtnDataPathType_Object = MibTableColumn
pathElementOtnDataPathType = _PathElementOtnDataPathType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 3),
    _PathElementOtnDataPathType_Type()
)
pathElementOtnDataPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataPathType.setStatus("current")
_PathElementOtnDataTrafficEngineeringType_Type = FspR7CpTEType
_PathElementOtnDataTrafficEngineeringType_Object = MibTableColumn
pathElementOtnDataTrafficEngineeringType = _PathElementOtnDataTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 4),
    _PathElementOtnDataTrafficEngineeringType_Type()
)
pathElementOtnDataTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataTrafficEngineeringType.setStatus("current")
_PathElementOtnDataLifIp_Type = IpAddress
_PathElementOtnDataLifIp_Object = MibTableColumn
pathElementOtnDataLifIp = _PathElementOtnDataLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 5),
    _PathElementOtnDataLifIp_Type()
)
pathElementOtnDataLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataLifIp.setStatus("current")
_PathElementOtnDataNodeIp_Type = IpAddress
_PathElementOtnDataNodeIp_Object = MibTableColumn
pathElementOtnDataNodeIp = _PathElementOtnDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 6),
    _PathElementOtnDataNodeIp_Type()
)
pathElementOtnDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataNodeIp.setStatus("current")
_PathElementOtnDataNodeIpMonitor_Type = IpAddress
_PathElementOtnDataNodeIpMonitor_Object = MibTableColumn
pathElementOtnDataNodeIpMonitor = _PathElementOtnDataNodeIpMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 7),
    _PathElementOtnDataNodeIpMonitor_Type()
)
pathElementOtnDataNodeIpMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataNodeIpMonitor.setStatus("current")
_PathElementOtnDataTid_Type = SnmpAdminString
_PathElementOtnDataTid_Object = MibTableColumn
pathElementOtnDataTid = _PathElementOtnDataTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 8),
    _PathElementOtnDataTid_Type()
)
pathElementOtnDataTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataTid.setStatus("current")
_PathElementOtnDataTidMonitor_Type = SnmpAdminString
_PathElementOtnDataTidMonitor_Object = MibTableColumn
pathElementOtnDataTidMonitor = _PathElementOtnDataTidMonitor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 9),
    _PathElementOtnDataTidMonitor_Type()
)
pathElementOtnDataTidMonitor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataTidMonitor.setStatus("current")
_PathElementOtnDataLogicalInterfaceId_Type = Unsigned32
_PathElementOtnDataLogicalInterfaceId_Object = MibTableColumn
pathElementOtnDataLogicalInterfaceId = _PathElementOtnDataLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 10),
    _PathElementOtnDataLogicalInterfaceId_Type()
)
pathElementOtnDataLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataLogicalInterfaceId.setStatus("current")
_PathElementOtnDataTie_Type = FspR7CpTie
_PathElementOtnDataTie_Object = MibTableColumn
pathElementOtnDataTie = _PathElementOtnDataTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 11),
    _PathElementOtnDataTie_Type()
)
pathElementOtnDataTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pathElementOtnDataTie.setStatus("current")
_PathElementOtnDataUpTributaryODTUType_Type = FspR7OdtuType
_PathElementOtnDataUpTributaryODTUType_Object = MibTableColumn
pathElementOtnDataUpTributaryODTUType = _PathElementOtnDataUpTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 12),
    _PathElementOtnDataUpTributaryODTUType_Type()
)
pathElementOtnDataUpTributaryODTUType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataUpTributaryODTUType.setStatus("current")
_PathElementOtnDataDownTributaryODTUType_Type = FspR7OdtuType
_PathElementOtnDataDownTributaryODTUType_Object = MibTableColumn
pathElementOtnDataDownTributaryODTUType = _PathElementOtnDataDownTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 13),
    _PathElementOtnDataDownTributaryODTUType_Type()
)
pathElementOtnDataDownTributaryODTUType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataDownTributaryODTUType.setStatus("current")
_PathElementOtnDataUpTributaryPort_Type = SnmpAdminString
_PathElementOtnDataUpTributaryPort_Object = MibTableColumn
pathElementOtnDataUpTributaryPort = _PathElementOtnDataUpTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 14),
    _PathElementOtnDataUpTributaryPort_Type()
)
pathElementOtnDataUpTributaryPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataUpTributaryPort.setStatus("current")
_PathElementOtnDataDownTributaryPort_Type = SnmpAdminString
_PathElementOtnDataDownTributaryPort_Object = MibTableColumn
pathElementOtnDataDownTributaryPort = _PathElementOtnDataDownTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 15),
    _PathElementOtnDataDownTributaryPort_Type()
)
pathElementOtnDataDownTributaryPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataDownTributaryPort.setStatus("current")
_PathElementOtnDataUpTributarySlot_Type = SnmpAdminString
_PathElementOtnDataUpTributarySlot_Object = MibTableColumn
pathElementOtnDataUpTributarySlot = _PathElementOtnDataUpTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 16),
    _PathElementOtnDataUpTributarySlot_Type()
)
pathElementOtnDataUpTributarySlot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataUpTributarySlot.setStatus("current")
_PathElementOtnDataDownTributarySlot_Type = SnmpAdminString
_PathElementOtnDataDownTributarySlot_Object = MibTableColumn
pathElementOtnDataDownTributarySlot = _PathElementOtnDataDownTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 17),
    _PathElementOtnDataDownTributarySlot_Type()
)
pathElementOtnDataDownTributarySlot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataDownTributarySlot.setStatus("current")
_PathElementOtnDataUpTributaryTSMethod_Type = FspR7ManualAuto
_PathElementOtnDataUpTributaryTSMethod_Object = MibTableColumn
pathElementOtnDataUpTributaryTSMethod = _PathElementOtnDataUpTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 18),
    _PathElementOtnDataUpTributaryTSMethod_Type()
)
pathElementOtnDataUpTributaryTSMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataUpTributaryTSMethod.setStatus("current")
_PathElementOtnDataDownTributaryTSMethod_Type = FspR7ManualAuto
_PathElementOtnDataDownTributaryTSMethod_Object = MibTableColumn
pathElementOtnDataDownTributaryTSMethod = _PathElementOtnDataDownTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 66, 1, 19),
    _PathElementOtnDataDownTributaryTSMethod_Type()
)
pathElementOtnDataDownTributaryTSMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pathElementOtnDataDownTributaryTSMethod.setStatus("current")
_TeUnnumLinkOtnDataTable_Object = MibTable
teUnnumLinkOtnDataTable = _TeUnnumLinkOtnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67)
)
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataTable.setStatus("current")
_TeUnnumLinkOtnDataEntry_Object = MibTableRow
teUnnumLinkOtnDataEntry = _TeUnnumLinkOtnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1)
)
teUnnumLinkOtnDataEntry.setIndexNames(
    (0, "FspR7-MIB", "teRouterDataIp"),
    (0, "FspR7-MIB", "teUnnumLinkOtnDataNumber"),
)
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataEntry.setStatus("current")
_TeUnnumLinkOtnDataNumber_Type = Unsigned32
_TeUnnumLinkOtnDataNumber_Object = MibTableColumn
teUnnumLinkOtnDataNumber = _TeUnnumLinkOtnDataNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 1),
    _TeUnnumLinkOtnDataNumber_Type()
)
teUnnumLinkOtnDataNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataNumber.setStatus("current")
_TeUnnumLinkOtnDataNodeIp_Type = IpAddress
_TeUnnumLinkOtnDataNodeIp_Object = MibTableColumn
teUnnumLinkOtnDataNodeIp = _TeUnnumLinkOtnDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 2),
    _TeUnnumLinkOtnDataNodeIp_Type()
)
teUnnumLinkOtnDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataNodeIp.setStatus("current")
_TeUnnumLinkOtnDataNodeTid_Type = SnmpAdminString
_TeUnnumLinkOtnDataNodeTid_Object = MibTableColumn
teUnnumLinkOtnDataNodeTid = _TeUnnumLinkOtnDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 3),
    _TeUnnumLinkOtnDataNodeTid_Type()
)
teUnnumLinkOtnDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataNodeTid.setStatus("current")
_TeUnnumLinkOtnDataTeLinkId_Type = Unsigned32
_TeUnnumLinkOtnDataTeLinkId_Object = MibTableColumn
teUnnumLinkOtnDataTeLinkId = _TeUnnumLinkOtnDataTeLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 4),
    _TeUnnumLinkOtnDataTeLinkId_Type()
)
teUnnumLinkOtnDataTeLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataTeLinkId.setStatus("current")
_TeUnnumLinkOtnDataPhysicalLink_Type = Unsigned32
_TeUnnumLinkOtnDataPhysicalLink_Object = MibTableColumn
teUnnumLinkOtnDataPhysicalLink = _TeUnnumLinkOtnDataPhysicalLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 5),
    _TeUnnumLinkOtnDataPhysicalLink_Type()
)
teUnnumLinkOtnDataPhysicalLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataPhysicalLink.setStatus("current")
_TeUnnumLinkOtnDataSynchronization_Type = FspR7YesNo
_TeUnnumLinkOtnDataSynchronization_Object = MibTableColumn
teUnnumLinkOtnDataSynchronization = _TeUnnumLinkOtnDataSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 6),
    _TeUnnumLinkOtnDataSynchronization_Type()
)
teUnnumLinkOtnDataSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataSynchronization.setStatus("current")
_TeUnnumLinkOtnDataDiscarded_Type = FspR7YesNo
_TeUnnumLinkOtnDataDiscarded_Object = MibTableColumn
teUnnumLinkOtnDataDiscarded = _TeUnnumLinkOtnDataDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 7),
    _TeUnnumLinkOtnDataDiscarded_Type()
)
teUnnumLinkOtnDataDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataDiscarded.setStatus("current")
_TeUnnumLinkOtnDataFendNodeIp_Type = IpAddress
_TeUnnumLinkOtnDataFendNodeIp_Object = MibTableColumn
teUnnumLinkOtnDataFendNodeIp = _TeUnnumLinkOtnDataFendNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 8),
    _TeUnnumLinkOtnDataFendNodeIp_Type()
)
teUnnumLinkOtnDataFendNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataFendNodeIp.setStatus("current")
_TeUnnumLinkOtnDataFendTeLinkId_Type = Unsigned32
_TeUnnumLinkOtnDataFendTeLinkId_Object = MibTableColumn
teUnnumLinkOtnDataFendTeLinkId = _TeUnnumLinkOtnDataFendTeLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 9),
    _TeUnnumLinkOtnDataFendTeLinkId_Type()
)
teUnnumLinkOtnDataFendTeLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataFendTeLinkId.setStatus("current")
_TeUnnumLinkOtnDataInfo_Type = SnmpAdminString
_TeUnnumLinkOtnDataInfo_Object = MibTableColumn
teUnnumLinkOtnDataInfo = _TeUnnumLinkOtnDataInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 67, 1, 10),
    _TeUnnumLinkOtnDataInfo_Type()
)
teUnnumLinkOtnDataInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teUnnumLinkOtnDataInfo.setStatus("current")
_TeNumLinkOtnDataTable_Object = MibTable
teNumLinkOtnDataTable = _TeNumLinkOtnDataTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68)
)
if mibBuilder.loadTexts:
    teNumLinkOtnDataTable.setStatus("current")
_TeNumLinkOtnDataEntry_Object = MibTableRow
teNumLinkOtnDataEntry = _TeNumLinkOtnDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1)
)
teNumLinkOtnDataEntry.setIndexNames(
    (0, "FspR7-MIB", "teRouterDataIp"),
)
if mibBuilder.loadTexts:
    teNumLinkOtnDataEntry.setStatus("current")
_TeNumLinkOtnDataNodeIp_Type = IpAddress
_TeNumLinkOtnDataNodeIp_Object = MibTableColumn
teNumLinkOtnDataNodeIp = _TeNumLinkOtnDataNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 1),
    _TeNumLinkOtnDataNodeIp_Type()
)
teNumLinkOtnDataNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataNodeIp.setStatus("current")
_TeNumLinkOtnDataNodeTid_Type = SnmpAdminString
_TeNumLinkOtnDataNodeTid_Object = MibTableColumn
teNumLinkOtnDataNodeTid = _TeNumLinkOtnDataNodeTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 2),
    _TeNumLinkOtnDataNodeTid_Type()
)
teNumLinkOtnDataNodeTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataNodeTid.setStatus("current")
_TeNumLinkOtnDataTeLinkIp_Type = IpAddress
_TeNumLinkOtnDataTeLinkIp_Object = MibTableColumn
teNumLinkOtnDataTeLinkIp = _TeNumLinkOtnDataTeLinkIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 3),
    _TeNumLinkOtnDataTeLinkIp_Type()
)
teNumLinkOtnDataTeLinkIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataTeLinkIp.setStatus("current")
_TeNumLinkOtnDataPhysicalLink_Type = Unsigned32
_TeNumLinkOtnDataPhysicalLink_Object = MibTableColumn
teNumLinkOtnDataPhysicalLink = _TeNumLinkOtnDataPhysicalLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 4),
    _TeNumLinkOtnDataPhysicalLink_Type()
)
teNumLinkOtnDataPhysicalLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataPhysicalLink.setStatus("current")
_TeNumLinkOtnDataSynchronization_Type = FspR7YesNo
_TeNumLinkOtnDataSynchronization_Object = MibTableColumn
teNumLinkOtnDataSynchronization = _TeNumLinkOtnDataSynchronization_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 5),
    _TeNumLinkOtnDataSynchronization_Type()
)
teNumLinkOtnDataSynchronization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataSynchronization.setStatus("current")
_TeNumLinkOtnDataDiscarded_Type = FspR7YesNo
_TeNumLinkOtnDataDiscarded_Object = MibTableColumn
teNumLinkOtnDataDiscarded = _TeNumLinkOtnDataDiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 6),
    _TeNumLinkOtnDataDiscarded_Type()
)
teNumLinkOtnDataDiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataDiscarded.setStatus("current")
_TeNumLinkOtnDataFendNodeIp_Type = IpAddress
_TeNumLinkOtnDataFendNodeIp_Object = MibTableColumn
teNumLinkOtnDataFendNodeIp = _TeNumLinkOtnDataFendNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 7),
    _TeNumLinkOtnDataFendNodeIp_Type()
)
teNumLinkOtnDataFendNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataFendNodeIp.setStatus("current")
_TeNumLinkOtnDataFendTeLinkIp_Type = IpAddress
_TeNumLinkOtnDataFendTeLinkIp_Object = MibTableColumn
teNumLinkOtnDataFendTeLinkIp = _TeNumLinkOtnDataFendTeLinkIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 8),
    _TeNumLinkOtnDataFendTeLinkIp_Type()
)
teNumLinkOtnDataFendTeLinkIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataFendTeLinkIp.setStatus("current")
_TeNumLinkOtnDataInfo_Type = SnmpAdminString
_TeNumLinkOtnDataInfo_Object = MibTableColumn
teNumLinkOtnDataInfo = _TeNumLinkOtnDataInfo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 68, 1, 9),
    _TeNumLinkOtnDataInfo_Type()
)
teNumLinkOtnDataInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    teNumLinkOtnDataInfo.setStatus("current")
_InventoryCpWdmDownPointerTable_Object = MibTable
inventoryCpWdmDownPointerTable = _InventoryCpWdmDownPointerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 69)
)
if mibBuilder.loadTexts:
    inventoryCpWdmDownPointerTable.setStatus("current")
_InventoryCpWdmDownPointerEntry_Object = MibTableRow
inventoryCpWdmDownPointerEntry = _InventoryCpWdmDownPointerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 69, 1)
)
inventoryCpWdmDownPointerEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpWdmDownPointerNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpWdmDownPointerEntry.setStatus("current")
_InventoryCpWdmDownPointerNumber_Type = EntityIndex
_InventoryCpWdmDownPointerNumber_Object = MibTableColumn
inventoryCpWdmDownPointerNumber = _InventoryCpWdmDownPointerNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 69, 1, 1),
    _InventoryCpWdmDownPointerNumber_Type()
)
inventoryCpWdmDownPointerNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpWdmDownPointerNumber.setStatus("current")
_InventoryCpWdmDownPointerResources_Type = RowPointer
_InventoryCpWdmDownPointerResources_Object = MibTableColumn
inventoryCpWdmDownPointerResources = _InventoryCpWdmDownPointerResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 69, 1, 2),
    _InventoryCpWdmDownPointerResources_Type()
)
inventoryCpWdmDownPointerResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmDownPointerResources.setStatus("current")
_InventoryCpWdmDownPointerFacilities_Type = RowPointer
_InventoryCpWdmDownPointerFacilities_Object = MibTableColumn
inventoryCpWdmDownPointerFacilities = _InventoryCpWdmDownPointerFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 69, 1, 3),
    _InventoryCpWdmDownPointerFacilities_Type()
)
inventoryCpWdmDownPointerFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmDownPointerFacilities.setStatus("current")
_InventoryCpWdmDownPointerPhysTermPoints_Type = RowPointer
_InventoryCpWdmDownPointerPhysTermPoints_Object = MibTableColumn
inventoryCpWdmDownPointerPhysTermPoints = _InventoryCpWdmDownPointerPhysTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 69, 1, 4),
    _InventoryCpWdmDownPointerPhysTermPoints_Type()
)
inventoryCpWdmDownPointerPhysTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmDownPointerPhysTermPoints.setStatus("current")
_InventoryCpWdmUpPointerTable_Object = MibTable
inventoryCpWdmUpPointerTable = _InventoryCpWdmUpPointerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 70)
)
if mibBuilder.loadTexts:
    inventoryCpWdmUpPointerTable.setStatus("current")
_InventoryCpWdmUpPointerEntry_Object = MibTableRow
inventoryCpWdmUpPointerEntry = _InventoryCpWdmUpPointerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 70, 1)
)
inventoryCpWdmUpPointerEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpWdmUpPointerNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpWdmUpPointerEntry.setStatus("current")
_InventoryCpWdmUpPointerNumber_Type = EntityIndex
_InventoryCpWdmUpPointerNumber_Object = MibTableColumn
inventoryCpWdmUpPointerNumber = _InventoryCpWdmUpPointerNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 70, 1, 1),
    _InventoryCpWdmUpPointerNumber_Type()
)
inventoryCpWdmUpPointerNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpWdmUpPointerNumber.setStatus("current")
_InventoryCpWdmUpPointerResources_Type = RowPointer
_InventoryCpWdmUpPointerResources_Object = MibTableColumn
inventoryCpWdmUpPointerResources = _InventoryCpWdmUpPointerResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 70, 1, 2),
    _InventoryCpWdmUpPointerResources_Type()
)
inventoryCpWdmUpPointerResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmUpPointerResources.setStatus("current")
_InventoryCpWdmUpPointerFacilities_Type = RowPointer
_InventoryCpWdmUpPointerFacilities_Object = MibTableColumn
inventoryCpWdmUpPointerFacilities = _InventoryCpWdmUpPointerFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 70, 1, 3),
    _InventoryCpWdmUpPointerFacilities_Type()
)
inventoryCpWdmUpPointerFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmUpPointerFacilities.setStatus("current")
_InventoryCpWdmUpPointerPhysTermPoints_Type = RowPointer
_InventoryCpWdmUpPointerPhysTermPoints_Object = MibTableColumn
inventoryCpWdmUpPointerPhysTermPoints = _InventoryCpWdmUpPointerPhysTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 70, 1, 4),
    _InventoryCpWdmUpPointerPhysTermPoints_Type()
)
inventoryCpWdmUpPointerPhysTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpWdmUpPointerPhysTermPoints.setStatus("current")
_InventoryCpEthDownPointerTable_Object = MibTable
inventoryCpEthDownPointerTable = _InventoryCpEthDownPointerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 71)
)
if mibBuilder.loadTexts:
    inventoryCpEthDownPointerTable.setStatus("current")
_InventoryCpEthDownPointerEntry_Object = MibTableRow
inventoryCpEthDownPointerEntry = _InventoryCpEthDownPointerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 71, 1)
)
inventoryCpEthDownPointerEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthDownPointerNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpEthDownPointerEntry.setStatus("current")
_InventoryCpEthDownPointerNumber_Type = EntityIndex
_InventoryCpEthDownPointerNumber_Object = MibTableColumn
inventoryCpEthDownPointerNumber = _InventoryCpEthDownPointerNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 71, 1, 1),
    _InventoryCpEthDownPointerNumber_Type()
)
inventoryCpEthDownPointerNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpEthDownPointerNumber.setStatus("current")
_InventoryCpEthDownPointerResources_Type = RowPointer
_InventoryCpEthDownPointerResources_Object = MibTableColumn
inventoryCpEthDownPointerResources = _InventoryCpEthDownPointerResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 71, 1, 2),
    _InventoryCpEthDownPointerResources_Type()
)
inventoryCpEthDownPointerResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthDownPointerResources.setStatus("current")
_InventoryCpEthDownPointerFacilities_Type = RowPointer
_InventoryCpEthDownPointerFacilities_Object = MibTableColumn
inventoryCpEthDownPointerFacilities = _InventoryCpEthDownPointerFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 71, 1, 3),
    _InventoryCpEthDownPointerFacilities_Type()
)
inventoryCpEthDownPointerFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthDownPointerFacilities.setStatus("current")
_InventoryCpEthUpPointerTable_Object = MibTable
inventoryCpEthUpPointerTable = _InventoryCpEthUpPointerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 72)
)
if mibBuilder.loadTexts:
    inventoryCpEthUpPointerTable.setStatus("current")
_InventoryCpEthUpPointerEntry_Object = MibTableRow
inventoryCpEthUpPointerEntry = _InventoryCpEthUpPointerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 72, 1)
)
inventoryCpEthUpPointerEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpEthUpPointerNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpEthUpPointerEntry.setStatus("current")
_InventoryCpEthUpPointerNumber_Type = EntityIndex
_InventoryCpEthUpPointerNumber_Object = MibTableColumn
inventoryCpEthUpPointerNumber = _InventoryCpEthUpPointerNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 72, 1, 1),
    _InventoryCpEthUpPointerNumber_Type()
)
inventoryCpEthUpPointerNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpEthUpPointerNumber.setStatus("current")
_InventoryCpEthUpPointerResources_Type = RowPointer
_InventoryCpEthUpPointerResources_Object = MibTableColumn
inventoryCpEthUpPointerResources = _InventoryCpEthUpPointerResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 72, 1, 2),
    _InventoryCpEthUpPointerResources_Type()
)
inventoryCpEthUpPointerResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthUpPointerResources.setStatus("current")
_InventoryCpEthUpPointerFacilities_Type = RowPointer
_InventoryCpEthUpPointerFacilities_Object = MibTableColumn
inventoryCpEthUpPointerFacilities = _InventoryCpEthUpPointerFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 72, 1, 3),
    _InventoryCpEthUpPointerFacilities_Type()
)
inventoryCpEthUpPointerFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpEthUpPointerFacilities.setStatus("current")
_InventoryCpOtnDownPointerTable_Object = MibTable
inventoryCpOtnDownPointerTable = _InventoryCpOtnDownPointerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 73)
)
if mibBuilder.loadTexts:
    inventoryCpOtnDownPointerTable.setStatus("current")
_InventoryCpOtnDownPointerEntry_Object = MibTableRow
inventoryCpOtnDownPointerEntry = _InventoryCpOtnDownPointerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 73, 1)
)
inventoryCpOtnDownPointerEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpOtnDownPointerNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpOtnDownPointerEntry.setStatus("current")
_InventoryCpOtnDownPointerNumber_Type = EntityIndex
_InventoryCpOtnDownPointerNumber_Object = MibTableColumn
inventoryCpOtnDownPointerNumber = _InventoryCpOtnDownPointerNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 73, 1, 1),
    _InventoryCpOtnDownPointerNumber_Type()
)
inventoryCpOtnDownPointerNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpOtnDownPointerNumber.setStatus("current")
_InventoryCpOtnDownPointerResources_Type = RowPointer
_InventoryCpOtnDownPointerResources_Object = MibTableColumn
inventoryCpOtnDownPointerResources = _InventoryCpOtnDownPointerResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 73, 1, 2),
    _InventoryCpOtnDownPointerResources_Type()
)
inventoryCpOtnDownPointerResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnDownPointerResources.setStatus("current")
_InventoryCpOtnDownPointerFacilities_Type = RowPointer
_InventoryCpOtnDownPointerFacilities_Object = MibTableColumn
inventoryCpOtnDownPointerFacilities = _InventoryCpOtnDownPointerFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 73, 1, 3),
    _InventoryCpOtnDownPointerFacilities_Type()
)
inventoryCpOtnDownPointerFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnDownPointerFacilities.setStatus("current")
_InventoryCpOtnDownPointerPhysTermPoints_Type = RowPointer
_InventoryCpOtnDownPointerPhysTermPoints_Object = MibTableColumn
inventoryCpOtnDownPointerPhysTermPoints = _InventoryCpOtnDownPointerPhysTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 73, 1, 4),
    _InventoryCpOtnDownPointerPhysTermPoints_Type()
)
inventoryCpOtnDownPointerPhysTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnDownPointerPhysTermPoints.setStatus("current")
_InventoryCpOtnUpPointerTable_Object = MibTable
inventoryCpOtnUpPointerTable = _InventoryCpOtnUpPointerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 74)
)
if mibBuilder.loadTexts:
    inventoryCpOtnUpPointerTable.setStatus("current")
_InventoryCpOtnUpPointerEntry_Object = MibTableRow
inventoryCpOtnUpPointerEntry = _InventoryCpOtnUpPointerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 74, 1)
)
inventoryCpOtnUpPointerEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
    (0, "FspR7-MIB", "inventoryCpOtnUpPointerNumber"),
)
if mibBuilder.loadTexts:
    inventoryCpOtnUpPointerEntry.setStatus("current")
_InventoryCpOtnUpPointerNumber_Type = EntityIndex
_InventoryCpOtnUpPointerNumber_Object = MibTableColumn
inventoryCpOtnUpPointerNumber = _InventoryCpOtnUpPointerNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 74, 1, 1),
    _InventoryCpOtnUpPointerNumber_Type()
)
inventoryCpOtnUpPointerNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    inventoryCpOtnUpPointerNumber.setStatus("current")
_InventoryCpOtnUpPointerResources_Type = RowPointer
_InventoryCpOtnUpPointerResources_Object = MibTableColumn
inventoryCpOtnUpPointerResources = _InventoryCpOtnUpPointerResources_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 74, 1, 2),
    _InventoryCpOtnUpPointerResources_Type()
)
inventoryCpOtnUpPointerResources.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnUpPointerResources.setStatus("current")
_InventoryCpOtnUpPointerFacilities_Type = RowPointer
_InventoryCpOtnUpPointerFacilities_Object = MibTableColumn
inventoryCpOtnUpPointerFacilities = _InventoryCpOtnUpPointerFacilities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 74, 1, 3),
    _InventoryCpOtnUpPointerFacilities_Type()
)
inventoryCpOtnUpPointerFacilities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnUpPointerFacilities.setStatus("current")
_InventoryCpOtnUpPointerPhysicalTermPoints_Type = RowPointer
_InventoryCpOtnUpPointerPhysicalTermPoints_Object = MibTableColumn
inventoryCpOtnUpPointerPhysicalTermPoints = _InventoryCpOtnUpPointerPhysicalTermPoints_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 4, 7, 74, 1, 4),
    _InventoryCpOtnUpPointerPhysicalTermPoints_Type()
)
inventoryCpOtnUpPointerPhysicalTermPoints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inventoryCpOtnUpPointerPhysicalTermPoints.setStatus("current")
_DeploymentProvisioningMIB_ObjectIdentity = ObjectIdentity
deploymentProvisioningMIB = _DeploymentProvisioningMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5)
)
_ShelfDeployProv_ObjectIdentity = ObjectIdentity
shelfDeployProv = _ShelfDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1)
)
_DeployProvShelfTable_Object = MibTable
deployProvShelfTable = _DeployProvShelfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1)
)
if mibBuilder.loadTexts:
    deployProvShelfTable.setStatus("current")
_DeployProvShelfEntry_Object = MibTableRow
deployProvShelfEntry = _DeployProvShelfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1)
)
deployProvShelfEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvShelfEntry.setStatus("current")
_DeployProvShelfRowStatus_Type = RowStatus
_DeployProvShelfRowStatus_Object = MibTableColumn
deployProvShelfRowStatus = _DeployProvShelfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1, 1),
    _DeployProvShelfRowStatus_Type()
)
deployProvShelfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvShelfRowStatus.setStatus("current")
_DeployProvShelfForceDestroy_Type = FspR7ForcedStatus
_DeployProvShelfForceDestroy_Object = MibTableColumn
deployProvShelfForceDestroy = _DeployProvShelfForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1, 2),
    _DeployProvShelfForceDestroy_Type()
)
deployProvShelfForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvShelfForceDestroy.setStatus("current")
_DeployProvShelfType_Type = FspR7EquipmentType
_DeployProvShelfType_Object = MibTableColumn
deployProvShelfType = _DeployProvShelfType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1, 3),
    _DeployProvShelfType_Type()
)
deployProvShelfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvShelfType.setStatus("current")
_DeployProvShelfAdmin_Type = FspR7AdminState
_DeployProvShelfAdmin_Object = MibTableColumn
deployProvShelfAdmin = _DeployProvShelfAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1, 4),
    _DeployProvShelfAdmin_Type()
)
deployProvShelfAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvShelfAdmin.setStatus("current")
_DeployProvShelfSupply_Type = FspR7SupplyType
_DeployProvShelfSupply_Object = MibTableColumn
deployProvShelfSupply = _DeployProvShelfSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1, 5),
    _DeployProvShelfSupply_Type()
)
deployProvShelfSupply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvShelfSupply.setStatus("current")
_DeployProvShelfBand_Type = FspR7OpticalBand
_DeployProvShelfBand_Object = MibTableColumn
deployProvShelfBand = _DeployProvShelfBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1, 6),
    _DeployProvShelfBand_Type()
)
deployProvShelfBand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvShelfBand.setStatus("current")
_DeployProvShelfPsuOutputPower_Type = FspR7PsuOutputPower
_DeployProvShelfPsuOutputPower_Object = MibTableColumn
deployProvShelfPsuOutputPower = _DeployProvShelfPsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 1, 1, 7),
    _DeployProvShelfPsuOutputPower_Type()
)
deployProvShelfPsuOutputPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvShelfPsuOutputPower.setStatus("current")
_DeployProvShelfCapTable_Object = MibTable
deployProvShelfCapTable = _DeployProvShelfCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2)
)
if mibBuilder.loadTexts:
    deployProvShelfCapTable.setStatus("current")
_DeployProvShelfCapEntry_Object = MibTableRow
deployProvShelfCapEntry = _DeployProvShelfCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1)
)
deployProvShelfCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvShelfCapEntry.setStatus("current")
_DeployProvShelfCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvShelfCapRowStatus_Object = MibTableColumn
deployProvShelfCapRowStatus = _DeployProvShelfCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1, 1),
    _DeployProvShelfCapRowStatus_Type()
)
deployProvShelfCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfCapRowStatus.setStatus("current")
_DeployProvShelfCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvShelfCapForceDestroy_Object = MibTableColumn
deployProvShelfCapForceDestroy = _DeployProvShelfCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1, 2),
    _DeployProvShelfCapForceDestroy_Type()
)
deployProvShelfCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfCapForceDestroy.setStatus("current")
_DeployProvShelfCapType_Type = FspR7EquipmentTypeCaps
_DeployProvShelfCapType_Object = MibTableColumn
deployProvShelfCapType = _DeployProvShelfCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1, 3),
    _DeployProvShelfCapType_Type()
)
deployProvShelfCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfCapType.setStatus("current")
_DeployProvShelfCapAdmin_Type = FspR7AdminStateCaps
_DeployProvShelfCapAdmin_Object = MibTableColumn
deployProvShelfCapAdmin = _DeployProvShelfCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1, 4),
    _DeployProvShelfCapAdmin_Type()
)
deployProvShelfCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfCapAdmin.setStatus("current")
_DeployProvShelfCapSupply_Type = FspR7SupplyTypeCaps
_DeployProvShelfCapSupply_Object = MibTableColumn
deployProvShelfCapSupply = _DeployProvShelfCapSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1, 5),
    _DeployProvShelfCapSupply_Type()
)
deployProvShelfCapSupply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfCapSupply.setStatus("current")
_DeployProvShelfCapBand_Type = FspR7OpticalBandCaps
_DeployProvShelfCapBand_Object = MibTableColumn
deployProvShelfCapBand = _DeployProvShelfCapBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1, 6),
    _DeployProvShelfCapBand_Type()
)
deployProvShelfCapBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfCapBand.setStatus("current")
_DeployProvShelfCapPsuOutputPower_Type = FspR7PsuOutputPowerCaps
_DeployProvShelfCapPsuOutputPower_Object = MibTableColumn
deployProvShelfCapPsuOutputPower = _DeployProvShelfCapPsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 2, 1, 7),
    _DeployProvShelfCapPsuOutputPower_Type()
)
deployProvShelfCapPsuOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfCapPsuOutputPower.setStatus("current")
_DeployProvShelfDefaultsTable_Object = MibTable
deployProvShelfDefaultsTable = _DeployProvShelfDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3)
)
if mibBuilder.loadTexts:
    deployProvShelfDefaultsTable.setStatus("current")
_DeployProvShelfDefaultsEntry_Object = MibTableRow
deployProvShelfDefaultsEntry = _DeployProvShelfDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1)
)
deployProvShelfDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvShelfDefaultsEntry.setStatus("current")
_DeployProvShelfDefaultsRowStatus_Type = RowStatus
_DeployProvShelfDefaultsRowStatus_Object = MibTableColumn
deployProvShelfDefaultsRowStatus = _DeployProvShelfDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1, 1),
    _DeployProvShelfDefaultsRowStatus_Type()
)
deployProvShelfDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfDefaultsRowStatus.setStatus("current")
_DeployProvShelfDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvShelfDefaultsForceDestroy_Object = MibTableColumn
deployProvShelfDefaultsForceDestroy = _DeployProvShelfDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1, 2),
    _DeployProvShelfDefaultsForceDestroy_Type()
)
deployProvShelfDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfDefaultsForceDestroy.setStatus("current")
_DeployProvShelfDefaultsType_Type = FspR7EquipmentType
_DeployProvShelfDefaultsType_Object = MibTableColumn
deployProvShelfDefaultsType = _DeployProvShelfDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1, 3),
    _DeployProvShelfDefaultsType_Type()
)
deployProvShelfDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfDefaultsType.setStatus("current")
_DeployProvShelfDefaultsAdmin_Type = FspR7AdminState
_DeployProvShelfDefaultsAdmin_Object = MibTableColumn
deployProvShelfDefaultsAdmin = _DeployProvShelfDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1, 4),
    _DeployProvShelfDefaultsAdmin_Type()
)
deployProvShelfDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfDefaultsAdmin.setStatus("current")
_DeployProvShelfDefaultsSupply_Type = FspR7SupplyType
_DeployProvShelfDefaultsSupply_Object = MibTableColumn
deployProvShelfDefaultsSupply = _DeployProvShelfDefaultsSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1, 5),
    _DeployProvShelfDefaultsSupply_Type()
)
deployProvShelfDefaultsSupply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfDefaultsSupply.setStatus("current")
_DeployProvShelfDefaultsBand_Type = FspR7OpticalBand
_DeployProvShelfDefaultsBand_Object = MibTableColumn
deployProvShelfDefaultsBand = _DeployProvShelfDefaultsBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1, 6),
    _DeployProvShelfDefaultsBand_Type()
)
deployProvShelfDefaultsBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfDefaultsBand.setStatus("current")
_DeployProvShelfDefaultsPsuOutputPower_Type = FspR7PsuOutputPower
_DeployProvShelfDefaultsPsuOutputPower_Object = MibTableColumn
deployProvShelfDefaultsPsuOutputPower = _DeployProvShelfDefaultsPsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 1, 3, 1, 7),
    _DeployProvShelfDefaultsPsuOutputPower_Type()
)
deployProvShelfDefaultsPsuOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvShelfDefaultsPsuOutputPower.setStatus("current")
_ModuleDeployProv_ObjectIdentity = ObjectIdentity
moduleDeployProv = _ModuleDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2)
)
_DeployProvModuleTable_Object = MibTable
deployProvModuleTable = _DeployProvModuleTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1)
)
if mibBuilder.loadTexts:
    deployProvModuleTable.setStatus("current")
_DeployProvModuleEntry_Object = MibTableRow
deployProvModuleEntry = _DeployProvModuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1)
)
deployProvModuleEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvModuleEntry.setStatus("current")
_DeployProvModuleRowStatus_Type = RowStatus
_DeployProvModuleRowStatus_Object = MibTableColumn
deployProvModuleRowStatus = _DeployProvModuleRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 1),
    _DeployProvModuleRowStatus_Type()
)
deployProvModuleRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleRowStatus.setStatus("current")
_DeployProvModuleForceDestroy_Type = FspR7ForcedStatus
_DeployProvModuleForceDestroy_Object = MibTableColumn
deployProvModuleForceDestroy = _DeployProvModuleForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 2),
    _DeployProvModuleForceDestroy_Type()
)
deployProvModuleForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleForceDestroy.setStatus("current")
_DeployProvModuleType_Type = FspR7EquipmentType
_DeployProvModuleType_Object = MibTableColumn
deployProvModuleType = _DeployProvModuleType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 3),
    _DeployProvModuleType_Type()
)
deployProvModuleType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleType.setStatus("current")
_DeployProvModuleMode_Type = FspR7TransmissionMode
_DeployProvModuleMode_Object = MibTableColumn
deployProvModuleMode = _DeployProvModuleMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 4),
    _DeployProvModuleMode_Type()
)
deployProvModuleMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleMode.setStatus("current")
_DeployProvModuleDeploy_Type = FspR7DeploymentScenario
_DeployProvModuleDeploy_Object = MibTableColumn
deployProvModuleDeploy = _DeployProvModuleDeploy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 5),
    _DeployProvModuleDeploy_Type()
)
deployProvModuleDeploy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleDeploy.setStatus("current")
_DeployProvModuleChannel_Type = FspR7ChannelIdentifier
_DeployProvModuleChannel_Object = MibTableColumn
deployProvModuleChannel = _DeployProvModuleChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 6),
    _DeployProvModuleChannel_Type()
)
deployProvModuleChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleChannel.setStatus("current")
_DeployProvModuleReach_Type = FspR7OpticalInterfaceReach
_DeployProvModuleReach_Object = MibTableColumn
deployProvModuleReach = _DeployProvModuleReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 7),
    _DeployProvModuleReach_Type()
)
deployProvModuleReach.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleReach.setStatus("current")
_DeployProvModuleBand_Type = FspR7OpticalBand
_DeployProvModuleBand_Object = MibTableColumn
deployProvModuleBand = _DeployProvModuleBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 8),
    _DeployProvModuleBand_Type()
)
deployProvModuleBand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleBand.setStatus("current")
_DeployProvModuleSubBand_Type = FspR7OpticalSubBand
_DeployProvModuleSubBand_Object = MibTableColumn
deployProvModuleSubBand = _DeployProvModuleSubBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 9),
    _DeployProvModuleSubBand_Type()
)
deployProvModuleSubBand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleSubBand.setStatus("current")
_DeployProvModuleGroup_Type = FspR7OpticalGroup
_DeployProvModuleGroup_Object = MibTableColumn
deployProvModuleGroup = _DeployProvModuleGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 10),
    _DeployProvModuleGroup_Type()
)
deployProvModuleGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleGroup.setStatus("current")
_DeployProvModuleFiber_Type = FspR7OpticalFiberType
_DeployProvModuleFiber_Object = MibTableColumn
deployProvModuleFiber = _DeployProvModuleFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 11),
    _DeployProvModuleFiber_Type()
)
deployProvModuleFiber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleFiber.setStatus("current")
_DeployProvModuleEdfaPwrOut_Type = FspR7EdfaOutputPowerRating
_DeployProvModuleEdfaPwrOut_Object = MibTableColumn
deployProvModuleEdfaPwrOut = _DeployProvModuleEdfaPwrOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 12),
    _DeployProvModuleEdfaPwrOut_Type()
)
deployProvModuleEdfaPwrOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleEdfaPwrOut.setStatus("current")
_DeployProvModuleAdmin_Type = FspR7AdminState
_DeployProvModuleAdmin_Object = MibTableColumn
deployProvModuleAdmin = _DeployProvModuleAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 13),
    _DeployProvModuleAdmin_Type()
)
deployProvModuleAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleAdmin.setStatus("current")
_DeployProvModuleSupply_Type = FspR7SupplyType
_DeployProvModuleSupply_Object = MibTableColumn
deployProvModuleSupply = _DeployProvModuleSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 14),
    _DeployProvModuleSupply_Type()
)
deployProvModuleSupply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleSupply.setStatus("current")
_DeployProvModuleDispersionCompensation_Type = FspR7DispersionCompensation
_DeployProvModuleDispersionCompensation_Object = MibTableColumn
deployProvModuleDispersionCompensation = _DeployProvModuleDispersionCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 15),
    _DeployProvModuleDispersionCompensation_Type()
)
deployProvModuleDispersionCompensation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleDispersionCompensation.setStatus("current")
_DeployProvModuleLanAid_Type = EntityIndex
_DeployProvModuleLanAid_Object = MibTableColumn
deployProvModuleLanAid = _DeployProvModuleLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 16),
    _DeployProvModuleLanAid_Type()
)
deployProvModuleLanAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleLanAid.setStatus("current")
_DeployProvModuleSingleFiberLocation_Type = FspR7SingleFiberLocation
_DeployProvModuleSingleFiberLocation_Object = MibTableColumn
deployProvModuleSingleFiberLocation = _DeployProvModuleSingleFiberLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 17),
    _DeployProvModuleSingleFiberLocation_Type()
)
deployProvModuleSingleFiberLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleSingleFiberLocation.setStatus("current")
_DeployProvModulePsuOutputPower_Type = FspR7PsuOutputPower
_DeployProvModulePsuOutputPower_Object = MibTableColumn
deployProvModulePsuOutputPower = _DeployProvModulePsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 18),
    _DeployProvModulePsuOutputPower_Type()
)
deployProvModulePsuOutputPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModulePsuOutputPower.setStatus("current")


class _DeployProvModuleTilt_Type(Integer32):
    """Custom type deployProvModuleTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvModuleTilt_Type.__name__ = "Integer32"
_DeployProvModuleTilt_Object = MibTableColumn
deployProvModuleTilt = _DeployProvModuleTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 19),
    _DeployProvModuleTilt_Type()
)
deployProvModuleTilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleTilt.setStatus("current")
if mibBuilder.loadTexts:
    deployProvModuleTilt.setUnits("0.1 dB")
_DeployProvModuleGain_Type = FspR7Gain
_DeployProvModuleGain_Object = MibTableColumn
deployProvModuleGain = _DeployProvModuleGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 20),
    _DeployProvModuleGain_Type()
)
deployProvModuleGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleGain.setStatus("current")
_DeployProvModuleCapabilityLevel_Type = FspR7CapInventory
_DeployProvModuleCapabilityLevel_Object = MibTableColumn
deployProvModuleCapabilityLevel = _DeployProvModuleCapabilityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 21),
    _DeployProvModuleCapabilityLevel_Type()
)
deployProvModuleCapabilityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleCapabilityLevel.setStatus("current")
_DeployProvModuleRoadmNumber_Type = FspR7RoadmNumber
_DeployProvModuleRoadmNumber_Object = MibTableColumn
deployProvModuleRoadmNumber = _DeployProvModuleRoadmNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 22),
    _DeployProvModuleRoadmNumber_Type()
)
deployProvModuleRoadmNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleRoadmNumber.setStatus("current")
_DeployProvModuleScrambling_Type = FspR7Scrambling
_DeployProvModuleScrambling_Object = MibTableColumn
deployProvModuleScrambling = _DeployProvModuleScrambling_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 23),
    _DeployProvModuleScrambling_Type()
)
deployProvModuleScrambling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleScrambling.setStatus("current")
_DeployProvModuleChannelSpacing_Type = FspR7ChannelSpacing
_DeployProvModuleChannelSpacing_Object = MibTableColumn
deployProvModuleChannelSpacing = _DeployProvModuleChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 24),
    _DeployProvModuleChannelSpacing_Type()
)
deployProvModuleChannelSpacing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleChannelSpacing.setStatus("current")


class _DeployProvModuleLagSysPrio_Type(Unsigned32):
    """Custom type deployProvModuleLagSysPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvModuleLagSysPrio_Type.__name__ = "Unsigned32"
_DeployProvModuleLagSysPrio_Object = MibTableColumn
deployProvModuleLagSysPrio = _DeployProvModuleLagSysPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 25),
    _DeployProvModuleLagSysPrio_Type()
)
deployProvModuleLagSysPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleLagSysPrio.setStatus("current")
_DeployProvModuleGainRange_Type = FspR7GainRange
_DeployProvModuleGainRange_Object = MibTableColumn
deployProvModuleGainRange = _DeployProvModuleGainRange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 26),
    _DeployProvModuleGainRange_Type()
)
deployProvModuleGainRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleGainRange.setStatus("current")
_DeployProvModuleEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvModuleEqlzAdmin_Object = MibTableColumn
deployProvModuleEqlzAdmin = _DeployProvModuleEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 27),
    _DeployProvModuleEqlzAdmin_Type()
)
deployProvModuleEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleEqlzAdmin.setStatus("current")
_DeployProvModuleChannelsNumber_Type = FspR7NumberOfChannels
_DeployProvModuleChannelsNumber_Object = MibTableColumn
deployProvModuleChannelsNumber = _DeployProvModuleChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 28),
    _DeployProvModuleChannelsNumber_Type()
)
deployProvModuleChannelsNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleChannelsNumber.setStatus("current")
_DeployProvModuleDCFiberType_Type = FspR7DCFiberType
_DeployProvModuleDCFiberType_Object = MibTableColumn
deployProvModuleDCFiberType = _DeployProvModuleDCFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 29),
    _DeployProvModuleDCFiberType_Type()
)
deployProvModuleDCFiberType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleDCFiberType.setStatus("current")
_DeployProvModuleMapping_Type = FspR7Mapping
_DeployProvModuleMapping_Object = MibTableColumn
deployProvModuleMapping = _DeployProvModuleMapping_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 30),
    _DeployProvModuleMapping_Type()
)
deployProvModuleMapping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleMapping.setStatus("current")
_DeployProvModuleCac_Type = FspR7L2CacEnable
_DeployProvModuleCac_Object = MibTableColumn
deployProvModuleCac = _DeployProvModuleCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 31),
    _DeployProvModuleCac_Type()
)
deployProvModuleCac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleCac.setStatus("current")
_DeployProvModuleChannelSpacingProvision_Type = FspR7ChannelSpacing
_DeployProvModuleChannelSpacingProvision_Object = MibTableColumn
deployProvModuleChannelSpacingProvision = _DeployProvModuleChannelSpacingProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 32),
    _DeployProvModuleChannelSpacingProvision_Type()
)
deployProvModuleChannelSpacingProvision.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleChannelSpacingProvision.setStatus("current")
_DeployProvModuleChannelsProvision_Type = FspR7NumberOfChannels
_DeployProvModuleChannelsProvision_Object = MibTableColumn
deployProvModuleChannelsProvision = _DeployProvModuleChannelsProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 33),
    _DeployProvModuleChannelsProvision_Type()
)
deployProvModuleChannelsProvision.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleChannelsProvision.setStatus("current")
_DeployProvModuleFiberDetect_Type = FspR7FiberDetect
_DeployProvModuleFiberDetect_Object = MibTableColumn
deployProvModuleFiberDetect = _DeployProvModuleFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 34),
    _DeployProvModuleFiberDetect_Type()
)
deployProvModuleFiberDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleFiberDetect.setStatus("current")
_DeployProvModuleTrafficDirection_Type = FspR7TrafficDirection
_DeployProvModuleTrafficDirection_Object = MibTableColumn
deployProvModuleTrafficDirection = _DeployProvModuleTrafficDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 35),
    _DeployProvModuleTrafficDirection_Type()
)
deployProvModuleTrafficDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleTrafficDirection.setStatus("current")
_DeployProvModuleOscUsage_Type = FspR7OscUsage
_DeployProvModuleOscUsage_Object = MibTableColumn
deployProvModuleOscUsage = _DeployProvModuleOscUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 1, 1, 36),
    _DeployProvModuleOscUsage_Type()
)
deployProvModuleOscUsage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvModuleOscUsage.setStatus("current")
_DeployProvModuleCapTable_Object = MibTable
deployProvModuleCapTable = _DeployProvModuleCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2)
)
if mibBuilder.loadTexts:
    deployProvModuleCapTable.setStatus("current")
_DeployProvModuleCapEntry_Object = MibTableRow
deployProvModuleCapEntry = _DeployProvModuleCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1)
)
deployProvModuleCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvModuleCapEntry.setStatus("current")
_DeployProvModuleCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvModuleCapRowStatus_Object = MibTableColumn
deployProvModuleCapRowStatus = _DeployProvModuleCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 1),
    _DeployProvModuleCapRowStatus_Type()
)
deployProvModuleCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapRowStatus.setStatus("current")
_DeployProvModuleCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvModuleCapForceDestroy_Object = MibTableColumn
deployProvModuleCapForceDestroy = _DeployProvModuleCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 2),
    _DeployProvModuleCapForceDestroy_Type()
)
deployProvModuleCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapForceDestroy.setStatus("current")
_DeployProvModuleCapType_Type = FspR7EquipmentTypeCaps
_DeployProvModuleCapType_Object = MibTableColumn
deployProvModuleCapType = _DeployProvModuleCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 3),
    _DeployProvModuleCapType_Type()
)
deployProvModuleCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapType.setStatus("current")
_DeployProvModuleCapMode_Type = FspR7TransmissionModeCaps
_DeployProvModuleCapMode_Object = MibTableColumn
deployProvModuleCapMode = _DeployProvModuleCapMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 4),
    _DeployProvModuleCapMode_Type()
)
deployProvModuleCapMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapMode.setStatus("current")
_DeployProvModuleCapDeploy_Type = FspR7DeploymentScenarioCaps
_DeployProvModuleCapDeploy_Object = MibTableColumn
deployProvModuleCapDeploy = _DeployProvModuleCapDeploy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 5),
    _DeployProvModuleCapDeploy_Type()
)
deployProvModuleCapDeploy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapDeploy.setStatus("current")
_DeployProvModuleCapChannel_Type = FspR7ChannelIdentifierCaps
_DeployProvModuleCapChannel_Object = MibTableColumn
deployProvModuleCapChannel = _DeployProvModuleCapChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 6),
    _DeployProvModuleCapChannel_Type()
)
deployProvModuleCapChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapChannel.setStatus("current")
_DeployProvModuleCapReach_Type = FspR7OpticalInterfaceReachCaps
_DeployProvModuleCapReach_Object = MibTableColumn
deployProvModuleCapReach = _DeployProvModuleCapReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 7),
    _DeployProvModuleCapReach_Type()
)
deployProvModuleCapReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapReach.setStatus("current")
_DeployProvModuleCapBand_Type = FspR7OpticalBandCaps
_DeployProvModuleCapBand_Object = MibTableColumn
deployProvModuleCapBand = _DeployProvModuleCapBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 8),
    _DeployProvModuleCapBand_Type()
)
deployProvModuleCapBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapBand.setStatus("current")
_DeployProvModuleCapSubBand_Type = FspR7OpticalSubBandCaps
_DeployProvModuleCapSubBand_Object = MibTableColumn
deployProvModuleCapSubBand = _DeployProvModuleCapSubBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 9),
    _DeployProvModuleCapSubBand_Type()
)
deployProvModuleCapSubBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapSubBand.setStatus("current")
_DeployProvModuleCapGroup_Type = FspR7OpticalGroupCaps
_DeployProvModuleCapGroup_Object = MibTableColumn
deployProvModuleCapGroup = _DeployProvModuleCapGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 10),
    _DeployProvModuleCapGroup_Type()
)
deployProvModuleCapGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapGroup.setStatus("current")
_DeployProvModuleCapFiber_Type = FspR7OpticalFiberTypeCaps
_DeployProvModuleCapFiber_Object = MibTableColumn
deployProvModuleCapFiber = _DeployProvModuleCapFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 11),
    _DeployProvModuleCapFiber_Type()
)
deployProvModuleCapFiber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapFiber.setStatus("current")
_DeployProvModuleCapEdfaPwrOut_Type = FspR7EdfaOutputPowerRatingCaps
_DeployProvModuleCapEdfaPwrOut_Object = MibTableColumn
deployProvModuleCapEdfaPwrOut = _DeployProvModuleCapEdfaPwrOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 12),
    _DeployProvModuleCapEdfaPwrOut_Type()
)
deployProvModuleCapEdfaPwrOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapEdfaPwrOut.setStatus("current")
_DeployProvModuleCapAdmin_Type = FspR7AdminStateCaps
_DeployProvModuleCapAdmin_Object = MibTableColumn
deployProvModuleCapAdmin = _DeployProvModuleCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 13),
    _DeployProvModuleCapAdmin_Type()
)
deployProvModuleCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapAdmin.setStatus("current")
_DeployProvModuleCapSupply_Type = FspR7SupplyTypeCaps
_DeployProvModuleCapSupply_Object = MibTableColumn
deployProvModuleCapSupply = _DeployProvModuleCapSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 14),
    _DeployProvModuleCapSupply_Type()
)
deployProvModuleCapSupply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapSupply.setStatus("current")
_DeployProvModuleCapDispersionCompensation_Type = FspR7DispersionCompensationCaps
_DeployProvModuleCapDispersionCompensation_Object = MibTableColumn
deployProvModuleCapDispersionCompensation = _DeployProvModuleCapDispersionCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 15),
    _DeployProvModuleCapDispersionCompensation_Type()
)
deployProvModuleCapDispersionCompensation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapDispersionCompensation.setStatus("current")
_DeployProvModuleCapLanAid_Type = Integer32
_DeployProvModuleCapLanAid_Object = MibTableColumn
deployProvModuleCapLanAid = _DeployProvModuleCapLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 16),
    _DeployProvModuleCapLanAid_Type()
)
deployProvModuleCapLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapLanAid.setStatus("current")
_DeployProvModuleCapSingleFiberLocation_Type = FspR7SingleFiberLocationCaps
_DeployProvModuleCapSingleFiberLocation_Object = MibTableColumn
deployProvModuleCapSingleFiberLocation = _DeployProvModuleCapSingleFiberLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 17),
    _DeployProvModuleCapSingleFiberLocation_Type()
)
deployProvModuleCapSingleFiberLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapSingleFiberLocation.setStatus("current")
_DeployProvModuleCapPsuOutputPower_Type = FspR7PsuOutputPowerCaps
_DeployProvModuleCapPsuOutputPower_Object = MibTableColumn
deployProvModuleCapPsuOutputPower = _DeployProvModuleCapPsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 18),
    _DeployProvModuleCapPsuOutputPower_Type()
)
deployProvModuleCapPsuOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapPsuOutputPower.setStatus("current")
_DeployProvModuleCapTilt_Type = FspR7Integer32Caps
_DeployProvModuleCapTilt_Object = MibTableColumn
deployProvModuleCapTilt = _DeployProvModuleCapTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 19),
    _DeployProvModuleCapTilt_Type()
)
deployProvModuleCapTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapTilt.setStatus("current")
if mibBuilder.loadTexts:
    deployProvModuleCapTilt.setUnits("0.1 dB")
_DeployProvModuleCapGain_Type = FspR7GainCaps
_DeployProvModuleCapGain_Object = MibTableColumn
deployProvModuleCapGain = _DeployProvModuleCapGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 20),
    _DeployProvModuleCapGain_Type()
)
deployProvModuleCapGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapGain.setStatus("current")
_DeployProvModuleCapCapabilityLevel_Type = FspR7CapInventoryCaps
_DeployProvModuleCapCapabilityLevel_Object = MibTableColumn
deployProvModuleCapCapabilityLevel = _DeployProvModuleCapCapabilityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 21),
    _DeployProvModuleCapCapabilityLevel_Type()
)
deployProvModuleCapCapabilityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapCapabilityLevel.setStatus("current")
_DeployProvModuleCapRoadmNumber_Type = FspR7RoadmNumberCaps
_DeployProvModuleCapRoadmNumber_Object = MibTableColumn
deployProvModuleCapRoadmNumber = _DeployProvModuleCapRoadmNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 22),
    _DeployProvModuleCapRoadmNumber_Type()
)
deployProvModuleCapRoadmNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapRoadmNumber.setStatus("current")
_DeployProvModuleCapScrambling_Type = FspR7ScramblingCaps
_DeployProvModuleCapScrambling_Object = MibTableColumn
deployProvModuleCapScrambling = _DeployProvModuleCapScrambling_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 23),
    _DeployProvModuleCapScrambling_Type()
)
deployProvModuleCapScrambling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapScrambling.setStatus("current")
_DeployProvModuleCapChannelSpacing_Type = FspR7ChannelSpacingCaps
_DeployProvModuleCapChannelSpacing_Object = MibTableColumn
deployProvModuleCapChannelSpacing = _DeployProvModuleCapChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 24),
    _DeployProvModuleCapChannelSpacing_Type()
)
deployProvModuleCapChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapChannelSpacing.setStatus("current")
_DeployProvModuleCapLagSysPrio_Type = FspR7Unsigned32Caps
_DeployProvModuleCapLagSysPrio_Object = MibTableColumn
deployProvModuleCapLagSysPrio = _DeployProvModuleCapLagSysPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 25),
    _DeployProvModuleCapLagSysPrio_Type()
)
deployProvModuleCapLagSysPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapLagSysPrio.setStatus("current")
_DeployProvModuleCapGainRange_Type = FspR7GainRangeCaps
_DeployProvModuleCapGainRange_Object = MibTableColumn
deployProvModuleCapGainRange = _DeployProvModuleCapGainRange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 26),
    _DeployProvModuleCapGainRange_Type()
)
deployProvModuleCapGainRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapGainRange.setStatus("current")
_DeployProvModuleCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_DeployProvModuleCapEqlzAdmin_Object = MibTableColumn
deployProvModuleCapEqlzAdmin = _DeployProvModuleCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 27),
    _DeployProvModuleCapEqlzAdmin_Type()
)
deployProvModuleCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapEqlzAdmin.setStatus("current")
_DeployProvModuleCapChannelsNumber_Type = FspR7NumberOfChannelsCaps
_DeployProvModuleCapChannelsNumber_Object = MibTableColumn
deployProvModuleCapChannelsNumber = _DeployProvModuleCapChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 28),
    _DeployProvModuleCapChannelsNumber_Type()
)
deployProvModuleCapChannelsNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapChannelsNumber.setStatus("current")
_DeployProvModuleCapDCFiberType_Type = FspR7DCFiberTypeCaps
_DeployProvModuleCapDCFiberType_Object = MibTableColumn
deployProvModuleCapDCFiberType = _DeployProvModuleCapDCFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 29),
    _DeployProvModuleCapDCFiberType_Type()
)
deployProvModuleCapDCFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapDCFiberType.setStatus("current")
_DeployProvModuleCapMapping_Type = FspR7MappingCaps
_DeployProvModuleCapMapping_Object = MibTableColumn
deployProvModuleCapMapping = _DeployProvModuleCapMapping_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 30),
    _DeployProvModuleCapMapping_Type()
)
deployProvModuleCapMapping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapMapping.setStatus("current")
_DeployProvModuleCapCac_Type = FspR7L2CacEnableCaps
_DeployProvModuleCapCac_Object = MibTableColumn
deployProvModuleCapCac = _DeployProvModuleCapCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 31),
    _DeployProvModuleCapCac_Type()
)
deployProvModuleCapCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapCac.setStatus("current")
_DeployProvModuleCapChannelSpacingProvision_Type = FspR7ChannelSpacingCaps
_DeployProvModuleCapChannelSpacingProvision_Object = MibTableColumn
deployProvModuleCapChannelSpacingProvision = _DeployProvModuleCapChannelSpacingProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 32),
    _DeployProvModuleCapChannelSpacingProvision_Type()
)
deployProvModuleCapChannelSpacingProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapChannelSpacingProvision.setStatus("current")
_DeployProvModuleCapChannelsProvision_Type = FspR7NumberOfChannelsCaps
_DeployProvModuleCapChannelsProvision_Object = MibTableColumn
deployProvModuleCapChannelsProvision = _DeployProvModuleCapChannelsProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 33),
    _DeployProvModuleCapChannelsProvision_Type()
)
deployProvModuleCapChannelsProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapChannelsProvision.setStatus("current")
_DeployProvModuleCapFiberDetect_Type = FspR7FiberDetectCaps
_DeployProvModuleCapFiberDetect_Object = MibTableColumn
deployProvModuleCapFiberDetect = _DeployProvModuleCapFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 34),
    _DeployProvModuleCapFiberDetect_Type()
)
deployProvModuleCapFiberDetect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapFiberDetect.setStatus("current")
_DeployProvModuleCapTrafficDirection_Type = FspR7TrafficDirectionCaps
_DeployProvModuleCapTrafficDirection_Object = MibTableColumn
deployProvModuleCapTrafficDirection = _DeployProvModuleCapTrafficDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 35),
    _DeployProvModuleCapTrafficDirection_Type()
)
deployProvModuleCapTrafficDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapTrafficDirection.setStatus("current")
_DeployProvModuleCapOscUsage_Type = FspR7OscUsageCaps
_DeployProvModuleCapOscUsage_Object = MibTableColumn
deployProvModuleCapOscUsage = _DeployProvModuleCapOscUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 2, 1, 36),
    _DeployProvModuleCapOscUsage_Type()
)
deployProvModuleCapOscUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleCapOscUsage.setStatus("current")
_DeployProvModuleDefaultsTable_Object = MibTable
deployProvModuleDefaultsTable = _DeployProvModuleDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3)
)
if mibBuilder.loadTexts:
    deployProvModuleDefaultsTable.setStatus("current")
_DeployProvModuleDefaultsEntry_Object = MibTableRow
deployProvModuleDefaultsEntry = _DeployProvModuleDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1)
)
deployProvModuleDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvModuleDefaultsEntry.setStatus("current")
_DeployProvModuleDefaultsRowStatus_Type = RowStatus
_DeployProvModuleDefaultsRowStatus_Object = MibTableColumn
deployProvModuleDefaultsRowStatus = _DeployProvModuleDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 1),
    _DeployProvModuleDefaultsRowStatus_Type()
)
deployProvModuleDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsRowStatus.setStatus("current")
_DeployProvModuleDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvModuleDefaultsForceDestroy_Object = MibTableColumn
deployProvModuleDefaultsForceDestroy = _DeployProvModuleDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 2),
    _DeployProvModuleDefaultsForceDestroy_Type()
)
deployProvModuleDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsForceDestroy.setStatus("current")
_DeployProvModuleDefaultsType_Type = FspR7EquipmentType
_DeployProvModuleDefaultsType_Object = MibTableColumn
deployProvModuleDefaultsType = _DeployProvModuleDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 3),
    _DeployProvModuleDefaultsType_Type()
)
deployProvModuleDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsType.setStatus("current")
_DeployProvModuleDefaultsMode_Type = FspR7TransmissionMode
_DeployProvModuleDefaultsMode_Object = MibTableColumn
deployProvModuleDefaultsMode = _DeployProvModuleDefaultsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 4),
    _DeployProvModuleDefaultsMode_Type()
)
deployProvModuleDefaultsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsMode.setStatus("current")
_DeployProvModuleDefaultsDeploy_Type = FspR7DeploymentScenario
_DeployProvModuleDefaultsDeploy_Object = MibTableColumn
deployProvModuleDefaultsDeploy = _DeployProvModuleDefaultsDeploy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 5),
    _DeployProvModuleDefaultsDeploy_Type()
)
deployProvModuleDefaultsDeploy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsDeploy.setStatus("current")
_DeployProvModuleDefaultsChannel_Type = FspR7ChannelIdentifier
_DeployProvModuleDefaultsChannel_Object = MibTableColumn
deployProvModuleDefaultsChannel = _DeployProvModuleDefaultsChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 6),
    _DeployProvModuleDefaultsChannel_Type()
)
deployProvModuleDefaultsChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsChannel.setStatus("current")
_DeployProvModuleDefaultsReach_Type = FspR7OpticalInterfaceReach
_DeployProvModuleDefaultsReach_Object = MibTableColumn
deployProvModuleDefaultsReach = _DeployProvModuleDefaultsReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 7),
    _DeployProvModuleDefaultsReach_Type()
)
deployProvModuleDefaultsReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsReach.setStatus("current")
_DeployProvModuleDefaultsBand_Type = FspR7OpticalBand
_DeployProvModuleDefaultsBand_Object = MibTableColumn
deployProvModuleDefaultsBand = _DeployProvModuleDefaultsBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 8),
    _DeployProvModuleDefaultsBand_Type()
)
deployProvModuleDefaultsBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsBand.setStatus("current")
_DeployProvModuleDefaultsSubBand_Type = FspR7OpticalSubBand
_DeployProvModuleDefaultsSubBand_Object = MibTableColumn
deployProvModuleDefaultsSubBand = _DeployProvModuleDefaultsSubBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 9),
    _DeployProvModuleDefaultsSubBand_Type()
)
deployProvModuleDefaultsSubBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsSubBand.setStatus("current")
_DeployProvModuleDefaultsGroup_Type = FspR7OpticalGroup
_DeployProvModuleDefaultsGroup_Object = MibTableColumn
deployProvModuleDefaultsGroup = _DeployProvModuleDefaultsGroup_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 10),
    _DeployProvModuleDefaultsGroup_Type()
)
deployProvModuleDefaultsGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsGroup.setStatus("current")
_DeployProvModuleDefaultsFiber_Type = FspR7OpticalFiberType
_DeployProvModuleDefaultsFiber_Object = MibTableColumn
deployProvModuleDefaultsFiber = _DeployProvModuleDefaultsFiber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 11),
    _DeployProvModuleDefaultsFiber_Type()
)
deployProvModuleDefaultsFiber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsFiber.setStatus("current")
_DeployProvModuleDefaultsEdfaPwrOut_Type = FspR7EdfaOutputPowerRating
_DeployProvModuleDefaultsEdfaPwrOut_Object = MibTableColumn
deployProvModuleDefaultsEdfaPwrOut = _DeployProvModuleDefaultsEdfaPwrOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 12),
    _DeployProvModuleDefaultsEdfaPwrOut_Type()
)
deployProvModuleDefaultsEdfaPwrOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsEdfaPwrOut.setStatus("current")
_DeployProvModuleDefaultsAdmin_Type = FspR7AdminState
_DeployProvModuleDefaultsAdmin_Object = MibTableColumn
deployProvModuleDefaultsAdmin = _DeployProvModuleDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 13),
    _DeployProvModuleDefaultsAdmin_Type()
)
deployProvModuleDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsAdmin.setStatus("current")
_DeployProvModuleDefaultsSupply_Type = FspR7SupplyType
_DeployProvModuleDefaultsSupply_Object = MibTableColumn
deployProvModuleDefaultsSupply = _DeployProvModuleDefaultsSupply_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 14),
    _DeployProvModuleDefaultsSupply_Type()
)
deployProvModuleDefaultsSupply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsSupply.setStatus("current")
_DeployProvModuleDefaultsDispersionCompensation_Type = FspR7DispersionCompensation
_DeployProvModuleDefaultsDispersionCompensation_Object = MibTableColumn
deployProvModuleDefaultsDispersionCompensation = _DeployProvModuleDefaultsDispersionCompensation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 15),
    _DeployProvModuleDefaultsDispersionCompensation_Type()
)
deployProvModuleDefaultsDispersionCompensation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsDispersionCompensation.setStatus("current")
_DeployProvModuleDefaultsLanAid_Type = EntityIndex
_DeployProvModuleDefaultsLanAid_Object = MibTableColumn
deployProvModuleDefaultsLanAid = _DeployProvModuleDefaultsLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 16),
    _DeployProvModuleDefaultsLanAid_Type()
)
deployProvModuleDefaultsLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsLanAid.setStatus("current")
_DeployProvModuleDefaultsSingleFiberLocation_Type = FspR7SingleFiberLocation
_DeployProvModuleDefaultsSingleFiberLocation_Object = MibTableColumn
deployProvModuleDefaultsSingleFiberLocation = _DeployProvModuleDefaultsSingleFiberLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 17),
    _DeployProvModuleDefaultsSingleFiberLocation_Type()
)
deployProvModuleDefaultsSingleFiberLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsSingleFiberLocation.setStatus("current")
_DeployProvModuleDefaultsPsuOutputPower_Type = FspR7PsuOutputPower
_DeployProvModuleDefaultsPsuOutputPower_Object = MibTableColumn
deployProvModuleDefaultsPsuOutputPower = _DeployProvModuleDefaultsPsuOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 18),
    _DeployProvModuleDefaultsPsuOutputPower_Type()
)
deployProvModuleDefaultsPsuOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsPsuOutputPower.setStatus("current")


class _DeployProvModuleDefaultsTilt_Type(Integer32):
    """Custom type deployProvModuleDefaultsTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvModuleDefaultsTilt_Type.__name__ = "Integer32"
_DeployProvModuleDefaultsTilt_Object = MibTableColumn
deployProvModuleDefaultsTilt = _DeployProvModuleDefaultsTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 19),
    _DeployProvModuleDefaultsTilt_Type()
)
deployProvModuleDefaultsTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsTilt.setStatus("current")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsTilt.setUnits("0.1 dB")
_DeployProvModuleDefaultsGain_Type = FspR7Gain
_DeployProvModuleDefaultsGain_Object = MibTableColumn
deployProvModuleDefaultsGain = _DeployProvModuleDefaultsGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 20),
    _DeployProvModuleDefaultsGain_Type()
)
deployProvModuleDefaultsGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsGain.setStatus("current")
_DeployProvModuleDefaultsCapabilityLevel_Type = FspR7CapInventory
_DeployProvModuleDefaultsCapabilityLevel_Object = MibTableColumn
deployProvModuleDefaultsCapabilityLevel = _DeployProvModuleDefaultsCapabilityLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 21),
    _DeployProvModuleDefaultsCapabilityLevel_Type()
)
deployProvModuleDefaultsCapabilityLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsCapabilityLevel.setStatus("current")
_DeployProvModuleDefaultsRoadmNumber_Type = FspR7RoadmNumber
_DeployProvModuleDefaultsRoadmNumber_Object = MibTableColumn
deployProvModuleDefaultsRoadmNumber = _DeployProvModuleDefaultsRoadmNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 22),
    _DeployProvModuleDefaultsRoadmNumber_Type()
)
deployProvModuleDefaultsRoadmNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsRoadmNumber.setStatus("current")
_DeployProvModuleDefaultsScrambling_Type = FspR7Scrambling
_DeployProvModuleDefaultsScrambling_Object = MibTableColumn
deployProvModuleDefaultsScrambling = _DeployProvModuleDefaultsScrambling_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 23),
    _DeployProvModuleDefaultsScrambling_Type()
)
deployProvModuleDefaultsScrambling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsScrambling.setStatus("current")
_DeployProvModuleDefaultsChannelSpacing_Type = FspR7ChannelSpacing
_DeployProvModuleDefaultsChannelSpacing_Object = MibTableColumn
deployProvModuleDefaultsChannelSpacing = _DeployProvModuleDefaultsChannelSpacing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 24),
    _DeployProvModuleDefaultsChannelSpacing_Type()
)
deployProvModuleDefaultsChannelSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsChannelSpacing.setStatus("current")


class _DeployProvModuleDefaultsLagSysPrio_Type(Unsigned32):
    """Custom type deployProvModuleDefaultsLagSysPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvModuleDefaultsLagSysPrio_Type.__name__ = "Unsigned32"
_DeployProvModuleDefaultsLagSysPrio_Object = MibTableColumn
deployProvModuleDefaultsLagSysPrio = _DeployProvModuleDefaultsLagSysPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 25),
    _DeployProvModuleDefaultsLagSysPrio_Type()
)
deployProvModuleDefaultsLagSysPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsLagSysPrio.setStatus("current")
_DeployProvModuleDefaultsGainRange_Type = FspR7GainRange
_DeployProvModuleDefaultsGainRange_Object = MibTableColumn
deployProvModuleDefaultsGainRange = _DeployProvModuleDefaultsGainRange_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 26),
    _DeployProvModuleDefaultsGainRange_Type()
)
deployProvModuleDefaultsGainRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsGainRange.setStatus("current")
_DeployProvModuleDefaultsEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvModuleDefaultsEqlzAdmin_Object = MibTableColumn
deployProvModuleDefaultsEqlzAdmin = _DeployProvModuleDefaultsEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 27),
    _DeployProvModuleDefaultsEqlzAdmin_Type()
)
deployProvModuleDefaultsEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsEqlzAdmin.setStatus("current")
_DeployProvModuleDefaultsChannelsNumber_Type = FspR7NumberOfChannels
_DeployProvModuleDefaultsChannelsNumber_Object = MibTableColumn
deployProvModuleDefaultsChannelsNumber = _DeployProvModuleDefaultsChannelsNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 28),
    _DeployProvModuleDefaultsChannelsNumber_Type()
)
deployProvModuleDefaultsChannelsNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsChannelsNumber.setStatus("current")
_DeployProvModuleDefaultsDCFiberType_Type = FspR7DCFiberType
_DeployProvModuleDefaultsDCFiberType_Object = MibTableColumn
deployProvModuleDefaultsDCFiberType = _DeployProvModuleDefaultsDCFiberType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 29),
    _DeployProvModuleDefaultsDCFiberType_Type()
)
deployProvModuleDefaultsDCFiberType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsDCFiberType.setStatus("current")
_DeployProvModuleDefaultsMapping_Type = FspR7Mapping
_DeployProvModuleDefaultsMapping_Object = MibTableColumn
deployProvModuleDefaultsMapping = _DeployProvModuleDefaultsMapping_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 30),
    _DeployProvModuleDefaultsMapping_Type()
)
deployProvModuleDefaultsMapping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsMapping.setStatus("current")
_DeployProvModuleDefaultsCac_Type = FspR7L2CacEnable
_DeployProvModuleDefaultsCac_Object = MibTableColumn
deployProvModuleDefaultsCac = _DeployProvModuleDefaultsCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 31),
    _DeployProvModuleDefaultsCac_Type()
)
deployProvModuleDefaultsCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsCac.setStatus("current")
_DeployProvModuleDefaultsChannelSpacingProvision_Type = FspR7ChannelSpacing
_DeployProvModuleDefaultsChannelSpacingProvision_Object = MibTableColumn
deployProvModuleDefaultsChannelSpacingProvision = _DeployProvModuleDefaultsChannelSpacingProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 32),
    _DeployProvModuleDefaultsChannelSpacingProvision_Type()
)
deployProvModuleDefaultsChannelSpacingProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsChannelSpacingProvision.setStatus("current")
_DeployProvModuleDefaultsChannelsProvision_Type = FspR7NumberOfChannels
_DeployProvModuleDefaultsChannelsProvision_Object = MibTableColumn
deployProvModuleDefaultsChannelsProvision = _DeployProvModuleDefaultsChannelsProvision_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 33),
    _DeployProvModuleDefaultsChannelsProvision_Type()
)
deployProvModuleDefaultsChannelsProvision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsChannelsProvision.setStatus("current")
_DeployProvModuleDefaultsFiberDetect_Type = FspR7FiberDetect
_DeployProvModuleDefaultsFiberDetect_Object = MibTableColumn
deployProvModuleDefaultsFiberDetect = _DeployProvModuleDefaultsFiberDetect_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 34),
    _DeployProvModuleDefaultsFiberDetect_Type()
)
deployProvModuleDefaultsFiberDetect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsFiberDetect.setStatus("current")
_DeployProvModuleDefaultsTrafficDirection_Type = FspR7TrafficDirection
_DeployProvModuleDefaultsTrafficDirection_Object = MibTableColumn
deployProvModuleDefaultsTrafficDirection = _DeployProvModuleDefaultsTrafficDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 35),
    _DeployProvModuleDefaultsTrafficDirection_Type()
)
deployProvModuleDefaultsTrafficDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsTrafficDirection.setStatus("current")
_DeployProvModuleDefaultsOscUsage_Type = FspR7OscUsage
_DeployProvModuleDefaultsOscUsage_Object = MibTableColumn
deployProvModuleDefaultsOscUsage = _DeployProvModuleDefaultsOscUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 2, 3, 1, 36),
    _DeployProvModuleDefaultsOscUsage_Type()
)
deployProvModuleDefaultsOscUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleDefaultsOscUsage.setStatus("current")
_PlugDeployProv_ObjectIdentity = ObjectIdentity
plugDeployProv = _PlugDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3)
)
_DeployProvPlugTable_Object = MibTable
deployProvPlugTable = _DeployProvPlugTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1)
)
if mibBuilder.loadTexts:
    deployProvPlugTable.setStatus("current")
_DeployProvPlugEntry_Object = MibTableRow
deployProvPlugEntry = _DeployProvPlugEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1)
)
deployProvPlugEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPlugEntry.setStatus("current")
_DeployProvPlugRowStatus_Type = RowStatus
_DeployProvPlugRowStatus_Object = MibTableColumn
deployProvPlugRowStatus = _DeployProvPlugRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 1),
    _DeployProvPlugRowStatus_Type()
)
deployProvPlugRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugRowStatus.setStatus("current")
_DeployProvPlugForceDestroy_Type = FspR7ForcedStatus
_DeployProvPlugForceDestroy_Object = MibTableColumn
deployProvPlugForceDestroy = _DeployProvPlugForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 2),
    _DeployProvPlugForceDestroy_Type()
)
deployProvPlugForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugForceDestroy.setStatus("current")
_DeployProvPlugType_Type = FspR7EquipmentType
_DeployProvPlugType_Object = MibTableColumn
deployProvPlugType = _DeployProvPlugType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 3),
    _DeployProvPlugType_Type()
)
deployProvPlugType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugType.setStatus("current")
_DeployProvPlugMaxDataRate_Type = FspR7PlugDataRate
_DeployProvPlugMaxDataRate_Object = MibTableColumn
deployProvPlugMaxDataRate = _DeployProvPlugMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 4),
    _DeployProvPlugMaxDataRate_Type()
)
deployProvPlugMaxDataRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugMaxDataRate.setStatus("current")
_DeployProvPlugChannelId_Type = FspR7ChannelIdentifier
_DeployProvPlugChannelId_Object = MibTableColumn
deployProvPlugChannelId = _DeployProvPlugChannelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 5),
    _DeployProvPlugChannelId_Type()
)
deployProvPlugChannelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugChannelId.setStatus("current")
_DeployProvPlugThirdPartyUsage_Type = EnableState
_DeployProvPlugThirdPartyUsage_Object = MibTableColumn
deployProvPlugThirdPartyUsage = _DeployProvPlugThirdPartyUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 6),
    _DeployProvPlugThirdPartyUsage_Type()
)
deployProvPlugThirdPartyUsage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugThirdPartyUsage.setStatus("current")
_DeployProvPlugReach_Type = FspR7OpticalInterfaceReach
_DeployProvPlugReach_Object = MibTableColumn
deployProvPlugReach = _DeployProvPlugReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 7),
    _DeployProvPlugReach_Type()
)
deployProvPlugReach.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugReach.setStatus("current")
_DeployProvPlugAdmin_Type = FspR7AdminState
_DeployProvPlugAdmin_Object = MibTableColumn
deployProvPlugAdmin = _DeployProvPlugAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 8),
    _DeployProvPlugAdmin_Type()
)
deployProvPlugAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugAdmin.setStatus("current")


class _DeployProvPlugLoopbackAttenuation_Type(Unsigned32):
    """Custom type deployProvPlugLoopbackAttenuation based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvPlugLoopbackAttenuation_Type.__name__ = "Unsigned32"
_DeployProvPlugLoopbackAttenuation_Object = MibTableColumn
deployProvPlugLoopbackAttenuation = _DeployProvPlugLoopbackAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 9),
    _DeployProvPlugLoopbackAttenuation_Type()
)
deployProvPlugLoopbackAttenuation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugLoopbackAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvPlugLoopbackAttenuation.setUnits("0.1 dB")
_DeployProvPlugLaserDelayTimer_Type = FspR7LaneGroupInventory
_DeployProvPlugLaserDelayTimer_Object = MibTableColumn
deployProvPlugLaserDelayTimer = _DeployProvPlugLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 10),
    _DeployProvPlugLaserDelayTimer_Type()
)
deployProvPlugLaserDelayTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugLaserDelayTimer.setStatus("current")
_DeployProvPlugConnector_Type = FspR7ConnectorType
_DeployProvPlugConnector_Object = MibTableColumn
deployProvPlugConnector = _DeployProvPlugConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 1, 1, 11),
    _DeployProvPlugConnector_Type()
)
deployProvPlugConnector.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPlugConnector.setStatus("current")
_DeployProvPlugCapTable_Object = MibTable
deployProvPlugCapTable = _DeployProvPlugCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2)
)
if mibBuilder.loadTexts:
    deployProvPlugCapTable.setStatus("current")
_DeployProvPlugCapEntry_Object = MibTableRow
deployProvPlugCapEntry = _DeployProvPlugCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1)
)
deployProvPlugCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPlugCapEntry.setStatus("current")
_DeployProvPlugCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPlugCapRowStatus_Object = MibTableColumn
deployProvPlugCapRowStatus = _DeployProvPlugCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 1),
    _DeployProvPlugCapRowStatus_Type()
)
deployProvPlugCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapRowStatus.setStatus("current")
_DeployProvPlugCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvPlugCapForceDestroy_Object = MibTableColumn
deployProvPlugCapForceDestroy = _DeployProvPlugCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 2),
    _DeployProvPlugCapForceDestroy_Type()
)
deployProvPlugCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapForceDestroy.setStatus("current")
_DeployProvPlugCapType_Type = FspR7EquipmentTypeCaps
_DeployProvPlugCapType_Object = MibTableColumn
deployProvPlugCapType = _DeployProvPlugCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 3),
    _DeployProvPlugCapType_Type()
)
deployProvPlugCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapType.setStatus("current")
_DeployProvPlugCapMaxDataRate_Type = FspR7PlugDataRateCaps
_DeployProvPlugCapMaxDataRate_Object = MibTableColumn
deployProvPlugCapMaxDataRate = _DeployProvPlugCapMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 4),
    _DeployProvPlugCapMaxDataRate_Type()
)
deployProvPlugCapMaxDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapMaxDataRate.setStatus("current")
_DeployProvPlugCapChannelId_Type = FspR7ChannelIdentifierCaps
_DeployProvPlugCapChannelId_Object = MibTableColumn
deployProvPlugCapChannelId = _DeployProvPlugCapChannelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 5),
    _DeployProvPlugCapChannelId_Type()
)
deployProvPlugCapChannelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapChannelId.setStatus("current")
_DeployProvPlugCapThirdPartyUsage_Type = EnableStateCaps
_DeployProvPlugCapThirdPartyUsage_Object = MibTableColumn
deployProvPlugCapThirdPartyUsage = _DeployProvPlugCapThirdPartyUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 6),
    _DeployProvPlugCapThirdPartyUsage_Type()
)
deployProvPlugCapThirdPartyUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapThirdPartyUsage.setStatus("current")
_DeployProvPlugCapReach_Type = FspR7OpticalInterfaceReachCaps
_DeployProvPlugCapReach_Object = MibTableColumn
deployProvPlugCapReach = _DeployProvPlugCapReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 7),
    _DeployProvPlugCapReach_Type()
)
deployProvPlugCapReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapReach.setStatus("current")
_DeployProvPlugCapAdmin_Type = FspR7AdminStateCaps
_DeployProvPlugCapAdmin_Object = MibTableColumn
deployProvPlugCapAdmin = _DeployProvPlugCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 8),
    _DeployProvPlugCapAdmin_Type()
)
deployProvPlugCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapAdmin.setStatus("current")
_DeployProvPlugCapLoopbackAttenuation_Type = FspR7Unsigned32Caps
_DeployProvPlugCapLoopbackAttenuation_Object = MibTableColumn
deployProvPlugCapLoopbackAttenuation = _DeployProvPlugCapLoopbackAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 9),
    _DeployProvPlugCapLoopbackAttenuation_Type()
)
deployProvPlugCapLoopbackAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapLoopbackAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvPlugCapLoopbackAttenuation.setUnits("0.1 dB")
_DeployProvPlugCapLaserDelayTimer_Type = FspR7LaneGroupInventoryCaps
_DeployProvPlugCapLaserDelayTimer_Object = MibTableColumn
deployProvPlugCapLaserDelayTimer = _DeployProvPlugCapLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 10),
    _DeployProvPlugCapLaserDelayTimer_Type()
)
deployProvPlugCapLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapLaserDelayTimer.setStatus("current")
_DeployProvPlugCapConnector_Type = FspR7ConnectorTypeCaps
_DeployProvPlugCapConnector_Object = MibTableColumn
deployProvPlugCapConnector = _DeployProvPlugCapConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 2, 1, 11),
    _DeployProvPlugCapConnector_Type()
)
deployProvPlugCapConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugCapConnector.setStatus("current")
_DeployProvPlugDefaultsTable_Object = MibTable
deployProvPlugDefaultsTable = _DeployProvPlugDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3)
)
if mibBuilder.loadTexts:
    deployProvPlugDefaultsTable.setStatus("current")
_DeployProvPlugDefaultsEntry_Object = MibTableRow
deployProvPlugDefaultsEntry = _DeployProvPlugDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1)
)
deployProvPlugDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPlugDefaultsEntry.setStatus("current")
_DeployProvPlugDefaultsRowStatus_Type = RowStatus
_DeployProvPlugDefaultsRowStatus_Object = MibTableColumn
deployProvPlugDefaultsRowStatus = _DeployProvPlugDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 1),
    _DeployProvPlugDefaultsRowStatus_Type()
)
deployProvPlugDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsRowStatus.setStatus("current")
_DeployProvPlugDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvPlugDefaultsForceDestroy_Object = MibTableColumn
deployProvPlugDefaultsForceDestroy = _DeployProvPlugDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 2),
    _DeployProvPlugDefaultsForceDestroy_Type()
)
deployProvPlugDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsForceDestroy.setStatus("current")
_DeployProvPlugDefaultsType_Type = FspR7EquipmentType
_DeployProvPlugDefaultsType_Object = MibTableColumn
deployProvPlugDefaultsType = _DeployProvPlugDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 3),
    _DeployProvPlugDefaultsType_Type()
)
deployProvPlugDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsType.setStatus("current")
_DeployProvPlugDefaultsMaxDataRate_Type = FspR7PlugDataRate
_DeployProvPlugDefaultsMaxDataRate_Object = MibTableColumn
deployProvPlugDefaultsMaxDataRate = _DeployProvPlugDefaultsMaxDataRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 4),
    _DeployProvPlugDefaultsMaxDataRate_Type()
)
deployProvPlugDefaultsMaxDataRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsMaxDataRate.setStatus("current")
_DeployProvPlugDefaultsChannelId_Type = FspR7ChannelIdentifier
_DeployProvPlugDefaultsChannelId_Object = MibTableColumn
deployProvPlugDefaultsChannelId = _DeployProvPlugDefaultsChannelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 5),
    _DeployProvPlugDefaultsChannelId_Type()
)
deployProvPlugDefaultsChannelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsChannelId.setStatus("current")
_DeployProvPlugDefaultsThirdPartyUsage_Type = EnableState
_DeployProvPlugDefaultsThirdPartyUsage_Object = MibTableColumn
deployProvPlugDefaultsThirdPartyUsage = _DeployProvPlugDefaultsThirdPartyUsage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 6),
    _DeployProvPlugDefaultsThirdPartyUsage_Type()
)
deployProvPlugDefaultsThirdPartyUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsThirdPartyUsage.setStatus("current")
_DeployProvPlugDefaultsReach_Type = FspR7OpticalInterfaceReach
_DeployProvPlugDefaultsReach_Object = MibTableColumn
deployProvPlugDefaultsReach = _DeployProvPlugDefaultsReach_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 7),
    _DeployProvPlugDefaultsReach_Type()
)
deployProvPlugDefaultsReach.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsReach.setStatus("current")
_DeployProvPlugDefaultsAdmin_Type = FspR7AdminState
_DeployProvPlugDefaultsAdmin_Object = MibTableColumn
deployProvPlugDefaultsAdmin = _DeployProvPlugDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 8),
    _DeployProvPlugDefaultsAdmin_Type()
)
deployProvPlugDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsAdmin.setStatus("current")


class _DeployProvPlugDefaultsLoopbackAttenuation_Type(Unsigned32):
    """Custom type deployProvPlugDefaultsLoopbackAttenuation based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvPlugDefaultsLoopbackAttenuation_Type.__name__ = "Unsigned32"
_DeployProvPlugDefaultsLoopbackAttenuation_Object = MibTableColumn
deployProvPlugDefaultsLoopbackAttenuation = _DeployProvPlugDefaultsLoopbackAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 9),
    _DeployProvPlugDefaultsLoopbackAttenuation_Type()
)
deployProvPlugDefaultsLoopbackAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsLoopbackAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsLoopbackAttenuation.setUnits("0.1 dB")
_DeployProvPlugDefaultsLaserDelayTimer_Type = FspR7LaneGroupInventory
_DeployProvPlugDefaultsLaserDelayTimer_Object = MibTableColumn
deployProvPlugDefaultsLaserDelayTimer = _DeployProvPlugDefaultsLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 10),
    _DeployProvPlugDefaultsLaserDelayTimer_Type()
)
deployProvPlugDefaultsLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsLaserDelayTimer.setStatus("current")
_DeployProvPlugDefaultsConnector_Type = FspR7ConnectorType
_DeployProvPlugDefaultsConnector_Object = MibTableColumn
deployProvPlugDefaultsConnector = _DeployProvPlugDefaultsConnector_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 3, 3, 1, 11),
    _DeployProvPlugDefaultsConnector_Type()
)
deployProvPlugDefaultsConnector.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPlugDefaultsConnector.setStatus("current")
_FacilityDeployProv_ObjectIdentity = ObjectIdentity
facilityDeployProv = _FacilityDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4)
)
_DeployProvIfTable_Object = MibTable
deployProvIfTable = _DeployProvIfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1)
)
if mibBuilder.loadTexts:
    deployProvIfTable.setStatus("current")
_DeployProvIfEntry_Object = MibTableRow
deployProvIfEntry = _DeployProvIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1)
)
deployProvIfEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvIfEntry.setStatus("current")
_DeployProvIfRowStatus_Type = RowStatus
_DeployProvIfRowStatus_Object = MibTableColumn
deployProvIfRowStatus = _DeployProvIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 1),
    _DeployProvIfRowStatus_Type()
)
deployProvIfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfRowStatus.setStatus("current")
_DeployProvIfForceDestroy_Type = FspR7ForcedStatus
_DeployProvIfForceDestroy_Object = MibTableColumn
deployProvIfForceDestroy = _DeployProvIfForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 2),
    _DeployProvIfForceDestroy_Type()
)
deployProvIfForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfForceDestroy.setStatus("current")
_DeployProvIfType_Type = FspR7InterfaceType
_DeployProvIfType_Object = MibTableColumn
deployProvIfType = _DeployProvIfType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 3),
    _DeployProvIfType_Type()
)
deployProvIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfType.setStatus("current")
_DeployProvIfPayload_Type = OtnPayloadType
_DeployProvIfPayload_Object = MibTableColumn
deployProvIfPayload = _DeployProvIfPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 4),
    _DeployProvIfPayload_Type()
)
deployProvIfPayload.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfPayload.setStatus("current")
_DeployProvIfBehaviour_Type = FspR7PortBehaviour
_DeployProvIfBehaviour_Object = MibTableColumn
deployProvIfBehaviour = _DeployProvIfBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 5),
    _DeployProvIfBehaviour_Type()
)
deployProvIfBehaviour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfBehaviour.setStatus("current")
_DeployProvIfTerminationLevel_Type = OhTerminationLevel
_DeployProvIfTerminationLevel_Object = MibTableColumn
deployProvIfTerminationLevel = _DeployProvIfTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 6),
    _DeployProvIfTerminationLevel_Type()
)
deployProvIfTerminationLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTerminationLevel.setStatus("current")
_DeployProvIfAlsMode_Type = FspR7AlsMode
_DeployProvIfAlsMode_Object = MibTableColumn
deployProvIfAlsMode = _DeployProvIfAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 7),
    _DeployProvIfAlsMode_Type()
)
deployProvIfAlsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAlsMode.setStatus("current")
_DeployProvIfErrorForwarding_Type = FspR7ErrorFwdMode
_DeployProvIfErrorForwarding_Object = MibTableColumn
deployProvIfErrorForwarding = _DeployProvIfErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 8),
    _DeployProvIfErrorForwarding_Type()
)
deployProvIfErrorForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfErrorForwarding.setStatus("current")
_DeployProvIfLaserOffDelayFunction_Type = EnableState
_DeployProvIfLaserOffDelayFunction_Object = MibTableColumn
deployProvIfLaserOffDelayFunction = _DeployProvIfLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 9),
    _DeployProvIfLaserOffDelayFunction_Type()
)
deployProvIfLaserOffDelayFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLaserOffDelayFunction.setStatus("current")
_DeployProvIfFecType_Type = FspR7FecType
_DeployProvIfFecType_Object = MibTableColumn
deployProvIfFecType = _DeployProvIfFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 10),
    _DeployProvIfFecType_Type()
)
deployProvIfFecType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfFecType.setStatus("current")
_DeployProvIfTimingSource_Type = SonetTimingSource
_DeployProvIfTimingSource_Object = MibTableColumn
deployProvIfTimingSource = _DeployProvIfTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 11),
    _DeployProvIfTimingSource_Type()
)
deployProvIfTimingSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTimingSource.setStatus("current")
_DeployProvIfTcmALevel_Type = OtnTcmLevel
_DeployProvIfTcmALevel_Object = MibTableColumn
deployProvIfTcmALevel = _DeployProvIfTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 12),
    _DeployProvIfTcmALevel_Type()
)
deployProvIfTcmALevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTcmALevel.setStatus("current")
_DeployProvIfTcmBLevel_Type = OtnTcmLevel
_DeployProvIfTcmBLevel_Object = MibTableColumn
deployProvIfTcmBLevel = _DeployProvIfTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 13),
    _DeployProvIfTcmBLevel_Type()
)
deployProvIfTcmBLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTcmBLevel.setStatus("current")
_DeployProvIfSigDegThresSonetLine_Type = FspR7BERThreshold
_DeployProvIfSigDegThresSonetLine_Object = MibTableColumn
deployProvIfSigDegThresSonetLine = _DeployProvIfSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 14),
    _DeployProvIfSigDegThresSonetLine_Type()
)
deployProvIfSigDegThresSonetLine.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresSonetLine.setStatus("current")


class _DeployProvIfSigDegThresSdhMs_Type(Unsigned32):
    """Custom type deployProvIfSigDegThresSdhMs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegThresSdhMs_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegThresSdhMs_Object = MibTableColumn
deployProvIfSigDegThresSdhMs = _DeployProvIfSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 15),
    _DeployProvIfSigDegThresSdhMs_Type()
)
deployProvIfSigDegThresSdhMs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresSdhMs.setUnits("%")


class _DeployProvIfSignalDegradePeriod_Type(Unsigned32):
    """Custom type deployProvIfSignalDegradePeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSignalDegradePeriod_Type.__name__ = "Unsigned32"
_DeployProvIfSignalDegradePeriod_Object = MibTableColumn
deployProvIfSignalDegradePeriod = _DeployProvIfSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 16),
    _DeployProvIfSignalDegradePeriod_Type()
)
deployProvIfSignalDegradePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSignalDegradePeriod.setUnits("s")
_DeployProvIfAutonegotiation_Type = EnableState
_DeployProvIfAutonegotiation_Object = MibTableColumn
deployProvIfAutonegotiation = _DeployProvIfAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 17),
    _DeployProvIfAutonegotiation_Type()
)
deployProvIfAutonegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAutonegotiation.setStatus("current")
_DeployProvIfBitrate_Type = FspR7Bitrate
_DeployProvIfBitrate_Object = MibTableColumn
deployProvIfBitrate = _DeployProvIfBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 18),
    _DeployProvIfBitrate_Type()
)
deployProvIfBitrate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfBitrate.setStatus("current")
_DeployProvIfDuplex_Type = EthDuplexMode
_DeployProvIfDuplex_Object = MibTableColumn
deployProvIfDuplex = _DeployProvIfDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 19),
    _DeployProvIfDuplex_Type()
)
deployProvIfDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfDuplex.setStatus("current")
_DeployProvIfFlowControl_Type = FspR7FlowControlMode
_DeployProvIfFlowControl_Object = MibTableColumn
deployProvIfFlowControl = _DeployProvIfFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 20),
    _DeployProvIfFlowControl_Type()
)
deployProvIfFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfFlowControl.setStatus("current")
_DeployProvIfOtnStuffing_Type = FspR7Stuff
_DeployProvIfOtnStuffing_Object = MibTableColumn
deployProvIfOtnStuffing = _DeployProvIfOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 21),
    _DeployProvIfOtnStuffing_Type()
)
deployProvIfOtnStuffing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOtnStuffing.setStatus("current")


class _DeployProvIfSigDegThresOtu_Type(Integer32):
    """Custom type deployProvIfSigDegThresOtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfSigDegThresOtu_Type.__name__ = "Integer32"
_DeployProvIfSigDegThresOtu_Object = MibTableColumn
deployProvIfSigDegThresOtu = _DeployProvIfSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 22),
    _DeployProvIfSigDegThresOtu_Type()
)
deployProvIfSigDegThresOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOtu.setUnits("%")


class _DeployProvIfSigDegPeriodOtu_Type(Unsigned32):
    """Custom type deployProvIfSigDegPeriodOtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPeriodOtu_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPeriodOtu_Object = MibTableColumn
deployProvIfSigDegPeriodOtu = _DeployProvIfSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 23),
    _DeployProvIfSigDegPeriodOtu_Type()
)
deployProvIfSigDegPeriodOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOtu.setUnits("s")


class _DeployProvIfSigDegThresOdu_Type(Integer32):
    """Custom type deployProvIfSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfSigDegThresOdu_Type.__name__ = "Integer32"
_DeployProvIfSigDegThresOdu_Object = MibTableColumn
deployProvIfSigDegThresOdu = _DeployProvIfSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 24),
    _DeployProvIfSigDegThresOdu_Type()
)
deployProvIfSigDegThresOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOdu.setUnits("%")


class _DeployProvIfSigDegPeriodOdu_Type(Unsigned32):
    """Custom type deployProvIfSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPeriodOdu_Object = MibTableColumn
deployProvIfSigDegPeriodOdu = _DeployProvIfSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 25),
    _DeployProvIfSigDegPeriodOdu_Type()
)
deployProvIfSigDegPeriodOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOdu.setUnits("s")


class _DeployProvIfSigDegThresOduTcmA_Type(Integer32):
    """Custom type deployProvIfSigDegThresOduTcmA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfSigDegThresOduTcmA_Type.__name__ = "Integer32"
_DeployProvIfSigDegThresOduTcmA_Object = MibTableColumn
deployProvIfSigDegThresOduTcmA = _DeployProvIfSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 26),
    _DeployProvIfSigDegThresOduTcmA_Type()
)
deployProvIfSigDegThresOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOduTcmA.setUnits("%")


class _DeployProvIfSigDegPeriodOduTcmA_Type(Unsigned32):
    """Custom type deployProvIfSigDegPeriodOduTcmA based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPeriodOduTcmA_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPeriodOduTcmA_Object = MibTableColumn
deployProvIfSigDegPeriodOduTcmA = _DeployProvIfSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 27),
    _DeployProvIfSigDegPeriodOduTcmA_Type()
)
deployProvIfSigDegPeriodOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOduTcmA.setUnits("s")


class _DeployProvIfSigDegThresOduTcmB_Type(Integer32):
    """Custom type deployProvIfSigDegThresOduTcmB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfSigDegThresOduTcmB_Type.__name__ = "Integer32"
_DeployProvIfSigDegThresOduTcmB_Object = MibTableColumn
deployProvIfSigDegThresOduTcmB = _DeployProvIfSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 28),
    _DeployProvIfSigDegThresOduTcmB_Type()
)
deployProvIfSigDegThresOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOduTcmB.setUnits("%")


class _DeployProvIfSigDegPeriodOduTcmB_Type(Unsigned32):
    """Custom type deployProvIfSigDegPeriodOduTcmB based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPeriodOduTcmB_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPeriodOduTcmB_Object = MibTableColumn
deployProvIfSigDegPeriodOduTcmB = _DeployProvIfSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 29),
    _DeployProvIfSigDegPeriodOduTcmB_Type()
)
deployProvIfSigDegPeriodOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOduTcmB.setUnits("s")


class _DeployProvIfTilt_Type(Integer32):
    """Custom type deployProvIfTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfTilt_Type.__name__ = "Integer32"
_DeployProvIfTilt_Object = MibTableColumn
deployProvIfTilt = _DeployProvIfTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 30),
    _DeployProvIfTilt_Type()
)
deployProvIfTilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTilt.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfTilt.setUnits("0.1 dB")
_DeployProvIfGain_Type = FspR7Gain
_DeployProvIfGain_Object = MibTableColumn
deployProvIfGain = _DeployProvIfGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 31),
    _DeployProvIfGain_Type()
)
deployProvIfGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfGain.setStatus("current")
_DeployProvIfAdmin_Type = FspR7AdminState
_DeployProvIfAdmin_Object = MibTableColumn
deployProvIfAdmin = _DeployProvIfAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 32),
    _DeployProvIfAdmin_Type()
)
deployProvIfAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAdmin.setStatus("current")


class _DeployProvIfAttenuationGradient_Type(Unsigned32):
    """Custom type deployProvIfAttenuationGradient based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfAttenuationGradient_Type.__name__ = "Unsigned32"
_DeployProvIfAttenuationGradient_Object = MibTableColumn
deployProvIfAttenuationGradient = _DeployProvIfAttenuationGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 33),
    _DeployProvIfAttenuationGradient_Type()
)
deployProvIfAttenuationGradient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAttenuationGradient.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfAttenuationGradient.setUnits("0.1 dB/min")
_DeployProvIfSigDegThresReceiver_Type = Unsigned32
_DeployProvIfSigDegThresReceiver_Object = MibTableColumn
deployProvIfSigDegThresReceiver = _DeployProvIfSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 34),
    _DeployProvIfSigDegThresReceiver_Type()
)
deployProvIfSigDegThresReceiver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresReceiver.setUnits("0.1 dB")
_DeployProvIfTcmCLevel_Type = OtnTcmLevel
_DeployProvIfTcmCLevel_Object = MibTableColumn
deployProvIfTcmCLevel = _DeployProvIfTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 35),
    _DeployProvIfTcmCLevel_Type()
)
deployProvIfTcmCLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTcmCLevel.setStatus("current")


class _DeployProvIfSigDegThresOduTcmC_Type(Integer32):
    """Custom type deployProvIfSigDegThresOduTcmC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfSigDegThresOduTcmC_Type.__name__ = "Integer32"
_DeployProvIfSigDegThresOduTcmC_Object = MibTableColumn
deployProvIfSigDegThresOduTcmC = _DeployProvIfSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 36),
    _DeployProvIfSigDegThresOduTcmC_Type()
)
deployProvIfSigDegThresOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresOduTcmC.setUnits("%")


class _DeployProvIfSigDegPeriodOduTcmC_Type(Unsigned32):
    """Custom type deployProvIfSigDegPeriodOduTcmC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPeriodOduTcmC_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPeriodOduTcmC_Object = MibTableColumn
deployProvIfSigDegPeriodOduTcmC = _DeployProvIfSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 37),
    _DeployProvIfSigDegPeriodOduTcmC_Type()
)
deployProvIfSigDegPeriodOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodOduTcmC.setUnits("s")
_DeployProvIfDisparityCorrection_Type = EnableState
_DeployProvIfDisparityCorrection_Object = MibTableColumn
deployProvIfDisparityCorrection = _DeployProvIfDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 38),
    _DeployProvIfDisparityCorrection_Type()
)
deployProvIfDisparityCorrection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfDisparityCorrection.setStatus("current")
_DeployProvIfIpAddr_Type = IpAddress
_DeployProvIfIpAddr_Object = MibTableColumn
deployProvIfIpAddr = _DeployProvIfIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 39),
    _DeployProvIfIpAddr_Type()
)
deployProvIfIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfIpAddr.setStatus("current")
_DeployProvIfIpMask_Type = IpAddress
_DeployProvIfIpMask_Object = MibTableColumn
deployProvIfIpMask = _DeployProvIfIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 40),
    _DeployProvIfIpMask_Type()
)
deployProvIfIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfIpMask.setStatus("current")
_DeployProvIfOspf_Type = FspR7OspfMode
_DeployProvIfOspf_Object = MibTableColumn
deployProvIfOspf = _DeployProvIfOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 41),
    _DeployProvIfOspf_Type()
)
deployProvIfOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOspf.setStatus("current")


class _DeployProvIfMetric_Type(Unsigned32):
    """Custom type deployProvIfMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfMetric_Type.__name__ = "Unsigned32"
_DeployProvIfMetric_Object = MibTableColumn
deployProvIfMetric = _DeployProvIfMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 42),
    _DeployProvIfMetric_Type()
)
deployProvIfMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfMetric.setStatus("current")
_DeployProvIfAreaId_Type = IpAddress
_DeployProvIfAreaId_Object = MibTableColumn
deployProvIfAreaId = _DeployProvIfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 43),
    _DeployProvIfAreaId_Type()
)
deployProvIfAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAreaId.setStatus("current")
_DeployProvIfTraceFormSonetSection_Type = SonetTraceForm
_DeployProvIfTraceFormSonetSection_Object = MibTableColumn
deployProvIfTraceFormSonetSection = _DeployProvIfTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 44),
    _DeployProvIfTraceFormSonetSection_Type()
)
deployProvIfTraceFormSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceFormSonetSection.setStatus("current")


class _DeployProvIfTraceExpectedSonetSection_Type(OctetString):
    """Custom type deployProvIfTraceExpectedSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_DeployProvIfTraceExpectedSonetSection_Type.__name__ = "OctetString"
_DeployProvIfTraceExpectedSonetSection_Object = MibTableColumn
deployProvIfTraceExpectedSonetSection = _DeployProvIfTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 45),
    _DeployProvIfTraceExpectedSonetSection_Type()
)
deployProvIfTraceExpectedSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceExpectedSonetSection.setStatus("current")


class _DeployProvIfTraceTransmitSonetSection_Type(OctetString):
    """Custom type deployProvIfTraceTransmitSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_DeployProvIfTraceTransmitSonetSection_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitSonetSection_Object = MibTableColumn
deployProvIfTraceTransmitSonetSection = _DeployProvIfTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 46),
    _DeployProvIfTraceTransmitSonetSection_Type()
)
deployProvIfTraceTransmitSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitSonetSection.setStatus("current")
_DeployProvIfTimModeSonetSection_Type = TimMode
_DeployProvIfTimModeSonetSection_Object = MibTableColumn
deployProvIfTimModeSonetSection = _DeployProvIfTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 47),
    _DeployProvIfTimModeSonetSection_Type()
)
deployProvIfTimModeSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTimModeSonetSection.setStatus("current")


class _DeployProvIfTraceExpectedOtu_Type(OctetString):
    """Custom type deployProvIfTraceExpectedOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceExpectedOtu_Type.__name__ = "OctetString"
_DeployProvIfTraceExpectedOtu_Object = MibTableColumn
deployProvIfTraceExpectedOtu = _DeployProvIfTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 48),
    _DeployProvIfTraceExpectedOtu_Type()
)
deployProvIfTraceExpectedOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceExpectedOtu.setStatus("current")


class _DeployProvIfTraceTransmitSapiOtu_Type(OctetString):
    """Custom type deployProvIfTraceTransmitSapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitSapiOtu_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitSapiOtu_Object = MibTableColumn
deployProvIfTraceTransmitSapiOtu = _DeployProvIfTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 49),
    _DeployProvIfTraceTransmitSapiOtu_Type()
)
deployProvIfTraceTransmitSapiOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitSapiOtu.setStatus("current")


class _DeployProvIfTraceTransmitDapiOtu_Type(OctetString):
    """Custom type deployProvIfTraceTransmitDapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitDapiOtu_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitDapiOtu_Object = MibTableColumn
deployProvIfTraceTransmitDapiOtu = _DeployProvIfTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 50),
    _DeployProvIfTraceTransmitDapiOtu_Type()
)
deployProvIfTraceTransmitDapiOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitDapiOtu.setStatus("current")


class _DeployProvIfTraceTransmitOpspOtu_Type(OctetString):
    """Custom type deployProvIfTraceTransmitOpspOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfTraceTransmitOpspOtu_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitOpspOtu_Object = MibTableColumn
deployProvIfTraceTransmitOpspOtu = _DeployProvIfTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 51),
    _DeployProvIfTraceTransmitOpspOtu_Type()
)
deployProvIfTraceTransmitOpspOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitOpspOtu.setStatus("current")
_DeployProvIfTimModeOtu_Type = TimMode
_DeployProvIfTimModeOtu_Object = MibTableColumn
deployProvIfTimModeOtu = _DeployProvIfTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 52),
    _DeployProvIfTimModeOtu_Type()
)
deployProvIfTimModeOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTimModeOtu.setStatus("current")


class _DeployProvIfTraceExpectedOdu_Type(OctetString):
    """Custom type deployProvIfTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceExpectedOdu_Type.__name__ = "OctetString"
_DeployProvIfTraceExpectedOdu_Object = MibTableColumn
deployProvIfTraceExpectedOdu = _DeployProvIfTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 53),
    _DeployProvIfTraceExpectedOdu_Type()
)
deployProvIfTraceExpectedOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceExpectedOdu.setStatus("current")


class _DeployProvIfTraceTransmitSapiOdu_Type(OctetString):
    """Custom type deployProvIfTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitSapiOdu_Object = MibTableColumn
deployProvIfTraceTransmitSapiOdu = _DeployProvIfTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 54),
    _DeployProvIfTraceTransmitSapiOdu_Type()
)
deployProvIfTraceTransmitSapiOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitSapiOdu.setStatus("current")


class _DeployProvIfTraceTransmitDapiOdu_Type(OctetString):
    """Custom type deployProvIfTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitDapiOdu_Object = MibTableColumn
deployProvIfTraceTransmitDapiOdu = _DeployProvIfTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 55),
    _DeployProvIfTraceTransmitDapiOdu_Type()
)
deployProvIfTraceTransmitDapiOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitDapiOdu.setStatus("current")


class _DeployProvIfTraceTransmitOpspOdu_Type(OctetString):
    """Custom type deployProvIfTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitOpspOdu_Object = MibTableColumn
deployProvIfTraceTransmitOpspOdu = _DeployProvIfTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 56),
    _DeployProvIfTraceTransmitOpspOdu_Type()
)
deployProvIfTraceTransmitOpspOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitOpspOdu.setStatus("current")
_DeployProvIfTimModeOdu_Type = TimMode
_DeployProvIfTimModeOdu_Object = MibTableColumn
deployProvIfTimModeOdu = _DeployProvIfTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 57),
    _DeployProvIfTimModeOdu_Type()
)
deployProvIfTimModeOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTimModeOdu.setStatus("current")


class _DeployProvIfTraceExpectedOduTcmA_Type(OctetString):
    """Custom type deployProvIfTraceExpectedOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceExpectedOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfTraceExpectedOduTcmA_Object = MibTableColumn
deployProvIfTraceExpectedOduTcmA = _DeployProvIfTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 58),
    _DeployProvIfTraceExpectedOduTcmA_Type()
)
deployProvIfTraceExpectedOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceExpectedOduTcmA.setStatus("current")


class _DeployProvIfTraceTransmitSapiOduTcmA_Type(OctetString):
    """Custom type deployProvIfTraceTransmitSapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitSapiOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitSapiOduTcmA_Object = MibTableColumn
deployProvIfTraceTransmitSapiOduTcmA = _DeployProvIfTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 59),
    _DeployProvIfTraceTransmitSapiOduTcmA_Type()
)
deployProvIfTraceTransmitSapiOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitSapiOduTcmA.setStatus("current")


class _DeployProvIfTraceTransmitDapiOduTcmA_Type(OctetString):
    """Custom type deployProvIfTraceTransmitDapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitDapiOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitDapiOduTcmA_Object = MibTableColumn
deployProvIfTraceTransmitDapiOduTcmA = _DeployProvIfTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 60),
    _DeployProvIfTraceTransmitDapiOduTcmA_Type()
)
deployProvIfTraceTransmitDapiOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitDapiOduTcmA.setStatus("current")


class _DeployProvIfTraceTransmitOpspOduTcmA_Type(OctetString):
    """Custom type deployProvIfTraceTransmitOpspOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfTraceTransmitOpspOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitOpspOduTcmA_Object = MibTableColumn
deployProvIfTraceTransmitOpspOduTcmA = _DeployProvIfTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 61),
    _DeployProvIfTraceTransmitOpspOduTcmA_Type()
)
deployProvIfTraceTransmitOpspOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitOpspOduTcmA.setStatus("current")
_DeployProvIfTimModeOduTcmA_Type = TimMode
_DeployProvIfTimModeOduTcmA_Object = MibTableColumn
deployProvIfTimModeOduTcmA = _DeployProvIfTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 62),
    _DeployProvIfTimModeOduTcmA_Type()
)
deployProvIfTimModeOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTimModeOduTcmA.setStatus("current")


class _DeployProvIfTraceExpectedOduTcmB_Type(OctetString):
    """Custom type deployProvIfTraceExpectedOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceExpectedOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfTraceExpectedOduTcmB_Object = MibTableColumn
deployProvIfTraceExpectedOduTcmB = _DeployProvIfTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 63),
    _DeployProvIfTraceExpectedOduTcmB_Type()
)
deployProvIfTraceExpectedOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceExpectedOduTcmB.setStatus("current")


class _DeployProvIfTraceTransmitSapiOduTcmB_Type(OctetString):
    """Custom type deployProvIfTraceTransmitSapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitSapiOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitSapiOduTcmB_Object = MibTableColumn
deployProvIfTraceTransmitSapiOduTcmB = _DeployProvIfTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 64),
    _DeployProvIfTraceTransmitSapiOduTcmB_Type()
)
deployProvIfTraceTransmitSapiOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitSapiOduTcmB.setStatus("current")


class _DeployProvIfTraceTransmitDapiOduTcmB_Type(OctetString):
    """Custom type deployProvIfTraceTransmitDapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitDapiOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitDapiOduTcmB_Object = MibTableColumn
deployProvIfTraceTransmitDapiOduTcmB = _DeployProvIfTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 65),
    _DeployProvIfTraceTransmitDapiOduTcmB_Type()
)
deployProvIfTraceTransmitDapiOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitDapiOduTcmB.setStatus("current")


class _DeployProvIfTraceTransmitOpspOduTcmB_Type(OctetString):
    """Custom type deployProvIfTraceTransmitOpspOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfTraceTransmitOpspOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitOpspOduTcmB_Object = MibTableColumn
deployProvIfTraceTransmitOpspOduTcmB = _DeployProvIfTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 66),
    _DeployProvIfTraceTransmitOpspOduTcmB_Type()
)
deployProvIfTraceTransmitOpspOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitOpspOduTcmB.setStatus("current")
_DeployProvIfTimModeOduTcmB_Type = TimMode
_DeployProvIfTimModeOduTcmB_Object = MibTableColumn
deployProvIfTimModeOduTcmB = _DeployProvIfTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 67),
    _DeployProvIfTimModeOduTcmB_Type()
)
deployProvIfTimModeOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTimModeOduTcmB.setStatus("current")


class _DeployProvIfTraceExpectedOduTcmC_Type(OctetString):
    """Custom type deployProvIfTraceExpectedOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceExpectedOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfTraceExpectedOduTcmC_Object = MibTableColumn
deployProvIfTraceExpectedOduTcmC = _DeployProvIfTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 68),
    _DeployProvIfTraceExpectedOduTcmC_Type()
)
deployProvIfTraceExpectedOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceExpectedOduTcmC.setStatus("current")


class _DeployProvIfTraceTransmitSapiOduTcmC_Type(OctetString):
    """Custom type deployProvIfTraceTransmitSapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitSapiOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitSapiOduTcmC_Object = MibTableColumn
deployProvIfTraceTransmitSapiOduTcmC = _DeployProvIfTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 69),
    _DeployProvIfTraceTransmitSapiOduTcmC_Type()
)
deployProvIfTraceTransmitSapiOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitSapiOduTcmC.setStatus("current")


class _DeployProvIfTraceTransmitDapiOduTcmC_Type(OctetString):
    """Custom type deployProvIfTraceTransmitDapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfTraceTransmitDapiOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitDapiOduTcmC_Object = MibTableColumn
deployProvIfTraceTransmitDapiOduTcmC = _DeployProvIfTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 70),
    _DeployProvIfTraceTransmitDapiOduTcmC_Type()
)
deployProvIfTraceTransmitDapiOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitDapiOduTcmC.setStatus("current")


class _DeployProvIfTraceTransmitOpspOduTcmC_Type(OctetString):
    """Custom type deployProvIfTraceTransmitOpspOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfTraceTransmitOpspOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfTraceTransmitOpspOduTcmC_Object = MibTableColumn
deployProvIfTraceTransmitOpspOduTcmC = _DeployProvIfTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 71),
    _DeployProvIfTraceTransmitOpspOduTcmC_Type()
)
deployProvIfTraceTransmitOpspOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTraceTransmitOpspOduTcmC.setStatus("current")
_DeployProvIfTimModeOduTcmC_Type = TimMode
_DeployProvIfTimModeOduTcmC_Object = MibTableColumn
deployProvIfTimModeOduTcmC = _DeployProvIfTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 72),
    _DeployProvIfTimModeOduTcmC_Type()
)
deployProvIfTimModeOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTimModeOduTcmC.setStatus("current")
_DeployProvIfChannelProvisioning_Type = FspR7ChannelIdentifier
_DeployProvIfChannelProvisioning_Object = MibTableColumn
deployProvIfChannelProvisioning = _DeployProvIfChannelProvisioning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 73),
    _DeployProvIfChannelProvisioning_Type()
)
deployProvIfChannelProvisioning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfChannelProvisioning.setStatus("current")


class _DeployProvIfVariableGain_Type(Unsigned32):
    """Custom type deployProvIfVariableGain based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 350),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfVariableGain_Type.__name__ = "Unsigned32"
_DeployProvIfVariableGain_Object = MibTableColumn
deployProvIfVariableGain = _DeployProvIfVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 74),
    _DeployProvIfVariableGain_Type()
)
deployProvIfVariableGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfVariableGain.setUnits("0.1 dB")
_DeployProvIfBand_Type = FspR7OpticalBand
_DeployProvIfBand_Object = MibTableColumn
deployProvIfBand = _DeployProvIfBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 75),
    _DeployProvIfBand_Type()
)
deployProvIfBand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfBand.setStatus("current")


class _DeployProvIfSigDegThreshold_Type(Unsigned32):
    """Custom type deployProvIfSigDegThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegThreshold_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegThreshold_Object = MibTableColumn
deployProvIfSigDegThreshold = _DeployProvIfSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 76),
    _DeployProvIfSigDegThreshold_Type()
)
deployProvIfSigDegThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThreshold.setStatus("current")


class _DeployProvIfSigDegPeriodIntegration_Type(Unsigned32):
    """Custom type deployProvIfSigDegPeriodIntegration based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPeriodIntegration_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPeriodIntegration_Object = MibTableColumn
deployProvIfSigDegPeriodIntegration = _DeployProvIfSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 77),
    _DeployProvIfSigDegPeriodIntegration_Type()
)
deployProvIfSigDegPeriodIntegration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodIntegration.setUnits("s")
_DeployProvIfVoaMode_Type = FspR7VoaMode
_DeployProvIfVoaMode_Object = MibTableColumn
deployProvIfVoaMode = _DeployProvIfVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 78),
    _DeployProvIfVoaMode_Type()
)
deployProvIfVoaMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfVoaMode.setStatus("current")


class _DeployProvIfOpticalSetPoint_Type(Integer32):
    """Custom type deployProvIfOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfOpticalSetPoint_Type.__name__ = "Integer32"
_DeployProvIfOpticalSetPoint_Object = MibTableColumn
deployProvIfOpticalSetPoint = _DeployProvIfOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 79),
    _DeployProvIfOpticalSetPoint_Type()
)
deployProvIfOpticalSetPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfOpticalSetPoint.setUnits("0.1 dBm")


class _DeployProvIfVoaSetpoint_Type(Unsigned32):
    """Custom type deployProvIfVoaSetpoint based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfVoaSetpoint_Type.__name__ = "Unsigned32"
_DeployProvIfVoaSetpoint_Object = MibTableColumn
deployProvIfVoaSetpoint = _DeployProvIfVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 80),
    _DeployProvIfVoaSetpoint_Type()
)
deployProvIfVoaSetpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfVoaSetpoint.setUnits("0.1 dB")
_DeployProvIfLanAid_Type = EntityIndex
_DeployProvIfLanAid_Object = MibTableColumn
deployProvIfLanAid = _DeployProvIfLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 81),
    _DeployProvIfLanAid_Type()
)
deployProvIfLanAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLanAid.setStatus("current")
_DeployProvIfAprHighThreshold_Type = Unsigned32
_DeployProvIfAprHighThreshold_Object = MibTableColumn
deployProvIfAprHighThreshold = _DeployProvIfAprHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 82),
    _DeployProvIfAprHighThreshold_Type()
)
deployProvIfAprHighThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAprHighThreshold.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfAprHighThreshold.setUnits("0.1 dBm")


class _DeployProvIfPumpPower_Type(Integer32):
    """Custom type deployProvIfPumpPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(115, 138),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfPumpPower_Type.__name__ = "Integer32"
_DeployProvIfPumpPower_Object = MibTableColumn
deployProvIfPumpPower = _DeployProvIfPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 83),
    _DeployProvIfPumpPower_Type()
)
deployProvIfPumpPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfPumpPower.setUnits("0.2 dBm")
_DeployProvIfIpType_Type = FspR7IpType
_DeployProvIfIpType_Object = MibTableColumn
deployProvIfIpType = _DeployProvIfIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 84),
    _DeployProvIfIpType_Type()
)
deployProvIfIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfIpType.setStatus("current")
_DeployProvIfWdmRxChannel_Type = FspR7ChannelIdentifier
_DeployProvIfWdmRxChannel_Object = MibTableColumn
deployProvIfWdmRxChannel = _DeployProvIfWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 85),
    _DeployProvIfWdmRxChannel_Type()
)
deployProvIfWdmRxChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfWdmRxChannel.setStatus("current")
_DeployProvIfSigDegThresSonetSection_Type = FspR7BERThresholdSection
_DeployProvIfSigDegThresSonetSection_Object = MibTableColumn
deployProvIfSigDegThresSonetSection = _DeployProvIfSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 86),
    _DeployProvIfSigDegThresSonetSection_Type()
)
deployProvIfSigDegThresSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresSonetSection.setStatus("current")


class _DeployProvIfSigDegThresSdhSection_Type(Unsigned32):
    """Custom type deployProvIfSigDegThresSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegThresSdhSection_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegThresSdhSection_Object = MibTableColumn
deployProvIfSigDegThresSdhSection = _DeployProvIfSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 87),
    _DeployProvIfSigDegThresSdhSection_Type()
)
deployProvIfSigDegThresSdhSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegThresSdhSection.setUnits("%")


class _DeployProvIfSigDegPeriodSdhSection_Type(Unsigned32):
    """Custom type deployProvIfSigDegPeriodSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPeriodSdhSection_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPeriodSdhSection_Object = MibTableColumn
deployProvIfSigDegPeriodSdhSection = _DeployProvIfSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 88),
    _DeployProvIfSigDegPeriodSdhSection_Type()
)
deployProvIfSigDegPeriodSdhSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPeriodSdhSection.setUnits("s")
_DeployProvIfDispersionMode_Type = FspR7DispersionModes
_DeployProvIfDispersionMode_Object = MibTableColumn
deployProvIfDispersionMode = _DeployProvIfDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 89),
    _DeployProvIfDispersionMode_Type()
)
deployProvIfDispersionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfDispersionMode.setStatus("current")


class _DeployProvIfDispersionSetting_Type(Integer32):
    """Custom type deployProvIfDispersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDispersionSetting_Type.__name__ = "Integer32"
_DeployProvIfDispersionSetting_Object = MibTableColumn
deployProvIfDispersionSetting = _DeployProvIfDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 90),
    _DeployProvIfDispersionSetting_Type()
)
deployProvIfDispersionSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDispersionSetting.setUnits("ps/nm")


class _DeployProvIfOffset_Type(Integer32):
    """Custom type deployProvIfOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfOffset_Type.__name__ = "Integer32"
_DeployProvIfOffset_Object = MibTableColumn
deployProvIfOffset = _DeployProvIfOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 91),
    _DeployProvIfOffset_Type()
)
deployProvIfOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOffset.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfOffset.setUnits("0.1 dB")
_DeployProvIfFunction_Type = FspR7InterfaceFunction
_DeployProvIfFunction_Object = MibTableColumn
deployProvIfFunction = _DeployProvIfFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 92),
    _DeployProvIfFunction_Type()
)
deployProvIfFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfFunction.setStatus("current")
_DeployProvIfPortMode_Type = FspR7PortMode
_DeployProvIfPortMode_Object = MibTableColumn
deployProvIfPortMode = _DeployProvIfPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 93),
    _DeployProvIfPortMode_Type()
)
deployProvIfPortMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfPortMode.setStatus("current")
_DeployProvIfPortRole_Type = FspR7PortRole
_DeployProvIfPortRole_Object = MibTableColumn
deployProvIfPortRole = _DeployProvIfPortRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 94),
    _DeployProvIfPortRole_Type()
)
deployProvIfPortRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfPortRole.setStatus("current")
_DeployProvIfUtag_Type = FspR7UntaggedFrames
_DeployProvIfUtag_Object = MibTableColumn
deployProvIfUtag = _DeployProvIfUtag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 95),
    _DeployProvIfUtag_Type()
)
deployProvIfUtag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfUtag.setStatus("current")


class _DeployProvIfPvid_Type(Unsigned32):
    """Custom type deployProvIfPvid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfPvid_Type.__name__ = "Unsigned32"
_DeployProvIfPvid_Object = MibTableColumn
deployProvIfPvid = _DeployProvIfPvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 96),
    _DeployProvIfPvid_Type()
)
deployProvIfPvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfPvid.setStatus("current")


class _DeployProvIfPriority_Type(Unsigned32):
    """Custom type deployProvIfPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfPriority_Type.__name__ = "Unsigned32"
_DeployProvIfPriority_Object = MibTableColumn
deployProvIfPriority = _DeployProvIfPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 97),
    _DeployProvIfPriority_Type()
)
deployProvIfPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfPriority.setStatus("current")
_DeployProvIfStagType_Type = FspR7SnmpHexString
_DeployProvIfStagType_Object = MibTableColumn
deployProvIfStagType = _DeployProvIfStagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 98),
    _DeployProvIfStagType_Type()
)
deployProvIfStagType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfStagType.setStatus("current")
_DeployProvIfCac_Type = FspR7L2CacEnable
_DeployProvIfCac_Object = MibTableColumn
deployProvIfCac = _DeployProvIfCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 99),
    _DeployProvIfCac_Type()
)
deployProvIfCac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfCac.setStatus("current")


class _DeployProvIfMaxFrameSize_Type(Unsigned32):
    """Custom type deployProvIfMaxFrameSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1518, 9600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfMaxFrameSize_Type.__name__ = "Unsigned32"
_DeployProvIfMaxFrameSize_Object = MibTableColumn
deployProvIfMaxFrameSize = _DeployProvIfMaxFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 100),
    _DeployProvIfMaxFrameSize_Type()
)
deployProvIfMaxFrameSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfMaxFrameSize.setStatus("current")
_DeployProvIfVethAid_Type = EntityIndex
_DeployProvIfVethAid_Object = MibTableColumn
deployProvIfVethAid = _DeployProvIfVethAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 101),
    _DeployProvIfVethAid_Type()
)
deployProvIfVethAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfVethAid.setStatus("current")


class _DeployProvIfLagPrio_Type(Unsigned32):
    """Custom type deployProvIfLagPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfLagPrio_Type.__name__ = "Unsigned32"
_DeployProvIfLagPrio_Object = MibTableColumn
deployProvIfLagPrio = _DeployProvIfLagPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 102),
    _DeployProvIfLagPrio_Type()
)
deployProvIfLagPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLagPrio.setStatus("current")
_DeployProvIfLagPortType_Type = FspR7LagPortType
_DeployProvIfLagPortType_Object = MibTableColumn
deployProvIfLagPortType = _DeployProvIfLagPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 103),
    _DeployProvIfLagPortType_Type()
)
deployProvIfLagPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLagPortType.setStatus("current")


class _DeployProvIfLagActivePorts_Type(Unsigned32):
    """Custom type deployProvIfLagActivePorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfLagActivePorts_Type.__name__ = "Unsigned32"
_DeployProvIfLagActivePorts_Object = MibTableColumn
deployProvIfLagActivePorts = _DeployProvIfLagActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 104),
    _DeployProvIfLagActivePorts_Type()
)
deployProvIfLagActivePorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLagActivePorts.setStatus("current")
_DeployProvIfLacpMode_Type = FspR7LacpMode
_DeployProvIfLacpMode_Object = MibTableColumn
deployProvIfLacpMode = _DeployProvIfLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 105),
    _DeployProvIfLacpMode_Type()
)
deployProvIfLacpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLacpMode.setStatus("current")
_DeployProvIfLagLoadBallanceSource_Type = FspR7LagLoadBallanceSource
_DeployProvIfLagLoadBallanceSource_Object = MibTableColumn
deployProvIfLagLoadBallanceSource = _DeployProvIfLagLoadBallanceSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 106),
    _DeployProvIfLagLoadBallanceSource_Type()
)
deployProvIfLagLoadBallanceSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLagLoadBallanceSource.setStatus("current")
_DeployProvIfLacpTimeout_Type = FspR7LacpTimeout
_DeployProvIfLacpTimeout_Object = MibTableColumn
deployProvIfLacpTimeout = _DeployProvIfLacpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 107),
    _DeployProvIfLacpTimeout_Type()
)
deployProvIfLacpTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLacpTimeout.setStatus("current")
_DeployProvIfFarEndCommunication_Type = FspR7YesNo
_DeployProvIfFarEndCommunication_Object = MibTableColumn
deployProvIfFarEndCommunication = _DeployProvIfFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 108),
    _DeployProvIfFarEndCommunication_Type()
)
deployProvIfFarEndCommunication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfFarEndCommunication.setStatus("current")
_DeployProvIfEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvIfEqlzAdmin_Object = MibTableColumn
deployProvIfEqlzAdmin = _DeployProvIfEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 109),
    _DeployProvIfEqlzAdmin_Type()
)
deployProvIfEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfEqlzAdmin.setStatus("current")
_DeployProvIfTxOffDelay_Type = FspR7EnableDisable
_DeployProvIfTxOffDelay_Object = MibTableColumn
deployProvIfTxOffDelay = _DeployProvIfTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 110),
    _DeployProvIfTxOffDelay_Type()
)
deployProvIfTxOffDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTxOffDelay.setStatus("current")
_DeployProvIfOpuPayloadType_Type = FspR7OpuPayloadType
_DeployProvIfOpuPayloadType_Object = MibTableColumn
deployProvIfOpuPayloadType = _DeployProvIfOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 111),
    _DeployProvIfOpuPayloadType_Type()
)
deployProvIfOpuPayloadType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOpuPayloadType.setStatus("current")


class _DeployProvIfOscOpticalSetpoint_Type(Integer32):
    """Custom type deployProvIfOscOpticalSetpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfOscOpticalSetpoint_Type.__name__ = "Integer32"
_DeployProvIfOscOpticalSetpoint_Object = MibTableColumn
deployProvIfOscOpticalSetpoint = _DeployProvIfOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 112),
    _DeployProvIfOscOpticalSetpoint_Type()
)
deployProvIfOscOpticalSetpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfOscOpticalSetpoint.setUnits("0.1 dBm")
_DeployProvIfFiberBrand_Type = FspR7FiberBrand
_DeployProvIfFiberBrand_Object = MibTableColumn
deployProvIfFiberBrand = _DeployProvIfFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 113),
    _DeployProvIfFiberBrand_Type()
)
deployProvIfFiberBrand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfFiberBrand.setStatus("current")
_DeployProvIfTiltSet_Type = FspR7TiltSet
_DeployProvIfTiltSet_Object = MibTableColumn
deployProvIfTiltSet = _DeployProvIfTiltSet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 114),
    _DeployProvIfTiltSet_Type()
)
deployProvIfTiltSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTiltSet.setStatus("current")
_DeployProvIfXfpDecisionThres_Type = FspR7XfpDecisionThres
_DeployProvIfXfpDecisionThres_Object = MibTableColumn
deployProvIfXfpDecisionThres = _DeployProvIfXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 115),
    _DeployProvIfXfpDecisionThres_Type()
)
deployProvIfXfpDecisionThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfXfpDecisionThres.setStatus("current")
_DeployProvIfAutoPTassignment_Type = FspR7ManualAuto
_DeployProvIfAutoPTassignment_Object = MibTableColumn
deployProvIfAutoPTassignment = _DeployProvIfAutoPTassignment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 116),
    _DeployProvIfAutoPTassignment_Type()
)
deployProvIfAutoPTassignment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAutoPTassignment.setStatus("current")
_DeployProvIfTributarySlotMethod_Type = FspR7ManualAuto
_DeployProvIfTributarySlotMethod_Object = MibTableColumn
deployProvIfTributarySlotMethod = _DeployProvIfTributarySlotMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 117),
    _DeployProvIfTributarySlotMethod_Type()
)
deployProvIfTributarySlotMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfTributarySlotMethod.setStatus("current")
_DeployProvIfOduTribPortNo_Type = SnmpAdminString
_DeployProvIfOduTribPortNo_Object = MibTableColumn
deployProvIfOduTribPortNo = _DeployProvIfOduTribPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 118),
    _DeployProvIfOduTribPortNo_Type()
)
deployProvIfOduTribPortNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOduTribPortNo.setStatus("current")
_DeployProvIfOduTribTimeSlottNo_Type = SnmpAdminString
_DeployProvIfOduTribTimeSlottNo_Object = MibTableColumn
deployProvIfOduTribTimeSlottNo = _DeployProvIfOduTribTimeSlottNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 119),
    _DeployProvIfOduTribTimeSlottNo_Type()
)
deployProvIfOduTribTimeSlottNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfOduTribTimeSlottNo.setStatus("current")
_DeployProvIfRevertiveMode_Type = ApsRevertMode
_DeployProvIfRevertiveMode_Object = MibTableColumn
deployProvIfRevertiveMode = _DeployProvIfRevertiveMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 120),
    _DeployProvIfRevertiveMode_Type()
)
deployProvIfRevertiveMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfRevertiveMode.setStatus("current")
_DeployProvIfLaserDelayTimer_Type = FspR7LaserDelayTimer
_DeployProvIfLaserDelayTimer_Object = MibTableColumn
deployProvIfLaserDelayTimer = _DeployProvIfLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 121),
    _DeployProvIfLaserDelayTimer_Type()
)
deployProvIfLaserDelayTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLaserDelayTimer.setStatus("current")


class _DeployProvIfLaserOffTimer_Type(Unsigned32):
    """Custom type deployProvIfLaserOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfLaserOffTimer_Type.__name__ = "Unsigned32"
_DeployProvIfLaserOffTimer_Object = MibTableColumn
deployProvIfLaserOffTimer = _DeployProvIfLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 122),
    _DeployProvIfLaserOffTimer_Type()
)
deployProvIfLaserOffTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfLaserOffTimer.setUnits("ms")


class _DeployProvIfLaserOnTimer_Type(Unsigned32):
    """Custom type deployProvIfLaserOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfLaserOnTimer_Type.__name__ = "Unsigned32"
_DeployProvIfLaserOnTimer_Object = MibTableColumn
deployProvIfLaserOnTimer = _DeployProvIfLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 123),
    _DeployProvIfLaserOnTimer_Type()
)
deployProvIfLaserOnTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfLaserOnTimer.setUnits("ms")
_DeployProvIfLaneChannelSetting_Type = FspR7ChannelIdentifier
_DeployProvIfLaneChannelSetting_Object = MibTableColumn
deployProvIfLaneChannelSetting = _DeployProvIfLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 124),
    _DeployProvIfLaneChannelSetting_Type()
)
deployProvIfLaneChannelSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfLaneChannelSetting.setStatus("current")
_DeployProvIfBip_Type = FspR7Bip
_DeployProvIfBip_Object = MibTableColumn
deployProvIfBip = _DeployProvIfBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 125),
    _DeployProvIfBip_Type()
)
deployProvIfBip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfBip.setStatus("current")
_DeployProvIfCodeGain_Type = FspR7CodeGain
_DeployProvIfCodeGain_Object = MibTableColumn
deployProvIfCodeGain = _DeployProvIfCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 126),
    _DeployProvIfCodeGain_Type()
)
deployProvIfCodeGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfCodeGain.setStatus("current")
_DeployProvIfEdfaPwrOut_Type = FspR7EdfaOutputPowerRating
_DeployProvIfEdfaPwrOut_Object = MibTableColumn
deployProvIfEdfaPwrOut = _DeployProvIfEdfaPwrOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 127),
    _DeployProvIfEdfaPwrOut_Type()
)
deployProvIfEdfaPwrOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfEdfaPwrOut.setStatus("current")


class _DeployProvIfPrio_Type(Unsigned32):
    """Custom type deployProvIfPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfPrio_Type.__name__ = "Unsigned32"
_DeployProvIfPrio_Object = MibTableColumn
deployProvIfPrio = _DeployProvIfPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 128),
    _DeployProvIfPrio_Type()
)
deployProvIfPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfPrio.setStatus("current")
_DeployProvIfAuthType_Type = FspR7CpAuthType
_DeployProvIfAuthType_Object = MibTableColumn
deployProvIfAuthType = _DeployProvIfAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 129),
    _DeployProvIfAuthType_Type()
)
deployProvIfAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAuthType.setStatus("current")
_DeployProvIfAuthString_Type = SnmpAdminString
_DeployProvIfAuthString_Object = MibTableColumn
deployProvIfAuthString = _DeployProvIfAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 130),
    _DeployProvIfAuthString_Type()
)
deployProvIfAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfAuthString.setStatus("current")


class _DeployProvIfSigDegPcslThreshold_Type(Unsigned32):
    """Custom type deployProvIfSigDegPcslThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfSigDegPcslThreshold_Type.__name__ = "Unsigned32"
_DeployProvIfSigDegPcslThreshold_Object = MibTableColumn
deployProvIfSigDegPcslThreshold = _DeployProvIfSigDegPcslThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 1, 1, 131),
    _DeployProvIfSigDegPcslThreshold_Type()
)
deployProvIfSigDegPcslThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvIfSigDegPcslThreshold.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfSigDegPcslThreshold.setUnits("%")
_DeployProvIfCapTable_Object = MibTable
deployProvIfCapTable = _DeployProvIfCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2)
)
if mibBuilder.loadTexts:
    deployProvIfCapTable.setStatus("current")
_DeployProvIfCapEntry_Object = MibTableRow
deployProvIfCapEntry = _DeployProvIfCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1)
)
deployProvIfCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvIfCapEntry.setStatus("current")
_DeployProvIfCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvIfCapRowStatus_Object = MibTableColumn
deployProvIfCapRowStatus = _DeployProvIfCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 1),
    _DeployProvIfCapRowStatus_Type()
)
deployProvIfCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapRowStatus.setStatus("current")
_DeployProvIfCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvIfCapForceDestroy_Object = MibTableColumn
deployProvIfCapForceDestroy = _DeployProvIfCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 2),
    _DeployProvIfCapForceDestroy_Type()
)
deployProvIfCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapForceDestroy.setStatus("current")
_DeployProvIfCapType_Type = FspR7InterfaceTypeCaps
_DeployProvIfCapType_Object = MibTableColumn
deployProvIfCapType = _DeployProvIfCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 3),
    _DeployProvIfCapType_Type()
)
deployProvIfCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapType.setStatus("current")
_DeployProvIfCapPayload_Type = OtnPayloadTypeCaps
_DeployProvIfCapPayload_Object = MibTableColumn
deployProvIfCapPayload = _DeployProvIfCapPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 4),
    _DeployProvIfCapPayload_Type()
)
deployProvIfCapPayload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapPayload.setStatus("current")
_DeployProvIfCapBehaviour_Type = FspR7PortBehaviourCaps
_DeployProvIfCapBehaviour_Object = MibTableColumn
deployProvIfCapBehaviour = _DeployProvIfCapBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 5),
    _DeployProvIfCapBehaviour_Type()
)
deployProvIfCapBehaviour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapBehaviour.setStatus("current")
_DeployProvIfCapTerminationLevel_Type = OhTerminationLevelCaps
_DeployProvIfCapTerminationLevel_Object = MibTableColumn
deployProvIfCapTerminationLevel = _DeployProvIfCapTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 6),
    _DeployProvIfCapTerminationLevel_Type()
)
deployProvIfCapTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTerminationLevel.setStatus("current")
_DeployProvIfCapAlsMode_Type = FspR7AlsModeCaps
_DeployProvIfCapAlsMode_Object = MibTableColumn
deployProvIfCapAlsMode = _DeployProvIfCapAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 7),
    _DeployProvIfCapAlsMode_Type()
)
deployProvIfCapAlsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAlsMode.setStatus("current")
_DeployProvIfCapErrorForwarding_Type = FspR7ErrorFwdModeCaps
_DeployProvIfCapErrorForwarding_Object = MibTableColumn
deployProvIfCapErrorForwarding = _DeployProvIfCapErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 8),
    _DeployProvIfCapErrorForwarding_Type()
)
deployProvIfCapErrorForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapErrorForwarding.setStatus("current")
_DeployProvIfCapLaserOffDelayFunction_Type = EnableStateCaps
_DeployProvIfCapLaserOffDelayFunction_Object = MibTableColumn
deployProvIfCapLaserOffDelayFunction = _DeployProvIfCapLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 9),
    _DeployProvIfCapLaserOffDelayFunction_Type()
)
deployProvIfCapLaserOffDelayFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLaserOffDelayFunction.setStatus("current")
_DeployProvIfCapFecType_Type = FspR7FecTypeCaps
_DeployProvIfCapFecType_Object = MibTableColumn
deployProvIfCapFecType = _DeployProvIfCapFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 10),
    _DeployProvIfCapFecType_Type()
)
deployProvIfCapFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapFecType.setStatus("current")
_DeployProvIfCapTimingSource_Type = SonetTimingSourceCaps
_DeployProvIfCapTimingSource_Object = MibTableColumn
deployProvIfCapTimingSource = _DeployProvIfCapTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 11),
    _DeployProvIfCapTimingSource_Type()
)
deployProvIfCapTimingSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTimingSource.setStatus("current")
_DeployProvIfCapTcmALevel_Type = OtnTcmLevelCaps
_DeployProvIfCapTcmALevel_Object = MibTableColumn
deployProvIfCapTcmALevel = _DeployProvIfCapTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 12),
    _DeployProvIfCapTcmALevel_Type()
)
deployProvIfCapTcmALevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTcmALevel.setStatus("current")
_DeployProvIfCapTcmBLevel_Type = OtnTcmLevelCaps
_DeployProvIfCapTcmBLevel_Object = MibTableColumn
deployProvIfCapTcmBLevel = _DeployProvIfCapTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 13),
    _DeployProvIfCapTcmBLevel_Type()
)
deployProvIfCapTcmBLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTcmBLevel.setStatus("current")
_DeployProvIfCapSigDegThresSonetLine_Type = FspR7BERThresholdCaps
_DeployProvIfCapSigDegThresSonetLine_Object = MibTableColumn
deployProvIfCapSigDegThresSonetLine = _DeployProvIfCapSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 14),
    _DeployProvIfCapSigDegThresSonetLine_Type()
)
deployProvIfCapSigDegThresSonetLine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresSonetLine.setStatus("current")
_DeployProvIfCapSigDegThresSdhMs_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegThresSdhMs_Object = MibTableColumn
deployProvIfCapSigDegThresSdhMs = _DeployProvIfCapSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 15),
    _DeployProvIfCapSigDegThresSdhMs_Type()
)
deployProvIfCapSigDegThresSdhMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresSdhMs.setUnits("%")
_DeployProvIfCapSignalDegradePeriod_Type = FspR7Unsigned32Caps
_DeployProvIfCapSignalDegradePeriod_Object = MibTableColumn
deployProvIfCapSignalDegradePeriod = _DeployProvIfCapSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 16),
    _DeployProvIfCapSignalDegradePeriod_Type()
)
deployProvIfCapSignalDegradePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSignalDegradePeriod.setUnits("s")
_DeployProvIfCapAutonegotiation_Type = EnableStateCaps
_DeployProvIfCapAutonegotiation_Object = MibTableColumn
deployProvIfCapAutonegotiation = _DeployProvIfCapAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 17),
    _DeployProvIfCapAutonegotiation_Type()
)
deployProvIfCapAutonegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAutonegotiation.setStatus("current")
_DeployProvIfCapBitrate_Type = FspR7BitrateCaps
_DeployProvIfCapBitrate_Object = MibTableColumn
deployProvIfCapBitrate = _DeployProvIfCapBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 18),
    _DeployProvIfCapBitrate_Type()
)
deployProvIfCapBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapBitrate.setStatus("current")
_DeployProvIfCapDuplex_Type = EthDuplexModeCaps
_DeployProvIfCapDuplex_Object = MibTableColumn
deployProvIfCapDuplex = _DeployProvIfCapDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 19),
    _DeployProvIfCapDuplex_Type()
)
deployProvIfCapDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapDuplex.setStatus("current")
_DeployProvIfCapFlowControl_Type = FspR7FlowControlModeCaps
_DeployProvIfCapFlowControl_Object = MibTableColumn
deployProvIfCapFlowControl = _DeployProvIfCapFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 20),
    _DeployProvIfCapFlowControl_Type()
)
deployProvIfCapFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapFlowControl.setStatus("current")
_DeployProvIfCapOtnStuffing_Type = FspR7StuffCaps
_DeployProvIfCapOtnStuffing_Object = MibTableColumn
deployProvIfCapOtnStuffing = _DeployProvIfCapOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 21),
    _DeployProvIfCapOtnStuffing_Type()
)
deployProvIfCapOtnStuffing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOtnStuffing.setStatus("current")
_DeployProvIfCapSigDegThresOtu_Type = FspR7Integer32Caps
_DeployProvIfCapSigDegThresOtu_Object = MibTableColumn
deployProvIfCapSigDegThresOtu = _DeployProvIfCapSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 22),
    _DeployProvIfCapSigDegThresOtu_Type()
)
deployProvIfCapSigDegThresOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOtu.setUnits("%")
_DeployProvIfCapSigDegPeriodOtu_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPeriodOtu_Object = MibTableColumn
deployProvIfCapSigDegPeriodOtu = _DeployProvIfCapSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 23),
    _DeployProvIfCapSigDegPeriodOtu_Type()
)
deployProvIfCapSigDegPeriodOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOtu.setUnits("s")
_DeployProvIfCapSigDegThresOdu_Type = FspR7Integer32Caps
_DeployProvIfCapSigDegThresOdu_Object = MibTableColumn
deployProvIfCapSigDegThresOdu = _DeployProvIfCapSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 24),
    _DeployProvIfCapSigDegThresOdu_Type()
)
deployProvIfCapSigDegThresOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOdu.setUnits("%")
_DeployProvIfCapSigDegPeriodOdu_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPeriodOdu_Object = MibTableColumn
deployProvIfCapSigDegPeriodOdu = _DeployProvIfCapSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 25),
    _DeployProvIfCapSigDegPeriodOdu_Type()
)
deployProvIfCapSigDegPeriodOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOdu.setUnits("s")
_DeployProvIfCapSigDegThresOduTcmA_Type = FspR7Integer32Caps
_DeployProvIfCapSigDegThresOduTcmA_Object = MibTableColumn
deployProvIfCapSigDegThresOduTcmA = _DeployProvIfCapSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 26),
    _DeployProvIfCapSigDegThresOduTcmA_Type()
)
deployProvIfCapSigDegThresOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOduTcmA.setUnits("%")
_DeployProvIfCapSigDegPeriodOduTcmA_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPeriodOduTcmA_Object = MibTableColumn
deployProvIfCapSigDegPeriodOduTcmA = _DeployProvIfCapSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 27),
    _DeployProvIfCapSigDegPeriodOduTcmA_Type()
)
deployProvIfCapSigDegPeriodOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOduTcmA.setUnits("s")
_DeployProvIfCapSigDegThresOduTcmB_Type = FspR7Integer32Caps
_DeployProvIfCapSigDegThresOduTcmB_Object = MibTableColumn
deployProvIfCapSigDegThresOduTcmB = _DeployProvIfCapSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 28),
    _DeployProvIfCapSigDegThresOduTcmB_Type()
)
deployProvIfCapSigDegThresOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOduTcmB.setUnits("%")
_DeployProvIfCapSigDegPeriodOduTcmB_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPeriodOduTcmB_Object = MibTableColumn
deployProvIfCapSigDegPeriodOduTcmB = _DeployProvIfCapSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 29),
    _DeployProvIfCapSigDegPeriodOduTcmB_Type()
)
deployProvIfCapSigDegPeriodOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOduTcmB.setUnits("s")
_DeployProvIfCapTilt_Type = FspR7Integer32Caps
_DeployProvIfCapTilt_Object = MibTableColumn
deployProvIfCapTilt = _DeployProvIfCapTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 30),
    _DeployProvIfCapTilt_Type()
)
deployProvIfCapTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTilt.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapTilt.setUnits("0.1 dB")
_DeployProvIfCapGain_Type = FspR7GainCaps
_DeployProvIfCapGain_Object = MibTableColumn
deployProvIfCapGain = _DeployProvIfCapGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 31),
    _DeployProvIfCapGain_Type()
)
deployProvIfCapGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapGain.setStatus("current")
_DeployProvIfCapAdmin_Type = FspR7AdminStateCaps
_DeployProvIfCapAdmin_Object = MibTableColumn
deployProvIfCapAdmin = _DeployProvIfCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 32),
    _DeployProvIfCapAdmin_Type()
)
deployProvIfCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAdmin.setStatus("current")
_DeployProvIfCapAttenuationGradient_Type = FspR7Unsigned32Caps
_DeployProvIfCapAttenuationGradient_Object = MibTableColumn
deployProvIfCapAttenuationGradient = _DeployProvIfCapAttenuationGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 33),
    _DeployProvIfCapAttenuationGradient_Type()
)
deployProvIfCapAttenuationGradient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAttenuationGradient.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapAttenuationGradient.setUnits("0.1 dB/min")
_DeployProvIfCapSigDegThresReceiver_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegThresReceiver_Object = MibTableColumn
deployProvIfCapSigDegThresReceiver = _DeployProvIfCapSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 34),
    _DeployProvIfCapSigDegThresReceiver_Type()
)
deployProvIfCapSigDegThresReceiver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresReceiver.setUnits("0.1 dB")
_DeployProvIfCapTcmCLevel_Type = OtnTcmLevelCaps
_DeployProvIfCapTcmCLevel_Object = MibTableColumn
deployProvIfCapTcmCLevel = _DeployProvIfCapTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 35),
    _DeployProvIfCapTcmCLevel_Type()
)
deployProvIfCapTcmCLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTcmCLevel.setStatus("current")
_DeployProvIfCapSigDegThresOduTcmC_Type = FspR7Integer32Caps
_DeployProvIfCapSigDegThresOduTcmC_Object = MibTableColumn
deployProvIfCapSigDegThresOduTcmC = _DeployProvIfCapSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 36),
    _DeployProvIfCapSigDegThresOduTcmC_Type()
)
deployProvIfCapSigDegThresOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresOduTcmC.setUnits("%")
_DeployProvIfCapSigDegPeriodOduTcmC_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPeriodOduTcmC_Object = MibTableColumn
deployProvIfCapSigDegPeriodOduTcmC = _DeployProvIfCapSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 37),
    _DeployProvIfCapSigDegPeriodOduTcmC_Type()
)
deployProvIfCapSigDegPeriodOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodOduTcmC.setUnits("s")
_DeployProvIfCapDisparityCorrection_Type = EnableStateCaps
_DeployProvIfCapDisparityCorrection_Object = MibTableColumn
deployProvIfCapDisparityCorrection = _DeployProvIfCapDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 38),
    _DeployProvIfCapDisparityCorrection_Type()
)
deployProvIfCapDisparityCorrection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapDisparityCorrection.setStatus("current")
_DeployProvIfCapIpAddr_Type = FspR7YesNo
_DeployProvIfCapIpAddr_Object = MibTableColumn
deployProvIfCapIpAddr = _DeployProvIfCapIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 39),
    _DeployProvIfCapIpAddr_Type()
)
deployProvIfCapIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapIpAddr.setStatus("current")
_DeployProvIfCapIpMask_Type = FspR7YesNo
_DeployProvIfCapIpMask_Object = MibTableColumn
deployProvIfCapIpMask = _DeployProvIfCapIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 40),
    _DeployProvIfCapIpMask_Type()
)
deployProvIfCapIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapIpMask.setStatus("current")
_DeployProvIfCapOspf_Type = FspR7OspfModeCaps
_DeployProvIfCapOspf_Object = MibTableColumn
deployProvIfCapOspf = _DeployProvIfCapOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 41),
    _DeployProvIfCapOspf_Type()
)
deployProvIfCapOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOspf.setStatus("current")
_DeployProvIfCapMetric_Type = FspR7Unsigned32Caps
_DeployProvIfCapMetric_Object = MibTableColumn
deployProvIfCapMetric = _DeployProvIfCapMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 42),
    _DeployProvIfCapMetric_Type()
)
deployProvIfCapMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapMetric.setStatus("current")
_DeployProvIfCapAreaId_Type = FspR7YesNo
_DeployProvIfCapAreaId_Object = MibTableColumn
deployProvIfCapAreaId = _DeployProvIfCapAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 43),
    _DeployProvIfCapAreaId_Type()
)
deployProvIfCapAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAreaId.setStatus("current")
_DeployProvIfCapTraceFormSonetSection_Type = SonetTraceFormCaps
_DeployProvIfCapTraceFormSonetSection_Object = MibTableColumn
deployProvIfCapTraceFormSonetSection = _DeployProvIfCapTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 44),
    _DeployProvIfCapTraceFormSonetSection_Type()
)
deployProvIfCapTraceFormSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceFormSonetSection.setStatus("current")
_DeployProvIfCapTraceExpectedSonetSection_Type = Integer32
_DeployProvIfCapTraceExpectedSonetSection_Object = MibTableColumn
deployProvIfCapTraceExpectedSonetSection = _DeployProvIfCapTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 45),
    _DeployProvIfCapTraceExpectedSonetSection_Type()
)
deployProvIfCapTraceExpectedSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceExpectedSonetSection.setStatus("current")
_DeployProvIfCapTraceTransmitSonetSection_Type = Integer32
_DeployProvIfCapTraceTransmitSonetSection_Object = MibTableColumn
deployProvIfCapTraceTransmitSonetSection = _DeployProvIfCapTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 46),
    _DeployProvIfCapTraceTransmitSonetSection_Type()
)
deployProvIfCapTraceTransmitSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitSonetSection.setStatus("current")
_DeployProvIfCapTimModeSonetSection_Type = TimModeCaps
_DeployProvIfCapTimModeSonetSection_Object = MibTableColumn
deployProvIfCapTimModeSonetSection = _DeployProvIfCapTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 47),
    _DeployProvIfCapTimModeSonetSection_Type()
)
deployProvIfCapTimModeSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTimModeSonetSection.setStatus("current")
_DeployProvIfCapTraceExpectedOtu_Type = Integer32
_DeployProvIfCapTraceExpectedOtu_Object = MibTableColumn
deployProvIfCapTraceExpectedOtu = _DeployProvIfCapTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 48),
    _DeployProvIfCapTraceExpectedOtu_Type()
)
deployProvIfCapTraceExpectedOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceExpectedOtu.setStatus("current")
_DeployProvIfCapTraceTransmitSapiOtu_Type = Integer32
_DeployProvIfCapTraceTransmitSapiOtu_Object = MibTableColumn
deployProvIfCapTraceTransmitSapiOtu = _DeployProvIfCapTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 49),
    _DeployProvIfCapTraceTransmitSapiOtu_Type()
)
deployProvIfCapTraceTransmitSapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitSapiOtu.setStatus("current")
_DeployProvIfCapTraceTransmitDapiOtu_Type = Integer32
_DeployProvIfCapTraceTransmitDapiOtu_Object = MibTableColumn
deployProvIfCapTraceTransmitDapiOtu = _DeployProvIfCapTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 50),
    _DeployProvIfCapTraceTransmitDapiOtu_Type()
)
deployProvIfCapTraceTransmitDapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitDapiOtu.setStatus("current")
_DeployProvIfCapTraceTransmitOpspOtu_Type = Integer32
_DeployProvIfCapTraceTransmitOpspOtu_Object = MibTableColumn
deployProvIfCapTraceTransmitOpspOtu = _DeployProvIfCapTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 51),
    _DeployProvIfCapTraceTransmitOpspOtu_Type()
)
deployProvIfCapTraceTransmitOpspOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitOpspOtu.setStatus("current")
_DeployProvIfCapTimModeOtu_Type = TimModeCaps
_DeployProvIfCapTimModeOtu_Object = MibTableColumn
deployProvIfCapTimModeOtu = _DeployProvIfCapTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 52),
    _DeployProvIfCapTimModeOtu_Type()
)
deployProvIfCapTimModeOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTimModeOtu.setStatus("current")
_DeployProvIfCapTraceExpectedOdu_Type = Integer32
_DeployProvIfCapTraceExpectedOdu_Object = MibTableColumn
deployProvIfCapTraceExpectedOdu = _DeployProvIfCapTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 53),
    _DeployProvIfCapTraceExpectedOdu_Type()
)
deployProvIfCapTraceExpectedOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceExpectedOdu.setStatus("current")
_DeployProvIfCapTraceTransmitSapiOdu_Type = Integer32
_DeployProvIfCapTraceTransmitSapiOdu_Object = MibTableColumn
deployProvIfCapTraceTransmitSapiOdu = _DeployProvIfCapTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 54),
    _DeployProvIfCapTraceTransmitSapiOdu_Type()
)
deployProvIfCapTraceTransmitSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitSapiOdu.setStatus("current")
_DeployProvIfCapTraceTransmitDapiOdu_Type = Integer32
_DeployProvIfCapTraceTransmitDapiOdu_Object = MibTableColumn
deployProvIfCapTraceTransmitDapiOdu = _DeployProvIfCapTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 55),
    _DeployProvIfCapTraceTransmitDapiOdu_Type()
)
deployProvIfCapTraceTransmitDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitDapiOdu.setStatus("current")
_DeployProvIfCapTraceTransmitOpspOdu_Type = Integer32
_DeployProvIfCapTraceTransmitOpspOdu_Object = MibTableColumn
deployProvIfCapTraceTransmitOpspOdu = _DeployProvIfCapTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 56),
    _DeployProvIfCapTraceTransmitOpspOdu_Type()
)
deployProvIfCapTraceTransmitOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitOpspOdu.setStatus("current")
_DeployProvIfCapTimModeOdu_Type = TimModeCaps
_DeployProvIfCapTimModeOdu_Object = MibTableColumn
deployProvIfCapTimModeOdu = _DeployProvIfCapTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 57),
    _DeployProvIfCapTimModeOdu_Type()
)
deployProvIfCapTimModeOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTimModeOdu.setStatus("current")
_DeployProvIfCapTraceExpectedOduTcmA_Type = Integer32
_DeployProvIfCapTraceExpectedOduTcmA_Object = MibTableColumn
deployProvIfCapTraceExpectedOduTcmA = _DeployProvIfCapTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 58),
    _DeployProvIfCapTraceExpectedOduTcmA_Type()
)
deployProvIfCapTraceExpectedOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceExpectedOduTcmA.setStatus("current")
_DeployProvIfCapTraceTransmitSapiOduTcmA_Type = Integer32
_DeployProvIfCapTraceTransmitSapiOduTcmA_Object = MibTableColumn
deployProvIfCapTraceTransmitSapiOduTcmA = _DeployProvIfCapTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 59),
    _DeployProvIfCapTraceTransmitSapiOduTcmA_Type()
)
deployProvIfCapTraceTransmitSapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitSapiOduTcmA.setStatus("current")
_DeployProvIfCapTraceTransmitDapiOduTcmA_Type = Integer32
_DeployProvIfCapTraceTransmitDapiOduTcmA_Object = MibTableColumn
deployProvIfCapTraceTransmitDapiOduTcmA = _DeployProvIfCapTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 60),
    _DeployProvIfCapTraceTransmitDapiOduTcmA_Type()
)
deployProvIfCapTraceTransmitDapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitDapiOduTcmA.setStatus("current")
_DeployProvIfCapTraceTransmitOpspOduTcmA_Type = Integer32
_DeployProvIfCapTraceTransmitOpspOduTcmA_Object = MibTableColumn
deployProvIfCapTraceTransmitOpspOduTcmA = _DeployProvIfCapTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 61),
    _DeployProvIfCapTraceTransmitOpspOduTcmA_Type()
)
deployProvIfCapTraceTransmitOpspOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitOpspOduTcmA.setStatus("current")
_DeployProvIfCapTimModeOduTcmA_Type = TimModeCaps
_DeployProvIfCapTimModeOduTcmA_Object = MibTableColumn
deployProvIfCapTimModeOduTcmA = _DeployProvIfCapTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 62),
    _DeployProvIfCapTimModeOduTcmA_Type()
)
deployProvIfCapTimModeOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTimModeOduTcmA.setStatus("current")
_DeployProvIfCapTraceExpectedOduTcmB_Type = Integer32
_DeployProvIfCapTraceExpectedOduTcmB_Object = MibTableColumn
deployProvIfCapTraceExpectedOduTcmB = _DeployProvIfCapTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 63),
    _DeployProvIfCapTraceExpectedOduTcmB_Type()
)
deployProvIfCapTraceExpectedOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceExpectedOduTcmB.setStatus("current")
_DeployProvIfCapTraceTransmitSapiOduTcmB_Type = Integer32
_DeployProvIfCapTraceTransmitSapiOduTcmB_Object = MibTableColumn
deployProvIfCapTraceTransmitSapiOduTcmB = _DeployProvIfCapTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 64),
    _DeployProvIfCapTraceTransmitSapiOduTcmB_Type()
)
deployProvIfCapTraceTransmitSapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitSapiOduTcmB.setStatus("current")
_DeployProvIfCapTraceTransmitDapiOduTcmB_Type = Integer32
_DeployProvIfCapTraceTransmitDapiOduTcmB_Object = MibTableColumn
deployProvIfCapTraceTransmitDapiOduTcmB = _DeployProvIfCapTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 65),
    _DeployProvIfCapTraceTransmitDapiOduTcmB_Type()
)
deployProvIfCapTraceTransmitDapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitDapiOduTcmB.setStatus("current")
_DeployProvIfCapTraceTransmitOpspOduTcmB_Type = Integer32
_DeployProvIfCapTraceTransmitOpspOduTcmB_Object = MibTableColumn
deployProvIfCapTraceTransmitOpspOduTcmB = _DeployProvIfCapTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 66),
    _DeployProvIfCapTraceTransmitOpspOduTcmB_Type()
)
deployProvIfCapTraceTransmitOpspOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitOpspOduTcmB.setStatus("current")
_DeployProvIfCapTimModeOduTcmB_Type = TimModeCaps
_DeployProvIfCapTimModeOduTcmB_Object = MibTableColumn
deployProvIfCapTimModeOduTcmB = _DeployProvIfCapTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 67),
    _DeployProvIfCapTimModeOduTcmB_Type()
)
deployProvIfCapTimModeOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTimModeOduTcmB.setStatus("current")
_DeployProvIfCapTraceExpectedOduTcmC_Type = Integer32
_DeployProvIfCapTraceExpectedOduTcmC_Object = MibTableColumn
deployProvIfCapTraceExpectedOduTcmC = _DeployProvIfCapTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 68),
    _DeployProvIfCapTraceExpectedOduTcmC_Type()
)
deployProvIfCapTraceExpectedOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceExpectedOduTcmC.setStatus("current")
_DeployProvIfCapTraceTransmitSapiOduTcmC_Type = Integer32
_DeployProvIfCapTraceTransmitSapiOduTcmC_Object = MibTableColumn
deployProvIfCapTraceTransmitSapiOduTcmC = _DeployProvIfCapTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 69),
    _DeployProvIfCapTraceTransmitSapiOduTcmC_Type()
)
deployProvIfCapTraceTransmitSapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitSapiOduTcmC.setStatus("current")
_DeployProvIfCapTraceTransmitDapiOduTcmC_Type = Integer32
_DeployProvIfCapTraceTransmitDapiOduTcmC_Object = MibTableColumn
deployProvIfCapTraceTransmitDapiOduTcmC = _DeployProvIfCapTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 70),
    _DeployProvIfCapTraceTransmitDapiOduTcmC_Type()
)
deployProvIfCapTraceTransmitDapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitDapiOduTcmC.setStatus("current")
_DeployProvIfCapTraceTransmitOpspOduTcmC_Type = Integer32
_DeployProvIfCapTraceTransmitOpspOduTcmC_Object = MibTableColumn
deployProvIfCapTraceTransmitOpspOduTcmC = _DeployProvIfCapTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 71),
    _DeployProvIfCapTraceTransmitOpspOduTcmC_Type()
)
deployProvIfCapTraceTransmitOpspOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTraceTransmitOpspOduTcmC.setStatus("current")
_DeployProvIfCapTimModeOduTcmC_Type = TimModeCaps
_DeployProvIfCapTimModeOduTcmC_Object = MibTableColumn
deployProvIfCapTimModeOduTcmC = _DeployProvIfCapTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 72),
    _DeployProvIfCapTimModeOduTcmC_Type()
)
deployProvIfCapTimModeOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTimModeOduTcmC.setStatus("current")
_DeployProvIfCapChannelProvisioning_Type = FspR7ChannelIdentifierCaps
_DeployProvIfCapChannelProvisioning_Object = MibTableColumn
deployProvIfCapChannelProvisioning = _DeployProvIfCapChannelProvisioning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 73),
    _DeployProvIfCapChannelProvisioning_Type()
)
deployProvIfCapChannelProvisioning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapChannelProvisioning.setStatus("current")
_DeployProvIfCapVariableGain_Type = FspR7Unsigned32Caps
_DeployProvIfCapVariableGain_Object = MibTableColumn
deployProvIfCapVariableGain = _DeployProvIfCapVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 74),
    _DeployProvIfCapVariableGain_Type()
)
deployProvIfCapVariableGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapVariableGain.setUnits("0.1 dB")
_DeployProvIfCapBand_Type = FspR7OpticalBandCaps
_DeployProvIfCapBand_Object = MibTableColumn
deployProvIfCapBand = _DeployProvIfCapBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 75),
    _DeployProvIfCapBand_Type()
)
deployProvIfCapBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapBand.setStatus("current")
_DeployProvIfCapSigDegThreshold_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegThreshold_Object = MibTableColumn
deployProvIfCapSigDegThreshold = _DeployProvIfCapSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 76),
    _DeployProvIfCapSigDegThreshold_Type()
)
deployProvIfCapSigDegThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThreshold.setStatus("current")
_DeployProvIfCapSigDegPeriodIntegration_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPeriodIntegration_Object = MibTableColumn
deployProvIfCapSigDegPeriodIntegration = _DeployProvIfCapSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 77),
    _DeployProvIfCapSigDegPeriodIntegration_Type()
)
deployProvIfCapSigDegPeriodIntegration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodIntegration.setUnits("s")
_DeployProvIfCapVoaMode_Type = FspR7VoaModeCaps
_DeployProvIfCapVoaMode_Object = MibTableColumn
deployProvIfCapVoaMode = _DeployProvIfCapVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 78),
    _DeployProvIfCapVoaMode_Type()
)
deployProvIfCapVoaMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapVoaMode.setStatus("current")
_DeployProvIfCapOpticalSetPoint_Type = FspR7Integer32Caps
_DeployProvIfCapOpticalSetPoint_Object = MibTableColumn
deployProvIfCapOpticalSetPoint = _DeployProvIfCapOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 79),
    _DeployProvIfCapOpticalSetPoint_Type()
)
deployProvIfCapOpticalSetPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapOpticalSetPoint.setUnits("0.1 dBm")
_DeployProvIfCapVoaSetpoint_Type = FspR7Unsigned32Caps
_DeployProvIfCapVoaSetpoint_Object = MibTableColumn
deployProvIfCapVoaSetpoint = _DeployProvIfCapVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 80),
    _DeployProvIfCapVoaSetpoint_Type()
)
deployProvIfCapVoaSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapVoaSetpoint.setUnits("0.1 dB")
_DeployProvIfCapLanAid_Type = Integer32
_DeployProvIfCapLanAid_Object = MibTableColumn
deployProvIfCapLanAid = _DeployProvIfCapLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 81),
    _DeployProvIfCapLanAid_Type()
)
deployProvIfCapLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLanAid.setStatus("current")
_DeployProvIfCapAprHighThreshold_Type = FspR7Unsigned32Caps
_DeployProvIfCapAprHighThreshold_Object = MibTableColumn
deployProvIfCapAprHighThreshold = _DeployProvIfCapAprHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 82),
    _DeployProvIfCapAprHighThreshold_Type()
)
deployProvIfCapAprHighThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAprHighThreshold.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapAprHighThreshold.setUnits("0.1 dBm")
_DeployProvIfCapPumpPower_Type = FspR7Integer32Caps
_DeployProvIfCapPumpPower_Object = MibTableColumn
deployProvIfCapPumpPower = _DeployProvIfCapPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 83),
    _DeployProvIfCapPumpPower_Type()
)
deployProvIfCapPumpPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapPumpPower.setUnits("0.2 dBm")
_DeployProvIfCapIpType_Type = FspR7IpTypeCaps
_DeployProvIfCapIpType_Object = MibTableColumn
deployProvIfCapIpType = _DeployProvIfCapIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 84),
    _DeployProvIfCapIpType_Type()
)
deployProvIfCapIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapIpType.setStatus("current")
_DeployProvIfCapWdmRxChannel_Type = FspR7ChannelIdentifierCaps
_DeployProvIfCapWdmRxChannel_Object = MibTableColumn
deployProvIfCapWdmRxChannel = _DeployProvIfCapWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 85),
    _DeployProvIfCapWdmRxChannel_Type()
)
deployProvIfCapWdmRxChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapWdmRxChannel.setStatus("current")
_DeployProvIfCapSigDegThresSonetSection_Type = FspR7BERThresholdSectionCaps
_DeployProvIfCapSigDegThresSonetSection_Object = MibTableColumn
deployProvIfCapSigDegThresSonetSection = _DeployProvIfCapSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 86),
    _DeployProvIfCapSigDegThresSonetSection_Type()
)
deployProvIfCapSigDegThresSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresSonetSection.setStatus("current")
_DeployProvIfCapSigDegThresSdhSection_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegThresSdhSection_Object = MibTableColumn
deployProvIfCapSigDegThresSdhSection = _DeployProvIfCapSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 87),
    _DeployProvIfCapSigDegThresSdhSection_Type()
)
deployProvIfCapSigDegThresSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegThresSdhSection.setUnits("%")
_DeployProvIfCapSigDegPeriodSdhSection_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPeriodSdhSection_Object = MibTableColumn
deployProvIfCapSigDegPeriodSdhSection = _DeployProvIfCapSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 88),
    _DeployProvIfCapSigDegPeriodSdhSection_Type()
)
deployProvIfCapSigDegPeriodSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPeriodSdhSection.setUnits("s")
_DeployProvIfCapDispersionMode_Type = FspR7DispersionModesCaps
_DeployProvIfCapDispersionMode_Object = MibTableColumn
deployProvIfCapDispersionMode = _DeployProvIfCapDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 89),
    _DeployProvIfCapDispersionMode_Type()
)
deployProvIfCapDispersionMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapDispersionMode.setStatus("current")
_DeployProvIfCapDispersionSetting_Type = FspR7Integer32Caps
_DeployProvIfCapDispersionSetting_Object = MibTableColumn
deployProvIfCapDispersionSetting = _DeployProvIfCapDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 90),
    _DeployProvIfCapDispersionSetting_Type()
)
deployProvIfCapDispersionSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapDispersionSetting.setUnits("ps/nm")
_DeployProvIfCapOffset_Type = FspR7Integer32Caps
_DeployProvIfCapOffset_Object = MibTableColumn
deployProvIfCapOffset = _DeployProvIfCapOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 91),
    _DeployProvIfCapOffset_Type()
)
deployProvIfCapOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOffset.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapOffset.setUnits("0.1 dB")
_DeployProvIfCapFunction_Type = FspR7InterfaceFunctionCaps
_DeployProvIfCapFunction_Object = MibTableColumn
deployProvIfCapFunction = _DeployProvIfCapFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 92),
    _DeployProvIfCapFunction_Type()
)
deployProvIfCapFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapFunction.setStatus("current")
_DeployProvIfCapPortMode_Type = FspR7PortModeCaps
_DeployProvIfCapPortMode_Object = MibTableColumn
deployProvIfCapPortMode = _DeployProvIfCapPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 93),
    _DeployProvIfCapPortMode_Type()
)
deployProvIfCapPortMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapPortMode.setStatus("current")
_DeployProvIfCapPortRole_Type = FspR7PortRoleCaps
_DeployProvIfCapPortRole_Object = MibTableColumn
deployProvIfCapPortRole = _DeployProvIfCapPortRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 94),
    _DeployProvIfCapPortRole_Type()
)
deployProvIfCapPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapPortRole.setStatus("current")
_DeployProvIfCapUtag_Type = FspR7UntaggedFramesCaps
_DeployProvIfCapUtag_Object = MibTableColumn
deployProvIfCapUtag = _DeployProvIfCapUtag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 95),
    _DeployProvIfCapUtag_Type()
)
deployProvIfCapUtag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapUtag.setStatus("current")
_DeployProvIfCapPvid_Type = FspR7Unsigned32Caps
_DeployProvIfCapPvid_Object = MibTableColumn
deployProvIfCapPvid = _DeployProvIfCapPvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 96),
    _DeployProvIfCapPvid_Type()
)
deployProvIfCapPvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapPvid.setStatus("current")
_DeployProvIfCapPriority_Type = FspR7Unsigned32Caps
_DeployProvIfCapPriority_Object = MibTableColumn
deployProvIfCapPriority = _DeployProvIfCapPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 97),
    _DeployProvIfCapPriority_Type()
)
deployProvIfCapPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapPriority.setStatus("current")
_DeployProvIfCapStagType_Type = Integer32
_DeployProvIfCapStagType_Object = MibTableColumn
deployProvIfCapStagType = _DeployProvIfCapStagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 98),
    _DeployProvIfCapStagType_Type()
)
deployProvIfCapStagType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapStagType.setStatus("current")
_DeployProvIfCapCac_Type = FspR7L2CacEnableCaps
_DeployProvIfCapCac_Object = MibTableColumn
deployProvIfCapCac = _DeployProvIfCapCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 99),
    _DeployProvIfCapCac_Type()
)
deployProvIfCapCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapCac.setStatus("current")
_DeployProvIfCapMaxFrameSize_Type = FspR7Unsigned32Caps
_DeployProvIfCapMaxFrameSize_Object = MibTableColumn
deployProvIfCapMaxFrameSize = _DeployProvIfCapMaxFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 100),
    _DeployProvIfCapMaxFrameSize_Type()
)
deployProvIfCapMaxFrameSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapMaxFrameSize.setStatus("current")
_DeployProvIfCapVethAid_Type = Integer32
_DeployProvIfCapVethAid_Object = MibTableColumn
deployProvIfCapVethAid = _DeployProvIfCapVethAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 101),
    _DeployProvIfCapVethAid_Type()
)
deployProvIfCapVethAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapVethAid.setStatus("current")
_DeployProvIfCapLagPrio_Type = FspR7Unsigned32Caps
_DeployProvIfCapLagPrio_Object = MibTableColumn
deployProvIfCapLagPrio = _DeployProvIfCapLagPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 102),
    _DeployProvIfCapLagPrio_Type()
)
deployProvIfCapLagPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLagPrio.setStatus("current")
_DeployProvIfCapLagPortType_Type = FspR7LagPortTypeCaps
_DeployProvIfCapLagPortType_Object = MibTableColumn
deployProvIfCapLagPortType = _DeployProvIfCapLagPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 103),
    _DeployProvIfCapLagPortType_Type()
)
deployProvIfCapLagPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLagPortType.setStatus("current")
_DeployProvIfCapLagActivePorts_Type = FspR7Unsigned32Caps
_DeployProvIfCapLagActivePorts_Object = MibTableColumn
deployProvIfCapLagActivePorts = _DeployProvIfCapLagActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 104),
    _DeployProvIfCapLagActivePorts_Type()
)
deployProvIfCapLagActivePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLagActivePorts.setStatus("current")
_DeployProvIfCapLacpMode_Type = FspR7LacpModeCaps
_DeployProvIfCapLacpMode_Object = MibTableColumn
deployProvIfCapLacpMode = _DeployProvIfCapLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 105),
    _DeployProvIfCapLacpMode_Type()
)
deployProvIfCapLacpMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLacpMode.setStatus("current")
_DeployProvIfCapLagLoadBallanceSource_Type = FspR7LagLoadBallanceSourceCaps
_DeployProvIfCapLagLoadBallanceSource_Object = MibTableColumn
deployProvIfCapLagLoadBallanceSource = _DeployProvIfCapLagLoadBallanceSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 106),
    _DeployProvIfCapLagLoadBallanceSource_Type()
)
deployProvIfCapLagLoadBallanceSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLagLoadBallanceSource.setStatus("current")
_DeployProvIfCapLacpTimeout_Type = FspR7LacpTimeoutCaps
_DeployProvIfCapLacpTimeout_Object = MibTableColumn
deployProvIfCapLacpTimeout = _DeployProvIfCapLacpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 107),
    _DeployProvIfCapLacpTimeout_Type()
)
deployProvIfCapLacpTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLacpTimeout.setStatus("current")
_DeployProvIfCapFarEndCommunication_Type = FspR7YesNoCaps
_DeployProvIfCapFarEndCommunication_Object = MibTableColumn
deployProvIfCapFarEndCommunication = _DeployProvIfCapFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 108),
    _DeployProvIfCapFarEndCommunication_Type()
)
deployProvIfCapFarEndCommunication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapFarEndCommunication.setStatus("current")
_DeployProvIfCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_DeployProvIfCapEqlzAdmin_Object = MibTableColumn
deployProvIfCapEqlzAdmin = _DeployProvIfCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 109),
    _DeployProvIfCapEqlzAdmin_Type()
)
deployProvIfCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapEqlzAdmin.setStatus("current")
_DeployProvIfCapTxOffDelay_Type = FspR7EnableDisableCaps
_DeployProvIfCapTxOffDelay_Object = MibTableColumn
deployProvIfCapTxOffDelay = _DeployProvIfCapTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 110),
    _DeployProvIfCapTxOffDelay_Type()
)
deployProvIfCapTxOffDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTxOffDelay.setStatus("current")
_DeployProvIfCapOpuPayloadType_Type = FspR7OpuPayloadTypeCaps
_DeployProvIfCapOpuPayloadType_Object = MibTableColumn
deployProvIfCapOpuPayloadType = _DeployProvIfCapOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 111),
    _DeployProvIfCapOpuPayloadType_Type()
)
deployProvIfCapOpuPayloadType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOpuPayloadType.setStatus("current")
_DeployProvIfCapOscOpticalSetpoint_Type = FspR7Integer32Caps
_DeployProvIfCapOscOpticalSetpoint_Object = MibTableColumn
deployProvIfCapOscOpticalSetpoint = _DeployProvIfCapOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 112),
    _DeployProvIfCapOscOpticalSetpoint_Type()
)
deployProvIfCapOscOpticalSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapOscOpticalSetpoint.setUnits("0.1 dBm")
_DeployProvIfCapFiberBrand_Type = FspR7FiberBrandCaps
_DeployProvIfCapFiberBrand_Object = MibTableColumn
deployProvIfCapFiberBrand = _DeployProvIfCapFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 113),
    _DeployProvIfCapFiberBrand_Type()
)
deployProvIfCapFiberBrand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapFiberBrand.setStatus("current")
_DeployProvIfCapTiltSet_Type = FspR7TiltSetCaps
_DeployProvIfCapTiltSet_Object = MibTableColumn
deployProvIfCapTiltSet = _DeployProvIfCapTiltSet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 114),
    _DeployProvIfCapTiltSet_Type()
)
deployProvIfCapTiltSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTiltSet.setStatus("current")
_DeployProvIfCapXfpDecisionThres_Type = FspR7XfpDecisionThresCaps
_DeployProvIfCapXfpDecisionThres_Object = MibTableColumn
deployProvIfCapXfpDecisionThres = _DeployProvIfCapXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 115),
    _DeployProvIfCapXfpDecisionThres_Type()
)
deployProvIfCapXfpDecisionThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapXfpDecisionThres.setStatus("current")
_DeployProvIfCapAutoPTassignment_Type = FspR7ManualAutoCaps
_DeployProvIfCapAutoPTassignment_Object = MibTableColumn
deployProvIfCapAutoPTassignment = _DeployProvIfCapAutoPTassignment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 116),
    _DeployProvIfCapAutoPTassignment_Type()
)
deployProvIfCapAutoPTassignment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAutoPTassignment.setStatus("current")
_DeployProvIfCapTributarySlotMethod_Type = FspR7ManualAutoCaps
_DeployProvIfCapTributarySlotMethod_Object = MibTableColumn
deployProvIfCapTributarySlotMethod = _DeployProvIfCapTributarySlotMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 117),
    _DeployProvIfCapTributarySlotMethod_Type()
)
deployProvIfCapTributarySlotMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapTributarySlotMethod.setStatus("current")
_DeployProvIfCapOduTribPortNo_Type = SnmpAdminString
_DeployProvIfCapOduTribPortNo_Object = MibTableColumn
deployProvIfCapOduTribPortNo = _DeployProvIfCapOduTribPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 118),
    _DeployProvIfCapOduTribPortNo_Type()
)
deployProvIfCapOduTribPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOduTribPortNo.setStatus("current")
_DeployProvIfCapOduTribTimeSlottNo_Type = SnmpAdminString
_DeployProvIfCapOduTribTimeSlottNo_Object = MibTableColumn
deployProvIfCapOduTribTimeSlottNo = _DeployProvIfCapOduTribTimeSlottNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 119),
    _DeployProvIfCapOduTribTimeSlottNo_Type()
)
deployProvIfCapOduTribTimeSlottNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapOduTribTimeSlottNo.setStatus("current")
_DeployProvIfCapRevertiveMode_Type = ApsRevertModeCaps
_DeployProvIfCapRevertiveMode_Object = MibTableColumn
deployProvIfCapRevertiveMode = _DeployProvIfCapRevertiveMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 120),
    _DeployProvIfCapRevertiveMode_Type()
)
deployProvIfCapRevertiveMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapRevertiveMode.setStatus("current")
_DeployProvIfCapLaserDelayTimer_Type = FspR7LaserDelayTimerCaps
_DeployProvIfCapLaserDelayTimer_Object = MibTableColumn
deployProvIfCapLaserDelayTimer = _DeployProvIfCapLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 121),
    _DeployProvIfCapLaserDelayTimer_Type()
)
deployProvIfCapLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLaserDelayTimer.setStatus("current")
_DeployProvIfCapLaserOffTimer_Type = FspR7Unsigned32Caps
_DeployProvIfCapLaserOffTimer_Object = MibTableColumn
deployProvIfCapLaserOffTimer = _DeployProvIfCapLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 122),
    _DeployProvIfCapLaserOffTimer_Type()
)
deployProvIfCapLaserOffTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapLaserOffTimer.setUnits("ms")
_DeployProvIfCapLaserOnTimer_Type = FspR7Unsigned32Caps
_DeployProvIfCapLaserOnTimer_Object = MibTableColumn
deployProvIfCapLaserOnTimer = _DeployProvIfCapLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 123),
    _DeployProvIfCapLaserOnTimer_Type()
)
deployProvIfCapLaserOnTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapLaserOnTimer.setUnits("ms")
_DeployProvIfCapLaneChannelSetting_Type = FspR7ChannelIdentifierCaps
_DeployProvIfCapLaneChannelSetting_Object = MibTableColumn
deployProvIfCapLaneChannelSetting = _DeployProvIfCapLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 124),
    _DeployProvIfCapLaneChannelSetting_Type()
)
deployProvIfCapLaneChannelSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapLaneChannelSetting.setStatus("current")
_DeployProvIfCapBip_Type = FspR7BipCaps
_DeployProvIfCapBip_Object = MibTableColumn
deployProvIfCapBip = _DeployProvIfCapBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 125),
    _DeployProvIfCapBip_Type()
)
deployProvIfCapBip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapBip.setStatus("current")
_DeployProvIfCapCodeGain_Type = FspR7CodeGainCaps
_DeployProvIfCapCodeGain_Object = MibTableColumn
deployProvIfCapCodeGain = _DeployProvIfCapCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 126),
    _DeployProvIfCapCodeGain_Type()
)
deployProvIfCapCodeGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapCodeGain.setStatus("current")
_DeployProvIfCapEdfaPwrOut_Type = FspR7EdfaOutputPowerRatingCaps
_DeployProvIfCapEdfaPwrOut_Object = MibTableColumn
deployProvIfCapEdfaPwrOut = _DeployProvIfCapEdfaPwrOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 127),
    _DeployProvIfCapEdfaPwrOut_Type()
)
deployProvIfCapEdfaPwrOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapEdfaPwrOut.setStatus("current")
_DeployProvIfCapPrio_Type = FspR7Unsigned32Caps
_DeployProvIfCapPrio_Object = MibTableColumn
deployProvIfCapPrio = _DeployProvIfCapPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 128),
    _DeployProvIfCapPrio_Type()
)
deployProvIfCapPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapPrio.setStatus("current")
_DeployProvIfCapAuthType_Type = FspR7CpAuthTypeCaps
_DeployProvIfCapAuthType_Object = MibTableColumn
deployProvIfCapAuthType = _DeployProvIfCapAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 129),
    _DeployProvIfCapAuthType_Type()
)
deployProvIfCapAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAuthType.setStatus("current")
_DeployProvIfCapAuthString_Type = Integer32
_DeployProvIfCapAuthString_Object = MibTableColumn
deployProvIfCapAuthString = _DeployProvIfCapAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 130),
    _DeployProvIfCapAuthString_Type()
)
deployProvIfCapAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapAuthString.setStatus("current")
_DeployProvIfCapSigDegPcslThreshold_Type = FspR7Unsigned32Caps
_DeployProvIfCapSigDegPcslThreshold_Object = MibTableColumn
deployProvIfCapSigDegPcslThreshold = _DeployProvIfCapSigDegPcslThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 2, 1, 131),
    _DeployProvIfCapSigDegPcslThreshold_Type()
)
deployProvIfCapSigDegPcslThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPcslThreshold.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfCapSigDegPcslThreshold.setUnits("%")
_DeployProvIfDefaultsTable_Object = MibTable
deployProvIfDefaultsTable = _DeployProvIfDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3)
)
if mibBuilder.loadTexts:
    deployProvIfDefaultsTable.setStatus("current")
_DeployProvIfDefaultsEntry_Object = MibTableRow
deployProvIfDefaultsEntry = _DeployProvIfDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1)
)
deployProvIfDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvIfDefaultsEntry.setStatus("current")
_DeployProvIfDefaultsRowStatus_Type = RowStatus
_DeployProvIfDefaultsRowStatus_Object = MibTableColumn
deployProvIfDefaultsRowStatus = _DeployProvIfDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 1),
    _DeployProvIfDefaultsRowStatus_Type()
)
deployProvIfDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsRowStatus.setStatus("current")
_DeployProvIfDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvIfDefaultsForceDestroy_Object = MibTableColumn
deployProvIfDefaultsForceDestroy = _DeployProvIfDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 2),
    _DeployProvIfDefaultsForceDestroy_Type()
)
deployProvIfDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsForceDestroy.setStatus("current")
_DeployProvIfDefaultsType_Type = FspR7InterfaceType
_DeployProvIfDefaultsType_Object = MibTableColumn
deployProvIfDefaultsType = _DeployProvIfDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 3),
    _DeployProvIfDefaultsType_Type()
)
deployProvIfDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsType.setStatus("current")
_DeployProvIfDefaultsPayload_Type = OtnPayloadType
_DeployProvIfDefaultsPayload_Object = MibTableColumn
deployProvIfDefaultsPayload = _DeployProvIfDefaultsPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 4),
    _DeployProvIfDefaultsPayload_Type()
)
deployProvIfDefaultsPayload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPayload.setStatus("current")
_DeployProvIfDefaultsBehaviour_Type = FspR7PortBehaviour
_DeployProvIfDefaultsBehaviour_Object = MibTableColumn
deployProvIfDefaultsBehaviour = _DeployProvIfDefaultsBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 5),
    _DeployProvIfDefaultsBehaviour_Type()
)
deployProvIfDefaultsBehaviour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsBehaviour.setStatus("current")
_DeployProvIfDefaultsTerminationLevel_Type = OhTerminationLevel
_DeployProvIfDefaultsTerminationLevel_Object = MibTableColumn
deployProvIfDefaultsTerminationLevel = _DeployProvIfDefaultsTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 6),
    _DeployProvIfDefaultsTerminationLevel_Type()
)
deployProvIfDefaultsTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTerminationLevel.setStatus("current")
_DeployProvIfDefaultsAlsMode_Type = FspR7AlsMode
_DeployProvIfDefaultsAlsMode_Object = MibTableColumn
deployProvIfDefaultsAlsMode = _DeployProvIfDefaultsAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 7),
    _DeployProvIfDefaultsAlsMode_Type()
)
deployProvIfDefaultsAlsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAlsMode.setStatus("current")
_DeployProvIfDefaultsErrorForwarding_Type = FspR7ErrorFwdMode
_DeployProvIfDefaultsErrorForwarding_Object = MibTableColumn
deployProvIfDefaultsErrorForwarding = _DeployProvIfDefaultsErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 8),
    _DeployProvIfDefaultsErrorForwarding_Type()
)
deployProvIfDefaultsErrorForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsErrorForwarding.setStatus("current")
_DeployProvIfDefaultsLaserOffDelayFunction_Type = EnableState
_DeployProvIfDefaultsLaserOffDelayFunction_Object = MibTableColumn
deployProvIfDefaultsLaserOffDelayFunction = _DeployProvIfDefaultsLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 9),
    _DeployProvIfDefaultsLaserOffDelayFunction_Type()
)
deployProvIfDefaultsLaserOffDelayFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLaserOffDelayFunction.setStatus("current")
_DeployProvIfDefaultsFecType_Type = FspR7FecType
_DeployProvIfDefaultsFecType_Object = MibTableColumn
deployProvIfDefaultsFecType = _DeployProvIfDefaultsFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 10),
    _DeployProvIfDefaultsFecType_Type()
)
deployProvIfDefaultsFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsFecType.setStatus("current")
_DeployProvIfDefaultsTimingSource_Type = SonetTimingSource
_DeployProvIfDefaultsTimingSource_Object = MibTableColumn
deployProvIfDefaultsTimingSource = _DeployProvIfDefaultsTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 11),
    _DeployProvIfDefaultsTimingSource_Type()
)
deployProvIfDefaultsTimingSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTimingSource.setStatus("current")
_DeployProvIfDefaultsTcmALevel_Type = OtnTcmLevel
_DeployProvIfDefaultsTcmALevel_Object = MibTableColumn
deployProvIfDefaultsTcmALevel = _DeployProvIfDefaultsTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 12),
    _DeployProvIfDefaultsTcmALevel_Type()
)
deployProvIfDefaultsTcmALevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTcmALevel.setStatus("current")
_DeployProvIfDefaultsTcmBLevel_Type = OtnTcmLevel
_DeployProvIfDefaultsTcmBLevel_Object = MibTableColumn
deployProvIfDefaultsTcmBLevel = _DeployProvIfDefaultsTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 13),
    _DeployProvIfDefaultsTcmBLevel_Type()
)
deployProvIfDefaultsTcmBLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTcmBLevel.setStatus("current")
_DeployProvIfDefaultsSigDegThresSonetLine_Type = FspR7BERThreshold
_DeployProvIfDefaultsSigDegThresSonetLine_Object = MibTableColumn
deployProvIfDefaultsSigDegThresSonetLine = _DeployProvIfDefaultsSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 14),
    _DeployProvIfDefaultsSigDegThresSonetLine_Type()
)
deployProvIfDefaultsSigDegThresSonetLine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresSonetLine.setStatus("current")


class _DeployProvIfDefaultsSigDegThresSdhMs_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegThresSdhMs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegThresSdhMs_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegThresSdhMs_Object = MibTableColumn
deployProvIfDefaultsSigDegThresSdhMs = _DeployProvIfDefaultsSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 15),
    _DeployProvIfDefaultsSigDegThresSdhMs_Type()
)
deployProvIfDefaultsSigDegThresSdhMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresSdhMs.setUnits("%")


class _DeployProvIfDefaultsSignalDegradePeriod_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSignalDegradePeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSignalDegradePeriod_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSignalDegradePeriod_Object = MibTableColumn
deployProvIfDefaultsSignalDegradePeriod = _DeployProvIfDefaultsSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 16),
    _DeployProvIfDefaultsSignalDegradePeriod_Type()
)
deployProvIfDefaultsSignalDegradePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSignalDegradePeriod.setUnits("s")
_DeployProvIfDefaultsAutonegotiation_Type = EnableState
_DeployProvIfDefaultsAutonegotiation_Object = MibTableColumn
deployProvIfDefaultsAutonegotiation = _DeployProvIfDefaultsAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 17),
    _DeployProvIfDefaultsAutonegotiation_Type()
)
deployProvIfDefaultsAutonegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAutonegotiation.setStatus("current")
_DeployProvIfDefaultsBitrate_Type = FspR7Bitrate
_DeployProvIfDefaultsBitrate_Object = MibTableColumn
deployProvIfDefaultsBitrate = _DeployProvIfDefaultsBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 18),
    _DeployProvIfDefaultsBitrate_Type()
)
deployProvIfDefaultsBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsBitrate.setStatus("current")
_DeployProvIfDefaultsDuplex_Type = EthDuplexMode
_DeployProvIfDefaultsDuplex_Object = MibTableColumn
deployProvIfDefaultsDuplex = _DeployProvIfDefaultsDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 19),
    _DeployProvIfDefaultsDuplex_Type()
)
deployProvIfDefaultsDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsDuplex.setStatus("current")
_DeployProvIfDefaultsFlowControl_Type = FspR7FlowControlMode
_DeployProvIfDefaultsFlowControl_Object = MibTableColumn
deployProvIfDefaultsFlowControl = _DeployProvIfDefaultsFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 20),
    _DeployProvIfDefaultsFlowControl_Type()
)
deployProvIfDefaultsFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsFlowControl.setStatus("current")
_DeployProvIfDefaultsOtnStuffing_Type = FspR7Stuff
_DeployProvIfDefaultsOtnStuffing_Object = MibTableColumn
deployProvIfDefaultsOtnStuffing = _DeployProvIfDefaultsOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 21),
    _DeployProvIfDefaultsOtnStuffing_Type()
)
deployProvIfDefaultsOtnStuffing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOtnStuffing.setStatus("current")


class _DeployProvIfDefaultsSigDegThresOtu_Type(Integer32):
    """Custom type deployProvIfDefaultsSigDegThresOtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsSigDegThresOtu_Type.__name__ = "Integer32"
_DeployProvIfDefaultsSigDegThresOtu_Object = MibTableColumn
deployProvIfDefaultsSigDegThresOtu = _DeployProvIfDefaultsSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 22),
    _DeployProvIfDefaultsSigDegThresOtu_Type()
)
deployProvIfDefaultsSigDegThresOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOtu.setUnits("%")


class _DeployProvIfDefaultsSigDegPeriodOtu_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPeriodOtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPeriodOtu_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPeriodOtu_Object = MibTableColumn
deployProvIfDefaultsSigDegPeriodOtu = _DeployProvIfDefaultsSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 23),
    _DeployProvIfDefaultsSigDegPeriodOtu_Type()
)
deployProvIfDefaultsSigDegPeriodOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOtu.setUnits("s")


class _DeployProvIfDefaultsSigDegThresOdu_Type(Integer32):
    """Custom type deployProvIfDefaultsSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsSigDegThresOdu_Type.__name__ = "Integer32"
_DeployProvIfDefaultsSigDegThresOdu_Object = MibTableColumn
deployProvIfDefaultsSigDegThresOdu = _DeployProvIfDefaultsSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 24),
    _DeployProvIfDefaultsSigDegThresOdu_Type()
)
deployProvIfDefaultsSigDegThresOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOdu.setUnits("%")


class _DeployProvIfDefaultsSigDegPeriodOdu_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPeriodOdu_Object = MibTableColumn
deployProvIfDefaultsSigDegPeriodOdu = _DeployProvIfDefaultsSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 25),
    _DeployProvIfDefaultsSigDegPeriodOdu_Type()
)
deployProvIfDefaultsSigDegPeriodOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOdu.setUnits("s")


class _DeployProvIfDefaultsSigDegThresOduTcmA_Type(Integer32):
    """Custom type deployProvIfDefaultsSigDegThresOduTcmA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsSigDegThresOduTcmA_Type.__name__ = "Integer32"
_DeployProvIfDefaultsSigDegThresOduTcmA_Object = MibTableColumn
deployProvIfDefaultsSigDegThresOduTcmA = _DeployProvIfDefaultsSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 26),
    _DeployProvIfDefaultsSigDegThresOduTcmA_Type()
)
deployProvIfDefaultsSigDegThresOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOduTcmA.setUnits("%")


class _DeployProvIfDefaultsSigDegPeriodOduTcmA_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPeriodOduTcmA based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPeriodOduTcmA_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPeriodOduTcmA_Object = MibTableColumn
deployProvIfDefaultsSigDegPeriodOduTcmA = _DeployProvIfDefaultsSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 27),
    _DeployProvIfDefaultsSigDegPeriodOduTcmA_Type()
)
deployProvIfDefaultsSigDegPeriodOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOduTcmA.setUnits("s")


class _DeployProvIfDefaultsSigDegThresOduTcmB_Type(Integer32):
    """Custom type deployProvIfDefaultsSigDegThresOduTcmB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsSigDegThresOduTcmB_Type.__name__ = "Integer32"
_DeployProvIfDefaultsSigDegThresOduTcmB_Object = MibTableColumn
deployProvIfDefaultsSigDegThresOduTcmB = _DeployProvIfDefaultsSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 28),
    _DeployProvIfDefaultsSigDegThresOduTcmB_Type()
)
deployProvIfDefaultsSigDegThresOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOduTcmB.setUnits("%")


class _DeployProvIfDefaultsSigDegPeriodOduTcmB_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPeriodOduTcmB based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPeriodOduTcmB_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPeriodOduTcmB_Object = MibTableColumn
deployProvIfDefaultsSigDegPeriodOduTcmB = _DeployProvIfDefaultsSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 29),
    _DeployProvIfDefaultsSigDegPeriodOduTcmB_Type()
)
deployProvIfDefaultsSigDegPeriodOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOduTcmB.setUnits("s")


class _DeployProvIfDefaultsTilt_Type(Integer32):
    """Custom type deployProvIfDefaultsTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsTilt_Type.__name__ = "Integer32"
_DeployProvIfDefaultsTilt_Object = MibTableColumn
deployProvIfDefaultsTilt = _DeployProvIfDefaultsTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 30),
    _DeployProvIfDefaultsTilt_Type()
)
deployProvIfDefaultsTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTilt.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTilt.setUnits("0.1 dB")
_DeployProvIfDefaultsGain_Type = FspR7Gain
_DeployProvIfDefaultsGain_Object = MibTableColumn
deployProvIfDefaultsGain = _DeployProvIfDefaultsGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 31),
    _DeployProvIfDefaultsGain_Type()
)
deployProvIfDefaultsGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsGain.setStatus("current")
_DeployProvIfDefaultsAdmin_Type = FspR7AdminState
_DeployProvIfDefaultsAdmin_Object = MibTableColumn
deployProvIfDefaultsAdmin = _DeployProvIfDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 32),
    _DeployProvIfDefaultsAdmin_Type()
)
deployProvIfDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAdmin.setStatus("current")


class _DeployProvIfDefaultsAttenuationGradient_Type(Unsigned32):
    """Custom type deployProvIfDefaultsAttenuationGradient based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsAttenuationGradient_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsAttenuationGradient_Object = MibTableColumn
deployProvIfDefaultsAttenuationGradient = _DeployProvIfDefaultsAttenuationGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 33),
    _DeployProvIfDefaultsAttenuationGradient_Type()
)
deployProvIfDefaultsAttenuationGradient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAttenuationGradient.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAttenuationGradient.setUnits("0.1 dB/min")
_DeployProvIfDefaultsSigDegThresReceiver_Type = Unsigned32
_DeployProvIfDefaultsSigDegThresReceiver_Object = MibTableColumn
deployProvIfDefaultsSigDegThresReceiver = _DeployProvIfDefaultsSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 34),
    _DeployProvIfDefaultsSigDegThresReceiver_Type()
)
deployProvIfDefaultsSigDegThresReceiver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresReceiver.setUnits("0.1 dB")
_DeployProvIfDefaultsTcmCLevel_Type = OtnTcmLevel
_DeployProvIfDefaultsTcmCLevel_Object = MibTableColumn
deployProvIfDefaultsTcmCLevel = _DeployProvIfDefaultsTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 35),
    _DeployProvIfDefaultsTcmCLevel_Type()
)
deployProvIfDefaultsTcmCLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTcmCLevel.setStatus("current")


class _DeployProvIfDefaultsSigDegThresOduTcmC_Type(Integer32):
    """Custom type deployProvIfDefaultsSigDegThresOduTcmC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsSigDegThresOduTcmC_Type.__name__ = "Integer32"
_DeployProvIfDefaultsSigDegThresOduTcmC_Object = MibTableColumn
deployProvIfDefaultsSigDegThresOduTcmC = _DeployProvIfDefaultsSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 36),
    _DeployProvIfDefaultsSigDegThresOduTcmC_Type()
)
deployProvIfDefaultsSigDegThresOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresOduTcmC.setUnits("%")


class _DeployProvIfDefaultsSigDegPeriodOduTcmC_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPeriodOduTcmC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPeriodOduTcmC_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPeriodOduTcmC_Object = MibTableColumn
deployProvIfDefaultsSigDegPeriodOduTcmC = _DeployProvIfDefaultsSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 37),
    _DeployProvIfDefaultsSigDegPeriodOduTcmC_Type()
)
deployProvIfDefaultsSigDegPeriodOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodOduTcmC.setUnits("s")
_DeployProvIfDefaultsDisparityCorrection_Type = EnableState
_DeployProvIfDefaultsDisparityCorrection_Object = MibTableColumn
deployProvIfDefaultsDisparityCorrection = _DeployProvIfDefaultsDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 38),
    _DeployProvIfDefaultsDisparityCorrection_Type()
)
deployProvIfDefaultsDisparityCorrection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsDisparityCorrection.setStatus("current")
_DeployProvIfDefaultsIpAddr_Type = IpAddress
_DeployProvIfDefaultsIpAddr_Object = MibTableColumn
deployProvIfDefaultsIpAddr = _DeployProvIfDefaultsIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 39),
    _DeployProvIfDefaultsIpAddr_Type()
)
deployProvIfDefaultsIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsIpAddr.setStatus("current")
_DeployProvIfDefaultsIpMask_Type = IpAddress
_DeployProvIfDefaultsIpMask_Object = MibTableColumn
deployProvIfDefaultsIpMask = _DeployProvIfDefaultsIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 40),
    _DeployProvIfDefaultsIpMask_Type()
)
deployProvIfDefaultsIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsIpMask.setStatus("current")
_DeployProvIfDefaultsOspf_Type = FspR7OspfMode
_DeployProvIfDefaultsOspf_Object = MibTableColumn
deployProvIfDefaultsOspf = _DeployProvIfDefaultsOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 41),
    _DeployProvIfDefaultsOspf_Type()
)
deployProvIfDefaultsOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOspf.setStatus("current")


class _DeployProvIfDefaultsMetric_Type(Unsigned32):
    """Custom type deployProvIfDefaultsMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsMetric_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsMetric_Object = MibTableColumn
deployProvIfDefaultsMetric = _DeployProvIfDefaultsMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 42),
    _DeployProvIfDefaultsMetric_Type()
)
deployProvIfDefaultsMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsMetric.setStatus("current")
_DeployProvIfDefaultsAreaId_Type = IpAddress
_DeployProvIfDefaultsAreaId_Object = MibTableColumn
deployProvIfDefaultsAreaId = _DeployProvIfDefaultsAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 43),
    _DeployProvIfDefaultsAreaId_Type()
)
deployProvIfDefaultsAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAreaId.setStatus("current")
_DeployProvIfDefaultsTraceFormSonetSection_Type = SonetTraceForm
_DeployProvIfDefaultsTraceFormSonetSection_Object = MibTableColumn
deployProvIfDefaultsTraceFormSonetSection = _DeployProvIfDefaultsTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 44),
    _DeployProvIfDefaultsTraceFormSonetSection_Type()
)
deployProvIfDefaultsTraceFormSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceFormSonetSection.setStatus("current")


class _DeployProvIfDefaultsTraceExpectedSonetSection_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceExpectedSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_DeployProvIfDefaultsTraceExpectedSonetSection_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceExpectedSonetSection_Object = MibTableColumn
deployProvIfDefaultsTraceExpectedSonetSection = _DeployProvIfDefaultsTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 45),
    _DeployProvIfDefaultsTraceExpectedSonetSection_Type()
)
deployProvIfDefaultsTraceExpectedSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceExpectedSonetSection.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitSonetSection_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_DeployProvIfDefaultsTraceTransmitSonetSection_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitSonetSection_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitSonetSection = _DeployProvIfDefaultsTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 46),
    _DeployProvIfDefaultsTraceTransmitSonetSection_Type()
)
deployProvIfDefaultsTraceTransmitSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitSonetSection.setStatus("current")
_DeployProvIfDefaultsTimModeSonetSection_Type = TimMode
_DeployProvIfDefaultsTimModeSonetSection_Object = MibTableColumn
deployProvIfDefaultsTimModeSonetSection = _DeployProvIfDefaultsTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 47),
    _DeployProvIfDefaultsTimModeSonetSection_Type()
)
deployProvIfDefaultsTimModeSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTimModeSonetSection.setStatus("current")


class _DeployProvIfDefaultsTraceExpectedOtu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceExpectedOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceExpectedOtu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceExpectedOtu_Object = MibTableColumn
deployProvIfDefaultsTraceExpectedOtu = _DeployProvIfDefaultsTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 48),
    _DeployProvIfDefaultsTraceExpectedOtu_Type()
)
deployProvIfDefaultsTraceExpectedOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceExpectedOtu.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitSapiOtu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitSapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitSapiOtu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitSapiOtu_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitSapiOtu = _DeployProvIfDefaultsTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 49),
    _DeployProvIfDefaultsTraceTransmitSapiOtu_Type()
)
deployProvIfDefaultsTraceTransmitSapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitSapiOtu.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitDapiOtu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitDapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitDapiOtu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitDapiOtu_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitDapiOtu = _DeployProvIfDefaultsTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 50),
    _DeployProvIfDefaultsTraceTransmitDapiOtu_Type()
)
deployProvIfDefaultsTraceTransmitDapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitDapiOtu.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitOpspOtu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitOpspOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfDefaultsTraceTransmitOpspOtu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitOpspOtu_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitOpspOtu = _DeployProvIfDefaultsTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 51),
    _DeployProvIfDefaultsTraceTransmitOpspOtu_Type()
)
deployProvIfDefaultsTraceTransmitOpspOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitOpspOtu.setStatus("current")
_DeployProvIfDefaultsTimModeOtu_Type = TimMode
_DeployProvIfDefaultsTimModeOtu_Object = MibTableColumn
deployProvIfDefaultsTimModeOtu = _DeployProvIfDefaultsTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 52),
    _DeployProvIfDefaultsTimModeOtu_Type()
)
deployProvIfDefaultsTimModeOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTimModeOtu.setStatus("current")


class _DeployProvIfDefaultsTraceExpectedOdu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceExpectedOdu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceExpectedOdu_Object = MibTableColumn
deployProvIfDefaultsTraceExpectedOdu = _DeployProvIfDefaultsTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 53),
    _DeployProvIfDefaultsTraceExpectedOdu_Type()
)
deployProvIfDefaultsTraceExpectedOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceExpectedOdu.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitSapiOdu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitSapiOdu_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitSapiOdu = _DeployProvIfDefaultsTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 54),
    _DeployProvIfDefaultsTraceTransmitSapiOdu_Type()
)
deployProvIfDefaultsTraceTransmitSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitSapiOdu.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitDapiOdu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitDapiOdu_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitDapiOdu = _DeployProvIfDefaultsTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 55),
    _DeployProvIfDefaultsTraceTransmitDapiOdu_Type()
)
deployProvIfDefaultsTraceTransmitDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitDapiOdu.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitOpspOdu_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfDefaultsTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitOpspOdu_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitOpspOdu = _DeployProvIfDefaultsTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 56),
    _DeployProvIfDefaultsTraceTransmitOpspOdu_Type()
)
deployProvIfDefaultsTraceTransmitOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitOpspOdu.setStatus("current")
_DeployProvIfDefaultsTimModeOdu_Type = TimMode
_DeployProvIfDefaultsTimModeOdu_Object = MibTableColumn
deployProvIfDefaultsTimModeOdu = _DeployProvIfDefaultsTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 57),
    _DeployProvIfDefaultsTimModeOdu_Type()
)
deployProvIfDefaultsTimModeOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTimModeOdu.setStatus("current")


class _DeployProvIfDefaultsTraceExpectedOduTcmA_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceExpectedOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceExpectedOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceExpectedOduTcmA_Object = MibTableColumn
deployProvIfDefaultsTraceExpectedOduTcmA = _DeployProvIfDefaultsTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 58),
    _DeployProvIfDefaultsTraceExpectedOduTcmA_Type()
)
deployProvIfDefaultsTraceExpectedOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceExpectedOduTcmA.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitSapiOduTcmA_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitSapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitSapiOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitSapiOduTcmA_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitSapiOduTcmA = _DeployProvIfDefaultsTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 59),
    _DeployProvIfDefaultsTraceTransmitSapiOduTcmA_Type()
)
deployProvIfDefaultsTraceTransmitSapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitSapiOduTcmA.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitDapiOduTcmA_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitDapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitDapiOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitDapiOduTcmA_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitDapiOduTcmA = _DeployProvIfDefaultsTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 60),
    _DeployProvIfDefaultsTraceTransmitDapiOduTcmA_Type()
)
deployProvIfDefaultsTraceTransmitDapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitDapiOduTcmA.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitOpspOduTcmA_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitOpspOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfDefaultsTraceTransmitOpspOduTcmA_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitOpspOduTcmA_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitOpspOduTcmA = _DeployProvIfDefaultsTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 61),
    _DeployProvIfDefaultsTraceTransmitOpspOduTcmA_Type()
)
deployProvIfDefaultsTraceTransmitOpspOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitOpspOduTcmA.setStatus("current")
_DeployProvIfDefaultsTimModeOduTcmA_Type = TimMode
_DeployProvIfDefaultsTimModeOduTcmA_Object = MibTableColumn
deployProvIfDefaultsTimModeOduTcmA = _DeployProvIfDefaultsTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 62),
    _DeployProvIfDefaultsTimModeOduTcmA_Type()
)
deployProvIfDefaultsTimModeOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTimModeOduTcmA.setStatus("current")


class _DeployProvIfDefaultsTraceExpectedOduTcmB_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceExpectedOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceExpectedOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceExpectedOduTcmB_Object = MibTableColumn
deployProvIfDefaultsTraceExpectedOduTcmB = _DeployProvIfDefaultsTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 63),
    _DeployProvIfDefaultsTraceExpectedOduTcmB_Type()
)
deployProvIfDefaultsTraceExpectedOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceExpectedOduTcmB.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitSapiOduTcmB_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitSapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitSapiOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitSapiOduTcmB_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitSapiOduTcmB = _DeployProvIfDefaultsTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 64),
    _DeployProvIfDefaultsTraceTransmitSapiOduTcmB_Type()
)
deployProvIfDefaultsTraceTransmitSapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitSapiOduTcmB.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitDapiOduTcmB_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitDapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitDapiOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitDapiOduTcmB_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitDapiOduTcmB = _DeployProvIfDefaultsTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 65),
    _DeployProvIfDefaultsTraceTransmitDapiOduTcmB_Type()
)
deployProvIfDefaultsTraceTransmitDapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitDapiOduTcmB.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitOpspOduTcmB_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitOpspOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfDefaultsTraceTransmitOpspOduTcmB_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitOpspOduTcmB_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitOpspOduTcmB = _DeployProvIfDefaultsTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 66),
    _DeployProvIfDefaultsTraceTransmitOpspOduTcmB_Type()
)
deployProvIfDefaultsTraceTransmitOpspOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitOpspOduTcmB.setStatus("current")
_DeployProvIfDefaultsTimModeOduTcmB_Type = TimMode
_DeployProvIfDefaultsTimModeOduTcmB_Object = MibTableColumn
deployProvIfDefaultsTimModeOduTcmB = _DeployProvIfDefaultsTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 67),
    _DeployProvIfDefaultsTimModeOduTcmB_Type()
)
deployProvIfDefaultsTimModeOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTimModeOduTcmB.setStatus("current")


class _DeployProvIfDefaultsTraceExpectedOduTcmC_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceExpectedOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceExpectedOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceExpectedOduTcmC_Object = MibTableColumn
deployProvIfDefaultsTraceExpectedOduTcmC = _DeployProvIfDefaultsTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 68),
    _DeployProvIfDefaultsTraceExpectedOduTcmC_Type()
)
deployProvIfDefaultsTraceExpectedOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceExpectedOduTcmC.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitSapiOduTcmC_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitSapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitSapiOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitSapiOduTcmC_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitSapiOduTcmC = _DeployProvIfDefaultsTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 69),
    _DeployProvIfDefaultsTraceTransmitSapiOduTcmC_Type()
)
deployProvIfDefaultsTraceTransmitSapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitSapiOduTcmC.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitDapiOduTcmC_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitDapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvIfDefaultsTraceTransmitDapiOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitDapiOduTcmC_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitDapiOduTcmC = _DeployProvIfDefaultsTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 70),
    _DeployProvIfDefaultsTraceTransmitDapiOduTcmC_Type()
)
deployProvIfDefaultsTraceTransmitDapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitDapiOduTcmC.setStatus("current")


class _DeployProvIfDefaultsTraceTransmitOpspOduTcmC_Type(OctetString):
    """Custom type deployProvIfDefaultsTraceTransmitOpspOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvIfDefaultsTraceTransmitOpspOduTcmC_Type.__name__ = "OctetString"
_DeployProvIfDefaultsTraceTransmitOpspOduTcmC_Object = MibTableColumn
deployProvIfDefaultsTraceTransmitOpspOduTcmC = _DeployProvIfDefaultsTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 71),
    _DeployProvIfDefaultsTraceTransmitOpspOduTcmC_Type()
)
deployProvIfDefaultsTraceTransmitOpspOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTraceTransmitOpspOduTcmC.setStatus("current")
_DeployProvIfDefaultsTimModeOduTcmC_Type = TimMode
_DeployProvIfDefaultsTimModeOduTcmC_Object = MibTableColumn
deployProvIfDefaultsTimModeOduTcmC = _DeployProvIfDefaultsTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 72),
    _DeployProvIfDefaultsTimModeOduTcmC_Type()
)
deployProvIfDefaultsTimModeOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTimModeOduTcmC.setStatus("current")
_DeployProvIfDefaultsChannelProvisioning_Type = FspR7ChannelIdentifier
_DeployProvIfDefaultsChannelProvisioning_Object = MibTableColumn
deployProvIfDefaultsChannelProvisioning = _DeployProvIfDefaultsChannelProvisioning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 73),
    _DeployProvIfDefaultsChannelProvisioning_Type()
)
deployProvIfDefaultsChannelProvisioning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsChannelProvisioning.setStatus("current")


class _DeployProvIfDefaultsVariableGain_Type(Unsigned32):
    """Custom type deployProvIfDefaultsVariableGain based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 350),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsVariableGain_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsVariableGain_Object = MibTableColumn
deployProvIfDefaultsVariableGain = _DeployProvIfDefaultsVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 74),
    _DeployProvIfDefaultsVariableGain_Type()
)
deployProvIfDefaultsVariableGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsVariableGain.setUnits("0.1 dB")
_DeployProvIfDefaultsBand_Type = FspR7OpticalBand
_DeployProvIfDefaultsBand_Object = MibTableColumn
deployProvIfDefaultsBand = _DeployProvIfDefaultsBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 75),
    _DeployProvIfDefaultsBand_Type()
)
deployProvIfDefaultsBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsBand.setStatus("current")


class _DeployProvIfDefaultsSigDegThreshold_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegThreshold_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegThreshold_Object = MibTableColumn
deployProvIfDefaultsSigDegThreshold = _DeployProvIfDefaultsSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 76),
    _DeployProvIfDefaultsSigDegThreshold_Type()
)
deployProvIfDefaultsSigDegThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThreshold.setStatus("current")


class _DeployProvIfDefaultsSigDegPeriodIntegration_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPeriodIntegration based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPeriodIntegration_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPeriodIntegration_Object = MibTableColumn
deployProvIfDefaultsSigDegPeriodIntegration = _DeployProvIfDefaultsSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 77),
    _DeployProvIfDefaultsSigDegPeriodIntegration_Type()
)
deployProvIfDefaultsSigDegPeriodIntegration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodIntegration.setUnits("s")
_DeployProvIfDefaultsVoaMode_Type = FspR7VoaMode
_DeployProvIfDefaultsVoaMode_Object = MibTableColumn
deployProvIfDefaultsVoaMode = _DeployProvIfDefaultsVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 78),
    _DeployProvIfDefaultsVoaMode_Type()
)
deployProvIfDefaultsVoaMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsVoaMode.setStatus("current")


class _DeployProvIfDefaultsOpticalSetPoint_Type(Integer32):
    """Custom type deployProvIfDefaultsOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsOpticalSetPoint_Type.__name__ = "Integer32"
_DeployProvIfDefaultsOpticalSetPoint_Object = MibTableColumn
deployProvIfDefaultsOpticalSetPoint = _DeployProvIfDefaultsOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 79),
    _DeployProvIfDefaultsOpticalSetPoint_Type()
)
deployProvIfDefaultsOpticalSetPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOpticalSetPoint.setUnits("0.1 dBm")


class _DeployProvIfDefaultsVoaSetpoint_Type(Unsigned32):
    """Custom type deployProvIfDefaultsVoaSetpoint based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsVoaSetpoint_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsVoaSetpoint_Object = MibTableColumn
deployProvIfDefaultsVoaSetpoint = _DeployProvIfDefaultsVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 80),
    _DeployProvIfDefaultsVoaSetpoint_Type()
)
deployProvIfDefaultsVoaSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsVoaSetpoint.setUnits("0.1 dB")
_DeployProvIfDefaultsLanAid_Type = EntityIndex
_DeployProvIfDefaultsLanAid_Object = MibTableColumn
deployProvIfDefaultsLanAid = _DeployProvIfDefaultsLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 81),
    _DeployProvIfDefaultsLanAid_Type()
)
deployProvIfDefaultsLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLanAid.setStatus("current")
_DeployProvIfDefaultsAprHighThreshold_Type = Unsigned32
_DeployProvIfDefaultsAprHighThreshold_Object = MibTableColumn
deployProvIfDefaultsAprHighThreshold = _DeployProvIfDefaultsAprHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 82),
    _DeployProvIfDefaultsAprHighThreshold_Type()
)
deployProvIfDefaultsAprHighThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAprHighThreshold.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAprHighThreshold.setUnits("0.1 dBm")


class _DeployProvIfDefaultsPumpPower_Type(Integer32):
    """Custom type deployProvIfDefaultsPumpPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(115, 138),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsPumpPower_Type.__name__ = "Integer32"
_DeployProvIfDefaultsPumpPower_Object = MibTableColumn
deployProvIfDefaultsPumpPower = _DeployProvIfDefaultsPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 83),
    _DeployProvIfDefaultsPumpPower_Type()
)
deployProvIfDefaultsPumpPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPumpPower.setUnits("0.2 dBm")
_DeployProvIfDefaultsIpType_Type = FspR7IpType
_DeployProvIfDefaultsIpType_Object = MibTableColumn
deployProvIfDefaultsIpType = _DeployProvIfDefaultsIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 84),
    _DeployProvIfDefaultsIpType_Type()
)
deployProvIfDefaultsIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsIpType.setStatus("current")
_DeployProvIfDefaultsWdmRxChannel_Type = FspR7ChannelIdentifier
_DeployProvIfDefaultsWdmRxChannel_Object = MibTableColumn
deployProvIfDefaultsWdmRxChannel = _DeployProvIfDefaultsWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 85),
    _DeployProvIfDefaultsWdmRxChannel_Type()
)
deployProvIfDefaultsWdmRxChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsWdmRxChannel.setStatus("current")
_DeployProvIfDefaultsSigDegThresSonetSection_Type = FspR7BERThresholdSection
_DeployProvIfDefaultsSigDegThresSonetSection_Object = MibTableColumn
deployProvIfDefaultsSigDegThresSonetSection = _DeployProvIfDefaultsSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 86),
    _DeployProvIfDefaultsSigDegThresSonetSection_Type()
)
deployProvIfDefaultsSigDegThresSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresSonetSection.setStatus("current")


class _DeployProvIfDefaultsSigDegThresSdhSection_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegThresSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegThresSdhSection_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegThresSdhSection_Object = MibTableColumn
deployProvIfDefaultsSigDegThresSdhSection = _DeployProvIfDefaultsSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 87),
    _DeployProvIfDefaultsSigDegThresSdhSection_Type()
)
deployProvIfDefaultsSigDegThresSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegThresSdhSection.setUnits("%")


class _DeployProvIfDefaultsSigDegPeriodSdhSection_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPeriodSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPeriodSdhSection_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPeriodSdhSection_Object = MibTableColumn
deployProvIfDefaultsSigDegPeriodSdhSection = _DeployProvIfDefaultsSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 88),
    _DeployProvIfDefaultsSigDegPeriodSdhSection_Type()
)
deployProvIfDefaultsSigDegPeriodSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPeriodSdhSection.setUnits("s")
_DeployProvIfDefaultsDispersionMode_Type = FspR7DispersionModes
_DeployProvIfDefaultsDispersionMode_Object = MibTableColumn
deployProvIfDefaultsDispersionMode = _DeployProvIfDefaultsDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 89),
    _DeployProvIfDefaultsDispersionMode_Type()
)
deployProvIfDefaultsDispersionMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsDispersionMode.setStatus("current")


class _DeployProvIfDefaultsDispersionSetting_Type(Integer32):
    """Custom type deployProvIfDefaultsDispersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsDispersionSetting_Type.__name__ = "Integer32"
_DeployProvIfDefaultsDispersionSetting_Object = MibTableColumn
deployProvIfDefaultsDispersionSetting = _DeployProvIfDefaultsDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 90),
    _DeployProvIfDefaultsDispersionSetting_Type()
)
deployProvIfDefaultsDispersionSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsDispersionSetting.setUnits("ps/nm")


class _DeployProvIfDefaultsOffset_Type(Integer32):
    """Custom type deployProvIfDefaultsOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsOffset_Type.__name__ = "Integer32"
_DeployProvIfDefaultsOffset_Object = MibTableColumn
deployProvIfDefaultsOffset = _DeployProvIfDefaultsOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 91),
    _DeployProvIfDefaultsOffset_Type()
)
deployProvIfDefaultsOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOffset.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOffset.setUnits("0.1 dB")
_DeployProvIfDefaultsFunction_Type = FspR7InterfaceFunction
_DeployProvIfDefaultsFunction_Object = MibTableColumn
deployProvIfDefaultsFunction = _DeployProvIfDefaultsFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 92),
    _DeployProvIfDefaultsFunction_Type()
)
deployProvIfDefaultsFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsFunction.setStatus("current")
_DeployProvIfDefaultsPortMode_Type = FspR7PortMode
_DeployProvIfDefaultsPortMode_Object = MibTableColumn
deployProvIfDefaultsPortMode = _DeployProvIfDefaultsPortMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 93),
    _DeployProvIfDefaultsPortMode_Type()
)
deployProvIfDefaultsPortMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPortMode.setStatus("current")
_DeployProvIfDefaultsPortRole_Type = FspR7PortRole
_DeployProvIfDefaultsPortRole_Object = MibTableColumn
deployProvIfDefaultsPortRole = _DeployProvIfDefaultsPortRole_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 94),
    _DeployProvIfDefaultsPortRole_Type()
)
deployProvIfDefaultsPortRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPortRole.setStatus("current")
_DeployProvIfDefaultsUtag_Type = FspR7UntaggedFrames
_DeployProvIfDefaultsUtag_Object = MibTableColumn
deployProvIfDefaultsUtag = _DeployProvIfDefaultsUtag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 95),
    _DeployProvIfDefaultsUtag_Type()
)
deployProvIfDefaultsUtag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsUtag.setStatus("current")


class _DeployProvIfDefaultsPvid_Type(Unsigned32):
    """Custom type deployProvIfDefaultsPvid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsPvid_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsPvid_Object = MibTableColumn
deployProvIfDefaultsPvid = _DeployProvIfDefaultsPvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 96),
    _DeployProvIfDefaultsPvid_Type()
)
deployProvIfDefaultsPvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPvid.setStatus("current")


class _DeployProvIfDefaultsPriority_Type(Unsigned32):
    """Custom type deployProvIfDefaultsPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsPriority_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsPriority_Object = MibTableColumn
deployProvIfDefaultsPriority = _DeployProvIfDefaultsPriority_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 97),
    _DeployProvIfDefaultsPriority_Type()
)
deployProvIfDefaultsPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPriority.setStatus("current")
_DeployProvIfDefaultsStagType_Type = FspR7SnmpHexString
_DeployProvIfDefaultsStagType_Object = MibTableColumn
deployProvIfDefaultsStagType = _DeployProvIfDefaultsStagType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 98),
    _DeployProvIfDefaultsStagType_Type()
)
deployProvIfDefaultsStagType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsStagType.setStatus("current")
_DeployProvIfDefaultsCac_Type = FspR7L2CacEnable
_DeployProvIfDefaultsCac_Object = MibTableColumn
deployProvIfDefaultsCac = _DeployProvIfDefaultsCac_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 99),
    _DeployProvIfDefaultsCac_Type()
)
deployProvIfDefaultsCac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsCac.setStatus("current")


class _DeployProvIfDefaultsMaxFrameSize_Type(Unsigned32):
    """Custom type deployProvIfDefaultsMaxFrameSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1518, 9600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsMaxFrameSize_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsMaxFrameSize_Object = MibTableColumn
deployProvIfDefaultsMaxFrameSize = _DeployProvIfDefaultsMaxFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 100),
    _DeployProvIfDefaultsMaxFrameSize_Type()
)
deployProvIfDefaultsMaxFrameSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsMaxFrameSize.setStatus("current")
_DeployProvIfDefaultsVethAid_Type = EntityIndex
_DeployProvIfDefaultsVethAid_Object = MibTableColumn
deployProvIfDefaultsVethAid = _DeployProvIfDefaultsVethAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 101),
    _DeployProvIfDefaultsVethAid_Type()
)
deployProvIfDefaultsVethAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsVethAid.setStatus("current")


class _DeployProvIfDefaultsLagPrio_Type(Unsigned32):
    """Custom type deployProvIfDefaultsLagPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsLagPrio_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsLagPrio_Object = MibTableColumn
deployProvIfDefaultsLagPrio = _DeployProvIfDefaultsLagPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 102),
    _DeployProvIfDefaultsLagPrio_Type()
)
deployProvIfDefaultsLagPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLagPrio.setStatus("current")
_DeployProvIfDefaultsLagPortType_Type = FspR7LagPortType
_DeployProvIfDefaultsLagPortType_Object = MibTableColumn
deployProvIfDefaultsLagPortType = _DeployProvIfDefaultsLagPortType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 103),
    _DeployProvIfDefaultsLagPortType_Type()
)
deployProvIfDefaultsLagPortType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLagPortType.setStatus("current")


class _DeployProvIfDefaultsLagActivePorts_Type(Unsigned32):
    """Custom type deployProvIfDefaultsLagActivePorts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsLagActivePorts_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsLagActivePorts_Object = MibTableColumn
deployProvIfDefaultsLagActivePorts = _DeployProvIfDefaultsLagActivePorts_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 104),
    _DeployProvIfDefaultsLagActivePorts_Type()
)
deployProvIfDefaultsLagActivePorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLagActivePorts.setStatus("current")
_DeployProvIfDefaultsLacpMode_Type = FspR7LacpMode
_DeployProvIfDefaultsLacpMode_Object = MibTableColumn
deployProvIfDefaultsLacpMode = _DeployProvIfDefaultsLacpMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 105),
    _DeployProvIfDefaultsLacpMode_Type()
)
deployProvIfDefaultsLacpMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLacpMode.setStatus("current")
_DeployProvIfDefaultsLagLoadBallanceSource_Type = FspR7LagLoadBallanceSource
_DeployProvIfDefaultsLagLoadBallanceSource_Object = MibTableColumn
deployProvIfDefaultsLagLoadBallanceSource = _DeployProvIfDefaultsLagLoadBallanceSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 106),
    _DeployProvIfDefaultsLagLoadBallanceSource_Type()
)
deployProvIfDefaultsLagLoadBallanceSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLagLoadBallanceSource.setStatus("current")
_DeployProvIfDefaultsLacpTimeout_Type = FspR7LacpTimeout
_DeployProvIfDefaultsLacpTimeout_Object = MibTableColumn
deployProvIfDefaultsLacpTimeout = _DeployProvIfDefaultsLacpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 107),
    _DeployProvIfDefaultsLacpTimeout_Type()
)
deployProvIfDefaultsLacpTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLacpTimeout.setStatus("current")
_DeployProvIfDefaultsFarEndCommunication_Type = FspR7YesNo
_DeployProvIfDefaultsFarEndCommunication_Object = MibTableColumn
deployProvIfDefaultsFarEndCommunication = _DeployProvIfDefaultsFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 108),
    _DeployProvIfDefaultsFarEndCommunication_Type()
)
deployProvIfDefaultsFarEndCommunication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsFarEndCommunication.setStatus("current")
_DeployProvIfDefaultsEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvIfDefaultsEqlzAdmin_Object = MibTableColumn
deployProvIfDefaultsEqlzAdmin = _DeployProvIfDefaultsEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 109),
    _DeployProvIfDefaultsEqlzAdmin_Type()
)
deployProvIfDefaultsEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsEqlzAdmin.setStatus("current")
_DeployProvIfDefaultsTxOffDelay_Type = FspR7EnableDisable
_DeployProvIfDefaultsTxOffDelay_Object = MibTableColumn
deployProvIfDefaultsTxOffDelay = _DeployProvIfDefaultsTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 110),
    _DeployProvIfDefaultsTxOffDelay_Type()
)
deployProvIfDefaultsTxOffDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTxOffDelay.setStatus("current")
_DeployProvIfDefaultsOpuPayloadType_Type = FspR7OpuPayloadType
_DeployProvIfDefaultsOpuPayloadType_Object = MibTableColumn
deployProvIfDefaultsOpuPayloadType = _DeployProvIfDefaultsOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 111),
    _DeployProvIfDefaultsOpuPayloadType_Type()
)
deployProvIfDefaultsOpuPayloadType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOpuPayloadType.setStatus("current")


class _DeployProvIfDefaultsOscOpticalSetpoint_Type(Integer32):
    """Custom type deployProvIfDefaultsOscOpticalSetpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvIfDefaultsOscOpticalSetpoint_Type.__name__ = "Integer32"
_DeployProvIfDefaultsOscOpticalSetpoint_Object = MibTableColumn
deployProvIfDefaultsOscOpticalSetpoint = _DeployProvIfDefaultsOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 112),
    _DeployProvIfDefaultsOscOpticalSetpoint_Type()
)
deployProvIfDefaultsOscOpticalSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOscOpticalSetpoint.setUnits("0.1 dBm")
_DeployProvIfDefaultsFiberBrand_Type = FspR7FiberBrand
_DeployProvIfDefaultsFiberBrand_Object = MibTableColumn
deployProvIfDefaultsFiberBrand = _DeployProvIfDefaultsFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 113),
    _DeployProvIfDefaultsFiberBrand_Type()
)
deployProvIfDefaultsFiberBrand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsFiberBrand.setStatus("current")
_DeployProvIfDefaultsTiltSet_Type = FspR7TiltSet
_DeployProvIfDefaultsTiltSet_Object = MibTableColumn
deployProvIfDefaultsTiltSet = _DeployProvIfDefaultsTiltSet_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 114),
    _DeployProvIfDefaultsTiltSet_Type()
)
deployProvIfDefaultsTiltSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTiltSet.setStatus("current")
_DeployProvIfDefaultsXfpDecisionThres_Type = FspR7XfpDecisionThres
_DeployProvIfDefaultsXfpDecisionThres_Object = MibTableColumn
deployProvIfDefaultsXfpDecisionThres = _DeployProvIfDefaultsXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 115),
    _DeployProvIfDefaultsXfpDecisionThres_Type()
)
deployProvIfDefaultsXfpDecisionThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsXfpDecisionThres.setStatus("current")
_DeployProvIfDefaultsAutoPTassignment_Type = FspR7ManualAuto
_DeployProvIfDefaultsAutoPTassignment_Object = MibTableColumn
deployProvIfDefaultsAutoPTassignment = _DeployProvIfDefaultsAutoPTassignment_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 116),
    _DeployProvIfDefaultsAutoPTassignment_Type()
)
deployProvIfDefaultsAutoPTassignment.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAutoPTassignment.setStatus("current")
_DeployProvIfDefaultsTributarySlotMethod_Type = FspR7ManualAuto
_DeployProvIfDefaultsTributarySlotMethod_Object = MibTableColumn
deployProvIfDefaultsTributarySlotMethod = _DeployProvIfDefaultsTributarySlotMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 117),
    _DeployProvIfDefaultsTributarySlotMethod_Type()
)
deployProvIfDefaultsTributarySlotMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsTributarySlotMethod.setStatus("current")
_DeployProvIfDefaultsOduTribPortNo_Type = SnmpAdminString
_DeployProvIfDefaultsOduTribPortNo_Object = MibTableColumn
deployProvIfDefaultsOduTribPortNo = _DeployProvIfDefaultsOduTribPortNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 118),
    _DeployProvIfDefaultsOduTribPortNo_Type()
)
deployProvIfDefaultsOduTribPortNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOduTribPortNo.setStatus("current")
_DeployProvIfDefaultsOduTribTimeSlottNo_Type = SnmpAdminString
_DeployProvIfDefaultsOduTribTimeSlottNo_Object = MibTableColumn
deployProvIfDefaultsOduTribTimeSlottNo = _DeployProvIfDefaultsOduTribTimeSlottNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 119),
    _DeployProvIfDefaultsOduTribTimeSlottNo_Type()
)
deployProvIfDefaultsOduTribTimeSlottNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsOduTribTimeSlottNo.setStatus("current")
_DeployProvIfDefaultsRevertiveMode_Type = ApsRevertMode
_DeployProvIfDefaultsRevertiveMode_Object = MibTableColumn
deployProvIfDefaultsRevertiveMode = _DeployProvIfDefaultsRevertiveMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 120),
    _DeployProvIfDefaultsRevertiveMode_Type()
)
deployProvIfDefaultsRevertiveMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsRevertiveMode.setStatus("current")
_DeployProvIfDefaultsLaserDelayTimer_Type = FspR7LaserDelayTimer
_DeployProvIfDefaultsLaserDelayTimer_Object = MibTableColumn
deployProvIfDefaultsLaserDelayTimer = _DeployProvIfDefaultsLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 121),
    _DeployProvIfDefaultsLaserDelayTimer_Type()
)
deployProvIfDefaultsLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLaserDelayTimer.setStatus("current")


class _DeployProvIfDefaultsLaserOffTimer_Type(Unsigned32):
    """Custom type deployProvIfDefaultsLaserOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsLaserOffTimer_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsLaserOffTimer_Object = MibTableColumn
deployProvIfDefaultsLaserOffTimer = _DeployProvIfDefaultsLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 122),
    _DeployProvIfDefaultsLaserOffTimer_Type()
)
deployProvIfDefaultsLaserOffTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLaserOffTimer.setUnits("ms")


class _DeployProvIfDefaultsLaserOnTimer_Type(Unsigned32):
    """Custom type deployProvIfDefaultsLaserOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsLaserOnTimer_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsLaserOnTimer_Object = MibTableColumn
deployProvIfDefaultsLaserOnTimer = _DeployProvIfDefaultsLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 123),
    _DeployProvIfDefaultsLaserOnTimer_Type()
)
deployProvIfDefaultsLaserOnTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLaserOnTimer.setUnits("ms")
_DeployProvIfDefaultsLaneChannelSetting_Type = FspR7ChannelIdentifier
_DeployProvIfDefaultsLaneChannelSetting_Object = MibTableColumn
deployProvIfDefaultsLaneChannelSetting = _DeployProvIfDefaultsLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 124),
    _DeployProvIfDefaultsLaneChannelSetting_Type()
)
deployProvIfDefaultsLaneChannelSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsLaneChannelSetting.setStatus("current")
_DeployProvIfDefaultsBip_Type = FspR7Bip
_DeployProvIfDefaultsBip_Object = MibTableColumn
deployProvIfDefaultsBip = _DeployProvIfDefaultsBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 125),
    _DeployProvIfDefaultsBip_Type()
)
deployProvIfDefaultsBip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsBip.setStatus("current")
_DeployProvIfDefaultsCodeGain_Type = FspR7CodeGain
_DeployProvIfDefaultsCodeGain_Object = MibTableColumn
deployProvIfDefaultsCodeGain = _DeployProvIfDefaultsCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 126),
    _DeployProvIfDefaultsCodeGain_Type()
)
deployProvIfDefaultsCodeGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsCodeGain.setStatus("current")
_DeployProvIfDefaultsEdfaPwrOut_Type = FspR7EdfaOutputPowerRating
_DeployProvIfDefaultsEdfaPwrOut_Object = MibTableColumn
deployProvIfDefaultsEdfaPwrOut = _DeployProvIfDefaultsEdfaPwrOut_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 127),
    _DeployProvIfDefaultsEdfaPwrOut_Type()
)
deployProvIfDefaultsEdfaPwrOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsEdfaPwrOut.setStatus("current")


class _DeployProvIfDefaultsPrio_Type(Unsigned32):
    """Custom type deployProvIfDefaultsPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsPrio_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsPrio_Object = MibTableColumn
deployProvIfDefaultsPrio = _DeployProvIfDefaultsPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 128),
    _DeployProvIfDefaultsPrio_Type()
)
deployProvIfDefaultsPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsPrio.setStatus("current")
_DeployProvIfDefaultsAuthType_Type = FspR7CpAuthType
_DeployProvIfDefaultsAuthType_Object = MibTableColumn
deployProvIfDefaultsAuthType = _DeployProvIfDefaultsAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 129),
    _DeployProvIfDefaultsAuthType_Type()
)
deployProvIfDefaultsAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAuthType.setStatus("current")
_DeployProvIfDefaultsAuthString_Type = SnmpAdminString
_DeployProvIfDefaultsAuthString_Object = MibTableColumn
deployProvIfDefaultsAuthString = _DeployProvIfDefaultsAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 130),
    _DeployProvIfDefaultsAuthString_Type()
)
deployProvIfDefaultsAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsAuthString.setStatus("current")


class _DeployProvIfDefaultsSigDegPcslThreshold_Type(Unsigned32):
    """Custom type deployProvIfDefaultsSigDegPcslThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvIfDefaultsSigDegPcslThreshold_Type.__name__ = "Unsigned32"
_DeployProvIfDefaultsSigDegPcslThreshold_Object = MibTableColumn
deployProvIfDefaultsSigDegPcslThreshold = _DeployProvIfDefaultsSigDegPcslThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 3, 1, 131),
    _DeployProvIfDefaultsSigDegPcslThreshold_Type()
)
deployProvIfDefaultsSigDegPcslThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPcslThreshold.setStatus("current")
if mibBuilder.loadTexts:
    deployProvIfDefaultsSigDegPcslThreshold.setUnits("%")
_DeployProvVchChannelTable_Object = MibTable
deployProvVchChannelTable = _DeployProvVchChannelTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4)
)
if mibBuilder.loadTexts:
    deployProvVchChannelTable.setStatus("current")
_DeployProvVchChannelEntry_Object = MibTableRow
deployProvVchChannelEntry = _DeployProvVchChannelEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1)
)
deployProvVchChannelEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvVchChannelEntry.setStatus("current")
_DeployProvVchChannelRowStatus_Type = RowStatus
_DeployProvVchChannelRowStatus_Object = MibTableColumn
deployProvVchChannelRowStatus = _DeployProvVchChannelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 1),
    _DeployProvVchChannelRowStatus_Type()
)
deployProvVchChannelRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelRowStatus.setStatus("current")
_DeployProvVchChannelForceDestroy_Type = FspR7ForcedStatus
_DeployProvVchChannelForceDestroy_Object = MibTableColumn
deployProvVchChannelForceDestroy = _DeployProvVchChannelForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 2),
    _DeployProvVchChannelForceDestroy_Type()
)
deployProvVchChannelForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelForceDestroy.setStatus("current")
_DeployProvVchChannelType_Type = FspR7InterfaceType
_DeployProvVchChannelType_Object = MibTableColumn
deployProvVchChannelType = _DeployProvVchChannelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 3),
    _DeployProvVchChannelType_Type()
)
deployProvVchChannelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelType.setStatus("current")
_DeployProvVchChannelVcgType_Type = VirtualContainerType
_DeployProvVchChannelVcgType_Object = MibTableColumn
deployProvVchChannelVcgType = _DeployProvVchChannelVcgType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 4),
    _DeployProvVchChannelVcgType_Type()
)
deployProvVchChannelVcgType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelVcgType.setStatus("current")
_DeployProvVchChannelBundle_Type = SonetVcBundleAllocation
_DeployProvVchChannelBundle_Object = MibTableColumn
deployProvVchChannelBundle = _DeployProvVchChannelBundle_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 5),
    _DeployProvVchChannelBundle_Type()
)
deployProvVchChannelBundle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelBundle.setStatus("current")
_DeployProvVchChannelCir_Type = Unsigned32
_DeployProvVchChannelCir_Object = MibTableColumn
deployProvVchChannelCir = _DeployProvVchChannelCir_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 6),
    _DeployProvVchChannelCir_Type()
)
deployProvVchChannelCir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelCir.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelCir.setUnits("Mbit/s")
_DeployProvVchChannelAdmin_Type = FspR7AdminState
_DeployProvVchChannelAdmin_Object = MibTableColumn
deployProvVchChannelAdmin = _DeployProvVchChannelAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 7),
    _DeployProvVchChannelAdmin_Type()
)
deployProvVchChannelAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelAdmin.setStatus("current")


class _DeployProvVchChannelSigDegThresOdu_Type(Integer32):
    """Custom type deployProvVchChannelSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvVchChannelSigDegThresOdu_Type.__name__ = "Integer32"
_DeployProvVchChannelSigDegThresOdu_Object = MibTableColumn
deployProvVchChannelSigDegThresOdu = _DeployProvVchChannelSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 8),
    _DeployProvVchChannelSigDegThresOdu_Type()
)
deployProvVchChannelSigDegThresOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelSigDegThresOdu.setUnits("%")


class _DeployProvVchChannelSigDegPeriodOdu_Type(Unsigned32):
    """Custom type deployProvVchChannelSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvVchChannelSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_DeployProvVchChannelSigDegPeriodOdu_Object = MibTableColumn
deployProvVchChannelSigDegPeriodOdu = _DeployProvVchChannelSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 9),
    _DeployProvVchChannelSigDegPeriodOdu_Type()
)
deployProvVchChannelSigDegPeriodOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelSigDegPeriodOdu.setUnits("s")


class _DeployProvVchChannelTraceExpectedOdu_Type(OctetString):
    """Custom type deployProvVchChannelTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvVchChannelTraceExpectedOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelTraceExpectedOdu_Object = MibTableColumn
deployProvVchChannelTraceExpectedOdu = _DeployProvVchChannelTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 10),
    _DeployProvVchChannelTraceExpectedOdu_Type()
)
deployProvVchChannelTraceExpectedOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelTraceExpectedOdu.setStatus("current")


class _DeployProvVchChannelTraceTransmitSapiOdu_Type(OctetString):
    """Custom type deployProvVchChannelTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvVchChannelTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelTraceTransmitSapiOdu_Object = MibTableColumn
deployProvVchChannelTraceTransmitSapiOdu = _DeployProvVchChannelTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 11),
    _DeployProvVchChannelTraceTransmitSapiOdu_Type()
)
deployProvVchChannelTraceTransmitSapiOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelTraceTransmitSapiOdu.setStatus("current")


class _DeployProvVchChannelTraceTransmitDapiOdu_Type(OctetString):
    """Custom type deployProvVchChannelTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvVchChannelTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelTraceTransmitDapiOdu_Object = MibTableColumn
deployProvVchChannelTraceTransmitDapiOdu = _DeployProvVchChannelTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 12),
    _DeployProvVchChannelTraceTransmitDapiOdu_Type()
)
deployProvVchChannelTraceTransmitDapiOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelTraceTransmitDapiOdu.setStatus("current")


class _DeployProvVchChannelTraceTransmitOpspOdu_Type(OctetString):
    """Custom type deployProvVchChannelTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvVchChannelTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelTraceTransmitOpspOdu_Object = MibTableColumn
deployProvVchChannelTraceTransmitOpspOdu = _DeployProvVchChannelTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 13),
    _DeployProvVchChannelTraceTransmitOpspOdu_Type()
)
deployProvVchChannelTraceTransmitOpspOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelTraceTransmitOpspOdu.setStatus("current")
_DeployProvVchChannelTimModeOdu_Type = TimMode
_DeployProvVchChannelTimModeOdu_Object = MibTableColumn
deployProvVchChannelTimModeOdu = _DeployProvVchChannelTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 14),
    _DeployProvVchChannelTimModeOdu_Type()
)
deployProvVchChannelTimModeOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelTimModeOdu.setStatus("current")
_DeployProvVchChannelEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvVchChannelEqlzAdmin_Object = MibTableColumn
deployProvVchChannelEqlzAdmin = _DeployProvVchChannelEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 4, 1, 15),
    _DeployProvVchChannelEqlzAdmin_Type()
)
deployProvVchChannelEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVchChannelEqlzAdmin.setStatus("current")
_DeployProvVchChannelCapTable_Object = MibTable
deployProvVchChannelCapTable = _DeployProvVchChannelCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5)
)
if mibBuilder.loadTexts:
    deployProvVchChannelCapTable.setStatus("current")
_DeployProvVchChannelCapEntry_Object = MibTableRow
deployProvVchChannelCapEntry = _DeployProvVchChannelCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1)
)
deployProvVchChannelCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvVchChannelCapEntry.setStatus("current")
_DeployProvVchChannelCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvVchChannelCapRowStatus_Object = MibTableColumn
deployProvVchChannelCapRowStatus = _DeployProvVchChannelCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 1),
    _DeployProvVchChannelCapRowStatus_Type()
)
deployProvVchChannelCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapRowStatus.setStatus("current")
_DeployProvVchChannelCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvVchChannelCapForceDestroy_Object = MibTableColumn
deployProvVchChannelCapForceDestroy = _DeployProvVchChannelCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 2),
    _DeployProvVchChannelCapForceDestroy_Type()
)
deployProvVchChannelCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapForceDestroy.setStatus("current")
_DeployProvVchChannelCapType_Type = FspR7InterfaceTypeCaps
_DeployProvVchChannelCapType_Object = MibTableColumn
deployProvVchChannelCapType = _DeployProvVchChannelCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 3),
    _DeployProvVchChannelCapType_Type()
)
deployProvVchChannelCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapType.setStatus("current")
_DeployProvVchChannelCapVcgType_Type = VirtualContainerTypeCaps
_DeployProvVchChannelCapVcgType_Object = MibTableColumn
deployProvVchChannelCapVcgType = _DeployProvVchChannelCapVcgType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 4),
    _DeployProvVchChannelCapVcgType_Type()
)
deployProvVchChannelCapVcgType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapVcgType.setStatus("current")
_DeployProvVchChannelCapBundle_Type = SonetVcBundleAllocationCaps
_DeployProvVchChannelCapBundle_Object = MibTableColumn
deployProvVchChannelCapBundle = _DeployProvVchChannelCapBundle_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 5),
    _DeployProvVchChannelCapBundle_Type()
)
deployProvVchChannelCapBundle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapBundle.setStatus("current")
_DeployProvVchChannelCapCir_Type = FspR7Unsigned32Caps
_DeployProvVchChannelCapCir_Object = MibTableColumn
deployProvVchChannelCapCir = _DeployProvVchChannelCapCir_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 6),
    _DeployProvVchChannelCapCir_Type()
)
deployProvVchChannelCapCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapCir.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelCapCir.setUnits("Mbit/s")
_DeployProvVchChannelCapAdmin_Type = FspR7AdminStateCaps
_DeployProvVchChannelCapAdmin_Object = MibTableColumn
deployProvVchChannelCapAdmin = _DeployProvVchChannelCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 7),
    _DeployProvVchChannelCapAdmin_Type()
)
deployProvVchChannelCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapAdmin.setStatus("current")
_DeployProvVchChannelCapSigDegThresOdu_Type = FspR7Integer32Caps
_DeployProvVchChannelCapSigDegThresOdu_Object = MibTableColumn
deployProvVchChannelCapSigDegThresOdu = _DeployProvVchChannelCapSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 8),
    _DeployProvVchChannelCapSigDegThresOdu_Type()
)
deployProvVchChannelCapSigDegThresOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelCapSigDegThresOdu.setUnits("%")
_DeployProvVchChannelCapSigDegPeriodOdu_Type = FspR7Unsigned32Caps
_DeployProvVchChannelCapSigDegPeriodOdu_Object = MibTableColumn
deployProvVchChannelCapSigDegPeriodOdu = _DeployProvVchChannelCapSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 9),
    _DeployProvVchChannelCapSigDegPeriodOdu_Type()
)
deployProvVchChannelCapSigDegPeriodOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelCapSigDegPeriodOdu.setUnits("s")
_DeployProvVchChannelCapTraceExpectedOdu_Type = Integer32
_DeployProvVchChannelCapTraceExpectedOdu_Object = MibTableColumn
deployProvVchChannelCapTraceExpectedOdu = _DeployProvVchChannelCapTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 10),
    _DeployProvVchChannelCapTraceExpectedOdu_Type()
)
deployProvVchChannelCapTraceExpectedOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapTraceExpectedOdu.setStatus("current")
_DeployProvVchChannelCapTraceTransmitSapiOdu_Type = Integer32
_DeployProvVchChannelCapTraceTransmitSapiOdu_Object = MibTableColumn
deployProvVchChannelCapTraceTransmitSapiOdu = _DeployProvVchChannelCapTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 11),
    _DeployProvVchChannelCapTraceTransmitSapiOdu_Type()
)
deployProvVchChannelCapTraceTransmitSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapTraceTransmitSapiOdu.setStatus("current")
_DeployProvVchChannelCapTraceTransmitDapiOdu_Type = Integer32
_DeployProvVchChannelCapTraceTransmitDapiOdu_Object = MibTableColumn
deployProvVchChannelCapTraceTransmitDapiOdu = _DeployProvVchChannelCapTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 12),
    _DeployProvVchChannelCapTraceTransmitDapiOdu_Type()
)
deployProvVchChannelCapTraceTransmitDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapTraceTransmitDapiOdu.setStatus("current")
_DeployProvVchChannelCapTraceTransmitOpspOdu_Type = Integer32
_DeployProvVchChannelCapTraceTransmitOpspOdu_Object = MibTableColumn
deployProvVchChannelCapTraceTransmitOpspOdu = _DeployProvVchChannelCapTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 13),
    _DeployProvVchChannelCapTraceTransmitOpspOdu_Type()
)
deployProvVchChannelCapTraceTransmitOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapTraceTransmitOpspOdu.setStatus("current")
_DeployProvVchChannelCapTimModeOdu_Type = TimModeCaps
_DeployProvVchChannelCapTimModeOdu_Object = MibTableColumn
deployProvVchChannelCapTimModeOdu = _DeployProvVchChannelCapTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 14),
    _DeployProvVchChannelCapTimModeOdu_Type()
)
deployProvVchChannelCapTimModeOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapTimModeOdu.setStatus("current")
_DeployProvVchChannelCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_DeployProvVchChannelCapEqlzAdmin_Object = MibTableColumn
deployProvVchChannelCapEqlzAdmin = _DeployProvVchChannelCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 5, 1, 15),
    _DeployProvVchChannelCapEqlzAdmin_Type()
)
deployProvVchChannelCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelCapEqlzAdmin.setStatus("current")
_DeployProvVchChannelDefaultsTable_Object = MibTable
deployProvVchChannelDefaultsTable = _DeployProvVchChannelDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6)
)
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsTable.setStatus("current")
_DeployProvVchChannelDefaultsEntry_Object = MibTableRow
deployProvVchChannelDefaultsEntry = _DeployProvVchChannelDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1)
)
deployProvVchChannelDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsEntry.setStatus("current")
_DeployProvVchChannelDefaultsRowStatus_Type = RowStatus
_DeployProvVchChannelDefaultsRowStatus_Object = MibTableColumn
deployProvVchChannelDefaultsRowStatus = _DeployProvVchChannelDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 1),
    _DeployProvVchChannelDefaultsRowStatus_Type()
)
deployProvVchChannelDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsRowStatus.setStatus("current")
_DeployProvVchChannelDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvVchChannelDefaultsForceDestroy_Object = MibTableColumn
deployProvVchChannelDefaultsForceDestroy = _DeployProvVchChannelDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 2),
    _DeployProvVchChannelDefaultsForceDestroy_Type()
)
deployProvVchChannelDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsForceDestroy.setStatus("current")
_DeployProvVchChannelDefaultsType_Type = FspR7InterfaceType
_DeployProvVchChannelDefaultsType_Object = MibTableColumn
deployProvVchChannelDefaultsType = _DeployProvVchChannelDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 3),
    _DeployProvVchChannelDefaultsType_Type()
)
deployProvVchChannelDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsType.setStatus("current")
_DeployProvVchChannelDefaultsVcgType_Type = VirtualContainerType
_DeployProvVchChannelDefaultsVcgType_Object = MibTableColumn
deployProvVchChannelDefaultsVcgType = _DeployProvVchChannelDefaultsVcgType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 4),
    _DeployProvVchChannelDefaultsVcgType_Type()
)
deployProvVchChannelDefaultsVcgType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsVcgType.setStatus("current")
_DeployProvVchChannelDefaultsBundle_Type = SonetVcBundleAllocation
_DeployProvVchChannelDefaultsBundle_Object = MibTableColumn
deployProvVchChannelDefaultsBundle = _DeployProvVchChannelDefaultsBundle_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 5),
    _DeployProvVchChannelDefaultsBundle_Type()
)
deployProvVchChannelDefaultsBundle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsBundle.setStatus("current")
_DeployProvVchChannelDefaultsCir_Type = Unsigned32
_DeployProvVchChannelDefaultsCir_Object = MibTableColumn
deployProvVchChannelDefaultsCir = _DeployProvVchChannelDefaultsCir_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 6),
    _DeployProvVchChannelDefaultsCir_Type()
)
deployProvVchChannelDefaultsCir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsCir.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsCir.setUnits("Mbit/s")
_DeployProvVchChannelDefaultsAdmin_Type = FspR7AdminState
_DeployProvVchChannelDefaultsAdmin_Object = MibTableColumn
deployProvVchChannelDefaultsAdmin = _DeployProvVchChannelDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 7),
    _DeployProvVchChannelDefaultsAdmin_Type()
)
deployProvVchChannelDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsAdmin.setStatus("current")


class _DeployProvVchChannelDefaultsSigDegThresOdu_Type(Integer32):
    """Custom type deployProvVchChannelDefaultsSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvVchChannelDefaultsSigDegThresOdu_Type.__name__ = "Integer32"
_DeployProvVchChannelDefaultsSigDegThresOdu_Object = MibTableColumn
deployProvVchChannelDefaultsSigDegThresOdu = _DeployProvVchChannelDefaultsSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 8),
    _DeployProvVchChannelDefaultsSigDegThresOdu_Type()
)
deployProvVchChannelDefaultsSigDegThresOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsSigDegThresOdu.setUnits("%")


class _DeployProvVchChannelDefaultsSigDegPeriodOdu_Type(Unsigned32):
    """Custom type deployProvVchChannelDefaultsSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvVchChannelDefaultsSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_DeployProvVchChannelDefaultsSigDegPeriodOdu_Object = MibTableColumn
deployProvVchChannelDefaultsSigDegPeriodOdu = _DeployProvVchChannelDefaultsSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 9),
    _DeployProvVchChannelDefaultsSigDegPeriodOdu_Type()
)
deployProvVchChannelDefaultsSigDegPeriodOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsSigDegPeriodOdu.setUnits("s")


class _DeployProvVchChannelDefaultsTraceExpectedOdu_Type(OctetString):
    """Custom type deployProvVchChannelDefaultsTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvVchChannelDefaultsTraceExpectedOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelDefaultsTraceExpectedOdu_Object = MibTableColumn
deployProvVchChannelDefaultsTraceExpectedOdu = _DeployProvVchChannelDefaultsTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 10),
    _DeployProvVchChannelDefaultsTraceExpectedOdu_Type()
)
deployProvVchChannelDefaultsTraceExpectedOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsTraceExpectedOdu.setStatus("current")


class _DeployProvVchChannelDefaultsTraceTransmitSapiOdu_Type(OctetString):
    """Custom type deployProvVchChannelDefaultsTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvVchChannelDefaultsTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelDefaultsTraceTransmitSapiOdu_Object = MibTableColumn
deployProvVchChannelDefaultsTraceTransmitSapiOdu = _DeployProvVchChannelDefaultsTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 11),
    _DeployProvVchChannelDefaultsTraceTransmitSapiOdu_Type()
)
deployProvVchChannelDefaultsTraceTransmitSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsTraceTransmitSapiOdu.setStatus("current")


class _DeployProvVchChannelDefaultsTraceTransmitDapiOdu_Type(OctetString):
    """Custom type deployProvVchChannelDefaultsTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_DeployProvVchChannelDefaultsTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelDefaultsTraceTransmitDapiOdu_Object = MibTableColumn
deployProvVchChannelDefaultsTraceTransmitDapiOdu = _DeployProvVchChannelDefaultsTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 12),
    _DeployProvVchChannelDefaultsTraceTransmitDapiOdu_Type()
)
deployProvVchChannelDefaultsTraceTransmitDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsTraceTransmitDapiOdu.setStatus("current")


class _DeployProvVchChannelDefaultsTraceTransmitOpspOdu_Type(OctetString):
    """Custom type deployProvVchChannelDefaultsTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_DeployProvVchChannelDefaultsTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_DeployProvVchChannelDefaultsTraceTransmitOpspOdu_Object = MibTableColumn
deployProvVchChannelDefaultsTraceTransmitOpspOdu = _DeployProvVchChannelDefaultsTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 13),
    _DeployProvVchChannelDefaultsTraceTransmitOpspOdu_Type()
)
deployProvVchChannelDefaultsTraceTransmitOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsTraceTransmitOpspOdu.setStatus("current")
_DeployProvVchChannelDefaultsTimModeOdu_Type = TimMode
_DeployProvVchChannelDefaultsTimModeOdu_Object = MibTableColumn
deployProvVchChannelDefaultsTimModeOdu = _DeployProvVchChannelDefaultsTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 14),
    _DeployProvVchChannelDefaultsTimModeOdu_Type()
)
deployProvVchChannelDefaultsTimModeOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsTimModeOdu.setStatus("current")
_DeployProvVchChannelDefaultsEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvVchChannelDefaultsEqlzAdmin_Object = MibTableColumn
deployProvVchChannelDefaultsEqlzAdmin = _DeployProvVchChannelDefaultsEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 6, 1, 15),
    _DeployProvVchChannelDefaultsEqlzAdmin_Type()
)
deployProvVchChannelDefaultsEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVchChannelDefaultsEqlzAdmin.setStatus("current")
_DeployProvApsTable_Object = MibTable
deployProvApsTable = _DeployProvApsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7)
)
if mibBuilder.loadTexts:
    deployProvApsTable.setStatus("current")
_DeployProvApsEntry_Object = MibTableRow
deployProvApsEntry = _DeployProvApsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1)
)
deployProvApsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvApsEntry.setStatus("current")
_DeployProvApsRowStatus_Type = RowStatus
_DeployProvApsRowStatus_Object = MibTableColumn
deployProvApsRowStatus = _DeployProvApsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 1),
    _DeployProvApsRowStatus_Type()
)
deployProvApsRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsRowStatus.setStatus("current")
_DeployProvApsForceDestroy_Type = FspR7ForcedStatus
_DeployProvApsForceDestroy_Object = MibTableColumn
deployProvApsForceDestroy = _DeployProvApsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 2),
    _DeployProvApsForceDestroy_Type()
)
deployProvApsForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsForceDestroy.setStatus("current")
_DeployProvApsSDswitching_Type = EnableState
_DeployProvApsSDswitching_Object = MibTableColumn
deployProvApsSDswitching = _DeployProvApsSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 3),
    _DeployProvApsSDswitching_Type()
)
deployProvApsSDswitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsSDswitching.setStatus("current")
_DeployProvApsHoldOffTime_Type = ApsHoldoffTime
_DeployProvApsHoldOffTime_Object = MibTableColumn
deployProvApsHoldOffTime = _DeployProvApsHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 4),
    _DeployProvApsHoldOffTime_Type()
)
deployProvApsHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsHoldOffTime.setStatus("current")
_DeployProvApsProtectionMech_Type = ProtectionMech
_DeployProvApsProtectionMech_Object = MibTableColumn
deployProvApsProtectionMech = _DeployProvApsProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 5),
    _DeployProvApsProtectionMech_Type()
)
deployProvApsProtectionMech.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsProtectionMech.setStatus("current")
_DeployProvApsWorkingAid_Type = EntityIndex
_DeployProvApsWorkingAid_Object = MibTableColumn
deployProvApsWorkingAid = _DeployProvApsWorkingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 6),
    _DeployProvApsWorkingAid_Type()
)
deployProvApsWorkingAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsWorkingAid.setStatus("current")
_DeployProvApsProtectionAid_Type = EntityIndex
_DeployProvApsProtectionAid_Object = MibTableColumn
deployProvApsProtectionAid = _DeployProvApsProtectionAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 7),
    _DeployProvApsProtectionAid_Type()
)
deployProvApsProtectionAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsProtectionAid.setStatus("current")
_DeployProvApsSignalDegradeSwitching_Type = EnableState
_DeployProvApsSignalDegradeSwitching_Object = MibTableColumn
deployProvApsSignalDegradeSwitching = _DeployProvApsSignalDegradeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 8),
    _DeployProvApsSignalDegradeSwitching_Type()
)
deployProvApsSignalDegradeSwitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsSignalDegradeSwitching.setStatus("current")
_DeployProvApsSignalFailureSwitching_Type = EnableState
_DeployProvApsSignalFailureSwitching_Object = MibTableColumn
deployProvApsSignalFailureSwitching = _DeployProvApsSignalFailureSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 9),
    _DeployProvApsSignalFailureSwitching_Type()
)
deployProvApsSignalFailureSwitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsSignalFailureSwitching.setStatus("current")
_DeployProvApsFarEndIp_Type = IpAddress
_DeployProvApsFarEndIp_Object = MibTableColumn
deployProvApsFarEndIp = _DeployProvApsFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 10),
    _DeployProvApsFarEndIp_Type()
)
deployProvApsFarEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsFarEndIp.setStatus("current")
_DeployProvApsPeerAid_Type = EntityIndex
_DeployProvApsPeerAid_Object = MibTableColumn
deployProvApsPeerAid = _DeployProvApsPeerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 11),
    _DeployProvApsPeerAid_Type()
)
deployProvApsPeerAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsPeerAid.setStatus("current")
_DeployProvApsApsType_Type = ApsType
_DeployProvApsApsType_Object = MibTableColumn
deployProvApsApsType = _DeployProvApsApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 12),
    _DeployProvApsApsType_Type()
)
deployProvApsApsType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsApsType.setStatus("current")
_DeployProvApsRevertMode_Type = ApsRevertMode
_DeployProvApsRevertMode_Object = MibTableColumn
deployProvApsRevertMode = _DeployProvApsRevertMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 13),
    _DeployProvApsRevertMode_Type()
)
deployProvApsRevertMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsRevertMode.setStatus("current")


class _DeployProvApsWaitToRestore_Type(Unsigned32):
    """Custom type deployProvApsWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvApsWaitToRestore_Type.__name__ = "Unsigned32"
_DeployProvApsWaitToRestore_Object = MibTableColumn
deployProvApsWaitToRestore = _DeployProvApsWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 14),
    _DeployProvApsWaitToRestore_Type()
)
deployProvApsWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    deployProvApsWaitToRestore.setUnits("min")
_DeployProvApsDirection_Type = ApsDirection
_DeployProvApsDirection_Object = MibTableColumn
deployProvApsDirection = _DeployProvApsDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 7, 1, 15),
    _DeployProvApsDirection_Type()
)
deployProvApsDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvApsDirection.setStatus("current")
_DeployProvApsCapTable_Object = MibTable
deployProvApsCapTable = _DeployProvApsCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8)
)
if mibBuilder.loadTexts:
    deployProvApsCapTable.setStatus("current")
_DeployProvApsCapEntry_Object = MibTableRow
deployProvApsCapEntry = _DeployProvApsCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1)
)
deployProvApsCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvApsCapEntry.setStatus("current")
_DeployProvApsCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvApsCapRowStatus_Object = MibTableColumn
deployProvApsCapRowStatus = _DeployProvApsCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 1),
    _DeployProvApsCapRowStatus_Type()
)
deployProvApsCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapRowStatus.setStatus("current")
_DeployProvApsCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvApsCapForceDestroy_Object = MibTableColumn
deployProvApsCapForceDestroy = _DeployProvApsCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 2),
    _DeployProvApsCapForceDestroy_Type()
)
deployProvApsCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapForceDestroy.setStatus("current")
_DeployProvApsCapSDswitching_Type = EnableStateCaps
_DeployProvApsCapSDswitching_Object = MibTableColumn
deployProvApsCapSDswitching = _DeployProvApsCapSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 3),
    _DeployProvApsCapSDswitching_Type()
)
deployProvApsCapSDswitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapSDswitching.setStatus("current")
_DeployProvApsCapHoldOffTime_Type = ApsHoldoffTimeCaps
_DeployProvApsCapHoldOffTime_Object = MibTableColumn
deployProvApsCapHoldOffTime = _DeployProvApsCapHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 4),
    _DeployProvApsCapHoldOffTime_Type()
)
deployProvApsCapHoldOffTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapHoldOffTime.setStatus("current")
_DeployProvApsCapProtectionMech_Type = ProtectionMechCaps
_DeployProvApsCapProtectionMech_Object = MibTableColumn
deployProvApsCapProtectionMech = _DeployProvApsCapProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 5),
    _DeployProvApsCapProtectionMech_Type()
)
deployProvApsCapProtectionMech.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapProtectionMech.setStatus("current")
_DeployProvApsCapWorkingAid_Type = Integer32
_DeployProvApsCapWorkingAid_Object = MibTableColumn
deployProvApsCapWorkingAid = _DeployProvApsCapWorkingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 6),
    _DeployProvApsCapWorkingAid_Type()
)
deployProvApsCapWorkingAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapWorkingAid.setStatus("current")
_DeployProvApsCapProtectionAid_Type = Integer32
_DeployProvApsCapProtectionAid_Object = MibTableColumn
deployProvApsCapProtectionAid = _DeployProvApsCapProtectionAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 7),
    _DeployProvApsCapProtectionAid_Type()
)
deployProvApsCapProtectionAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapProtectionAid.setStatus("current")
_DeployProvApsCapSignalDegradeSwitching_Type = EnableStateCaps
_DeployProvApsCapSignalDegradeSwitching_Object = MibTableColumn
deployProvApsCapSignalDegradeSwitching = _DeployProvApsCapSignalDegradeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 8),
    _DeployProvApsCapSignalDegradeSwitching_Type()
)
deployProvApsCapSignalDegradeSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapSignalDegradeSwitching.setStatus("current")
_DeployProvApsCapSignalFailureSwitching_Type = EnableStateCaps
_DeployProvApsCapSignalFailureSwitching_Object = MibTableColumn
deployProvApsCapSignalFailureSwitching = _DeployProvApsCapSignalFailureSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 9),
    _DeployProvApsCapSignalFailureSwitching_Type()
)
deployProvApsCapSignalFailureSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapSignalFailureSwitching.setStatus("current")
_DeployProvApsCapFarEndIp_Type = FspR7YesNo
_DeployProvApsCapFarEndIp_Object = MibTableColumn
deployProvApsCapFarEndIp = _DeployProvApsCapFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 10),
    _DeployProvApsCapFarEndIp_Type()
)
deployProvApsCapFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapFarEndIp.setStatus("current")
_DeployProvApsCapPeerAid_Type = Integer32
_DeployProvApsCapPeerAid_Object = MibTableColumn
deployProvApsCapPeerAid = _DeployProvApsCapPeerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 11),
    _DeployProvApsCapPeerAid_Type()
)
deployProvApsCapPeerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapPeerAid.setStatus("current")
_DeployProvApsCapApsType_Type = ApsTypeCaps
_DeployProvApsCapApsType_Object = MibTableColumn
deployProvApsCapApsType = _DeployProvApsCapApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 12),
    _DeployProvApsCapApsType_Type()
)
deployProvApsCapApsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapApsType.setStatus("current")
_DeployProvApsCapRevertMode_Type = ApsRevertModeCaps
_DeployProvApsCapRevertMode_Object = MibTableColumn
deployProvApsCapRevertMode = _DeployProvApsCapRevertMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 13),
    _DeployProvApsCapRevertMode_Type()
)
deployProvApsCapRevertMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapRevertMode.setStatus("current")
_DeployProvApsCapWaitToRestore_Type = FspR7Unsigned32Caps
_DeployProvApsCapWaitToRestore_Object = MibTableColumn
deployProvApsCapWaitToRestore = _DeployProvApsCapWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 14),
    _DeployProvApsCapWaitToRestore_Type()
)
deployProvApsCapWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    deployProvApsCapWaitToRestore.setUnits("min")
_DeployProvApsCapDirection_Type = ApsDirectionCaps
_DeployProvApsCapDirection_Object = MibTableColumn
deployProvApsCapDirection = _DeployProvApsCapDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 8, 1, 15),
    _DeployProvApsCapDirection_Type()
)
deployProvApsCapDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsCapDirection.setStatus("current")
_DeployProvApsDefaultsTable_Object = MibTable
deployProvApsDefaultsTable = _DeployProvApsDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9)
)
if mibBuilder.loadTexts:
    deployProvApsDefaultsTable.setStatus("current")
_DeployProvApsDefaultsEntry_Object = MibTableRow
deployProvApsDefaultsEntry = _DeployProvApsDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1)
)
deployProvApsDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvApsDefaultsEntry.setStatus("current")
_DeployProvApsDefaultsRowStatus_Type = RowStatus
_DeployProvApsDefaultsRowStatus_Object = MibTableColumn
deployProvApsDefaultsRowStatus = _DeployProvApsDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 1),
    _DeployProvApsDefaultsRowStatus_Type()
)
deployProvApsDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsRowStatus.setStatus("current")
_DeployProvApsDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvApsDefaultsForceDestroy_Object = MibTableColumn
deployProvApsDefaultsForceDestroy = _DeployProvApsDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 2),
    _DeployProvApsDefaultsForceDestroy_Type()
)
deployProvApsDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsForceDestroy.setStatus("current")
_DeployProvApsDefaultsSDswitching_Type = EnableState
_DeployProvApsDefaultsSDswitching_Object = MibTableColumn
deployProvApsDefaultsSDswitching = _DeployProvApsDefaultsSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 3),
    _DeployProvApsDefaultsSDswitching_Type()
)
deployProvApsDefaultsSDswitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsSDswitching.setStatus("current")
_DeployProvApsDefaultsHoldOffTime_Type = ApsHoldoffTime
_DeployProvApsDefaultsHoldOffTime_Object = MibTableColumn
deployProvApsDefaultsHoldOffTime = _DeployProvApsDefaultsHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 4),
    _DeployProvApsDefaultsHoldOffTime_Type()
)
deployProvApsDefaultsHoldOffTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsHoldOffTime.setStatus("current")
_DeployProvApsDefaultsProtectionMech_Type = ProtectionMech
_DeployProvApsDefaultsProtectionMech_Object = MibTableColumn
deployProvApsDefaultsProtectionMech = _DeployProvApsDefaultsProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 5),
    _DeployProvApsDefaultsProtectionMech_Type()
)
deployProvApsDefaultsProtectionMech.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsProtectionMech.setStatus("current")
_DeployProvApsDefaultsWorkingAid_Type = EntityIndex
_DeployProvApsDefaultsWorkingAid_Object = MibTableColumn
deployProvApsDefaultsWorkingAid = _DeployProvApsDefaultsWorkingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 6),
    _DeployProvApsDefaultsWorkingAid_Type()
)
deployProvApsDefaultsWorkingAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsWorkingAid.setStatus("current")
_DeployProvApsDefaultsProtectionAid_Type = EntityIndex
_DeployProvApsDefaultsProtectionAid_Object = MibTableColumn
deployProvApsDefaultsProtectionAid = _DeployProvApsDefaultsProtectionAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 7),
    _DeployProvApsDefaultsProtectionAid_Type()
)
deployProvApsDefaultsProtectionAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsProtectionAid.setStatus("current")
_DeployProvApsDefaultsSignalDegradeSwitching_Type = EnableState
_DeployProvApsDefaultsSignalDegradeSwitching_Object = MibTableColumn
deployProvApsDefaultsSignalDegradeSwitching = _DeployProvApsDefaultsSignalDegradeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 8),
    _DeployProvApsDefaultsSignalDegradeSwitching_Type()
)
deployProvApsDefaultsSignalDegradeSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsSignalDegradeSwitching.setStatus("current")
_DeployProvApsDefaultsSignalFailureSwitching_Type = EnableState
_DeployProvApsDefaultsSignalFailureSwitching_Object = MibTableColumn
deployProvApsDefaultsSignalFailureSwitching = _DeployProvApsDefaultsSignalFailureSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 9),
    _DeployProvApsDefaultsSignalFailureSwitching_Type()
)
deployProvApsDefaultsSignalFailureSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsSignalFailureSwitching.setStatus("current")
_DeployProvApsDefaultsFarEndIp_Type = IpAddress
_DeployProvApsDefaultsFarEndIp_Object = MibTableColumn
deployProvApsDefaultsFarEndIp = _DeployProvApsDefaultsFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 10),
    _DeployProvApsDefaultsFarEndIp_Type()
)
deployProvApsDefaultsFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsFarEndIp.setStatus("current")
_DeployProvApsDefaultsPeerAid_Type = EntityIndex
_DeployProvApsDefaultsPeerAid_Object = MibTableColumn
deployProvApsDefaultsPeerAid = _DeployProvApsDefaultsPeerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 11),
    _DeployProvApsDefaultsPeerAid_Type()
)
deployProvApsDefaultsPeerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsPeerAid.setStatus("current")
_DeployProvApsDefaultsApsType_Type = ApsType
_DeployProvApsDefaultsApsType_Object = MibTableColumn
deployProvApsDefaultsApsType = _DeployProvApsDefaultsApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 12),
    _DeployProvApsDefaultsApsType_Type()
)
deployProvApsDefaultsApsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsApsType.setStatus("current")
_DeployProvApsDefaultsRevertMode_Type = ApsRevertMode
_DeployProvApsDefaultsRevertMode_Object = MibTableColumn
deployProvApsDefaultsRevertMode = _DeployProvApsDefaultsRevertMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 13),
    _DeployProvApsDefaultsRevertMode_Type()
)
deployProvApsDefaultsRevertMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsRevertMode.setStatus("current")


class _DeployProvApsDefaultsWaitToRestore_Type(Unsigned32):
    """Custom type deployProvApsDefaultsWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvApsDefaultsWaitToRestore_Type.__name__ = "Unsigned32"
_DeployProvApsDefaultsWaitToRestore_Object = MibTableColumn
deployProvApsDefaultsWaitToRestore = _DeployProvApsDefaultsWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 14),
    _DeployProvApsDefaultsWaitToRestore_Type()
)
deployProvApsDefaultsWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    deployProvApsDefaultsWaitToRestore.setUnits("min")
_DeployProvApsDefaultsDirection_Type = ApsDirection
_DeployProvApsDefaultsDirection_Object = MibTableColumn
deployProvApsDefaultsDirection = _DeployProvApsDefaultsDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 9, 1, 15),
    _DeployProvApsDefaultsDirection_Type()
)
deployProvApsDefaultsDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsDefaultsDirection.setStatus("current")
_DeployProvApsWorkingAidCapsTable_Object = MibTable
deployProvApsWorkingAidCapsTable = _DeployProvApsWorkingAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 10)
)
if mibBuilder.loadTexts:
    deployProvApsWorkingAidCapsTable.setStatus("current")
_DeployProvApsWorkingAidCapsEntry_Object = MibTableRow
deployProvApsWorkingAidCapsEntry = _DeployProvApsWorkingAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 10, 1)
)
deployProvApsWorkingAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvApsWorkingAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvApsWorkingAidCapsEntry.setStatus("current")
_DeployProvApsWorkingAidCapsIndex_Type = EntityIndex
_DeployProvApsWorkingAidCapsIndex_Object = MibTableColumn
deployProvApsWorkingAidCapsIndex = _DeployProvApsWorkingAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 10, 1, 1),
    _DeployProvApsWorkingAidCapsIndex_Type()
)
deployProvApsWorkingAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsWorkingAidCapsIndex.setStatus("current")
_DeployProvApsProtectingAidCapsTable_Object = MibTable
deployProvApsProtectingAidCapsTable = _DeployProvApsProtectingAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 11)
)
if mibBuilder.loadTexts:
    deployProvApsProtectingAidCapsTable.setStatus("current")
_DeployProvApsProtectingAidCapsEntry_Object = MibTableRow
deployProvApsProtectingAidCapsEntry = _DeployProvApsProtectingAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 11, 1)
)
deployProvApsProtectingAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvApsProtectingAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvApsProtectingAidCapsEntry.setStatus("current")
_DeployProvApsProtectingAidCapsIndex_Type = EntityIndex
_DeployProvApsProtectingAidCapsIndex_Object = MibTableColumn
deployProvApsProtectingAidCapsIndex = _DeployProvApsProtectingAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 11, 1, 1),
    _DeployProvApsProtectingAidCapsIndex_Type()
)
deployProvApsProtectingAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsProtectingAidCapsIndex.setStatus("current")
_DeployProvDcnTable_Object = MibTable
deployProvDcnTable = _DeployProvDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12)
)
if mibBuilder.loadTexts:
    deployProvDcnTable.setStatus("current")
_DeployProvDcnEntry_Object = MibTableRow
deployProvDcnEntry = _DeployProvDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12, 1)
)
deployProvDcnEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvDcnEntry.setStatus("current")
_DeployProvDcnRowStatus_Type = RowStatus
_DeployProvDcnRowStatus_Object = MibTableColumn
deployProvDcnRowStatus = _DeployProvDcnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12, 1, 1),
    _DeployProvDcnRowStatus_Type()
)
deployProvDcnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvDcnRowStatus.setStatus("current")
_DeployProvDcnForceDestroy_Type = FspR7ForcedStatus
_DeployProvDcnForceDestroy_Object = MibTableColumn
deployProvDcnForceDestroy = _DeployProvDcnForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12, 1, 2),
    _DeployProvDcnForceDestroy_Type()
)
deployProvDcnForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvDcnForceDestroy.setStatus("current")
_DeployProvDcnType_Type = FspR7InterfaceType
_DeployProvDcnType_Object = MibTableColumn
deployProvDcnType = _DeployProvDcnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12, 1, 3),
    _DeployProvDcnType_Type()
)
deployProvDcnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvDcnType.setStatus("current")
_DeployProvDcnAdmin_Type = FspR7AdminState
_DeployProvDcnAdmin_Object = MibTableColumn
deployProvDcnAdmin = _DeployProvDcnAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12, 1, 4),
    _DeployProvDcnAdmin_Type()
)
deployProvDcnAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvDcnAdmin.setStatus("current")


class _DeployProvDcnExternalVid_Type(Unsigned32):
    """Custom type deployProvDcnExternalVid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvDcnExternalVid_Type.__name__ = "Unsigned32"
_DeployProvDcnExternalVid_Object = MibTableColumn
deployProvDcnExternalVid = _DeployProvDcnExternalVid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12, 1, 5),
    _DeployProvDcnExternalVid_Type()
)
deployProvDcnExternalVid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvDcnExternalVid.setStatus("current")
_DeployProvDcnLanAid_Type = EntityIndex
_DeployProvDcnLanAid_Object = MibTableColumn
deployProvDcnLanAid = _DeployProvDcnLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 12, 1, 6),
    _DeployProvDcnLanAid_Type()
)
deployProvDcnLanAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvDcnLanAid.setStatus("current")
_DeployProvDcnCapTable_Object = MibTable
deployProvDcnCapTable = _DeployProvDcnCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13)
)
if mibBuilder.loadTexts:
    deployProvDcnCapTable.setStatus("current")
_DeployProvDcnCapEntry_Object = MibTableRow
deployProvDcnCapEntry = _DeployProvDcnCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13, 1)
)
deployProvDcnCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvDcnCapEntry.setStatus("current")
_DeployProvDcnCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvDcnCapRowStatus_Object = MibTableColumn
deployProvDcnCapRowStatus = _DeployProvDcnCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13, 1, 1),
    _DeployProvDcnCapRowStatus_Type()
)
deployProvDcnCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnCapRowStatus.setStatus("current")
_DeployProvDcnCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvDcnCapForceDestroy_Object = MibTableColumn
deployProvDcnCapForceDestroy = _DeployProvDcnCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13, 1, 2),
    _DeployProvDcnCapForceDestroy_Type()
)
deployProvDcnCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnCapForceDestroy.setStatus("current")
_DeployProvDcnCapType_Type = FspR7InterfaceTypeCaps
_DeployProvDcnCapType_Object = MibTableColumn
deployProvDcnCapType = _DeployProvDcnCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13, 1, 3),
    _DeployProvDcnCapType_Type()
)
deployProvDcnCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnCapType.setStatus("current")
_DeployProvDcnCapAdmin_Type = FspR7AdminStateCaps
_DeployProvDcnCapAdmin_Object = MibTableColumn
deployProvDcnCapAdmin = _DeployProvDcnCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13, 1, 4),
    _DeployProvDcnCapAdmin_Type()
)
deployProvDcnCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnCapAdmin.setStatus("current")
_DeployProvDcnCapExternalVid_Type = Unsigned32
_DeployProvDcnCapExternalVid_Object = MibTableColumn
deployProvDcnCapExternalVid = _DeployProvDcnCapExternalVid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13, 1, 5),
    _DeployProvDcnCapExternalVid_Type()
)
deployProvDcnCapExternalVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnCapExternalVid.setStatus("current")
_DeployProvDcnCapLanAid_Type = Integer32
_DeployProvDcnCapLanAid_Object = MibTableColumn
deployProvDcnCapLanAid = _DeployProvDcnCapLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 13, 1, 6),
    _DeployProvDcnCapLanAid_Type()
)
deployProvDcnCapLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnCapLanAid.setStatus("current")
_DeployProvDcnDefaultsTable_Object = MibTable
deployProvDcnDefaultsTable = _DeployProvDcnDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14)
)
if mibBuilder.loadTexts:
    deployProvDcnDefaultsTable.setStatus("current")
_DeployProvDcnDefaultsEntry_Object = MibTableRow
deployProvDcnDefaultsEntry = _DeployProvDcnDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14, 1)
)
deployProvDcnDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvDcnDefaultsEntry.setStatus("current")
_DeployProvDcnDefaultsRowStatus_Type = RowStatus
_DeployProvDcnDefaultsRowStatus_Object = MibTableColumn
deployProvDcnDefaultsRowStatus = _DeployProvDcnDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14, 1, 1),
    _DeployProvDcnDefaultsRowStatus_Type()
)
deployProvDcnDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnDefaultsRowStatus.setStatus("current")
_DeployProvDcnDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvDcnDefaultsForceDestroy_Object = MibTableColumn
deployProvDcnDefaultsForceDestroy = _DeployProvDcnDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14, 1, 2),
    _DeployProvDcnDefaultsForceDestroy_Type()
)
deployProvDcnDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnDefaultsForceDestroy.setStatus("current")
_DeployProvDcnDefaultsType_Type = FspR7InterfaceType
_DeployProvDcnDefaultsType_Object = MibTableColumn
deployProvDcnDefaultsType = _DeployProvDcnDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14, 1, 3),
    _DeployProvDcnDefaultsType_Type()
)
deployProvDcnDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnDefaultsType.setStatus("current")
_DeployProvDcnDefaultsAdmin_Type = FspR7AdminState
_DeployProvDcnDefaultsAdmin_Object = MibTableColumn
deployProvDcnDefaultsAdmin = _DeployProvDcnDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14, 1, 4),
    _DeployProvDcnDefaultsAdmin_Type()
)
deployProvDcnDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnDefaultsAdmin.setStatus("current")


class _DeployProvDcnDefaultsExternalVid_Type(Unsigned32):
    """Custom type deployProvDcnDefaultsExternalVid based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvDcnDefaultsExternalVid_Type.__name__ = "Unsigned32"
_DeployProvDcnDefaultsExternalVid_Object = MibTableColumn
deployProvDcnDefaultsExternalVid = _DeployProvDcnDefaultsExternalVid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14, 1, 5),
    _DeployProvDcnDefaultsExternalVid_Type()
)
deployProvDcnDefaultsExternalVid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnDefaultsExternalVid.setStatus("current")
_DeployProvDcnDefaultsLanAid_Type = EntityIndex
_DeployProvDcnDefaultsLanAid_Object = MibTableColumn
deployProvDcnDefaultsLanAid = _DeployProvDcnDefaultsLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 14, 1, 6),
    _DeployProvDcnDefaultsLanAid_Type()
)
deployProvDcnDefaultsLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnDefaultsLanAid.setStatus("current")
_DeployProvPppIpTable_Object = MibTable
deployProvPppIpTable = _DeployProvPppIpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15)
)
if mibBuilder.loadTexts:
    deployProvPppIpTable.setStatus("current")
_DeployProvPppIpEntry_Object = MibTableRow
deployProvPppIpEntry = _DeployProvPppIpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1)
)
deployProvPppIpEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPppIpEntry.setStatus("current")
_DeployProvPppIpRowStatus_Type = RowStatus
_DeployProvPppIpRowStatus_Object = MibTableColumn
deployProvPppIpRowStatus = _DeployProvPppIpRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 1),
    _DeployProvPppIpRowStatus_Type()
)
deployProvPppIpRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpRowStatus.setStatus("current")
_DeployProvPppIpForceDestroy_Type = FspR7ForcedStatus
_DeployProvPppIpForceDestroy_Object = MibTableColumn
deployProvPppIpForceDestroy = _DeployProvPppIpForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 2),
    _DeployProvPppIpForceDestroy_Type()
)
deployProvPppIpForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpForceDestroy.setStatus("current")
_DeployProvPppIpType_Type = FspR7InterfaceType
_DeployProvPppIpType_Object = MibTableColumn
deployProvPppIpType = _DeployProvPppIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 3),
    _DeployProvPppIpType_Type()
)
deployProvPppIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpType.setStatus("current")
_DeployProvPppIpNearEndIp_Type = IpAddress
_DeployProvPppIpNearEndIp_Object = MibTableColumn
deployProvPppIpNearEndIp = _DeployProvPppIpNearEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 4),
    _DeployProvPppIpNearEndIp_Type()
)
deployProvPppIpNearEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpNearEndIp.setStatus("current")
_DeployProvPppIpFarEndIp_Type = IpAddress
_DeployProvPppIpFarEndIp_Object = MibTableColumn
deployProvPppIpFarEndIp = _DeployProvPppIpFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 5),
    _DeployProvPppIpFarEndIp_Type()
)
deployProvPppIpFarEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpFarEndIp.setStatus("current")


class _DeployProvPppIpBitrate_Type(Unsigned32):
    """Custom type deployProvPppIpBitrate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1312),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvPppIpBitrate_Type.__name__ = "Unsigned32"
_DeployProvPppIpBitrate_Object = MibTableColumn
deployProvPppIpBitrate = _DeployProvPppIpBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 6),
    _DeployProvPppIpBitrate_Type()
)
deployProvPppIpBitrate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpBitrate.setStatus("current")
if mibBuilder.loadTexts:
    deployProvPppIpBitrate.setUnits("kbit/s")
_DeployProvPppIpOspf_Type = FspR7OspfMode
_DeployProvPppIpOspf_Object = MibTableColumn
deployProvPppIpOspf = _DeployProvPppIpOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 7),
    _DeployProvPppIpOspf_Type()
)
deployProvPppIpOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpOspf.setStatus("current")


class _DeployProvPppIpMetric_Type(Unsigned32):
    """Custom type deployProvPppIpMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvPppIpMetric_Type.__name__ = "Unsigned32"
_DeployProvPppIpMetric_Object = MibTableColumn
deployProvPppIpMetric = _DeployProvPppIpMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 8),
    _DeployProvPppIpMetric_Type()
)
deployProvPppIpMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpMetric.setStatus("current")
_DeployProvPppIpDefaultGateway_Type = IpAddress
_DeployProvPppIpDefaultGateway_Object = MibTableColumn
deployProvPppIpDefaultGateway = _DeployProvPppIpDefaultGateway_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 9),
    _DeployProvPppIpDefaultGateway_Type()
)
deployProvPppIpDefaultGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultGateway.setStatus("deprecated")
_DeployProvPppIpProxyArp_Type = FspR7NoYes
_DeployProvPppIpProxyArp_Object = MibTableColumn
deployProvPppIpProxyArp = _DeployProvPppIpProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 10),
    _DeployProvPppIpProxyArp_Type()
)
deployProvPppIpProxyArp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpProxyArp.setStatus("current")
_DeployProvPppIpAdmin_Type = FspR7AdminState
_DeployProvPppIpAdmin_Object = MibTableColumn
deployProvPppIpAdmin = _DeployProvPppIpAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 11),
    _DeployProvPppIpAdmin_Type()
)
deployProvPppIpAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpAdmin.setStatus("current")
_DeployProvPppIpAreaId_Type = IpAddress
_DeployProvPppIpAreaId_Object = MibTableColumn
deployProvPppIpAreaId = _DeployProvPppIpAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 12),
    _DeployProvPppIpAreaId_Type()
)
deployProvPppIpAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpAreaId.setStatus("current")
_DeployProvPppIpBaud_Type = FspR7Baund
_DeployProvPppIpBaud_Object = MibTableColumn
deployProvPppIpBaud = _DeployProvPppIpBaud_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 13),
    _DeployProvPppIpBaud_Type()
)
deployProvPppIpBaud.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpBaud.setStatus("current")
_DeployProvPppIpFlowControl_Type = FspR7FlowControlMode
_DeployProvPppIpFlowControl_Object = MibTableColumn
deployProvPppIpFlowControl = _DeployProvPppIpFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 14),
    _DeployProvPppIpFlowControl_Type()
)
deployProvPppIpFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpFlowControl.setStatus("current")
_DeployProvPppIpIpType_Type = FspR7IpType
_DeployProvPppIpIpType_Object = MibTableColumn
deployProvPppIpIpType = _DeployProvPppIpIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 15),
    _DeployProvPppIpIpType_Type()
)
deployProvPppIpIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpIpType.setStatus("current")
_DeployProvPppIpAuthType_Type = FspR7CpAuthType
_DeployProvPppIpAuthType_Object = MibTableColumn
deployProvPppIpAuthType = _DeployProvPppIpAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 16),
    _DeployProvPppIpAuthType_Type()
)
deployProvPppIpAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpAuthType.setStatus("current")
_DeployProvPppIpAuthString_Type = SnmpAdminString
_DeployProvPppIpAuthString_Object = MibTableColumn
deployProvPppIpAuthString = _DeployProvPppIpAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 15, 1, 17),
    _DeployProvPppIpAuthString_Type()
)
deployProvPppIpAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPppIpAuthString.setStatus("current")
_DeployProvPppIpCapTable_Object = MibTable
deployProvPppIpCapTable = _DeployProvPppIpCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16)
)
if mibBuilder.loadTexts:
    deployProvPppIpCapTable.setStatus("current")
_DeployProvPppIpCapEntry_Object = MibTableRow
deployProvPppIpCapEntry = _DeployProvPppIpCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1)
)
deployProvPppIpCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPppIpCapEntry.setStatus("current")
_DeployProvPppIpCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPppIpCapRowStatus_Object = MibTableColumn
deployProvPppIpCapRowStatus = _DeployProvPppIpCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 1),
    _DeployProvPppIpCapRowStatus_Type()
)
deployProvPppIpCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapRowStatus.setStatus("current")
_DeployProvPppIpCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvPppIpCapForceDestroy_Object = MibTableColumn
deployProvPppIpCapForceDestroy = _DeployProvPppIpCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 2),
    _DeployProvPppIpCapForceDestroy_Type()
)
deployProvPppIpCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapForceDestroy.setStatus("current")
_DeployProvPppIpCapType_Type = FspR7InterfaceTypeCaps
_DeployProvPppIpCapType_Object = MibTableColumn
deployProvPppIpCapType = _DeployProvPppIpCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 3),
    _DeployProvPppIpCapType_Type()
)
deployProvPppIpCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapType.setStatus("current")
_DeployProvPppIpCapNearEndIp_Type = FspR7YesNo
_DeployProvPppIpCapNearEndIp_Object = MibTableColumn
deployProvPppIpCapNearEndIp = _DeployProvPppIpCapNearEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 4),
    _DeployProvPppIpCapNearEndIp_Type()
)
deployProvPppIpCapNearEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapNearEndIp.setStatus("current")
_DeployProvPppIpCapFarEndIp_Type = FspR7YesNo
_DeployProvPppIpCapFarEndIp_Object = MibTableColumn
deployProvPppIpCapFarEndIp = _DeployProvPppIpCapFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 5),
    _DeployProvPppIpCapFarEndIp_Type()
)
deployProvPppIpCapFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapFarEndIp.setStatus("current")
_DeployProvPppIpCapBitrate_Type = FspR7Unsigned32Caps
_DeployProvPppIpCapBitrate_Object = MibTableColumn
deployProvPppIpCapBitrate = _DeployProvPppIpCapBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 6),
    _DeployProvPppIpCapBitrate_Type()
)
deployProvPppIpCapBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapBitrate.setStatus("current")
if mibBuilder.loadTexts:
    deployProvPppIpCapBitrate.setUnits("kbit/s")
_DeployProvPppIpCapOspf_Type = FspR7OspfModeCaps
_DeployProvPppIpCapOspf_Object = MibTableColumn
deployProvPppIpCapOspf = _DeployProvPppIpCapOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 7),
    _DeployProvPppIpCapOspf_Type()
)
deployProvPppIpCapOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapOspf.setStatus("current")
_DeployProvPppIpCapMetric_Type = FspR7Unsigned32Caps
_DeployProvPppIpCapMetric_Object = MibTableColumn
deployProvPppIpCapMetric = _DeployProvPppIpCapMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 8),
    _DeployProvPppIpCapMetric_Type()
)
deployProvPppIpCapMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapMetric.setStatus("current")
_DeployProvPppIpCapDefaultGateway_Type = FspR7YesNo
_DeployProvPppIpCapDefaultGateway_Object = MibTableColumn
deployProvPppIpCapDefaultGateway = _DeployProvPppIpCapDefaultGateway_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 9),
    _DeployProvPppIpCapDefaultGateway_Type()
)
deployProvPppIpCapDefaultGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapDefaultGateway.setStatus("deprecated")
_DeployProvPppIpCapProxyArp_Type = FspR7NoYesCaps
_DeployProvPppIpCapProxyArp_Object = MibTableColumn
deployProvPppIpCapProxyArp = _DeployProvPppIpCapProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 10),
    _DeployProvPppIpCapProxyArp_Type()
)
deployProvPppIpCapProxyArp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapProxyArp.setStatus("current")
_DeployProvPppIpCapAdmin_Type = FspR7AdminStateCaps
_DeployProvPppIpCapAdmin_Object = MibTableColumn
deployProvPppIpCapAdmin = _DeployProvPppIpCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 11),
    _DeployProvPppIpCapAdmin_Type()
)
deployProvPppIpCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapAdmin.setStatus("current")
_DeployProvPppIpCapAreaId_Type = FspR7YesNo
_DeployProvPppIpCapAreaId_Object = MibTableColumn
deployProvPppIpCapAreaId = _DeployProvPppIpCapAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 12),
    _DeployProvPppIpCapAreaId_Type()
)
deployProvPppIpCapAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapAreaId.setStatus("current")
_DeployProvPppIpCapBaud_Type = FspR7BaundCaps
_DeployProvPppIpCapBaud_Object = MibTableColumn
deployProvPppIpCapBaud = _DeployProvPppIpCapBaud_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 13),
    _DeployProvPppIpCapBaud_Type()
)
deployProvPppIpCapBaud.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapBaud.setStatus("current")
_DeployProvPppIpCapFlowControl_Type = FspR7FlowControlModeCaps
_DeployProvPppIpCapFlowControl_Object = MibTableColumn
deployProvPppIpCapFlowControl = _DeployProvPppIpCapFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 14),
    _DeployProvPppIpCapFlowControl_Type()
)
deployProvPppIpCapFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapFlowControl.setStatus("current")
_DeployProvPppIpCapIpType_Type = FspR7IpTypeCaps
_DeployProvPppIpCapIpType_Object = MibTableColumn
deployProvPppIpCapIpType = _DeployProvPppIpCapIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 15),
    _DeployProvPppIpCapIpType_Type()
)
deployProvPppIpCapIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapIpType.setStatus("current")
_DeployProvPppIpCapAuthType_Type = FspR7CpAuthTypeCaps
_DeployProvPppIpCapAuthType_Object = MibTableColumn
deployProvPppIpCapAuthType = _DeployProvPppIpCapAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 16),
    _DeployProvPppIpCapAuthType_Type()
)
deployProvPppIpCapAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapAuthType.setStatus("current")
_DeployProvPppIpCapAuthString_Type = Integer32
_DeployProvPppIpCapAuthString_Object = MibTableColumn
deployProvPppIpCapAuthString = _DeployProvPppIpCapAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 16, 1, 17),
    _DeployProvPppIpCapAuthString_Type()
)
deployProvPppIpCapAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpCapAuthString.setStatus("current")
_DeployProvPppIpDefaultsTable_Object = MibTable
deployProvPppIpDefaultsTable = _DeployProvPppIpDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17)
)
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsTable.setStatus("current")
_DeployProvPppIpDefaultsEntry_Object = MibTableRow
deployProvPppIpDefaultsEntry = _DeployProvPppIpDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1)
)
deployProvPppIpDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsEntry.setStatus("current")
_DeployProvPppIpDefaultsRowStatus_Type = RowStatus
_DeployProvPppIpDefaultsRowStatus_Object = MibTableColumn
deployProvPppIpDefaultsRowStatus = _DeployProvPppIpDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 1),
    _DeployProvPppIpDefaultsRowStatus_Type()
)
deployProvPppIpDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsRowStatus.setStatus("current")
_DeployProvPppIpDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvPppIpDefaultsForceDestroy_Object = MibTableColumn
deployProvPppIpDefaultsForceDestroy = _DeployProvPppIpDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 2),
    _DeployProvPppIpDefaultsForceDestroy_Type()
)
deployProvPppIpDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsForceDestroy.setStatus("current")
_DeployProvPppIpDefaultsType_Type = FspR7InterfaceType
_DeployProvPppIpDefaultsType_Object = MibTableColumn
deployProvPppIpDefaultsType = _DeployProvPppIpDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 3),
    _DeployProvPppIpDefaultsType_Type()
)
deployProvPppIpDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsType.setStatus("current")
_DeployProvPppIpDefaultsNearEndIp_Type = IpAddress
_DeployProvPppIpDefaultsNearEndIp_Object = MibTableColumn
deployProvPppIpDefaultsNearEndIp = _DeployProvPppIpDefaultsNearEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 4),
    _DeployProvPppIpDefaultsNearEndIp_Type()
)
deployProvPppIpDefaultsNearEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsNearEndIp.setStatus("current")
_DeployProvPppIpDefaultsFarEndIp_Type = IpAddress
_DeployProvPppIpDefaultsFarEndIp_Object = MibTableColumn
deployProvPppIpDefaultsFarEndIp = _DeployProvPppIpDefaultsFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 5),
    _DeployProvPppIpDefaultsFarEndIp_Type()
)
deployProvPppIpDefaultsFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsFarEndIp.setStatus("current")


class _DeployProvPppIpDefaultsBitrate_Type(Unsigned32):
    """Custom type deployProvPppIpDefaultsBitrate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1312),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvPppIpDefaultsBitrate_Type.__name__ = "Unsigned32"
_DeployProvPppIpDefaultsBitrate_Object = MibTableColumn
deployProvPppIpDefaultsBitrate = _DeployProvPppIpDefaultsBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 6),
    _DeployProvPppIpDefaultsBitrate_Type()
)
deployProvPppIpDefaultsBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsBitrate.setStatus("current")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsBitrate.setUnits("kbit/s")
_DeployProvPppIpDefaultsOspf_Type = FspR7OspfMode
_DeployProvPppIpDefaultsOspf_Object = MibTableColumn
deployProvPppIpDefaultsOspf = _DeployProvPppIpDefaultsOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 7),
    _DeployProvPppIpDefaultsOspf_Type()
)
deployProvPppIpDefaultsOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsOspf.setStatus("current")


class _DeployProvPppIpDefaultsMetric_Type(Unsigned32):
    """Custom type deployProvPppIpDefaultsMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvPppIpDefaultsMetric_Type.__name__ = "Unsigned32"
_DeployProvPppIpDefaultsMetric_Object = MibTableColumn
deployProvPppIpDefaultsMetric = _DeployProvPppIpDefaultsMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 8),
    _DeployProvPppIpDefaultsMetric_Type()
)
deployProvPppIpDefaultsMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsMetric.setStatus("current")
_DeployProvPppIpDefaultsDefaultGateway_Type = IpAddress
_DeployProvPppIpDefaultsDefaultGateway_Object = MibTableColumn
deployProvPppIpDefaultsDefaultGateway = _DeployProvPppIpDefaultsDefaultGateway_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 9),
    _DeployProvPppIpDefaultsDefaultGateway_Type()
)
deployProvPppIpDefaultsDefaultGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsDefaultGateway.setStatus("deprecated")
_DeployProvPppIpDefaultsProxyArp_Type = FspR7NoYes
_DeployProvPppIpDefaultsProxyArp_Object = MibTableColumn
deployProvPppIpDefaultsProxyArp = _DeployProvPppIpDefaultsProxyArp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 10),
    _DeployProvPppIpDefaultsProxyArp_Type()
)
deployProvPppIpDefaultsProxyArp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsProxyArp.setStatus("current")
_DeployProvPppIpDefaultsAdmin_Type = FspR7AdminState
_DeployProvPppIpDefaultsAdmin_Object = MibTableColumn
deployProvPppIpDefaultsAdmin = _DeployProvPppIpDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 11),
    _DeployProvPppIpDefaultsAdmin_Type()
)
deployProvPppIpDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsAdmin.setStatus("current")
_DeployProvPppIpDefaultsAreaId_Type = IpAddress
_DeployProvPppIpDefaultsAreaId_Object = MibTableColumn
deployProvPppIpDefaultsAreaId = _DeployProvPppIpDefaultsAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 12),
    _DeployProvPppIpDefaultsAreaId_Type()
)
deployProvPppIpDefaultsAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsAreaId.setStatus("current")
_DeployProvPppIpDefaultsBaud_Type = FspR7Baund
_DeployProvPppIpDefaultsBaud_Object = MibTableColumn
deployProvPppIpDefaultsBaud = _DeployProvPppIpDefaultsBaud_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 13),
    _DeployProvPppIpDefaultsBaud_Type()
)
deployProvPppIpDefaultsBaud.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsBaud.setStatus("current")
_DeployProvPppIpDefaultsFlowControl_Type = FspR7FlowControlMode
_DeployProvPppIpDefaultsFlowControl_Object = MibTableColumn
deployProvPppIpDefaultsFlowControl = _DeployProvPppIpDefaultsFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 14),
    _DeployProvPppIpDefaultsFlowControl_Type()
)
deployProvPppIpDefaultsFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsFlowControl.setStatus("current")
_DeployProvPppIpDefaultsIpType_Type = FspR7IpType
_DeployProvPppIpDefaultsIpType_Object = MibTableColumn
deployProvPppIpDefaultsIpType = _DeployProvPppIpDefaultsIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 15),
    _DeployProvPppIpDefaultsIpType_Type()
)
deployProvPppIpDefaultsIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsIpType.setStatus("current")
_DeployProvPppIpDefaultsAuthType_Type = FspR7CpAuthType
_DeployProvPppIpDefaultsAuthType_Object = MibTableColumn
deployProvPppIpDefaultsAuthType = _DeployProvPppIpDefaultsAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 16),
    _DeployProvPppIpDefaultsAuthType_Type()
)
deployProvPppIpDefaultsAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsAuthType.setStatus("current")
_DeployProvPppIpDefaultsAuthString_Type = SnmpAdminString
_DeployProvPppIpDefaultsAuthString_Object = MibTableColumn
deployProvPppIpDefaultsAuthString = _DeployProvPppIpDefaultsAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 17, 1, 17),
    _DeployProvPppIpDefaultsAuthString_Type()
)
deployProvPppIpDefaultsAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPppIpDefaultsAuthString.setStatus("current")
_DeployProvCrsDcnTable_Object = MibTable
deployProvCrsDcnTable = _DeployProvCrsDcnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 18)
)
if mibBuilder.loadTexts:
    deployProvCrsDcnTable.setStatus("current")
_DeployProvCrsDcnEntry_Object = MibTableRow
deployProvCrsDcnEntry = _DeployProvCrsDcnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 18, 1)
)
deployProvCrsDcnEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCrsDcnEntry.setStatus("current")
_DeployProvCrsDcnRowStatus_Type = RowStatus
_DeployProvCrsDcnRowStatus_Object = MibTableColumn
deployProvCrsDcnRowStatus = _DeployProvCrsDcnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 18, 1, 1),
    _DeployProvCrsDcnRowStatus_Type()
)
deployProvCrsDcnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCrsDcnRowStatus.setStatus("current")
_DeployProvCrsDcnForceDestroy_Type = FspR7ForcedStatus
_DeployProvCrsDcnForceDestroy_Object = MibTableColumn
deployProvCrsDcnForceDestroy = _DeployProvCrsDcnForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 18, 1, 2),
    _DeployProvCrsDcnForceDestroy_Type()
)
deployProvCrsDcnForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCrsDcnForceDestroy.setStatus("current")
_DeployProvCrsDcnType_Type = FspR7TypeConnection
_DeployProvCrsDcnType_Object = MibTableColumn
deployProvCrsDcnType = _DeployProvCrsDcnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 18, 1, 3),
    _DeployProvCrsDcnType_Type()
)
deployProvCrsDcnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCrsDcnType.setStatus("current")
_DeployProvCrsDcnLink_Type = EntityIndex
_DeployProvCrsDcnLink_Object = MibTableColumn
deployProvCrsDcnLink = _DeployProvCrsDcnLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 18, 1, 4),
    _DeployProvCrsDcnLink_Type()
)
deployProvCrsDcnLink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCrsDcnLink.setStatus("current")
_DeployProvCrsDcnEcc_Type = EntityIndex
_DeployProvCrsDcnEcc_Object = MibTableColumn
deployProvCrsDcnEcc = _DeployProvCrsDcnEcc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 18, 1, 5),
    _DeployProvCrsDcnEcc_Type()
)
deployProvCrsDcnEcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCrsDcnEcc.setStatus("current")
_DeployProvCrsDcnCapTable_Object = MibTable
deployProvCrsDcnCapTable = _DeployProvCrsDcnCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 19)
)
if mibBuilder.loadTexts:
    deployProvCrsDcnCapTable.setStatus("current")
_DeployProvCrsDcnCapEntry_Object = MibTableRow
deployProvCrsDcnCapEntry = _DeployProvCrsDcnCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 19, 1)
)
deployProvCrsDcnCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCrsDcnCapEntry.setStatus("current")
_DeployProvCrsDcnCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvCrsDcnCapRowStatus_Object = MibTableColumn
deployProvCrsDcnCapRowStatus = _DeployProvCrsDcnCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 19, 1, 1),
    _DeployProvCrsDcnCapRowStatus_Type()
)
deployProvCrsDcnCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnCapRowStatus.setStatus("current")
_DeployProvCrsDcnCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvCrsDcnCapForceDestroy_Object = MibTableColumn
deployProvCrsDcnCapForceDestroy = _DeployProvCrsDcnCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 19, 1, 2),
    _DeployProvCrsDcnCapForceDestroy_Type()
)
deployProvCrsDcnCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnCapForceDestroy.setStatus("current")
_DeployProvCrsDcnCapType_Type = FspR7TypeConnectionCaps
_DeployProvCrsDcnCapType_Object = MibTableColumn
deployProvCrsDcnCapType = _DeployProvCrsDcnCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 19, 1, 3),
    _DeployProvCrsDcnCapType_Type()
)
deployProvCrsDcnCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnCapType.setStatus("current")
_DeployProvCrsDcnCapLink_Type = Integer32
_DeployProvCrsDcnCapLink_Object = MibTableColumn
deployProvCrsDcnCapLink = _DeployProvCrsDcnCapLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 19, 1, 4),
    _DeployProvCrsDcnCapLink_Type()
)
deployProvCrsDcnCapLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnCapLink.setStatus("current")
_DeployProvCrsDcnCapEcc_Type = Integer32
_DeployProvCrsDcnCapEcc_Object = MibTableColumn
deployProvCrsDcnCapEcc = _DeployProvCrsDcnCapEcc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 19, 1, 5),
    _DeployProvCrsDcnCapEcc_Type()
)
deployProvCrsDcnCapEcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnCapEcc.setStatus("current")
_DeployProvCrsDcnDefaultsTable_Object = MibTable
deployProvCrsDcnDefaultsTable = _DeployProvCrsDcnDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 20)
)
if mibBuilder.loadTexts:
    deployProvCrsDcnDefaultsTable.setStatus("current")
_DeployProvCrsDcnDefaultsEntry_Object = MibTableRow
deployProvCrsDcnDefaultsEntry = _DeployProvCrsDcnDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 20, 1)
)
deployProvCrsDcnDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCrsDcnDefaultsEntry.setStatus("current")
_DeployProvCrsDcnDefaultsRowStatus_Type = RowStatus
_DeployProvCrsDcnDefaultsRowStatus_Object = MibTableColumn
deployProvCrsDcnDefaultsRowStatus = _DeployProvCrsDcnDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 20, 1, 1),
    _DeployProvCrsDcnDefaultsRowStatus_Type()
)
deployProvCrsDcnDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnDefaultsRowStatus.setStatus("current")
_DeployProvCrsDcnDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvCrsDcnDefaultsForceDestroy_Object = MibTableColumn
deployProvCrsDcnDefaultsForceDestroy = _DeployProvCrsDcnDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 20, 1, 2),
    _DeployProvCrsDcnDefaultsForceDestroy_Type()
)
deployProvCrsDcnDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnDefaultsForceDestroy.setStatus("current")
_DeployProvCrsDcnDefaultsType_Type = FspR7TypeConnection
_DeployProvCrsDcnDefaultsType_Object = MibTableColumn
deployProvCrsDcnDefaultsType = _DeployProvCrsDcnDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 20, 1, 3),
    _DeployProvCrsDcnDefaultsType_Type()
)
deployProvCrsDcnDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnDefaultsType.setStatus("current")
_DeployProvCrsDcnDefaultsLink_Type = EntityIndex
_DeployProvCrsDcnDefaultsLink_Object = MibTableColumn
deployProvCrsDcnDefaultsLink = _DeployProvCrsDcnDefaultsLink_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 20, 1, 4),
    _DeployProvCrsDcnDefaultsLink_Type()
)
deployProvCrsDcnDefaultsLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnDefaultsLink.setStatus("current")
_DeployProvCrsDcnDefaultsEcc_Type = EntityIndex
_DeployProvCrsDcnDefaultsEcc_Object = MibTableColumn
deployProvCrsDcnDefaultsEcc = _DeployProvCrsDcnDefaultsEcc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 20, 1, 5),
    _DeployProvCrsDcnDefaultsEcc_Type()
)
deployProvCrsDcnDefaultsEcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnDefaultsEcc.setStatus("current")
_DeployProvCrsDcnLinkAidCapsTable_Object = MibTable
deployProvCrsDcnLinkAidCapsTable = _DeployProvCrsDcnLinkAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 21)
)
if mibBuilder.loadTexts:
    deployProvCrsDcnLinkAidCapsTable.setStatus("current")
_DeployProvCrsDcnLinkAidCapsEntry_Object = MibTableRow
deployProvCrsDcnLinkAidCapsEntry = _DeployProvCrsDcnLinkAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 21, 1)
)
deployProvCrsDcnLinkAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvCrsDcnLinkAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvCrsDcnLinkAidCapsEntry.setStatus("current")
_DeployProvCrsDcnLinkAidCapsIndex_Type = EntityIndex
_DeployProvCrsDcnLinkAidCapsIndex_Object = MibTableColumn
deployProvCrsDcnLinkAidCapsIndex = _DeployProvCrsDcnLinkAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 21, 1, 1),
    _DeployProvCrsDcnLinkAidCapsIndex_Type()
)
deployProvCrsDcnLinkAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnLinkAidCapsIndex.setStatus("current")
_DeployProvCrsDcnEccAidCapsTable_Object = MibTable
deployProvCrsDcnEccAidCapsTable = _DeployProvCrsDcnEccAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 22)
)
if mibBuilder.loadTexts:
    deployProvCrsDcnEccAidCapsTable.setStatus("current")
_DeployProvCrsDcnEccAidCapsEntry_Object = MibTableRow
deployProvCrsDcnEccAidCapsEntry = _DeployProvCrsDcnEccAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 22, 1)
)
deployProvCrsDcnEccAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvCrsDcnLinkAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvCrsDcnEccAidCapsEntry.setStatus("current")
_DeployProvCrsDcnEccAidCapsIndex_Type = EntityIndex
_DeployProvCrsDcnEccAidCapsIndex_Object = MibTableColumn
deployProvCrsDcnEccAidCapsIndex = _DeployProvCrsDcnEccAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 22, 1, 1),
    _DeployProvCrsDcnEccAidCapsIndex_Type()
)
deployProvCrsDcnEccAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCrsDcnEccAidCapsIndex.setStatus("current")
_DeployProvApsPeerAidCapsTable_Object = MibTable
deployProvApsPeerAidCapsTable = _DeployProvApsPeerAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 23)
)
if mibBuilder.loadTexts:
    deployProvApsPeerAidCapsTable.setStatus("current")
_DeployProvApsPeerAidCapsEntry_Object = MibTableRow
deployProvApsPeerAidCapsEntry = _DeployProvApsPeerAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 23, 1)
)
deployProvApsPeerAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvApsWorkingAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvApsPeerAidCapsEntry.setStatus("current")
_DeployProvApsPeerAidCapsIndex_Type = EntityIndex
_DeployProvApsPeerAidCapsIndex_Object = MibTableColumn
deployProvApsPeerAidCapsIndex = _DeployProvApsPeerAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 23, 1, 1),
    _DeployProvApsPeerAidCapsIndex_Type()
)
deployProvApsPeerAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvApsPeerAidCapsIndex.setStatus("current")
_DeployProvLanTable_Object = MibTable
deployProvLanTable = _DeployProvLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24)
)
if mibBuilder.loadTexts:
    deployProvLanTable.setStatus("current")
_DeployProvLanEntry_Object = MibTableRow
deployProvLanEntry = _DeployProvLanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1)
)
deployProvLanEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLanEntry.setStatus("current")
_DeployProvLanRowStatus_Type = RowStatus
_DeployProvLanRowStatus_Object = MibTableColumn
deployProvLanRowStatus = _DeployProvLanRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 1),
    _DeployProvLanRowStatus_Type()
)
deployProvLanRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanRowStatus.setStatus("current")
_DeployProvLanForceDestroy_Type = FspR7ForcedStatus
_DeployProvLanForceDestroy_Object = MibTableColumn
deployProvLanForceDestroy = _DeployProvLanForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 2),
    _DeployProvLanForceDestroy_Type()
)
deployProvLanForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanForceDestroy.setStatus("current")
_DeployProvLanType_Type = FspR7InterfaceType
_DeployProvLanType_Object = MibTableColumn
deployProvLanType = _DeployProvLanType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 3),
    _DeployProvLanType_Type()
)
deployProvLanType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanType.setStatus("current")
_DeployProvLanOspf_Type = FspR7OspfMode
_DeployProvLanOspf_Object = MibTableColumn
deployProvLanOspf = _DeployProvLanOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 4),
    _DeployProvLanOspf_Type()
)
deployProvLanOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanOspf.setStatus("current")


class _DeployProvLanMetric_Type(Unsigned32):
    """Custom type deployProvLanMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLanMetric_Type.__name__ = "Unsigned32"
_DeployProvLanMetric_Object = MibTableColumn
deployProvLanMetric = _DeployProvLanMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 5),
    _DeployProvLanMetric_Type()
)
deployProvLanMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanMetric.setStatus("current")
_DeployProvLanAdmin_Type = FspR7AdminState
_DeployProvLanAdmin_Object = MibTableColumn
deployProvLanAdmin = _DeployProvLanAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 6),
    _DeployProvLanAdmin_Type()
)
deployProvLanAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanAdmin.setStatus("current")
_DeployProvLanAreaId_Type = IpAddress
_DeployProvLanAreaId_Object = MibTableColumn
deployProvLanAreaId = _DeployProvLanAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 7),
    _DeployProvLanAreaId_Type()
)
deployProvLanAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanAreaId.setStatus("current")
_DeployProvLanIpType_Type = FspR7IpType
_DeployProvLanIpType_Object = MibTableColumn
deployProvLanIpType = _DeployProvLanIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 8),
    _DeployProvLanIpType_Type()
)
deployProvLanIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanIpType.setStatus("current")
_DeployProvLanIpAddr_Type = IpAddress
_DeployProvLanIpAddr_Object = MibTableColumn
deployProvLanIpAddr = _DeployProvLanIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 9),
    _DeployProvLanIpAddr_Type()
)
deployProvLanIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanIpAddr.setStatus("current")
_DeployProvLanIpMask_Type = IpAddress
_DeployProvLanIpMask_Object = MibTableColumn
deployProvLanIpMask = _DeployProvLanIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 10),
    _DeployProvLanIpMask_Type()
)
deployProvLanIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanIpMask.setStatus("current")


class _DeployProvLanPrio_Type(Unsigned32):
    """Custom type deployProvLanPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLanPrio_Type.__name__ = "Unsigned32"
_DeployProvLanPrio_Object = MibTableColumn
deployProvLanPrio = _DeployProvLanPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 11),
    _DeployProvLanPrio_Type()
)
deployProvLanPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanPrio.setStatus("current")
_DeployProvLanAuthType_Type = FspR7CpAuthType
_DeployProvLanAuthType_Object = MibTableColumn
deployProvLanAuthType = _DeployProvLanAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 12),
    _DeployProvLanAuthType_Type()
)
deployProvLanAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanAuthType.setStatus("current")
_DeployProvLanAuthString_Type = SnmpAdminString
_DeployProvLanAuthString_Object = MibTableColumn
deployProvLanAuthString = _DeployProvLanAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 24, 1, 13),
    _DeployProvLanAuthString_Type()
)
deployProvLanAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLanAuthString.setStatus("current")
_DeployProvLanCapTable_Object = MibTable
deployProvLanCapTable = _DeployProvLanCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25)
)
if mibBuilder.loadTexts:
    deployProvLanCapTable.setStatus("current")
_DeployProvLanCapEntry_Object = MibTableRow
deployProvLanCapEntry = _DeployProvLanCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1)
)
deployProvLanCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLanCapEntry.setStatus("current")
_DeployProvLanCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvLanCapRowStatus_Object = MibTableColumn
deployProvLanCapRowStatus = _DeployProvLanCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 1),
    _DeployProvLanCapRowStatus_Type()
)
deployProvLanCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapRowStatus.setStatus("current")
_DeployProvLanCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvLanCapForceDestroy_Object = MibTableColumn
deployProvLanCapForceDestroy = _DeployProvLanCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 2),
    _DeployProvLanCapForceDestroy_Type()
)
deployProvLanCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapForceDestroy.setStatus("current")
_DeployProvLanCapType_Type = FspR7InterfaceTypeCaps
_DeployProvLanCapType_Object = MibTableColumn
deployProvLanCapType = _DeployProvLanCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 3),
    _DeployProvLanCapType_Type()
)
deployProvLanCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapType.setStatus("current")
_DeployProvLanCapOspf_Type = FspR7OspfModeCaps
_DeployProvLanCapOspf_Object = MibTableColumn
deployProvLanCapOspf = _DeployProvLanCapOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 4),
    _DeployProvLanCapOspf_Type()
)
deployProvLanCapOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapOspf.setStatus("current")
_DeployProvLanCapMetric_Type = FspR7Unsigned32Caps
_DeployProvLanCapMetric_Object = MibTableColumn
deployProvLanCapMetric = _DeployProvLanCapMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 5),
    _DeployProvLanCapMetric_Type()
)
deployProvLanCapMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapMetric.setStatus("current")
_DeployProvLanCapAdmin_Type = FspR7AdminStateCaps
_DeployProvLanCapAdmin_Object = MibTableColumn
deployProvLanCapAdmin = _DeployProvLanCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 6),
    _DeployProvLanCapAdmin_Type()
)
deployProvLanCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapAdmin.setStatus("current")
_DeployProvLanCapAreaId_Type = FspR7YesNo
_DeployProvLanCapAreaId_Object = MibTableColumn
deployProvLanCapAreaId = _DeployProvLanCapAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 7),
    _DeployProvLanCapAreaId_Type()
)
deployProvLanCapAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapAreaId.setStatus("current")
_DeployProvLanCapIpType_Type = FspR7IpTypeCaps
_DeployProvLanCapIpType_Object = MibTableColumn
deployProvLanCapIpType = _DeployProvLanCapIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 8),
    _DeployProvLanCapIpType_Type()
)
deployProvLanCapIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapIpType.setStatus("current")
_DeployProvLanCapIpAddr_Type = FspR7YesNo
_DeployProvLanCapIpAddr_Object = MibTableColumn
deployProvLanCapIpAddr = _DeployProvLanCapIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 9),
    _DeployProvLanCapIpAddr_Type()
)
deployProvLanCapIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapIpAddr.setStatus("current")
_DeployProvLanCapIpMask_Type = FspR7YesNo
_DeployProvLanCapIpMask_Object = MibTableColumn
deployProvLanCapIpMask = _DeployProvLanCapIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 10),
    _DeployProvLanCapIpMask_Type()
)
deployProvLanCapIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapIpMask.setStatus("current")
_DeployProvLanCapPrio_Type = FspR7Unsigned32Caps
_DeployProvLanCapPrio_Object = MibTableColumn
deployProvLanCapPrio = _DeployProvLanCapPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 11),
    _DeployProvLanCapPrio_Type()
)
deployProvLanCapPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapPrio.setStatus("current")
_DeployProvLanCapAuthType_Type = FspR7CpAuthTypeCaps
_DeployProvLanCapAuthType_Object = MibTableColumn
deployProvLanCapAuthType = _DeployProvLanCapAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 12),
    _DeployProvLanCapAuthType_Type()
)
deployProvLanCapAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapAuthType.setStatus("current")
_DeployProvLanCapAuthString_Type = Integer32
_DeployProvLanCapAuthString_Object = MibTableColumn
deployProvLanCapAuthString = _DeployProvLanCapAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 25, 1, 13),
    _DeployProvLanCapAuthString_Type()
)
deployProvLanCapAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanCapAuthString.setStatus("current")
_DeployProvLanDefaultsTable_Object = MibTable
deployProvLanDefaultsTable = _DeployProvLanDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26)
)
if mibBuilder.loadTexts:
    deployProvLanDefaultsTable.setStatus("current")
_DeployProvLanDefaultsEntry_Object = MibTableRow
deployProvLanDefaultsEntry = _DeployProvLanDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1)
)
deployProvLanDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLanDefaultsEntry.setStatus("current")
_DeployProvLanDefaultsRowStatus_Type = RowStatus
_DeployProvLanDefaultsRowStatus_Object = MibTableColumn
deployProvLanDefaultsRowStatus = _DeployProvLanDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 1),
    _DeployProvLanDefaultsRowStatus_Type()
)
deployProvLanDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsRowStatus.setStatus("current")
_DeployProvLanDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvLanDefaultsForceDestroy_Object = MibTableColumn
deployProvLanDefaultsForceDestroy = _DeployProvLanDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 2),
    _DeployProvLanDefaultsForceDestroy_Type()
)
deployProvLanDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsForceDestroy.setStatus("current")
_DeployProvLanDefaultsType_Type = FspR7InterfaceType
_DeployProvLanDefaultsType_Object = MibTableColumn
deployProvLanDefaultsType = _DeployProvLanDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 3),
    _DeployProvLanDefaultsType_Type()
)
deployProvLanDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsType.setStatus("current")
_DeployProvLanDefaultsOspf_Type = FspR7OspfMode
_DeployProvLanDefaultsOspf_Object = MibTableColumn
deployProvLanDefaultsOspf = _DeployProvLanDefaultsOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 4),
    _DeployProvLanDefaultsOspf_Type()
)
deployProvLanDefaultsOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsOspf.setStatus("current")


class _DeployProvLanDefaultsMetric_Type(Unsigned32):
    """Custom type deployProvLanDefaultsMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLanDefaultsMetric_Type.__name__ = "Unsigned32"
_DeployProvLanDefaultsMetric_Object = MibTableColumn
deployProvLanDefaultsMetric = _DeployProvLanDefaultsMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 5),
    _DeployProvLanDefaultsMetric_Type()
)
deployProvLanDefaultsMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsMetric.setStatus("current")
_DeployProvLanDefaultsAdmin_Type = FspR7AdminState
_DeployProvLanDefaultsAdmin_Object = MibTableColumn
deployProvLanDefaultsAdmin = _DeployProvLanDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 6),
    _DeployProvLanDefaultsAdmin_Type()
)
deployProvLanDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsAdmin.setStatus("current")
_DeployProvLanDefaultsAreaId_Type = IpAddress
_DeployProvLanDefaultsAreaId_Object = MibTableColumn
deployProvLanDefaultsAreaId = _DeployProvLanDefaultsAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 7),
    _DeployProvLanDefaultsAreaId_Type()
)
deployProvLanDefaultsAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsAreaId.setStatus("current")
_DeployProvLanDefaultsIpType_Type = FspR7IpType
_DeployProvLanDefaultsIpType_Object = MibTableColumn
deployProvLanDefaultsIpType = _DeployProvLanDefaultsIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 8),
    _DeployProvLanDefaultsIpType_Type()
)
deployProvLanDefaultsIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsIpType.setStatus("current")
_DeployProvLanDefaultsIpAddr_Type = IpAddress
_DeployProvLanDefaultsIpAddr_Object = MibTableColumn
deployProvLanDefaultsIpAddr = _DeployProvLanDefaultsIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 9),
    _DeployProvLanDefaultsIpAddr_Type()
)
deployProvLanDefaultsIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsIpAddr.setStatus("current")
_DeployProvLanDefaultsIpMask_Type = IpAddress
_DeployProvLanDefaultsIpMask_Object = MibTableColumn
deployProvLanDefaultsIpMask = _DeployProvLanDefaultsIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 10),
    _DeployProvLanDefaultsIpMask_Type()
)
deployProvLanDefaultsIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsIpMask.setStatus("current")


class _DeployProvLanDefaultsPrio_Type(Unsigned32):
    """Custom type deployProvLanDefaultsPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLanDefaultsPrio_Type.__name__ = "Unsigned32"
_DeployProvLanDefaultsPrio_Object = MibTableColumn
deployProvLanDefaultsPrio = _DeployProvLanDefaultsPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 11),
    _DeployProvLanDefaultsPrio_Type()
)
deployProvLanDefaultsPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsPrio.setStatus("current")
_DeployProvLanDefaultsAuthType_Type = FspR7CpAuthType
_DeployProvLanDefaultsAuthType_Object = MibTableColumn
deployProvLanDefaultsAuthType = _DeployProvLanDefaultsAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 12),
    _DeployProvLanDefaultsAuthType_Type()
)
deployProvLanDefaultsAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsAuthType.setStatus("current")
_DeployProvLanDefaultsAuthString_Type = SnmpAdminString
_DeployProvLanDefaultsAuthString_Object = MibTableColumn
deployProvLanDefaultsAuthString = _DeployProvLanDefaultsAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 26, 1, 13),
    _DeployProvLanDefaultsAuthString_Type()
)
deployProvLanDefaultsAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLanDefaultsAuthString.setStatus("current")
_DeployProvModuleLanAidCapsTable_Object = MibTable
deployProvModuleLanAidCapsTable = _DeployProvModuleLanAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 27)
)
if mibBuilder.loadTexts:
    deployProvModuleLanAidCapsTable.setStatus("current")
_DeployProvModuleLanAidCapsEntry_Object = MibTableRow
deployProvModuleLanAidCapsEntry = _DeployProvModuleLanAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 27, 1)
)
deployProvModuleLanAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvModuleLanAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvModuleLanAidCapsEntry.setStatus("current")
_DeployProvModuleLanAidCapsIndex_Type = EntityIndex
_DeployProvModuleLanAidCapsIndex_Object = MibTableColumn
deployProvModuleLanAidCapsIndex = _DeployProvModuleLanAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 27, 1, 1),
    _DeployProvModuleLanAidCapsIndex_Type()
)
deployProvModuleLanAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvModuleLanAidCapsIndex.setStatus("current")
_DeployProvTifInputTable_Object = MibTable
deployProvTifInputTable = _DeployProvTifInputTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28)
)
if mibBuilder.loadTexts:
    deployProvTifInputTable.setStatus("current")
_DeployProvTifInputEntry_Object = MibTableRow
deployProvTifInputEntry = _DeployProvTifInputEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1)
)
deployProvTifInputEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTifInputEntry.setStatus("current")
_DeployProvTifInputRowStatus_Type = RowStatus
_DeployProvTifInputRowStatus_Object = MibTableColumn
deployProvTifInputRowStatus = _DeployProvTifInputRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1, 1),
    _DeployProvTifInputRowStatus_Type()
)
deployProvTifInputRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifInputRowStatus.setStatus("current")
_DeployProvTifInputForceDestroy_Type = FspR7ForcedStatus
_DeployProvTifInputForceDestroy_Object = MibTableColumn
deployProvTifInputForceDestroy = _DeployProvTifInputForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1, 2),
    _DeployProvTifInputForceDestroy_Type()
)
deployProvTifInputForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifInputForceDestroy.setStatus("current")
_DeployProvTifInputType_Type = FspR7InterfaceType
_DeployProvTifInputType_Object = MibTableColumn
deployProvTifInputType = _DeployProvTifInputType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1, 3),
    _DeployProvTifInputType_Type()
)
deployProvTifInputType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifInputType.setStatus("current")
_DeployProvTifInputTifAlarmType_Type = SnmpAdminString
_DeployProvTifInputTifAlarmType_Object = MibTableColumn
deployProvTifInputTifAlarmType = _DeployProvTifInputTifAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1, 4),
    _DeployProvTifInputTifAlarmType_Type()
)
deployProvTifInputTifAlarmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifInputTifAlarmType.setStatus("current")
_DeployProvTifInputTifAlarmMessage_Type = SnmpAdminString
_DeployProvTifInputTifAlarmMessage_Object = MibTableColumn
deployProvTifInputTifAlarmMessage = _DeployProvTifInputTifAlarmMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1, 5),
    _DeployProvTifInputTifAlarmMessage_Type()
)
deployProvTifInputTifAlarmMessage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifInputTifAlarmMessage.setStatus("current")
_DeployProvTifInputInvertTifInputLogic_Type = FspR7InvertTelemetryInputLogic
_DeployProvTifInputInvertTifInputLogic_Object = MibTableColumn
deployProvTifInputInvertTifInputLogic = _DeployProvTifInputInvertTifInputLogic_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1, 6),
    _DeployProvTifInputInvertTifInputLogic_Type()
)
deployProvTifInputInvertTifInputLogic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifInputInvertTifInputLogic.setStatus("current")
_DeployProvTifInputAdmin_Type = FspR7AdminState
_DeployProvTifInputAdmin_Object = MibTableColumn
deployProvTifInputAdmin = _DeployProvTifInputAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 28, 1, 7),
    _DeployProvTifInputAdmin_Type()
)
deployProvTifInputAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifInputAdmin.setStatus("current")
_DeployProvTifInputCapTable_Object = MibTable
deployProvTifInputCapTable = _DeployProvTifInputCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29)
)
if mibBuilder.loadTexts:
    deployProvTifInputCapTable.setStatus("current")
_DeployProvTifInputCapEntry_Object = MibTableRow
deployProvTifInputCapEntry = _DeployProvTifInputCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1)
)
deployProvTifInputCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTifInputCapEntry.setStatus("current")
_DeployProvTifInputCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvTifInputCapRowStatus_Object = MibTableColumn
deployProvTifInputCapRowStatus = _DeployProvTifInputCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1, 1),
    _DeployProvTifInputCapRowStatus_Type()
)
deployProvTifInputCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputCapRowStatus.setStatus("current")
_DeployProvTifInputCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvTifInputCapForceDestroy_Object = MibTableColumn
deployProvTifInputCapForceDestroy = _DeployProvTifInputCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1, 2),
    _DeployProvTifInputCapForceDestroy_Type()
)
deployProvTifInputCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputCapForceDestroy.setStatus("current")
_DeployProvTifInputCapType_Type = FspR7InterfaceTypeCaps
_DeployProvTifInputCapType_Object = MibTableColumn
deployProvTifInputCapType = _DeployProvTifInputCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1, 3),
    _DeployProvTifInputCapType_Type()
)
deployProvTifInputCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputCapType.setStatus("current")
_DeployProvTifInputCapTifAlarmType_Type = Integer32
_DeployProvTifInputCapTifAlarmType_Object = MibTableColumn
deployProvTifInputCapTifAlarmType = _DeployProvTifInputCapTifAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1, 4),
    _DeployProvTifInputCapTifAlarmType_Type()
)
deployProvTifInputCapTifAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputCapTifAlarmType.setStatus("current")
_DeployProvTifInputCapTifAlarmMessage_Type = Integer32
_DeployProvTifInputCapTifAlarmMessage_Object = MibTableColumn
deployProvTifInputCapTifAlarmMessage = _DeployProvTifInputCapTifAlarmMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1, 5),
    _DeployProvTifInputCapTifAlarmMessage_Type()
)
deployProvTifInputCapTifAlarmMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputCapTifAlarmMessage.setStatus("current")
_DeployProvTifInputCapInvertTifInputLogic_Type = FspR7InvertTelemetryInputLogicCaps
_DeployProvTifInputCapInvertTifInputLogic_Object = MibTableColumn
deployProvTifInputCapInvertTifInputLogic = _DeployProvTifInputCapInvertTifInputLogic_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1, 6),
    _DeployProvTifInputCapInvertTifInputLogic_Type()
)
deployProvTifInputCapInvertTifInputLogic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputCapInvertTifInputLogic.setStatus("current")
_DeployProvTifInputCapAdmin_Type = FspR7AdminStateCaps
_DeployProvTifInputCapAdmin_Object = MibTableColumn
deployProvTifInputCapAdmin = _DeployProvTifInputCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 29, 1, 7),
    _DeployProvTifInputCapAdmin_Type()
)
deployProvTifInputCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputCapAdmin.setStatus("current")
_DeployProvTifInputDefaultsTable_Object = MibTable
deployProvTifInputDefaultsTable = _DeployProvTifInputDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30)
)
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsTable.setStatus("current")
_DeployProvTifInputDefaultsEntry_Object = MibTableRow
deployProvTifInputDefaultsEntry = _DeployProvTifInputDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1)
)
deployProvTifInputDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsEntry.setStatus("current")
_DeployProvTifInputDefaultsRowStatus_Type = RowStatus
_DeployProvTifInputDefaultsRowStatus_Object = MibTableColumn
deployProvTifInputDefaultsRowStatus = _DeployProvTifInputDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1, 1),
    _DeployProvTifInputDefaultsRowStatus_Type()
)
deployProvTifInputDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsRowStatus.setStatus("current")
_DeployProvTifInputDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvTifInputDefaultsForceDestroy_Object = MibTableColumn
deployProvTifInputDefaultsForceDestroy = _DeployProvTifInputDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1, 2),
    _DeployProvTifInputDefaultsForceDestroy_Type()
)
deployProvTifInputDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsForceDestroy.setStatus("current")
_DeployProvTifInputDefaultsType_Type = FspR7InterfaceType
_DeployProvTifInputDefaultsType_Object = MibTableColumn
deployProvTifInputDefaultsType = _DeployProvTifInputDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1, 3),
    _DeployProvTifInputDefaultsType_Type()
)
deployProvTifInputDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsType.setStatus("current")
_DeployProvTifInputDefaultsTifAlarmType_Type = SnmpAdminString
_DeployProvTifInputDefaultsTifAlarmType_Object = MibTableColumn
deployProvTifInputDefaultsTifAlarmType = _DeployProvTifInputDefaultsTifAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1, 4),
    _DeployProvTifInputDefaultsTifAlarmType_Type()
)
deployProvTifInputDefaultsTifAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsTifAlarmType.setStatus("current")
_DeployProvTifInputDefaultsTifAlarmMessage_Type = SnmpAdminString
_DeployProvTifInputDefaultsTifAlarmMessage_Object = MibTableColumn
deployProvTifInputDefaultsTifAlarmMessage = _DeployProvTifInputDefaultsTifAlarmMessage_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1, 5),
    _DeployProvTifInputDefaultsTifAlarmMessage_Type()
)
deployProvTifInputDefaultsTifAlarmMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsTifAlarmMessage.setStatus("current")
_DeployProvTifInputDefaultsInvertTifInputLogic_Type = FspR7InvertTelemetryInputLogic
_DeployProvTifInputDefaultsInvertTifInputLogic_Object = MibTableColumn
deployProvTifInputDefaultsInvertTifInputLogic = _DeployProvTifInputDefaultsInvertTifInputLogic_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1, 6),
    _DeployProvTifInputDefaultsInvertTifInputLogic_Type()
)
deployProvTifInputDefaultsInvertTifInputLogic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsInvertTifInputLogic.setStatus("current")
_DeployProvTifInputDefaultsAdmin_Type = FspR7AdminState
_DeployProvTifInputDefaultsAdmin_Object = MibTableColumn
deployProvTifInputDefaultsAdmin = _DeployProvTifInputDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 30, 1, 7),
    _DeployProvTifInputDefaultsAdmin_Type()
)
deployProvTifInputDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifInputDefaultsAdmin.setStatus("current")
_DeployProvTifOutputTable_Object = MibTable
deployProvTifOutputTable = _DeployProvTifOutputTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 31)
)
if mibBuilder.loadTexts:
    deployProvTifOutputTable.setStatus("current")
_DeployProvTifOutputEntry_Object = MibTableRow
deployProvTifOutputEntry = _DeployProvTifOutputEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 31, 1)
)
deployProvTifOutputEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTifOutputEntry.setStatus("current")
_DeployProvTifOutputRowStatus_Type = RowStatus
_DeployProvTifOutputRowStatus_Object = MibTableColumn
deployProvTifOutputRowStatus = _DeployProvTifOutputRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 31, 1, 1),
    _DeployProvTifOutputRowStatus_Type()
)
deployProvTifOutputRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifOutputRowStatus.setStatus("current")
_DeployProvTifOutputForceDestroy_Type = FspR7ForcedStatus
_DeployProvTifOutputForceDestroy_Object = MibTableColumn
deployProvTifOutputForceDestroy = _DeployProvTifOutputForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 31, 1, 2),
    _DeployProvTifOutputForceDestroy_Type()
)
deployProvTifOutputForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifOutputForceDestroy.setStatus("current")
_DeployProvTifOutputType_Type = FspR7InterfaceType
_DeployProvTifOutputType_Object = MibTableColumn
deployProvTifOutputType = _DeployProvTifOutputType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 31, 1, 3),
    _DeployProvTifOutputType_Type()
)
deployProvTifOutputType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifOutputType.setStatus("current")
_DeployProvTifOutputTelemetry_Type = FspR7TelemetryOutput
_DeployProvTifOutputTelemetry_Object = MibTableColumn
deployProvTifOutputTelemetry = _DeployProvTifOutputTelemetry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 31, 1, 4),
    _DeployProvTifOutputTelemetry_Type()
)
deployProvTifOutputTelemetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifOutputTelemetry.setStatus("current")
_DeployProvTifOutputAdmin_Type = FspR7AdminState
_DeployProvTifOutputAdmin_Object = MibTableColumn
deployProvTifOutputAdmin = _DeployProvTifOutputAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 31, 1, 5),
    _DeployProvTifOutputAdmin_Type()
)
deployProvTifOutputAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTifOutputAdmin.setStatus("current")
_DeployProvTifOutputCapTable_Object = MibTable
deployProvTifOutputCapTable = _DeployProvTifOutputCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 32)
)
if mibBuilder.loadTexts:
    deployProvTifOutputCapTable.setStatus("current")
_DeployProvTifOutputCapEntry_Object = MibTableRow
deployProvTifOutputCapEntry = _DeployProvTifOutputCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 32, 1)
)
deployProvTifOutputCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTifOutputCapEntry.setStatus("current")
_DeployProvTifOutputCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvTifOutputCapRowStatus_Object = MibTableColumn
deployProvTifOutputCapRowStatus = _DeployProvTifOutputCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 32, 1, 1),
    _DeployProvTifOutputCapRowStatus_Type()
)
deployProvTifOutputCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputCapRowStatus.setStatus("current")
_DeployProvTifOutputCapForceDestroy_Type = FspR7ForcedStatusCaps
_DeployProvTifOutputCapForceDestroy_Object = MibTableColumn
deployProvTifOutputCapForceDestroy = _DeployProvTifOutputCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 32, 1, 2),
    _DeployProvTifOutputCapForceDestroy_Type()
)
deployProvTifOutputCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputCapForceDestroy.setStatus("current")
_DeployProvTifOutputCapType_Type = FspR7InterfaceTypeCaps
_DeployProvTifOutputCapType_Object = MibTableColumn
deployProvTifOutputCapType = _DeployProvTifOutputCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 32, 1, 3),
    _DeployProvTifOutputCapType_Type()
)
deployProvTifOutputCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputCapType.setStatus("current")
_DeployProvTifOutputCapTelemetry_Type = FspR7TelemetryOutputCaps
_DeployProvTifOutputCapTelemetry_Object = MibTableColumn
deployProvTifOutputCapTelemetry = _DeployProvTifOutputCapTelemetry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 32, 1, 4),
    _DeployProvTifOutputCapTelemetry_Type()
)
deployProvTifOutputCapTelemetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputCapTelemetry.setStatus("current")
_DeployProvTifOutputCapAdmin_Type = FspR7AdminStateCaps
_DeployProvTifOutputCapAdmin_Object = MibTableColumn
deployProvTifOutputCapAdmin = _DeployProvTifOutputCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 32, 1, 5),
    _DeployProvTifOutputCapAdmin_Type()
)
deployProvTifOutputCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputCapAdmin.setStatus("current")
_DeployProvTifOutputDefaultsTable_Object = MibTable
deployProvTifOutputDefaultsTable = _DeployProvTifOutputDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 33)
)
if mibBuilder.loadTexts:
    deployProvTifOutputDefaultsTable.setStatus("current")
_DeployProvTifOutputDefaultsEntry_Object = MibTableRow
deployProvTifOutputDefaultsEntry = _DeployProvTifOutputDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 33, 1)
)
deployProvTifOutputDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTifOutputDefaultsEntry.setStatus("current")
_DeployProvTifOutputDefaultsRowStatus_Type = RowStatus
_DeployProvTifOutputDefaultsRowStatus_Object = MibTableColumn
deployProvTifOutputDefaultsRowStatus = _DeployProvTifOutputDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 33, 1, 1),
    _DeployProvTifOutputDefaultsRowStatus_Type()
)
deployProvTifOutputDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputDefaultsRowStatus.setStatus("current")
_DeployProvTifOutputDefaultsForceDestroy_Type = FspR7ForcedStatus
_DeployProvTifOutputDefaultsForceDestroy_Object = MibTableColumn
deployProvTifOutputDefaultsForceDestroy = _DeployProvTifOutputDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 33, 1, 2),
    _DeployProvTifOutputDefaultsForceDestroy_Type()
)
deployProvTifOutputDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputDefaultsForceDestroy.setStatus("current")
_DeployProvTifOutputDefaultsType_Type = FspR7InterfaceType
_DeployProvTifOutputDefaultsType_Object = MibTableColumn
deployProvTifOutputDefaultsType = _DeployProvTifOutputDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 33, 1, 3),
    _DeployProvTifOutputDefaultsType_Type()
)
deployProvTifOutputDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputDefaultsType.setStatus("current")
_DeployProvTifOutputDefaultsTelemetry_Type = FspR7TelemetryOutput
_DeployProvTifOutputDefaultsTelemetry_Object = MibTableColumn
deployProvTifOutputDefaultsTelemetry = _DeployProvTifOutputDefaultsTelemetry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 33, 1, 4),
    _DeployProvTifOutputDefaultsTelemetry_Type()
)
deployProvTifOutputDefaultsTelemetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputDefaultsTelemetry.setStatus("current")
_DeployProvTifOutputDefaultsAdmin_Type = FspR7AdminState
_DeployProvTifOutputDefaultsAdmin_Object = MibTableColumn
deployProvTifOutputDefaultsAdmin = _DeployProvTifOutputDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 33, 1, 5),
    _DeployProvTifOutputDefaultsAdmin_Type()
)
deployProvTifOutputDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTifOutputDefaultsAdmin.setStatus("current")
_ChangeServiceDeployProvIfTable_Object = MibTable
changeServiceDeployProvIfTable = _ChangeServiceDeployProvIfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40)
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTable.setStatus("current")
_ChangeServiceDeployProvIfEntry_Object = MibTableRow
changeServiceDeployProvIfEntry = _ChangeServiceDeployProvIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1)
)
changeServiceDeployProvIfEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfEntry.setStatus("current")
_ChangeServiceDeployProvIfRowStatus_Type = RowStatus
_ChangeServiceDeployProvIfRowStatus_Object = MibTableColumn
changeServiceDeployProvIfRowStatus = _ChangeServiceDeployProvIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 1),
    _ChangeServiceDeployProvIfRowStatus_Type()
)
changeServiceDeployProvIfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfRowStatus.setStatus("current")
_ChangeServiceDeployProvIfForceDestroy_Type = FspR7ForcedStatus
_ChangeServiceDeployProvIfForceDestroy_Object = MibTableColumn
changeServiceDeployProvIfForceDestroy = _ChangeServiceDeployProvIfForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 2),
    _ChangeServiceDeployProvIfForceDestroy_Type()
)
changeServiceDeployProvIfForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfForceDestroy.setStatus("current")
_ChangeServiceDeployProvIfType_Type = FspR7InterfaceType
_ChangeServiceDeployProvIfType_Object = MibTableColumn
changeServiceDeployProvIfType = _ChangeServiceDeployProvIfType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 3),
    _ChangeServiceDeployProvIfType_Type()
)
changeServiceDeployProvIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfType.setStatus("current")
_ChangeServiceDeployProvIfPayload_Type = OtnPayloadType
_ChangeServiceDeployProvIfPayload_Object = MibTableColumn
changeServiceDeployProvIfPayload = _ChangeServiceDeployProvIfPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 4),
    _ChangeServiceDeployProvIfPayload_Type()
)
changeServiceDeployProvIfPayload.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfPayload.setStatus("current")
_ChangeServiceDeployProvIfBehaviour_Type = FspR7PortBehaviour
_ChangeServiceDeployProvIfBehaviour_Object = MibTableColumn
changeServiceDeployProvIfBehaviour = _ChangeServiceDeployProvIfBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 5),
    _ChangeServiceDeployProvIfBehaviour_Type()
)
changeServiceDeployProvIfBehaviour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfBehaviour.setStatus("current")
_ChangeServiceDeployProvIfTerminationLevel_Type = OhTerminationLevel
_ChangeServiceDeployProvIfTerminationLevel_Object = MibTableColumn
changeServiceDeployProvIfTerminationLevel = _ChangeServiceDeployProvIfTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 6),
    _ChangeServiceDeployProvIfTerminationLevel_Type()
)
changeServiceDeployProvIfTerminationLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTerminationLevel.setStatus("current")
_ChangeServiceDeployProvIfAlsMode_Type = FspR7AlsMode
_ChangeServiceDeployProvIfAlsMode_Object = MibTableColumn
changeServiceDeployProvIfAlsMode = _ChangeServiceDeployProvIfAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 7),
    _ChangeServiceDeployProvIfAlsMode_Type()
)
changeServiceDeployProvIfAlsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAlsMode.setStatus("current")
_ChangeServiceDeployProvIfErrorForwarding_Type = FspR7ErrorFwdMode
_ChangeServiceDeployProvIfErrorForwarding_Object = MibTableColumn
changeServiceDeployProvIfErrorForwarding = _ChangeServiceDeployProvIfErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 8),
    _ChangeServiceDeployProvIfErrorForwarding_Type()
)
changeServiceDeployProvIfErrorForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfErrorForwarding.setStatus("current")
_ChangeServiceDeployProvIfLaserOffDelayFunction_Type = EnableState
_ChangeServiceDeployProvIfLaserOffDelayFunction_Object = MibTableColumn
changeServiceDeployProvIfLaserOffDelayFunction = _ChangeServiceDeployProvIfLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 9),
    _ChangeServiceDeployProvIfLaserOffDelayFunction_Type()
)
changeServiceDeployProvIfLaserOffDelayFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLaserOffDelayFunction.setStatus("current")
_ChangeServiceDeployProvIfFecType_Type = FspR7FecType
_ChangeServiceDeployProvIfFecType_Object = MibTableColumn
changeServiceDeployProvIfFecType = _ChangeServiceDeployProvIfFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 10),
    _ChangeServiceDeployProvIfFecType_Type()
)
changeServiceDeployProvIfFecType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfFecType.setStatus("current")
_ChangeServiceDeployProvIfTimingSource_Type = SonetTimingSource
_ChangeServiceDeployProvIfTimingSource_Object = MibTableColumn
changeServiceDeployProvIfTimingSource = _ChangeServiceDeployProvIfTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 11),
    _ChangeServiceDeployProvIfTimingSource_Type()
)
changeServiceDeployProvIfTimingSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTimingSource.setStatus("current")
_ChangeServiceDeployProvIfTcmALevel_Type = OtnTcmLevel
_ChangeServiceDeployProvIfTcmALevel_Object = MibTableColumn
changeServiceDeployProvIfTcmALevel = _ChangeServiceDeployProvIfTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 12),
    _ChangeServiceDeployProvIfTcmALevel_Type()
)
changeServiceDeployProvIfTcmALevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTcmALevel.setStatus("current")
_ChangeServiceDeployProvIfTcmBLevel_Type = OtnTcmLevel
_ChangeServiceDeployProvIfTcmBLevel_Object = MibTableColumn
changeServiceDeployProvIfTcmBLevel = _ChangeServiceDeployProvIfTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 13),
    _ChangeServiceDeployProvIfTcmBLevel_Type()
)
changeServiceDeployProvIfTcmBLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTcmBLevel.setStatus("current")
_ChangeServiceDeployProvIfSigDegThresSonetLine_Type = FspR7BERThreshold
_ChangeServiceDeployProvIfSigDegThresSonetLine_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresSonetLine = _ChangeServiceDeployProvIfSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 14),
    _ChangeServiceDeployProvIfSigDegThresSonetLine_Type()
)
changeServiceDeployProvIfSigDegThresSonetLine.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresSonetLine.setStatus("current")


class _ChangeServiceDeployProvIfSigDegThresSdhMs_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegThresSdhMs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegThresSdhMs_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegThresSdhMs_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresSdhMs = _ChangeServiceDeployProvIfSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 15),
    _ChangeServiceDeployProvIfSigDegThresSdhMs_Type()
)
changeServiceDeployProvIfSigDegThresSdhMs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresSdhMs.setUnits("%")


class _ChangeServiceDeployProvIfSignalDegradePeriod_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSignalDegradePeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSignalDegradePeriod_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSignalDegradePeriod_Object = MibTableColumn
changeServiceDeployProvIfSignalDegradePeriod = _ChangeServiceDeployProvIfSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 16),
    _ChangeServiceDeployProvIfSignalDegradePeriod_Type()
)
changeServiceDeployProvIfSignalDegradePeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSignalDegradePeriod.setUnits("s")
_ChangeServiceDeployProvIfAutonegotiation_Type = EnableState
_ChangeServiceDeployProvIfAutonegotiation_Object = MibTableColumn
changeServiceDeployProvIfAutonegotiation = _ChangeServiceDeployProvIfAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 17),
    _ChangeServiceDeployProvIfAutonegotiation_Type()
)
changeServiceDeployProvIfAutonegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAutonegotiation.setStatus("current")
_ChangeServiceDeployProvIfBitrate_Type = FspR7Bitrate
_ChangeServiceDeployProvIfBitrate_Object = MibTableColumn
changeServiceDeployProvIfBitrate = _ChangeServiceDeployProvIfBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 18),
    _ChangeServiceDeployProvIfBitrate_Type()
)
changeServiceDeployProvIfBitrate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfBitrate.setStatus("current")
_ChangeServiceDeployProvIfDuplex_Type = EthDuplexMode
_ChangeServiceDeployProvIfDuplex_Object = MibTableColumn
changeServiceDeployProvIfDuplex = _ChangeServiceDeployProvIfDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 19),
    _ChangeServiceDeployProvIfDuplex_Type()
)
changeServiceDeployProvIfDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDuplex.setStatus("current")
_ChangeServiceDeployProvIfFlowControl_Type = FspR7FlowControlMode
_ChangeServiceDeployProvIfFlowControl_Object = MibTableColumn
changeServiceDeployProvIfFlowControl = _ChangeServiceDeployProvIfFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 20),
    _ChangeServiceDeployProvIfFlowControl_Type()
)
changeServiceDeployProvIfFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfFlowControl.setStatus("current")
_ChangeServiceDeployProvIfOtnStuffing_Type = FspR7Stuff
_ChangeServiceDeployProvIfOtnStuffing_Object = MibTableColumn
changeServiceDeployProvIfOtnStuffing = _ChangeServiceDeployProvIfOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 21),
    _ChangeServiceDeployProvIfOtnStuffing_Type()
)
changeServiceDeployProvIfOtnStuffing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOtnStuffing.setStatus("current")


class _ChangeServiceDeployProvIfSigDegThresOtu_Type(Integer32):
    """Custom type changeServiceDeployProvIfSigDegThresOtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfSigDegThresOtu_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfSigDegThresOtu_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresOtu = _ChangeServiceDeployProvIfSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 22),
    _ChangeServiceDeployProvIfSigDegThresOtu_Type()
)
changeServiceDeployProvIfSigDegThresOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOtu.setUnits("%")


class _ChangeServiceDeployProvIfSigDegPeriodOtu_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegPeriodOtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegPeriodOtu_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegPeriodOtu_Object = MibTableColumn
changeServiceDeployProvIfSigDegPeriodOtu = _ChangeServiceDeployProvIfSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 23),
    _ChangeServiceDeployProvIfSigDegPeriodOtu_Type()
)
changeServiceDeployProvIfSigDegPeriodOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOtu.setUnits("s")


class _ChangeServiceDeployProvIfSigDegThresOdu_Type(Integer32):
    """Custom type changeServiceDeployProvIfSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfSigDegThresOdu_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfSigDegThresOdu_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresOdu = _ChangeServiceDeployProvIfSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 24),
    _ChangeServiceDeployProvIfSigDegThresOdu_Type()
)
changeServiceDeployProvIfSigDegThresOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOdu.setUnits("%")


class _ChangeServiceDeployProvIfSigDegPeriodOdu_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegPeriodOdu_Object = MibTableColumn
changeServiceDeployProvIfSigDegPeriodOdu = _ChangeServiceDeployProvIfSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 25),
    _ChangeServiceDeployProvIfSigDegPeriodOdu_Type()
)
changeServiceDeployProvIfSigDegPeriodOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOdu.setUnits("s")


class _ChangeServiceDeployProvIfSigDegThresOduTcmA_Type(Integer32):
    """Custom type changeServiceDeployProvIfSigDegThresOduTcmA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfSigDegThresOduTcmA_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfSigDegThresOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresOduTcmA = _ChangeServiceDeployProvIfSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 26),
    _ChangeServiceDeployProvIfSigDegThresOduTcmA_Type()
)
changeServiceDeployProvIfSigDegThresOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOduTcmA.setUnits("%")


class _ChangeServiceDeployProvIfSigDegPeriodOduTcmA_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegPeriodOduTcmA based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegPeriodOduTcmA_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegPeriodOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfSigDegPeriodOduTcmA = _ChangeServiceDeployProvIfSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 27),
    _ChangeServiceDeployProvIfSigDegPeriodOduTcmA_Type()
)
changeServiceDeployProvIfSigDegPeriodOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOduTcmA.setUnits("s")


class _ChangeServiceDeployProvIfSigDegThresOduTcmB_Type(Integer32):
    """Custom type changeServiceDeployProvIfSigDegThresOduTcmB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfSigDegThresOduTcmB_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfSigDegThresOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresOduTcmB = _ChangeServiceDeployProvIfSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 28),
    _ChangeServiceDeployProvIfSigDegThresOduTcmB_Type()
)
changeServiceDeployProvIfSigDegThresOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOduTcmB.setUnits("%")


class _ChangeServiceDeployProvIfSigDegPeriodOduTcmB_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegPeriodOduTcmB based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegPeriodOduTcmB_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegPeriodOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfSigDegPeriodOduTcmB = _ChangeServiceDeployProvIfSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 29),
    _ChangeServiceDeployProvIfSigDegPeriodOduTcmB_Type()
)
changeServiceDeployProvIfSigDegPeriodOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOduTcmB.setUnits("s")


class _ChangeServiceDeployProvIfTilt_Type(Integer32):
    """Custom type changeServiceDeployProvIfTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfTilt_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfTilt_Object = MibTableColumn
changeServiceDeployProvIfTilt = _ChangeServiceDeployProvIfTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 30),
    _ChangeServiceDeployProvIfTilt_Type()
)
changeServiceDeployProvIfTilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTilt.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTilt.setUnits("0.1 dB")
_ChangeServiceDeployProvIfGain_Type = FspR7Gain
_ChangeServiceDeployProvIfGain_Object = MibTableColumn
changeServiceDeployProvIfGain = _ChangeServiceDeployProvIfGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 31),
    _ChangeServiceDeployProvIfGain_Type()
)
changeServiceDeployProvIfGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfGain.setStatus("current")
_ChangeServiceDeployProvIfAdmin_Type = FspR7AdminState
_ChangeServiceDeployProvIfAdmin_Object = MibTableColumn
changeServiceDeployProvIfAdmin = _ChangeServiceDeployProvIfAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 32),
    _ChangeServiceDeployProvIfAdmin_Type()
)
changeServiceDeployProvIfAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAdmin.setStatus("current")


class _ChangeServiceDeployProvIfAttenuationGradient_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfAttenuationGradient based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfAttenuationGradient_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfAttenuationGradient_Object = MibTableColumn
changeServiceDeployProvIfAttenuationGradient = _ChangeServiceDeployProvIfAttenuationGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 33),
    _ChangeServiceDeployProvIfAttenuationGradient_Type()
)
changeServiceDeployProvIfAttenuationGradient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAttenuationGradient.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAttenuationGradient.setUnits("0.1 dB/min")
_ChangeServiceDeployProvIfSigDegThresReceiver_Type = Unsigned32
_ChangeServiceDeployProvIfSigDegThresReceiver_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresReceiver = _ChangeServiceDeployProvIfSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 34),
    _ChangeServiceDeployProvIfSigDegThresReceiver_Type()
)
changeServiceDeployProvIfSigDegThresReceiver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresReceiver.setUnits("0.1 dB")
_ChangeServiceDeployProvIfTcmCLevel_Type = OtnTcmLevel
_ChangeServiceDeployProvIfTcmCLevel_Object = MibTableColumn
changeServiceDeployProvIfTcmCLevel = _ChangeServiceDeployProvIfTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 35),
    _ChangeServiceDeployProvIfTcmCLevel_Type()
)
changeServiceDeployProvIfTcmCLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTcmCLevel.setStatus("current")


class _ChangeServiceDeployProvIfSigDegThresOduTcmC_Type(Integer32):
    """Custom type changeServiceDeployProvIfSigDegThresOduTcmC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfSigDegThresOduTcmC_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfSigDegThresOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresOduTcmC = _ChangeServiceDeployProvIfSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 36),
    _ChangeServiceDeployProvIfSigDegThresOduTcmC_Type()
)
changeServiceDeployProvIfSigDegThresOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresOduTcmC.setUnits("%")


class _ChangeServiceDeployProvIfSigDegPeriodOduTcmC_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegPeriodOduTcmC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegPeriodOduTcmC_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegPeriodOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfSigDegPeriodOduTcmC = _ChangeServiceDeployProvIfSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 37),
    _ChangeServiceDeployProvIfSigDegPeriodOduTcmC_Type()
)
changeServiceDeployProvIfSigDegPeriodOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodOduTcmC.setUnits("s")
_ChangeServiceDeployProvIfDisparityCorrection_Type = EnableState
_ChangeServiceDeployProvIfDisparityCorrection_Object = MibTableColumn
changeServiceDeployProvIfDisparityCorrection = _ChangeServiceDeployProvIfDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 38),
    _ChangeServiceDeployProvIfDisparityCorrection_Type()
)
changeServiceDeployProvIfDisparityCorrection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDisparityCorrection.setStatus("current")
_ChangeServiceDeployProvIfIpAddr_Type = IpAddress
_ChangeServiceDeployProvIfIpAddr_Object = MibTableColumn
changeServiceDeployProvIfIpAddr = _ChangeServiceDeployProvIfIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 39),
    _ChangeServiceDeployProvIfIpAddr_Type()
)
changeServiceDeployProvIfIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfIpAddr.setStatus("current")
_ChangeServiceDeployProvIfIpMask_Type = IpAddress
_ChangeServiceDeployProvIfIpMask_Object = MibTableColumn
changeServiceDeployProvIfIpMask = _ChangeServiceDeployProvIfIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 40),
    _ChangeServiceDeployProvIfIpMask_Type()
)
changeServiceDeployProvIfIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfIpMask.setStatus("current")
_ChangeServiceDeployProvIfOspf_Type = FspR7OspfMode
_ChangeServiceDeployProvIfOspf_Object = MibTableColumn
changeServiceDeployProvIfOspf = _ChangeServiceDeployProvIfOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 41),
    _ChangeServiceDeployProvIfOspf_Type()
)
changeServiceDeployProvIfOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOspf.setStatus("current")


class _ChangeServiceDeployProvIfMetric_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfMetric_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfMetric_Object = MibTableColumn
changeServiceDeployProvIfMetric = _ChangeServiceDeployProvIfMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 42),
    _ChangeServiceDeployProvIfMetric_Type()
)
changeServiceDeployProvIfMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfMetric.setStatus("current")
_ChangeServiceDeployProvIfAreaId_Type = IpAddress
_ChangeServiceDeployProvIfAreaId_Object = MibTableColumn
changeServiceDeployProvIfAreaId = _ChangeServiceDeployProvIfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 43),
    _ChangeServiceDeployProvIfAreaId_Type()
)
changeServiceDeployProvIfAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAreaId.setStatus("current")
_ChangeServiceDeployProvIfTraceFormSonetSection_Type = SonetTraceForm
_ChangeServiceDeployProvIfTraceFormSonetSection_Object = MibTableColumn
changeServiceDeployProvIfTraceFormSonetSection = _ChangeServiceDeployProvIfTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 44),
    _ChangeServiceDeployProvIfTraceFormSonetSection_Type()
)
changeServiceDeployProvIfTraceFormSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceFormSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfTraceExpectedSonetSection_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceExpectedSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_ChangeServiceDeployProvIfTraceExpectedSonetSection_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceExpectedSonetSection_Object = MibTableColumn
changeServiceDeployProvIfTraceExpectedSonetSection = _ChangeServiceDeployProvIfTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 45),
    _ChangeServiceDeployProvIfTraceExpectedSonetSection_Type()
)
changeServiceDeployProvIfTraceExpectedSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceExpectedSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitSonetSection_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_ChangeServiceDeployProvIfTraceTransmitSonetSection_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitSonetSection_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitSonetSection = _ChangeServiceDeployProvIfTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 46),
    _ChangeServiceDeployProvIfTraceTransmitSonetSection_Type()
)
changeServiceDeployProvIfTraceTransmitSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitSonetSection.setStatus("current")
_ChangeServiceDeployProvIfTimModeSonetSection_Type = TimMode
_ChangeServiceDeployProvIfTimModeSonetSection_Object = MibTableColumn
changeServiceDeployProvIfTimModeSonetSection = _ChangeServiceDeployProvIfTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 47),
    _ChangeServiceDeployProvIfTimModeSonetSection_Type()
)
changeServiceDeployProvIfTimModeSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTimModeSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfTraceExpectedOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceExpectedOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceExpectedOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceExpectedOtu_Object = MibTableColumn
changeServiceDeployProvIfTraceExpectedOtu = _ChangeServiceDeployProvIfTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 48),
    _ChangeServiceDeployProvIfTraceExpectedOtu_Type()
)
changeServiceDeployProvIfTraceExpectedOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceExpectedOtu.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitSapiOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitSapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitSapiOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitSapiOtu_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitSapiOtu = _ChangeServiceDeployProvIfTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 49),
    _ChangeServiceDeployProvIfTraceTransmitSapiOtu_Type()
)
changeServiceDeployProvIfTraceTransmitSapiOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitSapiOtu.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitDapiOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitDapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitDapiOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitDapiOtu_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitDapiOtu = _ChangeServiceDeployProvIfTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 50),
    _ChangeServiceDeployProvIfTraceTransmitDapiOtu_Type()
)
changeServiceDeployProvIfTraceTransmitDapiOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitDapiOtu.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitOpspOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitOpspOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfTraceTransmitOpspOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitOpspOtu_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitOpspOtu = _ChangeServiceDeployProvIfTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 51),
    _ChangeServiceDeployProvIfTraceTransmitOpspOtu_Type()
)
changeServiceDeployProvIfTraceTransmitOpspOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitOpspOtu.setStatus("current")
_ChangeServiceDeployProvIfTimModeOtu_Type = TimMode
_ChangeServiceDeployProvIfTimModeOtu_Object = MibTableColumn
changeServiceDeployProvIfTimModeOtu = _ChangeServiceDeployProvIfTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 52),
    _ChangeServiceDeployProvIfTimModeOtu_Type()
)
changeServiceDeployProvIfTimModeOtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTimModeOtu.setStatus("current")


class _ChangeServiceDeployProvIfTraceExpectedOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceExpectedOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceExpectedOdu_Object = MibTableColumn
changeServiceDeployProvIfTraceExpectedOdu = _ChangeServiceDeployProvIfTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 53),
    _ChangeServiceDeployProvIfTraceExpectedOdu_Type()
)
changeServiceDeployProvIfTraceExpectedOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceExpectedOdu.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitSapiOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitSapiOdu_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitSapiOdu = _ChangeServiceDeployProvIfTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 54),
    _ChangeServiceDeployProvIfTraceTransmitSapiOdu_Type()
)
changeServiceDeployProvIfTraceTransmitSapiOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitSapiOdu.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitDapiOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitDapiOdu_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitDapiOdu = _ChangeServiceDeployProvIfTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 55),
    _ChangeServiceDeployProvIfTraceTransmitDapiOdu_Type()
)
changeServiceDeployProvIfTraceTransmitDapiOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitDapiOdu.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitOpspOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitOpspOdu_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitOpspOdu = _ChangeServiceDeployProvIfTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 56),
    _ChangeServiceDeployProvIfTraceTransmitOpspOdu_Type()
)
changeServiceDeployProvIfTraceTransmitOpspOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitOpspOdu.setStatus("current")
_ChangeServiceDeployProvIfTimModeOdu_Type = TimMode
_ChangeServiceDeployProvIfTimModeOdu_Object = MibTableColumn
changeServiceDeployProvIfTimModeOdu = _ChangeServiceDeployProvIfTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 57),
    _ChangeServiceDeployProvIfTimModeOdu_Type()
)
changeServiceDeployProvIfTimModeOdu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTimModeOdu.setStatus("current")


class _ChangeServiceDeployProvIfTraceExpectedOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceExpectedOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceExpectedOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceExpectedOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfTraceExpectedOduTcmA = _ChangeServiceDeployProvIfTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 58),
    _ChangeServiceDeployProvIfTraceExpectedOduTcmA_Type()
)
changeServiceDeployProvIfTraceExpectedOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceExpectedOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitSapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitSapiOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitSapiOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitSapiOduTcmA = _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 59),
    _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmA_Type()
)
changeServiceDeployProvIfTraceTransmitSapiOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitSapiOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitDapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitDapiOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitDapiOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitDapiOduTcmA = _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 60),
    _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmA_Type()
)
changeServiceDeployProvIfTraceTransmitDapiOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitDapiOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitOpspOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfTraceTransmitOpspOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitOpspOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitOpspOduTcmA = _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 61),
    _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmA_Type()
)
changeServiceDeployProvIfTraceTransmitOpspOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitOpspOduTcmA.setStatus("current")
_ChangeServiceDeployProvIfTimModeOduTcmA_Type = TimMode
_ChangeServiceDeployProvIfTimModeOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfTimModeOduTcmA = _ChangeServiceDeployProvIfTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 62),
    _ChangeServiceDeployProvIfTimModeOduTcmA_Type()
)
changeServiceDeployProvIfTimModeOduTcmA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTimModeOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfTraceExpectedOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceExpectedOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceExpectedOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceExpectedOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfTraceExpectedOduTcmB = _ChangeServiceDeployProvIfTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 63),
    _ChangeServiceDeployProvIfTraceExpectedOduTcmB_Type()
)
changeServiceDeployProvIfTraceExpectedOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceExpectedOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitSapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitSapiOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitSapiOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitSapiOduTcmB = _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 64),
    _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmB_Type()
)
changeServiceDeployProvIfTraceTransmitSapiOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitSapiOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitDapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitDapiOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitDapiOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitDapiOduTcmB = _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 65),
    _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmB_Type()
)
changeServiceDeployProvIfTraceTransmitDapiOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitDapiOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitOpspOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfTraceTransmitOpspOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitOpspOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitOpspOduTcmB = _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 66),
    _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmB_Type()
)
changeServiceDeployProvIfTraceTransmitOpspOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitOpspOduTcmB.setStatus("current")
_ChangeServiceDeployProvIfTimModeOduTcmB_Type = TimMode
_ChangeServiceDeployProvIfTimModeOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfTimModeOduTcmB = _ChangeServiceDeployProvIfTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 67),
    _ChangeServiceDeployProvIfTimModeOduTcmB_Type()
)
changeServiceDeployProvIfTimModeOduTcmB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTimModeOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfTraceExpectedOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceExpectedOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceExpectedOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceExpectedOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfTraceExpectedOduTcmC = _ChangeServiceDeployProvIfTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 68),
    _ChangeServiceDeployProvIfTraceExpectedOduTcmC_Type()
)
changeServiceDeployProvIfTraceExpectedOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceExpectedOduTcmC.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitSapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitSapiOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitSapiOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitSapiOduTcmC = _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 69),
    _ChangeServiceDeployProvIfTraceTransmitSapiOduTcmC_Type()
)
changeServiceDeployProvIfTraceTransmitSapiOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitSapiOduTcmC.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitDapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfTraceTransmitDapiOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitDapiOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitDapiOduTcmC = _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 70),
    _ChangeServiceDeployProvIfTraceTransmitDapiOduTcmC_Type()
)
changeServiceDeployProvIfTraceTransmitDapiOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitDapiOduTcmC.setStatus("current")


class _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfTraceTransmitOpspOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfTraceTransmitOpspOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfTraceTransmitOpspOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfTraceTransmitOpspOduTcmC = _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 71),
    _ChangeServiceDeployProvIfTraceTransmitOpspOduTcmC_Type()
)
changeServiceDeployProvIfTraceTransmitOpspOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTraceTransmitOpspOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfTimModeOduTcmC_Type = TimMode
_ChangeServiceDeployProvIfTimModeOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfTimModeOduTcmC = _ChangeServiceDeployProvIfTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 72),
    _ChangeServiceDeployProvIfTimModeOduTcmC_Type()
)
changeServiceDeployProvIfTimModeOduTcmC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTimModeOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfChannelProvisioning_Type = FspR7ChannelIdentifier
_ChangeServiceDeployProvIfChannelProvisioning_Object = MibTableColumn
changeServiceDeployProvIfChannelProvisioning = _ChangeServiceDeployProvIfChannelProvisioning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 73),
    _ChangeServiceDeployProvIfChannelProvisioning_Type()
)
changeServiceDeployProvIfChannelProvisioning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfChannelProvisioning.setStatus("current")


class _ChangeServiceDeployProvIfVariableGain_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfVariableGain based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 350),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfVariableGain_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfVariableGain_Object = MibTableColumn
changeServiceDeployProvIfVariableGain = _ChangeServiceDeployProvIfVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 74),
    _ChangeServiceDeployProvIfVariableGain_Type()
)
changeServiceDeployProvIfVariableGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfVariableGain.setUnits("0.1 dB")
_ChangeServiceDeployProvIfBand_Type = FspR7OpticalBand
_ChangeServiceDeployProvIfBand_Object = MibTableColumn
changeServiceDeployProvIfBand = _ChangeServiceDeployProvIfBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 75),
    _ChangeServiceDeployProvIfBand_Type()
)
changeServiceDeployProvIfBand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfBand.setStatus("current")


class _ChangeServiceDeployProvIfSigDegThreshold_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegThreshold_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegThreshold_Object = MibTableColumn
changeServiceDeployProvIfSigDegThreshold = _ChangeServiceDeployProvIfSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 76),
    _ChangeServiceDeployProvIfSigDegThreshold_Type()
)
changeServiceDeployProvIfSigDegThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThreshold.setStatus("current")


class _ChangeServiceDeployProvIfSigDegPeriodIntegration_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegPeriodIntegration based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegPeriodIntegration_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegPeriodIntegration_Object = MibTableColumn
changeServiceDeployProvIfSigDegPeriodIntegration = _ChangeServiceDeployProvIfSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 77),
    _ChangeServiceDeployProvIfSigDegPeriodIntegration_Type()
)
changeServiceDeployProvIfSigDegPeriodIntegration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodIntegration.setUnits("s")
_ChangeServiceDeployProvIfVoaMode_Type = FspR7VoaMode
_ChangeServiceDeployProvIfVoaMode_Object = MibTableColumn
changeServiceDeployProvIfVoaMode = _ChangeServiceDeployProvIfVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 78),
    _ChangeServiceDeployProvIfVoaMode_Type()
)
changeServiceDeployProvIfVoaMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfVoaMode.setStatus("current")


class _ChangeServiceDeployProvIfOpticalSetPoint_Type(Integer32):
    """Custom type changeServiceDeployProvIfOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfOpticalSetPoint_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfOpticalSetPoint_Object = MibTableColumn
changeServiceDeployProvIfOpticalSetPoint = _ChangeServiceDeployProvIfOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 79),
    _ChangeServiceDeployProvIfOpticalSetPoint_Type()
)
changeServiceDeployProvIfOpticalSetPoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOpticalSetPoint.setUnits("0.1 dBm")


class _ChangeServiceDeployProvIfVoaSetpoint_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfVoaSetpoint based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfVoaSetpoint_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfVoaSetpoint_Object = MibTableColumn
changeServiceDeployProvIfVoaSetpoint = _ChangeServiceDeployProvIfVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 80),
    _ChangeServiceDeployProvIfVoaSetpoint_Type()
)
changeServiceDeployProvIfVoaSetpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfVoaSetpoint.setUnits("0.1 dB")
_ChangeServiceDeployProvIfLanAid_Type = EntityIndex
_ChangeServiceDeployProvIfLanAid_Object = MibTableColumn
changeServiceDeployProvIfLanAid = _ChangeServiceDeployProvIfLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 81),
    _ChangeServiceDeployProvIfLanAid_Type()
)
changeServiceDeployProvIfLanAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLanAid.setStatus("current")
_ChangeServiceDeployProvIfAprHighThreshold_Type = Unsigned32
_ChangeServiceDeployProvIfAprHighThreshold_Object = MibTableColumn
changeServiceDeployProvIfAprHighThreshold = _ChangeServiceDeployProvIfAprHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 82),
    _ChangeServiceDeployProvIfAprHighThreshold_Type()
)
changeServiceDeployProvIfAprHighThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAprHighThreshold.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfAprHighThreshold.setUnits("0.1 dBm")


class _ChangeServiceDeployProvIfPumpPower_Type(Integer32):
    """Custom type changeServiceDeployProvIfPumpPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(115, 138),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfPumpPower_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfPumpPower_Object = MibTableColumn
changeServiceDeployProvIfPumpPower = _ChangeServiceDeployProvIfPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 83),
    _ChangeServiceDeployProvIfPumpPower_Type()
)
changeServiceDeployProvIfPumpPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfPumpPower.setUnits("0.2 dBm")
_ChangeServiceDeployProvIfWdmRxChannel_Type = FspR7ChannelIdentifier
_ChangeServiceDeployProvIfWdmRxChannel_Object = MibTableColumn
changeServiceDeployProvIfWdmRxChannel = _ChangeServiceDeployProvIfWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 84),
    _ChangeServiceDeployProvIfWdmRxChannel_Type()
)
changeServiceDeployProvIfWdmRxChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfWdmRxChannel.setStatus("current")
_ChangeServiceDeployProvIfSigDegThresSonetSection_Type = FspR7BERThresholdSection
_ChangeServiceDeployProvIfSigDegThresSonetSection_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresSonetSection = _ChangeServiceDeployProvIfSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 85),
    _ChangeServiceDeployProvIfSigDegThresSonetSection_Type()
)
changeServiceDeployProvIfSigDegThresSonetSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfSigDegThresSdhSection_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegThresSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegThresSdhSection_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegThresSdhSection_Object = MibTableColumn
changeServiceDeployProvIfSigDegThresSdhSection = _ChangeServiceDeployProvIfSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 86),
    _ChangeServiceDeployProvIfSigDegThresSdhSection_Type()
)
changeServiceDeployProvIfSigDegThresSdhSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegThresSdhSection.setUnits("%")


class _ChangeServiceDeployProvIfSigDegPeriodSdhSection_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfSigDegPeriodSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfSigDegPeriodSdhSection_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfSigDegPeriodSdhSection_Object = MibTableColumn
changeServiceDeployProvIfSigDegPeriodSdhSection = _ChangeServiceDeployProvIfSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 87),
    _ChangeServiceDeployProvIfSigDegPeriodSdhSection_Type()
)
changeServiceDeployProvIfSigDegPeriodSdhSection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfSigDegPeriodSdhSection.setUnits("s")
_ChangeServiceDeployProvIfDispersionMode_Type = FspR7DispersionModes
_ChangeServiceDeployProvIfDispersionMode_Object = MibTableColumn
changeServiceDeployProvIfDispersionMode = _ChangeServiceDeployProvIfDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 88),
    _ChangeServiceDeployProvIfDispersionMode_Type()
)
changeServiceDeployProvIfDispersionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDispersionMode.setStatus("current")


class _ChangeServiceDeployProvIfDispersionSetting_Type(Integer32):
    """Custom type changeServiceDeployProvIfDispersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDispersionSetting_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDispersionSetting_Object = MibTableColumn
changeServiceDeployProvIfDispersionSetting = _ChangeServiceDeployProvIfDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 89),
    _ChangeServiceDeployProvIfDispersionSetting_Type()
)
changeServiceDeployProvIfDispersionSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDispersionSetting.setUnits("ps/nm")
_ChangeServiceDeployProvIfIpType_Type = FspR7IpType
_ChangeServiceDeployProvIfIpType_Object = MibTableColumn
changeServiceDeployProvIfIpType = _ChangeServiceDeployProvIfIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 90),
    _ChangeServiceDeployProvIfIpType_Type()
)
changeServiceDeployProvIfIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfIpType.setStatus("current")


class _ChangeServiceDeployProvIfOffset_Type(Integer32):
    """Custom type changeServiceDeployProvIfOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfOffset_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfOffset_Object = MibTableColumn
changeServiceDeployProvIfOffset = _ChangeServiceDeployProvIfOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 91),
    _ChangeServiceDeployProvIfOffset_Type()
)
changeServiceDeployProvIfOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOffset.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOffset.setUnits("0.1 dB")
_ChangeServiceDeployProvIfFunction_Type = FspR7InterfaceFunction
_ChangeServiceDeployProvIfFunction_Object = MibTableColumn
changeServiceDeployProvIfFunction = _ChangeServiceDeployProvIfFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 92),
    _ChangeServiceDeployProvIfFunction_Type()
)
changeServiceDeployProvIfFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfFunction.setStatus("current")
_ChangeServiceDeployProvIfFarEndCommunication_Type = FspR7YesNo
_ChangeServiceDeployProvIfFarEndCommunication_Object = MibTableColumn
changeServiceDeployProvIfFarEndCommunication = _ChangeServiceDeployProvIfFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 93),
    _ChangeServiceDeployProvIfFarEndCommunication_Type()
)
changeServiceDeployProvIfFarEndCommunication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfFarEndCommunication.setStatus("current")
_ChangeServiceDeployProvIfEqlzAdmin_Type = FspR7EqlzAdminState
_ChangeServiceDeployProvIfEqlzAdmin_Object = MibTableColumn
changeServiceDeployProvIfEqlzAdmin = _ChangeServiceDeployProvIfEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 94),
    _ChangeServiceDeployProvIfEqlzAdmin_Type()
)
changeServiceDeployProvIfEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfEqlzAdmin.setStatus("current")
_ChangeServiceDeployProvIfTxOffDelay_Type = FspR7EnableDisable
_ChangeServiceDeployProvIfTxOffDelay_Object = MibTableColumn
changeServiceDeployProvIfTxOffDelay = _ChangeServiceDeployProvIfTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 95),
    _ChangeServiceDeployProvIfTxOffDelay_Type()
)
changeServiceDeployProvIfTxOffDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfTxOffDelay.setStatus("current")
_ChangeServiceDeployProvIfOpuPayloadType_Type = FspR7OpuPayloadType
_ChangeServiceDeployProvIfOpuPayloadType_Object = MibTableColumn
changeServiceDeployProvIfOpuPayloadType = _ChangeServiceDeployProvIfOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 96),
    _ChangeServiceDeployProvIfOpuPayloadType_Type()
)
changeServiceDeployProvIfOpuPayloadType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOpuPayloadType.setStatus("current")


class _ChangeServiceDeployProvIfOscOpticalSetpoint_Type(Integer32):
    """Custom type changeServiceDeployProvIfOscOpticalSetpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfOscOpticalSetpoint_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfOscOpticalSetpoint_Object = MibTableColumn
changeServiceDeployProvIfOscOpticalSetpoint = _ChangeServiceDeployProvIfOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 97),
    _ChangeServiceDeployProvIfOscOpticalSetpoint_Type()
)
changeServiceDeployProvIfOscOpticalSetpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfOscOpticalSetpoint.setUnits("0.1 dBm")
_ChangeServiceDeployProvIfFiberBrand_Type = FspR7FiberBrand
_ChangeServiceDeployProvIfFiberBrand_Object = MibTableColumn
changeServiceDeployProvIfFiberBrand = _ChangeServiceDeployProvIfFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 98),
    _ChangeServiceDeployProvIfFiberBrand_Type()
)
changeServiceDeployProvIfFiberBrand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfFiberBrand.setStatus("current")
_ChangeServiceDeployProvIfXfpDecisionThres_Type = FspR7XfpDecisionThres
_ChangeServiceDeployProvIfXfpDecisionThres_Object = MibTableColumn
changeServiceDeployProvIfXfpDecisionThres = _ChangeServiceDeployProvIfXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 99),
    _ChangeServiceDeployProvIfXfpDecisionThres_Type()
)
changeServiceDeployProvIfXfpDecisionThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfXfpDecisionThres.setStatus("current")
_ChangeServiceDeployProvIfLaserDelayTimer_Type = FspR7LaserDelayTimer
_ChangeServiceDeployProvIfLaserDelayTimer_Object = MibTableColumn
changeServiceDeployProvIfLaserDelayTimer = _ChangeServiceDeployProvIfLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 100),
    _ChangeServiceDeployProvIfLaserDelayTimer_Type()
)
changeServiceDeployProvIfLaserDelayTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLaserDelayTimer.setStatus("current")


class _ChangeServiceDeployProvIfLaserOffTimer_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfLaserOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfLaserOffTimer_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfLaserOffTimer_Object = MibTableColumn
changeServiceDeployProvIfLaserOffTimer = _ChangeServiceDeployProvIfLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 101),
    _ChangeServiceDeployProvIfLaserOffTimer_Type()
)
changeServiceDeployProvIfLaserOffTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLaserOffTimer.setUnits("ms")


class _ChangeServiceDeployProvIfLaserOnTimer_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfLaserOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfLaserOnTimer_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfLaserOnTimer_Object = MibTableColumn
changeServiceDeployProvIfLaserOnTimer = _ChangeServiceDeployProvIfLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 102),
    _ChangeServiceDeployProvIfLaserOnTimer_Type()
)
changeServiceDeployProvIfLaserOnTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLaserOnTimer.setUnits("ms")
_ChangeServiceDeployProvIfLaneChannelSetting_Type = FspR7ChannelIdentifier
_ChangeServiceDeployProvIfLaneChannelSetting_Object = MibTableColumn
changeServiceDeployProvIfLaneChannelSetting = _ChangeServiceDeployProvIfLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 103),
    _ChangeServiceDeployProvIfLaneChannelSetting_Type()
)
changeServiceDeployProvIfLaneChannelSetting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLaneChannelSetting.setStatus("current")
_ChangeServiceDeployProvIfBip_Type = FspR7Bip
_ChangeServiceDeployProvIfBip_Object = MibTableColumn
changeServiceDeployProvIfBip = _ChangeServiceDeployProvIfBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 104),
    _ChangeServiceDeployProvIfBip_Type()
)
changeServiceDeployProvIfBip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfBip.setStatus("current")
_ChangeServiceDeployProvIfCodeGain_Type = FspR7CodeGain
_ChangeServiceDeployProvIfCodeGain_Object = MibTableColumn
changeServiceDeployProvIfCodeGain = _ChangeServiceDeployProvIfCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 40, 1, 105),
    _ChangeServiceDeployProvIfCodeGain_Type()
)
changeServiceDeployProvIfCodeGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCodeGain.setStatus("current")
_ChangeServiceDeployProvIfCapTable_Object = MibTable
changeServiceDeployProvIfCapTable = _ChangeServiceDeployProvIfCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41)
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTable.setStatus("current")
_ChangeServiceDeployProvIfCapEntry_Object = MibTableRow
changeServiceDeployProvIfCapEntry = _ChangeServiceDeployProvIfCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1)
)
changeServiceDeployProvIfCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapEntry.setStatus("current")
_ChangeServiceDeployProvIfCapRowStatus_Type = FspR7RowStatusCaps
_ChangeServiceDeployProvIfCapRowStatus_Object = MibTableColumn
changeServiceDeployProvIfCapRowStatus = _ChangeServiceDeployProvIfCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 1),
    _ChangeServiceDeployProvIfCapRowStatus_Type()
)
changeServiceDeployProvIfCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapRowStatus.setStatus("current")
_ChangeServiceDeployProvIfCapForceDestroy_Type = FspR7ForcedStatusCaps
_ChangeServiceDeployProvIfCapForceDestroy_Object = MibTableColumn
changeServiceDeployProvIfCapForceDestroy = _ChangeServiceDeployProvIfCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 2),
    _ChangeServiceDeployProvIfCapForceDestroy_Type()
)
changeServiceDeployProvIfCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapForceDestroy.setStatus("current")
_ChangeServiceDeployProvIfCapType_Type = FspR7InterfaceTypeCaps
_ChangeServiceDeployProvIfCapType_Object = MibTableColumn
changeServiceDeployProvIfCapType = _ChangeServiceDeployProvIfCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 3),
    _ChangeServiceDeployProvIfCapType_Type()
)
changeServiceDeployProvIfCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapType.setStatus("current")
_ChangeServiceDeployProvIfCapPayload_Type = OtnPayloadTypeCaps
_ChangeServiceDeployProvIfCapPayload_Object = MibTableColumn
changeServiceDeployProvIfCapPayload = _ChangeServiceDeployProvIfCapPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 4),
    _ChangeServiceDeployProvIfCapPayload_Type()
)
changeServiceDeployProvIfCapPayload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapPayload.setStatus("current")
_ChangeServiceDeployProvIfCapBehaviour_Type = FspR7PortBehaviourCaps
_ChangeServiceDeployProvIfCapBehaviour_Object = MibTableColumn
changeServiceDeployProvIfCapBehaviour = _ChangeServiceDeployProvIfCapBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 5),
    _ChangeServiceDeployProvIfCapBehaviour_Type()
)
changeServiceDeployProvIfCapBehaviour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapBehaviour.setStatus("current")
_ChangeServiceDeployProvIfCapTerminationLevel_Type = OhTerminationLevelCaps
_ChangeServiceDeployProvIfCapTerminationLevel_Object = MibTableColumn
changeServiceDeployProvIfCapTerminationLevel = _ChangeServiceDeployProvIfCapTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 6),
    _ChangeServiceDeployProvIfCapTerminationLevel_Type()
)
changeServiceDeployProvIfCapTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTerminationLevel.setStatus("current")
_ChangeServiceDeployProvIfCapAlsMode_Type = FspR7AlsModeCaps
_ChangeServiceDeployProvIfCapAlsMode_Object = MibTableColumn
changeServiceDeployProvIfCapAlsMode = _ChangeServiceDeployProvIfCapAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 7),
    _ChangeServiceDeployProvIfCapAlsMode_Type()
)
changeServiceDeployProvIfCapAlsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAlsMode.setStatus("current")
_ChangeServiceDeployProvIfCapErrorForwarding_Type = FspR7ErrorFwdModeCaps
_ChangeServiceDeployProvIfCapErrorForwarding_Object = MibTableColumn
changeServiceDeployProvIfCapErrorForwarding = _ChangeServiceDeployProvIfCapErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 8),
    _ChangeServiceDeployProvIfCapErrorForwarding_Type()
)
changeServiceDeployProvIfCapErrorForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapErrorForwarding.setStatus("current")
_ChangeServiceDeployProvIfCapLaserOffDelayFunction_Type = EnableStateCaps
_ChangeServiceDeployProvIfCapLaserOffDelayFunction_Object = MibTableColumn
changeServiceDeployProvIfCapLaserOffDelayFunction = _ChangeServiceDeployProvIfCapLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 9),
    _ChangeServiceDeployProvIfCapLaserOffDelayFunction_Type()
)
changeServiceDeployProvIfCapLaserOffDelayFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLaserOffDelayFunction.setStatus("current")
_ChangeServiceDeployProvIfCapFecType_Type = FspR7FecTypeCaps
_ChangeServiceDeployProvIfCapFecType_Object = MibTableColumn
changeServiceDeployProvIfCapFecType = _ChangeServiceDeployProvIfCapFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 10),
    _ChangeServiceDeployProvIfCapFecType_Type()
)
changeServiceDeployProvIfCapFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapFecType.setStatus("current")
_ChangeServiceDeployProvIfCapTimingSource_Type = SonetTimingSourceCaps
_ChangeServiceDeployProvIfCapTimingSource_Object = MibTableColumn
changeServiceDeployProvIfCapTimingSource = _ChangeServiceDeployProvIfCapTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 11),
    _ChangeServiceDeployProvIfCapTimingSource_Type()
)
changeServiceDeployProvIfCapTimingSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTimingSource.setStatus("current")
_ChangeServiceDeployProvIfCapTcmALevel_Type = OtnTcmLevelCaps
_ChangeServiceDeployProvIfCapTcmALevel_Object = MibTableColumn
changeServiceDeployProvIfCapTcmALevel = _ChangeServiceDeployProvIfCapTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 12),
    _ChangeServiceDeployProvIfCapTcmALevel_Type()
)
changeServiceDeployProvIfCapTcmALevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTcmALevel.setStatus("current")
_ChangeServiceDeployProvIfCapTcmBLevel_Type = OtnTcmLevelCaps
_ChangeServiceDeployProvIfCapTcmBLevel_Object = MibTableColumn
changeServiceDeployProvIfCapTcmBLevel = _ChangeServiceDeployProvIfCapTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 13),
    _ChangeServiceDeployProvIfCapTcmBLevel_Type()
)
changeServiceDeployProvIfCapTcmBLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTcmBLevel.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegThresSonetLine_Type = FspR7BERThresholdCaps
_ChangeServiceDeployProvIfCapSigDegThresSonetLine_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresSonetLine = _ChangeServiceDeployProvIfCapSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 14),
    _ChangeServiceDeployProvIfCapSigDegThresSonetLine_Type()
)
changeServiceDeployProvIfCapSigDegThresSonetLine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresSonetLine.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegThresSdhMs_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegThresSdhMs_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresSdhMs = _ChangeServiceDeployProvIfCapSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 15),
    _ChangeServiceDeployProvIfCapSigDegThresSdhMs_Type()
)
changeServiceDeployProvIfCapSigDegThresSdhMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresSdhMs.setUnits("%")
_ChangeServiceDeployProvIfCapSignalDegradePeriod_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSignalDegradePeriod_Object = MibTableColumn
changeServiceDeployProvIfCapSignalDegradePeriod = _ChangeServiceDeployProvIfCapSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 16),
    _ChangeServiceDeployProvIfCapSignalDegradePeriod_Type()
)
changeServiceDeployProvIfCapSignalDegradePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSignalDegradePeriod.setUnits("s")
_ChangeServiceDeployProvIfCapAutonegotiation_Type = EnableStateCaps
_ChangeServiceDeployProvIfCapAutonegotiation_Object = MibTableColumn
changeServiceDeployProvIfCapAutonegotiation = _ChangeServiceDeployProvIfCapAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 17),
    _ChangeServiceDeployProvIfCapAutonegotiation_Type()
)
changeServiceDeployProvIfCapAutonegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAutonegotiation.setStatus("current")
_ChangeServiceDeployProvIfCapBitrate_Type = FspR7BitrateCaps
_ChangeServiceDeployProvIfCapBitrate_Object = MibTableColumn
changeServiceDeployProvIfCapBitrate = _ChangeServiceDeployProvIfCapBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 18),
    _ChangeServiceDeployProvIfCapBitrate_Type()
)
changeServiceDeployProvIfCapBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapBitrate.setStatus("current")
_ChangeServiceDeployProvIfCapDuplex_Type = EthDuplexModeCaps
_ChangeServiceDeployProvIfCapDuplex_Object = MibTableColumn
changeServiceDeployProvIfCapDuplex = _ChangeServiceDeployProvIfCapDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 19),
    _ChangeServiceDeployProvIfCapDuplex_Type()
)
changeServiceDeployProvIfCapDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapDuplex.setStatus("current")
_ChangeServiceDeployProvIfCapFlowControl_Type = FspR7FlowControlModeCaps
_ChangeServiceDeployProvIfCapFlowControl_Object = MibTableColumn
changeServiceDeployProvIfCapFlowControl = _ChangeServiceDeployProvIfCapFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 20),
    _ChangeServiceDeployProvIfCapFlowControl_Type()
)
changeServiceDeployProvIfCapFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapFlowControl.setStatus("current")
_ChangeServiceDeployProvIfCapOtnStuffing_Type = FspR7StuffCaps
_ChangeServiceDeployProvIfCapOtnStuffing_Object = MibTableColumn
changeServiceDeployProvIfCapOtnStuffing = _ChangeServiceDeployProvIfCapOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 21),
    _ChangeServiceDeployProvIfCapOtnStuffing_Type()
)
changeServiceDeployProvIfCapOtnStuffing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOtnStuffing.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegThresOtu_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapSigDegThresOtu_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresOtu = _ChangeServiceDeployProvIfCapSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 22),
    _ChangeServiceDeployProvIfCapSigDegThresOtu_Type()
)
changeServiceDeployProvIfCapSigDegThresOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOtu.setUnits("%")
_ChangeServiceDeployProvIfCapSigDegPeriodOtu_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegPeriodOtu_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegPeriodOtu = _ChangeServiceDeployProvIfCapSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 23),
    _ChangeServiceDeployProvIfCapSigDegPeriodOtu_Type()
)
changeServiceDeployProvIfCapSigDegPeriodOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOtu.setUnits("s")
_ChangeServiceDeployProvIfCapSigDegThresOdu_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapSigDegThresOdu_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresOdu = _ChangeServiceDeployProvIfCapSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 24),
    _ChangeServiceDeployProvIfCapSigDegThresOdu_Type()
)
changeServiceDeployProvIfCapSigDegThresOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOdu.setUnits("%")
_ChangeServiceDeployProvIfCapSigDegPeriodOdu_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegPeriodOdu_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegPeriodOdu = _ChangeServiceDeployProvIfCapSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 25),
    _ChangeServiceDeployProvIfCapSigDegPeriodOdu_Type()
)
changeServiceDeployProvIfCapSigDegPeriodOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOdu.setUnits("s")
_ChangeServiceDeployProvIfCapSigDegThresOduTcmA_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapSigDegThresOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresOduTcmA = _ChangeServiceDeployProvIfCapSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 26),
    _ChangeServiceDeployProvIfCapSigDegThresOduTcmA_Type()
)
changeServiceDeployProvIfCapSigDegThresOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOduTcmA.setUnits("%")
_ChangeServiceDeployProvIfCapSigDegPeriodOduTcmA_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegPeriodOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegPeriodOduTcmA = _ChangeServiceDeployProvIfCapSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 27),
    _ChangeServiceDeployProvIfCapSigDegPeriodOduTcmA_Type()
)
changeServiceDeployProvIfCapSigDegPeriodOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOduTcmA.setUnits("s")
_ChangeServiceDeployProvIfCapSigDegThresOduTcmB_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapSigDegThresOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresOduTcmB = _ChangeServiceDeployProvIfCapSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 28),
    _ChangeServiceDeployProvIfCapSigDegThresOduTcmB_Type()
)
changeServiceDeployProvIfCapSigDegThresOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOduTcmB.setUnits("%")
_ChangeServiceDeployProvIfCapSigDegPeriodOduTcmB_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegPeriodOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegPeriodOduTcmB = _ChangeServiceDeployProvIfCapSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 29),
    _ChangeServiceDeployProvIfCapSigDegPeriodOduTcmB_Type()
)
changeServiceDeployProvIfCapSigDegPeriodOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOduTcmB.setUnits("s")
_ChangeServiceDeployProvIfCapTilt_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapTilt_Object = MibTableColumn
changeServiceDeployProvIfCapTilt = _ChangeServiceDeployProvIfCapTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 30),
    _ChangeServiceDeployProvIfCapTilt_Type()
)
changeServiceDeployProvIfCapTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTilt.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTilt.setUnits("0.1 dB")
_ChangeServiceDeployProvIfCapGain_Type = FspR7GainCaps
_ChangeServiceDeployProvIfCapGain_Object = MibTableColumn
changeServiceDeployProvIfCapGain = _ChangeServiceDeployProvIfCapGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 31),
    _ChangeServiceDeployProvIfCapGain_Type()
)
changeServiceDeployProvIfCapGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapGain.setStatus("current")
_ChangeServiceDeployProvIfCapAdmin_Type = FspR7AdminStateCaps
_ChangeServiceDeployProvIfCapAdmin_Object = MibTableColumn
changeServiceDeployProvIfCapAdmin = _ChangeServiceDeployProvIfCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 32),
    _ChangeServiceDeployProvIfCapAdmin_Type()
)
changeServiceDeployProvIfCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAdmin.setStatus("current")
_ChangeServiceDeployProvIfCapAttenuationGradient_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapAttenuationGradient_Object = MibTableColumn
changeServiceDeployProvIfCapAttenuationGradient = _ChangeServiceDeployProvIfCapAttenuationGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 33),
    _ChangeServiceDeployProvIfCapAttenuationGradient_Type()
)
changeServiceDeployProvIfCapAttenuationGradient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAttenuationGradient.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAttenuationGradient.setUnits("0.1 dB/min")
_ChangeServiceDeployProvIfCapSigDegThresReceiver_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegThresReceiver_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresReceiver = _ChangeServiceDeployProvIfCapSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 34),
    _ChangeServiceDeployProvIfCapSigDegThresReceiver_Type()
)
changeServiceDeployProvIfCapSigDegThresReceiver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresReceiver.setUnits("0.1 dB")
_ChangeServiceDeployProvIfCapTcmCLevel_Type = OtnTcmLevelCaps
_ChangeServiceDeployProvIfCapTcmCLevel_Object = MibTableColumn
changeServiceDeployProvIfCapTcmCLevel = _ChangeServiceDeployProvIfCapTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 35),
    _ChangeServiceDeployProvIfCapTcmCLevel_Type()
)
changeServiceDeployProvIfCapTcmCLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTcmCLevel.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegThresOduTcmC_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapSigDegThresOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresOduTcmC = _ChangeServiceDeployProvIfCapSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 36),
    _ChangeServiceDeployProvIfCapSigDegThresOduTcmC_Type()
)
changeServiceDeployProvIfCapSigDegThresOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresOduTcmC.setUnits("%")
_ChangeServiceDeployProvIfCapSigDegPeriodOduTcmC_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegPeriodOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegPeriodOduTcmC = _ChangeServiceDeployProvIfCapSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 37),
    _ChangeServiceDeployProvIfCapSigDegPeriodOduTcmC_Type()
)
changeServiceDeployProvIfCapSigDegPeriodOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodOduTcmC.setUnits("s")
_ChangeServiceDeployProvIfCapDisparityCorrection_Type = EnableStateCaps
_ChangeServiceDeployProvIfCapDisparityCorrection_Object = MibTableColumn
changeServiceDeployProvIfCapDisparityCorrection = _ChangeServiceDeployProvIfCapDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 38),
    _ChangeServiceDeployProvIfCapDisparityCorrection_Type()
)
changeServiceDeployProvIfCapDisparityCorrection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapDisparityCorrection.setStatus("current")
_ChangeServiceDeployProvIfCapIpAddr_Type = FspR7YesNo
_ChangeServiceDeployProvIfCapIpAddr_Object = MibTableColumn
changeServiceDeployProvIfCapIpAddr = _ChangeServiceDeployProvIfCapIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 39),
    _ChangeServiceDeployProvIfCapIpAddr_Type()
)
changeServiceDeployProvIfCapIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapIpAddr.setStatus("current")
_ChangeServiceDeployProvIfCapIpMask_Type = FspR7YesNo
_ChangeServiceDeployProvIfCapIpMask_Object = MibTableColumn
changeServiceDeployProvIfCapIpMask = _ChangeServiceDeployProvIfCapIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 40),
    _ChangeServiceDeployProvIfCapIpMask_Type()
)
changeServiceDeployProvIfCapIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapIpMask.setStatus("current")
_ChangeServiceDeployProvIfCapOspf_Type = FspR7OspfModeCaps
_ChangeServiceDeployProvIfCapOspf_Object = MibTableColumn
changeServiceDeployProvIfCapOspf = _ChangeServiceDeployProvIfCapOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 41),
    _ChangeServiceDeployProvIfCapOspf_Type()
)
changeServiceDeployProvIfCapOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOspf.setStatus("current")
_ChangeServiceDeployProvIfCapMetric_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapMetric_Object = MibTableColumn
changeServiceDeployProvIfCapMetric = _ChangeServiceDeployProvIfCapMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 42),
    _ChangeServiceDeployProvIfCapMetric_Type()
)
changeServiceDeployProvIfCapMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapMetric.setStatus("current")
_ChangeServiceDeployProvIfCapAreaId_Type = FspR7YesNo
_ChangeServiceDeployProvIfCapAreaId_Object = MibTableColumn
changeServiceDeployProvIfCapAreaId = _ChangeServiceDeployProvIfCapAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 43),
    _ChangeServiceDeployProvIfCapAreaId_Type()
)
changeServiceDeployProvIfCapAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAreaId.setStatus("current")
_ChangeServiceDeployProvIfCapTraceFormSonetSection_Type = SonetTraceFormCaps
_ChangeServiceDeployProvIfCapTraceFormSonetSection_Object = MibTableColumn
changeServiceDeployProvIfCapTraceFormSonetSection = _ChangeServiceDeployProvIfCapTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 44),
    _ChangeServiceDeployProvIfCapTraceFormSonetSection_Type()
)
changeServiceDeployProvIfCapTraceFormSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceFormSonetSection.setStatus("current")
_ChangeServiceDeployProvIfCapTraceExpectedSonetSection_Type = Integer32
_ChangeServiceDeployProvIfCapTraceExpectedSonetSection_Object = MibTableColumn
changeServiceDeployProvIfCapTraceExpectedSonetSection = _ChangeServiceDeployProvIfCapTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 45),
    _ChangeServiceDeployProvIfCapTraceExpectedSonetSection_Type()
)
changeServiceDeployProvIfCapTraceExpectedSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceExpectedSonetSection.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitSonetSection_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitSonetSection_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitSonetSection = _ChangeServiceDeployProvIfCapTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 46),
    _ChangeServiceDeployProvIfCapTraceTransmitSonetSection_Type()
)
changeServiceDeployProvIfCapTraceTransmitSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitSonetSection.setStatus("current")
_ChangeServiceDeployProvIfCapTimModeSonetSection_Type = TimModeCaps
_ChangeServiceDeployProvIfCapTimModeSonetSection_Object = MibTableColumn
changeServiceDeployProvIfCapTimModeSonetSection = _ChangeServiceDeployProvIfCapTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 47),
    _ChangeServiceDeployProvIfCapTimModeSonetSection_Type()
)
changeServiceDeployProvIfCapTimModeSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTimModeSonetSection.setStatus("current")
_ChangeServiceDeployProvIfCapTraceExpectedOtu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceExpectedOtu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceExpectedOtu = _ChangeServiceDeployProvIfCapTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 48),
    _ChangeServiceDeployProvIfCapTraceExpectedOtu_Type()
)
changeServiceDeployProvIfCapTraceExpectedOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceExpectedOtu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitSapiOtu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitSapiOtu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitSapiOtu = _ChangeServiceDeployProvIfCapTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 49),
    _ChangeServiceDeployProvIfCapTraceTransmitSapiOtu_Type()
)
changeServiceDeployProvIfCapTraceTransmitSapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitSapiOtu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitDapiOtu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitDapiOtu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitDapiOtu = _ChangeServiceDeployProvIfCapTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 50),
    _ChangeServiceDeployProvIfCapTraceTransmitDapiOtu_Type()
)
changeServiceDeployProvIfCapTraceTransmitDapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitDapiOtu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitOpspOtu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitOpspOtu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitOpspOtu = _ChangeServiceDeployProvIfCapTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 51),
    _ChangeServiceDeployProvIfCapTraceTransmitOpspOtu_Type()
)
changeServiceDeployProvIfCapTraceTransmitOpspOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitOpspOtu.setStatus("current")
_ChangeServiceDeployProvIfCapTimModeOtu_Type = TimModeCaps
_ChangeServiceDeployProvIfCapTimModeOtu_Object = MibTableColumn
changeServiceDeployProvIfCapTimModeOtu = _ChangeServiceDeployProvIfCapTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 52),
    _ChangeServiceDeployProvIfCapTimModeOtu_Type()
)
changeServiceDeployProvIfCapTimModeOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTimModeOtu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceExpectedOdu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceExpectedOdu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceExpectedOdu = _ChangeServiceDeployProvIfCapTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 53),
    _ChangeServiceDeployProvIfCapTraceExpectedOdu_Type()
)
changeServiceDeployProvIfCapTraceExpectedOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceExpectedOdu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitSapiOdu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitSapiOdu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitSapiOdu = _ChangeServiceDeployProvIfCapTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 54),
    _ChangeServiceDeployProvIfCapTraceTransmitSapiOdu_Type()
)
changeServiceDeployProvIfCapTraceTransmitSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitSapiOdu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitDapiOdu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitDapiOdu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitDapiOdu = _ChangeServiceDeployProvIfCapTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 55),
    _ChangeServiceDeployProvIfCapTraceTransmitDapiOdu_Type()
)
changeServiceDeployProvIfCapTraceTransmitDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitDapiOdu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitOpspOdu_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitOpspOdu_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitOpspOdu = _ChangeServiceDeployProvIfCapTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 56),
    _ChangeServiceDeployProvIfCapTraceTransmitOpspOdu_Type()
)
changeServiceDeployProvIfCapTraceTransmitOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitOpspOdu.setStatus("current")
_ChangeServiceDeployProvIfCapTimModeOdu_Type = TimModeCaps
_ChangeServiceDeployProvIfCapTimModeOdu_Object = MibTableColumn
changeServiceDeployProvIfCapTimModeOdu = _ChangeServiceDeployProvIfCapTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 57),
    _ChangeServiceDeployProvIfCapTimModeOdu_Type()
)
changeServiceDeployProvIfCapTimModeOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTimModeOdu.setStatus("current")
_ChangeServiceDeployProvIfCapTraceExpectedOduTcmA_Type = Integer32
_ChangeServiceDeployProvIfCapTraceExpectedOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfCapTraceExpectedOduTcmA = _ChangeServiceDeployProvIfCapTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 58),
    _ChangeServiceDeployProvIfCapTraceExpectedOduTcmA_Type()
)
changeServiceDeployProvIfCapTraceExpectedOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceExpectedOduTcmA.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmA_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitSapiOduTcmA = _ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 59),
    _ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmA_Type()
)
changeServiceDeployProvIfCapTraceTransmitSapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitSapiOduTcmA.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmA_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitDapiOduTcmA = _ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 60),
    _ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmA_Type()
)
changeServiceDeployProvIfCapTraceTransmitDapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitDapiOduTcmA.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmA_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitOpspOduTcmA = _ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 61),
    _ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmA_Type()
)
changeServiceDeployProvIfCapTraceTransmitOpspOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitOpspOduTcmA.setStatus("current")
_ChangeServiceDeployProvIfCapTimModeOduTcmA_Type = TimModeCaps
_ChangeServiceDeployProvIfCapTimModeOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfCapTimModeOduTcmA = _ChangeServiceDeployProvIfCapTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 62),
    _ChangeServiceDeployProvIfCapTimModeOduTcmA_Type()
)
changeServiceDeployProvIfCapTimModeOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTimModeOduTcmA.setStatus("current")
_ChangeServiceDeployProvIfCapTraceExpectedOduTcmB_Type = Integer32
_ChangeServiceDeployProvIfCapTraceExpectedOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfCapTraceExpectedOduTcmB = _ChangeServiceDeployProvIfCapTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 63),
    _ChangeServiceDeployProvIfCapTraceExpectedOduTcmB_Type()
)
changeServiceDeployProvIfCapTraceExpectedOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceExpectedOduTcmB.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmB_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitSapiOduTcmB = _ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 64),
    _ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmB_Type()
)
changeServiceDeployProvIfCapTraceTransmitSapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitSapiOduTcmB.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmB_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitDapiOduTcmB = _ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 65),
    _ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmB_Type()
)
changeServiceDeployProvIfCapTraceTransmitDapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitDapiOduTcmB.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmB_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitOpspOduTcmB = _ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 66),
    _ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmB_Type()
)
changeServiceDeployProvIfCapTraceTransmitOpspOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitOpspOduTcmB.setStatus("current")
_ChangeServiceDeployProvIfCapTimModeOduTcmB_Type = TimModeCaps
_ChangeServiceDeployProvIfCapTimModeOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfCapTimModeOduTcmB = _ChangeServiceDeployProvIfCapTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 67),
    _ChangeServiceDeployProvIfCapTimModeOduTcmB_Type()
)
changeServiceDeployProvIfCapTimModeOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTimModeOduTcmB.setStatus("current")
_ChangeServiceDeployProvIfCapTraceExpectedOduTcmC_Type = Integer32
_ChangeServiceDeployProvIfCapTraceExpectedOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfCapTraceExpectedOduTcmC = _ChangeServiceDeployProvIfCapTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 68),
    _ChangeServiceDeployProvIfCapTraceExpectedOduTcmC_Type()
)
changeServiceDeployProvIfCapTraceExpectedOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceExpectedOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmC_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitSapiOduTcmC = _ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 69),
    _ChangeServiceDeployProvIfCapTraceTransmitSapiOduTcmC_Type()
)
changeServiceDeployProvIfCapTraceTransmitSapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitSapiOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmC_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitDapiOduTcmC = _ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 70),
    _ChangeServiceDeployProvIfCapTraceTransmitDapiOduTcmC_Type()
)
changeServiceDeployProvIfCapTraceTransmitDapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitDapiOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmC_Type = Integer32
_ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfCapTraceTransmitOpspOduTcmC = _ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 71),
    _ChangeServiceDeployProvIfCapTraceTransmitOpspOduTcmC_Type()
)
changeServiceDeployProvIfCapTraceTransmitOpspOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTraceTransmitOpspOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfCapTimModeOduTcmC_Type = TimModeCaps
_ChangeServiceDeployProvIfCapTimModeOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfCapTimModeOduTcmC = _ChangeServiceDeployProvIfCapTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 72),
    _ChangeServiceDeployProvIfCapTimModeOduTcmC_Type()
)
changeServiceDeployProvIfCapTimModeOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTimModeOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfCapChannelProvisioning_Type = FspR7ChannelIdentifierCaps
_ChangeServiceDeployProvIfCapChannelProvisioning_Object = MibTableColumn
changeServiceDeployProvIfCapChannelProvisioning = _ChangeServiceDeployProvIfCapChannelProvisioning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 73),
    _ChangeServiceDeployProvIfCapChannelProvisioning_Type()
)
changeServiceDeployProvIfCapChannelProvisioning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapChannelProvisioning.setStatus("current")
_ChangeServiceDeployProvIfCapVariableGain_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapVariableGain_Object = MibTableColumn
changeServiceDeployProvIfCapVariableGain = _ChangeServiceDeployProvIfCapVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 74),
    _ChangeServiceDeployProvIfCapVariableGain_Type()
)
changeServiceDeployProvIfCapVariableGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapVariableGain.setUnits("0.1 dB")
_ChangeServiceDeployProvIfCapBand_Type = FspR7OpticalBandCaps
_ChangeServiceDeployProvIfCapBand_Object = MibTableColumn
changeServiceDeployProvIfCapBand = _ChangeServiceDeployProvIfCapBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 75),
    _ChangeServiceDeployProvIfCapBand_Type()
)
changeServiceDeployProvIfCapBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapBand.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegThreshold_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegThreshold_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThreshold = _ChangeServiceDeployProvIfCapSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 76),
    _ChangeServiceDeployProvIfCapSigDegThreshold_Type()
)
changeServiceDeployProvIfCapSigDegThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThreshold.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegPeriodIntegration_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegPeriodIntegration_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegPeriodIntegration = _ChangeServiceDeployProvIfCapSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 77),
    _ChangeServiceDeployProvIfCapSigDegPeriodIntegration_Type()
)
changeServiceDeployProvIfCapSigDegPeriodIntegration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodIntegration.setUnits("s")
_ChangeServiceDeployProvIfCapVoaMode_Type = FspR7VoaModeCaps
_ChangeServiceDeployProvIfCapVoaMode_Object = MibTableColumn
changeServiceDeployProvIfCapVoaMode = _ChangeServiceDeployProvIfCapVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 78),
    _ChangeServiceDeployProvIfCapVoaMode_Type()
)
changeServiceDeployProvIfCapVoaMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapVoaMode.setStatus("current")
_ChangeServiceDeployProvIfCapOpticalSetPoint_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapOpticalSetPoint_Object = MibTableColumn
changeServiceDeployProvIfCapOpticalSetPoint = _ChangeServiceDeployProvIfCapOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 79),
    _ChangeServiceDeployProvIfCapOpticalSetPoint_Type()
)
changeServiceDeployProvIfCapOpticalSetPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOpticalSetPoint.setUnits("0.1 dBm")
_ChangeServiceDeployProvIfCapVoaSetpoint_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapVoaSetpoint_Object = MibTableColumn
changeServiceDeployProvIfCapVoaSetpoint = _ChangeServiceDeployProvIfCapVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 80),
    _ChangeServiceDeployProvIfCapVoaSetpoint_Type()
)
changeServiceDeployProvIfCapVoaSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapVoaSetpoint.setUnits("0.1 dB")
_ChangeServiceDeployProvIfCapLanAid_Type = Integer32
_ChangeServiceDeployProvIfCapLanAid_Object = MibTableColumn
changeServiceDeployProvIfCapLanAid = _ChangeServiceDeployProvIfCapLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 81),
    _ChangeServiceDeployProvIfCapLanAid_Type()
)
changeServiceDeployProvIfCapLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLanAid.setStatus("current")
_ChangeServiceDeployProvIfCapAprHighThreshold_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapAprHighThreshold_Object = MibTableColumn
changeServiceDeployProvIfCapAprHighThreshold = _ChangeServiceDeployProvIfCapAprHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 82),
    _ChangeServiceDeployProvIfCapAprHighThreshold_Type()
)
changeServiceDeployProvIfCapAprHighThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAprHighThreshold.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapAprHighThreshold.setUnits("0.1 dBm")
_ChangeServiceDeployProvIfCapPumpPower_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapPumpPower_Object = MibTableColumn
changeServiceDeployProvIfCapPumpPower = _ChangeServiceDeployProvIfCapPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 83),
    _ChangeServiceDeployProvIfCapPumpPower_Type()
)
changeServiceDeployProvIfCapPumpPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapPumpPower.setUnits("0.2 dBm")
_ChangeServiceDeployProvIfCapWdmRxChannel_Type = FspR7ChannelIdentifierCaps
_ChangeServiceDeployProvIfCapWdmRxChannel_Object = MibTableColumn
changeServiceDeployProvIfCapWdmRxChannel = _ChangeServiceDeployProvIfCapWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 84),
    _ChangeServiceDeployProvIfCapWdmRxChannel_Type()
)
changeServiceDeployProvIfCapWdmRxChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapWdmRxChannel.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegThresSonetSection_Type = FspR7BERThresholdSectionCaps
_ChangeServiceDeployProvIfCapSigDegThresSonetSection_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresSonetSection = _ChangeServiceDeployProvIfCapSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 85),
    _ChangeServiceDeployProvIfCapSigDegThresSonetSection_Type()
)
changeServiceDeployProvIfCapSigDegThresSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresSonetSection.setStatus("current")
_ChangeServiceDeployProvIfCapSigDegThresSdhSection_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegThresSdhSection_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegThresSdhSection = _ChangeServiceDeployProvIfCapSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 86),
    _ChangeServiceDeployProvIfCapSigDegThresSdhSection_Type()
)
changeServiceDeployProvIfCapSigDegThresSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegThresSdhSection.setUnits("%")
_ChangeServiceDeployProvIfCapSigDegPeriodSdhSection_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapSigDegPeriodSdhSection_Object = MibTableColumn
changeServiceDeployProvIfCapSigDegPeriodSdhSection = _ChangeServiceDeployProvIfCapSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 87),
    _ChangeServiceDeployProvIfCapSigDegPeriodSdhSection_Type()
)
changeServiceDeployProvIfCapSigDegPeriodSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapSigDegPeriodSdhSection.setUnits("s")
_ChangeServiceDeployProvIfCapDispersionMode_Type = FspR7DispersionModesCaps
_ChangeServiceDeployProvIfCapDispersionMode_Object = MibTableColumn
changeServiceDeployProvIfCapDispersionMode = _ChangeServiceDeployProvIfCapDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 88),
    _ChangeServiceDeployProvIfCapDispersionMode_Type()
)
changeServiceDeployProvIfCapDispersionMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapDispersionMode.setStatus("current")
_ChangeServiceDeployProvIfCapDispersionSetting_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapDispersionSetting_Object = MibTableColumn
changeServiceDeployProvIfCapDispersionSetting = _ChangeServiceDeployProvIfCapDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 89),
    _ChangeServiceDeployProvIfCapDispersionSetting_Type()
)
changeServiceDeployProvIfCapDispersionSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapDispersionSetting.setUnits("ps/nm")
_ChangeServiceDeployProvIfCapIpType_Type = FspR7IpTypeCaps
_ChangeServiceDeployProvIfCapIpType_Object = MibTableColumn
changeServiceDeployProvIfCapIpType = _ChangeServiceDeployProvIfCapIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 90),
    _ChangeServiceDeployProvIfCapIpType_Type()
)
changeServiceDeployProvIfCapIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapIpType.setStatus("current")
_ChangeServiceDeployProvIfCapOffset_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapOffset_Object = MibTableColumn
changeServiceDeployProvIfCapOffset = _ChangeServiceDeployProvIfCapOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 91),
    _ChangeServiceDeployProvIfCapOffset_Type()
)
changeServiceDeployProvIfCapOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOffset.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOffset.setUnits("0.1 dB")
_ChangeServiceDeployProvIfCapFunction_Type = FspR7InterfaceFunctionCaps
_ChangeServiceDeployProvIfCapFunction_Object = MibTableColumn
changeServiceDeployProvIfCapFunction = _ChangeServiceDeployProvIfCapFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 92),
    _ChangeServiceDeployProvIfCapFunction_Type()
)
changeServiceDeployProvIfCapFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapFunction.setStatus("current")
_ChangeServiceDeployProvIfCapFarEndCommunication_Type = FspR7YesNoCaps
_ChangeServiceDeployProvIfCapFarEndCommunication_Object = MibTableColumn
changeServiceDeployProvIfCapFarEndCommunication = _ChangeServiceDeployProvIfCapFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 93),
    _ChangeServiceDeployProvIfCapFarEndCommunication_Type()
)
changeServiceDeployProvIfCapFarEndCommunication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapFarEndCommunication.setStatus("current")
_ChangeServiceDeployProvIfCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_ChangeServiceDeployProvIfCapEqlzAdmin_Object = MibTableColumn
changeServiceDeployProvIfCapEqlzAdmin = _ChangeServiceDeployProvIfCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 94),
    _ChangeServiceDeployProvIfCapEqlzAdmin_Type()
)
changeServiceDeployProvIfCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapEqlzAdmin.setStatus("current")
_ChangeServiceDeployProvIfCapTxOffDelay_Type = FspR7EnableDisableCaps
_ChangeServiceDeployProvIfCapTxOffDelay_Object = MibTableColumn
changeServiceDeployProvIfCapTxOffDelay = _ChangeServiceDeployProvIfCapTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 95),
    _ChangeServiceDeployProvIfCapTxOffDelay_Type()
)
changeServiceDeployProvIfCapTxOffDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapTxOffDelay.setStatus("current")
_ChangeServiceDeployProvIfCapOpuPayloadType_Type = FspR7OpuPayloadTypeCaps
_ChangeServiceDeployProvIfCapOpuPayloadType_Object = MibTableColumn
changeServiceDeployProvIfCapOpuPayloadType = _ChangeServiceDeployProvIfCapOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 96),
    _ChangeServiceDeployProvIfCapOpuPayloadType_Type()
)
changeServiceDeployProvIfCapOpuPayloadType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOpuPayloadType.setStatus("current")
_ChangeServiceDeployProvIfCapOscOpticalSetpoint_Type = FspR7Integer32Caps
_ChangeServiceDeployProvIfCapOscOpticalSetpoint_Object = MibTableColumn
changeServiceDeployProvIfCapOscOpticalSetpoint = _ChangeServiceDeployProvIfCapOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 97),
    _ChangeServiceDeployProvIfCapOscOpticalSetpoint_Type()
)
changeServiceDeployProvIfCapOscOpticalSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapOscOpticalSetpoint.setUnits("0.1 dBm")
_ChangeServiceDeployProvIfCapFiberBrand_Type = FspR7FiberBrandCaps
_ChangeServiceDeployProvIfCapFiberBrand_Object = MibTableColumn
changeServiceDeployProvIfCapFiberBrand = _ChangeServiceDeployProvIfCapFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 98),
    _ChangeServiceDeployProvIfCapFiberBrand_Type()
)
changeServiceDeployProvIfCapFiberBrand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapFiberBrand.setStatus("current")
_ChangeServiceDeployProvIfCapXfpDecisionThres_Type = FspR7XfpDecisionThresCaps
_ChangeServiceDeployProvIfCapXfpDecisionThres_Object = MibTableColumn
changeServiceDeployProvIfCapXfpDecisionThres = _ChangeServiceDeployProvIfCapXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 99),
    _ChangeServiceDeployProvIfCapXfpDecisionThres_Type()
)
changeServiceDeployProvIfCapXfpDecisionThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapXfpDecisionThres.setStatus("current")
_ChangeServiceDeployProvIfCapLaserDelayTimer_Type = FspR7LaserDelayTimerCaps
_ChangeServiceDeployProvIfCapLaserDelayTimer_Object = MibTableColumn
changeServiceDeployProvIfCapLaserDelayTimer = _ChangeServiceDeployProvIfCapLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 100),
    _ChangeServiceDeployProvIfCapLaserDelayTimer_Type()
)
changeServiceDeployProvIfCapLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLaserDelayTimer.setStatus("current")
_ChangeServiceDeployProvIfCapLaserOffTimer_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapLaserOffTimer_Object = MibTableColumn
changeServiceDeployProvIfCapLaserOffTimer = _ChangeServiceDeployProvIfCapLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 101),
    _ChangeServiceDeployProvIfCapLaserOffTimer_Type()
)
changeServiceDeployProvIfCapLaserOffTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLaserOffTimer.setUnits("ms")
_ChangeServiceDeployProvIfCapLaserOnTimer_Type = FspR7Unsigned32Caps
_ChangeServiceDeployProvIfCapLaserOnTimer_Object = MibTableColumn
changeServiceDeployProvIfCapLaserOnTimer = _ChangeServiceDeployProvIfCapLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 102),
    _ChangeServiceDeployProvIfCapLaserOnTimer_Type()
)
changeServiceDeployProvIfCapLaserOnTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLaserOnTimer.setUnits("ms")
_ChangeServiceDeployProvIfCapLaneChannelSetting_Type = FspR7ChannelIdentifierCaps
_ChangeServiceDeployProvIfCapLaneChannelSetting_Object = MibTableColumn
changeServiceDeployProvIfCapLaneChannelSetting = _ChangeServiceDeployProvIfCapLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 103),
    _ChangeServiceDeployProvIfCapLaneChannelSetting_Type()
)
changeServiceDeployProvIfCapLaneChannelSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapLaneChannelSetting.setStatus("current")
_ChangeServiceDeployProvIfCapBip_Type = FspR7BipCaps
_ChangeServiceDeployProvIfCapBip_Object = MibTableColumn
changeServiceDeployProvIfCapBip = _ChangeServiceDeployProvIfCapBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 104),
    _ChangeServiceDeployProvIfCapBip_Type()
)
changeServiceDeployProvIfCapBip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapBip.setStatus("current")
_ChangeServiceDeployProvIfCapCodeGain_Type = FspR7CodeGainCaps
_ChangeServiceDeployProvIfCapCodeGain_Object = MibTableColumn
changeServiceDeployProvIfCapCodeGain = _ChangeServiceDeployProvIfCapCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 41, 1, 105),
    _ChangeServiceDeployProvIfCapCodeGain_Type()
)
changeServiceDeployProvIfCapCodeGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfCapCodeGain.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTable_Object = MibTable
changeServiceDeployProvIfDefaultsTable = _ChangeServiceDeployProvIfDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42)
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTable.setStatus("current")
_ChangeServiceDeployProvIfDefaultsEntry_Object = MibTableRow
changeServiceDeployProvIfDefaultsEntry = _ChangeServiceDeployProvIfDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1)
)
changeServiceDeployProvIfDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsEntry.setStatus("current")
_ChangeServiceDeployProvIfDefaultsRowStatus_Type = RowStatus
_ChangeServiceDeployProvIfDefaultsRowStatus_Object = MibTableColumn
changeServiceDeployProvIfDefaultsRowStatus = _ChangeServiceDeployProvIfDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 1),
    _ChangeServiceDeployProvIfDefaultsRowStatus_Type()
)
changeServiceDeployProvIfDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsRowStatus.setStatus("current")
_ChangeServiceDeployProvIfDefaultsForceDestroy_Type = FspR7ForcedStatus
_ChangeServiceDeployProvIfDefaultsForceDestroy_Object = MibTableColumn
changeServiceDeployProvIfDefaultsForceDestroy = _ChangeServiceDeployProvIfDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 2),
    _ChangeServiceDeployProvIfDefaultsForceDestroy_Type()
)
changeServiceDeployProvIfDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsForceDestroy.setStatus("current")
_ChangeServiceDeployProvIfDefaultsType_Type = FspR7InterfaceType
_ChangeServiceDeployProvIfDefaultsType_Object = MibTableColumn
changeServiceDeployProvIfDefaultsType = _ChangeServiceDeployProvIfDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 3),
    _ChangeServiceDeployProvIfDefaultsType_Type()
)
changeServiceDeployProvIfDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsType.setStatus("current")
_ChangeServiceDeployProvIfDefaultsPayload_Type = OtnPayloadType
_ChangeServiceDeployProvIfDefaultsPayload_Object = MibTableColumn
changeServiceDeployProvIfDefaultsPayload = _ChangeServiceDeployProvIfDefaultsPayload_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 4),
    _ChangeServiceDeployProvIfDefaultsPayload_Type()
)
changeServiceDeployProvIfDefaultsPayload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsPayload.setStatus("current")
_ChangeServiceDeployProvIfDefaultsBehaviour_Type = FspR7PortBehaviour
_ChangeServiceDeployProvIfDefaultsBehaviour_Object = MibTableColumn
changeServiceDeployProvIfDefaultsBehaviour = _ChangeServiceDeployProvIfDefaultsBehaviour_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 5),
    _ChangeServiceDeployProvIfDefaultsBehaviour_Type()
)
changeServiceDeployProvIfDefaultsBehaviour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsBehaviour.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTerminationLevel_Type = OhTerminationLevel
_ChangeServiceDeployProvIfDefaultsTerminationLevel_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTerminationLevel = _ChangeServiceDeployProvIfDefaultsTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 6),
    _ChangeServiceDeployProvIfDefaultsTerminationLevel_Type()
)
changeServiceDeployProvIfDefaultsTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTerminationLevel.setStatus("current")
_ChangeServiceDeployProvIfDefaultsAlsMode_Type = FspR7AlsMode
_ChangeServiceDeployProvIfDefaultsAlsMode_Object = MibTableColumn
changeServiceDeployProvIfDefaultsAlsMode = _ChangeServiceDeployProvIfDefaultsAlsMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 7),
    _ChangeServiceDeployProvIfDefaultsAlsMode_Type()
)
changeServiceDeployProvIfDefaultsAlsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAlsMode.setStatus("current")
_ChangeServiceDeployProvIfDefaultsErrorForwarding_Type = FspR7ErrorFwdMode
_ChangeServiceDeployProvIfDefaultsErrorForwarding_Object = MibTableColumn
changeServiceDeployProvIfDefaultsErrorForwarding = _ChangeServiceDeployProvIfDefaultsErrorForwarding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 8),
    _ChangeServiceDeployProvIfDefaultsErrorForwarding_Type()
)
changeServiceDeployProvIfDefaultsErrorForwarding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsErrorForwarding.setStatus("current")
_ChangeServiceDeployProvIfDefaultsLaserOffDelayFunction_Type = EnableState
_ChangeServiceDeployProvIfDefaultsLaserOffDelayFunction_Object = MibTableColumn
changeServiceDeployProvIfDefaultsLaserOffDelayFunction = _ChangeServiceDeployProvIfDefaultsLaserOffDelayFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 9),
    _ChangeServiceDeployProvIfDefaultsLaserOffDelayFunction_Type()
)
changeServiceDeployProvIfDefaultsLaserOffDelayFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLaserOffDelayFunction.setStatus("current")
_ChangeServiceDeployProvIfDefaultsFecType_Type = FspR7FecType
_ChangeServiceDeployProvIfDefaultsFecType_Object = MibTableColumn
changeServiceDeployProvIfDefaultsFecType = _ChangeServiceDeployProvIfDefaultsFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 10),
    _ChangeServiceDeployProvIfDefaultsFecType_Type()
)
changeServiceDeployProvIfDefaultsFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsFecType.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTimingSource_Type = SonetTimingSource
_ChangeServiceDeployProvIfDefaultsTimingSource_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTimingSource = _ChangeServiceDeployProvIfDefaultsTimingSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 11),
    _ChangeServiceDeployProvIfDefaultsTimingSource_Type()
)
changeServiceDeployProvIfDefaultsTimingSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTimingSource.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTcmALevel_Type = OtnTcmLevel
_ChangeServiceDeployProvIfDefaultsTcmALevel_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTcmALevel = _ChangeServiceDeployProvIfDefaultsTcmALevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 12),
    _ChangeServiceDeployProvIfDefaultsTcmALevel_Type()
)
changeServiceDeployProvIfDefaultsTcmALevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTcmALevel.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTcmBLevel_Type = OtnTcmLevel
_ChangeServiceDeployProvIfDefaultsTcmBLevel_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTcmBLevel = _ChangeServiceDeployProvIfDefaultsTcmBLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 13),
    _ChangeServiceDeployProvIfDefaultsTcmBLevel_Type()
)
changeServiceDeployProvIfDefaultsTcmBLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTcmBLevel.setStatus("current")
_ChangeServiceDeployProvIfDefaultsSigDegThresSonetLine_Type = FspR7BERThreshold
_ChangeServiceDeployProvIfDefaultsSigDegThresSonetLine_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresSonetLine = _ChangeServiceDeployProvIfDefaultsSigDegThresSonetLine_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 14),
    _ChangeServiceDeployProvIfDefaultsSigDegThresSonetLine_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresSonetLine.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresSonetLine.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsSigDegThresSdhMs_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThresSdhMs based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThresSdhMs_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegThresSdhMs_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresSdhMs = _ChangeServiceDeployProvIfDefaultsSigDegThresSdhMs_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 15),
    _ChangeServiceDeployProvIfDefaultsSigDegThresSdhMs_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresSdhMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresSdhMs.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresSdhMs.setUnits("%")


class _ChangeServiceDeployProvIfDefaultsSignalDegradePeriod_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSignalDegradePeriod based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSignalDegradePeriod_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSignalDegradePeriod_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSignalDegradePeriod = _ChangeServiceDeployProvIfDefaultsSignalDegradePeriod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 16),
    _ChangeServiceDeployProvIfDefaultsSignalDegradePeriod_Type()
)
changeServiceDeployProvIfDefaultsSignalDegradePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSignalDegradePeriod.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSignalDegradePeriod.setUnits("s")
_ChangeServiceDeployProvIfDefaultsAutonegotiation_Type = EnableState
_ChangeServiceDeployProvIfDefaultsAutonegotiation_Object = MibTableColumn
changeServiceDeployProvIfDefaultsAutonegotiation = _ChangeServiceDeployProvIfDefaultsAutonegotiation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 17),
    _ChangeServiceDeployProvIfDefaultsAutonegotiation_Type()
)
changeServiceDeployProvIfDefaultsAutonegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAutonegotiation.setStatus("current")
_ChangeServiceDeployProvIfDefaultsBitrate_Type = FspR7Bitrate
_ChangeServiceDeployProvIfDefaultsBitrate_Object = MibTableColumn
changeServiceDeployProvIfDefaultsBitrate = _ChangeServiceDeployProvIfDefaultsBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 18),
    _ChangeServiceDeployProvIfDefaultsBitrate_Type()
)
changeServiceDeployProvIfDefaultsBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsBitrate.setStatus("current")
_ChangeServiceDeployProvIfDefaultsDuplex_Type = EthDuplexMode
_ChangeServiceDeployProvIfDefaultsDuplex_Object = MibTableColumn
changeServiceDeployProvIfDefaultsDuplex = _ChangeServiceDeployProvIfDefaultsDuplex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 19),
    _ChangeServiceDeployProvIfDefaultsDuplex_Type()
)
changeServiceDeployProvIfDefaultsDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsDuplex.setStatus("current")
_ChangeServiceDeployProvIfDefaultsFlowControl_Type = FspR7FlowControlMode
_ChangeServiceDeployProvIfDefaultsFlowControl_Object = MibTableColumn
changeServiceDeployProvIfDefaultsFlowControl = _ChangeServiceDeployProvIfDefaultsFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 20),
    _ChangeServiceDeployProvIfDefaultsFlowControl_Type()
)
changeServiceDeployProvIfDefaultsFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsFlowControl.setStatus("current")
_ChangeServiceDeployProvIfDefaultsOtnStuffing_Type = FspR7Stuff
_ChangeServiceDeployProvIfDefaultsOtnStuffing_Object = MibTableColumn
changeServiceDeployProvIfDefaultsOtnStuffing = _ChangeServiceDeployProvIfDefaultsOtnStuffing_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 21),
    _ChangeServiceDeployProvIfDefaultsOtnStuffing_Type()
)
changeServiceDeployProvIfDefaultsOtnStuffing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOtnStuffing.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsSigDegThresOtu_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThresOtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThresOtu_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsSigDegThresOtu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresOtu = _ChangeServiceDeployProvIfDefaultsSigDegThresOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 22),
    _ChangeServiceDeployProvIfDefaultsSigDegThresOtu_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOtu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOtu.setUnits("%")


class _ChangeServiceDeployProvIfDefaultsSigDegPeriodOtu_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegPeriodOtu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegPeriodOtu_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegPeriodOtu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegPeriodOtu = _ChangeServiceDeployProvIfDefaultsSigDegPeriodOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 23),
    _ChangeServiceDeployProvIfDefaultsSigDegPeriodOtu_Type()
)
changeServiceDeployProvIfDefaultsSigDegPeriodOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOtu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOtu.setUnits("s")


class _ChangeServiceDeployProvIfDefaultsSigDegThresOdu_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThresOdu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThresOdu_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsSigDegThresOdu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresOdu = _ChangeServiceDeployProvIfDefaultsSigDegThresOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 24),
    _ChangeServiceDeployProvIfDefaultsSigDegThresOdu_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOdu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOdu.setUnits("%")


class _ChangeServiceDeployProvIfDefaultsSigDegPeriodOdu_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegPeriodOdu based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegPeriodOdu_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegPeriodOdu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegPeriodOdu = _ChangeServiceDeployProvIfDefaultsSigDegPeriodOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 25),
    _ChangeServiceDeployProvIfDefaultsSigDegPeriodOdu_Type()
)
changeServiceDeployProvIfDefaultsSigDegPeriodOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOdu.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOdu.setUnits("s")


class _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmA_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThresOduTcmA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmA_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresOduTcmA = _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 26),
    _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmA_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOduTcmA.setUnits("%")


class _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA = _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 27),
    _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA_Type()
)
changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA.setUnits("s")


class _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmB_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThresOduTcmB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmB_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresOduTcmB = _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 28),
    _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmB_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOduTcmB.setUnits("%")


class _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB = _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 29),
    _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB_Type()
)
changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB.setUnits("s")


class _ChangeServiceDeployProvIfDefaultsTilt_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsTilt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsTilt_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsTilt_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTilt = _ChangeServiceDeployProvIfDefaultsTilt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 30),
    _ChangeServiceDeployProvIfDefaultsTilt_Type()
)
changeServiceDeployProvIfDefaultsTilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTilt.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTilt.setUnits("0.1 dB")
_ChangeServiceDeployProvIfDefaultsGain_Type = FspR7Gain
_ChangeServiceDeployProvIfDefaultsGain_Object = MibTableColumn
changeServiceDeployProvIfDefaultsGain = _ChangeServiceDeployProvIfDefaultsGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 31),
    _ChangeServiceDeployProvIfDefaultsGain_Type()
)
changeServiceDeployProvIfDefaultsGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsGain.setStatus("current")
_ChangeServiceDeployProvIfDefaultsAdmin_Type = FspR7AdminState
_ChangeServiceDeployProvIfDefaultsAdmin_Object = MibTableColumn
changeServiceDeployProvIfDefaultsAdmin = _ChangeServiceDeployProvIfDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 32),
    _ChangeServiceDeployProvIfDefaultsAdmin_Type()
)
changeServiceDeployProvIfDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAdmin.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsAttenuationGradient_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsAttenuationGradient based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsAttenuationGradient_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsAttenuationGradient_Object = MibTableColumn
changeServiceDeployProvIfDefaultsAttenuationGradient = _ChangeServiceDeployProvIfDefaultsAttenuationGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 33),
    _ChangeServiceDeployProvIfDefaultsAttenuationGradient_Type()
)
changeServiceDeployProvIfDefaultsAttenuationGradient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAttenuationGradient.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAttenuationGradient.setUnits("0.1 dB/min")
_ChangeServiceDeployProvIfDefaultsSigDegThresReceiver_Type = Unsigned32
_ChangeServiceDeployProvIfDefaultsSigDegThresReceiver_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresReceiver = _ChangeServiceDeployProvIfDefaultsSigDegThresReceiver_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 34),
    _ChangeServiceDeployProvIfDefaultsSigDegThresReceiver_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresReceiver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresReceiver.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresReceiver.setUnits("0.1 dB")
_ChangeServiceDeployProvIfDefaultsTcmCLevel_Type = OtnTcmLevel
_ChangeServiceDeployProvIfDefaultsTcmCLevel_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTcmCLevel = _ChangeServiceDeployProvIfDefaultsTcmCLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 35),
    _ChangeServiceDeployProvIfDefaultsTcmCLevel_Type()
)
changeServiceDeployProvIfDefaultsTcmCLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTcmCLevel.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmC_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThresOduTcmC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmC_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresOduTcmC = _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 36),
    _ChangeServiceDeployProvIfDefaultsSigDegThresOduTcmC_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresOduTcmC.setUnits("%")


class _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC = _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 37),
    _ChangeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC_Type()
)
changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC.setUnits("s")
_ChangeServiceDeployProvIfDefaultsDisparityCorrection_Type = EnableState
_ChangeServiceDeployProvIfDefaultsDisparityCorrection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsDisparityCorrection = _ChangeServiceDeployProvIfDefaultsDisparityCorrection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 38),
    _ChangeServiceDeployProvIfDefaultsDisparityCorrection_Type()
)
changeServiceDeployProvIfDefaultsDisparityCorrection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsDisparityCorrection.setStatus("current")
_ChangeServiceDeployProvIfDefaultsIpAddr_Type = IpAddress
_ChangeServiceDeployProvIfDefaultsIpAddr_Object = MibTableColumn
changeServiceDeployProvIfDefaultsIpAddr = _ChangeServiceDeployProvIfDefaultsIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 39),
    _ChangeServiceDeployProvIfDefaultsIpAddr_Type()
)
changeServiceDeployProvIfDefaultsIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsIpAddr.setStatus("current")
_ChangeServiceDeployProvIfDefaultsIpMask_Type = IpAddress
_ChangeServiceDeployProvIfDefaultsIpMask_Object = MibTableColumn
changeServiceDeployProvIfDefaultsIpMask = _ChangeServiceDeployProvIfDefaultsIpMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 40),
    _ChangeServiceDeployProvIfDefaultsIpMask_Type()
)
changeServiceDeployProvIfDefaultsIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsIpMask.setStatus("current")
_ChangeServiceDeployProvIfDefaultsOspf_Type = FspR7OspfMode
_ChangeServiceDeployProvIfDefaultsOspf_Object = MibTableColumn
changeServiceDeployProvIfDefaultsOspf = _ChangeServiceDeployProvIfDefaultsOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 41),
    _ChangeServiceDeployProvIfDefaultsOspf_Type()
)
changeServiceDeployProvIfDefaultsOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOspf.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsMetric_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsMetric_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsMetric_Object = MibTableColumn
changeServiceDeployProvIfDefaultsMetric = _ChangeServiceDeployProvIfDefaultsMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 42),
    _ChangeServiceDeployProvIfDefaultsMetric_Type()
)
changeServiceDeployProvIfDefaultsMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsMetric.setStatus("current")
_ChangeServiceDeployProvIfDefaultsAreaId_Type = IpAddress
_ChangeServiceDeployProvIfDefaultsAreaId_Object = MibTableColumn
changeServiceDeployProvIfDefaultsAreaId = _ChangeServiceDeployProvIfDefaultsAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 43),
    _ChangeServiceDeployProvIfDefaultsAreaId_Type()
)
changeServiceDeployProvIfDefaultsAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAreaId.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTraceFormSonetSection_Type = SonetTraceForm
_ChangeServiceDeployProvIfDefaultsTraceFormSonetSection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceFormSonetSection = _ChangeServiceDeployProvIfDefaultsTraceFormSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 44),
    _ChangeServiceDeployProvIfDefaultsTraceFormSonetSection_Type()
)
changeServiceDeployProvIfDefaultsTraceFormSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceFormSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceExpectedSonetSection_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceExpectedSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_ChangeServiceDeployProvIfDefaultsTraceExpectedSonetSection_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceExpectedSonetSection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceExpectedSonetSection = _ChangeServiceDeployProvIfDefaultsTraceExpectedSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 45),
    _ChangeServiceDeployProvIfDefaultsTraceExpectedSonetSection_Type()
)
changeServiceDeployProvIfDefaultsTraceExpectedSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceExpectedSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitSonetSection_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitSonetSection based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitSonetSection_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitSonetSection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitSonetSection = _ChangeServiceDeployProvIfDefaultsTraceTransmitSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 46),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitSonetSection_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitSonetSection.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTimModeSonetSection_Type = TimMode
_ChangeServiceDeployProvIfDefaultsTimModeSonetSection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTimModeSonetSection = _ChangeServiceDeployProvIfDefaultsTimModeSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 47),
    _ChangeServiceDeployProvIfDefaultsTimModeSonetSection_Type()
)
changeServiceDeployProvIfDefaultsTimModeSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTimModeSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceExpectedOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceExpectedOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceExpectedOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceExpectedOtu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceExpectedOtu = _ChangeServiceDeployProvIfDefaultsTraceExpectedOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 48),
    _ChangeServiceDeployProvIfDefaultsTraceExpectedOtu_Type()
)
changeServiceDeployProvIfDefaultsTraceExpectedOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceExpectedOtu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitSapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOtu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitSapiOtu = _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 49),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOtu_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitSapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitSapiOtu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitDapiOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOtu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitDapiOtu = _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 50),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOtu_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitDapiOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitDapiOtu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOtu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitOpspOtu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOtu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOtu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitOpspOtu = _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 51),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOtu_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitOpspOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitOpspOtu.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTimModeOtu_Type = TimMode
_ChangeServiceDeployProvIfDefaultsTimModeOtu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTimModeOtu = _ChangeServiceDeployProvIfDefaultsTimModeOtu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 52),
    _ChangeServiceDeployProvIfDefaultsTimModeOtu_Type()
)
changeServiceDeployProvIfDefaultsTimModeOtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTimModeOtu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceExpectedOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceExpectedOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceExpectedOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceExpectedOdu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceExpectedOdu = _ChangeServiceDeployProvIfDefaultsTraceExpectedOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 53),
    _ChangeServiceDeployProvIfDefaultsTraceExpectedOdu_Type()
)
changeServiceDeployProvIfDefaultsTraceExpectedOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceExpectedOdu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitSapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOdu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitSapiOdu = _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 54),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOdu_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitSapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitSapiOdu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitDapiOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOdu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitDapiOdu = _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 55),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOdu_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitDapiOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitDapiOdu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOdu_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitOpspOdu based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOdu_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOdu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitOpspOdu = _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 56),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOdu_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitOpspOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitOpspOdu.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTimModeOdu_Type = TimMode
_ChangeServiceDeployProvIfDefaultsTimModeOdu_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTimModeOdu = _ChangeServiceDeployProvIfDefaultsTimModeOdu_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 57),
    _ChangeServiceDeployProvIfDefaultsTimModeOdu_Type()
)
changeServiceDeployProvIfDefaultsTimModeOdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTimModeOdu.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceExpectedOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceExpectedOduTcmA = _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 58),
    _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmA_Type()
)
changeServiceDeployProvIfDefaultsTraceExpectedOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceExpectedOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA = _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 59),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA = _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 60),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA = _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 61),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTimModeOduTcmA_Type = TimMode
_ChangeServiceDeployProvIfDefaultsTimModeOduTcmA_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTimModeOduTcmA = _ChangeServiceDeployProvIfDefaultsTimModeOduTcmA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 62),
    _ChangeServiceDeployProvIfDefaultsTimModeOduTcmA_Type()
)
changeServiceDeployProvIfDefaultsTimModeOduTcmA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTimModeOduTcmA.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceExpectedOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceExpectedOduTcmB = _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 63),
    _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmB_Type()
)
changeServiceDeployProvIfDefaultsTraceExpectedOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceExpectedOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB = _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 64),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB = _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 65),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB = _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 66),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTimModeOduTcmB_Type = TimMode
_ChangeServiceDeployProvIfDefaultsTimModeOduTcmB_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTimModeOduTcmB = _ChangeServiceDeployProvIfDefaultsTimModeOduTcmB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 67),
    _ChangeServiceDeployProvIfDefaultsTimModeOduTcmB_Type()
)
changeServiceDeployProvIfDefaultsTimModeOduTcmB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTimModeOduTcmB.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceExpectedOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceExpectedOduTcmC = _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 68),
    _ChangeServiceDeployProvIfDefaultsTraceExpectedOduTcmC_Type()
)
changeServiceDeployProvIfDefaultsTraceExpectedOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceExpectedOduTcmC.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC = _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 69),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC = _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 70),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC_Type(OctetString):
    """Custom type changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC_Type.__name__ = "OctetString"
_ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC = _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 71),
    _ChangeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC_Type()
)
changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTimModeOduTcmC_Type = TimMode
_ChangeServiceDeployProvIfDefaultsTimModeOduTcmC_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTimModeOduTcmC = _ChangeServiceDeployProvIfDefaultsTimModeOduTcmC_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 72),
    _ChangeServiceDeployProvIfDefaultsTimModeOduTcmC_Type()
)
changeServiceDeployProvIfDefaultsTimModeOduTcmC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTimModeOduTcmC.setStatus("current")
_ChangeServiceDeployProvIfDefaultsChannelProvisioning_Type = FspR7ChannelIdentifier
_ChangeServiceDeployProvIfDefaultsChannelProvisioning_Object = MibTableColumn
changeServiceDeployProvIfDefaultsChannelProvisioning = _ChangeServiceDeployProvIfDefaultsChannelProvisioning_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 73),
    _ChangeServiceDeployProvIfDefaultsChannelProvisioning_Type()
)
changeServiceDeployProvIfDefaultsChannelProvisioning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsChannelProvisioning.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsVariableGain_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsVariableGain based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 350),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsVariableGain_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsVariableGain_Object = MibTableColumn
changeServiceDeployProvIfDefaultsVariableGain = _ChangeServiceDeployProvIfDefaultsVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 74),
    _ChangeServiceDeployProvIfDefaultsVariableGain_Type()
)
changeServiceDeployProvIfDefaultsVariableGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsVariableGain.setUnits("0.1 dB")
_ChangeServiceDeployProvIfDefaultsBand_Type = FspR7OpticalBand
_ChangeServiceDeployProvIfDefaultsBand_Object = MibTableColumn
changeServiceDeployProvIfDefaultsBand = _ChangeServiceDeployProvIfDefaultsBand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 75),
    _ChangeServiceDeployProvIfDefaultsBand_Type()
)
changeServiceDeployProvIfDefaultsBand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsBand.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsSigDegThreshold_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThreshold based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThreshold_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegThreshold_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThreshold = _ChangeServiceDeployProvIfDefaultsSigDegThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 76),
    _ChangeServiceDeployProvIfDefaultsSigDegThreshold_Type()
)
changeServiceDeployProvIfDefaultsSigDegThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThreshold.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsSigDegPeriodIntegration_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegPeriodIntegration based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegPeriodIntegration_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegPeriodIntegration_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegPeriodIntegration = _ChangeServiceDeployProvIfDefaultsSigDegPeriodIntegration_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 77),
    _ChangeServiceDeployProvIfDefaultsSigDegPeriodIntegration_Type()
)
changeServiceDeployProvIfDefaultsSigDegPeriodIntegration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodIntegration.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodIntegration.setUnits("s")
_ChangeServiceDeployProvIfDefaultsVoaMode_Type = FspR7VoaMode
_ChangeServiceDeployProvIfDefaultsVoaMode_Object = MibTableColumn
changeServiceDeployProvIfDefaultsVoaMode = _ChangeServiceDeployProvIfDefaultsVoaMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 78),
    _ChangeServiceDeployProvIfDefaultsVoaMode_Type()
)
changeServiceDeployProvIfDefaultsVoaMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsVoaMode.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsOpticalSetPoint_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsOpticalSetPoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsOpticalSetPoint_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsOpticalSetPoint_Object = MibTableColumn
changeServiceDeployProvIfDefaultsOpticalSetPoint = _ChangeServiceDeployProvIfDefaultsOpticalSetPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 79),
    _ChangeServiceDeployProvIfDefaultsOpticalSetPoint_Type()
)
changeServiceDeployProvIfDefaultsOpticalSetPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOpticalSetPoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOpticalSetPoint.setUnits("0.1 dBm")


class _ChangeServiceDeployProvIfDefaultsVoaSetpoint_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsVoaSetpoint based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsVoaSetpoint_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsVoaSetpoint_Object = MibTableColumn
changeServiceDeployProvIfDefaultsVoaSetpoint = _ChangeServiceDeployProvIfDefaultsVoaSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 80),
    _ChangeServiceDeployProvIfDefaultsVoaSetpoint_Type()
)
changeServiceDeployProvIfDefaultsVoaSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsVoaSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsVoaSetpoint.setUnits("0.1 dB")
_ChangeServiceDeployProvIfDefaultsLanAid_Type = EntityIndex
_ChangeServiceDeployProvIfDefaultsLanAid_Object = MibTableColumn
changeServiceDeployProvIfDefaultsLanAid = _ChangeServiceDeployProvIfDefaultsLanAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 81),
    _ChangeServiceDeployProvIfDefaultsLanAid_Type()
)
changeServiceDeployProvIfDefaultsLanAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLanAid.setStatus("current")
_ChangeServiceDeployProvIfDefaultsAprHighThreshold_Type = Unsigned32
_ChangeServiceDeployProvIfDefaultsAprHighThreshold_Object = MibTableColumn
changeServiceDeployProvIfDefaultsAprHighThreshold = _ChangeServiceDeployProvIfDefaultsAprHighThreshold_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 82),
    _ChangeServiceDeployProvIfDefaultsAprHighThreshold_Type()
)
changeServiceDeployProvIfDefaultsAprHighThreshold.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAprHighThreshold.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsAprHighThreshold.setUnits("0.1 dBm")


class _ChangeServiceDeployProvIfDefaultsPumpPower_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsPumpPower based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(115, 138),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsPumpPower_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsPumpPower_Object = MibTableColumn
changeServiceDeployProvIfDefaultsPumpPower = _ChangeServiceDeployProvIfDefaultsPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 83),
    _ChangeServiceDeployProvIfDefaultsPumpPower_Type()
)
changeServiceDeployProvIfDefaultsPumpPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsPumpPower.setUnits("0.2 dBm")
_ChangeServiceDeployProvIfDefaultsWdmRxChannel_Type = FspR7ChannelIdentifier
_ChangeServiceDeployProvIfDefaultsWdmRxChannel_Object = MibTableColumn
changeServiceDeployProvIfDefaultsWdmRxChannel = _ChangeServiceDeployProvIfDefaultsWdmRxChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 84),
    _ChangeServiceDeployProvIfDefaultsWdmRxChannel_Type()
)
changeServiceDeployProvIfDefaultsWdmRxChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsWdmRxChannel.setStatus("current")
_ChangeServiceDeployProvIfDefaultsSigDegThresSonetSection_Type = FspR7BERThresholdSection
_ChangeServiceDeployProvIfDefaultsSigDegThresSonetSection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresSonetSection = _ChangeServiceDeployProvIfDefaultsSigDegThresSonetSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 85),
    _ChangeServiceDeployProvIfDefaultsSigDegThresSonetSection_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresSonetSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresSonetSection.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsSigDegThresSdhSection_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegThresSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegThresSdhSection_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegThresSdhSection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegThresSdhSection = _ChangeServiceDeployProvIfDefaultsSigDegThresSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 86),
    _ChangeServiceDeployProvIfDefaultsSigDegThresSdhSection_Type()
)
changeServiceDeployProvIfDefaultsSigDegThresSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegThresSdhSection.setUnits("%")


class _ChangeServiceDeployProvIfDefaultsSigDegPeriodSdhSection_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsSigDegPeriodSdhSection based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 10),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsSigDegPeriodSdhSection_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsSigDegPeriodSdhSection_Object = MibTableColumn
changeServiceDeployProvIfDefaultsSigDegPeriodSdhSection = _ChangeServiceDeployProvIfDefaultsSigDegPeriodSdhSection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 87),
    _ChangeServiceDeployProvIfDefaultsSigDegPeriodSdhSection_Type()
)
changeServiceDeployProvIfDefaultsSigDegPeriodSdhSection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodSdhSection.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsSigDegPeriodSdhSection.setUnits("s")
_ChangeServiceDeployProvIfDefaultsDispersionMode_Type = FspR7DispersionModes
_ChangeServiceDeployProvIfDefaultsDispersionMode_Object = MibTableColumn
changeServiceDeployProvIfDefaultsDispersionMode = _ChangeServiceDeployProvIfDefaultsDispersionMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 88),
    _ChangeServiceDeployProvIfDefaultsDispersionMode_Type()
)
changeServiceDeployProvIfDefaultsDispersionMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsDispersionMode.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsDispersionSetting_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsDispersionSetting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsDispersionSetting_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsDispersionSetting_Object = MibTableColumn
changeServiceDeployProvIfDefaultsDispersionSetting = _ChangeServiceDeployProvIfDefaultsDispersionSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 89),
    _ChangeServiceDeployProvIfDefaultsDispersionSetting_Type()
)
changeServiceDeployProvIfDefaultsDispersionSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsDispersionSetting.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsDispersionSetting.setUnits("ps/nm")
_ChangeServiceDeployProvIfDefaultsIpType_Type = FspR7IpType
_ChangeServiceDeployProvIfDefaultsIpType_Object = MibTableColumn
changeServiceDeployProvIfDefaultsIpType = _ChangeServiceDeployProvIfDefaultsIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 90),
    _ChangeServiceDeployProvIfDefaultsIpType_Type()
)
changeServiceDeployProvIfDefaultsIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsIpType.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsOffset_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsOffset_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsOffset_Object = MibTableColumn
changeServiceDeployProvIfDefaultsOffset = _ChangeServiceDeployProvIfDefaultsOffset_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 91),
    _ChangeServiceDeployProvIfDefaultsOffset_Type()
)
changeServiceDeployProvIfDefaultsOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOffset.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOffset.setUnits("0.1 dB")
_ChangeServiceDeployProvIfDefaultsFunction_Type = FspR7InterfaceFunction
_ChangeServiceDeployProvIfDefaultsFunction_Object = MibTableColumn
changeServiceDeployProvIfDefaultsFunction = _ChangeServiceDeployProvIfDefaultsFunction_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 92),
    _ChangeServiceDeployProvIfDefaultsFunction_Type()
)
changeServiceDeployProvIfDefaultsFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsFunction.setStatus("current")
_ChangeServiceDeployProvIfDefaultsFarEndCommunication_Type = FspR7YesNo
_ChangeServiceDeployProvIfDefaultsFarEndCommunication_Object = MibTableColumn
changeServiceDeployProvIfDefaultsFarEndCommunication = _ChangeServiceDeployProvIfDefaultsFarEndCommunication_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 93),
    _ChangeServiceDeployProvIfDefaultsFarEndCommunication_Type()
)
changeServiceDeployProvIfDefaultsFarEndCommunication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsFarEndCommunication.setStatus("current")
_ChangeServiceDeployProvIfDefaultsEqlzAdmin_Type = FspR7EqlzAdminState
_ChangeServiceDeployProvIfDefaultsEqlzAdmin_Object = MibTableColumn
changeServiceDeployProvIfDefaultsEqlzAdmin = _ChangeServiceDeployProvIfDefaultsEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 94),
    _ChangeServiceDeployProvIfDefaultsEqlzAdmin_Type()
)
changeServiceDeployProvIfDefaultsEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsEqlzAdmin.setStatus("current")
_ChangeServiceDeployProvIfDefaultsTxOffDelay_Type = FspR7EnableDisable
_ChangeServiceDeployProvIfDefaultsTxOffDelay_Object = MibTableColumn
changeServiceDeployProvIfDefaultsTxOffDelay = _ChangeServiceDeployProvIfDefaultsTxOffDelay_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 95),
    _ChangeServiceDeployProvIfDefaultsTxOffDelay_Type()
)
changeServiceDeployProvIfDefaultsTxOffDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsTxOffDelay.setStatus("current")
_ChangeServiceDeployProvIfDefaultsOpuPayloadType_Type = FspR7OpuPayloadType
_ChangeServiceDeployProvIfDefaultsOpuPayloadType_Object = MibTableColumn
changeServiceDeployProvIfDefaultsOpuPayloadType = _ChangeServiceDeployProvIfDefaultsOpuPayloadType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 96),
    _ChangeServiceDeployProvIfDefaultsOpuPayloadType_Type()
)
changeServiceDeployProvIfDefaultsOpuPayloadType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOpuPayloadType.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsOscOpticalSetpoint_Type(Integer32):
    """Custom type changeServiceDeployProvIfDefaultsOscOpticalSetpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-250, 50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ChangeServiceDeployProvIfDefaultsOscOpticalSetpoint_Type.__name__ = "Integer32"
_ChangeServiceDeployProvIfDefaultsOscOpticalSetpoint_Object = MibTableColumn
changeServiceDeployProvIfDefaultsOscOpticalSetpoint = _ChangeServiceDeployProvIfDefaultsOscOpticalSetpoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 97),
    _ChangeServiceDeployProvIfDefaultsOscOpticalSetpoint_Type()
)
changeServiceDeployProvIfDefaultsOscOpticalSetpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOscOpticalSetpoint.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsOscOpticalSetpoint.setUnits("0.1 dBm")
_ChangeServiceDeployProvIfDefaultsFiberBrand_Type = FspR7FiberBrand
_ChangeServiceDeployProvIfDefaultsFiberBrand_Object = MibTableColumn
changeServiceDeployProvIfDefaultsFiberBrand = _ChangeServiceDeployProvIfDefaultsFiberBrand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 98),
    _ChangeServiceDeployProvIfDefaultsFiberBrand_Type()
)
changeServiceDeployProvIfDefaultsFiberBrand.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsFiberBrand.setStatus("current")
_ChangeServiceDeployProvIfDefaultsXfpDecisionThres_Type = FspR7XfpDecisionThres
_ChangeServiceDeployProvIfDefaultsXfpDecisionThres_Object = MibTableColumn
changeServiceDeployProvIfDefaultsXfpDecisionThres = _ChangeServiceDeployProvIfDefaultsXfpDecisionThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 99),
    _ChangeServiceDeployProvIfDefaultsXfpDecisionThres_Type()
)
changeServiceDeployProvIfDefaultsXfpDecisionThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsXfpDecisionThres.setStatus("current")
_ChangeServiceDeployProvIfDefaultsLaserDelayTimer_Type = FspR7LaserDelayTimer
_ChangeServiceDeployProvIfDefaultsLaserDelayTimer_Object = MibTableColumn
changeServiceDeployProvIfDefaultsLaserDelayTimer = _ChangeServiceDeployProvIfDefaultsLaserDelayTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 100),
    _ChangeServiceDeployProvIfDefaultsLaserDelayTimer_Type()
)
changeServiceDeployProvIfDefaultsLaserDelayTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLaserDelayTimer.setStatus("current")


class _ChangeServiceDeployProvIfDefaultsLaserOffTimer_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsLaserOffTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsLaserOffTimer_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsLaserOffTimer_Object = MibTableColumn
changeServiceDeployProvIfDefaultsLaserOffTimer = _ChangeServiceDeployProvIfDefaultsLaserOffTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 101),
    _ChangeServiceDeployProvIfDefaultsLaserOffTimer_Type()
)
changeServiceDeployProvIfDefaultsLaserOffTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLaserOffTimer.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLaserOffTimer.setUnits("ms")


class _ChangeServiceDeployProvIfDefaultsLaserOnTimer_Type(Unsigned32):
    """Custom type changeServiceDeployProvIfDefaultsLaserOnTimer based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ChangeServiceDeployProvIfDefaultsLaserOnTimer_Type.__name__ = "Unsigned32"
_ChangeServiceDeployProvIfDefaultsLaserOnTimer_Object = MibTableColumn
changeServiceDeployProvIfDefaultsLaserOnTimer = _ChangeServiceDeployProvIfDefaultsLaserOnTimer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 102),
    _ChangeServiceDeployProvIfDefaultsLaserOnTimer_Type()
)
changeServiceDeployProvIfDefaultsLaserOnTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLaserOnTimer.setStatus("current")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLaserOnTimer.setUnits("ms")
_ChangeServiceDeployProvIfDefaultsLaneChannelSetting_Type = FspR7ChannelIdentifier
_ChangeServiceDeployProvIfDefaultsLaneChannelSetting_Object = MibTableColumn
changeServiceDeployProvIfDefaultsLaneChannelSetting = _ChangeServiceDeployProvIfDefaultsLaneChannelSetting_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 103),
    _ChangeServiceDeployProvIfDefaultsLaneChannelSetting_Type()
)
changeServiceDeployProvIfDefaultsLaneChannelSetting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsLaneChannelSetting.setStatus("current")
_ChangeServiceDeployProvIfDefaultsBip_Type = FspR7Bip
_ChangeServiceDeployProvIfDefaultsBip_Object = MibTableColumn
changeServiceDeployProvIfDefaultsBip = _ChangeServiceDeployProvIfDefaultsBip_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 104),
    _ChangeServiceDeployProvIfDefaultsBip_Type()
)
changeServiceDeployProvIfDefaultsBip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsBip.setStatus("current")
_ChangeServiceDeployProvIfDefaultsCodeGain_Type = FspR7CodeGain
_ChangeServiceDeployProvIfDefaultsCodeGain_Object = MibTableColumn
changeServiceDeployProvIfDefaultsCodeGain = _ChangeServiceDeployProvIfDefaultsCodeGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 42, 1, 105),
    _ChangeServiceDeployProvIfDefaultsCodeGain_Type()
)
changeServiceDeployProvIfDefaultsCodeGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfDefaultsCodeGain.setStatus("current")
_DeployProvOpticalLinkTable_Object = MibTable
deployProvOpticalLinkTable = _DeployProvOpticalLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 43)
)
if mibBuilder.loadTexts:
    deployProvOpticalLinkTable.setStatus("current")
_DeployProvOpticalLinkEntry_Object = MibTableRow
deployProvOpticalLinkEntry = _DeployProvOpticalLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 43, 1)
)
deployProvOpticalLinkEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvOpticalLinkEntry.setStatus("current")
_DeployProvOpticalLinkRowStatus_Type = RowStatus
_DeployProvOpticalLinkRowStatus_Object = MibTableColumn
deployProvOpticalLinkRowStatus = _DeployProvOpticalLinkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 43, 1, 1),
    _DeployProvOpticalLinkRowStatus_Type()
)
deployProvOpticalLinkRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvOpticalLinkRowStatus.setStatus("current")
_DeployProvOpticalLinkTxLineAttenuation_Type = Integer32
_DeployProvOpticalLinkTxLineAttenuation_Object = MibTableColumn
deployProvOpticalLinkTxLineAttenuation = _DeployProvOpticalLinkTxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 43, 1, 2),
    _DeployProvOpticalLinkTxLineAttenuation_Type()
)
deployProvOpticalLinkTxLineAttenuation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvOpticalLinkTxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvOpticalLinkTxLineAttenuation.setUnits("0.1 dB")
_DeployProvOpticalLinkRxLineAttenuation_Type = Integer32
_DeployProvOpticalLinkRxLineAttenuation_Object = MibTableColumn
deployProvOpticalLinkRxLineAttenuation = _DeployProvOpticalLinkRxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 43, 1, 3),
    _DeployProvOpticalLinkRxLineAttenuation_Type()
)
deployProvOpticalLinkRxLineAttenuation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvOpticalLinkRxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvOpticalLinkRxLineAttenuation.setUnits("0.1 dB")
_DeployProvOpticalLinkFarEndLocation_Type = SnmpAdminString
_DeployProvOpticalLinkFarEndLocation_Object = MibTableColumn
deployProvOpticalLinkFarEndLocation = _DeployProvOpticalLinkFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 43, 1, 4),
    _DeployProvOpticalLinkFarEndLocation_Type()
)
deployProvOpticalLinkFarEndLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvOpticalLinkFarEndLocation.setStatus("current")
_DeployProvOpticalLinkCapTable_Object = MibTable
deployProvOpticalLinkCapTable = _DeployProvOpticalLinkCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 44)
)
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapTable.setStatus("current")
_DeployProvOpticalLinkCapEntry_Object = MibTableRow
deployProvOpticalLinkCapEntry = _DeployProvOpticalLinkCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 44, 1)
)
deployProvOpticalLinkCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapEntry.setStatus("current")
_DeployProvOpticalLinkCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvOpticalLinkCapRowStatus_Object = MibTableColumn
deployProvOpticalLinkCapRowStatus = _DeployProvOpticalLinkCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 44, 1, 1),
    _DeployProvOpticalLinkCapRowStatus_Type()
)
deployProvOpticalLinkCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapRowStatus.setStatus("current")
_DeployProvOpticalLinkCapTxLineAttenuation_Type = FspR7Integer32Caps
_DeployProvOpticalLinkCapTxLineAttenuation_Object = MibTableColumn
deployProvOpticalLinkCapTxLineAttenuation = _DeployProvOpticalLinkCapTxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 44, 1, 2),
    _DeployProvOpticalLinkCapTxLineAttenuation_Type()
)
deployProvOpticalLinkCapTxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapTxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapTxLineAttenuation.setUnits("0.1 dB")
_DeployProvOpticalLinkCapRxLineAttenuation_Type = FspR7Integer32Caps
_DeployProvOpticalLinkCapRxLineAttenuation_Object = MibTableColumn
deployProvOpticalLinkCapRxLineAttenuation = _DeployProvOpticalLinkCapRxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 44, 1, 3),
    _DeployProvOpticalLinkCapRxLineAttenuation_Type()
)
deployProvOpticalLinkCapRxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapRxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapRxLineAttenuation.setUnits("0.1 dB")
_DeployProvOpticalLinkCapFarEndLocation_Type = Integer32
_DeployProvOpticalLinkCapFarEndLocation_Object = MibTableColumn
deployProvOpticalLinkCapFarEndLocation = _DeployProvOpticalLinkCapFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 44, 1, 4),
    _DeployProvOpticalLinkCapFarEndLocation_Type()
)
deployProvOpticalLinkCapFarEndLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkCapFarEndLocation.setStatus("current")
_DeployProvOpticalLinkDefaultsTable_Object = MibTable
deployProvOpticalLinkDefaultsTable = _DeployProvOpticalLinkDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 45)
)
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsTable.setStatus("current")
_DeployProvOpticalLinkDefaultsEntry_Object = MibTableRow
deployProvOpticalLinkDefaultsEntry = _DeployProvOpticalLinkDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 45, 1)
)
deployProvOpticalLinkDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsEntry.setStatus("current")
_DeployProvOpticalLinkDefaultsRowStatus_Type = RowStatus
_DeployProvOpticalLinkDefaultsRowStatus_Object = MibTableColumn
deployProvOpticalLinkDefaultsRowStatus = _DeployProvOpticalLinkDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 45, 1, 1),
    _DeployProvOpticalLinkDefaultsRowStatus_Type()
)
deployProvOpticalLinkDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsRowStatus.setStatus("current")
_DeployProvOpticalLinkDefaultsTxLineAttenuation_Type = Integer32
_DeployProvOpticalLinkDefaultsTxLineAttenuation_Object = MibTableColumn
deployProvOpticalLinkDefaultsTxLineAttenuation = _DeployProvOpticalLinkDefaultsTxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 45, 1, 2),
    _DeployProvOpticalLinkDefaultsTxLineAttenuation_Type()
)
deployProvOpticalLinkDefaultsTxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsTxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsTxLineAttenuation.setUnits("0.1 dB")
_DeployProvOpticalLinkDefaultsRxLineAttenuation_Type = Integer32
_DeployProvOpticalLinkDefaultsRxLineAttenuation_Object = MibTableColumn
deployProvOpticalLinkDefaultsRxLineAttenuation = _DeployProvOpticalLinkDefaultsRxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 45, 1, 3),
    _DeployProvOpticalLinkDefaultsRxLineAttenuation_Type()
)
deployProvOpticalLinkDefaultsRxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsRxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsRxLineAttenuation.setUnits("0.1 dB")
_DeployProvOpticalLinkDefaultsFarEndLocation_Type = SnmpAdminString
_DeployProvOpticalLinkDefaultsFarEndLocation_Object = MibTableColumn
deployProvOpticalLinkDefaultsFarEndLocation = _DeployProvOpticalLinkDefaultsFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 45, 1, 4),
    _DeployProvOpticalLinkDefaultsFarEndLocation_Type()
)
deployProvOpticalLinkDefaultsFarEndLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvOpticalLinkDefaultsFarEndLocation.setStatus("current")
_DeployProvVirtualOpticalChannelTable_Object = MibTable
deployProvVirtualOpticalChannelTable = _DeployProvVirtualOpticalChannelTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 46)
)
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelTable.setStatus("current")
_DeployProvVirtualOpticalChannelEntry_Object = MibTableRow
deployProvVirtualOpticalChannelEntry = _DeployProvVirtualOpticalChannelEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 46, 1)
)
deployProvVirtualOpticalChannelEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelEntry.setStatus("current")
_DeployProvVirtualOpticalChannelRowStatus_Type = RowStatus
_DeployProvVirtualOpticalChannelRowStatus_Object = MibTableColumn
deployProvVirtualOpticalChannelRowStatus = _DeployProvVirtualOpticalChannelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 46, 1, 1),
    _DeployProvVirtualOpticalChannelRowStatus_Type()
)
deployProvVirtualOpticalChannelRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelRowStatus.setStatus("current")
_DeployProvVirtualOpticalChannelAlias_Type = SnmpAdminString
_DeployProvVirtualOpticalChannelAlias_Object = MibTableColumn
deployProvVirtualOpticalChannelAlias = _DeployProvVirtualOpticalChannelAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 46, 1, 2),
    _DeployProvVirtualOpticalChannelAlias_Type()
)
deployProvVirtualOpticalChannelAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelAlias.setStatus("current")
_DeployProvVirtualOpticalChannelCapTable_Object = MibTable
deployProvVirtualOpticalChannelCapTable = _DeployProvVirtualOpticalChannelCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 47)
)
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelCapTable.setStatus("current")
_DeployProvVirtualOpticalChannelCapEntry_Object = MibTableRow
deployProvVirtualOpticalChannelCapEntry = _DeployProvVirtualOpticalChannelCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 47, 1)
)
deployProvVirtualOpticalChannelCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelCapEntry.setStatus("current")
_DeployProvVirtualOpticalChannelCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvVirtualOpticalChannelCapRowStatus_Object = MibTableColumn
deployProvVirtualOpticalChannelCapRowStatus = _DeployProvVirtualOpticalChannelCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 47, 1, 1),
    _DeployProvVirtualOpticalChannelCapRowStatus_Type()
)
deployProvVirtualOpticalChannelCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelCapRowStatus.setStatus("current")
_DeployProvVirtualOpticalChannelCapAlias_Type = Integer32
_DeployProvVirtualOpticalChannelCapAlias_Object = MibTableColumn
deployProvVirtualOpticalChannelCapAlias = _DeployProvVirtualOpticalChannelCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 47, 1, 2),
    _DeployProvVirtualOpticalChannelCapAlias_Type()
)
deployProvVirtualOpticalChannelCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelCapAlias.setStatus("current")
_DeployProvVirtualOpticalChannelDefaultsTable_Object = MibTable
deployProvVirtualOpticalChannelDefaultsTable = _DeployProvVirtualOpticalChannelDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 48)
)
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelDefaultsTable.setStatus("current")
_DeployProvVirtualOpticalChannelDefaultsEntry_Object = MibTableRow
deployProvVirtualOpticalChannelDefaultsEntry = _DeployProvVirtualOpticalChannelDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 48, 1)
)
deployProvVirtualOpticalChannelDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelDefaultsEntry.setStatus("current")
_DeployProvVirtualOpticalChannelDefaultsRowStatus_Type = RowStatus
_DeployProvVirtualOpticalChannelDefaultsRowStatus_Object = MibTableColumn
deployProvVirtualOpticalChannelDefaultsRowStatus = _DeployProvVirtualOpticalChannelDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 48, 1, 1),
    _DeployProvVirtualOpticalChannelDefaultsRowStatus_Type()
)
deployProvVirtualOpticalChannelDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelDefaultsRowStatus.setStatus("current")
_DeployProvVirtualOpticalChannelDefaultsAlias_Type = SnmpAdminString
_DeployProvVirtualOpticalChannelDefaultsAlias_Object = MibTableColumn
deployProvVirtualOpticalChannelDefaultsAlias = _DeployProvVirtualOpticalChannelDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 48, 1, 2),
    _DeployProvVirtualOpticalChannelDefaultsAlias_Type()
)
deployProvVirtualOpticalChannelDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvVirtualOpticalChannelDefaultsAlias.setStatus("current")
_DeployProvLogicalIfTable_Object = MibTable
deployProvLogicalIfTable = _DeployProvLogicalIfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49)
)
if mibBuilder.loadTexts:
    deployProvLogicalIfTable.setStatus("current")
_DeployProvLogicalIfEntry_Object = MibTableRow
deployProvLogicalIfEntry = _DeployProvLogicalIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1)
)
deployProvLogicalIfEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLogicalIfEntry.setStatus("current")
_DeployProvLogicalIfRowStatus_Type = RowStatus
_DeployProvLogicalIfRowStatus_Object = MibTableColumn
deployProvLogicalIfRowStatus = _DeployProvLogicalIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 1),
    _DeployProvLogicalIfRowStatus_Type()
)
deployProvLogicalIfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfRowStatus.setStatus("current")
_DeployProvLogicalIfFacilityType_Type = FspR7InterfaceType
_DeployProvLogicalIfFacilityType_Object = MibTableColumn
deployProvLogicalIfFacilityType = _DeployProvLogicalIfFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 2),
    _DeployProvLogicalIfFacilityType_Type()
)
deployProvLogicalIfFacilityType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfFacilityType.setStatus("current")
_DeployProvLogicalIfAlias_Type = SnmpAdminString
_DeployProvLogicalIfAlias_Object = MibTableColumn
deployProvLogicalIfAlias = _DeployProvLogicalIfAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 3),
    _DeployProvLogicalIfAlias_Type()
)
deployProvLogicalIfAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfAlias.setStatus("current")
_DeployProvLogicalIfLanLinkAid_Type = EntityIndex
_DeployProvLogicalIfLanLinkAid_Object = MibTableColumn
deployProvLogicalIfLanLinkAid = _DeployProvLogicalIfLanLinkAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 4),
    _DeployProvLogicalIfLanLinkAid_Type()
)
deployProvLogicalIfLanLinkAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfLanLinkAid.setStatus("current")
_DeployProvLogicalIfAreaId_Type = IpAddress
_DeployProvLogicalIfAreaId_Object = MibTableColumn
deployProvLogicalIfAreaId = _DeployProvLogicalIfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 5),
    _DeployProvLogicalIfAreaId_Type()
)
deployProvLogicalIfAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfAreaId.setStatus("current")


class _DeployProvLogicalIfMetric_Type(Unsigned32):
    """Custom type deployProvLogicalIfMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfMetric_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfMetric_Object = MibTableColumn
deployProvLogicalIfMetric = _DeployProvLogicalIfMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 6),
    _DeployProvLogicalIfMetric_Type()
)
deployProvLogicalIfMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfMetric.setStatus("current")


class _DeployProvLogicalIfHelloInterval_Type(Unsigned32):
    """Custom type deployProvLogicalIfHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfHelloInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfHelloInterval_Object = MibTableColumn
deployProvLogicalIfHelloInterval = _DeployProvLogicalIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 7),
    _DeployProvLogicalIfHelloInterval_Type()
)
deployProvLogicalIfHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfHelloInterval.setUnits("s")


class _DeployProvLogicalIfDeadInterval_Type(Unsigned32):
    """Custom type deployProvLogicalIfDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfDeadInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfDeadInterval_Object = MibTableColumn
deployProvLogicalIfDeadInterval = _DeployProvLogicalIfDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 8),
    _DeployProvLogicalIfDeadInterval_Type()
)
deployProvLogicalIfDeadInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfDeadInterval.setUnits("s")


class _DeployProvLogicalIfPrio_Type(Unsigned32):
    """Custom type deployProvLogicalIfPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfPrio_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfPrio_Object = MibTableColumn
deployProvLogicalIfPrio = _DeployProvLogicalIfPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 9),
    _DeployProvLogicalIfPrio_Type()
)
deployProvLogicalIfPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfPrio.setStatus("current")


class _DeployProvLogicalIfRetransmitInterval_Type(Unsigned32):
    """Custom type deployProvLogicalIfRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfRetransmitInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfRetransmitInterval_Object = MibTableColumn
deployProvLogicalIfRetransmitInterval = _DeployProvLogicalIfRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 10),
    _DeployProvLogicalIfRetransmitInterval_Type()
)
deployProvLogicalIfRetransmitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfRetransmitInterval.setUnits("s")
_DeployProvLogicalIfAuthType_Type = FspR7CpAuthType
_DeployProvLogicalIfAuthType_Object = MibTableColumn
deployProvLogicalIfAuthType = _DeployProvLogicalIfAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 11),
    _DeployProvLogicalIfAuthType_Type()
)
deployProvLogicalIfAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfAuthType.setStatus("current")
_DeployProvLogicalIfAuthString_Type = SnmpAdminString
_DeployProvLogicalIfAuthString_Object = MibTableColumn
deployProvLogicalIfAuthString = _DeployProvLogicalIfAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 12),
    _DeployProvLogicalIfAuthString_Type()
)
deployProvLogicalIfAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfAuthString.setStatus("current")
_DeployProvLogicalIfIpType_Type = FspR7IpType
_DeployProvLogicalIfIpType_Object = MibTableColumn
deployProvLogicalIfIpType = _DeployProvLogicalIfIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 13),
    _DeployProvLogicalIfIpType_Type()
)
deployProvLogicalIfIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfIpType.setStatus("current")
_DeployProvLogicalIfIpAddr_Type = IpAddress
_DeployProvLogicalIfIpAddr_Object = MibTableColumn
deployProvLogicalIfIpAddr = _DeployProvLogicalIfIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 14),
    _DeployProvLogicalIfIpAddr_Type()
)
deployProvLogicalIfIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfIpAddr.setStatus("current")
_DeployProvLogicalIfIpAddrMask_Type = IpAddress
_DeployProvLogicalIfIpAddrMask_Object = MibTableColumn
deployProvLogicalIfIpAddrMask = _DeployProvLogicalIfIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 15),
    _DeployProvLogicalIfIpAddrMask_Type()
)
deployProvLogicalIfIpAddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfIpAddrMask.setStatus("current")
_DeployProvLogicalIfAdmin_Type = FspR7AdminState
_DeployProvLogicalIfAdmin_Object = MibTableColumn
deployProvLogicalIfAdmin = _DeployProvLogicalIfAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 16),
    _DeployProvLogicalIfAdmin_Type()
)
deployProvLogicalIfAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfAdmin.setStatus("current")
_DeployProvLogicalIfDcnAid_Type = EntityIndex
_DeployProvLogicalIfDcnAid_Object = MibTableColumn
deployProvLogicalIfDcnAid = _DeployProvLogicalIfDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 17),
    _DeployProvLogicalIfDcnAid_Type()
)
deployProvLogicalIfDcnAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfDcnAid.setStatus("current")
_DeployProvLogicalIfOspf_Type = FspR7OspfMode
_DeployProvLogicalIfOspf_Object = MibTableColumn
deployProvLogicalIfOspf = _DeployProvLogicalIfOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 18),
    _DeployProvLogicalIfOspf_Type()
)
deployProvLogicalIfOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfOspf.setStatus("current")
_DeployProvLogicalIfEncapsulation_Type = FspR7CpEncapsulation
_DeployProvLogicalIfEncapsulation_Object = MibTableColumn
deployProvLogicalIfEncapsulation = _DeployProvLogicalIfEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 19),
    _DeployProvLogicalIfEncapsulation_Type()
)
deployProvLogicalIfEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfEncapsulation.setStatus("current")
_DeployProvLogicalIfPushedNendIpHeader_Type = IpAddress
_DeployProvLogicalIfPushedNendIpHeader_Object = MibTableColumn
deployProvLogicalIfPushedNendIpHeader = _DeployProvLogicalIfPushedNendIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 20),
    _DeployProvLogicalIfPushedNendIpHeader_Type()
)
deployProvLogicalIfPushedNendIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfPushedNendIpHeader.setStatus("current")
_DeployProvLogicalIfPushedFarEndIpHeader_Type = IpAddress
_DeployProvLogicalIfPushedFarEndIpHeader_Object = MibTableColumn
deployProvLogicalIfPushedFarEndIpHeader = _DeployProvLogicalIfPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 21),
    _DeployProvLogicalIfPushedFarEndIpHeader_Type()
)
deployProvLogicalIfPushedFarEndIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfPushedFarEndIpHeader.setStatus("current")


class _DeployProvLogicalIfTimeToLive_Type(Unsigned32):
    """Custom type deployProvLogicalIfTimeToLive based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfTimeToLive_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfTimeToLive_Object = MibTableColumn
deployProvLogicalIfTimeToLive = _DeployProvLogicalIfTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 49, 1, 22),
    _DeployProvLogicalIfTimeToLive_Type()
)
deployProvLogicalIfTimeToLive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalIfTimeToLive.setStatus("current")
_DeployProvLogicalIfCapTable_Object = MibTable
deployProvLogicalIfCapTable = _DeployProvLogicalIfCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50)
)
if mibBuilder.loadTexts:
    deployProvLogicalIfCapTable.setStatus("current")
_DeployProvLogicalIfCapEntry_Object = MibTableRow
deployProvLogicalIfCapEntry = _DeployProvLogicalIfCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1)
)
deployProvLogicalIfCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLogicalIfCapEntry.setStatus("current")
_DeployProvLogicalIfCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvLogicalIfCapRowStatus_Object = MibTableColumn
deployProvLogicalIfCapRowStatus = _DeployProvLogicalIfCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 1),
    _DeployProvLogicalIfCapRowStatus_Type()
)
deployProvLogicalIfCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapRowStatus.setStatus("current")
_DeployProvLogicalIfCapFacilityType_Type = FspR7InterfaceTypeCaps
_DeployProvLogicalIfCapFacilityType_Object = MibTableColumn
deployProvLogicalIfCapFacilityType = _DeployProvLogicalIfCapFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 2),
    _DeployProvLogicalIfCapFacilityType_Type()
)
deployProvLogicalIfCapFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapFacilityType.setStatus("current")
_DeployProvLogicalIfCapAlias_Type = Integer32
_DeployProvLogicalIfCapAlias_Object = MibTableColumn
deployProvLogicalIfCapAlias = _DeployProvLogicalIfCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 3),
    _DeployProvLogicalIfCapAlias_Type()
)
deployProvLogicalIfCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapAlias.setStatus("current")
_DeployProvLogicalIfCapLanLinkAid_Type = Integer32
_DeployProvLogicalIfCapLanLinkAid_Object = MibTableColumn
deployProvLogicalIfCapLanLinkAid = _DeployProvLogicalIfCapLanLinkAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 4),
    _DeployProvLogicalIfCapLanLinkAid_Type()
)
deployProvLogicalIfCapLanLinkAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapLanLinkAid.setStatus("current")
_DeployProvLogicalIfCapAreaId_Type = FspR7YesNo
_DeployProvLogicalIfCapAreaId_Object = MibTableColumn
deployProvLogicalIfCapAreaId = _DeployProvLogicalIfCapAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 5),
    _DeployProvLogicalIfCapAreaId_Type()
)
deployProvLogicalIfCapAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapAreaId.setStatus("current")
_DeployProvLogicalIfCapMetric_Type = FspR7Unsigned32Caps
_DeployProvLogicalIfCapMetric_Object = MibTableColumn
deployProvLogicalIfCapMetric = _DeployProvLogicalIfCapMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 6),
    _DeployProvLogicalIfCapMetric_Type()
)
deployProvLogicalIfCapMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapMetric.setStatus("current")
_DeployProvLogicalIfCapHelloInterval_Type = FspR7Unsigned32Caps
_DeployProvLogicalIfCapHelloInterval_Object = MibTableColumn
deployProvLogicalIfCapHelloInterval = _DeployProvLogicalIfCapHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 7),
    _DeployProvLogicalIfCapHelloInterval_Type()
)
deployProvLogicalIfCapHelloInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapHelloInterval.setUnits("s")
_DeployProvLogicalIfCapDeadInterval_Type = FspR7Unsigned32Caps
_DeployProvLogicalIfCapDeadInterval_Object = MibTableColumn
deployProvLogicalIfCapDeadInterval = _DeployProvLogicalIfCapDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 8),
    _DeployProvLogicalIfCapDeadInterval_Type()
)
deployProvLogicalIfCapDeadInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapDeadInterval.setUnits("s")
_DeployProvLogicalIfCapPrio_Type = FspR7Unsigned32Caps
_DeployProvLogicalIfCapPrio_Object = MibTableColumn
deployProvLogicalIfCapPrio = _DeployProvLogicalIfCapPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 9),
    _DeployProvLogicalIfCapPrio_Type()
)
deployProvLogicalIfCapPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapPrio.setStatus("current")
_DeployProvLogicalIfCapRetransmitInterval_Type = FspR7Unsigned32Caps
_DeployProvLogicalIfCapRetransmitInterval_Object = MibTableColumn
deployProvLogicalIfCapRetransmitInterval = _DeployProvLogicalIfCapRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 10),
    _DeployProvLogicalIfCapRetransmitInterval_Type()
)
deployProvLogicalIfCapRetransmitInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapRetransmitInterval.setUnits("s")
_DeployProvLogicalIfCapAuthType_Type = FspR7CpAuthTypeCaps
_DeployProvLogicalIfCapAuthType_Object = MibTableColumn
deployProvLogicalIfCapAuthType = _DeployProvLogicalIfCapAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 11),
    _DeployProvLogicalIfCapAuthType_Type()
)
deployProvLogicalIfCapAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapAuthType.setStatus("current")
_DeployProvLogicalIfCapAuthString_Type = Integer32
_DeployProvLogicalIfCapAuthString_Object = MibTableColumn
deployProvLogicalIfCapAuthString = _DeployProvLogicalIfCapAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 12),
    _DeployProvLogicalIfCapAuthString_Type()
)
deployProvLogicalIfCapAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapAuthString.setStatus("current")
_DeployProvLogicalIfCapIpType_Type = FspR7IpTypeCaps
_DeployProvLogicalIfCapIpType_Object = MibTableColumn
deployProvLogicalIfCapIpType = _DeployProvLogicalIfCapIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 13),
    _DeployProvLogicalIfCapIpType_Type()
)
deployProvLogicalIfCapIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapIpType.setStatus("current")
_DeployProvLogicalIfCapIpAddr_Type = FspR7YesNo
_DeployProvLogicalIfCapIpAddr_Object = MibTableColumn
deployProvLogicalIfCapIpAddr = _DeployProvLogicalIfCapIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 14),
    _DeployProvLogicalIfCapIpAddr_Type()
)
deployProvLogicalIfCapIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapIpAddr.setStatus("current")
_DeployProvLogicalIfCapIpAddrMask_Type = FspR7YesNo
_DeployProvLogicalIfCapIpAddrMask_Object = MibTableColumn
deployProvLogicalIfCapIpAddrMask = _DeployProvLogicalIfCapIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 15),
    _DeployProvLogicalIfCapIpAddrMask_Type()
)
deployProvLogicalIfCapIpAddrMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapIpAddrMask.setStatus("current")
_DeployProvLogicalIfCapAdmin_Type = FspR7AdminStateCaps
_DeployProvLogicalIfCapAdmin_Object = MibTableColumn
deployProvLogicalIfCapAdmin = _DeployProvLogicalIfCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 16),
    _DeployProvLogicalIfCapAdmin_Type()
)
deployProvLogicalIfCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapAdmin.setStatus("current")
_DeployProvLogicalIfCapDcnAid_Type = Integer32
_DeployProvLogicalIfCapDcnAid_Object = MibTableColumn
deployProvLogicalIfCapDcnAid = _DeployProvLogicalIfCapDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 17),
    _DeployProvLogicalIfCapDcnAid_Type()
)
deployProvLogicalIfCapDcnAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapDcnAid.setStatus("current")
_DeployProvLogicalIfCapOspf_Type = FspR7OspfModeCaps
_DeployProvLogicalIfCapOspf_Object = MibTableColumn
deployProvLogicalIfCapOspf = _DeployProvLogicalIfCapOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 18),
    _DeployProvLogicalIfCapOspf_Type()
)
deployProvLogicalIfCapOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapOspf.setStatus("current")
_DeployProvLogicalIfCapEncapsulation_Type = FspR7CpEncapsulationCaps
_DeployProvLogicalIfCapEncapsulation_Object = MibTableColumn
deployProvLogicalIfCapEncapsulation = _DeployProvLogicalIfCapEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 19),
    _DeployProvLogicalIfCapEncapsulation_Type()
)
deployProvLogicalIfCapEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapEncapsulation.setStatus("current")
_DeployProvLogicalIfCapPushedNendIpHeader_Type = FspR7YesNo
_DeployProvLogicalIfCapPushedNendIpHeader_Object = MibTableColumn
deployProvLogicalIfCapPushedNendIpHeader = _DeployProvLogicalIfCapPushedNendIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 20),
    _DeployProvLogicalIfCapPushedNendIpHeader_Type()
)
deployProvLogicalIfCapPushedNendIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapPushedNendIpHeader.setStatus("current")
_DeployProvLogicalIfCapPushedFarEndIpHeader_Type = FspR7YesNo
_DeployProvLogicalIfCapPushedFarEndIpHeader_Object = MibTableColumn
deployProvLogicalIfCapPushedFarEndIpHeader = _DeployProvLogicalIfCapPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 21),
    _DeployProvLogicalIfCapPushedFarEndIpHeader_Type()
)
deployProvLogicalIfCapPushedFarEndIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapPushedFarEndIpHeader.setStatus("current")
_DeployProvLogicalIfCapTimeToLive_Type = FspR7Unsigned32Caps
_DeployProvLogicalIfCapTimeToLive_Object = MibTableColumn
deployProvLogicalIfCapTimeToLive = _DeployProvLogicalIfCapTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 50, 1, 22),
    _DeployProvLogicalIfCapTimeToLive_Type()
)
deployProvLogicalIfCapTimeToLive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfCapTimeToLive.setStatus("current")
_DeployProvLogicalIfDefaultsTable_Object = MibTable
deployProvLogicalIfDefaultsTable = _DeployProvLogicalIfDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51)
)
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsTable.setStatus("current")
_DeployProvLogicalIfDefaultsEntry_Object = MibTableRow
deployProvLogicalIfDefaultsEntry = _DeployProvLogicalIfDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1)
)
deployProvLogicalIfDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsEntry.setStatus("current")
_DeployProvLogicalIfDefaultsRowStatus_Type = RowStatus
_DeployProvLogicalIfDefaultsRowStatus_Object = MibTableColumn
deployProvLogicalIfDefaultsRowStatus = _DeployProvLogicalIfDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 1),
    _DeployProvLogicalIfDefaultsRowStatus_Type()
)
deployProvLogicalIfDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsRowStatus.setStatus("current")
_DeployProvLogicalIfDefaultsFacilityType_Type = FspR7InterfaceType
_DeployProvLogicalIfDefaultsFacilityType_Object = MibTableColumn
deployProvLogicalIfDefaultsFacilityType = _DeployProvLogicalIfDefaultsFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 2),
    _DeployProvLogicalIfDefaultsFacilityType_Type()
)
deployProvLogicalIfDefaultsFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsFacilityType.setStatus("current")
_DeployProvLogicalIfDefaultsAlias_Type = SnmpAdminString
_DeployProvLogicalIfDefaultsAlias_Object = MibTableColumn
deployProvLogicalIfDefaultsAlias = _DeployProvLogicalIfDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 3),
    _DeployProvLogicalIfDefaultsAlias_Type()
)
deployProvLogicalIfDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsAlias.setStatus("current")
_DeployProvLogicalIfDefaultsLanLinkAid_Type = EntityIndex
_DeployProvLogicalIfDefaultsLanLinkAid_Object = MibTableColumn
deployProvLogicalIfDefaultsLanLinkAid = _DeployProvLogicalIfDefaultsLanLinkAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 4),
    _DeployProvLogicalIfDefaultsLanLinkAid_Type()
)
deployProvLogicalIfDefaultsLanLinkAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsLanLinkAid.setStatus("current")
_DeployProvLogicalIfDefaultsAreaId_Type = IpAddress
_DeployProvLogicalIfDefaultsAreaId_Object = MibTableColumn
deployProvLogicalIfDefaultsAreaId = _DeployProvLogicalIfDefaultsAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 5),
    _DeployProvLogicalIfDefaultsAreaId_Type()
)
deployProvLogicalIfDefaultsAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsAreaId.setStatus("current")


class _DeployProvLogicalIfDefaultsMetric_Type(Unsigned32):
    """Custom type deployProvLogicalIfDefaultsMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfDefaultsMetric_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfDefaultsMetric_Object = MibTableColumn
deployProvLogicalIfDefaultsMetric = _DeployProvLogicalIfDefaultsMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 6),
    _DeployProvLogicalIfDefaultsMetric_Type()
)
deployProvLogicalIfDefaultsMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsMetric.setStatus("current")


class _DeployProvLogicalIfDefaultsHelloInterval_Type(Unsigned32):
    """Custom type deployProvLogicalIfDefaultsHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfDefaultsHelloInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfDefaultsHelloInterval_Object = MibTableColumn
deployProvLogicalIfDefaultsHelloInterval = _DeployProvLogicalIfDefaultsHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 7),
    _DeployProvLogicalIfDefaultsHelloInterval_Type()
)
deployProvLogicalIfDefaultsHelloInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsHelloInterval.setUnits("s")


class _DeployProvLogicalIfDefaultsDeadInterval_Type(Unsigned32):
    """Custom type deployProvLogicalIfDefaultsDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfDefaultsDeadInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfDefaultsDeadInterval_Object = MibTableColumn
deployProvLogicalIfDefaultsDeadInterval = _DeployProvLogicalIfDefaultsDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 8),
    _DeployProvLogicalIfDefaultsDeadInterval_Type()
)
deployProvLogicalIfDefaultsDeadInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsDeadInterval.setUnits("s")


class _DeployProvLogicalIfDefaultsPrio_Type(Unsigned32):
    """Custom type deployProvLogicalIfDefaultsPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfDefaultsPrio_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfDefaultsPrio_Object = MibTableColumn
deployProvLogicalIfDefaultsPrio = _DeployProvLogicalIfDefaultsPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 9),
    _DeployProvLogicalIfDefaultsPrio_Type()
)
deployProvLogicalIfDefaultsPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsPrio.setStatus("current")


class _DeployProvLogicalIfDefaultsRetransmitInterval_Type(Unsigned32):
    """Custom type deployProvLogicalIfDefaultsRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfDefaultsRetransmitInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfDefaultsRetransmitInterval_Object = MibTableColumn
deployProvLogicalIfDefaultsRetransmitInterval = _DeployProvLogicalIfDefaultsRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 10),
    _DeployProvLogicalIfDefaultsRetransmitInterval_Type()
)
deployProvLogicalIfDefaultsRetransmitInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsRetransmitInterval.setUnits("s")
_DeployProvLogicalIfDefaultsAuthType_Type = FspR7CpAuthType
_DeployProvLogicalIfDefaultsAuthType_Object = MibTableColumn
deployProvLogicalIfDefaultsAuthType = _DeployProvLogicalIfDefaultsAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 11),
    _DeployProvLogicalIfDefaultsAuthType_Type()
)
deployProvLogicalIfDefaultsAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsAuthType.setStatus("current")
_DeployProvLogicalIfDefaultsAuthString_Type = SnmpAdminString
_DeployProvLogicalIfDefaultsAuthString_Object = MibTableColumn
deployProvLogicalIfDefaultsAuthString = _DeployProvLogicalIfDefaultsAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 12),
    _DeployProvLogicalIfDefaultsAuthString_Type()
)
deployProvLogicalIfDefaultsAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsAuthString.setStatus("current")
_DeployProvLogicalIfDefaultsIpType_Type = FspR7IpType
_DeployProvLogicalIfDefaultsIpType_Object = MibTableColumn
deployProvLogicalIfDefaultsIpType = _DeployProvLogicalIfDefaultsIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 13),
    _DeployProvLogicalIfDefaultsIpType_Type()
)
deployProvLogicalIfDefaultsIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsIpType.setStatus("current")
_DeployProvLogicalIfDefaultsIpAddr_Type = IpAddress
_DeployProvLogicalIfDefaultsIpAddr_Object = MibTableColumn
deployProvLogicalIfDefaultsIpAddr = _DeployProvLogicalIfDefaultsIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 14),
    _DeployProvLogicalIfDefaultsIpAddr_Type()
)
deployProvLogicalIfDefaultsIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsIpAddr.setStatus("current")
_DeployProvLogicalIfDefaultsIpAddrMask_Type = IpAddress
_DeployProvLogicalIfDefaultsIpAddrMask_Object = MibTableColumn
deployProvLogicalIfDefaultsIpAddrMask = _DeployProvLogicalIfDefaultsIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 15),
    _DeployProvLogicalIfDefaultsIpAddrMask_Type()
)
deployProvLogicalIfDefaultsIpAddrMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsIpAddrMask.setStatus("current")
_DeployProvLogicalIfDefaultsAdmin_Type = FspR7AdminState
_DeployProvLogicalIfDefaultsAdmin_Object = MibTableColumn
deployProvLogicalIfDefaultsAdmin = _DeployProvLogicalIfDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 16),
    _DeployProvLogicalIfDefaultsAdmin_Type()
)
deployProvLogicalIfDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsAdmin.setStatus("current")
_DeployProvLogicalIfDefaultsDcnAid_Type = EntityIndex
_DeployProvLogicalIfDefaultsDcnAid_Object = MibTableColumn
deployProvLogicalIfDefaultsDcnAid = _DeployProvLogicalIfDefaultsDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 17),
    _DeployProvLogicalIfDefaultsDcnAid_Type()
)
deployProvLogicalIfDefaultsDcnAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsDcnAid.setStatus("current")
_DeployProvLogicalIfDefaultsOspf_Type = FspR7OspfMode
_DeployProvLogicalIfDefaultsOspf_Object = MibTableColumn
deployProvLogicalIfDefaultsOspf = _DeployProvLogicalIfDefaultsOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 18),
    _DeployProvLogicalIfDefaultsOspf_Type()
)
deployProvLogicalIfDefaultsOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsOspf.setStatus("current")
_DeployProvLogicalIfDefaultsEncapsulation_Type = FspR7CpEncapsulation
_DeployProvLogicalIfDefaultsEncapsulation_Object = MibTableColumn
deployProvLogicalIfDefaultsEncapsulation = _DeployProvLogicalIfDefaultsEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 19),
    _DeployProvLogicalIfDefaultsEncapsulation_Type()
)
deployProvLogicalIfDefaultsEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsEncapsulation.setStatus("current")
_DeployProvLogicalIfDefaultsPushedNendIpHeader_Type = IpAddress
_DeployProvLogicalIfDefaultsPushedNendIpHeader_Object = MibTableColumn
deployProvLogicalIfDefaultsPushedNendIpHeader = _DeployProvLogicalIfDefaultsPushedNendIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 20),
    _DeployProvLogicalIfDefaultsPushedNendIpHeader_Type()
)
deployProvLogicalIfDefaultsPushedNendIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsPushedNendIpHeader.setStatus("current")
_DeployProvLogicalIfDefaultsPushedFarEndIpHeader_Type = IpAddress
_DeployProvLogicalIfDefaultsPushedFarEndIpHeader_Object = MibTableColumn
deployProvLogicalIfDefaultsPushedFarEndIpHeader = _DeployProvLogicalIfDefaultsPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 21),
    _DeployProvLogicalIfDefaultsPushedFarEndIpHeader_Type()
)
deployProvLogicalIfDefaultsPushedFarEndIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsPushedFarEndIpHeader.setStatus("current")


class _DeployProvLogicalIfDefaultsTimeToLive_Type(Unsigned32):
    """Custom type deployProvLogicalIfDefaultsTimeToLive based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalIfDefaultsTimeToLive_Type.__name__ = "Unsigned32"
_DeployProvLogicalIfDefaultsTimeToLive_Object = MibTableColumn
deployProvLogicalIfDefaultsTimeToLive = _DeployProvLogicalIfDefaultsTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 51, 1, 22),
    _DeployProvLogicalIfDefaultsTimeToLive_Type()
)
deployProvLogicalIfDefaultsTimeToLive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalIfDefaultsTimeToLive.setStatus("current")
_DeployProvIfLanAidCapsTable_Object = MibTable
deployProvIfLanAidCapsTable = _DeployProvIfLanAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 52)
)
if mibBuilder.loadTexts:
    deployProvIfLanAidCapsTable.setStatus("current")
_DeployProvIfLanAidCapsEntry_Object = MibTableRow
deployProvIfLanAidCapsEntry = _DeployProvIfLanAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 52, 1)
)
deployProvIfLanAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvIfLanAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvIfLanAidCapsEntry.setStatus("current")
_DeployProvIfLanAidCapsIndex_Type = EntityIndex
_DeployProvIfLanAidCapsIndex_Object = MibTableColumn
deployProvIfLanAidCapsIndex = _DeployProvIfLanAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 52, 1, 1),
    _DeployProvIfLanAidCapsIndex_Type()
)
deployProvIfLanAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfLanAidCapsIndex.setStatus("current")
_ChangeServiceDeployProvIfLanAidCapsTable_Object = MibTable
changeServiceDeployProvIfLanAidCapsTable = _ChangeServiceDeployProvIfLanAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 53)
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLanAidCapsTable.setStatus("current")
_ChangeServiceDeployProvIfLanAidCapsEntry_Object = MibTableRow
changeServiceDeployProvIfLanAidCapsEntry = _ChangeServiceDeployProvIfLanAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 53, 1)
)
changeServiceDeployProvIfLanAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "changeServiceDeployProvIfLanAidCapsIndex"),
)
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLanAidCapsEntry.setStatus("current")
_ChangeServiceDeployProvIfLanAidCapsIndex_Type = EntityIndex
_ChangeServiceDeployProvIfLanAidCapsIndex_Object = MibTableColumn
changeServiceDeployProvIfLanAidCapsIndex = _ChangeServiceDeployProvIfLanAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 53, 1, 1),
    _ChangeServiceDeployProvIfLanAidCapsIndex_Type()
)
changeServiceDeployProvIfLanAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    changeServiceDeployProvIfLanAidCapsIndex.setStatus("current")
_DeployProvIfVethAidCapsTable_Object = MibTable
deployProvIfVethAidCapsTable = _DeployProvIfVethAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 54)
)
if mibBuilder.loadTexts:
    deployProvIfVethAidCapsTable.setStatus("current")
_DeployProvIfVethAidCapsEntry_Object = MibTableRow
deployProvIfVethAidCapsEntry = _DeployProvIfVethAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 54, 1)
)
deployProvIfVethAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvIfVethAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvIfVethAidCapsEntry.setStatus("current")
_DeployProvIfVethAidCapsIndex_Type = EntityIndex
_DeployProvIfVethAidCapsIndex_Object = MibTableColumn
deployProvIfVethAidCapsIndex = _DeployProvIfVethAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 54, 1, 1),
    _DeployProvIfVethAidCapsIndex_Type()
)
deployProvIfVethAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvIfVethAidCapsIndex.setStatus("current")
_DeployProvDcnExternalVidCapsTable_Object = MibTable
deployProvDcnExternalVidCapsTable = _DeployProvDcnExternalVidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 55)
)
if mibBuilder.loadTexts:
    deployProvDcnExternalVidCapsTable.setStatus("current")
_DeployProvDcnExternalVidCapsEntry_Object = MibTableRow
deployProvDcnExternalVidCapsEntry = _DeployProvDcnExternalVidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 55, 1)
)
deployProvDcnExternalVidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvDcnExternalVidCapsIndexCap"),
)
if mibBuilder.loadTexts:
    deployProvDcnExternalVidCapsEntry.setStatus("current")
_DeployProvDcnExternalVidCapsIndexCap_Type = EntityIndex
_DeployProvDcnExternalVidCapsIndexCap_Object = MibTableColumn
deployProvDcnExternalVidCapsIndexCap = _DeployProvDcnExternalVidCapsIndexCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 55, 1, 1),
    _DeployProvDcnExternalVidCapsIndexCap_Type()
)
deployProvDcnExternalVidCapsIndexCap.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    deployProvDcnExternalVidCapsIndexCap.setStatus("current")
_DeployProvDcnExternalVidCapsStringCap_Type = SnmpAdminString
_DeployProvDcnExternalVidCapsStringCap_Object = MibTableColumn
deployProvDcnExternalVidCapsStringCap = _DeployProvDcnExternalVidCapsStringCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 55, 1, 2),
    _DeployProvDcnExternalVidCapsStringCap_Type()
)
deployProvDcnExternalVidCapsStringCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnExternalVidCapsStringCap.setStatus("current")
_DeployProvDcnLanAidCapsTable_Object = MibTable
deployProvDcnLanAidCapsTable = _DeployProvDcnLanAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 56)
)
if mibBuilder.loadTexts:
    deployProvDcnLanAidCapsTable.setStatus("current")
_DeployProvDcnLanAidCapsEntry_Object = MibTableRow
deployProvDcnLanAidCapsEntry = _DeployProvDcnLanAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 56, 1)
)
deployProvDcnLanAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvDcnLanAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvDcnLanAidCapsEntry.setStatus("current")
_DeployProvDcnLanAidCapsIndex_Type = EntityIndex
_DeployProvDcnLanAidCapsIndex_Object = MibTableColumn
deployProvDcnLanAidCapsIndex = _DeployProvDcnLanAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 56, 1, 1),
    _DeployProvDcnLanAidCapsIndex_Type()
)
deployProvDcnLanAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvDcnLanAidCapsIndex.setStatus("current")
_DeployProvExChannelTable_Object = MibTable
deployProvExChannelTable = _DeployProvExChannelTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57)
)
if mibBuilder.loadTexts:
    deployProvExChannelTable.setStatus("current")
_DeployProvExChannelEntry_Object = MibTableRow
deployProvExChannelEntry = _DeployProvExChannelEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1)
)
deployProvExChannelEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvExChannelEntry.setStatus("current")
_DeployProvExChannelRowStatus_Type = RowStatus
_DeployProvExChannelRowStatus_Object = MibTableColumn
deployProvExChannelRowStatus = _DeployProvExChannelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 1),
    _DeployProvExChannelRowStatus_Type()
)
deployProvExChannelRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelRowStatus.setStatus("current")
_DeployProvExChannelType_Type = FspR7InterfaceType
_DeployProvExChannelType_Object = MibTableColumn
deployProvExChannelType = _DeployProvExChannelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 2),
    _DeployProvExChannelType_Type()
)
deployProvExChannelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelType.setStatus("current")
_DeployProvExChannelTransmitChannel_Type = FspR7ChannelIdentifier
_DeployProvExChannelTransmitChannel_Object = MibTableColumn
deployProvExChannelTransmitChannel = _DeployProvExChannelTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 3),
    _DeployProvExChannelTransmitChannel_Type()
)
deployProvExChannelTransmitChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelTransmitChannel.setStatus("current")
_DeployProvExChannelChannelBandwith_Type = FspR7ChannelBandwidth
_DeployProvExChannelChannelBandwith_Object = MibTableColumn
deployProvExChannelChannelBandwith = _DeployProvExChannelChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 4),
    _DeployProvExChannelChannelBandwith_Type()
)
deployProvExChannelChannelBandwith.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelChannelBandwith.setStatus("current")
_DeployProvExChannelAlias_Type = SnmpAdminString
_DeployProvExChannelAlias_Object = MibTableColumn
deployProvExChannelAlias = _DeployProvExChannelAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 5),
    _DeployProvExChannelAlias_Type()
)
deployProvExChannelAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelAlias.setStatus("current")
_DeployProvExChannelFarEndLocation_Type = SnmpAdminString
_DeployProvExChannelFarEndLocation_Object = MibTableColumn
deployProvExChannelFarEndLocation = _DeployProvExChannelFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 6),
    _DeployProvExChannelFarEndLocation_Type()
)
deployProvExChannelFarEndLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelFarEndLocation.setStatus("current")
_DeployProvExChannelBitrate_Type = Unsigned32
_DeployProvExChannelBitrate_Object = MibTableColumn
deployProvExChannelBitrate = _DeployProvExChannelBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 7),
    _DeployProvExChannelBitrate_Type()
)
deployProvExChannelBitrate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelBitrate.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelBitrate.setUnits("Mbit/s")
_DeployProvExChannelFecType_Type = FspR7FecType
_DeployProvExChannelFecType_Object = MibTableColumn
deployProvExChannelFecType = _DeployProvExChannelFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 8),
    _DeployProvExChannelFecType_Type()
)
deployProvExChannelFecType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelFecType.setStatus("current")
_DeployProvExChannelLineCoding_Type = FspR7LineCoding
_DeployProvExChannelLineCoding_Object = MibTableColumn
deployProvExChannelLineCoding = _DeployProvExChannelLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 9),
    _DeployProvExChannelLineCoding_Type()
)
deployProvExChannelLineCoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelLineCoding.setStatus("current")
_DeployProvExChannelFrameFormat_Type = FspR7FrameFormat
_DeployProvExChannelFrameFormat_Object = MibTableColumn
deployProvExChannelFrameFormat = _DeployProvExChannelFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 10),
    _DeployProvExChannelFrameFormat_Type()
)
deployProvExChannelFrameFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelFrameFormat.setStatus("current")


class _DeployProvExChannelOpticalPowerTx_Type(Integer32):
    """Custom type deployProvExChannelOpticalPowerTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-9900, 600),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelOpticalPowerTx_Type.__name__ = "Integer32"
_DeployProvExChannelOpticalPowerTx_Object = MibTableColumn
deployProvExChannelOpticalPowerTx = _DeployProvExChannelOpticalPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 11),
    _DeployProvExChannelOpticalPowerTx_Type()
)
deployProvExChannelOpticalPowerTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelOpticalPowerTx.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelOpticalPowerTx.setUnits("0.1 dBm")


class _DeployProvExChannelOSNRTransmit_Type(Unsigned32):
    """Custom type deployProvExChannelOSNRTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelOSNRTransmit_Type.__name__ = "Unsigned32"
_DeployProvExChannelOSNRTransmit_Object = MibTableColumn
deployProvExChannelOSNRTransmit = _DeployProvExChannelOSNRTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 12),
    _DeployProvExChannelOSNRTransmit_Type()
)
deployProvExChannelOSNRTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelOSNRTransmit.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelOSNRTransmit.setUnits("dB")


class _DeployProvExChannelPMDTransmit_Type(Unsigned32):
    """Custom type deployProvExChannelPMDTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelPMDTransmit_Type.__name__ = "Unsigned32"
_DeployProvExChannelPMDTransmit_Object = MibTableColumn
deployProvExChannelPMDTransmit = _DeployProvExChannelPMDTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 13),
    _DeployProvExChannelPMDTransmit_Type()
)
deployProvExChannelPMDTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelPMDTransmit.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelPMDTransmit.setUnits("ps")


class _DeployProvExChannelChromaticDispersionTx_Type(Integer32):
    """Custom type deployProvExChannelChromaticDispersionTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelChromaticDispersionTx_Type.__name__ = "Integer32"
_DeployProvExChannelChromaticDispersionTx_Object = MibTableColumn
deployProvExChannelChromaticDispersionTx = _DeployProvExChannelChromaticDispersionTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 14),
    _DeployProvExChannelChromaticDispersionTx_Type()
)
deployProvExChannelChromaticDispersionTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelChromaticDispersionTx.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelChromaticDispersionTx.setUnits("ps/nm")


class _DeployProvExChannelMinimumOSNRRcv_Type(Unsigned32):
    """Custom type deployProvExChannelMinimumOSNRRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelMinimumOSNRRcv_Type.__name__ = "Unsigned32"
_DeployProvExChannelMinimumOSNRRcv_Object = MibTableColumn
deployProvExChannelMinimumOSNRRcv = _DeployProvExChannelMinimumOSNRRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 15),
    _DeployProvExChannelMinimumOSNRRcv_Type()
)
deployProvExChannelMinimumOSNRRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelMinimumOSNRRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelMinimumOSNRRcv.setUnits("dB")


class _DeployProvExChannelMinimumOpticalPowerRcv_Type(Integer32):
    """Custom type deployProvExChannelMinimumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelMinimumOpticalPowerRcv_Type.__name__ = "Integer32"
_DeployProvExChannelMinimumOpticalPowerRcv_Object = MibTableColumn
deployProvExChannelMinimumOpticalPowerRcv = _DeployProvExChannelMinimumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 16),
    _DeployProvExChannelMinimumOpticalPowerRcv_Type()
)
deployProvExChannelMinimumOpticalPowerRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelMinimumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelMinimumOpticalPowerRcv.setUnits("0.1 dBm")


class _DeployProvExChannelMaximumOpticalPowerRcv_Type(Integer32):
    """Custom type deployProvExChannelMaximumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1000, 1000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelMaximumOpticalPowerRcv_Type.__name__ = "Integer32"
_DeployProvExChannelMaximumOpticalPowerRcv_Object = MibTableColumn
deployProvExChannelMaximumOpticalPowerRcv = _DeployProvExChannelMaximumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 17),
    _DeployProvExChannelMaximumOpticalPowerRcv_Type()
)
deployProvExChannelMaximumOpticalPowerRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelMaximumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelMaximumOpticalPowerRcv.setUnits("0.1 dBm")


class _DeployProvExChannelMaximumPMDRcv_Type(Unsigned32):
    """Custom type deployProvExChannelMaximumPMDRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelMaximumPMDRcv_Type.__name__ = "Unsigned32"
_DeployProvExChannelMaximumPMDRcv_Object = MibTableColumn
deployProvExChannelMaximumPMDRcv = _DeployProvExChannelMaximumPMDRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 18),
    _DeployProvExChannelMaximumPMDRcv_Type()
)
deployProvExChannelMaximumPMDRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelMaximumPMDRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelMaximumPMDRcv.setUnits("ps")


class _DeployProvExChannelChromaticDispersionRcv_Type(Integer32):
    """Custom type deployProvExChannelChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelChromaticDispersionRcv_Type.__name__ = "Integer32"
_DeployProvExChannelChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelChromaticDispersionRcv = _DeployProvExChannelChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 19),
    _DeployProvExChannelChromaticDispersionRcv_Type()
)
deployProvExChannelChromaticDispersionRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelChromaticDispersionRcv.setStatus("deprecated")
if mibBuilder.loadTexts:
    deployProvExChannelChromaticDispersionRcv.setUnits("ps/nm")
_DeployProvExChannelMaxBitErrorRate_Type = FspR7MaxBitErrorRate
_DeployProvExChannelMaxBitErrorRate_Object = MibTableColumn
deployProvExChannelMaxBitErrorRate = _DeployProvExChannelMaxBitErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 20),
    _DeployProvExChannelMaxBitErrorRate_Type()
)
deployProvExChannelMaxBitErrorRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelMaxBitErrorRate.setStatus("current")


class _DeployProvExChannelMinChromaticDispersionRcv_Type(Integer32):
    """Custom type deployProvExChannelMinChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelMinChromaticDispersionRcv_Type.__name__ = "Integer32"
_DeployProvExChannelMinChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelMinChromaticDispersionRcv = _DeployProvExChannelMinChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 21),
    _DeployProvExChannelMinChromaticDispersionRcv_Type()
)
deployProvExChannelMinChromaticDispersionRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelMinChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelMinChromaticDispersionRcv.setUnits("ps/nm")


class _DeployProvExChannelMaxChromaticDispersionRcv_Type(Integer32):
    """Custom type deployProvExChannelMaxChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelMaxChromaticDispersionRcv_Type.__name__ = "Integer32"
_DeployProvExChannelMaxChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelMaxChromaticDispersionRcv = _DeployProvExChannelMaxChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 22),
    _DeployProvExChannelMaxChromaticDispersionRcv_Type()
)
deployProvExChannelMaxChromaticDispersionRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelMaxChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelMaxChromaticDispersionRcv.setUnits("ps/nm")
_DeployProvExChannelSourceProfile_Type = SnmpAdminString
_DeployProvExChannelSourceProfile_Object = MibTableColumn
deployProvExChannelSourceProfile = _DeployProvExChannelSourceProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 57, 1, 23),
    _DeployProvExChannelSourceProfile_Type()
)
deployProvExChannelSourceProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvExChannelSourceProfile.setStatus("current")
_DeployProvExChannelCapTable_Object = MibTable
deployProvExChannelCapTable = _DeployProvExChannelCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58)
)
if mibBuilder.loadTexts:
    deployProvExChannelCapTable.setStatus("current")
_DeployProvExChannelCapEntry_Object = MibTableRow
deployProvExChannelCapEntry = _DeployProvExChannelCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1)
)
deployProvExChannelCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvExChannelCapEntry.setStatus("current")
_DeployProvExChannelCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvExChannelCapRowStatus_Object = MibTableColumn
deployProvExChannelCapRowStatus = _DeployProvExChannelCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 1),
    _DeployProvExChannelCapRowStatus_Type()
)
deployProvExChannelCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapRowStatus.setStatus("current")
_DeployProvExChannelCapType_Type = FspR7InterfaceTypeCaps
_DeployProvExChannelCapType_Object = MibTableColumn
deployProvExChannelCapType = _DeployProvExChannelCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 2),
    _DeployProvExChannelCapType_Type()
)
deployProvExChannelCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapType.setStatus("current")
_DeployProvExChannelCapTransmitChannel_Type = FspR7ChannelIdentifierCaps
_DeployProvExChannelCapTransmitChannel_Object = MibTableColumn
deployProvExChannelCapTransmitChannel = _DeployProvExChannelCapTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 3),
    _DeployProvExChannelCapTransmitChannel_Type()
)
deployProvExChannelCapTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapTransmitChannel.setStatus("current")
_DeployProvExChannelCapChannelBandwith_Type = FspR7ChannelBandwidthCaps
_DeployProvExChannelCapChannelBandwith_Object = MibTableColumn
deployProvExChannelCapChannelBandwith = _DeployProvExChannelCapChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 4),
    _DeployProvExChannelCapChannelBandwith_Type()
)
deployProvExChannelCapChannelBandwith.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapChannelBandwith.setStatus("current")
_DeployProvExChannelCapAlias_Type = Integer32
_DeployProvExChannelCapAlias_Object = MibTableColumn
deployProvExChannelCapAlias = _DeployProvExChannelCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 5),
    _DeployProvExChannelCapAlias_Type()
)
deployProvExChannelCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapAlias.setStatus("current")
_DeployProvExChannelCapFarEndLocation_Type = Integer32
_DeployProvExChannelCapFarEndLocation_Object = MibTableColumn
deployProvExChannelCapFarEndLocation = _DeployProvExChannelCapFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 6),
    _DeployProvExChannelCapFarEndLocation_Type()
)
deployProvExChannelCapFarEndLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapFarEndLocation.setStatus("current")
_DeployProvExChannelCapBitrate_Type = FspR7Unsigned32Caps
_DeployProvExChannelCapBitrate_Object = MibTableColumn
deployProvExChannelCapBitrate = _DeployProvExChannelCapBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 7),
    _DeployProvExChannelCapBitrate_Type()
)
deployProvExChannelCapBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapBitrate.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapBitrate.setUnits("Mbit/s")
_DeployProvExChannelCapFecType_Type = FspR7FecTypeCaps
_DeployProvExChannelCapFecType_Object = MibTableColumn
deployProvExChannelCapFecType = _DeployProvExChannelCapFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 8),
    _DeployProvExChannelCapFecType_Type()
)
deployProvExChannelCapFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapFecType.setStatus("current")
_DeployProvExChannelCapLineCoding_Type = FspR7LineCodingCaps
_DeployProvExChannelCapLineCoding_Object = MibTableColumn
deployProvExChannelCapLineCoding = _DeployProvExChannelCapLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 9),
    _DeployProvExChannelCapLineCoding_Type()
)
deployProvExChannelCapLineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapLineCoding.setStatus("current")
_DeployProvExChannelCapFrameFormat_Type = FspR7FrameFormatCaps
_DeployProvExChannelCapFrameFormat_Object = MibTableColumn
deployProvExChannelCapFrameFormat = _DeployProvExChannelCapFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 10),
    _DeployProvExChannelCapFrameFormat_Type()
)
deployProvExChannelCapFrameFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapFrameFormat.setStatus("current")
_DeployProvExChannelCapOpticalPowerTx_Type = FspR7Integer32Caps
_DeployProvExChannelCapOpticalPowerTx_Object = MibTableColumn
deployProvExChannelCapOpticalPowerTx = _DeployProvExChannelCapOpticalPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 11),
    _DeployProvExChannelCapOpticalPowerTx_Type()
)
deployProvExChannelCapOpticalPowerTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapOpticalPowerTx.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapOpticalPowerTx.setUnits("0.1 dBm")
_DeployProvExChannelCapOSNRTransmit_Type = FspR7Unsigned32Caps
_DeployProvExChannelCapOSNRTransmit_Object = MibTableColumn
deployProvExChannelCapOSNRTransmit = _DeployProvExChannelCapOSNRTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 12),
    _DeployProvExChannelCapOSNRTransmit_Type()
)
deployProvExChannelCapOSNRTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapOSNRTransmit.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapOSNRTransmit.setUnits("dB")
_DeployProvExChannelCapPMDTransmit_Type = FspR7Unsigned32Caps
_DeployProvExChannelCapPMDTransmit_Object = MibTableColumn
deployProvExChannelCapPMDTransmit = _DeployProvExChannelCapPMDTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 13),
    _DeployProvExChannelCapPMDTransmit_Type()
)
deployProvExChannelCapPMDTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapPMDTransmit.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapPMDTransmit.setUnits("ps")
_DeployProvExChannelCapChromaticDispersionTx_Type = FspR7Integer32Caps
_DeployProvExChannelCapChromaticDispersionTx_Object = MibTableColumn
deployProvExChannelCapChromaticDispersionTx = _DeployProvExChannelCapChromaticDispersionTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 14),
    _DeployProvExChannelCapChromaticDispersionTx_Type()
)
deployProvExChannelCapChromaticDispersionTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapChromaticDispersionTx.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapChromaticDispersionTx.setUnits("ps/nm")
_DeployProvExChannelCapMinimumOSNRRcv_Type = FspR7Unsigned32Caps
_DeployProvExChannelCapMinimumOSNRRcv_Object = MibTableColumn
deployProvExChannelCapMinimumOSNRRcv = _DeployProvExChannelCapMinimumOSNRRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 15),
    _DeployProvExChannelCapMinimumOSNRRcv_Type()
)
deployProvExChannelCapMinimumOSNRRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapMinimumOSNRRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapMinimumOSNRRcv.setUnits("dB")
_DeployProvExChannelCapMinimumOpticalPowerRcv_Type = FspR7Integer32Caps
_DeployProvExChannelCapMinimumOpticalPowerRcv_Object = MibTableColumn
deployProvExChannelCapMinimumOpticalPowerRcv = _DeployProvExChannelCapMinimumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 16),
    _DeployProvExChannelCapMinimumOpticalPowerRcv_Type()
)
deployProvExChannelCapMinimumOpticalPowerRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapMinimumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapMinimumOpticalPowerRcv.setUnits("0.1 dBm")
_DeployProvExChannelCapMaximumOpticalPowerRcv_Type = FspR7Integer32Caps
_DeployProvExChannelCapMaximumOpticalPowerRcv_Object = MibTableColumn
deployProvExChannelCapMaximumOpticalPowerRcv = _DeployProvExChannelCapMaximumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 17),
    _DeployProvExChannelCapMaximumOpticalPowerRcv_Type()
)
deployProvExChannelCapMaximumOpticalPowerRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapMaximumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapMaximumOpticalPowerRcv.setUnits("0.1 dBm")
_DeployProvExChannelCapMaximumPMDRcv_Type = FspR7Unsigned32Caps
_DeployProvExChannelCapMaximumPMDRcv_Object = MibTableColumn
deployProvExChannelCapMaximumPMDRcv = _DeployProvExChannelCapMaximumPMDRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 18),
    _DeployProvExChannelCapMaximumPMDRcv_Type()
)
deployProvExChannelCapMaximumPMDRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapMaximumPMDRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapMaximumPMDRcv.setUnits("ps")
_DeployProvExChannelCapChromaticDispersionRcv_Type = FspR7Integer32Caps
_DeployProvExChannelCapChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelCapChromaticDispersionRcv = _DeployProvExChannelCapChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 19),
    _DeployProvExChannelCapChromaticDispersionRcv_Type()
)
deployProvExChannelCapChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapChromaticDispersionRcv.setStatus("deprecated")
if mibBuilder.loadTexts:
    deployProvExChannelCapChromaticDispersionRcv.setUnits("ps/nm")
_DeployProvExChannelCapMaxBitErrorRate_Type = FspR7MaxBitErrorRateCaps
_DeployProvExChannelCapMaxBitErrorRate_Object = MibTableColumn
deployProvExChannelCapMaxBitErrorRate = _DeployProvExChannelCapMaxBitErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 20),
    _DeployProvExChannelCapMaxBitErrorRate_Type()
)
deployProvExChannelCapMaxBitErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapMaxBitErrorRate.setStatus("current")
_DeployProvExChannelCapMinChromaticDispersionRcv_Type = FspR7Integer32Caps
_DeployProvExChannelCapMinChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelCapMinChromaticDispersionRcv = _DeployProvExChannelCapMinChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 21),
    _DeployProvExChannelCapMinChromaticDispersionRcv_Type()
)
deployProvExChannelCapMinChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapMinChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapMinChromaticDispersionRcv.setUnits("ps/nm")
_DeployProvExChannelCapMaxChromaticDispersionRcv_Type = FspR7Integer32Caps
_DeployProvExChannelCapMaxChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelCapMaxChromaticDispersionRcv = _DeployProvExChannelCapMaxChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 22),
    _DeployProvExChannelCapMaxChromaticDispersionRcv_Type()
)
deployProvExChannelCapMaxChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapMaxChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelCapMaxChromaticDispersionRcv.setUnits("ps/nm")
_DeployProvExChannelCapSourceProfile_Type = Integer32
_DeployProvExChannelCapSourceProfile_Object = MibTableColumn
deployProvExChannelCapSourceProfile = _DeployProvExChannelCapSourceProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 58, 1, 23),
    _DeployProvExChannelCapSourceProfile_Type()
)
deployProvExChannelCapSourceProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelCapSourceProfile.setStatus("current")
_DeployProvExChannelDefaultsTable_Object = MibTable
deployProvExChannelDefaultsTable = _DeployProvExChannelDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59)
)
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsTable.setStatus("current")
_DeployProvExChannelDefaultsEntry_Object = MibTableRow
deployProvExChannelDefaultsEntry = _DeployProvExChannelDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1)
)
deployProvExChannelDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsEntry.setStatus("current")
_DeployProvExChannelDefaultsRowStatus_Type = RowStatus
_DeployProvExChannelDefaultsRowStatus_Object = MibTableColumn
deployProvExChannelDefaultsRowStatus = _DeployProvExChannelDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 1),
    _DeployProvExChannelDefaultsRowStatus_Type()
)
deployProvExChannelDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsRowStatus.setStatus("current")
_DeployProvExChannelDefaultsType_Type = FspR7InterfaceType
_DeployProvExChannelDefaultsType_Object = MibTableColumn
deployProvExChannelDefaultsType = _DeployProvExChannelDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 2),
    _DeployProvExChannelDefaultsType_Type()
)
deployProvExChannelDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsType.setStatus("current")
_DeployProvExChannelDefaultsTransmitChannel_Type = FspR7ChannelIdentifier
_DeployProvExChannelDefaultsTransmitChannel_Object = MibTableColumn
deployProvExChannelDefaultsTransmitChannel = _DeployProvExChannelDefaultsTransmitChannel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 3),
    _DeployProvExChannelDefaultsTransmitChannel_Type()
)
deployProvExChannelDefaultsTransmitChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsTransmitChannel.setStatus("current")
_DeployProvExChannelDefaultsChannelBandwith_Type = FspR7ChannelBandwidth
_DeployProvExChannelDefaultsChannelBandwith_Object = MibTableColumn
deployProvExChannelDefaultsChannelBandwith = _DeployProvExChannelDefaultsChannelBandwith_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 4),
    _DeployProvExChannelDefaultsChannelBandwith_Type()
)
deployProvExChannelDefaultsChannelBandwith.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsChannelBandwith.setStatus("current")
_DeployProvExChannelDefaultsAlias_Type = SnmpAdminString
_DeployProvExChannelDefaultsAlias_Object = MibTableColumn
deployProvExChannelDefaultsAlias = _DeployProvExChannelDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 5),
    _DeployProvExChannelDefaultsAlias_Type()
)
deployProvExChannelDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsAlias.setStatus("current")
_DeployProvExChannelDefaultsFarEndLocation_Type = SnmpAdminString
_DeployProvExChannelDefaultsFarEndLocation_Object = MibTableColumn
deployProvExChannelDefaultsFarEndLocation = _DeployProvExChannelDefaultsFarEndLocation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 6),
    _DeployProvExChannelDefaultsFarEndLocation_Type()
)
deployProvExChannelDefaultsFarEndLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsFarEndLocation.setStatus("current")
_DeployProvExChannelDefaultsBitrate_Type = Unsigned32
_DeployProvExChannelDefaultsBitrate_Object = MibTableColumn
deployProvExChannelDefaultsBitrate = _DeployProvExChannelDefaultsBitrate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 7),
    _DeployProvExChannelDefaultsBitrate_Type()
)
deployProvExChannelDefaultsBitrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsBitrate.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsBitrate.setUnits("Mbit/s")
_DeployProvExChannelDefaultsFecType_Type = FspR7FecType
_DeployProvExChannelDefaultsFecType_Object = MibTableColumn
deployProvExChannelDefaultsFecType = _DeployProvExChannelDefaultsFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 8),
    _DeployProvExChannelDefaultsFecType_Type()
)
deployProvExChannelDefaultsFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsFecType.setStatus("current")
_DeployProvExChannelDefaultsLineCoding_Type = FspR7LineCoding
_DeployProvExChannelDefaultsLineCoding_Object = MibTableColumn
deployProvExChannelDefaultsLineCoding = _DeployProvExChannelDefaultsLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 9),
    _DeployProvExChannelDefaultsLineCoding_Type()
)
deployProvExChannelDefaultsLineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsLineCoding.setStatus("current")
_DeployProvExChannelDefaultsFrameFormat_Type = FspR7FrameFormat
_DeployProvExChannelDefaultsFrameFormat_Object = MibTableColumn
deployProvExChannelDefaultsFrameFormat = _DeployProvExChannelDefaultsFrameFormat_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 10),
    _DeployProvExChannelDefaultsFrameFormat_Type()
)
deployProvExChannelDefaultsFrameFormat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsFrameFormat.setStatus("current")


class _DeployProvExChannelDefaultsOpticalPowerTx_Type(Integer32):
    """Custom type deployProvExChannelDefaultsOpticalPowerTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-9900, 600),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelDefaultsOpticalPowerTx_Type.__name__ = "Integer32"
_DeployProvExChannelDefaultsOpticalPowerTx_Object = MibTableColumn
deployProvExChannelDefaultsOpticalPowerTx = _DeployProvExChannelDefaultsOpticalPowerTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 11),
    _DeployProvExChannelDefaultsOpticalPowerTx_Type()
)
deployProvExChannelDefaultsOpticalPowerTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsOpticalPowerTx.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsOpticalPowerTx.setUnits("0.1 dBm")


class _DeployProvExChannelDefaultsOSNRTransmit_Type(Unsigned32):
    """Custom type deployProvExChannelDefaultsOSNRTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelDefaultsOSNRTransmit_Type.__name__ = "Unsigned32"
_DeployProvExChannelDefaultsOSNRTransmit_Object = MibTableColumn
deployProvExChannelDefaultsOSNRTransmit = _DeployProvExChannelDefaultsOSNRTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 12),
    _DeployProvExChannelDefaultsOSNRTransmit_Type()
)
deployProvExChannelDefaultsOSNRTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsOSNRTransmit.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsOSNRTransmit.setUnits("dB")


class _DeployProvExChannelDefaultsPMDTransmit_Type(Unsigned32):
    """Custom type deployProvExChannelDefaultsPMDTransmit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelDefaultsPMDTransmit_Type.__name__ = "Unsigned32"
_DeployProvExChannelDefaultsPMDTransmit_Object = MibTableColumn
deployProvExChannelDefaultsPMDTransmit = _DeployProvExChannelDefaultsPMDTransmit_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 13),
    _DeployProvExChannelDefaultsPMDTransmit_Type()
)
deployProvExChannelDefaultsPMDTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsPMDTransmit.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsPMDTransmit.setUnits("ps")


class _DeployProvExChannelDefaultsChromaticDispersionTx_Type(Integer32):
    """Custom type deployProvExChannelDefaultsChromaticDispersionTx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelDefaultsChromaticDispersionTx_Type.__name__ = "Integer32"
_DeployProvExChannelDefaultsChromaticDispersionTx_Object = MibTableColumn
deployProvExChannelDefaultsChromaticDispersionTx = _DeployProvExChannelDefaultsChromaticDispersionTx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 14),
    _DeployProvExChannelDefaultsChromaticDispersionTx_Type()
)
deployProvExChannelDefaultsChromaticDispersionTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsChromaticDispersionTx.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsChromaticDispersionTx.setUnits("ps/nm")


class _DeployProvExChannelDefaultsMinimumOSNRRcv_Type(Unsigned32):
    """Custom type deployProvExChannelDefaultsMinimumOSNRRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 58),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelDefaultsMinimumOSNRRcv_Type.__name__ = "Unsigned32"
_DeployProvExChannelDefaultsMinimumOSNRRcv_Object = MibTableColumn
deployProvExChannelDefaultsMinimumOSNRRcv = _DeployProvExChannelDefaultsMinimumOSNRRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 15),
    _DeployProvExChannelDefaultsMinimumOSNRRcv_Type()
)
deployProvExChannelDefaultsMinimumOSNRRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMinimumOSNRRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMinimumOSNRRcv.setUnits("dB")


class _DeployProvExChannelDefaultsMinimumOpticalPowerRcv_Type(Integer32):
    """Custom type deployProvExChannelDefaultsMinimumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2500, 0),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelDefaultsMinimumOpticalPowerRcv_Type.__name__ = "Integer32"
_DeployProvExChannelDefaultsMinimumOpticalPowerRcv_Object = MibTableColumn
deployProvExChannelDefaultsMinimumOpticalPowerRcv = _DeployProvExChannelDefaultsMinimumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 16),
    _DeployProvExChannelDefaultsMinimumOpticalPowerRcv_Type()
)
deployProvExChannelDefaultsMinimumOpticalPowerRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMinimumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMinimumOpticalPowerRcv.setUnits("0.1 dBm")


class _DeployProvExChannelDefaultsMaximumOpticalPowerRcv_Type(Integer32):
    """Custom type deployProvExChannelDefaultsMaximumOpticalPowerRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1000, 1000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelDefaultsMaximumOpticalPowerRcv_Type.__name__ = "Integer32"
_DeployProvExChannelDefaultsMaximumOpticalPowerRcv_Object = MibTableColumn
deployProvExChannelDefaultsMaximumOpticalPowerRcv = _DeployProvExChannelDefaultsMaximumOpticalPowerRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 17),
    _DeployProvExChannelDefaultsMaximumOpticalPowerRcv_Type()
)
deployProvExChannelDefaultsMaximumOpticalPowerRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMaximumOpticalPowerRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMaximumOpticalPowerRcv.setUnits("0.1 dBm")


class _DeployProvExChannelDefaultsMaximumPMDRcv_Type(Unsigned32):
    """Custom type deployProvExChannelDefaultsMaximumPMDRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvExChannelDefaultsMaximumPMDRcv_Type.__name__ = "Unsigned32"
_DeployProvExChannelDefaultsMaximumPMDRcv_Object = MibTableColumn
deployProvExChannelDefaultsMaximumPMDRcv = _DeployProvExChannelDefaultsMaximumPMDRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 18),
    _DeployProvExChannelDefaultsMaximumPMDRcv_Type()
)
deployProvExChannelDefaultsMaximumPMDRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMaximumPMDRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMaximumPMDRcv.setUnits("ps")


class _DeployProvExChannelDefaultsChromaticDispersionRcv_Type(Integer32):
    """Custom type deployProvExChannelDefaultsChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelDefaultsChromaticDispersionRcv_Type.__name__ = "Integer32"
_DeployProvExChannelDefaultsChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelDefaultsChromaticDispersionRcv = _DeployProvExChannelDefaultsChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 19),
    _DeployProvExChannelDefaultsChromaticDispersionRcv_Type()
)
deployProvExChannelDefaultsChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsChromaticDispersionRcv.setStatus("deprecated")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsChromaticDispersionRcv.setUnits("ps/nm")
_DeployProvExChannelDefaultsMaxBitErrorRate_Type = FspR7MaxBitErrorRate
_DeployProvExChannelDefaultsMaxBitErrorRate_Object = MibTableColumn
deployProvExChannelDefaultsMaxBitErrorRate = _DeployProvExChannelDefaultsMaxBitErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 20),
    _DeployProvExChannelDefaultsMaxBitErrorRate_Type()
)
deployProvExChannelDefaultsMaxBitErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMaxBitErrorRate.setStatus("current")


class _DeployProvExChannelDefaultsMinChromaticDispersionRcv_Type(Integer32):
    """Custom type deployProvExChannelDefaultsMinChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelDefaultsMinChromaticDispersionRcv_Type.__name__ = "Integer32"
_DeployProvExChannelDefaultsMinChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelDefaultsMinChromaticDispersionRcv = _DeployProvExChannelDefaultsMinChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 21),
    _DeployProvExChannelDefaultsMinChromaticDispersionRcv_Type()
)
deployProvExChannelDefaultsMinChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMinChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMinChromaticDispersionRcv.setUnits("ps/nm")


class _DeployProvExChannelDefaultsMaxChromaticDispersionRcv_Type(Integer32):
    """Custom type deployProvExChannelDefaultsMaxChromaticDispersionRcv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-60000, 60000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_DeployProvExChannelDefaultsMaxChromaticDispersionRcv_Type.__name__ = "Integer32"
_DeployProvExChannelDefaultsMaxChromaticDispersionRcv_Object = MibTableColumn
deployProvExChannelDefaultsMaxChromaticDispersionRcv = _DeployProvExChannelDefaultsMaxChromaticDispersionRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 22),
    _DeployProvExChannelDefaultsMaxChromaticDispersionRcv_Type()
)
deployProvExChannelDefaultsMaxChromaticDispersionRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMaxChromaticDispersionRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsMaxChromaticDispersionRcv.setUnits("ps/nm")
_DeployProvExChannelDefaultsSourceProfile_Type = SnmpAdminString
_DeployProvExChannelDefaultsSourceProfile_Object = MibTableColumn
deployProvExChannelDefaultsSourceProfile = _DeployProvExChannelDefaultsSourceProfile_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 59, 1, 23),
    _DeployProvExChannelDefaultsSourceProfile_Type()
)
deployProvExChannelDefaultsSourceProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvExChannelDefaultsSourceProfile.setStatus("current")
_DeployProvSuperChannelTable_Object = MibTable
deployProvSuperChannelTable = _DeployProvSuperChannelTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 60)
)
if mibBuilder.loadTexts:
    deployProvSuperChannelTable.setStatus("current")
_DeployProvSuperChannelEntry_Object = MibTableRow
deployProvSuperChannelEntry = _DeployProvSuperChannelEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 60, 1)
)
deployProvSuperChannelEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvSuperChannelEntry.setStatus("current")
_DeployProvSuperChannelRowStatus_Type = RowStatus
_DeployProvSuperChannelRowStatus_Object = MibTableColumn
deployProvSuperChannelRowStatus = _DeployProvSuperChannelRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 60, 1, 1),
    _DeployProvSuperChannelRowStatus_Type()
)
deployProvSuperChannelRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSuperChannelRowStatus.setStatus("current")
_DeployProvSuperChannelEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvSuperChannelEqlzAdmin_Object = MibTableColumn
deployProvSuperChannelEqlzAdmin = _DeployProvSuperChannelEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 60, 1, 2),
    _DeployProvSuperChannelEqlzAdmin_Type()
)
deployProvSuperChannelEqlzAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSuperChannelEqlzAdmin.setStatus("current")
_DeployProvSuperChannelAlias_Type = SnmpAdminString
_DeployProvSuperChannelAlias_Object = MibTableColumn
deployProvSuperChannelAlias = _DeployProvSuperChannelAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 60, 1, 3),
    _DeployProvSuperChannelAlias_Type()
)
deployProvSuperChannelAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSuperChannelAlias.setStatus("current")
_DeployProvSuperChannelAdmin_Type = FspR7AdminState
_DeployProvSuperChannelAdmin_Object = MibTableColumn
deployProvSuperChannelAdmin = _DeployProvSuperChannelAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 60, 1, 4),
    _DeployProvSuperChannelAdmin_Type()
)
deployProvSuperChannelAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSuperChannelAdmin.setStatus("current")
_DeployProvSuperChannelType_Type = FspR7InterfaceType
_DeployProvSuperChannelType_Object = MibTableColumn
deployProvSuperChannelType = _DeployProvSuperChannelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 60, 1, 5),
    _DeployProvSuperChannelType_Type()
)
deployProvSuperChannelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvSuperChannelType.setStatus("current")
_DeployProvSuperChannelCapTable_Object = MibTable
deployProvSuperChannelCapTable = _DeployProvSuperChannelCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 61)
)
if mibBuilder.loadTexts:
    deployProvSuperChannelCapTable.setStatus("current")
_DeployProvSuperChannelCapEntry_Object = MibTableRow
deployProvSuperChannelCapEntry = _DeployProvSuperChannelCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 61, 1)
)
deployProvSuperChannelCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvSuperChannelCapEntry.setStatus("current")
_DeployProvSuperChannelCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvSuperChannelCapRowStatus_Object = MibTableColumn
deployProvSuperChannelCapRowStatus = _DeployProvSuperChannelCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 61, 1, 1),
    _DeployProvSuperChannelCapRowStatus_Type()
)
deployProvSuperChannelCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelCapRowStatus.setStatus("current")
_DeployProvSuperChannelCapEqlzAdmin_Type = FspR7EqlzAdminStateCaps
_DeployProvSuperChannelCapEqlzAdmin_Object = MibTableColumn
deployProvSuperChannelCapEqlzAdmin = _DeployProvSuperChannelCapEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 61, 1, 2),
    _DeployProvSuperChannelCapEqlzAdmin_Type()
)
deployProvSuperChannelCapEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelCapEqlzAdmin.setStatus("current")
_DeployProvSuperChannelCapAlias_Type = Integer32
_DeployProvSuperChannelCapAlias_Object = MibTableColumn
deployProvSuperChannelCapAlias = _DeployProvSuperChannelCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 61, 1, 3),
    _DeployProvSuperChannelCapAlias_Type()
)
deployProvSuperChannelCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelCapAlias.setStatus("current")
_DeployProvSuperChannelCapAdmin_Type = FspR7AdminStateCaps
_DeployProvSuperChannelCapAdmin_Object = MibTableColumn
deployProvSuperChannelCapAdmin = _DeployProvSuperChannelCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 61, 1, 4),
    _DeployProvSuperChannelCapAdmin_Type()
)
deployProvSuperChannelCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelCapAdmin.setStatus("current")
_DeployProvSuperChannelCapType_Type = FspR7InterfaceTypeCaps
_DeployProvSuperChannelCapType_Object = MibTableColumn
deployProvSuperChannelCapType = _DeployProvSuperChannelCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 61, 1, 5),
    _DeployProvSuperChannelCapType_Type()
)
deployProvSuperChannelCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelCapType.setStatus("current")
_DeployProvSuperChannelDefaultsTable_Object = MibTable
deployProvSuperChannelDefaultsTable = _DeployProvSuperChannelDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 62)
)
if mibBuilder.loadTexts:
    deployProvSuperChannelDefaultsTable.setStatus("current")
_DeployProvSuperChannelDefaultsEntry_Object = MibTableRow
deployProvSuperChannelDefaultsEntry = _DeployProvSuperChannelDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 62, 1)
)
deployProvSuperChannelDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvSuperChannelDefaultsEntry.setStatus("current")
_DeployProvSuperChannelDefaultsRowStatus_Type = RowStatus
_DeployProvSuperChannelDefaultsRowStatus_Object = MibTableColumn
deployProvSuperChannelDefaultsRowStatus = _DeployProvSuperChannelDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 62, 1, 1),
    _DeployProvSuperChannelDefaultsRowStatus_Type()
)
deployProvSuperChannelDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelDefaultsRowStatus.setStatus("current")
_DeployProvSuperChannelDefaultsEqlzAdmin_Type = FspR7EqlzAdminState
_DeployProvSuperChannelDefaultsEqlzAdmin_Object = MibTableColumn
deployProvSuperChannelDefaultsEqlzAdmin = _DeployProvSuperChannelDefaultsEqlzAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 62, 1, 2),
    _DeployProvSuperChannelDefaultsEqlzAdmin_Type()
)
deployProvSuperChannelDefaultsEqlzAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelDefaultsEqlzAdmin.setStatus("current")
_DeployProvSuperChannelDefaultsAlias_Type = SnmpAdminString
_DeployProvSuperChannelDefaultsAlias_Object = MibTableColumn
deployProvSuperChannelDefaultsAlias = _DeployProvSuperChannelDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 62, 1, 3),
    _DeployProvSuperChannelDefaultsAlias_Type()
)
deployProvSuperChannelDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelDefaultsAlias.setStatus("current")
_DeployProvSuperChannelDefaultsAdmin_Type = FspR7AdminState
_DeployProvSuperChannelDefaultsAdmin_Object = MibTableColumn
deployProvSuperChannelDefaultsAdmin = _DeployProvSuperChannelDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 62, 1, 4),
    _DeployProvSuperChannelDefaultsAdmin_Type()
)
deployProvSuperChannelDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelDefaultsAdmin.setStatus("current")
_DeployProvSuperChannelDefaultsType_Type = FspR7InterfaceType
_DeployProvSuperChannelDefaultsType_Object = MibTableColumn
deployProvSuperChannelDefaultsType = _DeployProvSuperChannelDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 4, 62, 1, 5),
    _DeployProvSuperChannelDefaultsType_Type()
)
deployProvSuperChannelDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvSuperChannelDefaultsType.setStatus("current")
_ConnectionDeployProv_ObjectIdentity = ObjectIdentity
connectionDeployProv = _ConnectionDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5)
)
_DeployProvConnType_Type = FspR7TypeConnection
_DeployProvConnType_Object = MibScalar
deployProvConnType = _DeployProvConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 1),
    _DeployProvConnType_Type()
)
deployProvConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvConnType.setStatus("current")
_DeployProvConnEndpointA_Type = EntityIndex
_DeployProvConnEndpointA_Object = MibScalar
deployProvConnEndpointA = _DeployProvConnEndpointA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 2),
    _DeployProvConnEndpointA_Type()
)
deployProvConnEndpointA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvConnEndpointA.setStatus("current")
_DeployProvConnEndpointB_Type = EntityIndex
_DeployProvConnEndpointB_Object = MibScalar
deployProvConnEndpointB = _DeployProvConnEndpointB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 3),
    _DeployProvConnEndpointB_Type()
)
deployProvConnEndpointB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvConnEndpointB.setStatus("current")
_DeployProvConnCommand_Type = FspR7ConnCommand
_DeployProvConnCommand_Object = MibScalar
deployProvConnCommand = _DeployProvConnCommand_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 4),
    _DeployProvConnCommand_Type()
)
deployProvConnCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvConnCommand.setStatus("current")
_DeployProvConnState_Type = FspR7StateConnection
_DeployProvConnState_Object = MibScalar
deployProvConnState = _DeployProvConnState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 5),
    _DeployProvConnState_Type()
)
deployProvConnState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvConnState.setStatus("current")
_DeployProvConnCommandCounter_Type = Unsigned32
_DeployProvConnCommandCounter_Object = MibScalar
deployProvConnCommandCounter = _DeployProvConnCommandCounter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 6),
    _DeployProvConnCommandCounter_Type()
)
deployProvConnCommandCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvConnCommandCounter.setStatus("current")
_DeployProvConnIndex_Type = EntityIndex
_DeployProvConnIndex_Object = MibScalar
deployProvConnIndex = _DeployProvConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 7),
    _DeployProvConnIndex_Type()
)
deployProvConnIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvConnIndex.setStatus("current")
_DeployProvConnStdCapFromTable_Object = MibTable
deployProvConnStdCapFromTable = _DeployProvConnStdCapFromTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 8)
)
if mibBuilder.loadTexts:
    deployProvConnStdCapFromTable.setStatus("current")
_DeployProvConnStdCapFromEntry_Object = MibTableRow
deployProvConnStdCapFromEntry = _DeployProvConnStdCapFromEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 8, 1)
)
deployProvConnStdCapFromEntry.setIndexNames(
    (0, "FspR7-MIB", "deployProvConnStdCapFromEndpointA"),
    (0, "FspR7-MIB", "deployProvConnStdCapFromEndpointB"),
)
if mibBuilder.loadTexts:
    deployProvConnStdCapFromEntry.setStatus("current")
_DeployProvConnStdCapFromEndpointA_Type = EntityIndex
_DeployProvConnStdCapFromEndpointA_Object = MibTableColumn
deployProvConnStdCapFromEndpointA = _DeployProvConnStdCapFromEndpointA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 8, 1, 1),
    _DeployProvConnStdCapFromEndpointA_Type()
)
deployProvConnStdCapFromEndpointA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnStdCapFromEndpointA.setStatus("current")
_DeployProvConnStdCapFromEndpointB_Type = EntityIndex
_DeployProvConnStdCapFromEndpointB_Object = MibTableColumn
deployProvConnStdCapFromEndpointB = _DeployProvConnStdCapFromEndpointB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 8, 1, 2),
    _DeployProvConnStdCapFromEndpointB_Type()
)
deployProvConnStdCapFromEndpointB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnStdCapFromEndpointB.setStatus("current")
_DeployProvConnStdCapFromType_Type = FspR7TypeConnectionCaps
_DeployProvConnStdCapFromType_Object = MibTableColumn
deployProvConnStdCapFromType = _DeployProvConnStdCapFromType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 8, 1, 3),
    _DeployProvConnStdCapFromType_Type()
)
deployProvConnStdCapFromType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvConnStdCapFromType.setStatus("current")
_DeployProvConnStdCapToTable_Object = MibTable
deployProvConnStdCapToTable = _DeployProvConnStdCapToTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 9)
)
if mibBuilder.loadTexts:
    deployProvConnStdCapToTable.setStatus("current")
_DeployProvConnStdCapToEntry_Object = MibTableRow
deployProvConnStdCapToEntry = _DeployProvConnStdCapToEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 9, 1)
)
deployProvConnStdCapToEntry.setIndexNames(
    (0, "FspR7-MIB", "deployProvConnStdCapToEndpointB"),
    (0, "FspR7-MIB", "deployProvConnStdCapToEndpointA"),
)
if mibBuilder.loadTexts:
    deployProvConnStdCapToEntry.setStatus("current")
_DeployProvConnStdCapToEndpointB_Type = EntityIndex
_DeployProvConnStdCapToEndpointB_Object = MibTableColumn
deployProvConnStdCapToEndpointB = _DeployProvConnStdCapToEndpointB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 9, 1, 1),
    _DeployProvConnStdCapToEndpointB_Type()
)
deployProvConnStdCapToEndpointB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnStdCapToEndpointB.setStatus("current")
_DeployProvConnStdCapToEndpointA_Type = EntityIndex
_DeployProvConnStdCapToEndpointA_Object = MibTableColumn
deployProvConnStdCapToEndpointA = _DeployProvConnStdCapToEndpointA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 9, 1, 2),
    _DeployProvConnStdCapToEndpointA_Type()
)
deployProvConnStdCapToEndpointA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnStdCapToEndpointA.setStatus("current")
_DeployProvConnStdCapToType_Type = FspR7TypeConnectionCaps
_DeployProvConnStdCapToType_Object = MibTableColumn
deployProvConnStdCapToType = _DeployProvConnStdCapToType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 9, 1, 3),
    _DeployProvConnStdCapToType_Type()
)
deployProvConnStdCapToType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvConnStdCapToType.setStatus("current")
_DeployProvConnNonStdCapFromTable_Object = MibTable
deployProvConnNonStdCapFromTable = _DeployProvConnNonStdCapFromTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 10)
)
if mibBuilder.loadTexts:
    deployProvConnNonStdCapFromTable.setStatus("current")
_DeployProvConnNonStdCapFromEntry_Object = MibTableRow
deployProvConnNonStdCapFromEntry = _DeployProvConnNonStdCapFromEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 10, 1)
)
deployProvConnNonStdCapFromEntry.setIndexNames(
    (0, "FspR7-MIB", "deployProvConnNonStdCapFromEndpointA"),
    (0, "FspR7-MIB", "deployProvConnNonStdCapFromEndpointB"),
)
if mibBuilder.loadTexts:
    deployProvConnNonStdCapFromEntry.setStatus("current")
_DeployProvConnNonStdCapFromEndpointA_Type = EntityIndex
_DeployProvConnNonStdCapFromEndpointA_Object = MibTableColumn
deployProvConnNonStdCapFromEndpointA = _DeployProvConnNonStdCapFromEndpointA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 10, 1, 1),
    _DeployProvConnNonStdCapFromEndpointA_Type()
)
deployProvConnNonStdCapFromEndpointA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnNonStdCapFromEndpointA.setStatus("current")
_DeployProvConnNonStdCapFromEndpointB_Type = EntityIndex
_DeployProvConnNonStdCapFromEndpointB_Object = MibTableColumn
deployProvConnNonStdCapFromEndpointB = _DeployProvConnNonStdCapFromEndpointB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 10, 1, 2),
    _DeployProvConnNonStdCapFromEndpointB_Type()
)
deployProvConnNonStdCapFromEndpointB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnNonStdCapFromEndpointB.setStatus("current")
_DeployProvConnNonStdCapFromType_Type = FspR7TypeConnectionCaps
_DeployProvConnNonStdCapFromType_Object = MibTableColumn
deployProvConnNonStdCapFromType = _DeployProvConnNonStdCapFromType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 10, 1, 3),
    _DeployProvConnNonStdCapFromType_Type()
)
deployProvConnNonStdCapFromType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvConnNonStdCapFromType.setStatus("current")
_DeployProvConnNonStdCapToTable_Object = MibTable
deployProvConnNonStdCapToTable = _DeployProvConnNonStdCapToTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 11)
)
if mibBuilder.loadTexts:
    deployProvConnNonStdCapToTable.setStatus("current")
_DeployProvConnNonStdCapToEntry_Object = MibTableRow
deployProvConnNonStdCapToEntry = _DeployProvConnNonStdCapToEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 11, 1)
)
deployProvConnNonStdCapToEntry.setIndexNames(
    (0, "FspR7-MIB", "deployProvConnNonStdCapToEndpointB"),
    (0, "FspR7-MIB", "deployProvConnNonStdCapToEndpointA"),
)
if mibBuilder.loadTexts:
    deployProvConnNonStdCapToEntry.setStatus("current")
_DeployProvConnNonStdCapToEndpointB_Type = EntityIndex
_DeployProvConnNonStdCapToEndpointB_Object = MibTableColumn
deployProvConnNonStdCapToEndpointB = _DeployProvConnNonStdCapToEndpointB_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 11, 1, 1),
    _DeployProvConnNonStdCapToEndpointB_Type()
)
deployProvConnNonStdCapToEndpointB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnNonStdCapToEndpointB.setStatus("current")
_DeployProvConnNonStdCapToEndpointA_Type = EntityIndex
_DeployProvConnNonStdCapToEndpointA_Object = MibTableColumn
deployProvConnNonStdCapToEndpointA = _DeployProvConnNonStdCapToEndpointA_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 11, 1, 2),
    _DeployProvConnNonStdCapToEndpointA_Type()
)
deployProvConnNonStdCapToEndpointA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    deployProvConnNonStdCapToEndpointA.setStatus("current")
_DeployProvConnNonStdCapToType_Type = FspR7TypeConnectionCaps
_DeployProvConnNonStdCapToType_Object = MibTableColumn
deployProvConnNonStdCapToType = _DeployProvConnNonStdCapToType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 5, 11, 1, 3),
    _DeployProvConnNonStdCapToType_Type()
)
deployProvConnNonStdCapToType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvConnNonStdCapToType.setStatus("current")
_CrossConnectionDeployProv_ObjectIdentity = ObjectIdentity
crossConnectionDeployProv = _CrossConnectionDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6)
)
_CrsConnUnusedFromPointsTable_Object = MibTable
crsConnUnusedFromPointsTable = _CrsConnUnusedFromPointsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 1)
)
if mibBuilder.loadTexts:
    crsConnUnusedFromPointsTable.setStatus("current")
_CrsConnUnusedFromPointsEntry_Object = MibTableRow
crsConnUnusedFromPointsEntry = _CrsConnUnusedFromPointsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 1, 1)
)
crsConnUnusedFromPointsEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnUnusedFromPointsAidValueFromPoint"),
)
if mibBuilder.loadTexts:
    crsConnUnusedFromPointsEntry.setStatus("current")
_CrsConnUnusedFromPointsAidValueFromPoint_Type = EntityIndex
_CrsConnUnusedFromPointsAidValueFromPoint_Object = MibTableColumn
crsConnUnusedFromPointsAidValueFromPoint = _CrsConnUnusedFromPointsAidValueFromPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 1, 1, 1),
    _CrsConnUnusedFromPointsAidValueFromPoint_Type()
)
crsConnUnusedFromPointsAidValueFromPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnUnusedFromPointsAidValueFromPoint.setStatus("current")
_CrsConnPossibleToCreateTable_Object = MibTable
crsConnPossibleToCreateTable = _CrsConnPossibleToCreateTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 2)
)
if mibBuilder.loadTexts:
    crsConnPossibleToCreateTable.setStatus("current")
_CrsConnPossibleToCreateEntry_Object = MibTableRow
crsConnPossibleToCreateEntry = _CrsConnPossibleToCreateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 2, 1)
)
crsConnPossibleToCreateEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnUnusedFromPointsAidValueFromPoint"),
    (0, "FspR7-MIB", "crsConnPossibleToCreateAidToFromPoint"),
)
if mibBuilder.loadTexts:
    crsConnPossibleToCreateEntry.setStatus("current")
_CrsConnPossibleToCreateAidToFromPoint_Type = EntityIndex
_CrsConnPossibleToCreateAidToFromPoint_Object = MibTableColumn
crsConnPossibleToCreateAidToFromPoint = _CrsConnPossibleToCreateAidToFromPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 2, 1, 1),
    _CrsConnPossibleToCreateAidToFromPoint_Type()
)
crsConnPossibleToCreateAidToFromPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnPossibleToCreateAidToFromPoint.setStatus("current")
_CrsConnDeployProvTable_Object = MibTable
crsConnDeployProvTable = _CrsConnDeployProvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3)
)
if mibBuilder.loadTexts:
    crsConnDeployProvTable.setStatus("current")
_CrsConnDeployProvEntry_Object = MibTableRow
crsConnDeployProvEntry = _CrsConnDeployProvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1)
)
crsConnDeployProvEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnDeployProvFrom"),
    (0, "FspR7-MIB", "crsConnDeployProvTo"),
)
if mibBuilder.loadTexts:
    crsConnDeployProvEntry.setStatus("current")
_CrsConnDeployProvFrom_Type = EntityIndex
_CrsConnDeployProvFrom_Object = MibTableColumn
crsConnDeployProvFrom = _CrsConnDeployProvFrom_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 1),
    _CrsConnDeployProvFrom_Type()
)
crsConnDeployProvFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    crsConnDeployProvFrom.setStatus("current")
_CrsConnDeployProvTo_Type = EntityIndex
_CrsConnDeployProvTo_Object = MibTableColumn
crsConnDeployProvTo = _CrsConnDeployProvTo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 2),
    _CrsConnDeployProvTo_Type()
)
crsConnDeployProvTo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    crsConnDeployProvTo.setStatus("current")
_CrsConnDeployProvRowStatus_Type = RowStatus
_CrsConnDeployProvRowStatus_Object = MibTableColumn
crsConnDeployProvRowStatus = _CrsConnDeployProvRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 3),
    _CrsConnDeployProvRowStatus_Type()
)
crsConnDeployProvRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvRowStatus.setStatus("current")
_CrsConnDeployProvConn_Type = FspR7Conn
_CrsConnDeployProvConn_Object = MibTableColumn
crsConnDeployProvConn = _CrsConnDeployProvConn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 4),
    _CrsConnDeployProvConn_Type()
)
crsConnDeployProvConn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvConn.setStatus("current")
_CrsConnDeployProvRedLineState_Type = FspR7RedLinedState
_CrsConnDeployProvRedLineState_Object = MibTableColumn
crsConnDeployProvRedLineState = _CrsConnDeployProvRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 5),
    _CrsConnDeployProvRedLineState_Type()
)
crsConnDeployProvRedLineState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvRedLineState.setStatus("current")
_CrsConnDeployProvAdmin_Type = FspR7AdminState
_CrsConnDeployProvAdmin_Object = MibTableColumn
crsConnDeployProvAdmin = _CrsConnDeployProvAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 6),
    _CrsConnDeployProvAdmin_Type()
)
crsConnDeployProvAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvAdmin.setStatus("current")
_CrsConnDeployProvTunnelAid_Type = SnmpAdminString
_CrsConnDeployProvTunnelAid_Object = MibTableColumn
crsConnDeployProvTunnelAid = _CrsConnDeployProvTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 7),
    _CrsConnDeployProvTunnelAid_Type()
)
crsConnDeployProvTunnelAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvTunnelAid.setStatus("current")
_CrsConnDeployProvAlias_Type = SnmpAdminString
_CrsConnDeployProvAlias_Object = MibTableColumn
crsConnDeployProvAlias = _CrsConnDeployProvAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 8),
    _CrsConnDeployProvAlias_Type()
)
crsConnDeployProvAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvAlias.setStatus("current")
_CrsConnDeployProvCrossConnType_Type = FspR7TypeCrs
_CrsConnDeployProvCrossConnType_Object = MibTableColumn
crsConnDeployProvCrossConnType = _CrsConnDeployProvCrossConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 9),
    _CrsConnDeployProvCrossConnType_Type()
)
crsConnDeployProvCrossConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvCrossConnType.setStatus("current")
_CrsConnDeployProvPathNode_Type = FspR7PathNode
_CrsConnDeployProvPathNode_Object = MibTableColumn
crsConnDeployProvPathNode = _CrsConnDeployProvPathNode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 10),
    _CrsConnDeployProvPathNode_Type()
)
crsConnDeployProvPathNode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvPathNode.setStatus("current")
_CrsConnDeployProvType_Type = FspR7InterfaceType
_CrsConnDeployProvType_Object = MibTableColumn
crsConnDeployProvType = _CrsConnDeployProvType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 3, 1, 11),
    _CrsConnDeployProvType_Type()
)
crsConnDeployProvType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    crsConnDeployProvType.setStatus("current")
_CrsConnDeployProvCapTable_Object = MibTable
crsConnDeployProvCapTable = _CrsConnDeployProvCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4)
)
if mibBuilder.loadTexts:
    crsConnDeployProvCapTable.setStatus("current")
_CrsConnDeployProvCapEntry_Object = MibTableRow
crsConnDeployProvCapEntry = _CrsConnDeployProvCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1)
)
crsConnDeployProvCapEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnDeployProvFrom"),
    (0, "FspR7-MIB", "crsConnDeployProvTo"),
)
if mibBuilder.loadTexts:
    crsConnDeployProvCapEntry.setStatus("current")
_CrsConnDeployProvCapFrom_Type = Integer32
_CrsConnDeployProvCapFrom_Object = MibTableColumn
crsConnDeployProvCapFrom = _CrsConnDeployProvCapFrom_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 1),
    _CrsConnDeployProvCapFrom_Type()
)
crsConnDeployProvCapFrom.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    crsConnDeployProvCapFrom.setStatus("current")
_CrsConnDeployProvCapTo_Type = Integer32
_CrsConnDeployProvCapTo_Object = MibTableColumn
crsConnDeployProvCapTo = _CrsConnDeployProvCapTo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 2),
    _CrsConnDeployProvCapTo_Type()
)
crsConnDeployProvCapTo.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    crsConnDeployProvCapTo.setStatus("current")
_CrsConnDeployProvCapRowStatus_Type = FspR7RowStatusCaps
_CrsConnDeployProvCapRowStatus_Object = MibTableColumn
crsConnDeployProvCapRowStatus = _CrsConnDeployProvCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 3),
    _CrsConnDeployProvCapRowStatus_Type()
)
crsConnDeployProvCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapRowStatus.setStatus("current")
_CrsConnDeployProvCapConn_Type = FspR7ConnCaps
_CrsConnDeployProvCapConn_Object = MibTableColumn
crsConnDeployProvCapConn = _CrsConnDeployProvCapConn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 4),
    _CrsConnDeployProvCapConn_Type()
)
crsConnDeployProvCapConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapConn.setStatus("current")
_CrsConnDeployProvCapRedLineState_Type = FspR7RedLinedStateCaps
_CrsConnDeployProvCapRedLineState_Object = MibTableColumn
crsConnDeployProvCapRedLineState = _CrsConnDeployProvCapRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 5),
    _CrsConnDeployProvCapRedLineState_Type()
)
crsConnDeployProvCapRedLineState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapRedLineState.setStatus("current")
_CrsConnDeployProvCapAdmin_Type = FspR7AdminStateCaps
_CrsConnDeployProvCapAdmin_Object = MibTableColumn
crsConnDeployProvCapAdmin = _CrsConnDeployProvCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 6),
    _CrsConnDeployProvCapAdmin_Type()
)
crsConnDeployProvCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapAdmin.setStatus("current")
_CrsConnDeployProvCapTunnelAid_Type = Integer32
_CrsConnDeployProvCapTunnelAid_Object = MibTableColumn
crsConnDeployProvCapTunnelAid = _CrsConnDeployProvCapTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 7),
    _CrsConnDeployProvCapTunnelAid_Type()
)
crsConnDeployProvCapTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapTunnelAid.setStatus("current")
_CrsConnDeployProvCapAlias_Type = Integer32
_CrsConnDeployProvCapAlias_Object = MibTableColumn
crsConnDeployProvCapAlias = _CrsConnDeployProvCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 8),
    _CrsConnDeployProvCapAlias_Type()
)
crsConnDeployProvCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapAlias.setStatus("current")
_CrsConnDeployProvCapCrossConnType_Type = FspR7TypeCrsCaps
_CrsConnDeployProvCapCrossConnType_Object = MibTableColumn
crsConnDeployProvCapCrossConnType = _CrsConnDeployProvCapCrossConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 9),
    _CrsConnDeployProvCapCrossConnType_Type()
)
crsConnDeployProvCapCrossConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapCrossConnType.setStatus("current")
_CrsConnDeployProvCapPathNode_Type = FspR7PathNodeCaps
_CrsConnDeployProvCapPathNode_Object = MibTableColumn
crsConnDeployProvCapPathNode = _CrsConnDeployProvCapPathNode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 10),
    _CrsConnDeployProvCapPathNode_Type()
)
crsConnDeployProvCapPathNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapPathNode.setStatus("current")
_CrsConnDeployProvCapType_Type = FspR7InterfaceTypeCaps
_CrsConnDeployProvCapType_Object = MibTableColumn
crsConnDeployProvCapType = _CrsConnDeployProvCapType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 4, 1, 11),
    _CrsConnDeployProvCapType_Type()
)
crsConnDeployProvCapType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvCapType.setStatus("current")
_CrsConnDeployProvDefaultsTable_Object = MibTable
crsConnDeployProvDefaultsTable = _CrsConnDeployProvDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5)
)
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsTable.setStatus("current")
_CrsConnDeployProvDefaultsEntry_Object = MibTableRow
crsConnDeployProvDefaultsEntry = _CrsConnDeployProvDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1)
)
crsConnDeployProvDefaultsEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnDeployProvFrom"),
    (0, "FspR7-MIB", "crsConnDeployProvTo"),
)
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsEntry.setStatus("current")
_CrsConnDeployProvDefaultsFrom_Type = EntityIndex
_CrsConnDeployProvDefaultsFrom_Object = MibTableColumn
crsConnDeployProvDefaultsFrom = _CrsConnDeployProvDefaultsFrom_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 1),
    _CrsConnDeployProvDefaultsFrom_Type()
)
crsConnDeployProvDefaultsFrom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsFrom.setStatus("current")
_CrsConnDeployProvDefaultsTo_Type = EntityIndex
_CrsConnDeployProvDefaultsTo_Object = MibTableColumn
crsConnDeployProvDefaultsTo = _CrsConnDeployProvDefaultsTo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 2),
    _CrsConnDeployProvDefaultsTo_Type()
)
crsConnDeployProvDefaultsTo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsTo.setStatus("current")
_CrsConnDeployProvDefaultsRowStatus_Type = RowStatus
_CrsConnDeployProvDefaultsRowStatus_Object = MibTableColumn
crsConnDeployProvDefaultsRowStatus = _CrsConnDeployProvDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 3),
    _CrsConnDeployProvDefaultsRowStatus_Type()
)
crsConnDeployProvDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsRowStatus.setStatus("current")
_CrsConnDeployProvDefaultsConn_Type = FspR7Conn
_CrsConnDeployProvDefaultsConn_Object = MibTableColumn
crsConnDeployProvDefaultsConn = _CrsConnDeployProvDefaultsConn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 4),
    _CrsConnDeployProvDefaultsConn_Type()
)
crsConnDeployProvDefaultsConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsConn.setStatus("current")
_CrsConnDeployProvDefaultsRedLineState_Type = FspR7RedLinedState
_CrsConnDeployProvDefaultsRedLineState_Object = MibTableColumn
crsConnDeployProvDefaultsRedLineState = _CrsConnDeployProvDefaultsRedLineState_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 5),
    _CrsConnDeployProvDefaultsRedLineState_Type()
)
crsConnDeployProvDefaultsRedLineState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsRedLineState.setStatus("current")
_CrsConnDeployProvDefaultsAdmin_Type = FspR7AdminState
_CrsConnDeployProvDefaultsAdmin_Object = MibTableColumn
crsConnDeployProvDefaultsAdmin = _CrsConnDeployProvDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 6),
    _CrsConnDeployProvDefaultsAdmin_Type()
)
crsConnDeployProvDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsAdmin.setStatus("current")
_CrsConnDeployProvDefaultsTunnelAid_Type = SnmpAdminString
_CrsConnDeployProvDefaultsTunnelAid_Object = MibTableColumn
crsConnDeployProvDefaultsTunnelAid = _CrsConnDeployProvDefaultsTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 7),
    _CrsConnDeployProvDefaultsTunnelAid_Type()
)
crsConnDeployProvDefaultsTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsTunnelAid.setStatus("current")
_CrsConnDeployProvDefaultsAlias_Type = SnmpAdminString
_CrsConnDeployProvDefaultsAlias_Object = MibTableColumn
crsConnDeployProvDefaultsAlias = _CrsConnDeployProvDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 8),
    _CrsConnDeployProvDefaultsAlias_Type()
)
crsConnDeployProvDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsAlias.setStatus("current")
_CrsConnDeployProvDefaultsCrossConnType_Type = FspR7TypeCrs
_CrsConnDeployProvDefaultsCrossConnType_Object = MibTableColumn
crsConnDeployProvDefaultsCrossConnType = _CrsConnDeployProvDefaultsCrossConnType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 9),
    _CrsConnDeployProvDefaultsCrossConnType_Type()
)
crsConnDeployProvDefaultsCrossConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsCrossConnType.setStatus("current")
_CrsConnDeployProvDefaultsPathNode_Type = FspR7PathNode
_CrsConnDeployProvDefaultsPathNode_Object = MibTableColumn
crsConnDeployProvDefaultsPathNode = _CrsConnDeployProvDefaultsPathNode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 10),
    _CrsConnDeployProvDefaultsPathNode_Type()
)
crsConnDeployProvDefaultsPathNode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsPathNode.setStatus("current")
_CrsConnDeployProvDefaultsType_Type = FspR7InterfaceType
_CrsConnDeployProvDefaultsType_Object = MibTableColumn
crsConnDeployProvDefaultsType = _CrsConnDeployProvDefaultsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 5, 1, 11),
    _CrsConnDeployProvDefaultsType_Type()
)
crsConnDeployProvDefaultsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnDeployProvDefaultsType.setStatus("current")
_CrsConnWdmUnusedFromPointsTable_Object = MibTable
crsConnWdmUnusedFromPointsTable = _CrsConnWdmUnusedFromPointsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 6)
)
if mibBuilder.loadTexts:
    crsConnWdmUnusedFromPointsTable.setStatus("current")
_CrsConnWdmUnusedFromPointsEntry_Object = MibTableRow
crsConnWdmUnusedFromPointsEntry = _CrsConnWdmUnusedFromPointsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 6, 1)
)
crsConnWdmUnusedFromPointsEntry.setIndexNames(
    (0, "FspR7-MIB", "crsConnWdmUnusedFromPointsAidValueFromPoint"),
)
if mibBuilder.loadTexts:
    crsConnWdmUnusedFromPointsEntry.setStatus("current")
_CrsConnWdmUnusedFromPointsAidValueFromPoint_Type = EntityIndex
_CrsConnWdmUnusedFromPointsAidValueFromPoint_Object = MibTableColumn
crsConnWdmUnusedFromPointsAidValueFromPoint = _CrsConnWdmUnusedFromPointsAidValueFromPoint_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 6, 6, 1, 1),
    _CrsConnWdmUnusedFromPointsAidValueFromPoint_Type()
)
crsConnWdmUnusedFromPointsAidValueFromPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    crsConnWdmUnusedFromPointsAidValueFromPoint.setStatus("current")
_CloningEntitiesDeployProv_ObjectIdentity = ObjectIdentity
cloningEntitiesDeployProv = _CloningEntitiesDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7)
)
_CloningTable_Object = MibTable
cloningTable = _CloningTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 1)
)
if mibBuilder.loadTexts:
    cloningTable.setStatus("current")
_CloningEntry_Object = MibTableRow
cloningEntry = _CloningEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 1, 1)
)
cloningEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    cloningEntry.setStatus("current")
_CloningSource_Type = EntityIndex
_CloningSource_Object = MibTableColumn
cloningSource = _CloningSource_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 1, 1, 1),
    _CloningSource_Type()
)
cloningSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cloningSource.setStatus("current")
_EntitiesToCloningTable_Object = MibTable
entitiesToCloningTable = _EntitiesToCloningTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 2)
)
if mibBuilder.loadTexts:
    entitiesToCloningTable.setStatus("current")
_EntitiesToCloningEntry_Object = MibTableRow
entitiesToCloningEntry = _EntitiesToCloningEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 2, 1)
)
entitiesToCloningEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "entitiesToCloningEntity"),
)
if mibBuilder.loadTexts:
    entitiesToCloningEntry.setStatus("current")
_EntitiesToCloningEntity_Type = EntityIndex
_EntitiesToCloningEntity_Object = MibTableColumn
entitiesToCloningEntity = _EntitiesToCloningEntity_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 2, 1, 1),
    _EntitiesToCloningEntity_Type()
)
entitiesToCloningEntity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    entitiesToCloningEntity.setStatus("current")
_ForceDeployProvApsTable_Object = MibTable
forceDeployProvApsTable = _ForceDeployProvApsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3)
)
if mibBuilder.loadTexts:
    forceDeployProvApsTable.setStatus("current")
_ForceDeployProvApsEntry_Object = MibTableRow
forceDeployProvApsEntry = _ForceDeployProvApsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1)
)
forceDeployProvApsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    forceDeployProvApsEntry.setStatus("current")
_ForceDeployProvApsRowStatus_Type = RowStatus
_ForceDeployProvApsRowStatus_Object = MibTableColumn
forceDeployProvApsRowStatus = _ForceDeployProvApsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 1),
    _ForceDeployProvApsRowStatus_Type()
)
forceDeployProvApsRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsRowStatus.setStatus("current")
_ForceDeployProvApsForceDestroy_Type = FspR7ForcedStatus
_ForceDeployProvApsForceDestroy_Object = MibTableColumn
forceDeployProvApsForceDestroy = _ForceDeployProvApsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 2),
    _ForceDeployProvApsForceDestroy_Type()
)
forceDeployProvApsForceDestroy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsForceDestroy.setStatus("current")
_ForceDeployProvApsSDswitching_Type = EnableState
_ForceDeployProvApsSDswitching_Object = MibTableColumn
forceDeployProvApsSDswitching = _ForceDeployProvApsSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 3),
    _ForceDeployProvApsSDswitching_Type()
)
forceDeployProvApsSDswitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsSDswitching.setStatus("current")
_ForceDeployProvApsHoldOffTime_Type = ApsHoldoffTime
_ForceDeployProvApsHoldOffTime_Object = MibTableColumn
forceDeployProvApsHoldOffTime = _ForceDeployProvApsHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 4),
    _ForceDeployProvApsHoldOffTime_Type()
)
forceDeployProvApsHoldOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsHoldOffTime.setStatus("current")
_ForceDeployProvApsProtectionMech_Type = ProtectionMech
_ForceDeployProvApsProtectionMech_Object = MibTableColumn
forceDeployProvApsProtectionMech = _ForceDeployProvApsProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 5),
    _ForceDeployProvApsProtectionMech_Type()
)
forceDeployProvApsProtectionMech.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsProtectionMech.setStatus("current")
_ForceDeployProvApsWorkingAid_Type = EntityIndex
_ForceDeployProvApsWorkingAid_Object = MibTableColumn
forceDeployProvApsWorkingAid = _ForceDeployProvApsWorkingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 6),
    _ForceDeployProvApsWorkingAid_Type()
)
forceDeployProvApsWorkingAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsWorkingAid.setStatus("current")
_ForceDeployProvApsProtectionAid_Type = EntityIndex
_ForceDeployProvApsProtectionAid_Object = MibTableColumn
forceDeployProvApsProtectionAid = _ForceDeployProvApsProtectionAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 7),
    _ForceDeployProvApsProtectionAid_Type()
)
forceDeployProvApsProtectionAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsProtectionAid.setStatus("current")
_ForceDeployProvApsSignalDegradeSwitching_Type = EnableState
_ForceDeployProvApsSignalDegradeSwitching_Object = MibTableColumn
forceDeployProvApsSignalDegradeSwitching = _ForceDeployProvApsSignalDegradeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 8),
    _ForceDeployProvApsSignalDegradeSwitching_Type()
)
forceDeployProvApsSignalDegradeSwitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsSignalDegradeSwitching.setStatus("current")
_ForceDeployProvApsSignalFailureSwitching_Type = EnableState
_ForceDeployProvApsSignalFailureSwitching_Object = MibTableColumn
forceDeployProvApsSignalFailureSwitching = _ForceDeployProvApsSignalFailureSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 9),
    _ForceDeployProvApsSignalFailureSwitching_Type()
)
forceDeployProvApsSignalFailureSwitching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsSignalFailureSwitching.setStatus("current")
_ForceDeployProvApsFarEndIp_Type = IpAddress
_ForceDeployProvApsFarEndIp_Object = MibTableColumn
forceDeployProvApsFarEndIp = _ForceDeployProvApsFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 10),
    _ForceDeployProvApsFarEndIp_Type()
)
forceDeployProvApsFarEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsFarEndIp.setStatus("current")
_ForceDeployProvApsPeerAid_Type = EntityIndex
_ForceDeployProvApsPeerAid_Object = MibTableColumn
forceDeployProvApsPeerAid = _ForceDeployProvApsPeerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 11),
    _ForceDeployProvApsPeerAid_Type()
)
forceDeployProvApsPeerAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsPeerAid.setStatus("current")
_ForceDeployProvApsApsType_Type = ApsType
_ForceDeployProvApsApsType_Object = MibTableColumn
forceDeployProvApsApsType = _ForceDeployProvApsApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 12),
    _ForceDeployProvApsApsType_Type()
)
forceDeployProvApsApsType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsApsType.setStatus("current")
_ForceDeployProvApsRevertMode_Type = ApsRevertMode
_ForceDeployProvApsRevertMode_Object = MibTableColumn
forceDeployProvApsRevertMode = _ForceDeployProvApsRevertMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 13),
    _ForceDeployProvApsRevertMode_Type()
)
forceDeployProvApsRevertMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsRevertMode.setStatus("current")


class _ForceDeployProvApsWaitToRestore_Type(Unsigned32):
    """Custom type forceDeployProvApsWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ForceDeployProvApsWaitToRestore_Type.__name__ = "Unsigned32"
_ForceDeployProvApsWaitToRestore_Object = MibTableColumn
forceDeployProvApsWaitToRestore = _ForceDeployProvApsWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 14),
    _ForceDeployProvApsWaitToRestore_Type()
)
forceDeployProvApsWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    forceDeployProvApsWaitToRestore.setUnits("min")
_ForceDeployProvApsDirection_Type = ApsDirection
_ForceDeployProvApsDirection_Object = MibTableColumn
forceDeployProvApsDirection = _ForceDeployProvApsDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 3, 1, 15),
    _ForceDeployProvApsDirection_Type()
)
forceDeployProvApsDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    forceDeployProvApsDirection.setStatus("current")
_ForceDeployProvApsCapTable_Object = MibTable
forceDeployProvApsCapTable = _ForceDeployProvApsCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4)
)
if mibBuilder.loadTexts:
    forceDeployProvApsCapTable.setStatus("current")
_ForceDeployProvApsCapEntry_Object = MibTableRow
forceDeployProvApsCapEntry = _ForceDeployProvApsCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1)
)
forceDeployProvApsCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    forceDeployProvApsCapEntry.setStatus("current")
_ForceDeployProvApsCapRowStatus_Type = FspR7RowStatusCaps
_ForceDeployProvApsCapRowStatus_Object = MibTableColumn
forceDeployProvApsCapRowStatus = _ForceDeployProvApsCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 1),
    _ForceDeployProvApsCapRowStatus_Type()
)
forceDeployProvApsCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapRowStatus.setStatus("current")
_ForceDeployProvApsCapForceDestroy_Type = FspR7ForcedStatusCaps
_ForceDeployProvApsCapForceDestroy_Object = MibTableColumn
forceDeployProvApsCapForceDestroy = _ForceDeployProvApsCapForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 2),
    _ForceDeployProvApsCapForceDestroy_Type()
)
forceDeployProvApsCapForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapForceDestroy.setStatus("current")
_ForceDeployProvApsCapSDswitching_Type = EnableStateCaps
_ForceDeployProvApsCapSDswitching_Object = MibTableColumn
forceDeployProvApsCapSDswitching = _ForceDeployProvApsCapSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 3),
    _ForceDeployProvApsCapSDswitching_Type()
)
forceDeployProvApsCapSDswitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapSDswitching.setStatus("current")
_ForceDeployProvApsCapHoldOffTime_Type = ApsHoldoffTimeCaps
_ForceDeployProvApsCapHoldOffTime_Object = MibTableColumn
forceDeployProvApsCapHoldOffTime = _ForceDeployProvApsCapHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 4),
    _ForceDeployProvApsCapHoldOffTime_Type()
)
forceDeployProvApsCapHoldOffTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapHoldOffTime.setStatus("current")
_ForceDeployProvApsCapProtectionMech_Type = ProtectionMechCaps
_ForceDeployProvApsCapProtectionMech_Object = MibTableColumn
forceDeployProvApsCapProtectionMech = _ForceDeployProvApsCapProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 5),
    _ForceDeployProvApsCapProtectionMech_Type()
)
forceDeployProvApsCapProtectionMech.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapProtectionMech.setStatus("current")
_ForceDeployProvApsCapWorkingAid_Type = Integer32
_ForceDeployProvApsCapWorkingAid_Object = MibTableColumn
forceDeployProvApsCapWorkingAid = _ForceDeployProvApsCapWorkingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 6),
    _ForceDeployProvApsCapWorkingAid_Type()
)
forceDeployProvApsCapWorkingAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapWorkingAid.setStatus("current")
_ForceDeployProvApsCapProtectionAid_Type = Integer32
_ForceDeployProvApsCapProtectionAid_Object = MibTableColumn
forceDeployProvApsCapProtectionAid = _ForceDeployProvApsCapProtectionAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 7),
    _ForceDeployProvApsCapProtectionAid_Type()
)
forceDeployProvApsCapProtectionAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapProtectionAid.setStatus("current")
_ForceDeployProvApsCapSignalDegradeSwitching_Type = EnableStateCaps
_ForceDeployProvApsCapSignalDegradeSwitching_Object = MibTableColumn
forceDeployProvApsCapSignalDegradeSwitching = _ForceDeployProvApsCapSignalDegradeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 8),
    _ForceDeployProvApsCapSignalDegradeSwitching_Type()
)
forceDeployProvApsCapSignalDegradeSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapSignalDegradeSwitching.setStatus("current")
_ForceDeployProvApsCapSignalFailureSwitching_Type = EnableStateCaps
_ForceDeployProvApsCapSignalFailureSwitching_Object = MibTableColumn
forceDeployProvApsCapSignalFailureSwitching = _ForceDeployProvApsCapSignalFailureSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 9),
    _ForceDeployProvApsCapSignalFailureSwitching_Type()
)
forceDeployProvApsCapSignalFailureSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapSignalFailureSwitching.setStatus("current")
_ForceDeployProvApsCapFarEndIp_Type = FspR7YesNo
_ForceDeployProvApsCapFarEndIp_Object = MibTableColumn
forceDeployProvApsCapFarEndIp = _ForceDeployProvApsCapFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 10),
    _ForceDeployProvApsCapFarEndIp_Type()
)
forceDeployProvApsCapFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapFarEndIp.setStatus("current")
_ForceDeployProvApsCapPeerAid_Type = Integer32
_ForceDeployProvApsCapPeerAid_Object = MibTableColumn
forceDeployProvApsCapPeerAid = _ForceDeployProvApsCapPeerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 11),
    _ForceDeployProvApsCapPeerAid_Type()
)
forceDeployProvApsCapPeerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapPeerAid.setStatus("current")
_ForceDeployProvApsCapApsType_Type = ApsTypeCaps
_ForceDeployProvApsCapApsType_Object = MibTableColumn
forceDeployProvApsCapApsType = _ForceDeployProvApsCapApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 12),
    _ForceDeployProvApsCapApsType_Type()
)
forceDeployProvApsCapApsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapApsType.setStatus("current")
_ForceDeployProvApsCapRevertMode_Type = ApsRevertModeCaps
_ForceDeployProvApsCapRevertMode_Object = MibTableColumn
forceDeployProvApsCapRevertMode = _ForceDeployProvApsCapRevertMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 13),
    _ForceDeployProvApsCapRevertMode_Type()
)
forceDeployProvApsCapRevertMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapRevertMode.setStatus("current")
_ForceDeployProvApsCapWaitToRestore_Type = FspR7Unsigned32Caps
_ForceDeployProvApsCapWaitToRestore_Object = MibTableColumn
forceDeployProvApsCapWaitToRestore = _ForceDeployProvApsCapWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 14),
    _ForceDeployProvApsCapWaitToRestore_Type()
)
forceDeployProvApsCapWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    forceDeployProvApsCapWaitToRestore.setUnits("min")
_ForceDeployProvApsCapDirection_Type = ApsDirectionCaps
_ForceDeployProvApsCapDirection_Object = MibTableColumn
forceDeployProvApsCapDirection = _ForceDeployProvApsCapDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 4, 1, 15),
    _ForceDeployProvApsCapDirection_Type()
)
forceDeployProvApsCapDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsCapDirection.setStatus("current")
_ForceDeployProvApsDefaultsTable_Object = MibTable
forceDeployProvApsDefaultsTable = _ForceDeployProvApsDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5)
)
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsTable.setStatus("current")
_ForceDeployProvApsDefaultsEntry_Object = MibTableRow
forceDeployProvApsDefaultsEntry = _ForceDeployProvApsDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1)
)
forceDeployProvApsDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsEntry.setStatus("current")
_ForceDeployProvApsDefaultsRowStatus_Type = RowStatus
_ForceDeployProvApsDefaultsRowStatus_Object = MibTableColumn
forceDeployProvApsDefaultsRowStatus = _ForceDeployProvApsDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 1),
    _ForceDeployProvApsDefaultsRowStatus_Type()
)
forceDeployProvApsDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsRowStatus.setStatus("current")
_ForceDeployProvApsDefaultsForceDestroy_Type = FspR7ForcedStatus
_ForceDeployProvApsDefaultsForceDestroy_Object = MibTableColumn
forceDeployProvApsDefaultsForceDestroy = _ForceDeployProvApsDefaultsForceDestroy_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 2),
    _ForceDeployProvApsDefaultsForceDestroy_Type()
)
forceDeployProvApsDefaultsForceDestroy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsForceDestroy.setStatus("current")
_ForceDeployProvApsDefaultsSDswitching_Type = EnableState
_ForceDeployProvApsDefaultsSDswitching_Object = MibTableColumn
forceDeployProvApsDefaultsSDswitching = _ForceDeployProvApsDefaultsSDswitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 3),
    _ForceDeployProvApsDefaultsSDswitching_Type()
)
forceDeployProvApsDefaultsSDswitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsSDswitching.setStatus("current")
_ForceDeployProvApsDefaultsHoldOffTime_Type = ApsHoldoffTime
_ForceDeployProvApsDefaultsHoldOffTime_Object = MibTableColumn
forceDeployProvApsDefaultsHoldOffTime = _ForceDeployProvApsDefaultsHoldOffTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 4),
    _ForceDeployProvApsDefaultsHoldOffTime_Type()
)
forceDeployProvApsDefaultsHoldOffTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsHoldOffTime.setStatus("current")
_ForceDeployProvApsDefaultsProtectionMech_Type = ProtectionMech
_ForceDeployProvApsDefaultsProtectionMech_Object = MibTableColumn
forceDeployProvApsDefaultsProtectionMech = _ForceDeployProvApsDefaultsProtectionMech_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 5),
    _ForceDeployProvApsDefaultsProtectionMech_Type()
)
forceDeployProvApsDefaultsProtectionMech.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsProtectionMech.setStatus("current")
_ForceDeployProvApsDefaultsWorkingAid_Type = EntityIndex
_ForceDeployProvApsDefaultsWorkingAid_Object = MibTableColumn
forceDeployProvApsDefaultsWorkingAid = _ForceDeployProvApsDefaultsWorkingAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 6),
    _ForceDeployProvApsDefaultsWorkingAid_Type()
)
forceDeployProvApsDefaultsWorkingAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsWorkingAid.setStatus("current")
_ForceDeployProvApsDefaultsProtectionAid_Type = EntityIndex
_ForceDeployProvApsDefaultsProtectionAid_Object = MibTableColumn
forceDeployProvApsDefaultsProtectionAid = _ForceDeployProvApsDefaultsProtectionAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 7),
    _ForceDeployProvApsDefaultsProtectionAid_Type()
)
forceDeployProvApsDefaultsProtectionAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsProtectionAid.setStatus("current")
_ForceDeployProvApsDefaultsSignalDegradeSwitching_Type = EnableState
_ForceDeployProvApsDefaultsSignalDegradeSwitching_Object = MibTableColumn
forceDeployProvApsDefaultsSignalDegradeSwitching = _ForceDeployProvApsDefaultsSignalDegradeSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 8),
    _ForceDeployProvApsDefaultsSignalDegradeSwitching_Type()
)
forceDeployProvApsDefaultsSignalDegradeSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsSignalDegradeSwitching.setStatus("current")
_ForceDeployProvApsDefaultsSignalFailureSwitching_Type = EnableState
_ForceDeployProvApsDefaultsSignalFailureSwitching_Object = MibTableColumn
forceDeployProvApsDefaultsSignalFailureSwitching = _ForceDeployProvApsDefaultsSignalFailureSwitching_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 9),
    _ForceDeployProvApsDefaultsSignalFailureSwitching_Type()
)
forceDeployProvApsDefaultsSignalFailureSwitching.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsSignalFailureSwitching.setStatus("current")
_ForceDeployProvApsDefaultsFarEndIp_Type = IpAddress
_ForceDeployProvApsDefaultsFarEndIp_Object = MibTableColumn
forceDeployProvApsDefaultsFarEndIp = _ForceDeployProvApsDefaultsFarEndIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 10),
    _ForceDeployProvApsDefaultsFarEndIp_Type()
)
forceDeployProvApsDefaultsFarEndIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsFarEndIp.setStatus("current")
_ForceDeployProvApsDefaultsPeerAid_Type = EntityIndex
_ForceDeployProvApsDefaultsPeerAid_Object = MibTableColumn
forceDeployProvApsDefaultsPeerAid = _ForceDeployProvApsDefaultsPeerAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 11),
    _ForceDeployProvApsDefaultsPeerAid_Type()
)
forceDeployProvApsDefaultsPeerAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsPeerAid.setStatus("current")
_ForceDeployProvApsDefaultsApsType_Type = ApsType
_ForceDeployProvApsDefaultsApsType_Object = MibTableColumn
forceDeployProvApsDefaultsApsType = _ForceDeployProvApsDefaultsApsType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 12),
    _ForceDeployProvApsDefaultsApsType_Type()
)
forceDeployProvApsDefaultsApsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsApsType.setStatus("current")
_ForceDeployProvApsDefaultsRevertMode_Type = ApsRevertMode
_ForceDeployProvApsDefaultsRevertMode_Object = MibTableColumn
forceDeployProvApsDefaultsRevertMode = _ForceDeployProvApsDefaultsRevertMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 13),
    _ForceDeployProvApsDefaultsRevertMode_Type()
)
forceDeployProvApsDefaultsRevertMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsRevertMode.setStatus("current")


class _ForceDeployProvApsDefaultsWaitToRestore_Type(Unsigned32):
    """Custom type forceDeployProvApsDefaultsWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ForceDeployProvApsDefaultsWaitToRestore_Type.__name__ = "Unsigned32"
_ForceDeployProvApsDefaultsWaitToRestore_Object = MibTableColumn
forceDeployProvApsDefaultsWaitToRestore = _ForceDeployProvApsDefaultsWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 14),
    _ForceDeployProvApsDefaultsWaitToRestore_Type()
)
forceDeployProvApsDefaultsWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsWaitToRestore.setUnits("min")
_ForceDeployProvApsDefaultsDirection_Type = ApsDirection
_ForceDeployProvApsDefaultsDirection_Object = MibTableColumn
forceDeployProvApsDefaultsDirection = _ForceDeployProvApsDefaultsDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 5, 1, 15),
    _ForceDeployProvApsDefaultsDirection_Type()
)
forceDeployProvApsDefaultsDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsDefaultsDirection.setStatus("current")
_ForceDeployProvApsWorkingAidCapsTable_Object = MibTable
forceDeployProvApsWorkingAidCapsTable = _ForceDeployProvApsWorkingAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 6)
)
if mibBuilder.loadTexts:
    forceDeployProvApsWorkingAidCapsTable.setStatus("current")
_ForceDeployProvApsWorkingAidCapsEntry_Object = MibTableRow
forceDeployProvApsWorkingAidCapsEntry = _ForceDeployProvApsWorkingAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 6, 1)
)
forceDeployProvApsWorkingAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvApsWorkingAidCapsIndex"),
)
if mibBuilder.loadTexts:
    forceDeployProvApsWorkingAidCapsEntry.setStatus("current")
_ForceDeployProvApsWorkingAidCapsIndex_Type = EntityIndex
_ForceDeployProvApsWorkingAidCapsIndex_Object = MibTableColumn
forceDeployProvApsWorkingAidCapsIndex = _ForceDeployProvApsWorkingAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 6, 1, 1),
    _ForceDeployProvApsWorkingAidCapsIndex_Type()
)
forceDeployProvApsWorkingAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsWorkingAidCapsIndex.setStatus("current")
_ForceDeployProvApsProtectingAidCapsTable_Object = MibTable
forceDeployProvApsProtectingAidCapsTable = _ForceDeployProvApsProtectingAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 7)
)
if mibBuilder.loadTexts:
    forceDeployProvApsProtectingAidCapsTable.setStatus("current")
_ForceDeployProvApsProtectingAidCapsEntry_Object = MibTableRow
forceDeployProvApsProtectingAidCapsEntry = _ForceDeployProvApsProtectingAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 7, 1)
)
forceDeployProvApsProtectingAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvApsProtectingAidCapsIndex"),
)
if mibBuilder.loadTexts:
    forceDeployProvApsProtectingAidCapsEntry.setStatus("current")
_ForceDeployProvApsProtectingAidCapsIndex_Type = EntityIndex
_ForceDeployProvApsProtectingAidCapsIndex_Object = MibTableColumn
forceDeployProvApsProtectingAidCapsIndex = _ForceDeployProvApsProtectingAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 7, 1, 1),
    _ForceDeployProvApsProtectingAidCapsIndex_Type()
)
forceDeployProvApsProtectingAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsProtectingAidCapsIndex.setStatus("current")
_ForceDeployProvApsPeerAidCapsTable_Object = MibTable
forceDeployProvApsPeerAidCapsTable = _ForceDeployProvApsPeerAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 8)
)
if mibBuilder.loadTexts:
    forceDeployProvApsPeerAidCapsTable.setStatus("current")
_ForceDeployProvApsPeerAidCapsEntry_Object = MibTableRow
forceDeployProvApsPeerAidCapsEntry = _ForceDeployProvApsPeerAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 8, 1)
)
forceDeployProvApsPeerAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "deployProvApsWorkingAidCapsIndex"),
)
if mibBuilder.loadTexts:
    forceDeployProvApsPeerAidCapsEntry.setStatus("current")
_ForceDeployProvApsPeerAidCapsIndex_Type = EntityIndex
_ForceDeployProvApsPeerAidCapsIndex_Object = MibTableColumn
forceDeployProvApsPeerAidCapsIndex = _ForceDeployProvApsPeerAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 7, 8, 1, 1),
    _ForceDeployProvApsPeerAidCapsIndex_Type()
)
forceDeployProvApsPeerAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    forceDeployProvApsPeerAidCapsIndex.setStatus("current")
_ControlPlaneDeployProv_ObjectIdentity = ObjectIdentity
controlPlaneDeployProv = _ControlPlaneDeployProv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8)
)
_UnusedWdmTunnelIndex_Type = Unsigned32
_UnusedWdmTunnelIndex_Object = MibScalar
unusedWdmTunnelIndex = _UnusedWdmTunnelIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 1),
    _UnusedWdmTunnelIndex_Type()
)
unusedWdmTunnelIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unusedWdmTunnelIndex.setStatus("current")
_UnusedWdmPathIndex_Type = Unsigned32
_UnusedWdmPathIndex_Object = MibScalar
unusedWdmPathIndex = _UnusedWdmPathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 2),
    _UnusedWdmPathIndex_Type()
)
unusedWdmPathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unusedWdmPathIndex.setStatus("current")
_DeployProvControlPlaneWdmTable_Object = MibTable
deployProvControlPlaneWdmTable = _DeployProvControlPlaneWdmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmTable.setStatus("current")
_DeployProvControlPlaneWdmEntry_Object = MibTableRow
deployProvControlPlaneWdmEntry = _DeployProvControlPlaneWdmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1)
)
deployProvControlPlaneWdmEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmEntry.setStatus("current")
_DeployProvControlPlaneWdmRowStatus_Type = RowStatus
_DeployProvControlPlaneWdmRowStatus_Object = MibTableColumn
deployProvControlPlaneWdmRowStatus = _DeployProvControlPlaneWdmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 1),
    _DeployProvControlPlaneWdmRowStatus_Type()
)
deployProvControlPlaneWdmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRowStatus.setStatus("current")
_DeployProvControlPlaneWdmCtmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCtmConfigFlag = _DeployProvControlPlaneWdmCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 2),
    _DeployProvControlPlaneWdmCtmConfigFlag_Type()
)
deployProvControlPlaneWdmCtmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCtmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCtmTraceDetail = _DeployProvControlPlaneWdmCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 3),
    _DeployProvControlPlaneWdmCtmTraceDetail_Type()
)
deployProvControlPlaneWdmCtmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCtmSetupTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCtmSetupTimeout = _DeployProvControlPlaneWdmCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 4),
    _DeployProvControlPlaneWdmCtmSetupTimeout_Type()
)
deployProvControlPlaneWdmCtmSetupTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneWdmCtmShutdownTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCtmShutdownTimeout = _DeployProvControlPlaneWdmCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 5),
    _DeployProvControlPlaneWdmCtmShutdownTimeout_Type()
)
deployProvControlPlaneWdmCtmShutdownTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneWdmCtmRetryWait_Type = Unsigned32
_DeployProvControlPlaneWdmCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneWdmCtmRetryWait = _DeployProvControlPlaneWdmCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 6),
    _DeployProvControlPlaneWdmCtmRetryWait_Type()
)
deployProvControlPlaneWdmCtmRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmRetryWait.setUnits("s")
_DeployProvControlPlaneWdmCtmRetryWaitMultiplier_Type = Unsigned32
_DeployProvControlPlaneWdmCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneWdmCtmRetryWaitMultiplier = _DeployProvControlPlaneWdmCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 7),
    _DeployProvControlPlaneWdmCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneWdmCtmRetryWaitMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneWdmCtmMaximumRetryWait_Type = Unsigned32
_DeployProvControlPlaneWdmCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneWdmCtmMaximumRetryWait = _DeployProvControlPlaneWdmCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 8),
    _DeployProvControlPlaneWdmCtmMaximumRetryWait_Type()
)
deployProvControlPlaneWdmCtmMaximumRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneWdmCtmMaximumRetryNumber_Type = Unsigned32
_DeployProvControlPlaneWdmCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneWdmCtmMaximumRetryNumber = _DeployProvControlPlaneWdmCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 9),
    _DeployProvControlPlaneWdmCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneWdmCtmMaximumRetryNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneWdmRaConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmRaConfigFlag = _DeployProvControlPlaneWdmRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 10),
    _DeployProvControlPlaneWdmRaConfigFlag_Type()
)
deployProvControlPlaneWdmRaConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRaConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmRaTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmRaTraceDetail = _DeployProvControlPlaneWdmRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 11),
    _DeployProvControlPlaneWdmRaTraceDetail_Type()
)
deployProvControlPlaneWdmRaTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRaTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmRaAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneWdmRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneWdmRaAlarmActivationTime = _DeployProvControlPlaneWdmRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 12),
    _DeployProvControlPlaneWdmRaAlarmActivationTime_Type()
)
deployProvControlPlaneWdmRaAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneWdmCmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCmConfigFlag = _DeployProvControlPlaneWdmCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 13),
    _DeployProvControlPlaneWdmCmConfigFlag_Type()
)
deployProvControlPlaneWdmCmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCmTraceDetail = _DeployProvControlPlaneWdmCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 14),
    _DeployProvControlPlaneWdmCmTraceDetail_Type()
)
deployProvControlPlaneWdmCmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCmAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneWdmCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneWdmCmAlarmActivationTime = _DeployProvControlPlaneWdmCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 15),
    _DeployProvControlPlaneWdmCmAlarmActivationTime_Type()
)
deployProvControlPlaneWdmCmAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneWdmCmFisFrsTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCmFisFrsTimeout = _DeployProvControlPlaneWdmCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 16),
    _DeployProvControlPlaneWdmCmFisFrsTimeout_Type()
)
deployProvControlPlaneWdmCmFisFrsTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneWdmCmCrankBackTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCmCrankBackTimeout = _DeployProvControlPlaneWdmCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 17),
    _DeployProvControlPlaneWdmCmCrankBackTimeout_Type()
)
deployProvControlPlaneWdmCmCrankBackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneWdmCdbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCdbConfigFlag = _DeployProvControlPlaneWdmCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 18),
    _DeployProvControlPlaneWdmCdbConfigFlag_Type()
)
deployProvControlPlaneWdmCdbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCdbDetail_Type = Unsigned32
_DeployProvControlPlaneWdmCdbDetail_Object = MibTableColumn
deployProvControlPlaneWdmCdbDetail = _DeployProvControlPlaneWdmCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 19),
    _DeployProvControlPlaneWdmCdbDetail_Type()
)
deployProvControlPlaneWdmCdbDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCdbDetail.setStatus("current")
_DeployProvControlPlaneWdmCdbMaxSize_Type = Unsigned32
_DeployProvControlPlaneWdmCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmCdbMaxSize = _DeployProvControlPlaneWdmCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 20),
    _DeployProvControlPlaneWdmCdbMaxSize_Type()
)
deployProvControlPlaneWdmCdbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCdbMaxSize.setStatus("current")
_DeployProvControlPlaneWdmRsvpMaxExpRestartTime_Type = Counter64String
_DeployProvControlPlaneWdmRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneWdmRsvpMaxExpRestartTime = _DeployProvControlPlaneWdmRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 21),
    _DeployProvControlPlaneWdmRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneWdmRsvpMaxExpRestartTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneWdmRsvpMaxExpRecoveryTime_Type = Unsigned32
_DeployProvControlPlaneWdmRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneWdmRsvpMaxExpRecoveryTime = _DeployProvControlPlaneWdmRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 22),
    _DeployProvControlPlaneWdmRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneWdmRsvpMaxExpRecoveryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneWdmRsvpConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmRsvpConfigFlag = _DeployProvControlPlaneWdmRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 23),
    _DeployProvControlPlaneWdmRsvpConfigFlag_Type()
)
deployProvControlPlaneWdmRsvpConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmTedbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmTedbConfigFlag = _DeployProvControlPlaneWdmTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 24),
    _DeployProvControlPlaneWdmTedbConfigFlag_Type()
)
deployProvControlPlaneWdmTedbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmTedbTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmTedbTraceDetail = _DeployProvControlPlaneWdmTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 25),
    _DeployProvControlPlaneWdmTedbTraceDetail_Type()
)
deployProvControlPlaneWdmTedbTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmTedbMaxSize_Type = Unsigned32
_DeployProvControlPlaneWdmTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmTedbMaxSize = _DeployProvControlPlaneWdmTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 26),
    _DeployProvControlPlaneWdmTedbMaxSize_Type()
)
deployProvControlPlaneWdmTedbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmTedbMaxSize.setStatus("current")
_DeployProvControlPlaneWdmTedbRouterId_Type = IpAddress
_DeployProvControlPlaneWdmTedbRouterId_Object = MibTableColumn
deployProvControlPlaneWdmTedbRouterId = _DeployProvControlPlaneWdmTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 27),
    _DeployProvControlPlaneWdmTedbRouterId_Type()
)
deployProvControlPlaneWdmTedbRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmTedbRouterId.setStatus("current")
_DeployProvControlPlaneWdmTedbMinAdvertWait_Type = Unsigned32
_DeployProvControlPlaneWdmTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneWdmTedbMinAdvertWait = _DeployProvControlPlaneWdmTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 28),
    _DeployProvControlPlaneWdmTedbMinAdvertWait_Type()
)
deployProvControlPlaneWdmTedbMinAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneWdmNaasConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmNaasConfigFlag = _DeployProvControlPlaneWdmNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 29),
    _DeployProvControlPlaneWdmNaasConfigFlag_Type()
)
deployProvControlPlaneWdmNaasConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmNaasTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmNaasTraceDetail = _DeployProvControlPlaneWdmNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 30),
    _DeployProvControlPlaneWdmNaasTraceDetail_Type()
)
deployProvControlPlaneWdmNaasTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmNaasMaxSize_Type = Unsigned32
_DeployProvControlPlaneWdmNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmNaasMaxSize = _DeployProvControlPlaneWdmNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 31),
    _DeployProvControlPlaneWdmNaasMaxSize_Type()
)
deployProvControlPlaneWdmNaasMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmNaasMaxSize.setStatus("current")
_DeployProvControlPlaneWdmNaasAdvertWait_Type = Unsigned32
_DeployProvControlPlaneWdmNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneWdmNaasAdvertWait = _DeployProvControlPlaneWdmNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 32),
    _DeployProvControlPlaneWdmNaasAdvertWait_Type()
)
deployProvControlPlaneWdmNaasAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneWdmPcConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmPcConfigFlag = _DeployProvControlPlaneWdmPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 33),
    _DeployProvControlPlaneWdmPcConfigFlag_Type()
)
deployProvControlPlaneWdmPcConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmPcConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmPcTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmPcTraceDetail = _DeployProvControlPlaneWdmPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 34),
    _DeployProvControlPlaneWdmPcTraceDetail_Type()
)
deployProvControlPlaneWdmPcTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmPcTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCdConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCdConfigFlag = _DeployProvControlPlaneWdmCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 35),
    _DeployProvControlPlaneWdmCdConfigFlag_Type()
)
deployProvControlPlaneWdmCdConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCdConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCdTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCdTraceDetail = _DeployProvControlPlaneWdmCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 36),
    _DeployProvControlPlaneWdmCdTraceDetail_Type()
)
deployProvControlPlaneWdmCdTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCdTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCdResyncTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCdResyncTimeout = _DeployProvControlPlaneWdmCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 37),
    _DeployProvControlPlaneWdmCdResyncTimeout_Type()
)
deployProvControlPlaneWdmCdResyncTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneWdmRmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmRmConfigFlag = _DeployProvControlPlaneWdmRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 38),
    _DeployProvControlPlaneWdmRmConfigFlag_Type()
)
deployProvControlPlaneWdmRmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmRmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmRmTraceDetail = _DeployProvControlPlaneWdmRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 39),
    _DeployProvControlPlaneWdmRmTraceDetail_Type()
)
deployProvControlPlaneWdmRmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmRmTraceTarget_Type = Unsigned32
_DeployProvControlPlaneWdmRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneWdmRmTraceTarget = _DeployProvControlPlaneWdmRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 40),
    _DeployProvControlPlaneWdmRmTraceTarget_Type()
)
deployProvControlPlaneWdmRmTraceTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmRmTraceTarget.setStatus("current")
_DeployProvControlPlaneWdmNodeNameSyntax_Type = FspR7NodeId
_DeployProvControlPlaneWdmNodeNameSyntax_Object = MibTableColumn
deployProvControlPlaneWdmNodeNameSyntax = _DeployProvControlPlaneWdmNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 41),
    _DeployProvControlPlaneWdmNodeNameSyntax_Type()
)
deployProvControlPlaneWdmNodeNameSyntax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmNodeNameSyntax.setStatus("deprecated")


class _DeployProvControlPlaneWdmWaitToRestore_Type(Unsigned32):
    """Custom type deployProvControlPlaneWdmWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvControlPlaneWdmWaitToRestore_Type.__name__ = "Unsigned32"
_DeployProvControlPlaneWdmWaitToRestore_Object = MibTableColumn
deployProvControlPlaneWdmWaitToRestore = _DeployProvControlPlaneWdmWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 11, 1, 42),
    _DeployProvControlPlaneWdmWaitToRestore_Type()
)
deployProvControlPlaneWdmWaitToRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmWaitToRestore.setUnits("min")
_DeployProvControlPlaneWdmCapTable_Object = MibTable
deployProvControlPlaneWdmCapTable = _DeployProvControlPlaneWdmCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapTable.setStatus("current")
_DeployProvControlPlaneWdmCapEntry_Object = MibTableRow
deployProvControlPlaneWdmCapEntry = _DeployProvControlPlaneWdmCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1)
)
deployProvControlPlaneWdmCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapEntry.setStatus("current")
_DeployProvControlPlaneWdmCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvControlPlaneWdmCapRowStatus_Object = MibTableColumn
deployProvControlPlaneWdmCapRowStatus = _DeployProvControlPlaneWdmCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 1),
    _DeployProvControlPlaneWdmCapRowStatus_Type()
)
deployProvControlPlaneWdmCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRowStatus.setStatus("current")
_DeployProvControlPlaneWdmCapCtmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmConfigFlag = _DeployProvControlPlaneWdmCapCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 2),
    _DeployProvControlPlaneWdmCapCtmConfigFlag_Type()
)
deployProvControlPlaneWdmCapCtmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapCtmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmTraceDetail = _DeployProvControlPlaneWdmCapCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 3),
    _DeployProvControlPlaneWdmCapCtmTraceDetail_Type()
)
deployProvControlPlaneWdmCapCtmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapCtmSetupTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmSetupTimeout = _DeployProvControlPlaneWdmCapCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 4),
    _DeployProvControlPlaneWdmCapCtmSetupTimeout_Type()
)
deployProvControlPlaneWdmCapCtmSetupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneWdmCapCtmShutdownTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmShutdownTimeout = _DeployProvControlPlaneWdmCapCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 5),
    _DeployProvControlPlaneWdmCapCtmShutdownTimeout_Type()
)
deployProvControlPlaneWdmCapCtmShutdownTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneWdmCapCtmRetryWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmRetryWait = _DeployProvControlPlaneWdmCapCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 6),
    _DeployProvControlPlaneWdmCapCtmRetryWait_Type()
)
deployProvControlPlaneWdmCapCtmRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmRetryWait.setUnits("s")
_DeployProvControlPlaneWdmCapCtmRetryWaitMultiplier_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmRetryWaitMultiplier = _DeployProvControlPlaneWdmCapCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 7),
    _DeployProvControlPlaneWdmCapCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneWdmCapCtmRetryWaitMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneWdmCapCtmMaximumRetryWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmMaximumRetryWait = _DeployProvControlPlaneWdmCapCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 8),
    _DeployProvControlPlaneWdmCapCtmMaximumRetryWait_Type()
)
deployProvControlPlaneWdmCapCtmMaximumRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneWdmCapCtmMaximumRetryNumber_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneWdmCapCtmMaximumRetryNumber = _DeployProvControlPlaneWdmCapCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 9),
    _DeployProvControlPlaneWdmCapCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneWdmCapCtmMaximumRetryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneWdmCapRaConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapRaConfigFlag = _DeployProvControlPlaneWdmCapRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 10),
    _DeployProvControlPlaneWdmCapRaConfigFlag_Type()
)
deployProvControlPlaneWdmCapRaConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRaConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapRaTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapRaTraceDetail = _DeployProvControlPlaneWdmCapRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 11),
    _DeployProvControlPlaneWdmCapRaTraceDetail_Type()
)
deployProvControlPlaneWdmCapRaTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRaTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapRaAlarmActivationTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneWdmCapRaAlarmActivationTime = _DeployProvControlPlaneWdmCapRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 12),
    _DeployProvControlPlaneWdmCapRaAlarmActivationTime_Type()
)
deployProvControlPlaneWdmCapRaAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneWdmCapCmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapCmConfigFlag = _DeployProvControlPlaneWdmCapCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 13),
    _DeployProvControlPlaneWdmCapCmConfigFlag_Type()
)
deployProvControlPlaneWdmCapCmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapCmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapCmTraceDetail = _DeployProvControlPlaneWdmCapCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 14),
    _DeployProvControlPlaneWdmCapCmTraceDetail_Type()
)
deployProvControlPlaneWdmCapCmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapCmAlarmActivationTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneWdmCapCmAlarmActivationTime = _DeployProvControlPlaneWdmCapCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 15),
    _DeployProvControlPlaneWdmCapCmAlarmActivationTime_Type()
)
deployProvControlPlaneWdmCapCmAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneWdmCapCmFisFrsTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCapCmFisFrsTimeout = _DeployProvControlPlaneWdmCapCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 16),
    _DeployProvControlPlaneWdmCapCmFisFrsTimeout_Type()
)
deployProvControlPlaneWdmCapCmFisFrsTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneWdmCapCmCrankBackTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCapCmCrankBackTimeout = _DeployProvControlPlaneWdmCapCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 17),
    _DeployProvControlPlaneWdmCapCmCrankBackTimeout_Type()
)
deployProvControlPlaneWdmCapCmCrankBackTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneWdmCapCdbConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapCdbConfigFlag = _DeployProvControlPlaneWdmCapCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 18),
    _DeployProvControlPlaneWdmCapCdbConfigFlag_Type()
)
deployProvControlPlaneWdmCapCdbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapCdbDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCdbDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapCdbDetail = _DeployProvControlPlaneWdmCapCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 19),
    _DeployProvControlPlaneWdmCapCdbDetail_Type()
)
deployProvControlPlaneWdmCapCdbDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCdbDetail.setStatus("current")
_DeployProvControlPlaneWdmCapCdbMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmCapCdbMaxSize = _DeployProvControlPlaneWdmCapCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 20),
    _DeployProvControlPlaneWdmCapCdbMaxSize_Type()
)
deployProvControlPlaneWdmCapCdbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCdbMaxSize.setStatus("current")
_DeployProvControlPlaneWdmCapRsvpMaxExpRestartTime_Type = Counter64StringCaps
_DeployProvControlPlaneWdmCapRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneWdmCapRsvpMaxExpRestartTime = _DeployProvControlPlaneWdmCapRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 21),
    _DeployProvControlPlaneWdmCapRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneWdmCapRsvpMaxExpRestartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime = _DeployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 22),
    _DeployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneWdmCapRsvpConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapRsvpConfigFlag = _DeployProvControlPlaneWdmCapRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 23),
    _DeployProvControlPlaneWdmCapRsvpConfigFlag_Type()
)
deployProvControlPlaneWdmCapRsvpConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapTedbConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapTedbConfigFlag = _DeployProvControlPlaneWdmCapTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 24),
    _DeployProvControlPlaneWdmCapTedbConfigFlag_Type()
)
deployProvControlPlaneWdmCapTedbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapTedbTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapTedbTraceDetail = _DeployProvControlPlaneWdmCapTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 25),
    _DeployProvControlPlaneWdmCapTedbTraceDetail_Type()
)
deployProvControlPlaneWdmCapTedbTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapTedbMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmCapTedbMaxSize = _DeployProvControlPlaneWdmCapTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 26),
    _DeployProvControlPlaneWdmCapTedbMaxSize_Type()
)
deployProvControlPlaneWdmCapTedbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapTedbMaxSize.setStatus("current")
_DeployProvControlPlaneWdmCapTedbRouterId_Type = FspR7YesNo
_DeployProvControlPlaneWdmCapTedbRouterId_Object = MibTableColumn
deployProvControlPlaneWdmCapTedbRouterId = _DeployProvControlPlaneWdmCapTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 27),
    _DeployProvControlPlaneWdmCapTedbRouterId_Type()
)
deployProvControlPlaneWdmCapTedbRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapTedbRouterId.setStatus("current")
_DeployProvControlPlaneWdmCapTedbMinAdvertWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneWdmCapTedbMinAdvertWait = _DeployProvControlPlaneWdmCapTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 28),
    _DeployProvControlPlaneWdmCapTedbMinAdvertWait_Type()
)
deployProvControlPlaneWdmCapTedbMinAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneWdmCapNaasConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapNaasConfigFlag = _DeployProvControlPlaneWdmCapNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 29),
    _DeployProvControlPlaneWdmCapNaasConfigFlag_Type()
)
deployProvControlPlaneWdmCapNaasConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapNaasTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapNaasTraceDetail = _DeployProvControlPlaneWdmCapNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 30),
    _DeployProvControlPlaneWdmCapNaasTraceDetail_Type()
)
deployProvControlPlaneWdmCapNaasTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapNaasMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmCapNaasMaxSize = _DeployProvControlPlaneWdmCapNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 31),
    _DeployProvControlPlaneWdmCapNaasMaxSize_Type()
)
deployProvControlPlaneWdmCapNaasMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapNaasMaxSize.setStatus("current")
_DeployProvControlPlaneWdmCapNaasAdvertWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneWdmCapNaasAdvertWait = _DeployProvControlPlaneWdmCapNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 32),
    _DeployProvControlPlaneWdmCapNaasAdvertWait_Type()
)
deployProvControlPlaneWdmCapNaasAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneWdmCapPcConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapPcConfigFlag = _DeployProvControlPlaneWdmCapPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 33),
    _DeployProvControlPlaneWdmCapPcConfigFlag_Type()
)
deployProvControlPlaneWdmCapPcConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapPcConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapPcTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapPcTraceDetail = _DeployProvControlPlaneWdmCapPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 34),
    _DeployProvControlPlaneWdmCapPcTraceDetail_Type()
)
deployProvControlPlaneWdmCapPcTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapPcTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapCdConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapCdConfigFlag = _DeployProvControlPlaneWdmCapCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 35),
    _DeployProvControlPlaneWdmCapCdConfigFlag_Type()
)
deployProvControlPlaneWdmCapCdConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCdConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapCdTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapCdTraceDetail = _DeployProvControlPlaneWdmCapCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 36),
    _DeployProvControlPlaneWdmCapCdTraceDetail_Type()
)
deployProvControlPlaneWdmCapCdTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCdTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapCdResyncTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneWdmCapCdResyncTimeout = _DeployProvControlPlaneWdmCapCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 37),
    _DeployProvControlPlaneWdmCapCdResyncTimeout_Type()
)
deployProvControlPlaneWdmCapCdResyncTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneWdmCapRmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmCapRmConfigFlag = _DeployProvControlPlaneWdmCapRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 38),
    _DeployProvControlPlaneWdmCapRmConfigFlag_Type()
)
deployProvControlPlaneWdmCapRmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmCapRmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmCapRmTraceDetail = _DeployProvControlPlaneWdmCapRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 39),
    _DeployProvControlPlaneWdmCapRmTraceDetail_Type()
)
deployProvControlPlaneWdmCapRmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmCapRmTraceTarget_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneWdmCapRmTraceTarget = _DeployProvControlPlaneWdmCapRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 40),
    _DeployProvControlPlaneWdmCapRmTraceTarget_Type()
)
deployProvControlPlaneWdmCapRmTraceTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapRmTraceTarget.setStatus("current")
_DeployProvControlPlaneWdmCapNodeNameSyntax_Type = FspR7NodeIdCaps
_DeployProvControlPlaneWdmCapNodeNameSyntax_Object = MibTableColumn
deployProvControlPlaneWdmCapNodeNameSyntax = _DeployProvControlPlaneWdmCapNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 41),
    _DeployProvControlPlaneWdmCapNodeNameSyntax_Type()
)
deployProvControlPlaneWdmCapNodeNameSyntax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapNodeNameSyntax.setStatus("deprecated")
_DeployProvControlPlaneWdmCapWaitToRestore_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneWdmCapWaitToRestore_Object = MibTableColumn
deployProvControlPlaneWdmCapWaitToRestore = _DeployProvControlPlaneWdmCapWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 12, 1, 42),
    _DeployProvControlPlaneWdmCapWaitToRestore_Type()
)
deployProvControlPlaneWdmCapWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmCapWaitToRestore.setUnits("min")
_DeployProvControlPlaneWdmDefaultsTable_Object = MibTable
deployProvControlPlaneWdmDefaultsTable = _DeployProvControlPlaneWdmDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsTable.setStatus("current")
_DeployProvControlPlaneWdmDefaultsEntry_Object = MibTableRow
deployProvControlPlaneWdmDefaultsEntry = _DeployProvControlPlaneWdmDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1)
)
deployProvControlPlaneWdmDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsEntry.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRowStatus_Type = RowStatus
_DeployProvControlPlaneWdmDefaultsRowStatus_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRowStatus = _DeployProvControlPlaneWdmDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 1),
    _DeployProvControlPlaneWdmDefaultsRowStatus_Type()
)
deployProvControlPlaneWdmDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRowStatus.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCtmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmConfigFlag = _DeployProvControlPlaneWdmDefaultsCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 2),
    _DeployProvControlPlaneWdmDefaultsCtmConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsCtmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCtmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmTraceDetail = _DeployProvControlPlaneWdmDefaultsCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 3),
    _DeployProvControlPlaneWdmDefaultsCtmTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsCtmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCtmSetupTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmSetupTimeout = _DeployProvControlPlaneWdmDefaultsCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 4),
    _DeployProvControlPlaneWdmDefaultsCtmSetupTimeout_Type()
)
deployProvControlPlaneWdmDefaultsCtmSetupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCtmShutdownTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmShutdownTimeout = _DeployProvControlPlaneWdmDefaultsCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 5),
    _DeployProvControlPlaneWdmDefaultsCtmShutdownTimeout_Type()
)
deployProvControlPlaneWdmDefaultsCtmShutdownTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCtmRetryWait_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmRetryWait = _DeployProvControlPlaneWdmDefaultsCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 6),
    _DeployProvControlPlaneWdmDefaultsCtmRetryWait_Type()
)
deployProvControlPlaneWdmDefaultsCtmRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmRetryWait.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier = _DeployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 7),
    _DeployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCtmMaximumRetryWait_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmMaximumRetryWait = _DeployProvControlPlaneWdmDefaultsCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 8),
    _DeployProvControlPlaneWdmDefaultsCtmMaximumRetryWait_Type()
)
deployProvControlPlaneWdmDefaultsCtmMaximumRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber = _DeployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 9),
    _DeployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRaConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRaConfigFlag = _DeployProvControlPlaneWdmDefaultsRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 10),
    _DeployProvControlPlaneWdmDefaultsRaConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsRaConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRaConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRaTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRaTraceDetail = _DeployProvControlPlaneWdmDefaultsRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 11),
    _DeployProvControlPlaneWdmDefaultsRaTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsRaTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRaTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRaAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRaAlarmActivationTime = _DeployProvControlPlaneWdmDefaultsRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 12),
    _DeployProvControlPlaneWdmDefaultsRaAlarmActivationTime_Type()
)
deployProvControlPlaneWdmDefaultsRaAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCmConfigFlag = _DeployProvControlPlaneWdmDefaultsCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 13),
    _DeployProvControlPlaneWdmDefaultsCmConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsCmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCmTraceDetail = _DeployProvControlPlaneWdmDefaultsCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 14),
    _DeployProvControlPlaneWdmDefaultsCmTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsCmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCmAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCmAlarmActivationTime = _DeployProvControlPlaneWdmDefaultsCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 15),
    _DeployProvControlPlaneWdmDefaultsCmAlarmActivationTime_Type()
)
deployProvControlPlaneWdmDefaultsCmAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCmFisFrsTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCmFisFrsTimeout = _DeployProvControlPlaneWdmDefaultsCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 16),
    _DeployProvControlPlaneWdmDefaultsCmFisFrsTimeout_Type()
)
deployProvControlPlaneWdmDefaultsCmFisFrsTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCmCrankBackTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCmCrankBackTimeout = _DeployProvControlPlaneWdmDefaultsCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 17),
    _DeployProvControlPlaneWdmDefaultsCmCrankBackTimeout_Type()
)
deployProvControlPlaneWdmDefaultsCmCrankBackTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneWdmDefaultsCdbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCdbConfigFlag = _DeployProvControlPlaneWdmDefaultsCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 18),
    _DeployProvControlPlaneWdmDefaultsCdbConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsCdbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCdbDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCdbDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCdbDetail = _DeployProvControlPlaneWdmDefaultsCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 19),
    _DeployProvControlPlaneWdmDefaultsCdbDetail_Type()
)
deployProvControlPlaneWdmDefaultsCdbDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCdbDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCdbMaxSize_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCdbMaxSize = _DeployProvControlPlaneWdmDefaultsCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 20),
    _DeployProvControlPlaneWdmDefaultsCdbMaxSize_Type()
)
deployProvControlPlaneWdmDefaultsCdbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCdbMaxSize.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime_Type = Counter64String
_DeployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime = _DeployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 21),
    _DeployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime = _DeployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 22),
    _DeployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneWdmDefaultsRsvpConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRsvpConfigFlag = _DeployProvControlPlaneWdmDefaultsRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 23),
    _DeployProvControlPlaneWdmDefaultsRsvpConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsRsvpConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsTedbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsTedbConfigFlag = _DeployProvControlPlaneWdmDefaultsTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 24),
    _DeployProvControlPlaneWdmDefaultsTedbConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsTedbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsTedbTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsTedbTraceDetail = _DeployProvControlPlaneWdmDefaultsTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 25),
    _DeployProvControlPlaneWdmDefaultsTedbTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsTedbTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsTedbMaxSize_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsTedbMaxSize = _DeployProvControlPlaneWdmDefaultsTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 26),
    _DeployProvControlPlaneWdmDefaultsTedbMaxSize_Type()
)
deployProvControlPlaneWdmDefaultsTedbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsTedbMaxSize.setStatus("current")
_DeployProvControlPlaneWdmDefaultsTedbRouterId_Type = IpAddress
_DeployProvControlPlaneWdmDefaultsTedbRouterId_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsTedbRouterId = _DeployProvControlPlaneWdmDefaultsTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 27),
    _DeployProvControlPlaneWdmDefaultsTedbRouterId_Type()
)
deployProvControlPlaneWdmDefaultsTedbRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsTedbRouterId.setStatus("current")
_DeployProvControlPlaneWdmDefaultsTedbMinAdvertWait_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsTedbMinAdvertWait = _DeployProvControlPlaneWdmDefaultsTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 28),
    _DeployProvControlPlaneWdmDefaultsTedbMinAdvertWait_Type()
)
deployProvControlPlaneWdmDefaultsTedbMinAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneWdmDefaultsNaasConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsNaasConfigFlag = _DeployProvControlPlaneWdmDefaultsNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 29),
    _DeployProvControlPlaneWdmDefaultsNaasConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsNaasConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsNaasTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsNaasTraceDetail = _DeployProvControlPlaneWdmDefaultsNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 30),
    _DeployProvControlPlaneWdmDefaultsNaasTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsNaasTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsNaasMaxSize_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsNaasMaxSize = _DeployProvControlPlaneWdmDefaultsNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 31),
    _DeployProvControlPlaneWdmDefaultsNaasMaxSize_Type()
)
deployProvControlPlaneWdmDefaultsNaasMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsNaasMaxSize.setStatus("current")
_DeployProvControlPlaneWdmDefaultsNaasAdvertWait_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsNaasAdvertWait = _DeployProvControlPlaneWdmDefaultsNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 32),
    _DeployProvControlPlaneWdmDefaultsNaasAdvertWait_Type()
)
deployProvControlPlaneWdmDefaultsNaasAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneWdmDefaultsPcConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsPcConfigFlag = _DeployProvControlPlaneWdmDefaultsPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 33),
    _DeployProvControlPlaneWdmDefaultsPcConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsPcConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsPcConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsPcTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsPcTraceDetail = _DeployProvControlPlaneWdmDefaultsPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 34),
    _DeployProvControlPlaneWdmDefaultsPcTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsPcTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsPcTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCdConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCdConfigFlag = _DeployProvControlPlaneWdmDefaultsCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 35),
    _DeployProvControlPlaneWdmDefaultsCdConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsCdConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCdConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCdTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCdTraceDetail = _DeployProvControlPlaneWdmDefaultsCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 36),
    _DeployProvControlPlaneWdmDefaultsCdTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsCdTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCdTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsCdResyncTimeout_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsCdResyncTimeout = _DeployProvControlPlaneWdmDefaultsCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 37),
    _DeployProvControlPlaneWdmDefaultsCdResyncTimeout_Type()
)
deployProvControlPlaneWdmDefaultsCdResyncTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRmConfigFlag = _DeployProvControlPlaneWdmDefaultsRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 38),
    _DeployProvControlPlaneWdmDefaultsRmConfigFlag_Type()
)
deployProvControlPlaneWdmDefaultsRmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRmConfigFlag.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRmTraceDetail = _DeployProvControlPlaneWdmDefaultsRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 39),
    _DeployProvControlPlaneWdmDefaultsRmTraceDetail_Type()
)
deployProvControlPlaneWdmDefaultsRmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRmTraceDetail.setStatus("current")
_DeployProvControlPlaneWdmDefaultsRmTraceTarget_Type = Unsigned32
_DeployProvControlPlaneWdmDefaultsRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsRmTraceTarget = _DeployProvControlPlaneWdmDefaultsRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 40),
    _DeployProvControlPlaneWdmDefaultsRmTraceTarget_Type()
)
deployProvControlPlaneWdmDefaultsRmTraceTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsRmTraceTarget.setStatus("current")
_DeployProvControlPlaneWdmDefaultsNodeNameSyntax_Type = FspR7NodeId
_DeployProvControlPlaneWdmDefaultsNodeNameSyntax_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsNodeNameSyntax = _DeployProvControlPlaneWdmDefaultsNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 41),
    _DeployProvControlPlaneWdmDefaultsNodeNameSyntax_Type()
)
deployProvControlPlaneWdmDefaultsNodeNameSyntax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsNodeNameSyntax.setStatus("deprecated")


class _DeployProvControlPlaneWdmDefaultsWaitToRestore_Type(Unsigned32):
    """Custom type deployProvControlPlaneWdmDefaultsWaitToRestore based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvControlPlaneWdmDefaultsWaitToRestore_Type.__name__ = "Unsigned32"
_DeployProvControlPlaneWdmDefaultsWaitToRestore_Object = MibTableColumn
deployProvControlPlaneWdmDefaultsWaitToRestore = _DeployProvControlPlaneWdmDefaultsWaitToRestore_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 13, 1, 42),
    _DeployProvControlPlaneWdmDefaultsWaitToRestore_Type()
)
deployProvControlPlaneWdmDefaultsWaitToRestore.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsWaitToRestore.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneWdmDefaultsWaitToRestore.setUnits("min")
_DeployProvTunnelWdmTable_Object = MibTable
deployProvTunnelWdmTable = _DeployProvTunnelWdmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14)
)
if mibBuilder.loadTexts:
    deployProvTunnelWdmTable.setStatus("current")
_DeployProvTunnelWdmEntry_Object = MibTableRow
deployProvTunnelWdmEntry = _DeployProvTunnelWdmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1)
)
deployProvTunnelWdmEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelWdmEntry.setStatus("current")
_DeployProvTunnelWdmRowStatus_Type = RowStatus
_DeployProvTunnelWdmRowStatus_Object = MibTableColumn
deployProvTunnelWdmRowStatus = _DeployProvTunnelWdmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 1),
    _DeployProvTunnelWdmRowStatus_Type()
)
deployProvTunnelWdmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmRowStatus.setStatus("current")
_DeployProvTunnelWdmTunnelId_Type = SnmpAdminString
_DeployProvTunnelWdmTunnelId_Object = MibTableColumn
deployProvTunnelWdmTunnelId = _DeployProvTunnelWdmTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 2),
    _DeployProvTunnelWdmTunnelId_Type()
)
deployProvTunnelWdmTunnelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmTunnelId.setStatus("current")
_DeployProvTunnelWdmTunnelNo_Type = Unsigned32
_DeployProvTunnelWdmTunnelNo_Object = MibTableColumn
deployProvTunnelWdmTunnelNo = _DeployProvTunnelWdmTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 3),
    _DeployProvTunnelWdmTunnelNo_Type()
)
deployProvTunnelWdmTunnelNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmTunnelNo.setStatus("current")
_DeployProvTunnelWdmAlias_Type = SnmpAdminString
_DeployProvTunnelWdmAlias_Object = MibTableColumn
deployProvTunnelWdmAlias = _DeployProvTunnelWdmAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 4),
    _DeployProvTunnelWdmAlias_Type()
)
deployProvTunnelWdmAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmAlias.setStatus("current")
_DeployProvTunnelWdmTunnelType_Type = FspR7CpTunnelType
_DeployProvTunnelWdmTunnelType_Object = MibTableColumn
deployProvTunnelWdmTunnelType = _DeployProvTunnelWdmTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 5),
    _DeployProvTunnelWdmTunnelType_Type()
)
deployProvTunnelWdmTunnelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmTunnelType.setStatus("current")
_DeployProvTunnelWdmToTid_Type = SnmpAdminString
_DeployProvTunnelWdmToTid_Object = MibTableColumn
deployProvTunnelWdmToTid = _DeployProvTunnelWdmToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 6),
    _DeployProvTunnelWdmToTid_Type()
)
deployProvTunnelWdmToTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmToTid.setStatus("current")
_DeployProvTunnelWdmToNodeIp_Type = IpAddress
_DeployProvTunnelWdmToNodeIp_Object = MibTableColumn
deployProvTunnelWdmToNodeIp = _DeployProvTunnelWdmToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 7),
    _DeployProvTunnelWdmToNodeIp_Type()
)
deployProvTunnelWdmToNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmToNodeIp.setStatus("current")
_DeployProvTunnelWdmFromAid_Type = EntityIndex
_DeployProvTunnelWdmFromAid_Object = MibTableColumn
deployProvTunnelWdmFromAid = _DeployProvTunnelWdmFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 8),
    _DeployProvTunnelWdmFromAid_Type()
)
deployProvTunnelWdmFromAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmFromAid.setStatus("current")
_DeployProvTunnelWdmToAid_Type = EntityIndex
_DeployProvTunnelWdmToAid_Object = MibTableColumn
deployProvTunnelWdmToAid = _DeployProvTunnelWdmToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 9),
    _DeployProvTunnelWdmToAid_Type()
)
deployProvTunnelWdmToAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmToAid.setStatus("current")
_DeployProvTunnelWdmConnectionDirection_Type = FspR7Conn
_DeployProvTunnelWdmConnectionDirection_Object = MibTableColumn
deployProvTunnelWdmConnectionDirection = _DeployProvTunnelWdmConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 10),
    _DeployProvTunnelWdmConnectionDirection_Type()
)
deployProvTunnelWdmConnectionDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmConnectionDirection.setStatus("current")
_DeployProvTunnelWdmFacilityType_Type = FspR7InterfaceType
_DeployProvTunnelWdmFacilityType_Object = MibTableColumn
deployProvTunnelWdmFacilityType = _DeployProvTunnelWdmFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 11),
    _DeployProvTunnelWdmFacilityType_Type()
)
deployProvTunnelWdmFacilityType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmFacilityType.setStatus("current")
_DeployProvTunnelWdmTerminationLevel_Type = OhTerminationLevel
_DeployProvTunnelWdmTerminationLevel_Object = MibTableColumn
deployProvTunnelWdmTerminationLevel = _DeployProvTunnelWdmTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 12),
    _DeployProvTunnelWdmTerminationLevel_Type()
)
deployProvTunnelWdmTerminationLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmTerminationLevel.setStatus("current")
_DeployProvTunnelWdmFecType_Type = FspR7FecType
_DeployProvTunnelWdmFecType_Object = MibTableColumn
deployProvTunnelWdmFecType = _DeployProvTunnelWdmFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 13),
    _DeployProvTunnelWdmFecType_Type()
)
deployProvTunnelWdmFecType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmFecType.setStatus("current")
_DeployProvTunnelWdmStuff_Type = FspR7Stuff
_DeployProvTunnelWdmStuff_Object = MibTableColumn
deployProvTunnelWdmStuff = _DeployProvTunnelWdmStuff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 14),
    _DeployProvTunnelWdmStuff_Type()
)
deployProvTunnelWdmStuff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmStuff.setStatus("current")
_DeployProvTunnelWdmProvisionedPaths_Type = SnmpAdminString
_DeployProvTunnelWdmProvisionedPaths_Object = MibTableColumn
deployProvTunnelWdmProvisionedPaths = _DeployProvTunnelWdmProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 15),
    _DeployProvTunnelWdmProvisionedPaths_Type()
)
deployProvTunnelWdmProvisionedPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmProvisionedPaths.setStatus("current")
_DeployProvTunnelWdmRecoveryType_Type = FspR7CpRecoveryType
_DeployProvTunnelWdmRecoveryType_Object = MibTableColumn
deployProvTunnelWdmRecoveryType = _DeployProvTunnelWdmRecoveryType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 16),
    _DeployProvTunnelWdmRecoveryType_Type()
)
deployProvTunnelWdmRecoveryType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmRecoveryType.setStatus("current")
_DeployProvTunnelWdmPin_Type = FspR7CpPinning
_DeployProvTunnelWdmPin_Object = MibTableColumn
deployProvTunnelWdmPin = _DeployProvTunnelWdmPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 17),
    _DeployProvTunnelWdmPin_Type()
)
deployProvTunnelWdmPin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmPin.setStatus("current")
_DeployProvTunnelWdmRestorationType_Type = FspR7CpRestorationType
_DeployProvTunnelWdmRestorationType_Object = MibTableColumn
deployProvTunnelWdmRestorationType = _DeployProvTunnelWdmRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 18),
    _DeployProvTunnelWdmRestorationType_Type()
)
deployProvTunnelWdmRestorationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmRestorationType.setStatus("current")
_DeployProvTunnelWdmSubLayer_Type = FspR7SubLayer
_DeployProvTunnelWdmSubLayer_Object = MibTableColumn
deployProvTunnelWdmSubLayer = _DeployProvTunnelWdmSubLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 19),
    _DeployProvTunnelWdmSubLayer_Type()
)
deployProvTunnelWdmSubLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmSubLayer.setStatus("current")
_DeployProvTunnelWdmMonitorEntities_Type = FspR7EnableDisable
_DeployProvTunnelWdmMonitorEntities_Object = MibTableColumn
deployProvTunnelWdmMonitorEntities = _DeployProvTunnelWdmMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 20),
    _DeployProvTunnelWdmMonitorEntities_Type()
)
deployProvTunnelWdmMonitorEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmMonitorEntities.setStatus("current")
_DeployProvTunnelWdmSubLayerEncoding_Type = FspR7SubLayerEncoding
_DeployProvTunnelWdmSubLayerEncoding_Object = MibTableColumn
deployProvTunnelWdmSubLayerEncoding = _DeployProvTunnelWdmSubLayerEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 21),
    _DeployProvTunnelWdmSubLayerEncoding_Type()
)
deployProvTunnelWdmSubLayerEncoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmSubLayerEncoding.setStatus("current")
_DeployProvTunnelWdmPceMode_Type = FspR7PceMode
_DeployProvTunnelWdmPceMode_Object = MibTableColumn
deployProvTunnelWdmPceMode = _DeployProvTunnelWdmPceMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 22),
    _DeployProvTunnelWdmPceMode_Type()
)
deployProvTunnelWdmPceMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmPceMode.setStatus("current")
_DeployProvTunnelWdmTunnelScope_Type = FspR7CpTunnelScope
_DeployProvTunnelWdmTunnelScope_Object = MibTableColumn
deployProvTunnelWdmTunnelScope = _DeployProvTunnelWdmTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 23),
    _DeployProvTunnelWdmTunnelScope_Type()
)
deployProvTunnelWdmTunnelScope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmTunnelScope.setStatus("current")
_DeployProvTunnelWdmLayer_Type = FspR7PacketsLayer
_DeployProvTunnelWdmLayer_Object = MibTableColumn
deployProvTunnelWdmLayer = _DeployProvTunnelWdmLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 24),
    _DeployProvTunnelWdmLayer_Type()
)
deployProvTunnelWdmLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmLayer.setStatus("current")
_DeployProvTunnelWdmOifUni_Type = FspR7YesNo
_DeployProvTunnelWdmOifUni_Object = MibTableColumn
deployProvTunnelWdmOifUni = _DeployProvTunnelWdmOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 25),
    _DeployProvTunnelWdmOifUni_Type()
)
deployProvTunnelWdmOifUni.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmOifUni.setStatus("current")
_DeployProvTunnelWdmReversionType_Type = FspR7CpReversionType
_DeployProvTunnelWdmReversionType_Object = MibTableColumn
deployProvTunnelWdmReversionType = _DeployProvTunnelWdmReversionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 26),
    _DeployProvTunnelWdmReversionType_Type()
)
deployProvTunnelWdmReversionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmReversionType.setStatus("current")
_DeployProvTunnelWdmRestorationMode_Type = FspR7CpRestorationMode
_DeployProvTunnelWdmRestorationMode_Object = MibTableColumn
deployProvTunnelWdmRestorationMode = _DeployProvTunnelWdmRestorationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 27),
    _DeployProvTunnelWdmRestorationMode_Type()
)
deployProvTunnelWdmRestorationMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmRestorationMode.setStatus("current")
_DeployProvTunnelWdmRestPathsNoProv_Type = Unsigned32
_DeployProvTunnelWdmRestPathsNoProv_Object = MibTableColumn
deployProvTunnelWdmRestPathsNoProv = _DeployProvTunnelWdmRestPathsNoProv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 28),
    _DeployProvTunnelWdmRestPathsNoProv_Type()
)
deployProvTunnelWdmRestPathsNoProv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmRestPathsNoProv.setStatus("current")
_DeployProvTunnelWdmRestorationPaths_Type = SnmpAdminString
_DeployProvTunnelWdmRestorationPaths_Object = MibTableColumn
deployProvTunnelWdmRestorationPaths = _DeployProvTunnelWdmRestorationPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 29),
    _DeployProvTunnelWdmRestorationPaths_Type()
)
deployProvTunnelWdmRestorationPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmRestorationPaths.setStatus("current")
_DeployProvTunnelWdmTunnelTemplate_Type = FspR7YesNo
_DeployProvTunnelWdmTunnelTemplate_Object = MibTableColumn
deployProvTunnelWdmTunnelTemplate = _DeployProvTunnelWdmTunnelTemplate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 30),
    _DeployProvTunnelWdmTunnelTemplate_Type()
)
deployProvTunnelWdmTunnelTemplate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmTunnelTemplate.setStatus("current")
_DeployProvTunnelWdmRestorationPathsComputed_Type = SnmpAdminString
_DeployProvTunnelWdmRestorationPathsComputed_Object = MibTableColumn
deployProvTunnelWdmRestorationPathsComputed = _DeployProvTunnelWdmRestorationPathsComputed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 31),
    _DeployProvTunnelWdmRestorationPathsComputed_Type()
)
deployProvTunnelWdmRestorationPathsComputed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmRestorationPathsComputed.setStatus("current")
_DeployProvTunnelWdmFromAidString_Type = SnmpAdminString
_DeployProvTunnelWdmFromAidString_Object = MibTableColumn
deployProvTunnelWdmFromAidString = _DeployProvTunnelWdmFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 32),
    _DeployProvTunnelWdmFromAidString_Type()
)
deployProvTunnelWdmFromAidString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmFromAidString.setStatus("current")
_DeployProvTunnelWdmToAidString_Type = SnmpAdminString
_DeployProvTunnelWdmToAidString_Object = MibTableColumn
deployProvTunnelWdmToAidString = _DeployProvTunnelWdmToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 14, 1, 33),
    _DeployProvTunnelWdmToAidString_Type()
)
deployProvTunnelWdmToAidString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelWdmToAidString.setStatus("current")
_DeployProvTunnelWdmCapTable_Object = MibTable
deployProvTunnelWdmCapTable = _DeployProvTunnelWdmCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15)
)
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapTable.setStatus("current")
_DeployProvTunnelWdmCapEntry_Object = MibTableRow
deployProvTunnelWdmCapEntry = _DeployProvTunnelWdmCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1)
)
deployProvTunnelWdmCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapEntry.setStatus("current")
_DeployProvTunnelWdmCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvTunnelWdmCapRowStatus_Object = MibTableColumn
deployProvTunnelWdmCapRowStatus = _DeployProvTunnelWdmCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 1),
    _DeployProvTunnelWdmCapRowStatus_Type()
)
deployProvTunnelWdmCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapRowStatus.setStatus("current")
_DeployProvTunnelWdmCapTunnelId_Type = Integer32
_DeployProvTunnelWdmCapTunnelId_Object = MibTableColumn
deployProvTunnelWdmCapTunnelId = _DeployProvTunnelWdmCapTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 2),
    _DeployProvTunnelWdmCapTunnelId_Type()
)
deployProvTunnelWdmCapTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapTunnelId.setStatus("current")
_DeployProvTunnelWdmCapTunnelNo_Type = FspR7Unsigned32Caps
_DeployProvTunnelWdmCapTunnelNo_Object = MibTableColumn
deployProvTunnelWdmCapTunnelNo = _DeployProvTunnelWdmCapTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 3),
    _DeployProvTunnelWdmCapTunnelNo_Type()
)
deployProvTunnelWdmCapTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapTunnelNo.setStatus("current")
_DeployProvTunnelWdmCapAlias_Type = Integer32
_DeployProvTunnelWdmCapAlias_Object = MibTableColumn
deployProvTunnelWdmCapAlias = _DeployProvTunnelWdmCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 4),
    _DeployProvTunnelWdmCapAlias_Type()
)
deployProvTunnelWdmCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapAlias.setStatus("current")
_DeployProvTunnelWdmCapTunnelType_Type = FspR7CpTunnelTypeCaps
_DeployProvTunnelWdmCapTunnelType_Object = MibTableColumn
deployProvTunnelWdmCapTunnelType = _DeployProvTunnelWdmCapTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 5),
    _DeployProvTunnelWdmCapTunnelType_Type()
)
deployProvTunnelWdmCapTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapTunnelType.setStatus("current")
_DeployProvTunnelWdmCapToTid_Type = Integer32
_DeployProvTunnelWdmCapToTid_Object = MibTableColumn
deployProvTunnelWdmCapToTid = _DeployProvTunnelWdmCapToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 6),
    _DeployProvTunnelWdmCapToTid_Type()
)
deployProvTunnelWdmCapToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapToTid.setStatus("current")
_DeployProvTunnelWdmCapToNodeIp_Type = FspR7YesNo
_DeployProvTunnelWdmCapToNodeIp_Object = MibTableColumn
deployProvTunnelWdmCapToNodeIp = _DeployProvTunnelWdmCapToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 7),
    _DeployProvTunnelWdmCapToNodeIp_Type()
)
deployProvTunnelWdmCapToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapToNodeIp.setStatus("current")
_DeployProvTunnelWdmCapFromAid_Type = Integer32
_DeployProvTunnelWdmCapFromAid_Object = MibTableColumn
deployProvTunnelWdmCapFromAid = _DeployProvTunnelWdmCapFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 8),
    _DeployProvTunnelWdmCapFromAid_Type()
)
deployProvTunnelWdmCapFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapFromAid.setStatus("current")
_DeployProvTunnelWdmCapToAid_Type = Integer32
_DeployProvTunnelWdmCapToAid_Object = MibTableColumn
deployProvTunnelWdmCapToAid = _DeployProvTunnelWdmCapToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 9),
    _DeployProvTunnelWdmCapToAid_Type()
)
deployProvTunnelWdmCapToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapToAid.setStatus("current")
_DeployProvTunnelWdmCapConnectionDirection_Type = FspR7ConnCaps
_DeployProvTunnelWdmCapConnectionDirection_Object = MibTableColumn
deployProvTunnelWdmCapConnectionDirection = _DeployProvTunnelWdmCapConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 10),
    _DeployProvTunnelWdmCapConnectionDirection_Type()
)
deployProvTunnelWdmCapConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapConnectionDirection.setStatus("current")
_DeployProvTunnelWdmCapFacilityType_Type = FspR7InterfaceTypeCaps
_DeployProvTunnelWdmCapFacilityType_Object = MibTableColumn
deployProvTunnelWdmCapFacilityType = _DeployProvTunnelWdmCapFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 11),
    _DeployProvTunnelWdmCapFacilityType_Type()
)
deployProvTunnelWdmCapFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapFacilityType.setStatus("current")
_DeployProvTunnelWdmCapTerminationLevel_Type = OhTerminationLevelCaps
_DeployProvTunnelWdmCapTerminationLevel_Object = MibTableColumn
deployProvTunnelWdmCapTerminationLevel = _DeployProvTunnelWdmCapTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 12),
    _DeployProvTunnelWdmCapTerminationLevel_Type()
)
deployProvTunnelWdmCapTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapTerminationLevel.setStatus("current")
_DeployProvTunnelWdmCapFecType_Type = FspR7FecTypeCaps
_DeployProvTunnelWdmCapFecType_Object = MibTableColumn
deployProvTunnelWdmCapFecType = _DeployProvTunnelWdmCapFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 13),
    _DeployProvTunnelWdmCapFecType_Type()
)
deployProvTunnelWdmCapFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapFecType.setStatus("current")
_DeployProvTunnelWdmCapStuff_Type = FspR7StuffCaps
_DeployProvTunnelWdmCapStuff_Object = MibTableColumn
deployProvTunnelWdmCapStuff = _DeployProvTunnelWdmCapStuff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 14),
    _DeployProvTunnelWdmCapStuff_Type()
)
deployProvTunnelWdmCapStuff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapStuff.setStatus("current")
_DeployProvTunnelWdmCapProvisionedPaths_Type = Integer32
_DeployProvTunnelWdmCapProvisionedPaths_Object = MibTableColumn
deployProvTunnelWdmCapProvisionedPaths = _DeployProvTunnelWdmCapProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 15),
    _DeployProvTunnelWdmCapProvisionedPaths_Type()
)
deployProvTunnelWdmCapProvisionedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapProvisionedPaths.setStatus("current")
_DeployProvTunnelWdmCapRecoveryType_Type = FspR7CpRecoveryTypeCaps
_DeployProvTunnelWdmCapRecoveryType_Object = MibTableColumn
deployProvTunnelWdmCapRecoveryType = _DeployProvTunnelWdmCapRecoveryType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 16),
    _DeployProvTunnelWdmCapRecoveryType_Type()
)
deployProvTunnelWdmCapRecoveryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapRecoveryType.setStatus("current")
_DeployProvTunnelWdmCapPin_Type = FspR7CpPinningCaps
_DeployProvTunnelWdmCapPin_Object = MibTableColumn
deployProvTunnelWdmCapPin = _DeployProvTunnelWdmCapPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 17),
    _DeployProvTunnelWdmCapPin_Type()
)
deployProvTunnelWdmCapPin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapPin.setStatus("current")
_DeployProvTunnelWdmCapRestorationType_Type = FspR7CpRestorationTypeCaps
_DeployProvTunnelWdmCapRestorationType_Object = MibTableColumn
deployProvTunnelWdmCapRestorationType = _DeployProvTunnelWdmCapRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 18),
    _DeployProvTunnelWdmCapRestorationType_Type()
)
deployProvTunnelWdmCapRestorationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapRestorationType.setStatus("current")
_DeployProvTunnelWdmCapSubLayer_Type = FspR7SubLayerCaps
_DeployProvTunnelWdmCapSubLayer_Object = MibTableColumn
deployProvTunnelWdmCapSubLayer = _DeployProvTunnelWdmCapSubLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 19),
    _DeployProvTunnelWdmCapSubLayer_Type()
)
deployProvTunnelWdmCapSubLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapSubLayer.setStatus("current")
_DeployProvTunnelWdmCapMonitorEntities_Type = FspR7EnableDisableCaps
_DeployProvTunnelWdmCapMonitorEntities_Object = MibTableColumn
deployProvTunnelWdmCapMonitorEntities = _DeployProvTunnelWdmCapMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 20),
    _DeployProvTunnelWdmCapMonitorEntities_Type()
)
deployProvTunnelWdmCapMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapMonitorEntities.setStatus("current")
_DeployProvTunnelWdmCapSubLayerEncoding_Type = FspR7SubLayerEncodingCaps
_DeployProvTunnelWdmCapSubLayerEncoding_Object = MibTableColumn
deployProvTunnelWdmCapSubLayerEncoding = _DeployProvTunnelWdmCapSubLayerEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 21),
    _DeployProvTunnelWdmCapSubLayerEncoding_Type()
)
deployProvTunnelWdmCapSubLayerEncoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapSubLayerEncoding.setStatus("current")
_DeployProvTunnelWdmCapPceMode_Type = FspR7PceModeCaps
_DeployProvTunnelWdmCapPceMode_Object = MibTableColumn
deployProvTunnelWdmCapPceMode = _DeployProvTunnelWdmCapPceMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 22),
    _DeployProvTunnelWdmCapPceMode_Type()
)
deployProvTunnelWdmCapPceMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapPceMode.setStatus("current")
_DeployProvTunnelWdmCapTunnelScope_Type = FspR7CpTunnelScopeCaps
_DeployProvTunnelWdmCapTunnelScope_Object = MibTableColumn
deployProvTunnelWdmCapTunnelScope = _DeployProvTunnelWdmCapTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 23),
    _DeployProvTunnelWdmCapTunnelScope_Type()
)
deployProvTunnelWdmCapTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapTunnelScope.setStatus("current")
_DeployProvTunnelWdmCapLayer_Type = FspR7PacketsLayerCaps
_DeployProvTunnelWdmCapLayer_Object = MibTableColumn
deployProvTunnelWdmCapLayer = _DeployProvTunnelWdmCapLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 24),
    _DeployProvTunnelWdmCapLayer_Type()
)
deployProvTunnelWdmCapLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapLayer.setStatus("current")
_DeployProvTunnelWdmCapOifUni_Type = FspR7YesNoCaps
_DeployProvTunnelWdmCapOifUni_Object = MibTableColumn
deployProvTunnelWdmCapOifUni = _DeployProvTunnelWdmCapOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 25),
    _DeployProvTunnelWdmCapOifUni_Type()
)
deployProvTunnelWdmCapOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapOifUni.setStatus("current")
_DeployProvTunnelWdmCapReversionType_Type = FspR7CpReversionTypeCaps
_DeployProvTunnelWdmCapReversionType_Object = MibTableColumn
deployProvTunnelWdmCapReversionType = _DeployProvTunnelWdmCapReversionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 26),
    _DeployProvTunnelWdmCapReversionType_Type()
)
deployProvTunnelWdmCapReversionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapReversionType.setStatus("current")
_DeployProvTunnelWdmCapRestorationMode_Type = FspR7CpRestorationModeCaps
_DeployProvTunnelWdmCapRestorationMode_Object = MibTableColumn
deployProvTunnelWdmCapRestorationMode = _DeployProvTunnelWdmCapRestorationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 27),
    _DeployProvTunnelWdmCapRestorationMode_Type()
)
deployProvTunnelWdmCapRestorationMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapRestorationMode.setStatus("current")
_DeployProvTunnelWdmCapRestPathsNoProv_Type = FspR7Unsigned32Caps
_DeployProvTunnelWdmCapRestPathsNoProv_Object = MibTableColumn
deployProvTunnelWdmCapRestPathsNoProv = _DeployProvTunnelWdmCapRestPathsNoProv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 28),
    _DeployProvTunnelWdmCapRestPathsNoProv_Type()
)
deployProvTunnelWdmCapRestPathsNoProv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapRestPathsNoProv.setStatus("current")
_DeployProvTunnelWdmCapRestorationPaths_Type = Integer32
_DeployProvTunnelWdmCapRestorationPaths_Object = MibTableColumn
deployProvTunnelWdmCapRestorationPaths = _DeployProvTunnelWdmCapRestorationPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 29),
    _DeployProvTunnelWdmCapRestorationPaths_Type()
)
deployProvTunnelWdmCapRestorationPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapRestorationPaths.setStatus("current")
_DeployProvTunnelWdmCapTunnelTemplate_Type = FspR7YesNoCaps
_DeployProvTunnelWdmCapTunnelTemplate_Object = MibTableColumn
deployProvTunnelWdmCapTunnelTemplate = _DeployProvTunnelWdmCapTunnelTemplate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 30),
    _DeployProvTunnelWdmCapTunnelTemplate_Type()
)
deployProvTunnelWdmCapTunnelTemplate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapTunnelTemplate.setStatus("current")
_DeployProvTunnelWdmCapRestorationPathsComputed_Type = Integer32
_DeployProvTunnelWdmCapRestorationPathsComputed_Object = MibTableColumn
deployProvTunnelWdmCapRestorationPathsComputed = _DeployProvTunnelWdmCapRestorationPathsComputed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 31),
    _DeployProvTunnelWdmCapRestorationPathsComputed_Type()
)
deployProvTunnelWdmCapRestorationPathsComputed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapRestorationPathsComputed.setStatus("current")
_DeployProvTunnelWdmCapFromAidString_Type = Integer32
_DeployProvTunnelWdmCapFromAidString_Object = MibTableColumn
deployProvTunnelWdmCapFromAidString = _DeployProvTunnelWdmCapFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 32),
    _DeployProvTunnelWdmCapFromAidString_Type()
)
deployProvTunnelWdmCapFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapFromAidString.setStatus("current")
_DeployProvTunnelWdmCapToAidString_Type = Integer32
_DeployProvTunnelWdmCapToAidString_Object = MibTableColumn
deployProvTunnelWdmCapToAidString = _DeployProvTunnelWdmCapToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 15, 1, 33),
    _DeployProvTunnelWdmCapToAidString_Type()
)
deployProvTunnelWdmCapToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmCapToAidString.setStatus("current")
_DeployProvTunnelWdmDefaultsTable_Object = MibTable
deployProvTunnelWdmDefaultsTable = _DeployProvTunnelWdmDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16)
)
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsTable.setStatus("current")
_DeployProvTunnelWdmDefaultsEntry_Object = MibTableRow
deployProvTunnelWdmDefaultsEntry = _DeployProvTunnelWdmDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1)
)
deployProvTunnelWdmDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsEntry.setStatus("current")
_DeployProvTunnelWdmDefaultsRowStatus_Type = RowStatus
_DeployProvTunnelWdmDefaultsRowStatus_Object = MibTableColumn
deployProvTunnelWdmDefaultsRowStatus = _DeployProvTunnelWdmDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 1),
    _DeployProvTunnelWdmDefaultsRowStatus_Type()
)
deployProvTunnelWdmDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsRowStatus.setStatus("current")
_DeployProvTunnelWdmDefaultsTunnelId_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsTunnelId_Object = MibTableColumn
deployProvTunnelWdmDefaultsTunnelId = _DeployProvTunnelWdmDefaultsTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 2),
    _DeployProvTunnelWdmDefaultsTunnelId_Type()
)
deployProvTunnelWdmDefaultsTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsTunnelId.setStatus("current")
_DeployProvTunnelWdmDefaultsTunnelNo_Type = Unsigned32
_DeployProvTunnelWdmDefaultsTunnelNo_Object = MibTableColumn
deployProvTunnelWdmDefaultsTunnelNo = _DeployProvTunnelWdmDefaultsTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 3),
    _DeployProvTunnelWdmDefaultsTunnelNo_Type()
)
deployProvTunnelWdmDefaultsTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsTunnelNo.setStatus("current")
_DeployProvTunnelWdmDefaultsAlias_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsAlias_Object = MibTableColumn
deployProvTunnelWdmDefaultsAlias = _DeployProvTunnelWdmDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 4),
    _DeployProvTunnelWdmDefaultsAlias_Type()
)
deployProvTunnelWdmDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsAlias.setStatus("current")
_DeployProvTunnelWdmDefaultsTunnelType_Type = FspR7CpTunnelType
_DeployProvTunnelWdmDefaultsTunnelType_Object = MibTableColumn
deployProvTunnelWdmDefaultsTunnelType = _DeployProvTunnelWdmDefaultsTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 5),
    _DeployProvTunnelWdmDefaultsTunnelType_Type()
)
deployProvTunnelWdmDefaultsTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsTunnelType.setStatus("current")
_DeployProvTunnelWdmDefaultsToTid_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsToTid_Object = MibTableColumn
deployProvTunnelWdmDefaultsToTid = _DeployProvTunnelWdmDefaultsToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 6),
    _DeployProvTunnelWdmDefaultsToTid_Type()
)
deployProvTunnelWdmDefaultsToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsToTid.setStatus("current")
_DeployProvTunnelWdmDefaultsToNodeIp_Type = IpAddress
_DeployProvTunnelWdmDefaultsToNodeIp_Object = MibTableColumn
deployProvTunnelWdmDefaultsToNodeIp = _DeployProvTunnelWdmDefaultsToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 7),
    _DeployProvTunnelWdmDefaultsToNodeIp_Type()
)
deployProvTunnelWdmDefaultsToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsToNodeIp.setStatus("current")
_DeployProvTunnelWdmDefaultsFromAid_Type = EntityIndex
_DeployProvTunnelWdmDefaultsFromAid_Object = MibTableColumn
deployProvTunnelWdmDefaultsFromAid = _DeployProvTunnelWdmDefaultsFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 8),
    _DeployProvTunnelWdmDefaultsFromAid_Type()
)
deployProvTunnelWdmDefaultsFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsFromAid.setStatus("current")
_DeployProvTunnelWdmDefaultsToAid_Type = EntityIndex
_DeployProvTunnelWdmDefaultsToAid_Object = MibTableColumn
deployProvTunnelWdmDefaultsToAid = _DeployProvTunnelWdmDefaultsToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 9),
    _DeployProvTunnelWdmDefaultsToAid_Type()
)
deployProvTunnelWdmDefaultsToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsToAid.setStatus("current")
_DeployProvTunnelWdmDefaultsConnectionDirection_Type = FspR7Conn
_DeployProvTunnelWdmDefaultsConnectionDirection_Object = MibTableColumn
deployProvTunnelWdmDefaultsConnectionDirection = _DeployProvTunnelWdmDefaultsConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 10),
    _DeployProvTunnelWdmDefaultsConnectionDirection_Type()
)
deployProvTunnelWdmDefaultsConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsConnectionDirection.setStatus("current")
_DeployProvTunnelWdmDefaultsFacilityType_Type = FspR7InterfaceType
_DeployProvTunnelWdmDefaultsFacilityType_Object = MibTableColumn
deployProvTunnelWdmDefaultsFacilityType = _DeployProvTunnelWdmDefaultsFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 11),
    _DeployProvTunnelWdmDefaultsFacilityType_Type()
)
deployProvTunnelWdmDefaultsFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsFacilityType.setStatus("current")
_DeployProvTunnelWdmDefaultsTerminationLevel_Type = OhTerminationLevel
_DeployProvTunnelWdmDefaultsTerminationLevel_Object = MibTableColumn
deployProvTunnelWdmDefaultsTerminationLevel = _DeployProvTunnelWdmDefaultsTerminationLevel_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 12),
    _DeployProvTunnelWdmDefaultsTerminationLevel_Type()
)
deployProvTunnelWdmDefaultsTerminationLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsTerminationLevel.setStatus("current")
_DeployProvTunnelWdmDefaultsFecType_Type = FspR7FecType
_DeployProvTunnelWdmDefaultsFecType_Object = MibTableColumn
deployProvTunnelWdmDefaultsFecType = _DeployProvTunnelWdmDefaultsFecType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 13),
    _DeployProvTunnelWdmDefaultsFecType_Type()
)
deployProvTunnelWdmDefaultsFecType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsFecType.setStatus("current")
_DeployProvTunnelWdmDefaultsStuff_Type = FspR7Stuff
_DeployProvTunnelWdmDefaultsStuff_Object = MibTableColumn
deployProvTunnelWdmDefaultsStuff = _DeployProvTunnelWdmDefaultsStuff_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 14),
    _DeployProvTunnelWdmDefaultsStuff_Type()
)
deployProvTunnelWdmDefaultsStuff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsStuff.setStatus("current")
_DeployProvTunnelWdmDefaultsProvisionedPaths_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsProvisionedPaths_Object = MibTableColumn
deployProvTunnelWdmDefaultsProvisionedPaths = _DeployProvTunnelWdmDefaultsProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 15),
    _DeployProvTunnelWdmDefaultsProvisionedPaths_Type()
)
deployProvTunnelWdmDefaultsProvisionedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsProvisionedPaths.setStatus("current")
_DeployProvTunnelWdmDefaultsRecoveryType_Type = FspR7CpRecoveryType
_DeployProvTunnelWdmDefaultsRecoveryType_Object = MibTableColumn
deployProvTunnelWdmDefaultsRecoveryType = _DeployProvTunnelWdmDefaultsRecoveryType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 16),
    _DeployProvTunnelWdmDefaultsRecoveryType_Type()
)
deployProvTunnelWdmDefaultsRecoveryType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsRecoveryType.setStatus("current")
_DeployProvTunnelWdmDefaultsPin_Type = FspR7CpPinning
_DeployProvTunnelWdmDefaultsPin_Object = MibTableColumn
deployProvTunnelWdmDefaultsPin = _DeployProvTunnelWdmDefaultsPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 17),
    _DeployProvTunnelWdmDefaultsPin_Type()
)
deployProvTunnelWdmDefaultsPin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsPin.setStatus("current")
_DeployProvTunnelWdmDefaultsRestorationType_Type = FspR7CpRestorationType
_DeployProvTunnelWdmDefaultsRestorationType_Object = MibTableColumn
deployProvTunnelWdmDefaultsRestorationType = _DeployProvTunnelWdmDefaultsRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 18),
    _DeployProvTunnelWdmDefaultsRestorationType_Type()
)
deployProvTunnelWdmDefaultsRestorationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsRestorationType.setStatus("current")
_DeployProvTunnelWdmDefaultsSubLayer_Type = FspR7SubLayer
_DeployProvTunnelWdmDefaultsSubLayer_Object = MibTableColumn
deployProvTunnelWdmDefaultsSubLayer = _DeployProvTunnelWdmDefaultsSubLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 19),
    _DeployProvTunnelWdmDefaultsSubLayer_Type()
)
deployProvTunnelWdmDefaultsSubLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsSubLayer.setStatus("current")
_DeployProvTunnelWdmDefaultsMonitorEntities_Type = FspR7EnableDisable
_DeployProvTunnelWdmDefaultsMonitorEntities_Object = MibTableColumn
deployProvTunnelWdmDefaultsMonitorEntities = _DeployProvTunnelWdmDefaultsMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 20),
    _DeployProvTunnelWdmDefaultsMonitorEntities_Type()
)
deployProvTunnelWdmDefaultsMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsMonitorEntities.setStatus("current")
_DeployProvTunnelWdmDefaultsSubLayerEncoding_Type = FspR7SubLayerEncoding
_DeployProvTunnelWdmDefaultsSubLayerEncoding_Object = MibTableColumn
deployProvTunnelWdmDefaultsSubLayerEncoding = _DeployProvTunnelWdmDefaultsSubLayerEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 21),
    _DeployProvTunnelWdmDefaultsSubLayerEncoding_Type()
)
deployProvTunnelWdmDefaultsSubLayerEncoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsSubLayerEncoding.setStatus("current")
_DeployProvTunnelWdmDefaultsPceMode_Type = FspR7PceMode
_DeployProvTunnelWdmDefaultsPceMode_Object = MibTableColumn
deployProvTunnelWdmDefaultsPceMode = _DeployProvTunnelWdmDefaultsPceMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 22),
    _DeployProvTunnelWdmDefaultsPceMode_Type()
)
deployProvTunnelWdmDefaultsPceMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsPceMode.setStatus("current")
_DeployProvTunnelWdmDefaultsTunnelScope_Type = FspR7CpTunnelScope
_DeployProvTunnelWdmDefaultsTunnelScope_Object = MibTableColumn
deployProvTunnelWdmDefaultsTunnelScope = _DeployProvTunnelWdmDefaultsTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 23),
    _DeployProvTunnelWdmDefaultsTunnelScope_Type()
)
deployProvTunnelWdmDefaultsTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsTunnelScope.setStatus("current")
_DeployProvTunnelWdmDefaultsLayer_Type = FspR7PacketsLayer
_DeployProvTunnelWdmDefaultsLayer_Object = MibTableColumn
deployProvTunnelWdmDefaultsLayer = _DeployProvTunnelWdmDefaultsLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 24),
    _DeployProvTunnelWdmDefaultsLayer_Type()
)
deployProvTunnelWdmDefaultsLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsLayer.setStatus("current")
_DeployProvTunnelWdmDefaultsOifUni_Type = FspR7YesNo
_DeployProvTunnelWdmDefaultsOifUni_Object = MibTableColumn
deployProvTunnelWdmDefaultsOifUni = _DeployProvTunnelWdmDefaultsOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 25),
    _DeployProvTunnelWdmDefaultsOifUni_Type()
)
deployProvTunnelWdmDefaultsOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsOifUni.setStatus("current")
_DeployProvTunnelWdmDefaultsReversionType_Type = FspR7CpReversionType
_DeployProvTunnelWdmDefaultsReversionType_Object = MibTableColumn
deployProvTunnelWdmDefaultsReversionType = _DeployProvTunnelWdmDefaultsReversionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 26),
    _DeployProvTunnelWdmDefaultsReversionType_Type()
)
deployProvTunnelWdmDefaultsReversionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsReversionType.setStatus("current")
_DeployProvTunnelWdmDefaultsRestorationMode_Type = FspR7CpRestorationMode
_DeployProvTunnelWdmDefaultsRestorationMode_Object = MibTableColumn
deployProvTunnelWdmDefaultsRestorationMode = _DeployProvTunnelWdmDefaultsRestorationMode_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 27),
    _DeployProvTunnelWdmDefaultsRestorationMode_Type()
)
deployProvTunnelWdmDefaultsRestorationMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsRestorationMode.setStatus("current")
_DeployProvTunnelWdmDefaultsRestPathsNoProv_Type = Unsigned32
_DeployProvTunnelWdmDefaultsRestPathsNoProv_Object = MibTableColumn
deployProvTunnelWdmDefaultsRestPathsNoProv = _DeployProvTunnelWdmDefaultsRestPathsNoProv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 28),
    _DeployProvTunnelWdmDefaultsRestPathsNoProv_Type()
)
deployProvTunnelWdmDefaultsRestPathsNoProv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsRestPathsNoProv.setStatus("current")
_DeployProvTunnelWdmDefaultsRestorationPaths_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsRestorationPaths_Object = MibTableColumn
deployProvTunnelWdmDefaultsRestorationPaths = _DeployProvTunnelWdmDefaultsRestorationPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 29),
    _DeployProvTunnelWdmDefaultsRestorationPaths_Type()
)
deployProvTunnelWdmDefaultsRestorationPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsRestorationPaths.setStatus("current")
_DeployProvTunnelWdmDefaultsTunnelTemplate_Type = FspR7YesNo
_DeployProvTunnelWdmDefaultsTunnelTemplate_Object = MibTableColumn
deployProvTunnelWdmDefaultsTunnelTemplate = _DeployProvTunnelWdmDefaultsTunnelTemplate_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 30),
    _DeployProvTunnelWdmDefaultsTunnelTemplate_Type()
)
deployProvTunnelWdmDefaultsTunnelTemplate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsTunnelTemplate.setStatus("current")
_DeployProvTunnelWdmDefaultsRestorationPathsComputed_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsRestorationPathsComputed_Object = MibTableColumn
deployProvTunnelWdmDefaultsRestorationPathsComputed = _DeployProvTunnelWdmDefaultsRestorationPathsComputed_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 31),
    _DeployProvTunnelWdmDefaultsRestorationPathsComputed_Type()
)
deployProvTunnelWdmDefaultsRestorationPathsComputed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsRestorationPathsComputed.setStatus("current")
_DeployProvTunnelWdmDefaultsFromAidString_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsFromAidString_Object = MibTableColumn
deployProvTunnelWdmDefaultsFromAidString = _DeployProvTunnelWdmDefaultsFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 32),
    _DeployProvTunnelWdmDefaultsFromAidString_Type()
)
deployProvTunnelWdmDefaultsFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsFromAidString.setStatus("current")
_DeployProvTunnelWdmDefaultsToAidString_Type = SnmpAdminString
_DeployProvTunnelWdmDefaultsToAidString_Object = MibTableColumn
deployProvTunnelWdmDefaultsToAidString = _DeployProvTunnelWdmDefaultsToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 16, 1, 33),
    _DeployProvTunnelWdmDefaultsToAidString_Type()
)
deployProvTunnelWdmDefaultsToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelWdmDefaultsToAidString.setStatus("current")
_DeployProvPathWdmTable_Object = MibTable
deployProvPathWdmTable = _DeployProvPathWdmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 18)
)
if mibBuilder.loadTexts:
    deployProvPathWdmTable.setStatus("current")
_DeployProvPathWdmEntry_Object = MibTableRow
deployProvPathWdmEntry = _DeployProvPathWdmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 18, 1)
)
deployProvPathWdmEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathWdmEntry.setStatus("current")
_DeployProvPathWdmRowStatus_Type = RowStatus
_DeployProvPathWdmRowStatus_Object = MibTableColumn
deployProvPathWdmRowStatus = _DeployProvPathWdmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 18, 1, 1),
    _DeployProvPathWdmRowStatus_Type()
)
deployProvPathWdmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathWdmRowStatus.setStatus("current")
_DeployProvPathWdmPathId_Type = SnmpAdminString
_DeployProvPathWdmPathId_Object = MibTableColumn
deployProvPathWdmPathId = _DeployProvPathWdmPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 18, 1, 2),
    _DeployProvPathWdmPathId_Type()
)
deployProvPathWdmPathId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathWdmPathId.setStatus("current")
_DeployProvPathWdmCapTable_Object = MibTable
deployProvPathWdmCapTable = _DeployProvPathWdmCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 19)
)
if mibBuilder.loadTexts:
    deployProvPathWdmCapTable.setStatus("current")
_DeployProvPathWdmCapEntry_Object = MibTableRow
deployProvPathWdmCapEntry = _DeployProvPathWdmCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 19, 1)
)
deployProvPathWdmCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathWdmCapEntry.setStatus("current")
_DeployProvPathWdmCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPathWdmCapRowStatus_Object = MibTableColumn
deployProvPathWdmCapRowStatus = _DeployProvPathWdmCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 19, 1, 1),
    _DeployProvPathWdmCapRowStatus_Type()
)
deployProvPathWdmCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathWdmCapRowStatus.setStatus("current")
_DeployProvPathWdmCapPathId_Type = Integer32
_DeployProvPathWdmCapPathId_Object = MibTableColumn
deployProvPathWdmCapPathId = _DeployProvPathWdmCapPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 19, 1, 2),
    _DeployProvPathWdmCapPathId_Type()
)
deployProvPathWdmCapPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathWdmCapPathId.setStatus("current")
_DeployProvPathWdmDefaultsTable_Object = MibTable
deployProvPathWdmDefaultsTable = _DeployProvPathWdmDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 20)
)
if mibBuilder.loadTexts:
    deployProvPathWdmDefaultsTable.setStatus("current")
_DeployProvPathWdmDefaultsEntry_Object = MibTableRow
deployProvPathWdmDefaultsEntry = _DeployProvPathWdmDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 20, 1)
)
deployProvPathWdmDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathWdmDefaultsEntry.setStatus("current")
_DeployProvPathWdmDefaultsRowStatus_Type = RowStatus
_DeployProvPathWdmDefaultsRowStatus_Object = MibTableColumn
deployProvPathWdmDefaultsRowStatus = _DeployProvPathWdmDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 20, 1, 1),
    _DeployProvPathWdmDefaultsRowStatus_Type()
)
deployProvPathWdmDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathWdmDefaultsRowStatus.setStatus("current")
_DeployProvPathWdmDefaultsPathId_Type = SnmpAdminString
_DeployProvPathWdmDefaultsPathId_Object = MibTableColumn
deployProvPathWdmDefaultsPathId = _DeployProvPathWdmDefaultsPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 20, 1, 2),
    _DeployProvPathWdmDefaultsPathId_Type()
)
deployProvPathWdmDefaultsPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathWdmDefaultsPathId.setStatus("current")
_DeployProvPathElementWdmTable_Object = MibTable
deployProvPathElementWdmTable = _DeployProvPathElementWdmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21)
)
if mibBuilder.loadTexts:
    deployProvPathElementWdmTable.setStatus("current")
_DeployProvPathElementWdmEntry_Object = MibTableRow
deployProvPathElementWdmEntry = _DeployProvPathElementWdmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1)
)
deployProvPathElementWdmEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementWdmEntry.setStatus("current")
_DeployProvPathElementWdmRowStatus_Type = RowStatus
_DeployProvPathElementWdmRowStatus_Object = MibTableColumn
deployProvPathElementWdmRowStatus = _DeployProvPathElementWdmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 1),
    _DeployProvPathElementWdmRowStatus_Type()
)
deployProvPathElementWdmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmRowStatus.setStatus("current")
_DeployProvPathElementWdmTrafficEngineeringType_Type = FspR7CpTEType
_DeployProvPathElementWdmTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementWdmTrafficEngineeringType = _DeployProvPathElementWdmTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 2),
    _DeployProvPathElementWdmTrafficEngineeringType_Type()
)
deployProvPathElementWdmTrafficEngineeringType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmTrafficEngineeringType.setStatus("current")
_DeployProvPathElementWdmLifIp_Type = IpAddress
_DeployProvPathElementWdmLifIp_Object = MibTableColumn
deployProvPathElementWdmLifIp = _DeployProvPathElementWdmLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 3),
    _DeployProvPathElementWdmLifIp_Type()
)
deployProvPathElementWdmLifIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmLifIp.setStatus("current")
_DeployProvPathElementWdmNodeIp_Type = IpAddress
_DeployProvPathElementWdmNodeIp_Object = MibTableColumn
deployProvPathElementWdmNodeIp = _DeployProvPathElementWdmNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 4),
    _DeployProvPathElementWdmNodeIp_Type()
)
deployProvPathElementWdmNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmNodeIp.setStatus("current")
_DeployProvPathElementWdmTid_Type = SnmpAdminString
_DeployProvPathElementWdmTid_Object = MibTableColumn
deployProvPathElementWdmTid = _DeployProvPathElementWdmTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 5),
    _DeployProvPathElementWdmTid_Type()
)
deployProvPathElementWdmTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmTid.setStatus("current")
_DeployProvPathElementWdmLogicalInterfaceId_Type = Unsigned32
_DeployProvPathElementWdmLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementWdmLogicalInterfaceId = _DeployProvPathElementWdmLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 6),
    _DeployProvPathElementWdmLogicalInterfaceId_Type()
)
deployProvPathElementWdmLogicalInterfaceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmLogicalInterfaceId.setStatus("current")
_DeployProvPathElementWdmTie_Type = FspR7CpTie
_DeployProvPathElementWdmTie_Object = MibTableColumn
deployProvPathElementWdmTie = _DeployProvPathElementWdmTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 7),
    _DeployProvPathElementWdmTie_Type()
)
deployProvPathElementWdmTie.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmTie.setStatus("current")
_DeployProvPathElementWdmChannelUp_Type = FspR7ChannelNumber
_DeployProvPathElementWdmChannelUp_Object = MibTableColumn
deployProvPathElementWdmChannelUp = _DeployProvPathElementWdmChannelUp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 8),
    _DeployProvPathElementWdmChannelUp_Type()
)
deployProvPathElementWdmChannelUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmChannelUp.setStatus("current")
_DeployProvPathElementWdmChannelDown_Type = FspR7ChannelNumber
_DeployProvPathElementWdmChannelDown_Object = MibTableColumn
deployProvPathElementWdmChannelDown = _DeployProvPathElementWdmChannelDown_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 9),
    _DeployProvPathElementWdmChannelDown_Type()
)
deployProvPathElementWdmChannelDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmChannelDown.setStatus("current")
_DeployProvPathElementWdmUpstreamModuleAid_Type = EntityIndex
_DeployProvPathElementWdmUpstreamModuleAid_Object = MibTableColumn
deployProvPathElementWdmUpstreamModuleAid = _DeployProvPathElementWdmUpstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 10),
    _DeployProvPathElementWdmUpstreamModuleAid_Type()
)
deployProvPathElementWdmUpstreamModuleAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmUpstreamModuleAid.setStatus("current")
_DeployProvPathElementWdmDownstreamModuleAid_Type = EntityIndex
_DeployProvPathElementWdmDownstreamModuleAid_Object = MibTableColumn
deployProvPathElementWdmDownstreamModuleAid = _DeployProvPathElementWdmDownstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 21, 1, 11),
    _DeployProvPathElementWdmDownstreamModuleAid_Type()
)
deployProvPathElementWdmDownstreamModuleAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDownstreamModuleAid.setStatus("current")
_DeployProvPathElementWdmCapTable_Object = MibTable
deployProvPathElementWdmCapTable = _DeployProvPathElementWdmCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22)
)
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapTable.setStatus("current")
_DeployProvPathElementWdmCapEntry_Object = MibTableRow
deployProvPathElementWdmCapEntry = _DeployProvPathElementWdmCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1)
)
deployProvPathElementWdmCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapEntry.setStatus("current")
_DeployProvPathElementWdmCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPathElementWdmCapRowStatus_Object = MibTableColumn
deployProvPathElementWdmCapRowStatus = _DeployProvPathElementWdmCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 1),
    _DeployProvPathElementWdmCapRowStatus_Type()
)
deployProvPathElementWdmCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapRowStatus.setStatus("current")
_DeployProvPathElementWdmCapTrafficEngineeringType_Type = FspR7CpTETypeCaps
_DeployProvPathElementWdmCapTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementWdmCapTrafficEngineeringType = _DeployProvPathElementWdmCapTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 2),
    _DeployProvPathElementWdmCapTrafficEngineeringType_Type()
)
deployProvPathElementWdmCapTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapTrafficEngineeringType.setStatus("current")
_DeployProvPathElementWdmCapLifIp_Type = FspR7YesNo
_DeployProvPathElementWdmCapLifIp_Object = MibTableColumn
deployProvPathElementWdmCapLifIp = _DeployProvPathElementWdmCapLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 3),
    _DeployProvPathElementWdmCapLifIp_Type()
)
deployProvPathElementWdmCapLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapLifIp.setStatus("current")
_DeployProvPathElementWdmCapNodeIp_Type = FspR7YesNo
_DeployProvPathElementWdmCapNodeIp_Object = MibTableColumn
deployProvPathElementWdmCapNodeIp = _DeployProvPathElementWdmCapNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 4),
    _DeployProvPathElementWdmCapNodeIp_Type()
)
deployProvPathElementWdmCapNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapNodeIp.setStatus("current")
_DeployProvPathElementWdmCapTid_Type = Integer32
_DeployProvPathElementWdmCapTid_Object = MibTableColumn
deployProvPathElementWdmCapTid = _DeployProvPathElementWdmCapTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 5),
    _DeployProvPathElementWdmCapTid_Type()
)
deployProvPathElementWdmCapTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapTid.setStatus("current")
_DeployProvPathElementWdmCapLogicalInterfaceId_Type = FspR7Unsigned32Caps
_DeployProvPathElementWdmCapLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementWdmCapLogicalInterfaceId = _DeployProvPathElementWdmCapLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 6),
    _DeployProvPathElementWdmCapLogicalInterfaceId_Type()
)
deployProvPathElementWdmCapLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapLogicalInterfaceId.setStatus("current")
_DeployProvPathElementWdmCapTie_Type = FspR7CpTieCaps
_DeployProvPathElementWdmCapTie_Object = MibTableColumn
deployProvPathElementWdmCapTie = _DeployProvPathElementWdmCapTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 7),
    _DeployProvPathElementWdmCapTie_Type()
)
deployProvPathElementWdmCapTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapTie.setStatus("current")
_DeployProvPathElementWdmCapChannelUp_Type = FspR7ChannelNumberCaps
_DeployProvPathElementWdmCapChannelUp_Object = MibTableColumn
deployProvPathElementWdmCapChannelUp = _DeployProvPathElementWdmCapChannelUp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 8),
    _DeployProvPathElementWdmCapChannelUp_Type()
)
deployProvPathElementWdmCapChannelUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapChannelUp.setStatus("current")
_DeployProvPathElementWdmCapChannelDown_Type = FspR7ChannelNumberCaps
_DeployProvPathElementWdmCapChannelDown_Object = MibTableColumn
deployProvPathElementWdmCapChannelDown = _DeployProvPathElementWdmCapChannelDown_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 9),
    _DeployProvPathElementWdmCapChannelDown_Type()
)
deployProvPathElementWdmCapChannelDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapChannelDown.setStatus("current")
_DeployProvPathElementWdmCapUpstreamModuleAid_Type = Integer32
_DeployProvPathElementWdmCapUpstreamModuleAid_Object = MibTableColumn
deployProvPathElementWdmCapUpstreamModuleAid = _DeployProvPathElementWdmCapUpstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 10),
    _DeployProvPathElementWdmCapUpstreamModuleAid_Type()
)
deployProvPathElementWdmCapUpstreamModuleAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapUpstreamModuleAid.setStatus("current")
_DeployProvPathElementWdmCapDownstreamModuleAid_Type = Integer32
_DeployProvPathElementWdmCapDownstreamModuleAid_Object = MibTableColumn
deployProvPathElementWdmCapDownstreamModuleAid = _DeployProvPathElementWdmCapDownstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 22, 1, 11),
    _DeployProvPathElementWdmCapDownstreamModuleAid_Type()
)
deployProvPathElementWdmCapDownstreamModuleAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmCapDownstreamModuleAid.setStatus("current")
_DeployProvPathElementWdmDefaultsTable_Object = MibTable
deployProvPathElementWdmDefaultsTable = _DeployProvPathElementWdmDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23)
)
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsTable.setStatus("current")
_DeployProvPathElementWdmDefaultsEntry_Object = MibTableRow
deployProvPathElementWdmDefaultsEntry = _DeployProvPathElementWdmDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1)
)
deployProvPathElementWdmDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsEntry.setStatus("current")
_DeployProvPathElementWdmDefaultsRowStatus_Type = RowStatus
_DeployProvPathElementWdmDefaultsRowStatus_Object = MibTableColumn
deployProvPathElementWdmDefaultsRowStatus = _DeployProvPathElementWdmDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 1),
    _DeployProvPathElementWdmDefaultsRowStatus_Type()
)
deployProvPathElementWdmDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsRowStatus.setStatus("current")
_DeployProvPathElementWdmDefaultsTrafficEngineeringType_Type = FspR7CpTEType
_DeployProvPathElementWdmDefaultsTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementWdmDefaultsTrafficEngineeringType = _DeployProvPathElementWdmDefaultsTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 2),
    _DeployProvPathElementWdmDefaultsTrafficEngineeringType_Type()
)
deployProvPathElementWdmDefaultsTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsTrafficEngineeringType.setStatus("current")
_DeployProvPathElementWdmDefaultsLifIp_Type = IpAddress
_DeployProvPathElementWdmDefaultsLifIp_Object = MibTableColumn
deployProvPathElementWdmDefaultsLifIp = _DeployProvPathElementWdmDefaultsLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 3),
    _DeployProvPathElementWdmDefaultsLifIp_Type()
)
deployProvPathElementWdmDefaultsLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsLifIp.setStatus("current")
_DeployProvPathElementWdmDefaultsNodeIp_Type = IpAddress
_DeployProvPathElementWdmDefaultsNodeIp_Object = MibTableColumn
deployProvPathElementWdmDefaultsNodeIp = _DeployProvPathElementWdmDefaultsNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 4),
    _DeployProvPathElementWdmDefaultsNodeIp_Type()
)
deployProvPathElementWdmDefaultsNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsNodeIp.setStatus("current")
_DeployProvPathElementWdmDefaultsTid_Type = SnmpAdminString
_DeployProvPathElementWdmDefaultsTid_Object = MibTableColumn
deployProvPathElementWdmDefaultsTid = _DeployProvPathElementWdmDefaultsTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 5),
    _DeployProvPathElementWdmDefaultsTid_Type()
)
deployProvPathElementWdmDefaultsTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsTid.setStatus("current")
_DeployProvPathElementWdmDefaultsLogicalInterfaceId_Type = Unsigned32
_DeployProvPathElementWdmDefaultsLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementWdmDefaultsLogicalInterfaceId = _DeployProvPathElementWdmDefaultsLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 6),
    _DeployProvPathElementWdmDefaultsLogicalInterfaceId_Type()
)
deployProvPathElementWdmDefaultsLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsLogicalInterfaceId.setStatus("current")
_DeployProvPathElementWdmDefaultsTie_Type = FspR7CpTie
_DeployProvPathElementWdmDefaultsTie_Object = MibTableColumn
deployProvPathElementWdmDefaultsTie = _DeployProvPathElementWdmDefaultsTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 7),
    _DeployProvPathElementWdmDefaultsTie_Type()
)
deployProvPathElementWdmDefaultsTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsTie.setStatus("current")
_DeployProvPathElementWdmDefaultsChannelUp_Type = FspR7ChannelNumber
_DeployProvPathElementWdmDefaultsChannelUp_Object = MibTableColumn
deployProvPathElementWdmDefaultsChannelUp = _DeployProvPathElementWdmDefaultsChannelUp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 8),
    _DeployProvPathElementWdmDefaultsChannelUp_Type()
)
deployProvPathElementWdmDefaultsChannelUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsChannelUp.setStatus("current")
_DeployProvPathElementWdmDefaultsChannelDown_Type = FspR7ChannelNumber
_DeployProvPathElementWdmDefaultsChannelDown_Object = MibTableColumn
deployProvPathElementWdmDefaultsChannelDown = _DeployProvPathElementWdmDefaultsChannelDown_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 9),
    _DeployProvPathElementWdmDefaultsChannelDown_Type()
)
deployProvPathElementWdmDefaultsChannelDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsChannelDown.setStatus("current")
_DeployProvPathElementWdmDefaultsUpstreamModuleAid_Type = EntityIndex
_DeployProvPathElementWdmDefaultsUpstreamModuleAid_Object = MibTableColumn
deployProvPathElementWdmDefaultsUpstreamModuleAid = _DeployProvPathElementWdmDefaultsUpstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 10),
    _DeployProvPathElementWdmDefaultsUpstreamModuleAid_Type()
)
deployProvPathElementWdmDefaultsUpstreamModuleAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsUpstreamModuleAid.setStatus("current")
_DeployProvPathElementWdmDefaultsDownstreamModuleAid_Type = EntityIndex
_DeployProvPathElementWdmDefaultsDownstreamModuleAid_Object = MibTableColumn
deployProvPathElementWdmDefaultsDownstreamModuleAid = _DeployProvPathElementWdmDefaultsDownstreamModuleAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 23, 1, 11),
    _DeployProvPathElementWdmDefaultsDownstreamModuleAid_Type()
)
deployProvPathElementWdmDefaultsDownstreamModuleAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementWdmDefaultsDownstreamModuleAid.setStatus("current")
_DeployProvCopyPathWdmTable_Object = MibTable
deployProvCopyPathWdmTable = _DeployProvCopyPathWdmTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 24)
)
if mibBuilder.loadTexts:
    deployProvCopyPathWdmTable.setStatus("current")
_DeployProvCopyPathWdmEntry_Object = MibTableRow
deployProvCopyPathWdmEntry = _DeployProvCopyPathWdmEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 24, 1)
)
deployProvCopyPathWdmEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathWdmEntry.setStatus("current")
_DeployProvCopyPathWdmRowStatus_Type = RowStatus
_DeployProvCopyPathWdmRowStatus_Object = MibTableColumn
deployProvCopyPathWdmRowStatus = _DeployProvCopyPathWdmRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 24, 1, 1),
    _DeployProvCopyPathWdmRowStatus_Type()
)
deployProvCopyPathWdmRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmRowStatus.setStatus("current")
_DeployProvCopyPathWdmSourcePathIndex_Type = EntityIndex
_DeployProvCopyPathWdmSourcePathIndex_Object = MibTableColumn
deployProvCopyPathWdmSourcePathIndex = _DeployProvCopyPathWdmSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 24, 1, 2),
    _DeployProvCopyPathWdmSourcePathIndex_Type()
)
deployProvCopyPathWdmSourcePathIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmSourcePathIndex.setStatus("current")
_DeployProvCopyPathWdmPathId_Type = SnmpAdminString
_DeployProvCopyPathWdmPathId_Object = MibTableColumn
deployProvCopyPathWdmPathId = _DeployProvCopyPathWdmPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 24, 1, 3),
    _DeployProvCopyPathWdmPathId_Type()
)
deployProvCopyPathWdmPathId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmPathId.setStatus("current")
_DeployProvCopyPathWdmCapTable_Object = MibTable
deployProvCopyPathWdmCapTable = _DeployProvCopyPathWdmCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 25)
)
if mibBuilder.loadTexts:
    deployProvCopyPathWdmCapTable.setStatus("current")
_DeployProvCopyPathWdmCapEntry_Object = MibTableRow
deployProvCopyPathWdmCapEntry = _DeployProvCopyPathWdmCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 25, 1)
)
deployProvCopyPathWdmCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathWdmCapEntry.setStatus("current")
_DeployProvCopyPathWdmCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvCopyPathWdmCapRowStatus_Object = MibTableColumn
deployProvCopyPathWdmCapRowStatus = _DeployProvCopyPathWdmCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 25, 1, 1),
    _DeployProvCopyPathWdmCapRowStatus_Type()
)
deployProvCopyPathWdmCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmCapRowStatus.setStatus("current")
_DeployProvCopyPathWdmCapSourcePathIndex_Type = Integer32
_DeployProvCopyPathWdmCapSourcePathIndex_Object = MibTableColumn
deployProvCopyPathWdmCapSourcePathIndex = _DeployProvCopyPathWdmCapSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 25, 1, 2),
    _DeployProvCopyPathWdmCapSourcePathIndex_Type()
)
deployProvCopyPathWdmCapSourcePathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmCapSourcePathIndex.setStatus("current")
_DeployProvCopyPathWdmCapPathId_Type = Integer32
_DeployProvCopyPathWdmCapPathId_Object = MibTableColumn
deployProvCopyPathWdmCapPathId = _DeployProvCopyPathWdmCapPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 25, 1, 3),
    _DeployProvCopyPathWdmCapPathId_Type()
)
deployProvCopyPathWdmCapPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmCapPathId.setStatus("current")
_DeployProvCopyPathWdmDefaultsTable_Object = MibTable
deployProvCopyPathWdmDefaultsTable = _DeployProvCopyPathWdmDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 26)
)
if mibBuilder.loadTexts:
    deployProvCopyPathWdmDefaultsTable.setStatus("current")
_DeployProvCopyPathWdmDefaultsEntry_Object = MibTableRow
deployProvCopyPathWdmDefaultsEntry = _DeployProvCopyPathWdmDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 26, 1)
)
deployProvCopyPathWdmDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathWdmDefaultsEntry.setStatus("current")
_DeployProvCopyPathWdmDefaultsRowStatus_Type = RowStatus
_DeployProvCopyPathWdmDefaultsRowStatus_Object = MibTableColumn
deployProvCopyPathWdmDefaultsRowStatus = _DeployProvCopyPathWdmDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 26, 1, 1),
    _DeployProvCopyPathWdmDefaultsRowStatus_Type()
)
deployProvCopyPathWdmDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmDefaultsRowStatus.setStatus("current")
_DeployProvCopyPathWdmDefaultsSourcePathIndex_Type = EntityIndex
_DeployProvCopyPathWdmDefaultsSourcePathIndex_Object = MibTableColumn
deployProvCopyPathWdmDefaultsSourcePathIndex = _DeployProvCopyPathWdmDefaultsSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 26, 1, 2),
    _DeployProvCopyPathWdmDefaultsSourcePathIndex_Type()
)
deployProvCopyPathWdmDefaultsSourcePathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmDefaultsSourcePathIndex.setStatus("current")
_DeployProvCopyPathWdmDefaultsPathId_Type = SnmpAdminString
_DeployProvCopyPathWdmDefaultsPathId_Object = MibTableColumn
deployProvCopyPathWdmDefaultsPathId = _DeployProvCopyPathWdmDefaultsPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 26, 1, 3),
    _DeployProvCopyPathWdmDefaultsPathId_Type()
)
deployProvCopyPathWdmDefaultsPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathWdmDefaultsPathId.setStatus("current")
_DeployProvLogicalCpIfTable_Object = MibTable
deployProvLogicalCpIfTable = _DeployProvLogicalCpIfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46)
)
if mibBuilder.loadTexts:
    deployProvLogicalCpIfTable.setStatus("current")
_DeployProvLogicalCpIfEntry_Object = MibTableRow
deployProvLogicalCpIfEntry = _DeployProvLogicalCpIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1)
)
deployProvLogicalCpIfEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLogicalCpIfEntry.setStatus("current")
_DeployProvLogicalCpIfRowStatus_Type = RowStatus
_DeployProvLogicalCpIfRowStatus_Object = MibTableColumn
deployProvLogicalCpIfRowStatus = _DeployProvLogicalCpIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 1),
    _DeployProvLogicalCpIfRowStatus_Type()
)
deployProvLogicalCpIfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfRowStatus.setStatus("current")
_DeployProvLogicalCpIfFacilityType_Type = FspR7InterfaceType
_DeployProvLogicalCpIfFacilityType_Object = MibTableColumn
deployProvLogicalCpIfFacilityType = _DeployProvLogicalCpIfFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 2),
    _DeployProvLogicalCpIfFacilityType_Type()
)
deployProvLogicalCpIfFacilityType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfFacilityType.setStatus("current")
_DeployProvLogicalCpIfAlias_Type = SnmpAdminString
_DeployProvLogicalCpIfAlias_Object = MibTableColumn
deployProvLogicalCpIfAlias = _DeployProvLogicalCpIfAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 3),
    _DeployProvLogicalCpIfAlias_Type()
)
deployProvLogicalCpIfAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfAlias.setStatus("current")
_DeployProvLogicalCpIfDcnAid_Type = EntityIndex
_DeployProvLogicalCpIfDcnAid_Object = MibTableColumn
deployProvLogicalCpIfDcnAid = _DeployProvLogicalCpIfDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 4),
    _DeployProvLogicalCpIfDcnAid_Type()
)
deployProvLogicalCpIfDcnAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDcnAid.setStatus("current")
_DeployProvLogicalCpIfOspf_Type = FspR7OspfMode
_DeployProvLogicalCpIfOspf_Object = MibTableColumn
deployProvLogicalCpIfOspf = _DeployProvLogicalCpIfOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 5),
    _DeployProvLogicalCpIfOspf_Type()
)
deployProvLogicalCpIfOspf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfOspf.setStatus("current")
_DeployProvLogicalCpIfAreaId_Type = IpAddress
_DeployProvLogicalCpIfAreaId_Object = MibTableColumn
deployProvLogicalCpIfAreaId = _DeployProvLogicalCpIfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 6),
    _DeployProvLogicalCpIfAreaId_Type()
)
deployProvLogicalCpIfAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfAreaId.setStatus("current")


class _DeployProvLogicalCpIfMetric_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfMetric_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfMetric_Object = MibTableColumn
deployProvLogicalCpIfMetric = _DeployProvLogicalCpIfMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 7),
    _DeployProvLogicalCpIfMetric_Type()
)
deployProvLogicalCpIfMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfMetric.setStatus("current")


class _DeployProvLogicalCpIfHelloInterval_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfHelloInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfHelloInterval_Object = MibTableColumn
deployProvLogicalCpIfHelloInterval = _DeployProvLogicalCpIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 8),
    _DeployProvLogicalCpIfHelloInterval_Type()
)
deployProvLogicalCpIfHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfHelloInterval.setUnits("s")


class _DeployProvLogicalCpIfDeadInterval_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDeadInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDeadInterval_Object = MibTableColumn
deployProvLogicalCpIfDeadInterval = _DeployProvLogicalCpIfDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 9),
    _DeployProvLogicalCpIfDeadInterval_Type()
)
deployProvLogicalCpIfDeadInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDeadInterval.setUnits("s")


class _DeployProvLogicalCpIfPrio_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfPrio_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfPrio_Object = MibTableColumn
deployProvLogicalCpIfPrio = _DeployProvLogicalCpIfPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 10),
    _DeployProvLogicalCpIfPrio_Type()
)
deployProvLogicalCpIfPrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfPrio.setStatus("current")


class _DeployProvLogicalCpIfRetransmitInterval_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfRetransmitInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfRetransmitInterval_Object = MibTableColumn
deployProvLogicalCpIfRetransmitInterval = _DeployProvLogicalCpIfRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 11),
    _DeployProvLogicalCpIfRetransmitInterval_Type()
)
deployProvLogicalCpIfRetransmitInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfRetransmitInterval.setUnits("s")
_DeployProvLogicalCpIfAuthType_Type = FspR7CpAuthType
_DeployProvLogicalCpIfAuthType_Object = MibTableColumn
deployProvLogicalCpIfAuthType = _DeployProvLogicalCpIfAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 12),
    _DeployProvLogicalCpIfAuthType_Type()
)
deployProvLogicalCpIfAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfAuthType.setStatus("current")
_DeployProvLogicalCpIfAuthString_Type = SnmpAdminString
_DeployProvLogicalCpIfAuthString_Object = MibTableColumn
deployProvLogicalCpIfAuthString = _DeployProvLogicalCpIfAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 13),
    _DeployProvLogicalCpIfAuthString_Type()
)
deployProvLogicalCpIfAuthString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfAuthString.setStatus("current")
_DeployProvLogicalCpIfTransport_Type = SnmpAdminString
_DeployProvLogicalCpIfTransport_Object = MibTableColumn
deployProvLogicalCpIfTransport = _DeployProvLogicalCpIfTransport_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 14),
    _DeployProvLogicalCpIfTransport_Type()
)
deployProvLogicalCpIfTransport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfTransport.setStatus("current")
_DeployProvLogicalCpIfFarEndLifId_Type = EntityIndex
_DeployProvLogicalCpIfFarEndLifId_Object = MibTableColumn
deployProvLogicalCpIfFarEndLifId = _DeployProvLogicalCpIfFarEndLifId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 15),
    _DeployProvLogicalCpIfFarEndLifId_Type()
)
deployProvLogicalCpIfFarEndLifId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfFarEndLifId.setStatus("current")
_DeployProvLogicalCpIfFarEndNodeIp_Type = IpAddress
_DeployProvLogicalCpIfFarEndNodeIp_Object = MibTableColumn
deployProvLogicalCpIfFarEndNodeIp = _DeployProvLogicalCpIfFarEndNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 16),
    _DeployProvLogicalCpIfFarEndNodeIp_Type()
)
deployProvLogicalCpIfFarEndNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfFarEndNodeIp.setStatus("current")
_DeployProvLogicalCpIfFarEndTid_Type = SnmpAdminString
_DeployProvLogicalCpIfFarEndTid_Object = MibTableColumn
deployProvLogicalCpIfFarEndTid = _DeployProvLogicalCpIfFarEndTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 17),
    _DeployProvLogicalCpIfFarEndTid_Type()
)
deployProvLogicalCpIfFarEndTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfFarEndTid.setStatus("current")
_DeployProvLogicalCpIfLayer_Type = FspR7PacketsLayer
_DeployProvLogicalCpIfLayer_Object = MibTableColumn
deployProvLogicalCpIfLayer = _DeployProvLogicalCpIfLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 18),
    _DeployProvLogicalCpIfLayer_Type()
)
deployProvLogicalCpIfLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfLayer.setStatus("current")
_DeployProvLogicalCpIfCpType_Type = FspR7CpType
_DeployProvLogicalCpIfCpType_Object = MibTableColumn
deployProvLogicalCpIfCpType = _DeployProvLogicalCpIfCpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 19),
    _DeployProvLogicalCpIfCpType_Type()
)
deployProvLogicalCpIfCpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCpType.setStatus("current")


class _DeployProvLogicalCpIfRefreshTimeout_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfRefreshTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfRefreshTimeout_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfRefreshTimeout_Object = MibTableColumn
deployProvLogicalCpIfRefreshTimeout = _DeployProvLogicalCpIfRefreshTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 20),
    _DeployProvLogicalCpIfRefreshTimeout_Type()
)
deployProvLogicalCpIfRefreshTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfRefreshTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfRefreshTimeout.setUnits("s")


class _DeployProvLogicalCpIfRefreshMultiplier_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfRefreshMultiplier based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfRefreshMultiplier_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfRefreshMultiplier_Object = MibTableColumn
deployProvLogicalCpIfRefreshMultiplier = _DeployProvLogicalCpIfRefreshMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 21),
    _DeployProvLogicalCpIfRefreshMultiplier_Type()
)
deployProvLogicalCpIfRefreshMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfRefreshMultiplier.setStatus("current")


class _DeployProvLogicalCpIfTeMetric_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfTeMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfTeMetric_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfTeMetric_Object = MibTableColumn
deployProvLogicalCpIfTeMetric = _DeployProvLogicalCpIfTeMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 22),
    _DeployProvLogicalCpIfTeMetric_Type()
)
deployProvLogicalCpIfTeMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfTeMetric.setStatus("current")
_DeployProvLogicalCpIfTeAreaId_Type = IpAddress
_DeployProvLogicalCpIfTeAreaId_Object = MibTableColumn
deployProvLogicalCpIfTeAreaId = _DeployProvLogicalCpIfTeAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 23),
    _DeployProvLogicalCpIfTeAreaId_Type()
)
deployProvLogicalCpIfTeAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfTeAreaId.setStatus("current")
_DeployProvLogicalCpIfLinkColor_Type = Unsigned32
_DeployProvLogicalCpIfLinkColor_Object = MibTableColumn
deployProvLogicalCpIfLinkColor = _DeployProvLogicalCpIfLinkColor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 24),
    _DeployProvLogicalCpIfLinkColor_Type()
)
deployProvLogicalCpIfLinkColor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfLinkColor.setStatus("current")
_DeployProvLogicalCpIfIpType_Type = FspR7IpType
_DeployProvLogicalCpIfIpType_Object = MibTableColumn
deployProvLogicalCpIfIpType = _DeployProvLogicalCpIfIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 25),
    _DeployProvLogicalCpIfIpType_Type()
)
deployProvLogicalCpIfIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfIpType.setStatus("current")
_DeployProvLogicalCpIfIpAddr_Type = IpAddress
_DeployProvLogicalCpIfIpAddr_Object = MibTableColumn
deployProvLogicalCpIfIpAddr = _DeployProvLogicalCpIfIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 26),
    _DeployProvLogicalCpIfIpAddr_Type()
)
deployProvLogicalCpIfIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfIpAddr.setStatus("current")
_DeployProvLogicalCpIfIpAddrMask_Type = IpAddress
_DeployProvLogicalCpIfIpAddrMask_Object = MibTableColumn
deployProvLogicalCpIfIpAddrMask = _DeployProvLogicalCpIfIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 27),
    _DeployProvLogicalCpIfIpAddrMask_Type()
)
deployProvLogicalCpIfIpAddrMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfIpAddrMask.setStatus("current")
_DeployProvLogicalCpIfAdmin_Type = FspR7AdminState
_DeployProvLogicalCpIfAdmin_Object = MibTableColumn
deployProvLogicalCpIfAdmin = _DeployProvLogicalCpIfAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 28),
    _DeployProvLogicalCpIfAdmin_Type()
)
deployProvLogicalCpIfAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfAdmin.setStatus("current")
_DeployProvLogicalCpIfEncapsulation_Type = FspR7CpEncapsulation
_DeployProvLogicalCpIfEncapsulation_Object = MibTableColumn
deployProvLogicalCpIfEncapsulation = _DeployProvLogicalCpIfEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 29),
    _DeployProvLogicalCpIfEncapsulation_Type()
)
deployProvLogicalCpIfEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfEncapsulation.setStatus("current")
_DeployProvLogicalCpIfPushedNendIpHeader_Type = IpAddress
_DeployProvLogicalCpIfPushedNendIpHeader_Object = MibTableColumn
deployProvLogicalCpIfPushedNendIpHeader = _DeployProvLogicalCpIfPushedNendIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 30),
    _DeployProvLogicalCpIfPushedNendIpHeader_Type()
)
deployProvLogicalCpIfPushedNendIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfPushedNendIpHeader.setStatus("current")
_DeployProvLogicalCpIfPushedFarEndIpHeader_Type = IpAddress
_DeployProvLogicalCpIfPushedFarEndIpHeader_Object = MibTableColumn
deployProvLogicalCpIfPushedFarEndIpHeader = _DeployProvLogicalCpIfPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 31),
    _DeployProvLogicalCpIfPushedFarEndIpHeader_Type()
)
deployProvLogicalCpIfPushedFarEndIpHeader.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfPushedFarEndIpHeader.setStatus("current")


class _DeployProvLogicalCpIfTimeToLive_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfTimeToLive based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfTimeToLive_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfTimeToLive_Object = MibTableColumn
deployProvLogicalCpIfTimeToLive = _DeployProvLogicalCpIfTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 32),
    _DeployProvLogicalCpIfTimeToLive_Type()
)
deployProvLogicalCpIfTimeToLive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfTimeToLive.setStatus("current")
_DeployProvLogicalCpIfNendTeLinkIdNum_Type = IpAddress
_DeployProvLogicalCpIfNendTeLinkIdNum_Object = MibTableColumn
deployProvLogicalCpIfNendTeLinkIdNum = _DeployProvLogicalCpIfNendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 33),
    _DeployProvLogicalCpIfNendTeLinkIdNum_Type()
)
deployProvLogicalCpIfNendTeLinkIdNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfNendTeLinkIdNum.setStatus("current")
_DeployProvLogicalCpIfFendTeLinkIdNum_Type = IpAddress
_DeployProvLogicalCpIfFendTeLinkIdNum_Object = MibTableColumn
deployProvLogicalCpIfFendTeLinkIdNum = _DeployProvLogicalCpIfFendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 34),
    _DeployProvLogicalCpIfFendTeLinkIdNum_Type()
)
deployProvLogicalCpIfFendTeLinkIdNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfFendTeLinkIdNum.setStatus("current")
_DeployProvLogicalCpIfFendDataLinkId_Type = Unsigned32
_DeployProvLogicalCpIfFendDataLinkId_Object = MibTableColumn
deployProvLogicalCpIfFendDataLinkId = _DeployProvLogicalCpIfFendDataLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 35),
    _DeployProvLogicalCpIfFendDataLinkId_Type()
)
deployProvLogicalCpIfFendDataLinkId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfFendDataLinkId.setStatus("current")
_DeployProvLogicalCpIfNendTeLinkIdUnn_Type = Unsigned32
_DeployProvLogicalCpIfNendTeLinkIdUnn_Object = MibTableColumn
deployProvLogicalCpIfNendTeLinkIdUnn = _DeployProvLogicalCpIfNendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 36),
    _DeployProvLogicalCpIfNendTeLinkIdUnn_Type()
)
deployProvLogicalCpIfNendTeLinkIdUnn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfNendTeLinkIdUnn.setStatus("current")
_DeployProvLogicalCpIfFendTeLinkIdUnn_Type = Unsigned32
_DeployProvLogicalCpIfFendTeLinkIdUnn_Object = MibTableColumn
deployProvLogicalCpIfFendTeLinkIdUnn = _DeployProvLogicalCpIfFendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 37),
    _DeployProvLogicalCpIfFendTeLinkIdUnn_Type()
)
deployProvLogicalCpIfFendTeLinkIdUnn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfFendTeLinkIdUnn.setStatus("current")
_DeployProvLogicalCpIfEncoding_Type = FspR7CpEncode
_DeployProvLogicalCpIfEncoding_Object = MibTableColumn
deployProvLogicalCpIfEncoding = _DeployProvLogicalCpIfEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 38),
    _DeployProvLogicalCpIfEncoding_Type()
)
deployProvLogicalCpIfEncoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfEncoding.setStatus("current")
_DeployProvLogicalCpIfTunnelAid_Type = EntityIndex
_DeployProvLogicalCpIfTunnelAid_Object = MibTableColumn
deployProvLogicalCpIfTunnelAid = _DeployProvLogicalCpIfTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 39),
    _DeployProvLogicalCpIfTunnelAid_Type()
)
deployProvLogicalCpIfTunnelAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfTunnelAid.setStatus("current")
_DeployProvLogicalCpIfExtAdvertised_Type = FspR7YesNo
_DeployProvLogicalCpIfExtAdvertised_Object = MibTableColumn
deployProvLogicalCpIfExtAdvertised = _DeployProvLogicalCpIfExtAdvertised_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 40),
    _DeployProvLogicalCpIfExtAdvertised_Type()
)
deployProvLogicalCpIfExtAdvertised.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfExtAdvertised.setStatus("current")
_DeployProvLogicalCpIfVTeType_Type = FspR7CpVTeType
_DeployProvLogicalCpIfVTeType_Object = MibTableColumn
deployProvLogicalCpIfVTeType = _DeployProvLogicalCpIfVTeType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 41),
    _DeployProvLogicalCpIfVTeType_Type()
)
deployProvLogicalCpIfVTeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfVTeType.setStatus("current")
_DeployProvLogicalCpIfVNodeIp_Type = IpAddress
_DeployProvLogicalCpIfVNodeIp_Object = MibTableColumn
deployProvLogicalCpIfVNodeIp = _DeployProvLogicalCpIfVNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 42),
    _DeployProvLogicalCpIfVNodeIp_Type()
)
deployProvLogicalCpIfVNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfVNodeIp.setStatus("current")
_DeployProvLogicalCpIfVNodeTltp_Type = SnmpAdminString
_DeployProvLogicalCpIfVNodeTltp_Object = MibTableColumn
deployProvLogicalCpIfVNodeTltp = _DeployProvLogicalCpIfVNodeTltp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 46, 1, 43),
    _DeployProvLogicalCpIfVNodeTltp_Type()
)
deployProvLogicalCpIfVNodeTltp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfVNodeTltp.setStatus("current")
_DeployProvLogicalCpIfCapTable_Object = MibTable
deployProvLogicalCpIfCapTable = _DeployProvLogicalCpIfCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47)
)
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapTable.setStatus("current")
_DeployProvLogicalCpIfCapEntry_Object = MibTableRow
deployProvLogicalCpIfCapEntry = _DeployProvLogicalCpIfCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1)
)
deployProvLogicalCpIfCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapEntry.setStatus("current")
_DeployProvLogicalCpIfCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvLogicalCpIfCapRowStatus_Object = MibTableColumn
deployProvLogicalCpIfCapRowStatus = _DeployProvLogicalCpIfCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 1),
    _DeployProvLogicalCpIfCapRowStatus_Type()
)
deployProvLogicalCpIfCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapRowStatus.setStatus("current")
_DeployProvLogicalCpIfCapFacilityType_Type = FspR7InterfaceTypeCaps
_DeployProvLogicalCpIfCapFacilityType_Object = MibTableColumn
deployProvLogicalCpIfCapFacilityType = _DeployProvLogicalCpIfCapFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 2),
    _DeployProvLogicalCpIfCapFacilityType_Type()
)
deployProvLogicalCpIfCapFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapFacilityType.setStatus("current")
_DeployProvLogicalCpIfCapAlias_Type = Integer32
_DeployProvLogicalCpIfCapAlias_Object = MibTableColumn
deployProvLogicalCpIfCapAlias = _DeployProvLogicalCpIfCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 3),
    _DeployProvLogicalCpIfCapAlias_Type()
)
deployProvLogicalCpIfCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapAlias.setStatus("current")
_DeployProvLogicalCpIfCapDcnAid_Type = Integer32
_DeployProvLogicalCpIfCapDcnAid_Object = MibTableColumn
deployProvLogicalCpIfCapDcnAid = _DeployProvLogicalCpIfCapDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 4),
    _DeployProvLogicalCpIfCapDcnAid_Type()
)
deployProvLogicalCpIfCapDcnAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapDcnAid.setStatus("current")
_DeployProvLogicalCpIfCapOspf_Type = FspR7OspfModeCaps
_DeployProvLogicalCpIfCapOspf_Object = MibTableColumn
deployProvLogicalCpIfCapOspf = _DeployProvLogicalCpIfCapOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 5),
    _DeployProvLogicalCpIfCapOspf_Type()
)
deployProvLogicalCpIfCapOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapOspf.setStatus("current")
_DeployProvLogicalCpIfCapAreaId_Type = FspR7YesNo
_DeployProvLogicalCpIfCapAreaId_Object = MibTableColumn
deployProvLogicalCpIfCapAreaId = _DeployProvLogicalCpIfCapAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 6),
    _DeployProvLogicalCpIfCapAreaId_Type()
)
deployProvLogicalCpIfCapAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapAreaId.setStatus("current")
_DeployProvLogicalCpIfCapMetric_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapMetric_Object = MibTableColumn
deployProvLogicalCpIfCapMetric = _DeployProvLogicalCpIfCapMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 7),
    _DeployProvLogicalCpIfCapMetric_Type()
)
deployProvLogicalCpIfCapMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapMetric.setStatus("current")
_DeployProvLogicalCpIfCapHelloInterval_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapHelloInterval_Object = MibTableColumn
deployProvLogicalCpIfCapHelloInterval = _DeployProvLogicalCpIfCapHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 8),
    _DeployProvLogicalCpIfCapHelloInterval_Type()
)
deployProvLogicalCpIfCapHelloInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapHelloInterval.setUnits("s")
_DeployProvLogicalCpIfCapDeadInterval_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapDeadInterval_Object = MibTableColumn
deployProvLogicalCpIfCapDeadInterval = _DeployProvLogicalCpIfCapDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 9),
    _DeployProvLogicalCpIfCapDeadInterval_Type()
)
deployProvLogicalCpIfCapDeadInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapDeadInterval.setUnits("s")
_DeployProvLogicalCpIfCapPrio_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapPrio_Object = MibTableColumn
deployProvLogicalCpIfCapPrio = _DeployProvLogicalCpIfCapPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 10),
    _DeployProvLogicalCpIfCapPrio_Type()
)
deployProvLogicalCpIfCapPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapPrio.setStatus("current")
_DeployProvLogicalCpIfCapRetransmitInterval_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapRetransmitInterval_Object = MibTableColumn
deployProvLogicalCpIfCapRetransmitInterval = _DeployProvLogicalCpIfCapRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 11),
    _DeployProvLogicalCpIfCapRetransmitInterval_Type()
)
deployProvLogicalCpIfCapRetransmitInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapRetransmitInterval.setUnits("s")
_DeployProvLogicalCpIfCapAuthType_Type = FspR7CpAuthTypeCaps
_DeployProvLogicalCpIfCapAuthType_Object = MibTableColumn
deployProvLogicalCpIfCapAuthType = _DeployProvLogicalCpIfCapAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 12),
    _DeployProvLogicalCpIfCapAuthType_Type()
)
deployProvLogicalCpIfCapAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapAuthType.setStatus("current")
_DeployProvLogicalCpIfCapAuthString_Type = Integer32
_DeployProvLogicalCpIfCapAuthString_Object = MibTableColumn
deployProvLogicalCpIfCapAuthString = _DeployProvLogicalCpIfCapAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 13),
    _DeployProvLogicalCpIfCapAuthString_Type()
)
deployProvLogicalCpIfCapAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapAuthString.setStatus("current")
_DeployProvLogicalCpIfCapTransport_Type = Integer32
_DeployProvLogicalCpIfCapTransport_Object = MibTableColumn
deployProvLogicalCpIfCapTransport = _DeployProvLogicalCpIfCapTransport_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 14),
    _DeployProvLogicalCpIfCapTransport_Type()
)
deployProvLogicalCpIfCapTransport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapTransport.setStatus("current")
_DeployProvLogicalCpIfCapFarEndLifId_Type = Integer32
_DeployProvLogicalCpIfCapFarEndLifId_Object = MibTableColumn
deployProvLogicalCpIfCapFarEndLifId = _DeployProvLogicalCpIfCapFarEndLifId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 15),
    _DeployProvLogicalCpIfCapFarEndLifId_Type()
)
deployProvLogicalCpIfCapFarEndLifId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapFarEndLifId.setStatus("current")
_DeployProvLogicalCpIfCapFarEndNodeIp_Type = FspR7YesNo
_DeployProvLogicalCpIfCapFarEndNodeIp_Object = MibTableColumn
deployProvLogicalCpIfCapFarEndNodeIp = _DeployProvLogicalCpIfCapFarEndNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 16),
    _DeployProvLogicalCpIfCapFarEndNodeIp_Type()
)
deployProvLogicalCpIfCapFarEndNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapFarEndNodeIp.setStatus("current")
_DeployProvLogicalCpIfCapFarEndTid_Type = Integer32
_DeployProvLogicalCpIfCapFarEndTid_Object = MibTableColumn
deployProvLogicalCpIfCapFarEndTid = _DeployProvLogicalCpIfCapFarEndTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 17),
    _DeployProvLogicalCpIfCapFarEndTid_Type()
)
deployProvLogicalCpIfCapFarEndTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapFarEndTid.setStatus("current")
_DeployProvLogicalCpIfCapLayer_Type = FspR7PacketsLayerCaps
_DeployProvLogicalCpIfCapLayer_Object = MibTableColumn
deployProvLogicalCpIfCapLayer = _DeployProvLogicalCpIfCapLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 18),
    _DeployProvLogicalCpIfCapLayer_Type()
)
deployProvLogicalCpIfCapLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapLayer.setStatus("current")
_DeployProvLogicalCpIfCapCpType_Type = FspR7CpTypeCaps
_DeployProvLogicalCpIfCapCpType_Object = MibTableColumn
deployProvLogicalCpIfCapCpType = _DeployProvLogicalCpIfCapCpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 19),
    _DeployProvLogicalCpIfCapCpType_Type()
)
deployProvLogicalCpIfCapCpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapCpType.setStatus("current")
_DeployProvLogicalCpIfCapRefreshTimeout_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapRefreshTimeout_Object = MibTableColumn
deployProvLogicalCpIfCapRefreshTimeout = _DeployProvLogicalCpIfCapRefreshTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 20),
    _DeployProvLogicalCpIfCapRefreshTimeout_Type()
)
deployProvLogicalCpIfCapRefreshTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapRefreshTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapRefreshTimeout.setUnits("s")
_DeployProvLogicalCpIfCapRefreshMultiplier_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapRefreshMultiplier_Object = MibTableColumn
deployProvLogicalCpIfCapRefreshMultiplier = _DeployProvLogicalCpIfCapRefreshMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 21),
    _DeployProvLogicalCpIfCapRefreshMultiplier_Type()
)
deployProvLogicalCpIfCapRefreshMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapRefreshMultiplier.setStatus("current")
_DeployProvLogicalCpIfCapTeMetric_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapTeMetric_Object = MibTableColumn
deployProvLogicalCpIfCapTeMetric = _DeployProvLogicalCpIfCapTeMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 22),
    _DeployProvLogicalCpIfCapTeMetric_Type()
)
deployProvLogicalCpIfCapTeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapTeMetric.setStatus("current")
_DeployProvLogicalCpIfCapTeAreaId_Type = FspR7YesNo
_DeployProvLogicalCpIfCapTeAreaId_Object = MibTableColumn
deployProvLogicalCpIfCapTeAreaId = _DeployProvLogicalCpIfCapTeAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 23),
    _DeployProvLogicalCpIfCapTeAreaId_Type()
)
deployProvLogicalCpIfCapTeAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapTeAreaId.setStatus("current")
_DeployProvLogicalCpIfCapLinkColor_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapLinkColor_Object = MibTableColumn
deployProvLogicalCpIfCapLinkColor = _DeployProvLogicalCpIfCapLinkColor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 24),
    _DeployProvLogicalCpIfCapLinkColor_Type()
)
deployProvLogicalCpIfCapLinkColor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapLinkColor.setStatus("current")
_DeployProvLogicalCpIfCapIpType_Type = FspR7IpTypeCaps
_DeployProvLogicalCpIfCapIpType_Object = MibTableColumn
deployProvLogicalCpIfCapIpType = _DeployProvLogicalCpIfCapIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 25),
    _DeployProvLogicalCpIfCapIpType_Type()
)
deployProvLogicalCpIfCapIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapIpType.setStatus("current")
_DeployProvLogicalCpIfCapIpAddr_Type = FspR7YesNo
_DeployProvLogicalCpIfCapIpAddr_Object = MibTableColumn
deployProvLogicalCpIfCapIpAddr = _DeployProvLogicalCpIfCapIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 26),
    _DeployProvLogicalCpIfCapIpAddr_Type()
)
deployProvLogicalCpIfCapIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapIpAddr.setStatus("current")
_DeployProvLogicalCpIfCapIpAddrMask_Type = FspR7YesNo
_DeployProvLogicalCpIfCapIpAddrMask_Object = MibTableColumn
deployProvLogicalCpIfCapIpAddrMask = _DeployProvLogicalCpIfCapIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 27),
    _DeployProvLogicalCpIfCapIpAddrMask_Type()
)
deployProvLogicalCpIfCapIpAddrMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapIpAddrMask.setStatus("current")
_DeployProvLogicalCpIfCapAdmin_Type = FspR7AdminStateCaps
_DeployProvLogicalCpIfCapAdmin_Object = MibTableColumn
deployProvLogicalCpIfCapAdmin = _DeployProvLogicalCpIfCapAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 28),
    _DeployProvLogicalCpIfCapAdmin_Type()
)
deployProvLogicalCpIfCapAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapAdmin.setStatus("current")
_DeployProvLogicalCpIfCapEncapsulation_Type = FspR7CpEncapsulationCaps
_DeployProvLogicalCpIfCapEncapsulation_Object = MibTableColumn
deployProvLogicalCpIfCapEncapsulation = _DeployProvLogicalCpIfCapEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 29),
    _DeployProvLogicalCpIfCapEncapsulation_Type()
)
deployProvLogicalCpIfCapEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapEncapsulation.setStatus("current")
_DeployProvLogicalCpIfCapPushedNendIpHeader_Type = FspR7YesNo
_DeployProvLogicalCpIfCapPushedNendIpHeader_Object = MibTableColumn
deployProvLogicalCpIfCapPushedNendIpHeader = _DeployProvLogicalCpIfCapPushedNendIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 30),
    _DeployProvLogicalCpIfCapPushedNendIpHeader_Type()
)
deployProvLogicalCpIfCapPushedNendIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapPushedNendIpHeader.setStatus("current")
_DeployProvLogicalCpIfCapPushedFarEndIpHeader_Type = FspR7YesNo
_DeployProvLogicalCpIfCapPushedFarEndIpHeader_Object = MibTableColumn
deployProvLogicalCpIfCapPushedFarEndIpHeader = _DeployProvLogicalCpIfCapPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 31),
    _DeployProvLogicalCpIfCapPushedFarEndIpHeader_Type()
)
deployProvLogicalCpIfCapPushedFarEndIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapPushedFarEndIpHeader.setStatus("current")
_DeployProvLogicalCpIfCapTimeToLive_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapTimeToLive_Object = MibTableColumn
deployProvLogicalCpIfCapTimeToLive = _DeployProvLogicalCpIfCapTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 32),
    _DeployProvLogicalCpIfCapTimeToLive_Type()
)
deployProvLogicalCpIfCapTimeToLive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapTimeToLive.setStatus("current")
_DeployProvLogicalCpIfCapNendTeLinkIdNum_Type = FspR7YesNo
_DeployProvLogicalCpIfCapNendTeLinkIdNum_Object = MibTableColumn
deployProvLogicalCpIfCapNendTeLinkIdNum = _DeployProvLogicalCpIfCapNendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 33),
    _DeployProvLogicalCpIfCapNendTeLinkIdNum_Type()
)
deployProvLogicalCpIfCapNendTeLinkIdNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapNendTeLinkIdNum.setStatus("current")
_DeployProvLogicalCpIfCapFendTeLinkIdNum_Type = FspR7YesNo
_DeployProvLogicalCpIfCapFendTeLinkIdNum_Object = MibTableColumn
deployProvLogicalCpIfCapFendTeLinkIdNum = _DeployProvLogicalCpIfCapFendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 34),
    _DeployProvLogicalCpIfCapFendTeLinkIdNum_Type()
)
deployProvLogicalCpIfCapFendTeLinkIdNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapFendTeLinkIdNum.setStatus("current")
_DeployProvLogicalCpIfCapFendDataLinkId_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapFendDataLinkId_Object = MibTableColumn
deployProvLogicalCpIfCapFendDataLinkId = _DeployProvLogicalCpIfCapFendDataLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 35),
    _DeployProvLogicalCpIfCapFendDataLinkId_Type()
)
deployProvLogicalCpIfCapFendDataLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapFendDataLinkId.setStatus("current")
_DeployProvLogicalCpIfCapNendTeLinkIdUnn_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapNendTeLinkIdUnn_Object = MibTableColumn
deployProvLogicalCpIfCapNendTeLinkIdUnn = _DeployProvLogicalCpIfCapNendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 36),
    _DeployProvLogicalCpIfCapNendTeLinkIdUnn_Type()
)
deployProvLogicalCpIfCapNendTeLinkIdUnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapNendTeLinkIdUnn.setStatus("current")
_DeployProvLogicalCpIfCapFendTeLinkIdUnn_Type = FspR7Unsigned32Caps
_DeployProvLogicalCpIfCapFendTeLinkIdUnn_Object = MibTableColumn
deployProvLogicalCpIfCapFendTeLinkIdUnn = _DeployProvLogicalCpIfCapFendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 37),
    _DeployProvLogicalCpIfCapFendTeLinkIdUnn_Type()
)
deployProvLogicalCpIfCapFendTeLinkIdUnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapFendTeLinkIdUnn.setStatus("current")
_DeployProvLogicalCpIfCapEncoding_Type = FspR7CpEncodeCaps
_DeployProvLogicalCpIfCapEncoding_Object = MibTableColumn
deployProvLogicalCpIfCapEncoding = _DeployProvLogicalCpIfCapEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 38),
    _DeployProvLogicalCpIfCapEncoding_Type()
)
deployProvLogicalCpIfCapEncoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapEncoding.setStatus("current")
_DeployProvLogicalCpIfCapTunnelAid_Type = Integer32
_DeployProvLogicalCpIfCapTunnelAid_Object = MibTableColumn
deployProvLogicalCpIfCapTunnelAid = _DeployProvLogicalCpIfCapTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 39),
    _DeployProvLogicalCpIfCapTunnelAid_Type()
)
deployProvLogicalCpIfCapTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapTunnelAid.setStatus("current")
_DeployProvLogicalCpIfCapExtAdvertised_Type = FspR7YesNoCaps
_DeployProvLogicalCpIfCapExtAdvertised_Object = MibTableColumn
deployProvLogicalCpIfCapExtAdvertised = _DeployProvLogicalCpIfCapExtAdvertised_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 40),
    _DeployProvLogicalCpIfCapExtAdvertised_Type()
)
deployProvLogicalCpIfCapExtAdvertised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapExtAdvertised.setStatus("current")
_DeployProvLogicalCpIfCapVTeType_Type = FspR7CpVTeTypeCaps
_DeployProvLogicalCpIfCapVTeType_Object = MibTableColumn
deployProvLogicalCpIfCapVTeType = _DeployProvLogicalCpIfCapVTeType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 41),
    _DeployProvLogicalCpIfCapVTeType_Type()
)
deployProvLogicalCpIfCapVTeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapVTeType.setStatus("current")
_DeployProvLogicalCpIfCapVNodeIp_Type = FspR7YesNo
_DeployProvLogicalCpIfCapVNodeIp_Object = MibTableColumn
deployProvLogicalCpIfCapVNodeIp = _DeployProvLogicalCpIfCapVNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 42),
    _DeployProvLogicalCpIfCapVNodeIp_Type()
)
deployProvLogicalCpIfCapVNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapVNodeIp.setStatus("current")
_DeployProvLogicalCpIfCapVNodeTltp_Type = FspR7SnmpLongString
_DeployProvLogicalCpIfCapVNodeTltp_Object = MibTableColumn
deployProvLogicalCpIfCapVNodeTltp = _DeployProvLogicalCpIfCapVNodeTltp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 47, 1, 43),
    _DeployProvLogicalCpIfCapVNodeTltp_Type()
)
deployProvLogicalCpIfCapVNodeTltp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfCapVNodeTltp.setStatus("current")
_DeployProvLogicalCpIfDefaultsTable_Object = MibTable
deployProvLogicalCpIfDefaultsTable = _DeployProvLogicalCpIfDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48)
)
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsTable.setStatus("current")
_DeployProvLogicalCpIfDefaultsEntry_Object = MibTableRow
deployProvLogicalCpIfDefaultsEntry = _DeployProvLogicalCpIfDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1)
)
deployProvLogicalCpIfDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsEntry.setStatus("current")
_DeployProvLogicalCpIfDefaultsRowStatus_Type = RowStatus
_DeployProvLogicalCpIfDefaultsRowStatus_Object = MibTableColumn
deployProvLogicalCpIfDefaultsRowStatus = _DeployProvLogicalCpIfDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 1),
    _DeployProvLogicalCpIfDefaultsRowStatus_Type()
)
deployProvLogicalCpIfDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsRowStatus.setStatus("current")
_DeployProvLogicalCpIfDefaultsFacilityType_Type = FspR7InterfaceType
_DeployProvLogicalCpIfDefaultsFacilityType_Object = MibTableColumn
deployProvLogicalCpIfDefaultsFacilityType = _DeployProvLogicalCpIfDefaultsFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 2),
    _DeployProvLogicalCpIfDefaultsFacilityType_Type()
)
deployProvLogicalCpIfDefaultsFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsFacilityType.setStatus("current")
_DeployProvLogicalCpIfDefaultsAlias_Type = SnmpAdminString
_DeployProvLogicalCpIfDefaultsAlias_Object = MibTableColumn
deployProvLogicalCpIfDefaultsAlias = _DeployProvLogicalCpIfDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 3),
    _DeployProvLogicalCpIfDefaultsAlias_Type()
)
deployProvLogicalCpIfDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsAlias.setStatus("current")
_DeployProvLogicalCpIfDefaultsDcnAid_Type = EntityIndex
_DeployProvLogicalCpIfDefaultsDcnAid_Object = MibTableColumn
deployProvLogicalCpIfDefaultsDcnAid = _DeployProvLogicalCpIfDefaultsDcnAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 4),
    _DeployProvLogicalCpIfDefaultsDcnAid_Type()
)
deployProvLogicalCpIfDefaultsDcnAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsDcnAid.setStatus("current")
_DeployProvLogicalCpIfDefaultsOspf_Type = FspR7OspfMode
_DeployProvLogicalCpIfDefaultsOspf_Object = MibTableColumn
deployProvLogicalCpIfDefaultsOspf = _DeployProvLogicalCpIfDefaultsOspf_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 5),
    _DeployProvLogicalCpIfDefaultsOspf_Type()
)
deployProvLogicalCpIfDefaultsOspf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsOspf.setStatus("current")
_DeployProvLogicalCpIfDefaultsAreaId_Type = IpAddress
_DeployProvLogicalCpIfDefaultsAreaId_Object = MibTableColumn
deployProvLogicalCpIfDefaultsAreaId = _DeployProvLogicalCpIfDefaultsAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 6),
    _DeployProvLogicalCpIfDefaultsAreaId_Type()
)
deployProvLogicalCpIfDefaultsAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsAreaId.setStatus("current")


class _DeployProvLogicalCpIfDefaultsMetric_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsMetric_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsMetric_Object = MibTableColumn
deployProvLogicalCpIfDefaultsMetric = _DeployProvLogicalCpIfDefaultsMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 7),
    _DeployProvLogicalCpIfDefaultsMetric_Type()
)
deployProvLogicalCpIfDefaultsMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsMetric.setStatus("current")


class _DeployProvLogicalCpIfDefaultsHelloInterval_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsHelloInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsHelloInterval_Object = MibTableColumn
deployProvLogicalCpIfDefaultsHelloInterval = _DeployProvLogicalCpIfDefaultsHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 8),
    _DeployProvLogicalCpIfDefaultsHelloInterval_Type()
)
deployProvLogicalCpIfDefaultsHelloInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsHelloInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsHelloInterval.setUnits("s")


class _DeployProvLogicalCpIfDefaultsDeadInterval_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsDeadInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsDeadInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsDeadInterval_Object = MibTableColumn
deployProvLogicalCpIfDefaultsDeadInterval = _DeployProvLogicalCpIfDefaultsDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 9),
    _DeployProvLogicalCpIfDefaultsDeadInterval_Type()
)
deployProvLogicalCpIfDefaultsDeadInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsDeadInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsDeadInterval.setUnits("s")


class _DeployProvLogicalCpIfDefaultsPrio_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsPrio based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsPrio_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsPrio_Object = MibTableColumn
deployProvLogicalCpIfDefaultsPrio = _DeployProvLogicalCpIfDefaultsPrio_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 10),
    _DeployProvLogicalCpIfDefaultsPrio_Type()
)
deployProvLogicalCpIfDefaultsPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsPrio.setStatus("current")


class _DeployProvLogicalCpIfDefaultsRetransmitInterval_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsRetransmitInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsRetransmitInterval_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsRetransmitInterval_Object = MibTableColumn
deployProvLogicalCpIfDefaultsRetransmitInterval = _DeployProvLogicalCpIfDefaultsRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 11),
    _DeployProvLogicalCpIfDefaultsRetransmitInterval_Type()
)
deployProvLogicalCpIfDefaultsRetransmitInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsRetransmitInterval.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsRetransmitInterval.setUnits("s")
_DeployProvLogicalCpIfDefaultsAuthType_Type = FspR7CpAuthType
_DeployProvLogicalCpIfDefaultsAuthType_Object = MibTableColumn
deployProvLogicalCpIfDefaultsAuthType = _DeployProvLogicalCpIfDefaultsAuthType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 12),
    _DeployProvLogicalCpIfDefaultsAuthType_Type()
)
deployProvLogicalCpIfDefaultsAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsAuthType.setStatus("current")
_DeployProvLogicalCpIfDefaultsAuthString_Type = SnmpAdminString
_DeployProvLogicalCpIfDefaultsAuthString_Object = MibTableColumn
deployProvLogicalCpIfDefaultsAuthString = _DeployProvLogicalCpIfDefaultsAuthString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 13),
    _DeployProvLogicalCpIfDefaultsAuthString_Type()
)
deployProvLogicalCpIfDefaultsAuthString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsAuthString.setStatus("current")
_DeployProvLogicalCpIfDefaultsTransport_Type = SnmpAdminString
_DeployProvLogicalCpIfDefaultsTransport_Object = MibTableColumn
deployProvLogicalCpIfDefaultsTransport = _DeployProvLogicalCpIfDefaultsTransport_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 14),
    _DeployProvLogicalCpIfDefaultsTransport_Type()
)
deployProvLogicalCpIfDefaultsTransport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsTransport.setStatus("current")
_DeployProvLogicalCpIfDefaultsFarEndLifId_Type = EntityIndex
_DeployProvLogicalCpIfDefaultsFarEndLifId_Object = MibTableColumn
deployProvLogicalCpIfDefaultsFarEndLifId = _DeployProvLogicalCpIfDefaultsFarEndLifId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 15),
    _DeployProvLogicalCpIfDefaultsFarEndLifId_Type()
)
deployProvLogicalCpIfDefaultsFarEndLifId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsFarEndLifId.setStatus("current")
_DeployProvLogicalCpIfDefaultsFarEndNodeIp_Type = IpAddress
_DeployProvLogicalCpIfDefaultsFarEndNodeIp_Object = MibTableColumn
deployProvLogicalCpIfDefaultsFarEndNodeIp = _DeployProvLogicalCpIfDefaultsFarEndNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 16),
    _DeployProvLogicalCpIfDefaultsFarEndNodeIp_Type()
)
deployProvLogicalCpIfDefaultsFarEndNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsFarEndNodeIp.setStatus("current")
_DeployProvLogicalCpIfDefaultsFarEndTid_Type = SnmpAdminString
_DeployProvLogicalCpIfDefaultsFarEndTid_Object = MibTableColumn
deployProvLogicalCpIfDefaultsFarEndTid = _DeployProvLogicalCpIfDefaultsFarEndTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 17),
    _DeployProvLogicalCpIfDefaultsFarEndTid_Type()
)
deployProvLogicalCpIfDefaultsFarEndTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsFarEndTid.setStatus("current")
_DeployProvLogicalCpIfDefaultsLayer_Type = FspR7PacketsLayer
_DeployProvLogicalCpIfDefaultsLayer_Object = MibTableColumn
deployProvLogicalCpIfDefaultsLayer = _DeployProvLogicalCpIfDefaultsLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 18),
    _DeployProvLogicalCpIfDefaultsLayer_Type()
)
deployProvLogicalCpIfDefaultsLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsLayer.setStatus("current")
_DeployProvLogicalCpIfDefaultsCpType_Type = FspR7CpType
_DeployProvLogicalCpIfDefaultsCpType_Object = MibTableColumn
deployProvLogicalCpIfDefaultsCpType = _DeployProvLogicalCpIfDefaultsCpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 19),
    _DeployProvLogicalCpIfDefaultsCpType_Type()
)
deployProvLogicalCpIfDefaultsCpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsCpType.setStatus("current")


class _DeployProvLogicalCpIfDefaultsRefreshTimeout_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsRefreshTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsRefreshTimeout_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsRefreshTimeout_Object = MibTableColumn
deployProvLogicalCpIfDefaultsRefreshTimeout = _DeployProvLogicalCpIfDefaultsRefreshTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 20),
    _DeployProvLogicalCpIfDefaultsRefreshTimeout_Type()
)
deployProvLogicalCpIfDefaultsRefreshTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsRefreshTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsRefreshTimeout.setUnits("s")


class _DeployProvLogicalCpIfDefaultsRefreshMultiplier_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsRefreshMultiplier based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsRefreshMultiplier_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsRefreshMultiplier_Object = MibTableColumn
deployProvLogicalCpIfDefaultsRefreshMultiplier = _DeployProvLogicalCpIfDefaultsRefreshMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 21),
    _DeployProvLogicalCpIfDefaultsRefreshMultiplier_Type()
)
deployProvLogicalCpIfDefaultsRefreshMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsRefreshMultiplier.setStatus("current")


class _DeployProvLogicalCpIfDefaultsTeMetric_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsTeMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsTeMetric_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsTeMetric_Object = MibTableColumn
deployProvLogicalCpIfDefaultsTeMetric = _DeployProvLogicalCpIfDefaultsTeMetric_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 22),
    _DeployProvLogicalCpIfDefaultsTeMetric_Type()
)
deployProvLogicalCpIfDefaultsTeMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsTeMetric.setStatus("current")
_DeployProvLogicalCpIfDefaultsTeAreaId_Type = IpAddress
_DeployProvLogicalCpIfDefaultsTeAreaId_Object = MibTableColumn
deployProvLogicalCpIfDefaultsTeAreaId = _DeployProvLogicalCpIfDefaultsTeAreaId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 23),
    _DeployProvLogicalCpIfDefaultsTeAreaId_Type()
)
deployProvLogicalCpIfDefaultsTeAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsTeAreaId.setStatus("current")
_DeployProvLogicalCpIfDefaultsLinkColor_Type = Unsigned32
_DeployProvLogicalCpIfDefaultsLinkColor_Object = MibTableColumn
deployProvLogicalCpIfDefaultsLinkColor = _DeployProvLogicalCpIfDefaultsLinkColor_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 24),
    _DeployProvLogicalCpIfDefaultsLinkColor_Type()
)
deployProvLogicalCpIfDefaultsLinkColor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsLinkColor.setStatus("current")
_DeployProvLogicalCpIfDefaultsIpType_Type = FspR7IpType
_DeployProvLogicalCpIfDefaultsIpType_Object = MibTableColumn
deployProvLogicalCpIfDefaultsIpType = _DeployProvLogicalCpIfDefaultsIpType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 25),
    _DeployProvLogicalCpIfDefaultsIpType_Type()
)
deployProvLogicalCpIfDefaultsIpType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsIpType.setStatus("current")
_DeployProvLogicalCpIfDefaultsIpAddr_Type = IpAddress
_DeployProvLogicalCpIfDefaultsIpAddr_Object = MibTableColumn
deployProvLogicalCpIfDefaultsIpAddr = _DeployProvLogicalCpIfDefaultsIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 26),
    _DeployProvLogicalCpIfDefaultsIpAddr_Type()
)
deployProvLogicalCpIfDefaultsIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsIpAddr.setStatus("current")
_DeployProvLogicalCpIfDefaultsIpAddrMask_Type = IpAddress
_DeployProvLogicalCpIfDefaultsIpAddrMask_Object = MibTableColumn
deployProvLogicalCpIfDefaultsIpAddrMask = _DeployProvLogicalCpIfDefaultsIpAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 27),
    _DeployProvLogicalCpIfDefaultsIpAddrMask_Type()
)
deployProvLogicalCpIfDefaultsIpAddrMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsIpAddrMask.setStatus("current")
_DeployProvLogicalCpIfDefaultsAdmin_Type = FspR7AdminState
_DeployProvLogicalCpIfDefaultsAdmin_Object = MibTableColumn
deployProvLogicalCpIfDefaultsAdmin = _DeployProvLogicalCpIfDefaultsAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 28),
    _DeployProvLogicalCpIfDefaultsAdmin_Type()
)
deployProvLogicalCpIfDefaultsAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsAdmin.setStatus("current")
_DeployProvLogicalCpIfDefaultsEncapsulation_Type = FspR7CpEncapsulation
_DeployProvLogicalCpIfDefaultsEncapsulation_Object = MibTableColumn
deployProvLogicalCpIfDefaultsEncapsulation = _DeployProvLogicalCpIfDefaultsEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 29),
    _DeployProvLogicalCpIfDefaultsEncapsulation_Type()
)
deployProvLogicalCpIfDefaultsEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsEncapsulation.setStatus("current")
_DeployProvLogicalCpIfDefaultsPushedNendIpHeader_Type = IpAddress
_DeployProvLogicalCpIfDefaultsPushedNendIpHeader_Object = MibTableColumn
deployProvLogicalCpIfDefaultsPushedNendIpHeader = _DeployProvLogicalCpIfDefaultsPushedNendIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 30),
    _DeployProvLogicalCpIfDefaultsPushedNendIpHeader_Type()
)
deployProvLogicalCpIfDefaultsPushedNendIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsPushedNendIpHeader.setStatus("current")
_DeployProvLogicalCpIfDefaultsPushedFarEndIpHeader_Type = IpAddress
_DeployProvLogicalCpIfDefaultsPushedFarEndIpHeader_Object = MibTableColumn
deployProvLogicalCpIfDefaultsPushedFarEndIpHeader = _DeployProvLogicalCpIfDefaultsPushedFarEndIpHeader_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 31),
    _DeployProvLogicalCpIfDefaultsPushedFarEndIpHeader_Type()
)
deployProvLogicalCpIfDefaultsPushedFarEndIpHeader.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsPushedFarEndIpHeader.setStatus("current")


class _DeployProvLogicalCpIfDefaultsTimeToLive_Type(Unsigned32):
    """Custom type deployProvLogicalCpIfDefaultsTimeToLive based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvLogicalCpIfDefaultsTimeToLive_Type.__name__ = "Unsigned32"
_DeployProvLogicalCpIfDefaultsTimeToLive_Object = MibTableColumn
deployProvLogicalCpIfDefaultsTimeToLive = _DeployProvLogicalCpIfDefaultsTimeToLive_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 32),
    _DeployProvLogicalCpIfDefaultsTimeToLive_Type()
)
deployProvLogicalCpIfDefaultsTimeToLive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsTimeToLive.setStatus("current")
_DeployProvLogicalCpIfDefaultsNendTeLinkIdNum_Type = IpAddress
_DeployProvLogicalCpIfDefaultsNendTeLinkIdNum_Object = MibTableColumn
deployProvLogicalCpIfDefaultsNendTeLinkIdNum = _DeployProvLogicalCpIfDefaultsNendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 33),
    _DeployProvLogicalCpIfDefaultsNendTeLinkIdNum_Type()
)
deployProvLogicalCpIfDefaultsNendTeLinkIdNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsNendTeLinkIdNum.setStatus("current")
_DeployProvLogicalCpIfDefaultsFendTeLinkIdNum_Type = IpAddress
_DeployProvLogicalCpIfDefaultsFendTeLinkIdNum_Object = MibTableColumn
deployProvLogicalCpIfDefaultsFendTeLinkIdNum = _DeployProvLogicalCpIfDefaultsFendTeLinkIdNum_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 34),
    _DeployProvLogicalCpIfDefaultsFendTeLinkIdNum_Type()
)
deployProvLogicalCpIfDefaultsFendTeLinkIdNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsFendTeLinkIdNum.setStatus("current")
_DeployProvLogicalCpIfDefaultsFendDataLinkId_Type = Unsigned32
_DeployProvLogicalCpIfDefaultsFendDataLinkId_Object = MibTableColumn
deployProvLogicalCpIfDefaultsFendDataLinkId = _DeployProvLogicalCpIfDefaultsFendDataLinkId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 35),
    _DeployProvLogicalCpIfDefaultsFendDataLinkId_Type()
)
deployProvLogicalCpIfDefaultsFendDataLinkId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsFendDataLinkId.setStatus("current")
_DeployProvLogicalCpIfDefaultsNendTeLinkIdUnn_Type = Unsigned32
_DeployProvLogicalCpIfDefaultsNendTeLinkIdUnn_Object = MibTableColumn
deployProvLogicalCpIfDefaultsNendTeLinkIdUnn = _DeployProvLogicalCpIfDefaultsNendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 36),
    _DeployProvLogicalCpIfDefaultsNendTeLinkIdUnn_Type()
)
deployProvLogicalCpIfDefaultsNendTeLinkIdUnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsNendTeLinkIdUnn.setStatus("current")
_DeployProvLogicalCpIfDefaultsFendTeLinkIdUnn_Type = Unsigned32
_DeployProvLogicalCpIfDefaultsFendTeLinkIdUnn_Object = MibTableColumn
deployProvLogicalCpIfDefaultsFendTeLinkIdUnn = _DeployProvLogicalCpIfDefaultsFendTeLinkIdUnn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 37),
    _DeployProvLogicalCpIfDefaultsFendTeLinkIdUnn_Type()
)
deployProvLogicalCpIfDefaultsFendTeLinkIdUnn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsFendTeLinkIdUnn.setStatus("current")
_DeployProvLogicalCpIfDefaultsEncoding_Type = FspR7CpEncode
_DeployProvLogicalCpIfDefaultsEncoding_Object = MibTableColumn
deployProvLogicalCpIfDefaultsEncoding = _DeployProvLogicalCpIfDefaultsEncoding_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 38),
    _DeployProvLogicalCpIfDefaultsEncoding_Type()
)
deployProvLogicalCpIfDefaultsEncoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsEncoding.setStatus("current")
_DeployProvLogicalCpIfDefaultsTunnelAid_Type = EntityIndex
_DeployProvLogicalCpIfDefaultsTunnelAid_Object = MibTableColumn
deployProvLogicalCpIfDefaultsTunnelAid = _DeployProvLogicalCpIfDefaultsTunnelAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 39),
    _DeployProvLogicalCpIfDefaultsTunnelAid_Type()
)
deployProvLogicalCpIfDefaultsTunnelAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsTunnelAid.setStatus("current")
_DeployProvLogicalCpIfDefaultsExtAdvertised_Type = FspR7YesNo
_DeployProvLogicalCpIfDefaultsExtAdvertised_Object = MibTableColumn
deployProvLogicalCpIfDefaultsExtAdvertised = _DeployProvLogicalCpIfDefaultsExtAdvertised_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 40),
    _DeployProvLogicalCpIfDefaultsExtAdvertised_Type()
)
deployProvLogicalCpIfDefaultsExtAdvertised.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsExtAdvertised.setStatus("current")
_DeployProvLogicalCpIfDefaultsVTeType_Type = FspR7CpVTeType
_DeployProvLogicalCpIfDefaultsVTeType_Object = MibTableColumn
deployProvLogicalCpIfDefaultsVTeType = _DeployProvLogicalCpIfDefaultsVTeType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 41),
    _DeployProvLogicalCpIfDefaultsVTeType_Type()
)
deployProvLogicalCpIfDefaultsVTeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsVTeType.setStatus("current")
_DeployProvLogicalCpIfDefaultsVNodeIp_Type = IpAddress
_DeployProvLogicalCpIfDefaultsVNodeIp_Object = MibTableColumn
deployProvLogicalCpIfDefaultsVNodeIp = _DeployProvLogicalCpIfDefaultsVNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 42),
    _DeployProvLogicalCpIfDefaultsVNodeIp_Type()
)
deployProvLogicalCpIfDefaultsVNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsVNodeIp.setStatus("current")
_DeployProvLogicalCpIfDefaultsVNodeTltp_Type = SnmpAdminString
_DeployProvLogicalCpIfDefaultsVNodeTltp_Object = MibTableColumn
deployProvLogicalCpIfDefaultsVNodeTltp = _DeployProvLogicalCpIfDefaultsVNodeTltp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 48, 1, 43),
    _DeployProvLogicalCpIfDefaultsVNodeTltp_Type()
)
deployProvLogicalCpIfDefaultsVNodeTltp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvLogicalCpIfDefaultsVNodeTltp.setStatus("current")
_DeployProvControlPlaneEthTable_Object = MibTable
deployProvControlPlaneEthTable = _DeployProvControlPlaneEthTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneEthTable.setStatus("current")
_DeployProvControlPlaneEthEntry_Object = MibTableRow
deployProvControlPlaneEthEntry = _DeployProvControlPlaneEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1)
)
deployProvControlPlaneEthEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneEthEntry.setStatus("current")
_DeployProvControlPlaneEthRowStatus_Type = RowStatus
_DeployProvControlPlaneEthRowStatus_Object = MibTableColumn
deployProvControlPlaneEthRowStatus = _DeployProvControlPlaneEthRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 1),
    _DeployProvControlPlaneEthRowStatus_Type()
)
deployProvControlPlaneEthRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRowStatus.setStatus("current")
_DeployProvControlPlaneEthCtmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCtmConfigFlag = _DeployProvControlPlaneEthCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 2),
    _DeployProvControlPlaneEthCtmConfigFlag_Type()
)
deployProvControlPlaneEthCtmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCtmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCtmTraceDetail = _DeployProvControlPlaneEthCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 3),
    _DeployProvControlPlaneEthCtmTraceDetail_Type()
)
deployProvControlPlaneEthCtmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCtmSetupTimeout_Type = Unsigned32
_DeployProvControlPlaneEthCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneEthCtmSetupTimeout = _DeployProvControlPlaneEthCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 4),
    _DeployProvControlPlaneEthCtmSetupTimeout_Type()
)
deployProvControlPlaneEthCtmSetupTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneEthCtmShutdownTimeout_Type = Unsigned32
_DeployProvControlPlaneEthCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneEthCtmShutdownTimeout = _DeployProvControlPlaneEthCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 5),
    _DeployProvControlPlaneEthCtmShutdownTimeout_Type()
)
deployProvControlPlaneEthCtmShutdownTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneEthCtmRetryWait_Type = Unsigned32
_DeployProvControlPlaneEthCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneEthCtmRetryWait = _DeployProvControlPlaneEthCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 6),
    _DeployProvControlPlaneEthCtmRetryWait_Type()
)
deployProvControlPlaneEthCtmRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmRetryWait.setUnits("s")
_DeployProvControlPlaneEthCtmRetryWaitMultiplier_Type = Unsigned32
_DeployProvControlPlaneEthCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneEthCtmRetryWaitMultiplier = _DeployProvControlPlaneEthCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 7),
    _DeployProvControlPlaneEthCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneEthCtmRetryWaitMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneEthCtmMaximumRetryWait_Type = Unsigned32
_DeployProvControlPlaneEthCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneEthCtmMaximumRetryWait = _DeployProvControlPlaneEthCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 8),
    _DeployProvControlPlaneEthCtmMaximumRetryWait_Type()
)
deployProvControlPlaneEthCtmMaximumRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneEthCtmMaximumRetryNumber_Type = Unsigned32
_DeployProvControlPlaneEthCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneEthCtmMaximumRetryNumber = _DeployProvControlPlaneEthCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 9),
    _DeployProvControlPlaneEthCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneEthCtmMaximumRetryNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneEthRaConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthRaConfigFlag = _DeployProvControlPlaneEthRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 10),
    _DeployProvControlPlaneEthRaConfigFlag_Type()
)
deployProvControlPlaneEthRaConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRaConfigFlag.setStatus("current")
_DeployProvControlPlaneEthRaTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthRaTraceDetail = _DeployProvControlPlaneEthRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 11),
    _DeployProvControlPlaneEthRaTraceDetail_Type()
)
deployProvControlPlaneEthRaTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRaTraceDetail.setStatus("current")
_DeployProvControlPlaneEthRaAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneEthRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneEthRaAlarmActivationTime = _DeployProvControlPlaneEthRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 12),
    _DeployProvControlPlaneEthRaAlarmActivationTime_Type()
)
deployProvControlPlaneEthRaAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneEthCmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCmConfigFlag = _DeployProvControlPlaneEthCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 13),
    _DeployProvControlPlaneEthCmConfigFlag_Type()
)
deployProvControlPlaneEthCmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCmTraceDetail = _DeployProvControlPlaneEthCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 14),
    _DeployProvControlPlaneEthCmTraceDetail_Type()
)
deployProvControlPlaneEthCmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCmAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneEthCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneEthCmAlarmActivationTime = _DeployProvControlPlaneEthCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 15),
    _DeployProvControlPlaneEthCmAlarmActivationTime_Type()
)
deployProvControlPlaneEthCmAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneEthCmFisFrsTimeout_Type = Unsigned32
_DeployProvControlPlaneEthCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneEthCmFisFrsTimeout = _DeployProvControlPlaneEthCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 16),
    _DeployProvControlPlaneEthCmFisFrsTimeout_Type()
)
deployProvControlPlaneEthCmFisFrsTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneEthCmCrankBackTimeout_Type = Unsigned32
_DeployProvControlPlaneEthCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneEthCmCrankBackTimeout = _DeployProvControlPlaneEthCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 17),
    _DeployProvControlPlaneEthCmCrankBackTimeout_Type()
)
deployProvControlPlaneEthCmCrankBackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneEthCdbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCdbConfigFlag = _DeployProvControlPlaneEthCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 18),
    _DeployProvControlPlaneEthCdbConfigFlag_Type()
)
deployProvControlPlaneEthCdbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCdbDetail_Type = Unsigned32
_DeployProvControlPlaneEthCdbDetail_Object = MibTableColumn
deployProvControlPlaneEthCdbDetail = _DeployProvControlPlaneEthCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 19),
    _DeployProvControlPlaneEthCdbDetail_Type()
)
deployProvControlPlaneEthCdbDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCdbDetail.setStatus("current")
_DeployProvControlPlaneEthCdbMaxSize_Type = Unsigned32
_DeployProvControlPlaneEthCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneEthCdbMaxSize = _DeployProvControlPlaneEthCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 20),
    _DeployProvControlPlaneEthCdbMaxSize_Type()
)
deployProvControlPlaneEthCdbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCdbMaxSize.setStatus("current")
_DeployProvControlPlaneEthRsvpMaxExpRestartTime_Type = Counter64String
_DeployProvControlPlaneEthRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneEthRsvpMaxExpRestartTime = _DeployProvControlPlaneEthRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 21),
    _DeployProvControlPlaneEthRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneEthRsvpMaxExpRestartTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneEthRsvpMaxExpRecoveryTime_Type = Unsigned32
_DeployProvControlPlaneEthRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneEthRsvpMaxExpRecoveryTime = _DeployProvControlPlaneEthRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 22),
    _DeployProvControlPlaneEthRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneEthRsvpMaxExpRecoveryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneEthRsvpConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthRsvpConfigFlag = _DeployProvControlPlaneEthRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 23),
    _DeployProvControlPlaneEthRsvpConfigFlag_Type()
)
deployProvControlPlaneEthRsvpConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneEthTedbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthTedbConfigFlag = _DeployProvControlPlaneEthTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 24),
    _DeployProvControlPlaneEthTedbConfigFlag_Type()
)
deployProvControlPlaneEthTedbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneEthTedbTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthTedbTraceDetail = _DeployProvControlPlaneEthTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 25),
    _DeployProvControlPlaneEthTedbTraceDetail_Type()
)
deployProvControlPlaneEthTedbTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneEthTedbMaxSize_Type = Unsigned32
_DeployProvControlPlaneEthTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneEthTedbMaxSize = _DeployProvControlPlaneEthTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 26),
    _DeployProvControlPlaneEthTedbMaxSize_Type()
)
deployProvControlPlaneEthTedbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthTedbMaxSize.setStatus("current")
_DeployProvControlPlaneEthTedbRouterId_Type = IpAddress
_DeployProvControlPlaneEthTedbRouterId_Object = MibTableColumn
deployProvControlPlaneEthTedbRouterId = _DeployProvControlPlaneEthTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 27),
    _DeployProvControlPlaneEthTedbRouterId_Type()
)
deployProvControlPlaneEthTedbRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthTedbRouterId.setStatus("current")
_DeployProvControlPlaneEthTedbMinAdvertWait_Type = Unsigned32
_DeployProvControlPlaneEthTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneEthTedbMinAdvertWait = _DeployProvControlPlaneEthTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 28),
    _DeployProvControlPlaneEthTedbMinAdvertWait_Type()
)
deployProvControlPlaneEthTedbMinAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneEthNaasConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthNaasConfigFlag = _DeployProvControlPlaneEthNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 29),
    _DeployProvControlPlaneEthNaasConfigFlag_Type()
)
deployProvControlPlaneEthNaasConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneEthNaasTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthNaasTraceDetail = _DeployProvControlPlaneEthNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 30),
    _DeployProvControlPlaneEthNaasTraceDetail_Type()
)
deployProvControlPlaneEthNaasTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneEthNaasMaxSize_Type = Unsigned32
_DeployProvControlPlaneEthNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneEthNaasMaxSize = _DeployProvControlPlaneEthNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 31),
    _DeployProvControlPlaneEthNaasMaxSize_Type()
)
deployProvControlPlaneEthNaasMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthNaasMaxSize.setStatus("current")
_DeployProvControlPlaneEthNaasAdvertWait_Type = Unsigned32
_DeployProvControlPlaneEthNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneEthNaasAdvertWait = _DeployProvControlPlaneEthNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 32),
    _DeployProvControlPlaneEthNaasAdvertWait_Type()
)
deployProvControlPlaneEthNaasAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneEthPcConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthPcConfigFlag = _DeployProvControlPlaneEthPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 33),
    _DeployProvControlPlaneEthPcConfigFlag_Type()
)
deployProvControlPlaneEthPcConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthPcConfigFlag.setStatus("current")
_DeployProvControlPlaneEthPcTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthPcTraceDetail = _DeployProvControlPlaneEthPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 34),
    _DeployProvControlPlaneEthPcTraceDetail_Type()
)
deployProvControlPlaneEthPcTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthPcTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCdConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCdConfigFlag = _DeployProvControlPlaneEthCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 35),
    _DeployProvControlPlaneEthCdConfigFlag_Type()
)
deployProvControlPlaneEthCdConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCdConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCdTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCdTraceDetail = _DeployProvControlPlaneEthCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 36),
    _DeployProvControlPlaneEthCdTraceDetail_Type()
)
deployProvControlPlaneEthCdTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCdTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCdResyncTimeout_Type = Unsigned32
_DeployProvControlPlaneEthCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneEthCdResyncTimeout = _DeployProvControlPlaneEthCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 37),
    _DeployProvControlPlaneEthCdResyncTimeout_Type()
)
deployProvControlPlaneEthCdResyncTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneEthRmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthRmConfigFlag = _DeployProvControlPlaneEthRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 38),
    _DeployProvControlPlaneEthRmConfigFlag_Type()
)
deployProvControlPlaneEthRmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthRmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthRmTraceDetail = _DeployProvControlPlaneEthRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 39),
    _DeployProvControlPlaneEthRmTraceDetail_Type()
)
deployProvControlPlaneEthRmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthRmTraceTarget_Type = Unsigned32
_DeployProvControlPlaneEthRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneEthRmTraceTarget = _DeployProvControlPlaneEthRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 61, 1, 40),
    _DeployProvControlPlaneEthRmTraceTarget_Type()
)
deployProvControlPlaneEthRmTraceTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthRmTraceTarget.setStatus("current")
_DeployProvControlPlaneEthCapTable_Object = MibTable
deployProvControlPlaneEthCapTable = _DeployProvControlPlaneEthCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapTable.setStatus("current")
_DeployProvControlPlaneEthCapEntry_Object = MibTableRow
deployProvControlPlaneEthCapEntry = _DeployProvControlPlaneEthCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1)
)
deployProvControlPlaneEthCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapEntry.setStatus("current")
_DeployProvControlPlaneEthCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvControlPlaneEthCapRowStatus_Object = MibTableColumn
deployProvControlPlaneEthCapRowStatus = _DeployProvControlPlaneEthCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 1),
    _DeployProvControlPlaneEthCapRowStatus_Type()
)
deployProvControlPlaneEthCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRowStatus.setStatus("current")
_DeployProvControlPlaneEthCapCtmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapCtmConfigFlag = _DeployProvControlPlaneEthCapCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 2),
    _DeployProvControlPlaneEthCapCtmConfigFlag_Type()
)
deployProvControlPlaneEthCapCtmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapCtmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapCtmTraceDetail = _DeployProvControlPlaneEthCapCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 3),
    _DeployProvControlPlaneEthCapCtmTraceDetail_Type()
)
deployProvControlPlaneEthCapCtmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapCtmSetupTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneEthCapCtmSetupTimeout = _DeployProvControlPlaneEthCapCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 4),
    _DeployProvControlPlaneEthCapCtmSetupTimeout_Type()
)
deployProvControlPlaneEthCapCtmSetupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneEthCapCtmShutdownTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneEthCapCtmShutdownTimeout = _DeployProvControlPlaneEthCapCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 5),
    _DeployProvControlPlaneEthCapCtmShutdownTimeout_Type()
)
deployProvControlPlaneEthCapCtmShutdownTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneEthCapCtmRetryWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneEthCapCtmRetryWait = _DeployProvControlPlaneEthCapCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 6),
    _DeployProvControlPlaneEthCapCtmRetryWait_Type()
)
deployProvControlPlaneEthCapCtmRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmRetryWait.setUnits("s")
_DeployProvControlPlaneEthCapCtmRetryWaitMultiplier_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneEthCapCtmRetryWaitMultiplier = _DeployProvControlPlaneEthCapCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 7),
    _DeployProvControlPlaneEthCapCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneEthCapCtmRetryWaitMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneEthCapCtmMaximumRetryWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneEthCapCtmMaximumRetryWait = _DeployProvControlPlaneEthCapCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 8),
    _DeployProvControlPlaneEthCapCtmMaximumRetryWait_Type()
)
deployProvControlPlaneEthCapCtmMaximumRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneEthCapCtmMaximumRetryNumber_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneEthCapCtmMaximumRetryNumber = _DeployProvControlPlaneEthCapCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 9),
    _DeployProvControlPlaneEthCapCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneEthCapCtmMaximumRetryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneEthCapRaConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapRaConfigFlag = _DeployProvControlPlaneEthCapRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 10),
    _DeployProvControlPlaneEthCapRaConfigFlag_Type()
)
deployProvControlPlaneEthCapRaConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRaConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapRaTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapRaTraceDetail = _DeployProvControlPlaneEthCapRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 11),
    _DeployProvControlPlaneEthCapRaTraceDetail_Type()
)
deployProvControlPlaneEthCapRaTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRaTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapRaAlarmActivationTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneEthCapRaAlarmActivationTime = _DeployProvControlPlaneEthCapRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 12),
    _DeployProvControlPlaneEthCapRaAlarmActivationTime_Type()
)
deployProvControlPlaneEthCapRaAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneEthCapCmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapCmConfigFlag = _DeployProvControlPlaneEthCapCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 13),
    _DeployProvControlPlaneEthCapCmConfigFlag_Type()
)
deployProvControlPlaneEthCapCmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapCmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapCmTraceDetail = _DeployProvControlPlaneEthCapCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 14),
    _DeployProvControlPlaneEthCapCmTraceDetail_Type()
)
deployProvControlPlaneEthCapCmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapCmAlarmActivationTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneEthCapCmAlarmActivationTime = _DeployProvControlPlaneEthCapCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 15),
    _DeployProvControlPlaneEthCapCmAlarmActivationTime_Type()
)
deployProvControlPlaneEthCapCmAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneEthCapCmFisFrsTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneEthCapCmFisFrsTimeout = _DeployProvControlPlaneEthCapCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 16),
    _DeployProvControlPlaneEthCapCmFisFrsTimeout_Type()
)
deployProvControlPlaneEthCapCmFisFrsTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneEthCapCmCrankBackTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneEthCapCmCrankBackTimeout = _DeployProvControlPlaneEthCapCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 17),
    _DeployProvControlPlaneEthCapCmCrankBackTimeout_Type()
)
deployProvControlPlaneEthCapCmCrankBackTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneEthCapCdbConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapCdbConfigFlag = _DeployProvControlPlaneEthCapCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 18),
    _DeployProvControlPlaneEthCapCdbConfigFlag_Type()
)
deployProvControlPlaneEthCapCdbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapCdbDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCdbDetail_Object = MibTableColumn
deployProvControlPlaneEthCapCdbDetail = _DeployProvControlPlaneEthCapCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 19),
    _DeployProvControlPlaneEthCapCdbDetail_Type()
)
deployProvControlPlaneEthCapCdbDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCdbDetail.setStatus("current")
_DeployProvControlPlaneEthCapCdbMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneEthCapCdbMaxSize = _DeployProvControlPlaneEthCapCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 20),
    _DeployProvControlPlaneEthCapCdbMaxSize_Type()
)
deployProvControlPlaneEthCapCdbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCdbMaxSize.setStatus("current")
_DeployProvControlPlaneEthCapRsvpMaxExpRestartTime_Type = Counter64StringCaps
_DeployProvControlPlaneEthCapRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneEthCapRsvpMaxExpRestartTime = _DeployProvControlPlaneEthCapRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 21),
    _DeployProvControlPlaneEthCapRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneEthCapRsvpMaxExpRestartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneEthCapRsvpMaxExpRecoveryTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneEthCapRsvpMaxExpRecoveryTime = _DeployProvControlPlaneEthCapRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 22),
    _DeployProvControlPlaneEthCapRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneEthCapRsvpMaxExpRecoveryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneEthCapRsvpConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapRsvpConfigFlag = _DeployProvControlPlaneEthCapRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 23),
    _DeployProvControlPlaneEthCapRsvpConfigFlag_Type()
)
deployProvControlPlaneEthCapRsvpConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapTedbConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapTedbConfigFlag = _DeployProvControlPlaneEthCapTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 24),
    _DeployProvControlPlaneEthCapTedbConfigFlag_Type()
)
deployProvControlPlaneEthCapTedbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapTedbTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapTedbTraceDetail = _DeployProvControlPlaneEthCapTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 25),
    _DeployProvControlPlaneEthCapTedbTraceDetail_Type()
)
deployProvControlPlaneEthCapTedbTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapTedbMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneEthCapTedbMaxSize = _DeployProvControlPlaneEthCapTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 26),
    _DeployProvControlPlaneEthCapTedbMaxSize_Type()
)
deployProvControlPlaneEthCapTedbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapTedbMaxSize.setStatus("current")
_DeployProvControlPlaneEthCapTedbRouterId_Type = FspR7YesNo
_DeployProvControlPlaneEthCapTedbRouterId_Object = MibTableColumn
deployProvControlPlaneEthCapTedbRouterId = _DeployProvControlPlaneEthCapTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 27),
    _DeployProvControlPlaneEthCapTedbRouterId_Type()
)
deployProvControlPlaneEthCapTedbRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapTedbRouterId.setStatus("current")
_DeployProvControlPlaneEthCapTedbMinAdvertWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneEthCapTedbMinAdvertWait = _DeployProvControlPlaneEthCapTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 28),
    _DeployProvControlPlaneEthCapTedbMinAdvertWait_Type()
)
deployProvControlPlaneEthCapTedbMinAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneEthCapNaasConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapNaasConfigFlag = _DeployProvControlPlaneEthCapNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 29),
    _DeployProvControlPlaneEthCapNaasConfigFlag_Type()
)
deployProvControlPlaneEthCapNaasConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapNaasTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapNaasTraceDetail = _DeployProvControlPlaneEthCapNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 30),
    _DeployProvControlPlaneEthCapNaasTraceDetail_Type()
)
deployProvControlPlaneEthCapNaasTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapNaasMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneEthCapNaasMaxSize = _DeployProvControlPlaneEthCapNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 31),
    _DeployProvControlPlaneEthCapNaasMaxSize_Type()
)
deployProvControlPlaneEthCapNaasMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapNaasMaxSize.setStatus("current")
_DeployProvControlPlaneEthCapNaasAdvertWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneEthCapNaasAdvertWait = _DeployProvControlPlaneEthCapNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 32),
    _DeployProvControlPlaneEthCapNaasAdvertWait_Type()
)
deployProvControlPlaneEthCapNaasAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneEthCapPcConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapPcConfigFlag = _DeployProvControlPlaneEthCapPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 33),
    _DeployProvControlPlaneEthCapPcConfigFlag_Type()
)
deployProvControlPlaneEthCapPcConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapPcConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapPcTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapPcTraceDetail = _DeployProvControlPlaneEthCapPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 34),
    _DeployProvControlPlaneEthCapPcTraceDetail_Type()
)
deployProvControlPlaneEthCapPcTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapPcTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapCdConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapCdConfigFlag = _DeployProvControlPlaneEthCapCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 35),
    _DeployProvControlPlaneEthCapCdConfigFlag_Type()
)
deployProvControlPlaneEthCapCdConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCdConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapCdTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapCdTraceDetail = _DeployProvControlPlaneEthCapCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 36),
    _DeployProvControlPlaneEthCapCdTraceDetail_Type()
)
deployProvControlPlaneEthCapCdTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCdTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapCdResyncTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneEthCapCdResyncTimeout = _DeployProvControlPlaneEthCapCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 37),
    _DeployProvControlPlaneEthCapCdResyncTimeout_Type()
)
deployProvControlPlaneEthCapCdResyncTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneEthCapRmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthCapRmConfigFlag = _DeployProvControlPlaneEthCapRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 38),
    _DeployProvControlPlaneEthCapRmConfigFlag_Type()
)
deployProvControlPlaneEthCapRmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthCapRmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthCapRmTraceDetail = _DeployProvControlPlaneEthCapRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 39),
    _DeployProvControlPlaneEthCapRmTraceDetail_Type()
)
deployProvControlPlaneEthCapRmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthCapRmTraceTarget_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneEthCapRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneEthCapRmTraceTarget = _DeployProvControlPlaneEthCapRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 62, 1, 40),
    _DeployProvControlPlaneEthCapRmTraceTarget_Type()
)
deployProvControlPlaneEthCapRmTraceTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthCapRmTraceTarget.setStatus("current")
_DeployProvControlPlaneEthDefaultsTable_Object = MibTable
deployProvControlPlaneEthDefaultsTable = _DeployProvControlPlaneEthDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsTable.setStatus("current")
_DeployProvControlPlaneEthDefaultsEntry_Object = MibTableRow
deployProvControlPlaneEthDefaultsEntry = _DeployProvControlPlaneEthDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1)
)
deployProvControlPlaneEthDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsEntry.setStatus("current")
_DeployProvControlPlaneEthDefaultsRowStatus_Type = RowStatus
_DeployProvControlPlaneEthDefaultsRowStatus_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRowStatus = _DeployProvControlPlaneEthDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 1),
    _DeployProvControlPlaneEthDefaultsRowStatus_Type()
)
deployProvControlPlaneEthDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRowStatus.setStatus("current")
_DeployProvControlPlaneEthDefaultsCtmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmConfigFlag = _DeployProvControlPlaneEthDefaultsCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 2),
    _DeployProvControlPlaneEthDefaultsCtmConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsCtmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsCtmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmTraceDetail = _DeployProvControlPlaneEthDefaultsCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 3),
    _DeployProvControlPlaneEthDefaultsCtmTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsCtmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsCtmSetupTimeout_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmSetupTimeout = _DeployProvControlPlaneEthDefaultsCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 4),
    _DeployProvControlPlaneEthDefaultsCtmSetupTimeout_Type()
)
deployProvControlPlaneEthDefaultsCtmSetupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneEthDefaultsCtmShutdownTimeout_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmShutdownTimeout = _DeployProvControlPlaneEthDefaultsCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 5),
    _DeployProvControlPlaneEthDefaultsCtmShutdownTimeout_Type()
)
deployProvControlPlaneEthDefaultsCtmShutdownTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneEthDefaultsCtmRetryWait_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmRetryWait = _DeployProvControlPlaneEthDefaultsCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 6),
    _DeployProvControlPlaneEthDefaultsCtmRetryWait_Type()
)
deployProvControlPlaneEthDefaultsCtmRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmRetryWait.setUnits("s")
_DeployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier = _DeployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 7),
    _DeployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneEthDefaultsCtmMaximumRetryWait_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmMaximumRetryWait = _DeployProvControlPlaneEthDefaultsCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 8),
    _DeployProvControlPlaneEthDefaultsCtmMaximumRetryWait_Type()
)
deployProvControlPlaneEthDefaultsCtmMaximumRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneEthDefaultsCtmMaximumRetryNumber_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCtmMaximumRetryNumber = _DeployProvControlPlaneEthDefaultsCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 9),
    _DeployProvControlPlaneEthDefaultsCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneEthDefaultsCtmMaximumRetryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneEthDefaultsRaConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRaConfigFlag = _DeployProvControlPlaneEthDefaultsRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 10),
    _DeployProvControlPlaneEthDefaultsRaConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsRaConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRaConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsRaTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRaTraceDetail = _DeployProvControlPlaneEthDefaultsRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 11),
    _DeployProvControlPlaneEthDefaultsRaTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsRaTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRaTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsRaAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRaAlarmActivationTime = _DeployProvControlPlaneEthDefaultsRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 12),
    _DeployProvControlPlaneEthDefaultsRaAlarmActivationTime_Type()
)
deployProvControlPlaneEthDefaultsRaAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneEthDefaultsCmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCmConfigFlag = _DeployProvControlPlaneEthDefaultsCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 13),
    _DeployProvControlPlaneEthDefaultsCmConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsCmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsCmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCmTraceDetail = _DeployProvControlPlaneEthDefaultsCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 14),
    _DeployProvControlPlaneEthDefaultsCmTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsCmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsCmAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCmAlarmActivationTime = _DeployProvControlPlaneEthDefaultsCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 15),
    _DeployProvControlPlaneEthDefaultsCmAlarmActivationTime_Type()
)
deployProvControlPlaneEthDefaultsCmAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneEthDefaultsCmFisFrsTimeout_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCmFisFrsTimeout = _DeployProvControlPlaneEthDefaultsCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 16),
    _DeployProvControlPlaneEthDefaultsCmFisFrsTimeout_Type()
)
deployProvControlPlaneEthDefaultsCmFisFrsTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneEthDefaultsCmCrankBackTimeout_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCmCrankBackTimeout = _DeployProvControlPlaneEthDefaultsCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 17),
    _DeployProvControlPlaneEthDefaultsCmCrankBackTimeout_Type()
)
deployProvControlPlaneEthDefaultsCmCrankBackTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneEthDefaultsCdbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCdbConfigFlag = _DeployProvControlPlaneEthDefaultsCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 18),
    _DeployProvControlPlaneEthDefaultsCdbConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsCdbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsCdbDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCdbDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCdbDetail = _DeployProvControlPlaneEthDefaultsCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 19),
    _DeployProvControlPlaneEthDefaultsCdbDetail_Type()
)
deployProvControlPlaneEthDefaultsCdbDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCdbDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsCdbMaxSize_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCdbMaxSize = _DeployProvControlPlaneEthDefaultsCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 20),
    _DeployProvControlPlaneEthDefaultsCdbMaxSize_Type()
)
deployProvControlPlaneEthDefaultsCdbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCdbMaxSize.setStatus("current")
_DeployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime_Type = Counter64String
_DeployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime = _DeployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 21),
    _DeployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime = _DeployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 22),
    _DeployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneEthDefaultsRsvpConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRsvpConfigFlag = _DeployProvControlPlaneEthDefaultsRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 23),
    _DeployProvControlPlaneEthDefaultsRsvpConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsRsvpConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsTedbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsTedbConfigFlag = _DeployProvControlPlaneEthDefaultsTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 24),
    _DeployProvControlPlaneEthDefaultsTedbConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsTedbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsTedbTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsTedbTraceDetail = _DeployProvControlPlaneEthDefaultsTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 25),
    _DeployProvControlPlaneEthDefaultsTedbTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsTedbTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsTedbMaxSize_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneEthDefaultsTedbMaxSize = _DeployProvControlPlaneEthDefaultsTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 26),
    _DeployProvControlPlaneEthDefaultsTedbMaxSize_Type()
)
deployProvControlPlaneEthDefaultsTedbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsTedbMaxSize.setStatus("current")
_DeployProvControlPlaneEthDefaultsTedbRouterId_Type = IpAddress
_DeployProvControlPlaneEthDefaultsTedbRouterId_Object = MibTableColumn
deployProvControlPlaneEthDefaultsTedbRouterId = _DeployProvControlPlaneEthDefaultsTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 27),
    _DeployProvControlPlaneEthDefaultsTedbRouterId_Type()
)
deployProvControlPlaneEthDefaultsTedbRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsTedbRouterId.setStatus("current")
_DeployProvControlPlaneEthDefaultsTedbMinAdvertWait_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneEthDefaultsTedbMinAdvertWait = _DeployProvControlPlaneEthDefaultsTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 28),
    _DeployProvControlPlaneEthDefaultsTedbMinAdvertWait_Type()
)
deployProvControlPlaneEthDefaultsTedbMinAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneEthDefaultsNaasConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsNaasConfigFlag = _DeployProvControlPlaneEthDefaultsNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 29),
    _DeployProvControlPlaneEthDefaultsNaasConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsNaasConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsNaasTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsNaasTraceDetail = _DeployProvControlPlaneEthDefaultsNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 30),
    _DeployProvControlPlaneEthDefaultsNaasTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsNaasTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsNaasMaxSize_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneEthDefaultsNaasMaxSize = _DeployProvControlPlaneEthDefaultsNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 31),
    _DeployProvControlPlaneEthDefaultsNaasMaxSize_Type()
)
deployProvControlPlaneEthDefaultsNaasMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsNaasMaxSize.setStatus("current")
_DeployProvControlPlaneEthDefaultsNaasAdvertWait_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneEthDefaultsNaasAdvertWait = _DeployProvControlPlaneEthDefaultsNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 32),
    _DeployProvControlPlaneEthDefaultsNaasAdvertWait_Type()
)
deployProvControlPlaneEthDefaultsNaasAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneEthDefaultsPcConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsPcConfigFlag = _DeployProvControlPlaneEthDefaultsPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 33),
    _DeployProvControlPlaneEthDefaultsPcConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsPcConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsPcConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsPcTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsPcTraceDetail = _DeployProvControlPlaneEthDefaultsPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 34),
    _DeployProvControlPlaneEthDefaultsPcTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsPcTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsPcTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsCdConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCdConfigFlag = _DeployProvControlPlaneEthDefaultsCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 35),
    _DeployProvControlPlaneEthDefaultsCdConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsCdConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCdConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsCdTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCdTraceDetail = _DeployProvControlPlaneEthDefaultsCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 36),
    _DeployProvControlPlaneEthDefaultsCdTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsCdTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCdTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsCdResyncTimeout_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneEthDefaultsCdResyncTimeout = _DeployProvControlPlaneEthDefaultsCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 37),
    _DeployProvControlPlaneEthDefaultsCdResyncTimeout_Type()
)
deployProvControlPlaneEthDefaultsCdResyncTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneEthDefaultsRmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRmConfigFlag = _DeployProvControlPlaneEthDefaultsRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 38),
    _DeployProvControlPlaneEthDefaultsRmConfigFlag_Type()
)
deployProvControlPlaneEthDefaultsRmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRmConfigFlag.setStatus("current")
_DeployProvControlPlaneEthDefaultsRmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRmTraceDetail = _DeployProvControlPlaneEthDefaultsRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 39),
    _DeployProvControlPlaneEthDefaultsRmTraceDetail_Type()
)
deployProvControlPlaneEthDefaultsRmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRmTraceDetail.setStatus("current")
_DeployProvControlPlaneEthDefaultsRmTraceTarget_Type = Unsigned32
_DeployProvControlPlaneEthDefaultsRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneEthDefaultsRmTraceTarget = _DeployProvControlPlaneEthDefaultsRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 63, 1, 40),
    _DeployProvControlPlaneEthDefaultsRmTraceTarget_Type()
)
deployProvControlPlaneEthDefaultsRmTraceTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneEthDefaultsRmTraceTarget.setStatus("current")
_DeployProvTunnelEthTable_Object = MibTable
deployProvTunnelEthTable = _DeployProvTunnelEthTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64)
)
if mibBuilder.loadTexts:
    deployProvTunnelEthTable.setStatus("current")
_DeployProvTunnelEthEntry_Object = MibTableRow
deployProvTunnelEthEntry = _DeployProvTunnelEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1)
)
deployProvTunnelEthEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelEthEntry.setStatus("current")
_DeployProvTunnelEthRowStatus_Type = RowStatus
_DeployProvTunnelEthRowStatus_Object = MibTableColumn
deployProvTunnelEthRowStatus = _DeployProvTunnelEthRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 1),
    _DeployProvTunnelEthRowStatus_Type()
)
deployProvTunnelEthRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthRowStatus.setStatus("current")
_DeployProvTunnelEthTunnelId_Type = SnmpAdminString
_DeployProvTunnelEthTunnelId_Object = MibTableColumn
deployProvTunnelEthTunnelId = _DeployProvTunnelEthTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 2),
    _DeployProvTunnelEthTunnelId_Type()
)
deployProvTunnelEthTunnelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthTunnelId.setStatus("current")
_DeployProvTunnelEthTunnelNo_Type = Unsigned32
_DeployProvTunnelEthTunnelNo_Object = MibTableColumn
deployProvTunnelEthTunnelNo = _DeployProvTunnelEthTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 3),
    _DeployProvTunnelEthTunnelNo_Type()
)
deployProvTunnelEthTunnelNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthTunnelNo.setStatus("current")
_DeployProvTunnelEthAlias_Type = SnmpAdminString
_DeployProvTunnelEthAlias_Object = MibTableColumn
deployProvTunnelEthAlias = _DeployProvTunnelEthAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 4),
    _DeployProvTunnelEthAlias_Type()
)
deployProvTunnelEthAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthAlias.setStatus("current")
_DeployProvTunnelEthTunnelType_Type = FspR7CpTunnelType
_DeployProvTunnelEthTunnelType_Object = MibTableColumn
deployProvTunnelEthTunnelType = _DeployProvTunnelEthTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 5),
    _DeployProvTunnelEthTunnelType_Type()
)
deployProvTunnelEthTunnelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthTunnelType.setStatus("current")
_DeployProvTunnelEthToTid_Type = SnmpAdminString
_DeployProvTunnelEthToTid_Object = MibTableColumn
deployProvTunnelEthToTid = _DeployProvTunnelEthToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 6),
    _DeployProvTunnelEthToTid_Type()
)
deployProvTunnelEthToTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthToTid.setStatus("current")
_DeployProvTunnelEthToNodeIp_Type = IpAddress
_DeployProvTunnelEthToNodeIp_Object = MibTableColumn
deployProvTunnelEthToNodeIp = _DeployProvTunnelEthToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 7),
    _DeployProvTunnelEthToNodeIp_Type()
)
deployProvTunnelEthToNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthToNodeIp.setStatus("current")
_DeployProvTunnelEthFromAid_Type = EntityIndex
_DeployProvTunnelEthFromAid_Object = MibTableColumn
deployProvTunnelEthFromAid = _DeployProvTunnelEthFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 8),
    _DeployProvTunnelEthFromAid_Type()
)
deployProvTunnelEthFromAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthFromAid.setStatus("current")
_DeployProvTunnelEthToAid_Type = EntityIndex
_DeployProvTunnelEthToAid_Object = MibTableColumn
deployProvTunnelEthToAid = _DeployProvTunnelEthToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 9),
    _DeployProvTunnelEthToAid_Type()
)
deployProvTunnelEthToAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthToAid.setStatus("current")
_DeployProvTunnelEthConnectionDirection_Type = FspR7Conn
_DeployProvTunnelEthConnectionDirection_Object = MibTableColumn
deployProvTunnelEthConnectionDirection = _DeployProvTunnelEthConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 10),
    _DeployProvTunnelEthConnectionDirection_Type()
)
deployProvTunnelEthConnectionDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthConnectionDirection.setStatus("current")
_DeployProvTunnelEthFacilityType_Type = FspR7InterfaceType
_DeployProvTunnelEthFacilityType_Object = MibTableColumn
deployProvTunnelEthFacilityType = _DeployProvTunnelEthFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 11),
    _DeployProvTunnelEthFacilityType_Type()
)
deployProvTunnelEthFacilityType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthFacilityType.setStatus("current")
_DeployProvTunnelEthProvisionedPaths_Type = SnmpAdminString
_DeployProvTunnelEthProvisionedPaths_Object = MibTableColumn
deployProvTunnelEthProvisionedPaths = _DeployProvTunnelEthProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 12),
    _DeployProvTunnelEthProvisionedPaths_Type()
)
deployProvTunnelEthProvisionedPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthProvisionedPaths.setStatus("current")
_DeployProvTunnelEthPin_Type = FspR7CpPinning
_DeployProvTunnelEthPin_Object = MibTableColumn
deployProvTunnelEthPin = _DeployProvTunnelEthPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 13),
    _DeployProvTunnelEthPin_Type()
)
deployProvTunnelEthPin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthPin.setStatus("current")
_DeployProvTunnelEthCirRcv_Type = Unsigned32
_DeployProvTunnelEthCirRcv_Object = MibTableColumn
deployProvTunnelEthCirRcv = _DeployProvTunnelEthCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 14),
    _DeployProvTunnelEthCirRcv_Type()
)
deployProvTunnelEthCirRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvTunnelEthCirRcv.setUnits("Mbit/s")


class _DeployProvTunnelEthCbsRcv_Type(Unsigned32):
    """Custom type deployProvTunnelEthCbsRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26214400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvTunnelEthCbsRcv_Type.__name__ = "Unsigned32"
_DeployProvTunnelEthCbsRcv_Object = MibTableColumn
deployProvTunnelEthCbsRcv = _DeployProvTunnelEthCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 15),
    _DeployProvTunnelEthCbsRcv_Type()
)
deployProvTunnelEthCbsRcv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvTunnelEthCbsRcv.setUnits("bytes")
_DeployProvTunnelEthProtectionType_Type = FspR7CpProtectionType
_DeployProvTunnelEthProtectionType_Object = MibTableColumn
deployProvTunnelEthProtectionType = _DeployProvTunnelEthProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 16),
    _DeployProvTunnelEthProtectionType_Type()
)
deployProvTunnelEthProtectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthProtectionType.setStatus("current")
_DeployProvTunnelEthRestorationType_Type = FspR7CpRestorationType
_DeployProvTunnelEthRestorationType_Object = MibTableColumn
deployProvTunnelEthRestorationType = _DeployProvTunnelEthRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 17),
    _DeployProvTunnelEthRestorationType_Type()
)
deployProvTunnelEthRestorationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthRestorationType.setStatus("current")
_DeployProvTunnelEthMonitorEntities_Type = FspR7EnableDisable
_DeployProvTunnelEthMonitorEntities_Object = MibTableColumn
deployProvTunnelEthMonitorEntities = _DeployProvTunnelEthMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 18),
    _DeployProvTunnelEthMonitorEntities_Type()
)
deployProvTunnelEthMonitorEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthMonitorEntities.setStatus("current")
_DeployProvTunnelEthTunnelScope_Type = FspR7CpTunnelScope
_DeployProvTunnelEthTunnelScope_Object = MibTableColumn
deployProvTunnelEthTunnelScope = _DeployProvTunnelEthTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 19),
    _DeployProvTunnelEthTunnelScope_Type()
)
deployProvTunnelEthTunnelScope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthTunnelScope.setStatus("current")
_DeployProvTunnelEthLayer_Type = FspR7PacketsLayer
_DeployProvTunnelEthLayer_Object = MibTableColumn
deployProvTunnelEthLayer = _DeployProvTunnelEthLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 20),
    _DeployProvTunnelEthLayer_Type()
)
deployProvTunnelEthLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthLayer.setStatus("current")
_DeployProvTunnelEthOifUni_Type = FspR7YesNo
_DeployProvTunnelEthOifUni_Object = MibTableColumn
deployProvTunnelEthOifUni = _DeployProvTunnelEthOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 21),
    _DeployProvTunnelEthOifUni_Type()
)
deployProvTunnelEthOifUni.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthOifUni.setStatus("current")
_DeployProvTunnelEthFromAidString_Type = SnmpAdminString
_DeployProvTunnelEthFromAidString_Object = MibTableColumn
deployProvTunnelEthFromAidString = _DeployProvTunnelEthFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 22),
    _DeployProvTunnelEthFromAidString_Type()
)
deployProvTunnelEthFromAidString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthFromAidString.setStatus("current")
_DeployProvTunnelEthToAidString_Type = SnmpAdminString
_DeployProvTunnelEthToAidString_Object = MibTableColumn
deployProvTunnelEthToAidString = _DeployProvTunnelEthToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 64, 1, 23),
    _DeployProvTunnelEthToAidString_Type()
)
deployProvTunnelEthToAidString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelEthToAidString.setStatus("current")
_DeployProvTunnelEthCapTable_Object = MibTable
deployProvTunnelEthCapTable = _DeployProvTunnelEthCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65)
)
if mibBuilder.loadTexts:
    deployProvTunnelEthCapTable.setStatus("current")
_DeployProvTunnelEthCapEntry_Object = MibTableRow
deployProvTunnelEthCapEntry = _DeployProvTunnelEthCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1)
)
deployProvTunnelEthCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelEthCapEntry.setStatus("current")
_DeployProvTunnelEthCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvTunnelEthCapRowStatus_Object = MibTableColumn
deployProvTunnelEthCapRowStatus = _DeployProvTunnelEthCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 1),
    _DeployProvTunnelEthCapRowStatus_Type()
)
deployProvTunnelEthCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapRowStatus.setStatus("current")
_DeployProvTunnelEthCapTunnelId_Type = Integer32
_DeployProvTunnelEthCapTunnelId_Object = MibTableColumn
deployProvTunnelEthCapTunnelId = _DeployProvTunnelEthCapTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 2),
    _DeployProvTunnelEthCapTunnelId_Type()
)
deployProvTunnelEthCapTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapTunnelId.setStatus("current")
_DeployProvTunnelEthCapTunnelNo_Type = FspR7Unsigned32Caps
_DeployProvTunnelEthCapTunnelNo_Object = MibTableColumn
deployProvTunnelEthCapTunnelNo = _DeployProvTunnelEthCapTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 3),
    _DeployProvTunnelEthCapTunnelNo_Type()
)
deployProvTunnelEthCapTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapTunnelNo.setStatus("current")
_DeployProvTunnelEthCapAlias_Type = Integer32
_DeployProvTunnelEthCapAlias_Object = MibTableColumn
deployProvTunnelEthCapAlias = _DeployProvTunnelEthCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 4),
    _DeployProvTunnelEthCapAlias_Type()
)
deployProvTunnelEthCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapAlias.setStatus("current")
_DeployProvTunnelEthCapTunnelType_Type = FspR7CpTunnelTypeCaps
_DeployProvTunnelEthCapTunnelType_Object = MibTableColumn
deployProvTunnelEthCapTunnelType = _DeployProvTunnelEthCapTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 5),
    _DeployProvTunnelEthCapTunnelType_Type()
)
deployProvTunnelEthCapTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapTunnelType.setStatus("current")
_DeployProvTunnelEthCapToTid_Type = Integer32
_DeployProvTunnelEthCapToTid_Object = MibTableColumn
deployProvTunnelEthCapToTid = _DeployProvTunnelEthCapToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 6),
    _DeployProvTunnelEthCapToTid_Type()
)
deployProvTunnelEthCapToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapToTid.setStatus("current")
_DeployProvTunnelEthCapToNodeIp_Type = FspR7YesNo
_DeployProvTunnelEthCapToNodeIp_Object = MibTableColumn
deployProvTunnelEthCapToNodeIp = _DeployProvTunnelEthCapToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 7),
    _DeployProvTunnelEthCapToNodeIp_Type()
)
deployProvTunnelEthCapToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapToNodeIp.setStatus("current")
_DeployProvTunnelEthCapFromAid_Type = Integer32
_DeployProvTunnelEthCapFromAid_Object = MibTableColumn
deployProvTunnelEthCapFromAid = _DeployProvTunnelEthCapFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 8),
    _DeployProvTunnelEthCapFromAid_Type()
)
deployProvTunnelEthCapFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapFromAid.setStatus("current")
_DeployProvTunnelEthCapToAid_Type = Integer32
_DeployProvTunnelEthCapToAid_Object = MibTableColumn
deployProvTunnelEthCapToAid = _DeployProvTunnelEthCapToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 9),
    _DeployProvTunnelEthCapToAid_Type()
)
deployProvTunnelEthCapToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapToAid.setStatus("current")
_DeployProvTunnelEthCapConnectionDirection_Type = FspR7ConnCaps
_DeployProvTunnelEthCapConnectionDirection_Object = MibTableColumn
deployProvTunnelEthCapConnectionDirection = _DeployProvTunnelEthCapConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 10),
    _DeployProvTunnelEthCapConnectionDirection_Type()
)
deployProvTunnelEthCapConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapConnectionDirection.setStatus("current")
_DeployProvTunnelEthCapFacilityType_Type = FspR7InterfaceTypeCaps
_DeployProvTunnelEthCapFacilityType_Object = MibTableColumn
deployProvTunnelEthCapFacilityType = _DeployProvTunnelEthCapFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 11),
    _DeployProvTunnelEthCapFacilityType_Type()
)
deployProvTunnelEthCapFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapFacilityType.setStatus("current")
_DeployProvTunnelEthCapProvisionedPaths_Type = Integer32
_DeployProvTunnelEthCapProvisionedPaths_Object = MibTableColumn
deployProvTunnelEthCapProvisionedPaths = _DeployProvTunnelEthCapProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 12),
    _DeployProvTunnelEthCapProvisionedPaths_Type()
)
deployProvTunnelEthCapProvisionedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapProvisionedPaths.setStatus("current")
_DeployProvTunnelEthCapPin_Type = FspR7CpPinningCaps
_DeployProvTunnelEthCapPin_Object = MibTableColumn
deployProvTunnelEthCapPin = _DeployProvTunnelEthCapPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 13),
    _DeployProvTunnelEthCapPin_Type()
)
deployProvTunnelEthCapPin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapPin.setStatus("current")
_DeployProvTunnelEthCapCirRcv_Type = FspR7Unsigned32Caps
_DeployProvTunnelEthCapCirRcv_Object = MibTableColumn
deployProvTunnelEthCapCirRcv = _DeployProvTunnelEthCapCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 14),
    _DeployProvTunnelEthCapCirRcv_Type()
)
deployProvTunnelEthCapCirRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapCirRcv.setUnits("Mbit/s")
_DeployProvTunnelEthCapCbsRcv_Type = Unsigned32
_DeployProvTunnelEthCapCbsRcv_Object = MibTableColumn
deployProvTunnelEthCapCbsRcv = _DeployProvTunnelEthCapCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 15),
    _DeployProvTunnelEthCapCbsRcv_Type()
)
deployProvTunnelEthCapCbsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapCbsRcv.setUnits("bytes")
_DeployProvTunnelEthCapProtectionType_Type = FspR7CpProtectionTypeCaps
_DeployProvTunnelEthCapProtectionType_Object = MibTableColumn
deployProvTunnelEthCapProtectionType = _DeployProvTunnelEthCapProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 16),
    _DeployProvTunnelEthCapProtectionType_Type()
)
deployProvTunnelEthCapProtectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapProtectionType.setStatus("current")
_DeployProvTunnelEthCapRestorationType_Type = FspR7CpRestorationTypeCaps
_DeployProvTunnelEthCapRestorationType_Object = MibTableColumn
deployProvTunnelEthCapRestorationType = _DeployProvTunnelEthCapRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 17),
    _DeployProvTunnelEthCapRestorationType_Type()
)
deployProvTunnelEthCapRestorationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapRestorationType.setStatus("current")
_DeployProvTunnelEthCapMonitorEntities_Type = FspR7EnableDisableCaps
_DeployProvTunnelEthCapMonitorEntities_Object = MibTableColumn
deployProvTunnelEthCapMonitorEntities = _DeployProvTunnelEthCapMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 18),
    _DeployProvTunnelEthCapMonitorEntities_Type()
)
deployProvTunnelEthCapMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapMonitorEntities.setStatus("current")
_DeployProvTunnelEthCapTunnelScope_Type = FspR7CpTunnelScopeCaps
_DeployProvTunnelEthCapTunnelScope_Object = MibTableColumn
deployProvTunnelEthCapTunnelScope = _DeployProvTunnelEthCapTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 19),
    _DeployProvTunnelEthCapTunnelScope_Type()
)
deployProvTunnelEthCapTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapTunnelScope.setStatus("current")
_DeployProvTunnelEthCapLayer_Type = FspR7PacketsLayerCaps
_DeployProvTunnelEthCapLayer_Object = MibTableColumn
deployProvTunnelEthCapLayer = _DeployProvTunnelEthCapLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 20),
    _DeployProvTunnelEthCapLayer_Type()
)
deployProvTunnelEthCapLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapLayer.setStatus("current")
_DeployProvTunnelEthCapOifUni_Type = FspR7YesNoCaps
_DeployProvTunnelEthCapOifUni_Object = MibTableColumn
deployProvTunnelEthCapOifUni = _DeployProvTunnelEthCapOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 21),
    _DeployProvTunnelEthCapOifUni_Type()
)
deployProvTunnelEthCapOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapOifUni.setStatus("current")
_DeployProvTunnelEthCapFromAidString_Type = Integer32
_DeployProvTunnelEthCapFromAidString_Object = MibTableColumn
deployProvTunnelEthCapFromAidString = _DeployProvTunnelEthCapFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 22),
    _DeployProvTunnelEthCapFromAidString_Type()
)
deployProvTunnelEthCapFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapFromAidString.setStatus("current")
_DeployProvTunnelEthCapToAidString_Type = Integer32
_DeployProvTunnelEthCapToAidString_Object = MibTableColumn
deployProvTunnelEthCapToAidString = _DeployProvTunnelEthCapToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 65, 1, 23),
    _DeployProvTunnelEthCapToAidString_Type()
)
deployProvTunnelEthCapToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthCapToAidString.setStatus("current")
_DeployProvTunnelEthDefaultsTable_Object = MibTable
deployProvTunnelEthDefaultsTable = _DeployProvTunnelEthDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66)
)
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsTable.setStatus("current")
_DeployProvTunnelEthDefaultsEntry_Object = MibTableRow
deployProvTunnelEthDefaultsEntry = _DeployProvTunnelEthDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1)
)
deployProvTunnelEthDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsEntry.setStatus("current")
_DeployProvTunnelEthDefaultsRowStatus_Type = RowStatus
_DeployProvTunnelEthDefaultsRowStatus_Object = MibTableColumn
deployProvTunnelEthDefaultsRowStatus = _DeployProvTunnelEthDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 1),
    _DeployProvTunnelEthDefaultsRowStatus_Type()
)
deployProvTunnelEthDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsRowStatus.setStatus("current")
_DeployProvTunnelEthDefaultsTunnelId_Type = SnmpAdminString
_DeployProvTunnelEthDefaultsTunnelId_Object = MibTableColumn
deployProvTunnelEthDefaultsTunnelId = _DeployProvTunnelEthDefaultsTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 2),
    _DeployProvTunnelEthDefaultsTunnelId_Type()
)
deployProvTunnelEthDefaultsTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsTunnelId.setStatus("current")
_DeployProvTunnelEthDefaultsTunnelNo_Type = Unsigned32
_DeployProvTunnelEthDefaultsTunnelNo_Object = MibTableColumn
deployProvTunnelEthDefaultsTunnelNo = _DeployProvTunnelEthDefaultsTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 3),
    _DeployProvTunnelEthDefaultsTunnelNo_Type()
)
deployProvTunnelEthDefaultsTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsTunnelNo.setStatus("current")
_DeployProvTunnelEthDefaultsAlias_Type = SnmpAdminString
_DeployProvTunnelEthDefaultsAlias_Object = MibTableColumn
deployProvTunnelEthDefaultsAlias = _DeployProvTunnelEthDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 4),
    _DeployProvTunnelEthDefaultsAlias_Type()
)
deployProvTunnelEthDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsAlias.setStatus("current")
_DeployProvTunnelEthDefaultsTunnelType_Type = FspR7CpTunnelType
_DeployProvTunnelEthDefaultsTunnelType_Object = MibTableColumn
deployProvTunnelEthDefaultsTunnelType = _DeployProvTunnelEthDefaultsTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 5),
    _DeployProvTunnelEthDefaultsTunnelType_Type()
)
deployProvTunnelEthDefaultsTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsTunnelType.setStatus("current")
_DeployProvTunnelEthDefaultsToTid_Type = SnmpAdminString
_DeployProvTunnelEthDefaultsToTid_Object = MibTableColumn
deployProvTunnelEthDefaultsToTid = _DeployProvTunnelEthDefaultsToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 6),
    _DeployProvTunnelEthDefaultsToTid_Type()
)
deployProvTunnelEthDefaultsToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsToTid.setStatus("current")
_DeployProvTunnelEthDefaultsToNodeIp_Type = IpAddress
_DeployProvTunnelEthDefaultsToNodeIp_Object = MibTableColumn
deployProvTunnelEthDefaultsToNodeIp = _DeployProvTunnelEthDefaultsToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 7),
    _DeployProvTunnelEthDefaultsToNodeIp_Type()
)
deployProvTunnelEthDefaultsToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsToNodeIp.setStatus("current")
_DeployProvTunnelEthDefaultsFromAid_Type = EntityIndex
_DeployProvTunnelEthDefaultsFromAid_Object = MibTableColumn
deployProvTunnelEthDefaultsFromAid = _DeployProvTunnelEthDefaultsFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 8),
    _DeployProvTunnelEthDefaultsFromAid_Type()
)
deployProvTunnelEthDefaultsFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsFromAid.setStatus("current")
_DeployProvTunnelEthDefaultsToAid_Type = EntityIndex
_DeployProvTunnelEthDefaultsToAid_Object = MibTableColumn
deployProvTunnelEthDefaultsToAid = _DeployProvTunnelEthDefaultsToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 9),
    _DeployProvTunnelEthDefaultsToAid_Type()
)
deployProvTunnelEthDefaultsToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsToAid.setStatus("current")
_DeployProvTunnelEthDefaultsConnectionDirection_Type = FspR7Conn
_DeployProvTunnelEthDefaultsConnectionDirection_Object = MibTableColumn
deployProvTunnelEthDefaultsConnectionDirection = _DeployProvTunnelEthDefaultsConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 10),
    _DeployProvTunnelEthDefaultsConnectionDirection_Type()
)
deployProvTunnelEthDefaultsConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsConnectionDirection.setStatus("current")
_DeployProvTunnelEthDefaultsFacilityType_Type = FspR7InterfaceType
_DeployProvTunnelEthDefaultsFacilityType_Object = MibTableColumn
deployProvTunnelEthDefaultsFacilityType = _DeployProvTunnelEthDefaultsFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 11),
    _DeployProvTunnelEthDefaultsFacilityType_Type()
)
deployProvTunnelEthDefaultsFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsFacilityType.setStatus("current")
_DeployProvTunnelEthDefaultsProvisionedPaths_Type = SnmpAdminString
_DeployProvTunnelEthDefaultsProvisionedPaths_Object = MibTableColumn
deployProvTunnelEthDefaultsProvisionedPaths = _DeployProvTunnelEthDefaultsProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 12),
    _DeployProvTunnelEthDefaultsProvisionedPaths_Type()
)
deployProvTunnelEthDefaultsProvisionedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsProvisionedPaths.setStatus("current")
_DeployProvTunnelEthDefaultsPin_Type = FspR7CpPinning
_DeployProvTunnelEthDefaultsPin_Object = MibTableColumn
deployProvTunnelEthDefaultsPin = _DeployProvTunnelEthDefaultsPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 13),
    _DeployProvTunnelEthDefaultsPin_Type()
)
deployProvTunnelEthDefaultsPin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsPin.setStatus("current")
_DeployProvTunnelEthDefaultsCirRcv_Type = Unsigned32
_DeployProvTunnelEthDefaultsCirRcv_Object = MibTableColumn
deployProvTunnelEthDefaultsCirRcv = _DeployProvTunnelEthDefaultsCirRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 14),
    _DeployProvTunnelEthDefaultsCirRcv_Type()
)
deployProvTunnelEthDefaultsCirRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsCirRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsCirRcv.setUnits("Mbit/s")


class _DeployProvTunnelEthDefaultsCbsRcv_Type(Unsigned32):
    """Custom type deployProvTunnelEthDefaultsCbsRcv based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26214400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_DeployProvTunnelEthDefaultsCbsRcv_Type.__name__ = "Unsigned32"
_DeployProvTunnelEthDefaultsCbsRcv_Object = MibTableColumn
deployProvTunnelEthDefaultsCbsRcv = _DeployProvTunnelEthDefaultsCbsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 15),
    _DeployProvTunnelEthDefaultsCbsRcv_Type()
)
deployProvTunnelEthDefaultsCbsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsCbsRcv.setStatus("current")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsCbsRcv.setUnits("bytes")
_DeployProvTunnelEthDefaultsProtectionType_Type = FspR7CpProtectionType
_DeployProvTunnelEthDefaultsProtectionType_Object = MibTableColumn
deployProvTunnelEthDefaultsProtectionType = _DeployProvTunnelEthDefaultsProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 16),
    _DeployProvTunnelEthDefaultsProtectionType_Type()
)
deployProvTunnelEthDefaultsProtectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsProtectionType.setStatus("current")
_DeployProvTunnelEthDefaultsRestorationType_Type = FspR7CpRestorationType
_DeployProvTunnelEthDefaultsRestorationType_Object = MibTableColumn
deployProvTunnelEthDefaultsRestorationType = _DeployProvTunnelEthDefaultsRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 17),
    _DeployProvTunnelEthDefaultsRestorationType_Type()
)
deployProvTunnelEthDefaultsRestorationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsRestorationType.setStatus("current")
_DeployProvTunnelEthDefaultsMonitorEntities_Type = FspR7EnableDisable
_DeployProvTunnelEthDefaultsMonitorEntities_Object = MibTableColumn
deployProvTunnelEthDefaultsMonitorEntities = _DeployProvTunnelEthDefaultsMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 18),
    _DeployProvTunnelEthDefaultsMonitorEntities_Type()
)
deployProvTunnelEthDefaultsMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsMonitorEntities.setStatus("current")
_DeployProvTunnelEthDefaultsTunnelScope_Type = FspR7CpTunnelScope
_DeployProvTunnelEthDefaultsTunnelScope_Object = MibTableColumn
deployProvTunnelEthDefaultsTunnelScope = _DeployProvTunnelEthDefaultsTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 19),
    _DeployProvTunnelEthDefaultsTunnelScope_Type()
)
deployProvTunnelEthDefaultsTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsTunnelScope.setStatus("current")
_DeployProvTunnelEthDefaultsLayer_Type = FspR7PacketsLayer
_DeployProvTunnelEthDefaultsLayer_Object = MibTableColumn
deployProvTunnelEthDefaultsLayer = _DeployProvTunnelEthDefaultsLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 20),
    _DeployProvTunnelEthDefaultsLayer_Type()
)
deployProvTunnelEthDefaultsLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsLayer.setStatus("current")
_DeployProvTunnelEthDefaultsOifUni_Type = FspR7YesNo
_DeployProvTunnelEthDefaultsOifUni_Object = MibTableColumn
deployProvTunnelEthDefaultsOifUni = _DeployProvTunnelEthDefaultsOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 21),
    _DeployProvTunnelEthDefaultsOifUni_Type()
)
deployProvTunnelEthDefaultsOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsOifUni.setStatus("current")
_DeployProvTunnelEthDefaultsFromAidString_Type = SnmpAdminString
_DeployProvTunnelEthDefaultsFromAidString_Object = MibTableColumn
deployProvTunnelEthDefaultsFromAidString = _DeployProvTunnelEthDefaultsFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 22),
    _DeployProvTunnelEthDefaultsFromAidString_Type()
)
deployProvTunnelEthDefaultsFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsFromAidString.setStatus("current")
_DeployProvTunnelEthDefaultsToAidString_Type = SnmpAdminString
_DeployProvTunnelEthDefaultsToAidString_Object = MibTableColumn
deployProvTunnelEthDefaultsToAidString = _DeployProvTunnelEthDefaultsToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 66, 1, 23),
    _DeployProvTunnelEthDefaultsToAidString_Type()
)
deployProvTunnelEthDefaultsToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelEthDefaultsToAidString.setStatus("current")
_DeployProvPathEthTable_Object = MibTable
deployProvPathEthTable = _DeployProvPathEthTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 67)
)
if mibBuilder.loadTexts:
    deployProvPathEthTable.setStatus("current")
_DeployProvPathEthEntry_Object = MibTableRow
deployProvPathEthEntry = _DeployProvPathEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 67, 1)
)
deployProvPathEthEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathEthEntry.setStatus("current")
_DeployProvPathEthRowStatus_Type = RowStatus
_DeployProvPathEthRowStatus_Object = MibTableColumn
deployProvPathEthRowStatus = _DeployProvPathEthRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 67, 1, 1),
    _DeployProvPathEthRowStatus_Type()
)
deployProvPathEthRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathEthRowStatus.setStatus("current")
_DeployProvPathEthPathId_Type = SnmpAdminString
_DeployProvPathEthPathId_Object = MibTableColumn
deployProvPathEthPathId = _DeployProvPathEthPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 67, 1, 2),
    _DeployProvPathEthPathId_Type()
)
deployProvPathEthPathId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathEthPathId.setStatus("current")
_DeployProvPathEthCapTable_Object = MibTable
deployProvPathEthCapTable = _DeployProvPathEthCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 68)
)
if mibBuilder.loadTexts:
    deployProvPathEthCapTable.setStatus("current")
_DeployProvPathEthCapEntry_Object = MibTableRow
deployProvPathEthCapEntry = _DeployProvPathEthCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 68, 1)
)
deployProvPathEthCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathEthCapEntry.setStatus("current")
_DeployProvPathEthCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPathEthCapRowStatus_Object = MibTableColumn
deployProvPathEthCapRowStatus = _DeployProvPathEthCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 68, 1, 1),
    _DeployProvPathEthCapRowStatus_Type()
)
deployProvPathEthCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathEthCapRowStatus.setStatus("current")
_DeployProvPathEthCapPathId_Type = Integer32
_DeployProvPathEthCapPathId_Object = MibTableColumn
deployProvPathEthCapPathId = _DeployProvPathEthCapPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 68, 1, 2),
    _DeployProvPathEthCapPathId_Type()
)
deployProvPathEthCapPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathEthCapPathId.setStatus("current")
_DeployProvPathEthDefaultsTable_Object = MibTable
deployProvPathEthDefaultsTable = _DeployProvPathEthDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 69)
)
if mibBuilder.loadTexts:
    deployProvPathEthDefaultsTable.setStatus("current")
_DeployProvPathEthDefaultsEntry_Object = MibTableRow
deployProvPathEthDefaultsEntry = _DeployProvPathEthDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 69, 1)
)
deployProvPathEthDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathEthDefaultsEntry.setStatus("current")
_DeployProvPathEthDefaultsRowStatus_Type = RowStatus
_DeployProvPathEthDefaultsRowStatus_Object = MibTableColumn
deployProvPathEthDefaultsRowStatus = _DeployProvPathEthDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 69, 1, 1),
    _DeployProvPathEthDefaultsRowStatus_Type()
)
deployProvPathEthDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathEthDefaultsRowStatus.setStatus("current")
_DeployProvPathEthDefaultsPathId_Type = SnmpAdminString
_DeployProvPathEthDefaultsPathId_Object = MibTableColumn
deployProvPathEthDefaultsPathId = _DeployProvPathEthDefaultsPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 69, 1, 2),
    _DeployProvPathEthDefaultsPathId_Type()
)
deployProvPathEthDefaultsPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathEthDefaultsPathId.setStatus("current")
_DeployProvPathElementEthTable_Object = MibTable
deployProvPathElementEthTable = _DeployProvPathElementEthTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70)
)
if mibBuilder.loadTexts:
    deployProvPathElementEthTable.setStatus("current")
_DeployProvPathElementEthEntry_Object = MibTableRow
deployProvPathElementEthEntry = _DeployProvPathElementEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1)
)
deployProvPathElementEthEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementEthEntry.setStatus("current")
_DeployProvPathElementEthRowStatus_Type = RowStatus
_DeployProvPathElementEthRowStatus_Object = MibTableColumn
deployProvPathElementEthRowStatus = _DeployProvPathElementEthRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 1),
    _DeployProvPathElementEthRowStatus_Type()
)
deployProvPathElementEthRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthRowStatus.setStatus("current")
_DeployProvPathElementEthTrafficEngineeringType_Type = FspR7CpTEType
_DeployProvPathElementEthTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementEthTrafficEngineeringType = _DeployProvPathElementEthTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 2),
    _DeployProvPathElementEthTrafficEngineeringType_Type()
)
deployProvPathElementEthTrafficEngineeringType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthTrafficEngineeringType.setStatus("current")
_DeployProvPathElementEthLifIp_Type = IpAddress
_DeployProvPathElementEthLifIp_Object = MibTableColumn
deployProvPathElementEthLifIp = _DeployProvPathElementEthLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 3),
    _DeployProvPathElementEthLifIp_Type()
)
deployProvPathElementEthLifIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthLifIp.setStatus("current")
_DeployProvPathElementEthNodeIp_Type = IpAddress
_DeployProvPathElementEthNodeIp_Object = MibTableColumn
deployProvPathElementEthNodeIp = _DeployProvPathElementEthNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 4),
    _DeployProvPathElementEthNodeIp_Type()
)
deployProvPathElementEthNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthNodeIp.setStatus("current")
_DeployProvPathElementEthTid_Type = SnmpAdminString
_DeployProvPathElementEthTid_Object = MibTableColumn
deployProvPathElementEthTid = _DeployProvPathElementEthTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 5),
    _DeployProvPathElementEthTid_Type()
)
deployProvPathElementEthTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthTid.setStatus("current")
_DeployProvPathElementEthLogicalInterfaceId_Type = Unsigned32
_DeployProvPathElementEthLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementEthLogicalInterfaceId = _DeployProvPathElementEthLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 6),
    _DeployProvPathElementEthLogicalInterfaceId_Type()
)
deployProvPathElementEthLogicalInterfaceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthLogicalInterfaceId.setStatus("current")
_DeployProvPathElementEthTie_Type = FspR7CpTie
_DeployProvPathElementEthTie_Object = MibTableColumn
deployProvPathElementEthTie = _DeployProvPathElementEthTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 7),
    _DeployProvPathElementEthTie_Type()
)
deployProvPathElementEthTie.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthTie.setStatus("current")
_DeployProvPathElementEthUpstreamSvid_Type = Unsigned32
_DeployProvPathElementEthUpstreamSvid_Object = MibTableColumn
deployProvPathElementEthUpstreamSvid = _DeployProvPathElementEthUpstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 8),
    _DeployProvPathElementEthUpstreamSvid_Type()
)
deployProvPathElementEthUpstreamSvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthUpstreamSvid.setStatus("current")
_DeployProvPathElementEthDownstreamSvid_Type = Unsigned32
_DeployProvPathElementEthDownstreamSvid_Object = MibTableColumn
deployProvPathElementEthDownstreamSvid = _DeployProvPathElementEthDownstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 70, 1, 9),
    _DeployProvPathElementEthDownstreamSvid_Type()
)
deployProvPathElementEthDownstreamSvid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementEthDownstreamSvid.setStatus("current")
_DeployProvPathElementEthCapTable_Object = MibTable
deployProvPathElementEthCapTable = _DeployProvPathElementEthCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71)
)
if mibBuilder.loadTexts:
    deployProvPathElementEthCapTable.setStatus("current")
_DeployProvPathElementEthCapEntry_Object = MibTableRow
deployProvPathElementEthCapEntry = _DeployProvPathElementEthCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1)
)
deployProvPathElementEthCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementEthCapEntry.setStatus("current")
_DeployProvPathElementEthCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPathElementEthCapRowStatus_Object = MibTableColumn
deployProvPathElementEthCapRowStatus = _DeployProvPathElementEthCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 1),
    _DeployProvPathElementEthCapRowStatus_Type()
)
deployProvPathElementEthCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapRowStatus.setStatus("current")
_DeployProvPathElementEthCapTrafficEngineeringType_Type = FspR7CpTETypeCaps
_DeployProvPathElementEthCapTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementEthCapTrafficEngineeringType = _DeployProvPathElementEthCapTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 2),
    _DeployProvPathElementEthCapTrafficEngineeringType_Type()
)
deployProvPathElementEthCapTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapTrafficEngineeringType.setStatus("current")
_DeployProvPathElementEthCapLifIp_Type = FspR7YesNo
_DeployProvPathElementEthCapLifIp_Object = MibTableColumn
deployProvPathElementEthCapLifIp = _DeployProvPathElementEthCapLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 3),
    _DeployProvPathElementEthCapLifIp_Type()
)
deployProvPathElementEthCapLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapLifIp.setStatus("current")
_DeployProvPathElementEthCapNodeIp_Type = FspR7YesNo
_DeployProvPathElementEthCapNodeIp_Object = MibTableColumn
deployProvPathElementEthCapNodeIp = _DeployProvPathElementEthCapNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 4),
    _DeployProvPathElementEthCapNodeIp_Type()
)
deployProvPathElementEthCapNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapNodeIp.setStatus("current")
_DeployProvPathElementEthCapTid_Type = Integer32
_DeployProvPathElementEthCapTid_Object = MibTableColumn
deployProvPathElementEthCapTid = _DeployProvPathElementEthCapTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 5),
    _DeployProvPathElementEthCapTid_Type()
)
deployProvPathElementEthCapTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapTid.setStatus("current")
_DeployProvPathElementEthCapLogicalInterfaceId_Type = FspR7Unsigned32Caps
_DeployProvPathElementEthCapLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementEthCapLogicalInterfaceId = _DeployProvPathElementEthCapLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 6),
    _DeployProvPathElementEthCapLogicalInterfaceId_Type()
)
deployProvPathElementEthCapLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapLogicalInterfaceId.setStatus("current")
_DeployProvPathElementEthCapTie_Type = FspR7CpTieCaps
_DeployProvPathElementEthCapTie_Object = MibTableColumn
deployProvPathElementEthCapTie = _DeployProvPathElementEthCapTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 7),
    _DeployProvPathElementEthCapTie_Type()
)
deployProvPathElementEthCapTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapTie.setStatus("current")
_DeployProvPathElementEthCapUpstreamSvid_Type = FspR7Unsigned32Caps
_DeployProvPathElementEthCapUpstreamSvid_Object = MibTableColumn
deployProvPathElementEthCapUpstreamSvid = _DeployProvPathElementEthCapUpstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 8),
    _DeployProvPathElementEthCapUpstreamSvid_Type()
)
deployProvPathElementEthCapUpstreamSvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapUpstreamSvid.setStatus("current")
_DeployProvPathElementEthCapDownstreamSvid_Type = FspR7Unsigned32Caps
_DeployProvPathElementEthCapDownstreamSvid_Object = MibTableColumn
deployProvPathElementEthCapDownstreamSvid = _DeployProvPathElementEthCapDownstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 71, 1, 9),
    _DeployProvPathElementEthCapDownstreamSvid_Type()
)
deployProvPathElementEthCapDownstreamSvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthCapDownstreamSvid.setStatus("current")
_DeployProvPathElementEthDefaultsTable_Object = MibTable
deployProvPathElementEthDefaultsTable = _DeployProvPathElementEthDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72)
)
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsTable.setStatus("current")
_DeployProvPathElementEthDefaultsEntry_Object = MibTableRow
deployProvPathElementEthDefaultsEntry = _DeployProvPathElementEthDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1)
)
deployProvPathElementEthDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsEntry.setStatus("current")
_DeployProvPathElementEthDefaultsRowStatus_Type = RowStatus
_DeployProvPathElementEthDefaultsRowStatus_Object = MibTableColumn
deployProvPathElementEthDefaultsRowStatus = _DeployProvPathElementEthDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 1),
    _DeployProvPathElementEthDefaultsRowStatus_Type()
)
deployProvPathElementEthDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsRowStatus.setStatus("current")
_DeployProvPathElementEthDefaultsTrafficEngineeringType_Type = FspR7CpTEType
_DeployProvPathElementEthDefaultsTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementEthDefaultsTrafficEngineeringType = _DeployProvPathElementEthDefaultsTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 2),
    _DeployProvPathElementEthDefaultsTrafficEngineeringType_Type()
)
deployProvPathElementEthDefaultsTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsTrafficEngineeringType.setStatus("current")
_DeployProvPathElementEthDefaultsLifIp_Type = IpAddress
_DeployProvPathElementEthDefaultsLifIp_Object = MibTableColumn
deployProvPathElementEthDefaultsLifIp = _DeployProvPathElementEthDefaultsLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 3),
    _DeployProvPathElementEthDefaultsLifIp_Type()
)
deployProvPathElementEthDefaultsLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsLifIp.setStatus("current")
_DeployProvPathElementEthDefaultsNodeIp_Type = IpAddress
_DeployProvPathElementEthDefaultsNodeIp_Object = MibTableColumn
deployProvPathElementEthDefaultsNodeIp = _DeployProvPathElementEthDefaultsNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 4),
    _DeployProvPathElementEthDefaultsNodeIp_Type()
)
deployProvPathElementEthDefaultsNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsNodeIp.setStatus("current")
_DeployProvPathElementEthDefaultsTid_Type = SnmpAdminString
_DeployProvPathElementEthDefaultsTid_Object = MibTableColumn
deployProvPathElementEthDefaultsTid = _DeployProvPathElementEthDefaultsTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 5),
    _DeployProvPathElementEthDefaultsTid_Type()
)
deployProvPathElementEthDefaultsTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsTid.setStatus("current")
_DeployProvPathElementEthDefaultsLogicalInterfaceId_Type = Unsigned32
_DeployProvPathElementEthDefaultsLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementEthDefaultsLogicalInterfaceId = _DeployProvPathElementEthDefaultsLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 6),
    _DeployProvPathElementEthDefaultsLogicalInterfaceId_Type()
)
deployProvPathElementEthDefaultsLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsLogicalInterfaceId.setStatus("current")
_DeployProvPathElementEthDefaultsTie_Type = FspR7CpTie
_DeployProvPathElementEthDefaultsTie_Object = MibTableColumn
deployProvPathElementEthDefaultsTie = _DeployProvPathElementEthDefaultsTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 7),
    _DeployProvPathElementEthDefaultsTie_Type()
)
deployProvPathElementEthDefaultsTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsTie.setStatus("current")
_DeployProvPathElementEthDefaultsUpstreamSvid_Type = Unsigned32
_DeployProvPathElementEthDefaultsUpstreamSvid_Object = MibTableColumn
deployProvPathElementEthDefaultsUpstreamSvid = _DeployProvPathElementEthDefaultsUpstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 8),
    _DeployProvPathElementEthDefaultsUpstreamSvid_Type()
)
deployProvPathElementEthDefaultsUpstreamSvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsUpstreamSvid.setStatus("current")
_DeployProvPathElementEthDefaultsDownstreamSvid_Type = Unsigned32
_DeployProvPathElementEthDefaultsDownstreamSvid_Object = MibTableColumn
deployProvPathElementEthDefaultsDownstreamSvid = _DeployProvPathElementEthDefaultsDownstreamSvid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 72, 1, 9),
    _DeployProvPathElementEthDefaultsDownstreamSvid_Type()
)
deployProvPathElementEthDefaultsDownstreamSvid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementEthDefaultsDownstreamSvid.setStatus("current")
_DeployProvCopyPathEthTable_Object = MibTable
deployProvCopyPathEthTable = _DeployProvCopyPathEthTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 73)
)
if mibBuilder.loadTexts:
    deployProvCopyPathEthTable.setStatus("current")
_DeployProvCopyPathEthEntry_Object = MibTableRow
deployProvCopyPathEthEntry = _DeployProvCopyPathEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 73, 1)
)
deployProvCopyPathEthEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathEthEntry.setStatus("current")
_DeployProvCopyPathEthRowStatus_Type = RowStatus
_DeployProvCopyPathEthRowStatus_Object = MibTableColumn
deployProvCopyPathEthRowStatus = _DeployProvCopyPathEthRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 73, 1, 1),
    _DeployProvCopyPathEthRowStatus_Type()
)
deployProvCopyPathEthRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathEthRowStatus.setStatus("current")
_DeployProvCopyPathEthSourcePathIndex_Type = EntityIndex
_DeployProvCopyPathEthSourcePathIndex_Object = MibTableColumn
deployProvCopyPathEthSourcePathIndex = _DeployProvCopyPathEthSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 73, 1, 2),
    _DeployProvCopyPathEthSourcePathIndex_Type()
)
deployProvCopyPathEthSourcePathIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathEthSourcePathIndex.setStatus("current")
_DeployProvCopyPathEthPathId_Type = SnmpAdminString
_DeployProvCopyPathEthPathId_Object = MibTableColumn
deployProvCopyPathEthPathId = _DeployProvCopyPathEthPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 73, 1, 3),
    _DeployProvCopyPathEthPathId_Type()
)
deployProvCopyPathEthPathId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathEthPathId.setStatus("current")
_DeployProvCopyPathEthCapTable_Object = MibTable
deployProvCopyPathEthCapTable = _DeployProvCopyPathEthCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 74)
)
if mibBuilder.loadTexts:
    deployProvCopyPathEthCapTable.setStatus("current")
_DeployProvCopyPathEthCapEntry_Object = MibTableRow
deployProvCopyPathEthCapEntry = _DeployProvCopyPathEthCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 74, 1)
)
deployProvCopyPathEthCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathEthCapEntry.setStatus("current")
_DeployProvCopyPathEthCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvCopyPathEthCapRowStatus_Object = MibTableColumn
deployProvCopyPathEthCapRowStatus = _DeployProvCopyPathEthCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 74, 1, 1),
    _DeployProvCopyPathEthCapRowStatus_Type()
)
deployProvCopyPathEthCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathEthCapRowStatus.setStatus("current")
_DeployProvCopyPathEthCapSourcePathIndex_Type = Integer32
_DeployProvCopyPathEthCapSourcePathIndex_Object = MibTableColumn
deployProvCopyPathEthCapSourcePathIndex = _DeployProvCopyPathEthCapSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 74, 1, 2),
    _DeployProvCopyPathEthCapSourcePathIndex_Type()
)
deployProvCopyPathEthCapSourcePathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathEthCapSourcePathIndex.setStatus("current")
_DeployProvCopyPathEthCapPathId_Type = Integer32
_DeployProvCopyPathEthCapPathId_Object = MibTableColumn
deployProvCopyPathEthCapPathId = _DeployProvCopyPathEthCapPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 74, 1, 3),
    _DeployProvCopyPathEthCapPathId_Type()
)
deployProvCopyPathEthCapPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathEthCapPathId.setStatus("current")
_DeployProvCopyPathEthDefaultsTable_Object = MibTable
deployProvCopyPathEthDefaultsTable = _DeployProvCopyPathEthDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 75)
)
if mibBuilder.loadTexts:
    deployProvCopyPathEthDefaultsTable.setStatus("current")
_DeployProvCopyPathEthDefaultsEntry_Object = MibTableRow
deployProvCopyPathEthDefaultsEntry = _DeployProvCopyPathEthDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 75, 1)
)
deployProvCopyPathEthDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneEthEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathEthDefaultsEntry.setStatus("current")
_DeployProvCopyPathEthDefaultsRowStatus_Type = RowStatus
_DeployProvCopyPathEthDefaultsRowStatus_Object = MibTableColumn
deployProvCopyPathEthDefaultsRowStatus = _DeployProvCopyPathEthDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 75, 1, 1),
    _DeployProvCopyPathEthDefaultsRowStatus_Type()
)
deployProvCopyPathEthDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathEthDefaultsRowStatus.setStatus("current")
_DeployProvCopyPathEthDefaultsSourcePathIndex_Type = EntityIndex
_DeployProvCopyPathEthDefaultsSourcePathIndex_Object = MibTableColumn
deployProvCopyPathEthDefaultsSourcePathIndex = _DeployProvCopyPathEthDefaultsSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 75, 1, 2),
    _DeployProvCopyPathEthDefaultsSourcePathIndex_Type()
)
deployProvCopyPathEthDefaultsSourcePathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathEthDefaultsSourcePathIndex.setStatus("current")
_DeployProvCopyPathEthDefaultsPathId_Type = SnmpAdminString
_DeployProvCopyPathEthDefaultsPathId_Object = MibTableColumn
deployProvCopyPathEthDefaultsPathId = _DeployProvCopyPathEthDefaultsPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 75, 1, 3),
    _DeployProvCopyPathEthDefaultsPathId_Type()
)
deployProvCopyPathEthDefaultsPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathEthDefaultsPathId.setStatus("current")
_DeployProvPortBindingTable_Object = MibTable
deployProvPortBindingTable = _DeployProvPortBindingTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76)
)
if mibBuilder.loadTexts:
    deployProvPortBindingTable.setStatus("current")
_DeployProvPortBindingEntry_Object = MibTableRow
deployProvPortBindingEntry = _DeployProvPortBindingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1)
)
deployProvPortBindingEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPortBindingEntry.setStatus("current")
_DeployProvPortBindingRowStatus_Type = RowStatus
_DeployProvPortBindingRowStatus_Object = MibTableColumn
deployProvPortBindingRowStatus = _DeployProvPortBindingRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 1),
    _DeployProvPortBindingRowStatus_Type()
)
deployProvPortBindingRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingRowStatus.setStatus("current")
_DeployProvPortBindingLogicalIfAid_Type = EntityIndex
_DeployProvPortBindingLogicalIfAid_Object = MibTableColumn
deployProvPortBindingLogicalIfAid = _DeployProvPortBindingLogicalIfAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 2),
    _DeployProvPortBindingLogicalIfAid_Type()
)
deployProvPortBindingLogicalIfAid.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingLogicalIfAid.setStatus("current")
_DeployProvPortBindingLocalTna_Type = IpAddress
_DeployProvPortBindingLocalTna_Object = MibTableColumn
deployProvPortBindingLocalTna = _DeployProvPortBindingLocalTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 3),
    _DeployProvPortBindingLocalTna_Type()
)
deployProvPortBindingLocalTna.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingLocalTna.setStatus("current")
_DeployProvPortBindingRemotePort_Type = Unsigned32
_DeployProvPortBindingRemotePort_Object = MibTableColumn
deployProvPortBindingRemotePort = _DeployProvPortBindingRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 4),
    _DeployProvPortBindingRemotePort_Type()
)
deployProvPortBindingRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingRemotePort.setStatus("current")
_DeployProvPortBindingRemoteTna_Type = IpAddress
_DeployProvPortBindingRemoteTna_Object = MibTableColumn
deployProvPortBindingRemoteTna = _DeployProvPortBindingRemoteTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 5),
    _DeployProvPortBindingRemoteTna_Type()
)
deployProvPortBindingRemoteTna.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingRemoteTna.setStatus("current")
_DeployProvPortBindingRemoteTnaMask_Type = IpAddress
_DeployProvPortBindingRemoteTnaMask_Object = MibTableColumn
deployProvPortBindingRemoteTnaMask = _DeployProvPortBindingRemoteTnaMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 6),
    _DeployProvPortBindingRemoteTnaMask_Type()
)
deployProvPortBindingRemoteTnaMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingRemoteTnaMask.setStatus("current")
_DeployProvPortBindingRemoteNodeIp_Type = IpAddress
_DeployProvPortBindingRemoteNodeIp_Object = MibTableColumn
deployProvPortBindingRemoteNodeIp = _DeployProvPortBindingRemoteNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 7),
    _DeployProvPortBindingRemoteNodeIp_Type()
)
deployProvPortBindingRemoteNodeIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingRemoteNodeIp.setStatus("current")
_DeployProvPortBindingRemoteScn_Type = IpAddress
_DeployProvPortBindingRemoteScn_Object = MibTableColumn
deployProvPortBindingRemoteScn = _DeployProvPortBindingRemoteScn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 8),
    _DeployProvPortBindingRemoteScn_Type()
)
deployProvPortBindingRemoteScn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingRemoteScn.setStatus("current")
_DeployProvPortBindingRemoteScPc_Type = IpAddress
_DeployProvPortBindingRemoteScPc_Object = MibTableColumn
deployProvPortBindingRemoteScPc = _DeployProvPortBindingRemoteScPc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 9),
    _DeployProvPortBindingRemoteScPc_Type()
)
deployProvPortBindingRemoteScPc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingRemoteScPc.setStatus("current")
_DeployProvPortBindingLayer_Type = FspR7PacketsLayer
_DeployProvPortBindingLayer_Object = MibTableColumn
deployProvPortBindingLayer = _DeployProvPortBindingLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 76, 1, 10),
    _DeployProvPortBindingLayer_Type()
)
deployProvPortBindingLayer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    deployProvPortBindingLayer.setStatus("current")
_DeployProvPortBindingCapTable_Object = MibTable
deployProvPortBindingCapTable = _DeployProvPortBindingCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77)
)
if mibBuilder.loadTexts:
    deployProvPortBindingCapTable.setStatus("current")
_DeployProvPortBindingCapEntry_Object = MibTableRow
deployProvPortBindingCapEntry = _DeployProvPortBindingCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1)
)
deployProvPortBindingCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPortBindingCapEntry.setStatus("current")
_DeployProvPortBindingCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPortBindingCapRowStatus_Object = MibTableColumn
deployProvPortBindingCapRowStatus = _DeployProvPortBindingCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 1),
    _DeployProvPortBindingCapRowStatus_Type()
)
deployProvPortBindingCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapRowStatus.setStatus("current")
_DeployProvPortBindingCapLogicalIfAid_Type = Integer32
_DeployProvPortBindingCapLogicalIfAid_Object = MibTableColumn
deployProvPortBindingCapLogicalIfAid = _DeployProvPortBindingCapLogicalIfAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 2),
    _DeployProvPortBindingCapLogicalIfAid_Type()
)
deployProvPortBindingCapLogicalIfAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapLogicalIfAid.setStatus("current")
_DeployProvPortBindingCapLocalTna_Type = FspR7YesNo
_DeployProvPortBindingCapLocalTna_Object = MibTableColumn
deployProvPortBindingCapLocalTna = _DeployProvPortBindingCapLocalTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 3),
    _DeployProvPortBindingCapLocalTna_Type()
)
deployProvPortBindingCapLocalTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapLocalTna.setStatus("current")
_DeployProvPortBindingCapRemotePort_Type = FspR7Unsigned32Caps
_DeployProvPortBindingCapRemotePort_Object = MibTableColumn
deployProvPortBindingCapRemotePort = _DeployProvPortBindingCapRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 4),
    _DeployProvPortBindingCapRemotePort_Type()
)
deployProvPortBindingCapRemotePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapRemotePort.setStatus("current")
_DeployProvPortBindingCapRemoteTna_Type = FspR7YesNo
_DeployProvPortBindingCapRemoteTna_Object = MibTableColumn
deployProvPortBindingCapRemoteTna = _DeployProvPortBindingCapRemoteTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 5),
    _DeployProvPortBindingCapRemoteTna_Type()
)
deployProvPortBindingCapRemoteTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapRemoteTna.setStatus("current")
_DeployProvPortBindingCapRemoteTnaMask_Type = FspR7YesNo
_DeployProvPortBindingCapRemoteTnaMask_Object = MibTableColumn
deployProvPortBindingCapRemoteTnaMask = _DeployProvPortBindingCapRemoteTnaMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 6),
    _DeployProvPortBindingCapRemoteTnaMask_Type()
)
deployProvPortBindingCapRemoteTnaMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapRemoteTnaMask.setStatus("current")
_DeployProvPortBindingCapRemoteNodeIp_Type = FspR7YesNo
_DeployProvPortBindingCapRemoteNodeIp_Object = MibTableColumn
deployProvPortBindingCapRemoteNodeIp = _DeployProvPortBindingCapRemoteNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 7),
    _DeployProvPortBindingCapRemoteNodeIp_Type()
)
deployProvPortBindingCapRemoteNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapRemoteNodeIp.setStatus("current")
_DeployProvPortBindingCapRemoteScn_Type = FspR7YesNo
_DeployProvPortBindingCapRemoteScn_Object = MibTableColumn
deployProvPortBindingCapRemoteScn = _DeployProvPortBindingCapRemoteScn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 8),
    _DeployProvPortBindingCapRemoteScn_Type()
)
deployProvPortBindingCapRemoteScn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapRemoteScn.setStatus("current")
_DeployProvPortBindingCapRemoteScPc_Type = FspR7YesNo
_DeployProvPortBindingCapRemoteScPc_Object = MibTableColumn
deployProvPortBindingCapRemoteScPc = _DeployProvPortBindingCapRemoteScPc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 9),
    _DeployProvPortBindingCapRemoteScPc_Type()
)
deployProvPortBindingCapRemoteScPc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapRemoteScPc.setStatus("current")
_DeployProvPortBindingCapLayer_Type = FspR7PacketsLayerCaps
_DeployProvPortBindingCapLayer_Object = MibTableColumn
deployProvPortBindingCapLayer = _DeployProvPortBindingCapLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 77, 1, 10),
    _DeployProvPortBindingCapLayer_Type()
)
deployProvPortBindingCapLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingCapLayer.setStatus("current")
_DeployProvPortBindingDefaultsTable_Object = MibTable
deployProvPortBindingDefaultsTable = _DeployProvPortBindingDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78)
)
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsTable.setStatus("current")
_DeployProvPortBindingDefaultsEntry_Object = MibTableRow
deployProvPortBindingDefaultsEntry = _DeployProvPortBindingDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1)
)
deployProvPortBindingDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsEntry.setStatus("current")
_DeployProvPortBindingDefaultsRowStatus_Type = RowStatus
_DeployProvPortBindingDefaultsRowStatus_Object = MibTableColumn
deployProvPortBindingDefaultsRowStatus = _DeployProvPortBindingDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 1),
    _DeployProvPortBindingDefaultsRowStatus_Type()
)
deployProvPortBindingDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsRowStatus.setStatus("current")
_DeployProvPortBindingDefaultsLogicalIfAid_Type = EntityIndex
_DeployProvPortBindingDefaultsLogicalIfAid_Object = MibTableColumn
deployProvPortBindingDefaultsLogicalIfAid = _DeployProvPortBindingDefaultsLogicalIfAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 2),
    _DeployProvPortBindingDefaultsLogicalIfAid_Type()
)
deployProvPortBindingDefaultsLogicalIfAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsLogicalIfAid.setStatus("current")
_DeployProvPortBindingDefaultsLocalTna_Type = IpAddress
_DeployProvPortBindingDefaultsLocalTna_Object = MibTableColumn
deployProvPortBindingDefaultsLocalTna = _DeployProvPortBindingDefaultsLocalTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 3),
    _DeployProvPortBindingDefaultsLocalTna_Type()
)
deployProvPortBindingDefaultsLocalTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsLocalTna.setStatus("current")
_DeployProvPortBindingDefaultsRemotePort_Type = Unsigned32
_DeployProvPortBindingDefaultsRemotePort_Object = MibTableColumn
deployProvPortBindingDefaultsRemotePort = _DeployProvPortBindingDefaultsRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 4),
    _DeployProvPortBindingDefaultsRemotePort_Type()
)
deployProvPortBindingDefaultsRemotePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsRemotePort.setStatus("current")
_DeployProvPortBindingDefaultsRemoteTna_Type = IpAddress
_DeployProvPortBindingDefaultsRemoteTna_Object = MibTableColumn
deployProvPortBindingDefaultsRemoteTna = _DeployProvPortBindingDefaultsRemoteTna_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 5),
    _DeployProvPortBindingDefaultsRemoteTna_Type()
)
deployProvPortBindingDefaultsRemoteTna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsRemoteTna.setStatus("current")
_DeployProvPortBindingDefaultsRemoteTnaMask_Type = IpAddress
_DeployProvPortBindingDefaultsRemoteTnaMask_Object = MibTableColumn
deployProvPortBindingDefaultsRemoteTnaMask = _DeployProvPortBindingDefaultsRemoteTnaMask_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 6),
    _DeployProvPortBindingDefaultsRemoteTnaMask_Type()
)
deployProvPortBindingDefaultsRemoteTnaMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsRemoteTnaMask.setStatus("current")
_DeployProvPortBindingDefaultsRemoteNodeIp_Type = IpAddress
_DeployProvPortBindingDefaultsRemoteNodeIp_Object = MibTableColumn
deployProvPortBindingDefaultsRemoteNodeIp = _DeployProvPortBindingDefaultsRemoteNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 7),
    _DeployProvPortBindingDefaultsRemoteNodeIp_Type()
)
deployProvPortBindingDefaultsRemoteNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsRemoteNodeIp.setStatus("current")
_DeployProvPortBindingDefaultsRemoteScn_Type = IpAddress
_DeployProvPortBindingDefaultsRemoteScn_Object = MibTableColumn
deployProvPortBindingDefaultsRemoteScn = _DeployProvPortBindingDefaultsRemoteScn_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 8),
    _DeployProvPortBindingDefaultsRemoteScn_Type()
)
deployProvPortBindingDefaultsRemoteScn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsRemoteScn.setStatus("current")
_DeployProvPortBindingDefaultsRemoteScPc_Type = IpAddress
_DeployProvPortBindingDefaultsRemoteScPc_Object = MibTableColumn
deployProvPortBindingDefaultsRemoteScPc = _DeployProvPortBindingDefaultsRemoteScPc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 9),
    _DeployProvPortBindingDefaultsRemoteScPc_Type()
)
deployProvPortBindingDefaultsRemoteScPc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsRemoteScPc.setStatus("current")
_DeployProvPortBindingDefaultsLayer_Type = FspR7PacketsLayer
_DeployProvPortBindingDefaultsLayer_Object = MibTableColumn
deployProvPortBindingDefaultsLayer = _DeployProvPortBindingDefaultsLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 78, 1, 10),
    _DeployProvPortBindingDefaultsLayer_Type()
)
deployProvPortBindingDefaultsLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingDefaultsLayer.setStatus("current")
_DeployProvPortBindingLifAidCapsTable_Object = MibTable
deployProvPortBindingLifAidCapsTable = _DeployProvPortBindingLifAidCapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 79)
)
if mibBuilder.loadTexts:
    deployProvPortBindingLifAidCapsTable.setStatus("current")
_DeployProvPortBindingLifAidCapsEntry_Object = MibTableRow
deployProvPortBindingLifAidCapsEntry = _DeployProvPortBindingLifAidCapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 79, 1)
)
deployProvPortBindingLifAidCapsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneWdmEntityIndex"),
    (0, "FspR7-MIB", "deployProvPortBindingLifAidCapsIndex"),
)
if mibBuilder.loadTexts:
    deployProvPortBindingLifAidCapsEntry.setStatus("current")
_DeployProvPortBindingLifAidCapsIndex_Type = EntityIndex
_DeployProvPortBindingLifAidCapsIndex_Object = MibTableColumn
deployProvPortBindingLifAidCapsIndex = _DeployProvPortBindingLifAidCapsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 79, 1, 1),
    _DeployProvPortBindingLifAidCapsIndex_Type()
)
deployProvPortBindingLifAidCapsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPortBindingLifAidCapsIndex.setStatus("current")
_UnusedOtnTunnelIndex_Type = Unsigned32
_UnusedOtnTunnelIndex_Object = MibScalar
unusedOtnTunnelIndex = _UnusedOtnTunnelIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 95),
    _UnusedOtnTunnelIndex_Type()
)
unusedOtnTunnelIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unusedOtnTunnelIndex.setStatus("current")
_UnusedOtnPathIndex_Type = Unsigned32
_UnusedOtnPathIndex_Object = MibScalar
unusedOtnPathIndex = _UnusedOtnPathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 96),
    _UnusedOtnPathIndex_Type()
)
unusedOtnPathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    unusedOtnPathIndex.setStatus("current")
_DeployProvControlPlaneOtnTable_Object = MibTable
deployProvControlPlaneOtnTable = _DeployProvControlPlaneOtnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnTable.setStatus("current")
_DeployProvControlPlaneOtnEntry_Object = MibTableRow
deployProvControlPlaneOtnEntry = _DeployProvControlPlaneOtnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1)
)
deployProvControlPlaneOtnEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnEntry.setStatus("current")
_DeployProvControlPlaneOtnRowStatus_Type = RowStatus
_DeployProvControlPlaneOtnRowStatus_Object = MibTableColumn
deployProvControlPlaneOtnRowStatus = _DeployProvControlPlaneOtnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 1),
    _DeployProvControlPlaneOtnRowStatus_Type()
)
deployProvControlPlaneOtnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRowStatus.setStatus("current")
_DeployProvControlPlaneOtnCtmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCtmConfigFlag = _DeployProvControlPlaneOtnCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 2),
    _DeployProvControlPlaneOtnCtmConfigFlag_Type()
)
deployProvControlPlaneOtnCtmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCtmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCtmTraceDetail = _DeployProvControlPlaneOtnCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 3),
    _DeployProvControlPlaneOtnCtmTraceDetail_Type()
)
deployProvControlPlaneOtnCtmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCtmSetupTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCtmSetupTimeout = _DeployProvControlPlaneOtnCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 4),
    _DeployProvControlPlaneOtnCtmSetupTimeout_Type()
)
deployProvControlPlaneOtnCtmSetupTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneOtnCtmShutdownTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCtmShutdownTimeout = _DeployProvControlPlaneOtnCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 5),
    _DeployProvControlPlaneOtnCtmShutdownTimeout_Type()
)
deployProvControlPlaneOtnCtmShutdownTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneOtnCtmRetryWait_Type = Unsigned32
_DeployProvControlPlaneOtnCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneOtnCtmRetryWait = _DeployProvControlPlaneOtnCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 6),
    _DeployProvControlPlaneOtnCtmRetryWait_Type()
)
deployProvControlPlaneOtnCtmRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmRetryWait.setUnits("s")
_DeployProvControlPlaneOtnCtmRetryWaitMultiplier_Type = Unsigned32
_DeployProvControlPlaneOtnCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneOtnCtmRetryWaitMultiplier = _DeployProvControlPlaneOtnCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 7),
    _DeployProvControlPlaneOtnCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneOtnCtmRetryWaitMultiplier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneOtnCtmMaximumRetryWait_Type = Unsigned32
_DeployProvControlPlaneOtnCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneOtnCtmMaximumRetryWait = _DeployProvControlPlaneOtnCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 8),
    _DeployProvControlPlaneOtnCtmMaximumRetryWait_Type()
)
deployProvControlPlaneOtnCtmMaximumRetryWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneOtnCtmMaximumRetryNumber_Type = Unsigned32
_DeployProvControlPlaneOtnCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneOtnCtmMaximumRetryNumber = _DeployProvControlPlaneOtnCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 9),
    _DeployProvControlPlaneOtnCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneOtnCtmMaximumRetryNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneOtnRaConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnRaConfigFlag = _DeployProvControlPlaneOtnRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 10),
    _DeployProvControlPlaneOtnRaConfigFlag_Type()
)
deployProvControlPlaneOtnRaConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRaConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnRaTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnRaTraceDetail = _DeployProvControlPlaneOtnRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 11),
    _DeployProvControlPlaneOtnRaTraceDetail_Type()
)
deployProvControlPlaneOtnRaTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRaTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnRaAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneOtnRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneOtnRaAlarmActivationTime = _DeployProvControlPlaneOtnRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 12),
    _DeployProvControlPlaneOtnRaAlarmActivationTime_Type()
)
deployProvControlPlaneOtnRaAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneOtnCmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCmConfigFlag = _DeployProvControlPlaneOtnCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 13),
    _DeployProvControlPlaneOtnCmConfigFlag_Type()
)
deployProvControlPlaneOtnCmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCmTraceDetail = _DeployProvControlPlaneOtnCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 14),
    _DeployProvControlPlaneOtnCmTraceDetail_Type()
)
deployProvControlPlaneOtnCmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCmAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneOtnCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneOtnCmAlarmActivationTime = _DeployProvControlPlaneOtnCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 15),
    _DeployProvControlPlaneOtnCmAlarmActivationTime_Type()
)
deployProvControlPlaneOtnCmAlarmActivationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneOtnCmFisFrsTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCmFisFrsTimeout = _DeployProvControlPlaneOtnCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 16),
    _DeployProvControlPlaneOtnCmFisFrsTimeout_Type()
)
deployProvControlPlaneOtnCmFisFrsTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneOtnCmCrankBackTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCmCrankBackTimeout = _DeployProvControlPlaneOtnCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 17),
    _DeployProvControlPlaneOtnCmCrankBackTimeout_Type()
)
deployProvControlPlaneOtnCmCrankBackTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneOtnCdbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCdbConfigFlag = _DeployProvControlPlaneOtnCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 18),
    _DeployProvControlPlaneOtnCdbConfigFlag_Type()
)
deployProvControlPlaneOtnCdbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCdbDetail_Type = Unsigned32
_DeployProvControlPlaneOtnCdbDetail_Object = MibTableColumn
deployProvControlPlaneOtnCdbDetail = _DeployProvControlPlaneOtnCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 19),
    _DeployProvControlPlaneOtnCdbDetail_Type()
)
deployProvControlPlaneOtnCdbDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCdbDetail.setStatus("current")
_DeployProvControlPlaneOtnCdbMaxSize_Type = Unsigned32
_DeployProvControlPlaneOtnCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnCdbMaxSize = _DeployProvControlPlaneOtnCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 20),
    _DeployProvControlPlaneOtnCdbMaxSize_Type()
)
deployProvControlPlaneOtnCdbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCdbMaxSize.setStatus("current")
_DeployProvControlPlaneOtnRsvpMaxExpRestartTime_Type = Counter64String
_DeployProvControlPlaneOtnRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneOtnRsvpMaxExpRestartTime = _DeployProvControlPlaneOtnRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 21),
    _DeployProvControlPlaneOtnRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneOtnRsvpMaxExpRestartTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneOtnRsvpMaxExpRecoveryTime_Type = Unsigned32
_DeployProvControlPlaneOtnRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneOtnRsvpMaxExpRecoveryTime = _DeployProvControlPlaneOtnRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 22),
    _DeployProvControlPlaneOtnRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneOtnRsvpMaxExpRecoveryTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneOtnRsvpConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnRsvpConfigFlag = _DeployProvControlPlaneOtnRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 23),
    _DeployProvControlPlaneOtnRsvpConfigFlag_Type()
)
deployProvControlPlaneOtnRsvpConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnTedbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnTedbConfigFlag = _DeployProvControlPlaneOtnTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 24),
    _DeployProvControlPlaneOtnTedbConfigFlag_Type()
)
deployProvControlPlaneOtnTedbConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnTedbTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnTedbTraceDetail = _DeployProvControlPlaneOtnTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 25),
    _DeployProvControlPlaneOtnTedbTraceDetail_Type()
)
deployProvControlPlaneOtnTedbTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnTedbMaxSize_Type = Unsigned32
_DeployProvControlPlaneOtnTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnTedbMaxSize = _DeployProvControlPlaneOtnTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 26),
    _DeployProvControlPlaneOtnTedbMaxSize_Type()
)
deployProvControlPlaneOtnTedbMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnTedbMaxSize.setStatus("current")
_DeployProvControlPlaneOtnTedbRouterId_Type = IpAddress
_DeployProvControlPlaneOtnTedbRouterId_Object = MibTableColumn
deployProvControlPlaneOtnTedbRouterId = _DeployProvControlPlaneOtnTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 27),
    _DeployProvControlPlaneOtnTedbRouterId_Type()
)
deployProvControlPlaneOtnTedbRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnTedbRouterId.setStatus("current")
_DeployProvControlPlaneOtnTedbMinAdvertWait_Type = Unsigned32
_DeployProvControlPlaneOtnTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneOtnTedbMinAdvertWait = _DeployProvControlPlaneOtnTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 28),
    _DeployProvControlPlaneOtnTedbMinAdvertWait_Type()
)
deployProvControlPlaneOtnTedbMinAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneOtnNaasConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnNaasConfigFlag = _DeployProvControlPlaneOtnNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 29),
    _DeployProvControlPlaneOtnNaasConfigFlag_Type()
)
deployProvControlPlaneOtnNaasConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnNaasTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnNaasTraceDetail = _DeployProvControlPlaneOtnNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 30),
    _DeployProvControlPlaneOtnNaasTraceDetail_Type()
)
deployProvControlPlaneOtnNaasTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnNaasMaxSize_Type = Unsigned32
_DeployProvControlPlaneOtnNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnNaasMaxSize = _DeployProvControlPlaneOtnNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 31),
    _DeployProvControlPlaneOtnNaasMaxSize_Type()
)
deployProvControlPlaneOtnNaasMaxSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnNaasMaxSize.setStatus("current")
_DeployProvControlPlaneOtnNaasAdvertWait_Type = Unsigned32
_DeployProvControlPlaneOtnNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneOtnNaasAdvertWait = _DeployProvControlPlaneOtnNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 32),
    _DeployProvControlPlaneOtnNaasAdvertWait_Type()
)
deployProvControlPlaneOtnNaasAdvertWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneOtnPcConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnPcConfigFlag = _DeployProvControlPlaneOtnPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 33),
    _DeployProvControlPlaneOtnPcConfigFlag_Type()
)
deployProvControlPlaneOtnPcConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnPcConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnPcTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnPcTraceDetail = _DeployProvControlPlaneOtnPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 34),
    _DeployProvControlPlaneOtnPcTraceDetail_Type()
)
deployProvControlPlaneOtnPcTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnPcTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCdConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCdConfigFlag = _DeployProvControlPlaneOtnCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 35),
    _DeployProvControlPlaneOtnCdConfigFlag_Type()
)
deployProvControlPlaneOtnCdConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCdConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCdTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCdTraceDetail = _DeployProvControlPlaneOtnCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 36),
    _DeployProvControlPlaneOtnCdTraceDetail_Type()
)
deployProvControlPlaneOtnCdTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCdTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCdResyncTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCdResyncTimeout = _DeployProvControlPlaneOtnCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 37),
    _DeployProvControlPlaneOtnCdResyncTimeout_Type()
)
deployProvControlPlaneOtnCdResyncTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneOtnRmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnRmConfigFlag = _DeployProvControlPlaneOtnRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 38),
    _DeployProvControlPlaneOtnRmConfigFlag_Type()
)
deployProvControlPlaneOtnRmConfigFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnRmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnRmTraceDetail = _DeployProvControlPlaneOtnRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 39),
    _DeployProvControlPlaneOtnRmTraceDetail_Type()
)
deployProvControlPlaneOtnRmTraceDetail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnRmTraceTarget_Type = Unsigned32
_DeployProvControlPlaneOtnRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneOtnRmTraceTarget = _DeployProvControlPlaneOtnRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 40),
    _DeployProvControlPlaneOtnRmTraceTarget_Type()
)
deployProvControlPlaneOtnRmTraceTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnRmTraceTarget.setStatus("current")
_DeployProvControlPlaneOtnNodeNameSyntax_Type = FspR7NodeId
_DeployProvControlPlaneOtnNodeNameSyntax_Object = MibTableColumn
deployProvControlPlaneOtnNodeNameSyntax = _DeployProvControlPlaneOtnNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 100, 1, 41),
    _DeployProvControlPlaneOtnNodeNameSyntax_Type()
)
deployProvControlPlaneOtnNodeNameSyntax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnNodeNameSyntax.setStatus("deprecated")
_DeployProvControlPlaneOtnCapTable_Object = MibTable
deployProvControlPlaneOtnCapTable = _DeployProvControlPlaneOtnCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapTable.setStatus("current")
_DeployProvControlPlaneOtnCapEntry_Object = MibTableRow
deployProvControlPlaneOtnCapEntry = _DeployProvControlPlaneOtnCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1)
)
deployProvControlPlaneOtnCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapEntry.setStatus("current")
_DeployProvControlPlaneOtnCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvControlPlaneOtnCapRowStatus_Object = MibTableColumn
deployProvControlPlaneOtnCapRowStatus = _DeployProvControlPlaneOtnCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 1),
    _DeployProvControlPlaneOtnCapRowStatus_Type()
)
deployProvControlPlaneOtnCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRowStatus.setStatus("current")
_DeployProvControlPlaneOtnCapCtmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmConfigFlag = _DeployProvControlPlaneOtnCapCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 2),
    _DeployProvControlPlaneOtnCapCtmConfigFlag_Type()
)
deployProvControlPlaneOtnCapCtmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapCtmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmTraceDetail = _DeployProvControlPlaneOtnCapCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 3),
    _DeployProvControlPlaneOtnCapCtmTraceDetail_Type()
)
deployProvControlPlaneOtnCapCtmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapCtmSetupTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmSetupTimeout = _DeployProvControlPlaneOtnCapCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 4),
    _DeployProvControlPlaneOtnCapCtmSetupTimeout_Type()
)
deployProvControlPlaneOtnCapCtmSetupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneOtnCapCtmShutdownTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmShutdownTimeout = _DeployProvControlPlaneOtnCapCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 5),
    _DeployProvControlPlaneOtnCapCtmShutdownTimeout_Type()
)
deployProvControlPlaneOtnCapCtmShutdownTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneOtnCapCtmRetryWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmRetryWait = _DeployProvControlPlaneOtnCapCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 6),
    _DeployProvControlPlaneOtnCapCtmRetryWait_Type()
)
deployProvControlPlaneOtnCapCtmRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmRetryWait.setUnits("s")
_DeployProvControlPlaneOtnCapCtmRetryWaitMultiplier_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmRetryWaitMultiplier = _DeployProvControlPlaneOtnCapCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 7),
    _DeployProvControlPlaneOtnCapCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneOtnCapCtmRetryWaitMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneOtnCapCtmMaximumRetryWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmMaximumRetryWait = _DeployProvControlPlaneOtnCapCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 8),
    _DeployProvControlPlaneOtnCapCtmMaximumRetryWait_Type()
)
deployProvControlPlaneOtnCapCtmMaximumRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneOtnCapCtmMaximumRetryNumber_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneOtnCapCtmMaximumRetryNumber = _DeployProvControlPlaneOtnCapCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 9),
    _DeployProvControlPlaneOtnCapCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneOtnCapCtmMaximumRetryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneOtnCapRaConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapRaConfigFlag = _DeployProvControlPlaneOtnCapRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 10),
    _DeployProvControlPlaneOtnCapRaConfigFlag_Type()
)
deployProvControlPlaneOtnCapRaConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRaConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapRaTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapRaTraceDetail = _DeployProvControlPlaneOtnCapRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 11),
    _DeployProvControlPlaneOtnCapRaTraceDetail_Type()
)
deployProvControlPlaneOtnCapRaTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRaTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapRaAlarmActivationTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneOtnCapRaAlarmActivationTime = _DeployProvControlPlaneOtnCapRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 12),
    _DeployProvControlPlaneOtnCapRaAlarmActivationTime_Type()
)
deployProvControlPlaneOtnCapRaAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneOtnCapCmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapCmConfigFlag = _DeployProvControlPlaneOtnCapCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 13),
    _DeployProvControlPlaneOtnCapCmConfigFlag_Type()
)
deployProvControlPlaneOtnCapCmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapCmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapCmTraceDetail = _DeployProvControlPlaneOtnCapCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 14),
    _DeployProvControlPlaneOtnCapCmTraceDetail_Type()
)
deployProvControlPlaneOtnCapCmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapCmAlarmActivationTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneOtnCapCmAlarmActivationTime = _DeployProvControlPlaneOtnCapCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 15),
    _DeployProvControlPlaneOtnCapCmAlarmActivationTime_Type()
)
deployProvControlPlaneOtnCapCmAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneOtnCapCmFisFrsTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCapCmFisFrsTimeout = _DeployProvControlPlaneOtnCapCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 16),
    _DeployProvControlPlaneOtnCapCmFisFrsTimeout_Type()
)
deployProvControlPlaneOtnCapCmFisFrsTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneOtnCapCmCrankBackTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCapCmCrankBackTimeout = _DeployProvControlPlaneOtnCapCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 17),
    _DeployProvControlPlaneOtnCapCmCrankBackTimeout_Type()
)
deployProvControlPlaneOtnCapCmCrankBackTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneOtnCapCdbConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapCdbConfigFlag = _DeployProvControlPlaneOtnCapCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 18),
    _DeployProvControlPlaneOtnCapCdbConfigFlag_Type()
)
deployProvControlPlaneOtnCapCdbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapCdbDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCdbDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapCdbDetail = _DeployProvControlPlaneOtnCapCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 19),
    _DeployProvControlPlaneOtnCapCdbDetail_Type()
)
deployProvControlPlaneOtnCapCdbDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCdbDetail.setStatus("current")
_DeployProvControlPlaneOtnCapCdbMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnCapCdbMaxSize = _DeployProvControlPlaneOtnCapCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 20),
    _DeployProvControlPlaneOtnCapCdbMaxSize_Type()
)
deployProvControlPlaneOtnCapCdbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCdbMaxSize.setStatus("current")
_DeployProvControlPlaneOtnCapRsvpMaxExpRestartTime_Type = Counter64StringCaps
_DeployProvControlPlaneOtnCapRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneOtnCapRsvpMaxExpRestartTime = _DeployProvControlPlaneOtnCapRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 21),
    _DeployProvControlPlaneOtnCapRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneOtnCapRsvpMaxExpRestartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime = _DeployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 22),
    _DeployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneOtnCapRsvpConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapRsvpConfigFlag = _DeployProvControlPlaneOtnCapRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 23),
    _DeployProvControlPlaneOtnCapRsvpConfigFlag_Type()
)
deployProvControlPlaneOtnCapRsvpConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapTedbConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapTedbConfigFlag = _DeployProvControlPlaneOtnCapTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 24),
    _DeployProvControlPlaneOtnCapTedbConfigFlag_Type()
)
deployProvControlPlaneOtnCapTedbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapTedbTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapTedbTraceDetail = _DeployProvControlPlaneOtnCapTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 25),
    _DeployProvControlPlaneOtnCapTedbTraceDetail_Type()
)
deployProvControlPlaneOtnCapTedbTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapTedbMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnCapTedbMaxSize = _DeployProvControlPlaneOtnCapTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 26),
    _DeployProvControlPlaneOtnCapTedbMaxSize_Type()
)
deployProvControlPlaneOtnCapTedbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapTedbMaxSize.setStatus("current")
_DeployProvControlPlaneOtnCapTedbRouterId_Type = FspR7YesNo
_DeployProvControlPlaneOtnCapTedbRouterId_Object = MibTableColumn
deployProvControlPlaneOtnCapTedbRouterId = _DeployProvControlPlaneOtnCapTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 27),
    _DeployProvControlPlaneOtnCapTedbRouterId_Type()
)
deployProvControlPlaneOtnCapTedbRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapTedbRouterId.setStatus("current")
_DeployProvControlPlaneOtnCapTedbMinAdvertWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneOtnCapTedbMinAdvertWait = _DeployProvControlPlaneOtnCapTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 28),
    _DeployProvControlPlaneOtnCapTedbMinAdvertWait_Type()
)
deployProvControlPlaneOtnCapTedbMinAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneOtnCapNaasConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapNaasConfigFlag = _DeployProvControlPlaneOtnCapNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 29),
    _DeployProvControlPlaneOtnCapNaasConfigFlag_Type()
)
deployProvControlPlaneOtnCapNaasConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapNaasTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapNaasTraceDetail = _DeployProvControlPlaneOtnCapNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 30),
    _DeployProvControlPlaneOtnCapNaasTraceDetail_Type()
)
deployProvControlPlaneOtnCapNaasTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapNaasMaxSize_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnCapNaasMaxSize = _DeployProvControlPlaneOtnCapNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 31),
    _DeployProvControlPlaneOtnCapNaasMaxSize_Type()
)
deployProvControlPlaneOtnCapNaasMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapNaasMaxSize.setStatus("current")
_DeployProvControlPlaneOtnCapNaasAdvertWait_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneOtnCapNaasAdvertWait = _DeployProvControlPlaneOtnCapNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 32),
    _DeployProvControlPlaneOtnCapNaasAdvertWait_Type()
)
deployProvControlPlaneOtnCapNaasAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneOtnCapPcConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapPcConfigFlag = _DeployProvControlPlaneOtnCapPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 33),
    _DeployProvControlPlaneOtnCapPcConfigFlag_Type()
)
deployProvControlPlaneOtnCapPcConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapPcConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapPcTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapPcTraceDetail = _DeployProvControlPlaneOtnCapPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 34),
    _DeployProvControlPlaneOtnCapPcTraceDetail_Type()
)
deployProvControlPlaneOtnCapPcTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapPcTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapCdConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapCdConfigFlag = _DeployProvControlPlaneOtnCapCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 35),
    _DeployProvControlPlaneOtnCapCdConfigFlag_Type()
)
deployProvControlPlaneOtnCapCdConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCdConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapCdTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapCdTraceDetail = _DeployProvControlPlaneOtnCapCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 36),
    _DeployProvControlPlaneOtnCapCdTraceDetail_Type()
)
deployProvControlPlaneOtnCapCdTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCdTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapCdResyncTimeout_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneOtnCapCdResyncTimeout = _DeployProvControlPlaneOtnCapCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 37),
    _DeployProvControlPlaneOtnCapCdResyncTimeout_Type()
)
deployProvControlPlaneOtnCapCdResyncTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneOtnCapRmConfigFlag_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnCapRmConfigFlag = _DeployProvControlPlaneOtnCapRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 38),
    _DeployProvControlPlaneOtnCapRmConfigFlag_Type()
)
deployProvControlPlaneOtnCapRmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnCapRmTraceDetail_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnCapRmTraceDetail = _DeployProvControlPlaneOtnCapRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 39),
    _DeployProvControlPlaneOtnCapRmTraceDetail_Type()
)
deployProvControlPlaneOtnCapRmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnCapRmTraceTarget_Type = FspR7Unsigned32Caps
_DeployProvControlPlaneOtnCapRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneOtnCapRmTraceTarget = _DeployProvControlPlaneOtnCapRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 40),
    _DeployProvControlPlaneOtnCapRmTraceTarget_Type()
)
deployProvControlPlaneOtnCapRmTraceTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapRmTraceTarget.setStatus("current")
_DeployProvControlPlaneOtnCapNodeNameSyntax_Type = FspR7NodeIdCaps
_DeployProvControlPlaneOtnCapNodeNameSyntax_Object = MibTableColumn
deployProvControlPlaneOtnCapNodeNameSyntax = _DeployProvControlPlaneOtnCapNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 101, 1, 41),
    _DeployProvControlPlaneOtnCapNodeNameSyntax_Type()
)
deployProvControlPlaneOtnCapNodeNameSyntax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnCapNodeNameSyntax.setStatus("deprecated")
_DeployProvControlPlaneOtnDefaultsTable_Object = MibTable
deployProvControlPlaneOtnDefaultsTable = _DeployProvControlPlaneOtnDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102)
)
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsTable.setStatus("current")
_DeployProvControlPlaneOtnDefaultsEntry_Object = MibTableRow
deployProvControlPlaneOtnDefaultsEntry = _DeployProvControlPlaneOtnDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1)
)
deployProvControlPlaneOtnDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsEntry.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRowStatus_Type = RowStatus
_DeployProvControlPlaneOtnDefaultsRowStatus_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRowStatus = _DeployProvControlPlaneOtnDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 1),
    _DeployProvControlPlaneOtnDefaultsRowStatus_Type()
)
deployProvControlPlaneOtnDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRowStatus.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCtmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmConfigFlag = _DeployProvControlPlaneOtnDefaultsCtmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 2),
    _DeployProvControlPlaneOtnDefaultsCtmConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsCtmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCtmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmTraceDetail = _DeployProvControlPlaneOtnDefaultsCtmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 3),
    _DeployProvControlPlaneOtnDefaultsCtmTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsCtmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCtmSetupTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmSetupTimeout_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmSetupTimeout = _DeployProvControlPlaneOtnDefaultsCtmSetupTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 4),
    _DeployProvControlPlaneOtnDefaultsCtmSetupTimeout_Type()
)
deployProvControlPlaneOtnDefaultsCtmSetupTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmSetupTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmSetupTimeout.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCtmShutdownTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmShutdownTimeout_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmShutdownTimeout = _DeployProvControlPlaneOtnDefaultsCtmShutdownTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 5),
    _DeployProvControlPlaneOtnDefaultsCtmShutdownTimeout_Type()
)
deployProvControlPlaneOtnDefaultsCtmShutdownTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmShutdownTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmShutdownTimeout.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCtmRetryWait_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmRetryWait_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmRetryWait = _DeployProvControlPlaneOtnDefaultsCtmRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 6),
    _DeployProvControlPlaneOtnDefaultsCtmRetryWait_Type()
)
deployProvControlPlaneOtnDefaultsCtmRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmRetryWait.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier = _DeployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 7),
    _DeployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier_Type()
)
deployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCtmMaximumRetryWait_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmMaximumRetryWait_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmMaximumRetryWait = _DeployProvControlPlaneOtnDefaultsCtmMaximumRetryWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 8),
    _DeployProvControlPlaneOtnDefaultsCtmMaximumRetryWait_Type()
)
deployProvControlPlaneOtnDefaultsCtmMaximumRetryWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmMaximumRetryWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmMaximumRetryWait.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber = _DeployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 9),
    _DeployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber_Type()
)
deployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRaConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRaConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRaConfigFlag = _DeployProvControlPlaneOtnDefaultsRaConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 10),
    _DeployProvControlPlaneOtnDefaultsRaConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsRaConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRaConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRaTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRaTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRaTraceDetail = _DeployProvControlPlaneOtnDefaultsRaTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 11),
    _DeployProvControlPlaneOtnDefaultsRaTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsRaTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRaTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRaAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRaAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRaAlarmActivationTime = _DeployProvControlPlaneOtnDefaultsRaAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 12),
    _DeployProvControlPlaneOtnDefaultsRaAlarmActivationTime_Type()
)
deployProvControlPlaneOtnDefaultsRaAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRaAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRaAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCmConfigFlag = _DeployProvControlPlaneOtnDefaultsCmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 13),
    _DeployProvControlPlaneOtnDefaultsCmConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsCmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCmTraceDetail = _DeployProvControlPlaneOtnDefaultsCmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 14),
    _DeployProvControlPlaneOtnDefaultsCmTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsCmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCmAlarmActivationTime_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCmAlarmActivationTime_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCmAlarmActivationTime = _DeployProvControlPlaneOtnDefaultsCmAlarmActivationTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 15),
    _DeployProvControlPlaneOtnDefaultsCmAlarmActivationTime_Type()
)
deployProvControlPlaneOtnDefaultsCmAlarmActivationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmAlarmActivationTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmAlarmActivationTime.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCmFisFrsTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCmFisFrsTimeout_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCmFisFrsTimeout = _DeployProvControlPlaneOtnDefaultsCmFisFrsTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 16),
    _DeployProvControlPlaneOtnDefaultsCmFisFrsTimeout_Type()
)
deployProvControlPlaneOtnDefaultsCmFisFrsTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmFisFrsTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmFisFrsTimeout.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCmCrankBackTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCmCrankBackTimeout_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCmCrankBackTimeout = _DeployProvControlPlaneOtnDefaultsCmCrankBackTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 17),
    _DeployProvControlPlaneOtnDefaultsCmCrankBackTimeout_Type()
)
deployProvControlPlaneOtnDefaultsCmCrankBackTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmCrankBackTimeout.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCmCrankBackTimeout.setUnits("s")
_DeployProvControlPlaneOtnDefaultsCdbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCdbConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCdbConfigFlag = _DeployProvControlPlaneOtnDefaultsCdbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 18),
    _DeployProvControlPlaneOtnDefaultsCdbConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsCdbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCdbConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCdbDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCdbDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCdbDetail = _DeployProvControlPlaneOtnDefaultsCdbDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 19),
    _DeployProvControlPlaneOtnDefaultsCdbDetail_Type()
)
deployProvControlPlaneOtnDefaultsCdbDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCdbDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCdbMaxSize_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCdbMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCdbMaxSize = _DeployProvControlPlaneOtnDefaultsCdbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 20),
    _DeployProvControlPlaneOtnDefaultsCdbMaxSize_Type()
)
deployProvControlPlaneOtnDefaultsCdbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCdbMaxSize.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime_Type = Counter64String
_DeployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime = _DeployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 21),
    _DeployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime_Type()
)
deployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime.setUnits("ms")
_DeployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime = _DeployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 22),
    _DeployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime_Type()
)
deployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime.setUnits("ms")
_DeployProvControlPlaneOtnDefaultsRsvpConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRsvpConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRsvpConfigFlag = _DeployProvControlPlaneOtnDefaultsRsvpConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 23),
    _DeployProvControlPlaneOtnDefaultsRsvpConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsRsvpConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRsvpConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsTedbConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsTedbConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsTedbConfigFlag = _DeployProvControlPlaneOtnDefaultsTedbConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 24),
    _DeployProvControlPlaneOtnDefaultsTedbConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsTedbConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsTedbConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsTedbTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsTedbTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsTedbTraceDetail = _DeployProvControlPlaneOtnDefaultsTedbTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 25),
    _DeployProvControlPlaneOtnDefaultsTedbTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsTedbTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsTedbTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsTedbMaxSize_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsTedbMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsTedbMaxSize = _DeployProvControlPlaneOtnDefaultsTedbMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 26),
    _DeployProvControlPlaneOtnDefaultsTedbMaxSize_Type()
)
deployProvControlPlaneOtnDefaultsTedbMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsTedbMaxSize.setStatus("current")
_DeployProvControlPlaneOtnDefaultsTedbRouterId_Type = IpAddress
_DeployProvControlPlaneOtnDefaultsTedbRouterId_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsTedbRouterId = _DeployProvControlPlaneOtnDefaultsTedbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 27),
    _DeployProvControlPlaneOtnDefaultsTedbRouterId_Type()
)
deployProvControlPlaneOtnDefaultsTedbRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsTedbRouterId.setStatus("current")
_DeployProvControlPlaneOtnDefaultsTedbMinAdvertWait_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsTedbMinAdvertWait_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsTedbMinAdvertWait = _DeployProvControlPlaneOtnDefaultsTedbMinAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 28),
    _DeployProvControlPlaneOtnDefaultsTedbMinAdvertWait_Type()
)
deployProvControlPlaneOtnDefaultsTedbMinAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsTedbMinAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsTedbMinAdvertWait.setUnits("s")
_DeployProvControlPlaneOtnDefaultsNaasConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsNaasConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsNaasConfigFlag = _DeployProvControlPlaneOtnDefaultsNaasConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 29),
    _DeployProvControlPlaneOtnDefaultsNaasConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsNaasConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsNaasConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsNaasTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsNaasTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsNaasTraceDetail = _DeployProvControlPlaneOtnDefaultsNaasTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 30),
    _DeployProvControlPlaneOtnDefaultsNaasTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsNaasTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsNaasTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsNaasMaxSize_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsNaasMaxSize_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsNaasMaxSize = _DeployProvControlPlaneOtnDefaultsNaasMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 31),
    _DeployProvControlPlaneOtnDefaultsNaasMaxSize_Type()
)
deployProvControlPlaneOtnDefaultsNaasMaxSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsNaasMaxSize.setStatus("current")
_DeployProvControlPlaneOtnDefaultsNaasAdvertWait_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsNaasAdvertWait_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsNaasAdvertWait = _DeployProvControlPlaneOtnDefaultsNaasAdvertWait_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 32),
    _DeployProvControlPlaneOtnDefaultsNaasAdvertWait_Type()
)
deployProvControlPlaneOtnDefaultsNaasAdvertWait.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsNaasAdvertWait.setStatus("current")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsNaasAdvertWait.setUnits("s")
_DeployProvControlPlaneOtnDefaultsPcConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsPcConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsPcConfigFlag = _DeployProvControlPlaneOtnDefaultsPcConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 33),
    _DeployProvControlPlaneOtnDefaultsPcConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsPcConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsPcConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsPcTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsPcTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsPcTraceDetail = _DeployProvControlPlaneOtnDefaultsPcTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 34),
    _DeployProvControlPlaneOtnDefaultsPcTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsPcTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsPcTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCdConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCdConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCdConfigFlag = _DeployProvControlPlaneOtnDefaultsCdConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 35),
    _DeployProvControlPlaneOtnDefaultsCdConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsCdConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCdConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCdTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCdTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCdTraceDetail = _DeployProvControlPlaneOtnDefaultsCdTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 36),
    _DeployProvControlPlaneOtnDefaultsCdTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsCdTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCdTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsCdResyncTimeout_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsCdResyncTimeout_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsCdResyncTimeout = _DeployProvControlPlaneOtnDefaultsCdResyncTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 37),
    _DeployProvControlPlaneOtnDefaultsCdResyncTimeout_Type()
)
deployProvControlPlaneOtnDefaultsCdResyncTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsCdResyncTimeout.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRmConfigFlag_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRmConfigFlag_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRmConfigFlag = _DeployProvControlPlaneOtnDefaultsRmConfigFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 38),
    _DeployProvControlPlaneOtnDefaultsRmConfigFlag_Type()
)
deployProvControlPlaneOtnDefaultsRmConfigFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRmConfigFlag.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRmTraceDetail_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRmTraceDetail_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRmTraceDetail = _DeployProvControlPlaneOtnDefaultsRmTraceDetail_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 39),
    _DeployProvControlPlaneOtnDefaultsRmTraceDetail_Type()
)
deployProvControlPlaneOtnDefaultsRmTraceDetail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRmTraceDetail.setStatus("current")
_DeployProvControlPlaneOtnDefaultsRmTraceTarget_Type = Unsigned32
_DeployProvControlPlaneOtnDefaultsRmTraceTarget_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsRmTraceTarget = _DeployProvControlPlaneOtnDefaultsRmTraceTarget_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 40),
    _DeployProvControlPlaneOtnDefaultsRmTraceTarget_Type()
)
deployProvControlPlaneOtnDefaultsRmTraceTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsRmTraceTarget.setStatus("current")
_DeployProvControlPlaneOtnDefaultsNodeNameSyntax_Type = FspR7NodeId
_DeployProvControlPlaneOtnDefaultsNodeNameSyntax_Object = MibTableColumn
deployProvControlPlaneOtnDefaultsNodeNameSyntax = _DeployProvControlPlaneOtnDefaultsNodeNameSyntax_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 102, 1, 41),
    _DeployProvControlPlaneOtnDefaultsNodeNameSyntax_Type()
)
deployProvControlPlaneOtnDefaultsNodeNameSyntax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvControlPlaneOtnDefaultsNodeNameSyntax.setStatus("deprecated")
_DeployProvTunnelOtnTable_Object = MibTable
deployProvTunnelOtnTable = _DeployProvTunnelOtnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103)
)
if mibBuilder.loadTexts:
    deployProvTunnelOtnTable.setStatus("current")
_DeployProvTunnelOtnEntry_Object = MibTableRow
deployProvTunnelOtnEntry = _DeployProvTunnelOtnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1)
)
deployProvTunnelOtnEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelOtnEntry.setStatus("current")
_DeployProvTunnelOtnRowStatus_Type = RowStatus
_DeployProvTunnelOtnRowStatus_Object = MibTableColumn
deployProvTunnelOtnRowStatus = _DeployProvTunnelOtnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 1),
    _DeployProvTunnelOtnRowStatus_Type()
)
deployProvTunnelOtnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnRowStatus.setStatus("current")
_DeployProvTunnelOtnTunnelId_Type = SnmpAdminString
_DeployProvTunnelOtnTunnelId_Object = MibTableColumn
deployProvTunnelOtnTunnelId = _DeployProvTunnelOtnTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 2),
    _DeployProvTunnelOtnTunnelId_Type()
)
deployProvTunnelOtnTunnelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnTunnelId.setStatus("current")
_DeployProvTunnelOtnTunnelNo_Type = Unsigned32
_DeployProvTunnelOtnTunnelNo_Object = MibTableColumn
deployProvTunnelOtnTunnelNo = _DeployProvTunnelOtnTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 3),
    _DeployProvTunnelOtnTunnelNo_Type()
)
deployProvTunnelOtnTunnelNo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnTunnelNo.setStatus("current")
_DeployProvTunnelOtnAlias_Type = SnmpAdminString
_DeployProvTunnelOtnAlias_Object = MibTableColumn
deployProvTunnelOtnAlias = _DeployProvTunnelOtnAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 4),
    _DeployProvTunnelOtnAlias_Type()
)
deployProvTunnelOtnAlias.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnAlias.setStatus("current")
_DeployProvTunnelOtnTunnelType_Type = FspR7CpTunnelType
_DeployProvTunnelOtnTunnelType_Object = MibTableColumn
deployProvTunnelOtnTunnelType = _DeployProvTunnelOtnTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 5),
    _DeployProvTunnelOtnTunnelType_Type()
)
deployProvTunnelOtnTunnelType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnTunnelType.setStatus("current")
_DeployProvTunnelOtnToTid_Type = SnmpAdminString
_DeployProvTunnelOtnToTid_Object = MibTableColumn
deployProvTunnelOtnToTid = _DeployProvTunnelOtnToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 6),
    _DeployProvTunnelOtnToTid_Type()
)
deployProvTunnelOtnToTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnToTid.setStatus("current")
_DeployProvTunnelOtnToNodeIp_Type = IpAddress
_DeployProvTunnelOtnToNodeIp_Object = MibTableColumn
deployProvTunnelOtnToNodeIp = _DeployProvTunnelOtnToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 7),
    _DeployProvTunnelOtnToNodeIp_Type()
)
deployProvTunnelOtnToNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnToNodeIp.setStatus("current")
_DeployProvTunnelOtnFromAid_Type = EntityIndex
_DeployProvTunnelOtnFromAid_Object = MibTableColumn
deployProvTunnelOtnFromAid = _DeployProvTunnelOtnFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 8),
    _DeployProvTunnelOtnFromAid_Type()
)
deployProvTunnelOtnFromAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnFromAid.setStatus("current")
_DeployProvTunnelOtnToAid_Type = EntityIndex
_DeployProvTunnelOtnToAid_Object = MibTableColumn
deployProvTunnelOtnToAid = _DeployProvTunnelOtnToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 9),
    _DeployProvTunnelOtnToAid_Type()
)
deployProvTunnelOtnToAid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnToAid.setStatus("current")
_DeployProvTunnelOtnConnectionDirection_Type = FspR7Conn
_DeployProvTunnelOtnConnectionDirection_Object = MibTableColumn
deployProvTunnelOtnConnectionDirection = _DeployProvTunnelOtnConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 10),
    _DeployProvTunnelOtnConnectionDirection_Type()
)
deployProvTunnelOtnConnectionDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnConnectionDirection.setStatus("current")
_DeployProvTunnelOtnFacilityType_Type = FspR7InterfaceType
_DeployProvTunnelOtnFacilityType_Object = MibTableColumn
deployProvTunnelOtnFacilityType = _DeployProvTunnelOtnFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 11),
    _DeployProvTunnelOtnFacilityType_Type()
)
deployProvTunnelOtnFacilityType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnFacilityType.setStatus("current")
_DeployProvTunnelOtnProvisionedPaths_Type = SnmpAdminString
_DeployProvTunnelOtnProvisionedPaths_Object = MibTableColumn
deployProvTunnelOtnProvisionedPaths = _DeployProvTunnelOtnProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 12),
    _DeployProvTunnelOtnProvisionedPaths_Type()
)
deployProvTunnelOtnProvisionedPaths.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnProvisionedPaths.setStatus("current")
_DeployProvTunnelOtnProtectionType_Type = FspR7CpProtectionType
_DeployProvTunnelOtnProtectionType_Object = MibTableColumn
deployProvTunnelOtnProtectionType = _DeployProvTunnelOtnProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 13),
    _DeployProvTunnelOtnProtectionType_Type()
)
deployProvTunnelOtnProtectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnProtectionType.setStatus("current")
_DeployProvTunnelOtnPin_Type = FspR7CpPinning
_DeployProvTunnelOtnPin_Object = MibTableColumn
deployProvTunnelOtnPin = _DeployProvTunnelOtnPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 14),
    _DeployProvTunnelOtnPin_Type()
)
deployProvTunnelOtnPin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnPin.setStatus("current")
_DeployProvTunnelOtnRestorationType_Type = FspR7CpRestorationType
_DeployProvTunnelOtnRestorationType_Object = MibTableColumn
deployProvTunnelOtnRestorationType = _DeployProvTunnelOtnRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 15),
    _DeployProvTunnelOtnRestorationType_Type()
)
deployProvTunnelOtnRestorationType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnRestorationType.setStatus("current")
_DeployProvTunnelOtnMonitorEntities_Type = FspR7EnableDisable
_DeployProvTunnelOtnMonitorEntities_Object = MibTableColumn
deployProvTunnelOtnMonitorEntities = _DeployProvTunnelOtnMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 16),
    _DeployProvTunnelOtnMonitorEntities_Type()
)
deployProvTunnelOtnMonitorEntities.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnMonitorEntities.setStatus("current")
_DeployProvTunnelOtnTunnelScope_Type = FspR7CpTunnelScope
_DeployProvTunnelOtnTunnelScope_Object = MibTableColumn
deployProvTunnelOtnTunnelScope = _DeployProvTunnelOtnTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 17),
    _DeployProvTunnelOtnTunnelScope_Type()
)
deployProvTunnelOtnTunnelScope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnTunnelScope.setStatus("current")
_DeployProvTunnelOtnLayer_Type = FspR7PacketsLayer
_DeployProvTunnelOtnLayer_Object = MibTableColumn
deployProvTunnelOtnLayer = _DeployProvTunnelOtnLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 18),
    _DeployProvTunnelOtnLayer_Type()
)
deployProvTunnelOtnLayer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnLayer.setStatus("current")
_DeployProvTunnelOtnOifUni_Type = FspR7YesNo
_DeployProvTunnelOtnOifUni_Object = MibTableColumn
deployProvTunnelOtnOifUni = _DeployProvTunnelOtnOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 19),
    _DeployProvTunnelOtnOifUni_Type()
)
deployProvTunnelOtnOifUni.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnOifUni.setStatus("current")
_DeployProvTunnelOtnFromAidString_Type = SnmpAdminString
_DeployProvTunnelOtnFromAidString_Object = MibTableColumn
deployProvTunnelOtnFromAidString = _DeployProvTunnelOtnFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 20),
    _DeployProvTunnelOtnFromAidString_Type()
)
deployProvTunnelOtnFromAidString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnFromAidString.setStatus("current")
_DeployProvTunnelOtnToAidString_Type = SnmpAdminString
_DeployProvTunnelOtnToAidString_Object = MibTableColumn
deployProvTunnelOtnToAidString = _DeployProvTunnelOtnToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 103, 1, 21),
    _DeployProvTunnelOtnToAidString_Type()
)
deployProvTunnelOtnToAidString.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvTunnelOtnToAidString.setStatus("current")
_DeployProvTunnelOtnCapTable_Object = MibTable
deployProvTunnelOtnCapTable = _DeployProvTunnelOtnCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104)
)
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapTable.setStatus("current")
_DeployProvTunnelOtnCapEntry_Object = MibTableRow
deployProvTunnelOtnCapEntry = _DeployProvTunnelOtnCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1)
)
deployProvTunnelOtnCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapEntry.setStatus("current")
_DeployProvTunnelOtnCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvTunnelOtnCapRowStatus_Object = MibTableColumn
deployProvTunnelOtnCapRowStatus = _DeployProvTunnelOtnCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 1),
    _DeployProvTunnelOtnCapRowStatus_Type()
)
deployProvTunnelOtnCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapRowStatus.setStatus("current")
_DeployProvTunnelOtnCapTunnelId_Type = Integer32
_DeployProvTunnelOtnCapTunnelId_Object = MibTableColumn
deployProvTunnelOtnCapTunnelId = _DeployProvTunnelOtnCapTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 2),
    _DeployProvTunnelOtnCapTunnelId_Type()
)
deployProvTunnelOtnCapTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapTunnelId.setStatus("current")
_DeployProvTunnelOtnCapTunnelNo_Type = FspR7Unsigned32Caps
_DeployProvTunnelOtnCapTunnelNo_Object = MibTableColumn
deployProvTunnelOtnCapTunnelNo = _DeployProvTunnelOtnCapTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 3),
    _DeployProvTunnelOtnCapTunnelNo_Type()
)
deployProvTunnelOtnCapTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapTunnelNo.setStatus("current")
_DeployProvTunnelOtnCapAlias_Type = Integer32
_DeployProvTunnelOtnCapAlias_Object = MibTableColumn
deployProvTunnelOtnCapAlias = _DeployProvTunnelOtnCapAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 4),
    _DeployProvTunnelOtnCapAlias_Type()
)
deployProvTunnelOtnCapAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapAlias.setStatus("current")
_DeployProvTunnelOtnCapTunnelType_Type = FspR7CpTunnelTypeCaps
_DeployProvTunnelOtnCapTunnelType_Object = MibTableColumn
deployProvTunnelOtnCapTunnelType = _DeployProvTunnelOtnCapTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 5),
    _DeployProvTunnelOtnCapTunnelType_Type()
)
deployProvTunnelOtnCapTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapTunnelType.setStatus("current")
_DeployProvTunnelOtnCapToTid_Type = Integer32
_DeployProvTunnelOtnCapToTid_Object = MibTableColumn
deployProvTunnelOtnCapToTid = _DeployProvTunnelOtnCapToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 6),
    _DeployProvTunnelOtnCapToTid_Type()
)
deployProvTunnelOtnCapToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapToTid.setStatus("current")
_DeployProvTunnelOtnCapToNodeIp_Type = FspR7YesNo
_DeployProvTunnelOtnCapToNodeIp_Object = MibTableColumn
deployProvTunnelOtnCapToNodeIp = _DeployProvTunnelOtnCapToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 7),
    _DeployProvTunnelOtnCapToNodeIp_Type()
)
deployProvTunnelOtnCapToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapToNodeIp.setStatus("current")
_DeployProvTunnelOtnCapFromAid_Type = Integer32
_DeployProvTunnelOtnCapFromAid_Object = MibTableColumn
deployProvTunnelOtnCapFromAid = _DeployProvTunnelOtnCapFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 8),
    _DeployProvTunnelOtnCapFromAid_Type()
)
deployProvTunnelOtnCapFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapFromAid.setStatus("current")
_DeployProvTunnelOtnCapToAid_Type = Integer32
_DeployProvTunnelOtnCapToAid_Object = MibTableColumn
deployProvTunnelOtnCapToAid = _DeployProvTunnelOtnCapToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 9),
    _DeployProvTunnelOtnCapToAid_Type()
)
deployProvTunnelOtnCapToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapToAid.setStatus("current")
_DeployProvTunnelOtnCapConnectionDirection_Type = FspR7ConnCaps
_DeployProvTunnelOtnCapConnectionDirection_Object = MibTableColumn
deployProvTunnelOtnCapConnectionDirection = _DeployProvTunnelOtnCapConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 10),
    _DeployProvTunnelOtnCapConnectionDirection_Type()
)
deployProvTunnelOtnCapConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapConnectionDirection.setStatus("current")
_DeployProvTunnelOtnCapFacilityType_Type = FspR7InterfaceTypeCaps
_DeployProvTunnelOtnCapFacilityType_Object = MibTableColumn
deployProvTunnelOtnCapFacilityType = _DeployProvTunnelOtnCapFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 11),
    _DeployProvTunnelOtnCapFacilityType_Type()
)
deployProvTunnelOtnCapFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapFacilityType.setStatus("current")
_DeployProvTunnelOtnCapProvisionedPaths_Type = Integer32
_DeployProvTunnelOtnCapProvisionedPaths_Object = MibTableColumn
deployProvTunnelOtnCapProvisionedPaths = _DeployProvTunnelOtnCapProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 12),
    _DeployProvTunnelOtnCapProvisionedPaths_Type()
)
deployProvTunnelOtnCapProvisionedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapProvisionedPaths.setStatus("current")
_DeployProvTunnelOtnCapProtectionType_Type = FspR7CpProtectionTypeCaps
_DeployProvTunnelOtnCapProtectionType_Object = MibTableColumn
deployProvTunnelOtnCapProtectionType = _DeployProvTunnelOtnCapProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 13),
    _DeployProvTunnelOtnCapProtectionType_Type()
)
deployProvTunnelOtnCapProtectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapProtectionType.setStatus("current")
_DeployProvTunnelOtnCapPin_Type = FspR7CpPinningCaps
_DeployProvTunnelOtnCapPin_Object = MibTableColumn
deployProvTunnelOtnCapPin = _DeployProvTunnelOtnCapPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 14),
    _DeployProvTunnelOtnCapPin_Type()
)
deployProvTunnelOtnCapPin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapPin.setStatus("current")
_DeployProvTunnelOtnCapRestorationType_Type = FspR7CpRestorationTypeCaps
_DeployProvTunnelOtnCapRestorationType_Object = MibTableColumn
deployProvTunnelOtnCapRestorationType = _DeployProvTunnelOtnCapRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 15),
    _DeployProvTunnelOtnCapRestorationType_Type()
)
deployProvTunnelOtnCapRestorationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapRestorationType.setStatus("current")
_DeployProvTunnelOtnCapMonitorEntities_Type = FspR7EnableDisableCaps
_DeployProvTunnelOtnCapMonitorEntities_Object = MibTableColumn
deployProvTunnelOtnCapMonitorEntities = _DeployProvTunnelOtnCapMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 16),
    _DeployProvTunnelOtnCapMonitorEntities_Type()
)
deployProvTunnelOtnCapMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapMonitorEntities.setStatus("current")
_DeployProvTunnelOtnCapTunnelScope_Type = FspR7CpTunnelScopeCaps
_DeployProvTunnelOtnCapTunnelScope_Object = MibTableColumn
deployProvTunnelOtnCapTunnelScope = _DeployProvTunnelOtnCapTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 17),
    _DeployProvTunnelOtnCapTunnelScope_Type()
)
deployProvTunnelOtnCapTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapTunnelScope.setStatus("current")
_DeployProvTunnelOtnCapLayer_Type = FspR7PacketsLayerCaps
_DeployProvTunnelOtnCapLayer_Object = MibTableColumn
deployProvTunnelOtnCapLayer = _DeployProvTunnelOtnCapLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 18),
    _DeployProvTunnelOtnCapLayer_Type()
)
deployProvTunnelOtnCapLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapLayer.setStatus("current")
_DeployProvTunnelOtnCapOifUni_Type = FspR7YesNoCaps
_DeployProvTunnelOtnCapOifUni_Object = MibTableColumn
deployProvTunnelOtnCapOifUni = _DeployProvTunnelOtnCapOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 19),
    _DeployProvTunnelOtnCapOifUni_Type()
)
deployProvTunnelOtnCapOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapOifUni.setStatus("current")
_DeployProvTunnelOtnCapFromAidString_Type = Integer32
_DeployProvTunnelOtnCapFromAidString_Object = MibTableColumn
deployProvTunnelOtnCapFromAidString = _DeployProvTunnelOtnCapFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 20),
    _DeployProvTunnelOtnCapFromAidString_Type()
)
deployProvTunnelOtnCapFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapFromAidString.setStatus("current")
_DeployProvTunnelOtnCapToAidString_Type = Integer32
_DeployProvTunnelOtnCapToAidString_Object = MibTableColumn
deployProvTunnelOtnCapToAidString = _DeployProvTunnelOtnCapToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 104, 1, 21),
    _DeployProvTunnelOtnCapToAidString_Type()
)
deployProvTunnelOtnCapToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnCapToAidString.setStatus("current")
_DeployProvTunnelOtnDefaultsTable_Object = MibTable
deployProvTunnelOtnDefaultsTable = _DeployProvTunnelOtnDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105)
)
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsTable.setStatus("current")
_DeployProvTunnelOtnDefaultsEntry_Object = MibTableRow
deployProvTunnelOtnDefaultsEntry = _DeployProvTunnelOtnDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1)
)
deployProvTunnelOtnDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsEntry.setStatus("current")
_DeployProvTunnelOtnDefaultsRowStatus_Type = RowStatus
_DeployProvTunnelOtnDefaultsRowStatus_Object = MibTableColumn
deployProvTunnelOtnDefaultsRowStatus = _DeployProvTunnelOtnDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 1),
    _DeployProvTunnelOtnDefaultsRowStatus_Type()
)
deployProvTunnelOtnDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsRowStatus.setStatus("current")
_DeployProvTunnelOtnDefaultsTunnelId_Type = SnmpAdminString
_DeployProvTunnelOtnDefaultsTunnelId_Object = MibTableColumn
deployProvTunnelOtnDefaultsTunnelId = _DeployProvTunnelOtnDefaultsTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 2),
    _DeployProvTunnelOtnDefaultsTunnelId_Type()
)
deployProvTunnelOtnDefaultsTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsTunnelId.setStatus("current")
_DeployProvTunnelOtnDefaultsTunnelNo_Type = Unsigned32
_DeployProvTunnelOtnDefaultsTunnelNo_Object = MibTableColumn
deployProvTunnelOtnDefaultsTunnelNo = _DeployProvTunnelOtnDefaultsTunnelNo_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 3),
    _DeployProvTunnelOtnDefaultsTunnelNo_Type()
)
deployProvTunnelOtnDefaultsTunnelNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsTunnelNo.setStatus("current")
_DeployProvTunnelOtnDefaultsAlias_Type = SnmpAdminString
_DeployProvTunnelOtnDefaultsAlias_Object = MibTableColumn
deployProvTunnelOtnDefaultsAlias = _DeployProvTunnelOtnDefaultsAlias_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 4),
    _DeployProvTunnelOtnDefaultsAlias_Type()
)
deployProvTunnelOtnDefaultsAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsAlias.setStatus("current")
_DeployProvTunnelOtnDefaultsTunnelType_Type = FspR7CpTunnelType
_DeployProvTunnelOtnDefaultsTunnelType_Object = MibTableColumn
deployProvTunnelOtnDefaultsTunnelType = _DeployProvTunnelOtnDefaultsTunnelType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 5),
    _DeployProvTunnelOtnDefaultsTunnelType_Type()
)
deployProvTunnelOtnDefaultsTunnelType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsTunnelType.setStatus("current")
_DeployProvTunnelOtnDefaultsToTid_Type = SnmpAdminString
_DeployProvTunnelOtnDefaultsToTid_Object = MibTableColumn
deployProvTunnelOtnDefaultsToTid = _DeployProvTunnelOtnDefaultsToTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 6),
    _DeployProvTunnelOtnDefaultsToTid_Type()
)
deployProvTunnelOtnDefaultsToTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsToTid.setStatus("current")
_DeployProvTunnelOtnDefaultsToNodeIp_Type = IpAddress
_DeployProvTunnelOtnDefaultsToNodeIp_Object = MibTableColumn
deployProvTunnelOtnDefaultsToNodeIp = _DeployProvTunnelOtnDefaultsToNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 7),
    _DeployProvTunnelOtnDefaultsToNodeIp_Type()
)
deployProvTunnelOtnDefaultsToNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsToNodeIp.setStatus("current")
_DeployProvTunnelOtnDefaultsFromAid_Type = EntityIndex
_DeployProvTunnelOtnDefaultsFromAid_Object = MibTableColumn
deployProvTunnelOtnDefaultsFromAid = _DeployProvTunnelOtnDefaultsFromAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 8),
    _DeployProvTunnelOtnDefaultsFromAid_Type()
)
deployProvTunnelOtnDefaultsFromAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsFromAid.setStatus("current")
_DeployProvTunnelOtnDefaultsToAid_Type = EntityIndex
_DeployProvTunnelOtnDefaultsToAid_Object = MibTableColumn
deployProvTunnelOtnDefaultsToAid = _DeployProvTunnelOtnDefaultsToAid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 9),
    _DeployProvTunnelOtnDefaultsToAid_Type()
)
deployProvTunnelOtnDefaultsToAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsToAid.setStatus("current")
_DeployProvTunnelOtnDefaultsConnectionDirection_Type = FspR7Conn
_DeployProvTunnelOtnDefaultsConnectionDirection_Object = MibTableColumn
deployProvTunnelOtnDefaultsConnectionDirection = _DeployProvTunnelOtnDefaultsConnectionDirection_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 10),
    _DeployProvTunnelOtnDefaultsConnectionDirection_Type()
)
deployProvTunnelOtnDefaultsConnectionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsConnectionDirection.setStatus("current")
_DeployProvTunnelOtnDefaultsFacilityType_Type = FspR7InterfaceType
_DeployProvTunnelOtnDefaultsFacilityType_Object = MibTableColumn
deployProvTunnelOtnDefaultsFacilityType = _DeployProvTunnelOtnDefaultsFacilityType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 11),
    _DeployProvTunnelOtnDefaultsFacilityType_Type()
)
deployProvTunnelOtnDefaultsFacilityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsFacilityType.setStatus("current")
_DeployProvTunnelOtnDefaultsProvisionedPaths_Type = SnmpAdminString
_DeployProvTunnelOtnDefaultsProvisionedPaths_Object = MibTableColumn
deployProvTunnelOtnDefaultsProvisionedPaths = _DeployProvTunnelOtnDefaultsProvisionedPaths_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 12),
    _DeployProvTunnelOtnDefaultsProvisionedPaths_Type()
)
deployProvTunnelOtnDefaultsProvisionedPaths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsProvisionedPaths.setStatus("current")
_DeployProvTunnelOtnDefaultsProtectionType_Type = FspR7CpProtectionType
_DeployProvTunnelOtnDefaultsProtectionType_Object = MibTableColumn
deployProvTunnelOtnDefaultsProtectionType = _DeployProvTunnelOtnDefaultsProtectionType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 13),
    _DeployProvTunnelOtnDefaultsProtectionType_Type()
)
deployProvTunnelOtnDefaultsProtectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsProtectionType.setStatus("current")
_DeployProvTunnelOtnDefaultsPin_Type = FspR7CpPinning
_DeployProvTunnelOtnDefaultsPin_Object = MibTableColumn
deployProvTunnelOtnDefaultsPin = _DeployProvTunnelOtnDefaultsPin_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 14),
    _DeployProvTunnelOtnDefaultsPin_Type()
)
deployProvTunnelOtnDefaultsPin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsPin.setStatus("current")
_DeployProvTunnelOtnDefaultsRestorationType_Type = FspR7CpRestorationType
_DeployProvTunnelOtnDefaultsRestorationType_Object = MibTableColumn
deployProvTunnelOtnDefaultsRestorationType = _DeployProvTunnelOtnDefaultsRestorationType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 15),
    _DeployProvTunnelOtnDefaultsRestorationType_Type()
)
deployProvTunnelOtnDefaultsRestorationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsRestorationType.setStatus("current")
_DeployProvTunnelOtnDefaultsMonitorEntities_Type = FspR7EnableDisable
_DeployProvTunnelOtnDefaultsMonitorEntities_Object = MibTableColumn
deployProvTunnelOtnDefaultsMonitorEntities = _DeployProvTunnelOtnDefaultsMonitorEntities_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 16),
    _DeployProvTunnelOtnDefaultsMonitorEntities_Type()
)
deployProvTunnelOtnDefaultsMonitorEntities.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsMonitorEntities.setStatus("current")
_DeployProvTunnelOtnDefaultsTunnelScope_Type = FspR7CpTunnelScope
_DeployProvTunnelOtnDefaultsTunnelScope_Object = MibTableColumn
deployProvTunnelOtnDefaultsTunnelScope = _DeployProvTunnelOtnDefaultsTunnelScope_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 17),
    _DeployProvTunnelOtnDefaultsTunnelScope_Type()
)
deployProvTunnelOtnDefaultsTunnelScope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsTunnelScope.setStatus("current")
_DeployProvTunnelOtnDefaultsLayer_Type = FspR7PacketsLayer
_DeployProvTunnelOtnDefaultsLayer_Object = MibTableColumn
deployProvTunnelOtnDefaultsLayer = _DeployProvTunnelOtnDefaultsLayer_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 18),
    _DeployProvTunnelOtnDefaultsLayer_Type()
)
deployProvTunnelOtnDefaultsLayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsLayer.setStatus("current")
_DeployProvTunnelOtnDefaultsOifUni_Type = FspR7YesNo
_DeployProvTunnelOtnDefaultsOifUni_Object = MibTableColumn
deployProvTunnelOtnDefaultsOifUni = _DeployProvTunnelOtnDefaultsOifUni_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 19),
    _DeployProvTunnelOtnDefaultsOifUni_Type()
)
deployProvTunnelOtnDefaultsOifUni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsOifUni.setStatus("current")
_DeployProvTunnelOtnDefaultsFromAidString_Type = SnmpAdminString
_DeployProvTunnelOtnDefaultsFromAidString_Object = MibTableColumn
deployProvTunnelOtnDefaultsFromAidString = _DeployProvTunnelOtnDefaultsFromAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 20),
    _DeployProvTunnelOtnDefaultsFromAidString_Type()
)
deployProvTunnelOtnDefaultsFromAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsFromAidString.setStatus("current")
_DeployProvTunnelOtnDefaultsToAidString_Type = SnmpAdminString
_DeployProvTunnelOtnDefaultsToAidString_Object = MibTableColumn
deployProvTunnelOtnDefaultsToAidString = _DeployProvTunnelOtnDefaultsToAidString_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 105, 1, 21),
    _DeployProvTunnelOtnDefaultsToAidString_Type()
)
deployProvTunnelOtnDefaultsToAidString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvTunnelOtnDefaultsToAidString.setStatus("current")
_DeployProvPathOtnTable_Object = MibTable
deployProvPathOtnTable = _DeployProvPathOtnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 106)
)
if mibBuilder.loadTexts:
    deployProvPathOtnTable.setStatus("current")
_DeployProvPathOtnEntry_Object = MibTableRow
deployProvPathOtnEntry = _DeployProvPathOtnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 106, 1)
)
deployProvPathOtnEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathOtnEntry.setStatus("current")
_DeployProvPathOtnRowStatus_Type = RowStatus
_DeployProvPathOtnRowStatus_Object = MibTableColumn
deployProvPathOtnRowStatus = _DeployProvPathOtnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 106, 1, 1),
    _DeployProvPathOtnRowStatus_Type()
)
deployProvPathOtnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathOtnRowStatus.setStatus("current")
_DeployProvPathOtnPathId_Type = SnmpAdminString
_DeployProvPathOtnPathId_Object = MibTableColumn
deployProvPathOtnPathId = _DeployProvPathOtnPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 106, 1, 2),
    _DeployProvPathOtnPathId_Type()
)
deployProvPathOtnPathId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathOtnPathId.setStatus("current")
_DeployProvPathOtnCapTable_Object = MibTable
deployProvPathOtnCapTable = _DeployProvPathOtnCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 107)
)
if mibBuilder.loadTexts:
    deployProvPathOtnCapTable.setStatus("current")
_DeployProvPathOtnCapEntry_Object = MibTableRow
deployProvPathOtnCapEntry = _DeployProvPathOtnCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 107, 1)
)
deployProvPathOtnCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathOtnCapEntry.setStatus("current")
_DeployProvPathOtnCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPathOtnCapRowStatus_Object = MibTableColumn
deployProvPathOtnCapRowStatus = _DeployProvPathOtnCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 107, 1, 1),
    _DeployProvPathOtnCapRowStatus_Type()
)
deployProvPathOtnCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathOtnCapRowStatus.setStatus("current")
_DeployProvPathOtnCapPathId_Type = Integer32
_DeployProvPathOtnCapPathId_Object = MibTableColumn
deployProvPathOtnCapPathId = _DeployProvPathOtnCapPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 107, 1, 2),
    _DeployProvPathOtnCapPathId_Type()
)
deployProvPathOtnCapPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathOtnCapPathId.setStatus("current")
_DeployProvPathOtnDefaultsTable_Object = MibTable
deployProvPathOtnDefaultsTable = _DeployProvPathOtnDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 108)
)
if mibBuilder.loadTexts:
    deployProvPathOtnDefaultsTable.setStatus("current")
_DeployProvPathOtnDefaultsEntry_Object = MibTableRow
deployProvPathOtnDefaultsEntry = _DeployProvPathOtnDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 108, 1)
)
deployProvPathOtnDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathOtnDefaultsEntry.setStatus("current")
_DeployProvPathOtnDefaultsRowStatus_Type = RowStatus
_DeployProvPathOtnDefaultsRowStatus_Object = MibTableColumn
deployProvPathOtnDefaultsRowStatus = _DeployProvPathOtnDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 108, 1, 1),
    _DeployProvPathOtnDefaultsRowStatus_Type()
)
deployProvPathOtnDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathOtnDefaultsRowStatus.setStatus("current")
_DeployProvPathOtnDefaultsPathId_Type = SnmpAdminString
_DeployProvPathOtnDefaultsPathId_Object = MibTableColumn
deployProvPathOtnDefaultsPathId = _DeployProvPathOtnDefaultsPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 108, 1, 2),
    _DeployProvPathOtnDefaultsPathId_Type()
)
deployProvPathOtnDefaultsPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathOtnDefaultsPathId.setStatus("current")
_DeployProvPathElementOtnTable_Object = MibTable
deployProvPathElementOtnTable = _DeployProvPathElementOtnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109)
)
if mibBuilder.loadTexts:
    deployProvPathElementOtnTable.setStatus("current")
_DeployProvPathElementOtnEntry_Object = MibTableRow
deployProvPathElementOtnEntry = _DeployProvPathElementOtnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1)
)
deployProvPathElementOtnEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementOtnEntry.setStatus("current")
_DeployProvPathElementOtnRowStatus_Type = RowStatus
_DeployProvPathElementOtnRowStatus_Object = MibTableColumn
deployProvPathElementOtnRowStatus = _DeployProvPathElementOtnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 1),
    _DeployProvPathElementOtnRowStatus_Type()
)
deployProvPathElementOtnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnRowStatus.setStatus("current")
_DeployProvPathElementOtnTrafficEngineeringType_Type = FspR7CpTEType
_DeployProvPathElementOtnTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementOtnTrafficEngineeringType = _DeployProvPathElementOtnTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 2),
    _DeployProvPathElementOtnTrafficEngineeringType_Type()
)
deployProvPathElementOtnTrafficEngineeringType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnTrafficEngineeringType.setStatus("current")
_DeployProvPathElementOtnLifIp_Type = IpAddress
_DeployProvPathElementOtnLifIp_Object = MibTableColumn
deployProvPathElementOtnLifIp = _DeployProvPathElementOtnLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 3),
    _DeployProvPathElementOtnLifIp_Type()
)
deployProvPathElementOtnLifIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnLifIp.setStatus("current")
_DeployProvPathElementOtnNodeIp_Type = IpAddress
_DeployProvPathElementOtnNodeIp_Object = MibTableColumn
deployProvPathElementOtnNodeIp = _DeployProvPathElementOtnNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 4),
    _DeployProvPathElementOtnNodeIp_Type()
)
deployProvPathElementOtnNodeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnNodeIp.setStatus("current")
_DeployProvPathElementOtnTid_Type = SnmpAdminString
_DeployProvPathElementOtnTid_Object = MibTableColumn
deployProvPathElementOtnTid = _DeployProvPathElementOtnTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 5),
    _DeployProvPathElementOtnTid_Type()
)
deployProvPathElementOtnTid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnTid.setStatus("current")
_DeployProvPathElementOtnLogicalInterfaceId_Type = Unsigned32
_DeployProvPathElementOtnLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementOtnLogicalInterfaceId = _DeployProvPathElementOtnLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 6),
    _DeployProvPathElementOtnLogicalInterfaceId_Type()
)
deployProvPathElementOtnLogicalInterfaceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnLogicalInterfaceId.setStatus("current")
_DeployProvPathElementOtnTie_Type = FspR7CpTie
_DeployProvPathElementOtnTie_Object = MibTableColumn
deployProvPathElementOtnTie = _DeployProvPathElementOtnTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 7),
    _DeployProvPathElementOtnTie_Type()
)
deployProvPathElementOtnTie.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnTie.setStatus("current")
_DeployProvPathElementOtnUpTributaryODTUType_Type = FspR7OdtuType
_DeployProvPathElementOtnUpTributaryODTUType_Object = MibTableColumn
deployProvPathElementOtnUpTributaryODTUType = _DeployProvPathElementOtnUpTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 8),
    _DeployProvPathElementOtnUpTributaryODTUType_Type()
)
deployProvPathElementOtnUpTributaryODTUType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnUpTributaryODTUType.setStatus("current")
_DeployProvPathElementOtnDownTributaryODTUType_Type = FspR7OdtuType
_DeployProvPathElementOtnDownTributaryODTUType_Object = MibTableColumn
deployProvPathElementOtnDownTributaryODTUType = _DeployProvPathElementOtnDownTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 9),
    _DeployProvPathElementOtnDownTributaryODTUType_Type()
)
deployProvPathElementOtnDownTributaryODTUType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDownTributaryODTUType.setStatus("current")
_DeployProvPathElementOtnUpTributaryPort_Type = SnmpAdminString
_DeployProvPathElementOtnUpTributaryPort_Object = MibTableColumn
deployProvPathElementOtnUpTributaryPort = _DeployProvPathElementOtnUpTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 10),
    _DeployProvPathElementOtnUpTributaryPort_Type()
)
deployProvPathElementOtnUpTributaryPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnUpTributaryPort.setStatus("current")
_DeployProvPathElementOtnDownTributaryPort_Type = SnmpAdminString
_DeployProvPathElementOtnDownTributaryPort_Object = MibTableColumn
deployProvPathElementOtnDownTributaryPort = _DeployProvPathElementOtnDownTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 11),
    _DeployProvPathElementOtnDownTributaryPort_Type()
)
deployProvPathElementOtnDownTributaryPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDownTributaryPort.setStatus("current")
_DeployProvPathElementOtnUpTributarySlot_Type = SnmpAdminString
_DeployProvPathElementOtnUpTributarySlot_Object = MibTableColumn
deployProvPathElementOtnUpTributarySlot = _DeployProvPathElementOtnUpTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 12),
    _DeployProvPathElementOtnUpTributarySlot_Type()
)
deployProvPathElementOtnUpTributarySlot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnUpTributarySlot.setStatus("current")
_DeployProvPathElementOtnDownTributarySlot_Type = SnmpAdminString
_DeployProvPathElementOtnDownTributarySlot_Object = MibTableColumn
deployProvPathElementOtnDownTributarySlot = _DeployProvPathElementOtnDownTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 13),
    _DeployProvPathElementOtnDownTributarySlot_Type()
)
deployProvPathElementOtnDownTributarySlot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDownTributarySlot.setStatus("current")
_DeployProvPathElementOtnUpTributaryTSMethod_Type = FspR7ManualAuto
_DeployProvPathElementOtnUpTributaryTSMethod_Object = MibTableColumn
deployProvPathElementOtnUpTributaryTSMethod = _DeployProvPathElementOtnUpTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 14),
    _DeployProvPathElementOtnUpTributaryTSMethod_Type()
)
deployProvPathElementOtnUpTributaryTSMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnUpTributaryTSMethod.setStatus("current")
_DeployProvPathElementOtnDownTributaryTSMethod_Type = FspR7ManualAuto
_DeployProvPathElementOtnDownTributaryTSMethod_Object = MibTableColumn
deployProvPathElementOtnDownTributaryTSMethod = _DeployProvPathElementOtnDownTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 109, 1, 15),
    _DeployProvPathElementOtnDownTributaryTSMethod_Type()
)
deployProvPathElementOtnDownTributaryTSMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDownTributaryTSMethod.setStatus("current")
_DeployProvPathElementOtnCapTable_Object = MibTable
deployProvPathElementOtnCapTable = _DeployProvPathElementOtnCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110)
)
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapTable.setStatus("current")
_DeployProvPathElementOtnCapEntry_Object = MibTableRow
deployProvPathElementOtnCapEntry = _DeployProvPathElementOtnCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1)
)
deployProvPathElementOtnCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapEntry.setStatus("current")
_DeployProvPathElementOtnCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvPathElementOtnCapRowStatus_Object = MibTableColumn
deployProvPathElementOtnCapRowStatus = _DeployProvPathElementOtnCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 1),
    _DeployProvPathElementOtnCapRowStatus_Type()
)
deployProvPathElementOtnCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapRowStatus.setStatus("current")
_DeployProvPathElementOtnCapTrafficEngineeringType_Type = FspR7CpTETypeCaps
_DeployProvPathElementOtnCapTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementOtnCapTrafficEngineeringType = _DeployProvPathElementOtnCapTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 2),
    _DeployProvPathElementOtnCapTrafficEngineeringType_Type()
)
deployProvPathElementOtnCapTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapTrafficEngineeringType.setStatus("current")
_DeployProvPathElementOtnCapLifIp_Type = FspR7YesNo
_DeployProvPathElementOtnCapLifIp_Object = MibTableColumn
deployProvPathElementOtnCapLifIp = _DeployProvPathElementOtnCapLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 3),
    _DeployProvPathElementOtnCapLifIp_Type()
)
deployProvPathElementOtnCapLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapLifIp.setStatus("current")
_DeployProvPathElementOtnCapNodeIp_Type = FspR7YesNo
_DeployProvPathElementOtnCapNodeIp_Object = MibTableColumn
deployProvPathElementOtnCapNodeIp = _DeployProvPathElementOtnCapNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 4),
    _DeployProvPathElementOtnCapNodeIp_Type()
)
deployProvPathElementOtnCapNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapNodeIp.setStatus("current")
_DeployProvPathElementOtnCapTid_Type = Integer32
_DeployProvPathElementOtnCapTid_Object = MibTableColumn
deployProvPathElementOtnCapTid = _DeployProvPathElementOtnCapTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 5),
    _DeployProvPathElementOtnCapTid_Type()
)
deployProvPathElementOtnCapTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapTid.setStatus("current")
_DeployProvPathElementOtnCapLogicalInterfaceId_Type = FspR7Unsigned32Caps
_DeployProvPathElementOtnCapLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementOtnCapLogicalInterfaceId = _DeployProvPathElementOtnCapLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 6),
    _DeployProvPathElementOtnCapLogicalInterfaceId_Type()
)
deployProvPathElementOtnCapLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapLogicalInterfaceId.setStatus("current")
_DeployProvPathElementOtnCapTie_Type = FspR7CpTieCaps
_DeployProvPathElementOtnCapTie_Object = MibTableColumn
deployProvPathElementOtnCapTie = _DeployProvPathElementOtnCapTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 7),
    _DeployProvPathElementOtnCapTie_Type()
)
deployProvPathElementOtnCapTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapTie.setStatus("current")
_DeployProvPathElementOtnCapUpTributaryODTUType_Type = FspR7OdtuTypeCaps
_DeployProvPathElementOtnCapUpTributaryODTUType_Object = MibTableColumn
deployProvPathElementOtnCapUpTributaryODTUType = _DeployProvPathElementOtnCapUpTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 8),
    _DeployProvPathElementOtnCapUpTributaryODTUType_Type()
)
deployProvPathElementOtnCapUpTributaryODTUType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapUpTributaryODTUType.setStatus("current")
_DeployProvPathElementOtnCapDownTributaryODTUType_Type = FspR7OdtuTypeCaps
_DeployProvPathElementOtnCapDownTributaryODTUType_Object = MibTableColumn
deployProvPathElementOtnCapDownTributaryODTUType = _DeployProvPathElementOtnCapDownTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 9),
    _DeployProvPathElementOtnCapDownTributaryODTUType_Type()
)
deployProvPathElementOtnCapDownTributaryODTUType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapDownTributaryODTUType.setStatus("current")
_DeployProvPathElementOtnCapUpTributaryPort_Type = SnmpAdminString
_DeployProvPathElementOtnCapUpTributaryPort_Object = MibTableColumn
deployProvPathElementOtnCapUpTributaryPort = _DeployProvPathElementOtnCapUpTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 10),
    _DeployProvPathElementOtnCapUpTributaryPort_Type()
)
deployProvPathElementOtnCapUpTributaryPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapUpTributaryPort.setStatus("current")
_DeployProvPathElementOtnCapDownTributaryPort_Type = SnmpAdminString
_DeployProvPathElementOtnCapDownTributaryPort_Object = MibTableColumn
deployProvPathElementOtnCapDownTributaryPort = _DeployProvPathElementOtnCapDownTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 11),
    _DeployProvPathElementOtnCapDownTributaryPort_Type()
)
deployProvPathElementOtnCapDownTributaryPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapDownTributaryPort.setStatus("current")
_DeployProvPathElementOtnCapUpTributarySlot_Type = SnmpAdminString
_DeployProvPathElementOtnCapUpTributarySlot_Object = MibTableColumn
deployProvPathElementOtnCapUpTributarySlot = _DeployProvPathElementOtnCapUpTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 12),
    _DeployProvPathElementOtnCapUpTributarySlot_Type()
)
deployProvPathElementOtnCapUpTributarySlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapUpTributarySlot.setStatus("current")
_DeployProvPathElementOtnCapDownTributarySlot_Type = SnmpAdminString
_DeployProvPathElementOtnCapDownTributarySlot_Object = MibTableColumn
deployProvPathElementOtnCapDownTributarySlot = _DeployProvPathElementOtnCapDownTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 13),
    _DeployProvPathElementOtnCapDownTributarySlot_Type()
)
deployProvPathElementOtnCapDownTributarySlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapDownTributarySlot.setStatus("current")
_DeployProvPathElementOtnCapUpTributaryTSMethod_Type = FspR7ManualAutoCaps
_DeployProvPathElementOtnCapUpTributaryTSMethod_Object = MibTableColumn
deployProvPathElementOtnCapUpTributaryTSMethod = _DeployProvPathElementOtnCapUpTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 14),
    _DeployProvPathElementOtnCapUpTributaryTSMethod_Type()
)
deployProvPathElementOtnCapUpTributaryTSMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapUpTributaryTSMethod.setStatus("current")
_DeployProvPathElementOtnCapDownTributaryTSMethod_Type = FspR7ManualAutoCaps
_DeployProvPathElementOtnCapDownTributaryTSMethod_Object = MibTableColumn
deployProvPathElementOtnCapDownTributaryTSMethod = _DeployProvPathElementOtnCapDownTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 110, 1, 15),
    _DeployProvPathElementOtnCapDownTributaryTSMethod_Type()
)
deployProvPathElementOtnCapDownTributaryTSMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnCapDownTributaryTSMethod.setStatus("current")
_DeployProvPathElementOtnDefaultsTable_Object = MibTable
deployProvPathElementOtnDefaultsTable = _DeployProvPathElementOtnDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111)
)
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsTable.setStatus("current")
_DeployProvPathElementOtnDefaultsEntry_Object = MibTableRow
deployProvPathElementOtnDefaultsEntry = _DeployProvPathElementOtnDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1)
)
deployProvPathElementOtnDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsEntry.setStatus("current")
_DeployProvPathElementOtnDefaultsRowStatus_Type = RowStatus
_DeployProvPathElementOtnDefaultsRowStatus_Object = MibTableColumn
deployProvPathElementOtnDefaultsRowStatus = _DeployProvPathElementOtnDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 1),
    _DeployProvPathElementOtnDefaultsRowStatus_Type()
)
deployProvPathElementOtnDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsRowStatus.setStatus("current")
_DeployProvPathElementOtnDefaultsTrafficEngineeringType_Type = FspR7CpTEType
_DeployProvPathElementOtnDefaultsTrafficEngineeringType_Object = MibTableColumn
deployProvPathElementOtnDefaultsTrafficEngineeringType = _DeployProvPathElementOtnDefaultsTrafficEngineeringType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 2),
    _DeployProvPathElementOtnDefaultsTrafficEngineeringType_Type()
)
deployProvPathElementOtnDefaultsTrafficEngineeringType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsTrafficEngineeringType.setStatus("current")
_DeployProvPathElementOtnDefaultsLifIp_Type = IpAddress
_DeployProvPathElementOtnDefaultsLifIp_Object = MibTableColumn
deployProvPathElementOtnDefaultsLifIp = _DeployProvPathElementOtnDefaultsLifIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 3),
    _DeployProvPathElementOtnDefaultsLifIp_Type()
)
deployProvPathElementOtnDefaultsLifIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsLifIp.setStatus("current")
_DeployProvPathElementOtnDefaultsNodeIp_Type = IpAddress
_DeployProvPathElementOtnDefaultsNodeIp_Object = MibTableColumn
deployProvPathElementOtnDefaultsNodeIp = _DeployProvPathElementOtnDefaultsNodeIp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 4),
    _DeployProvPathElementOtnDefaultsNodeIp_Type()
)
deployProvPathElementOtnDefaultsNodeIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsNodeIp.setStatus("current")
_DeployProvPathElementOtnDefaultsTid_Type = SnmpAdminString
_DeployProvPathElementOtnDefaultsTid_Object = MibTableColumn
deployProvPathElementOtnDefaultsTid = _DeployProvPathElementOtnDefaultsTid_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 5),
    _DeployProvPathElementOtnDefaultsTid_Type()
)
deployProvPathElementOtnDefaultsTid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsTid.setStatus("current")
_DeployProvPathElementOtnDefaultsLogicalInterfaceId_Type = Unsigned32
_DeployProvPathElementOtnDefaultsLogicalInterfaceId_Object = MibTableColumn
deployProvPathElementOtnDefaultsLogicalInterfaceId = _DeployProvPathElementOtnDefaultsLogicalInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 6),
    _DeployProvPathElementOtnDefaultsLogicalInterfaceId_Type()
)
deployProvPathElementOtnDefaultsLogicalInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsLogicalInterfaceId.setStatus("current")
_DeployProvPathElementOtnDefaultsTie_Type = FspR7CpTie
_DeployProvPathElementOtnDefaultsTie_Object = MibTableColumn
deployProvPathElementOtnDefaultsTie = _DeployProvPathElementOtnDefaultsTie_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 7),
    _DeployProvPathElementOtnDefaultsTie_Type()
)
deployProvPathElementOtnDefaultsTie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsTie.setStatus("current")
_DeployProvPathElementOtnDefaultsUpTributaryODTUType_Type = FspR7OdtuType
_DeployProvPathElementOtnDefaultsUpTributaryODTUType_Object = MibTableColumn
deployProvPathElementOtnDefaultsUpTributaryODTUType = _DeployProvPathElementOtnDefaultsUpTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 8),
    _DeployProvPathElementOtnDefaultsUpTributaryODTUType_Type()
)
deployProvPathElementOtnDefaultsUpTributaryODTUType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsUpTributaryODTUType.setStatus("current")
_DeployProvPathElementOtnDefaultsDownTributaryODTUType_Type = FspR7OdtuType
_DeployProvPathElementOtnDefaultsDownTributaryODTUType_Object = MibTableColumn
deployProvPathElementOtnDefaultsDownTributaryODTUType = _DeployProvPathElementOtnDefaultsDownTributaryODTUType_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 9),
    _DeployProvPathElementOtnDefaultsDownTributaryODTUType_Type()
)
deployProvPathElementOtnDefaultsDownTributaryODTUType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsDownTributaryODTUType.setStatus("current")
_DeployProvPathElementOtnDefaultsUpTributaryPort_Type = SnmpAdminString
_DeployProvPathElementOtnDefaultsUpTributaryPort_Object = MibTableColumn
deployProvPathElementOtnDefaultsUpTributaryPort = _DeployProvPathElementOtnDefaultsUpTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 10),
    _DeployProvPathElementOtnDefaultsUpTributaryPort_Type()
)
deployProvPathElementOtnDefaultsUpTributaryPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsUpTributaryPort.setStatus("current")
_DeployProvPathElementOtnDefaultsDownTributaryPort_Type = SnmpAdminString
_DeployProvPathElementOtnDefaultsDownTributaryPort_Object = MibTableColumn
deployProvPathElementOtnDefaultsDownTributaryPort = _DeployProvPathElementOtnDefaultsDownTributaryPort_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 11),
    _DeployProvPathElementOtnDefaultsDownTributaryPort_Type()
)
deployProvPathElementOtnDefaultsDownTributaryPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsDownTributaryPort.setStatus("current")
_DeployProvPathElementOtnDefaultsUpTributarySlot_Type = SnmpAdminString
_DeployProvPathElementOtnDefaultsUpTributarySlot_Object = MibTableColumn
deployProvPathElementOtnDefaultsUpTributarySlot = _DeployProvPathElementOtnDefaultsUpTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 12),
    _DeployProvPathElementOtnDefaultsUpTributarySlot_Type()
)
deployProvPathElementOtnDefaultsUpTributarySlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsUpTributarySlot.setStatus("current")
_DeployProvPathElementOtnDefaultsDownTributarySlot_Type = SnmpAdminString
_DeployProvPathElementOtnDefaultsDownTributarySlot_Object = MibTableColumn
deployProvPathElementOtnDefaultsDownTributarySlot = _DeployProvPathElementOtnDefaultsDownTributarySlot_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 13),
    _DeployProvPathElementOtnDefaultsDownTributarySlot_Type()
)
deployProvPathElementOtnDefaultsDownTributarySlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsDownTributarySlot.setStatus("current")
_DeployProvPathElementOtnDefaultsUpTributaryTSMethod_Type = FspR7ManualAuto
_DeployProvPathElementOtnDefaultsUpTributaryTSMethod_Object = MibTableColumn
deployProvPathElementOtnDefaultsUpTributaryTSMethod = _DeployProvPathElementOtnDefaultsUpTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 14),
    _DeployProvPathElementOtnDefaultsUpTributaryTSMethod_Type()
)
deployProvPathElementOtnDefaultsUpTributaryTSMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsUpTributaryTSMethod.setStatus("current")
_DeployProvPathElementOtnDefaultsDownTributaryTSMethod_Type = FspR7ManualAuto
_DeployProvPathElementOtnDefaultsDownTributaryTSMethod_Object = MibTableColumn
deployProvPathElementOtnDefaultsDownTributaryTSMethod = _DeployProvPathElementOtnDefaultsDownTributaryTSMethod_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 111, 1, 15),
    _DeployProvPathElementOtnDefaultsDownTributaryTSMethod_Type()
)
deployProvPathElementOtnDefaultsDownTributaryTSMethod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvPathElementOtnDefaultsDownTributaryTSMethod.setStatus("current")
_DeployProvCopyPathOtnTable_Object = MibTable
deployProvCopyPathOtnTable = _DeployProvCopyPathOtnTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 112)
)
if mibBuilder.loadTexts:
    deployProvCopyPathOtnTable.setStatus("current")
_DeployProvCopyPathOtnEntry_Object = MibTableRow
deployProvCopyPathOtnEntry = _DeployProvCopyPathOtnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 112, 1)
)
deployProvCopyPathOtnEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathOtnEntry.setStatus("current")
_DeployProvCopyPathOtnRowStatus_Type = RowStatus
_DeployProvCopyPathOtnRowStatus_Object = MibTableColumn
deployProvCopyPathOtnRowStatus = _DeployProvCopyPathOtnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 112, 1, 1),
    _DeployProvCopyPathOtnRowStatus_Type()
)
deployProvCopyPathOtnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnRowStatus.setStatus("current")
_DeployProvCopyPathOtnSourcePathIndex_Type = EntityIndex
_DeployProvCopyPathOtnSourcePathIndex_Object = MibTableColumn
deployProvCopyPathOtnSourcePathIndex = _DeployProvCopyPathOtnSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 112, 1, 2),
    _DeployProvCopyPathOtnSourcePathIndex_Type()
)
deployProvCopyPathOtnSourcePathIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnSourcePathIndex.setStatus("current")
_DeployProvCopyPathOtnPathId_Type = SnmpAdminString
_DeployProvCopyPathOtnPathId_Object = MibTableColumn
deployProvCopyPathOtnPathId = _DeployProvCopyPathOtnPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 112, 1, 3),
    _DeployProvCopyPathOtnPathId_Type()
)
deployProvCopyPathOtnPathId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnPathId.setStatus("current")
_DeployProvCopyPathOtnCapTable_Object = MibTable
deployProvCopyPathOtnCapTable = _DeployProvCopyPathOtnCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 113)
)
if mibBuilder.loadTexts:
    deployProvCopyPathOtnCapTable.setStatus("current")
_DeployProvCopyPathOtnCapEntry_Object = MibTableRow
deployProvCopyPathOtnCapEntry = _DeployProvCopyPathOtnCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 113, 1)
)
deployProvCopyPathOtnCapEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathOtnCapEntry.setStatus("current")
_DeployProvCopyPathOtnCapRowStatus_Type = FspR7RowStatusCaps
_DeployProvCopyPathOtnCapRowStatus_Object = MibTableColumn
deployProvCopyPathOtnCapRowStatus = _DeployProvCopyPathOtnCapRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 113, 1, 1),
    _DeployProvCopyPathOtnCapRowStatus_Type()
)
deployProvCopyPathOtnCapRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnCapRowStatus.setStatus("current")
_DeployProvCopyPathOtnCapSourcePathIndex_Type = Integer32
_DeployProvCopyPathOtnCapSourcePathIndex_Object = MibTableColumn
deployProvCopyPathOtnCapSourcePathIndex = _DeployProvCopyPathOtnCapSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 113, 1, 2),
    _DeployProvCopyPathOtnCapSourcePathIndex_Type()
)
deployProvCopyPathOtnCapSourcePathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnCapSourcePathIndex.setStatus("current")
_DeployProvCopyPathOtnCapPathId_Type = Integer32
_DeployProvCopyPathOtnCapPathId_Object = MibTableColumn
deployProvCopyPathOtnCapPathId = _DeployProvCopyPathOtnCapPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 113, 1, 3),
    _DeployProvCopyPathOtnCapPathId_Type()
)
deployProvCopyPathOtnCapPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnCapPathId.setStatus("current")
_DeployProvCopyPathOtnDefaultsTable_Object = MibTable
deployProvCopyPathOtnDefaultsTable = _DeployProvCopyPathOtnDefaultsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 114)
)
if mibBuilder.loadTexts:
    deployProvCopyPathOtnDefaultsTable.setStatus("current")
_DeployProvCopyPathOtnDefaultsEntry_Object = MibTableRow
deployProvCopyPathOtnDefaultsEntry = _DeployProvCopyPathOtnDefaultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 114, 1)
)
deployProvCopyPathOtnDefaultsEntry.setIndexNames(
    (0, "ADVA-MIB", "controlPlaneOtnEntityIndex"),
)
if mibBuilder.loadTexts:
    deployProvCopyPathOtnDefaultsEntry.setStatus("current")
_DeployProvCopyPathOtnDefaultsRowStatus_Type = RowStatus
_DeployProvCopyPathOtnDefaultsRowStatus_Object = MibTableColumn
deployProvCopyPathOtnDefaultsRowStatus = _DeployProvCopyPathOtnDefaultsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 114, 1, 1),
    _DeployProvCopyPathOtnDefaultsRowStatus_Type()
)
deployProvCopyPathOtnDefaultsRowStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnDefaultsRowStatus.setStatus("current")
_DeployProvCopyPathOtnDefaultsSourcePathIndex_Type = EntityIndex
_DeployProvCopyPathOtnDefaultsSourcePathIndex_Object = MibTableColumn
deployProvCopyPathOtnDefaultsSourcePathIndex = _DeployProvCopyPathOtnDefaultsSourcePathIndex_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 114, 1, 2),
    _DeployProvCopyPathOtnDefaultsSourcePathIndex_Type()
)
deployProvCopyPathOtnDefaultsSourcePathIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnDefaultsSourcePathIndex.setStatus("current")
_DeployProvCopyPathOtnDefaultsPathId_Type = SnmpAdminString
_DeployProvCopyPathOtnDefaultsPathId_Object = MibTableColumn
deployProvCopyPathOtnDefaultsPathId = _DeployProvCopyPathOtnDefaultsPathId_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 8, 114, 1, 3),
    _DeployProvCopyPathOtnDefaultsPathId_Type()
)
deployProvCopyPathOtnDefaultsPathId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deployProvCopyPathOtnDefaultsPathId.setStatus("current")
_ParameterCapabilities_ObjectIdentity = ObjectIdentity
parameterCapabilities = _ParameterCapabilities_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9)
)
_AreaIdCapTable_Object = MibTable
areaIdCapTable = _AreaIdCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 10)
)
if mibBuilder.loadTexts:
    areaIdCapTable.setStatus("deprecated")
_AreaIdCapEntry_Object = MibTableRow
areaIdCapEntry = _AreaIdCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 10, 1)
)
areaIdCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "areaIdCapIndexCap"),
)
if mibBuilder.loadTexts:
    areaIdCapEntry.setStatus("deprecated")
_AreaIdCapIndexCap_Type = EntityIndex
_AreaIdCapIndexCap_Object = MibTableColumn
areaIdCapIndexCap = _AreaIdCapIndexCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 10, 1, 1),
    _AreaIdCapIndexCap_Type()
)
areaIdCapIndexCap.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    areaIdCapIndexCap.setStatus("current")
_AreaIdCapStringCap_Type = SnmpAdminString
_AreaIdCapStringCap_Object = MibTableColumn
areaIdCapStringCap = _AreaIdCapStringCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 10, 1, 2),
    _AreaIdCapStringCap_Type()
)
areaIdCapStringCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    areaIdCapStringCap.setStatus("current")
_NendIpCapTable_Object = MibTable
nendIpCapTable = _NendIpCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 11)
)
if mibBuilder.loadTexts:
    nendIpCapTable.setStatus("current")
_NendIpCapEntry_Object = MibTableRow
nendIpCapEntry = _NendIpCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 11, 1)
)
nendIpCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "nendIpCapIndexCap"),
)
if mibBuilder.loadTexts:
    nendIpCapEntry.setStatus("current")
_NendIpCapIndexCap_Type = EntityIndex
_NendIpCapIndexCap_Object = MibTableColumn
nendIpCapIndexCap = _NendIpCapIndexCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 11, 1, 1),
    _NendIpCapIndexCap_Type()
)
nendIpCapIndexCap.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    nendIpCapIndexCap.setStatus("current")
_NendIpCapStringCap_Type = SnmpAdminString
_NendIpCapStringCap_Object = MibTableColumn
nendIpCapStringCap = _NendIpCapStringCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 11, 1, 2),
    _NendIpCapStringCap_Type()
)
nendIpCapStringCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nendIpCapStringCap.setStatus("current")
_AreaAidCapTable_Object = MibTable
areaAidCapTable = _AreaAidCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 12)
)
if mibBuilder.loadTexts:
    areaAidCapTable.setStatus("current")
_AreaAidCapEntry_Object = MibTableRow
areaAidCapEntry = _AreaAidCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 12, 1)
)
areaAidCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "areaIdCapIndexCap"),
)
if mibBuilder.loadTexts:
    areaAidCapEntry.setStatus("current")
_AreaAidCapIndexCap_Type = EntityIndex
_AreaAidCapIndexCap_Object = MibTableColumn
areaAidCapIndexCap = _AreaAidCapIndexCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 12, 1, 1),
    _AreaAidCapIndexCap_Type()
)
areaAidCapIndexCap.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    areaAidCapIndexCap.setStatus("current")
_AreaAidCapStringCap_Type = SnmpAdminString
_AreaAidCapStringCap_Object = MibTableColumn
areaAidCapStringCap = _AreaAidCapStringCap_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 5, 9, 12, 1, 2),
    _AreaAidCapStringCap_Type()
)
areaAidCapStringCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    areaAidCapStringCap.setStatus("current")
_PerformanceMIB_ObjectIdentity = ObjectIdentity
performanceMIB = _PerformanceMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6)
)
_PerformanceAdmin_ObjectIdentity = ObjectIdentity
performanceAdmin = _PerformanceAdmin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1)
)
_ThresholdOtuTable_Object = MibTable
thresholdOtuTable = _ThresholdOtuTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1)
)
if mibBuilder.loadTexts:
    thresholdOtuTable.setStatus("current")
_ThresholdOtuEntry_Object = MibTableRow
thresholdOtuEntry = _ThresholdOtuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1)
)
thresholdOtuEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOtuEntry.setStatus("current")


class _ThresholdOtuESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOtuESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOtuESHighThres15min_Object = MibTableColumn
thresholdOtuESHighThres15min = _ThresholdOtuESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 1),
    _ThresholdOtuESHighThres15min_Type()
)
thresholdOtuESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuESHighThres15min.setStatus("current")


class _ThresholdOtuESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOtuESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOtuESHighThres1day_Object = MibTableColumn
thresholdOtuESHighThres1day = _ThresholdOtuESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 2),
    _ThresholdOtuESHighThres1day_Type()
)
thresholdOtuESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuESHighThres1day.setStatus("current")


class _ThresholdOtuSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOtuSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOtuSESHighThres15min_Object = MibTableColumn
thresholdOtuSESHighThres15min = _ThresholdOtuSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 3),
    _ThresholdOtuSESHighThres15min_Type()
)
thresholdOtuSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuSESHighThres15min.setStatus("current")


class _ThresholdOtuSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOtuSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOtuSESHighThres1day_Object = MibTableColumn
thresholdOtuSESHighThres1day = _ThresholdOtuSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 4),
    _ThresholdOtuSESHighThres1day_Type()
)
thresholdOtuSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuSESHighThres1day.setStatus("current")
_ThresholdOtuBbeHighThres15min_Type = Counter64String
_ThresholdOtuBbeHighThres15min_Object = MibTableColumn
thresholdOtuBbeHighThres15min = _ThresholdOtuBbeHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 5),
    _ThresholdOtuBbeHighThres15min_Type()
)
thresholdOtuBbeHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuBbeHighThres15min.setStatus("current")
_ThresholdOtuBbeHighThres1day_Type = Counter64String
_ThresholdOtuBbeHighThres1day_Object = MibTableColumn
thresholdOtuBbeHighThres1day = _ThresholdOtuBbeHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 6),
    _ThresholdOtuBbeHighThres1day_Type()
)
thresholdOtuBbeHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuBbeHighThres1day.setStatus("current")


class _ThresholdOtuUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdOtuUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOtuUASHighThres15min_Object = MibTableColumn
thresholdOtuUASHighThres15min = _ThresholdOtuUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 7),
    _ThresholdOtuUASHighThres15min_Type()
)
thresholdOtuUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuUASHighThres15min.setStatus("current")


class _ThresholdOtuUASHighThres1day_Type(Unsigned32):
    """Custom type thresholdOtuUASHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuUASHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOtuUASHighThres1day_Object = MibTableColumn
thresholdOtuUASHighThres1day = _ThresholdOtuUASHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 1, 1, 8),
    _ThresholdOtuUASHighThres1day_Type()
)
thresholdOtuUASHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuUASHighThres1day.setStatus("current")
_ThresholdOduTable_Object = MibTable
thresholdOduTable = _ThresholdOduTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2)
)
if mibBuilder.loadTexts:
    thresholdOduTable.setStatus("current")
_ThresholdOduEntry_Object = MibTableRow
thresholdOduEntry = _ThresholdOduEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1)
)
thresholdOduEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOduEntry.setStatus("current")


class _ThresholdOduESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduESHighThres15min_Object = MibTableColumn
thresholdOduESHighThres15min = _ThresholdOduESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 1),
    _ThresholdOduESHighThres15min_Type()
)
thresholdOduESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduESHighThres15min.setStatus("current")


class _ThresholdOduESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduESHighThres1day_Object = MibTableColumn
thresholdOduESHighThres1day = _ThresholdOduESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 2),
    _ThresholdOduESHighThres1day_Type()
)
thresholdOduESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduESHighThres1day.setStatus("current")


class _ThresholdOduSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduSESHighThres15min_Object = MibTableColumn
thresholdOduSESHighThres15min = _ThresholdOduSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 3),
    _ThresholdOduSESHighThres15min_Type()
)
thresholdOduSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduSESHighThres15min.setStatus("current")


class _ThresholdOduSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduSESHighThres1day_Object = MibTableColumn
thresholdOduSESHighThres1day = _ThresholdOduSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 4),
    _ThresholdOduSESHighThres1day_Type()
)
thresholdOduSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduSESHighThres1day.setStatus("current")
_ThresholdOduBbeHighThres15min_Type = Counter64String
_ThresholdOduBbeHighThres15min_Object = MibTableColumn
thresholdOduBbeHighThres15min = _ThresholdOduBbeHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 5),
    _ThresholdOduBbeHighThres15min_Type()
)
thresholdOduBbeHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduBbeHighThres15min.setStatus("current")
_ThresholdOduBbeHighThres1day_Type = Counter64String
_ThresholdOduBbeHighThres1day_Object = MibTableColumn
thresholdOduBbeHighThres1day = _ThresholdOduBbeHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 6),
    _ThresholdOduBbeHighThres1day_Type()
)
thresholdOduBbeHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduBbeHighThres1day.setStatus("current")


class _ThresholdOduUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduUASHighThres15min_Object = MibTableColumn
thresholdOduUASHighThres15min = _ThresholdOduUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 7),
    _ThresholdOduUASHighThres15min_Type()
)
thresholdOduUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduUASHighThres15min.setStatus("current")


class _ThresholdOduUASHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduUASHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduUASHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduUASHighThres1day_Object = MibTableColumn
thresholdOduUASHighThres1day = _ThresholdOduUASHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 2, 1, 8),
    _ThresholdOduUASHighThres1day_Type()
)
thresholdOduUASHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduUASHighThres1day.setStatus("current")
_ThresholdOduTcmATable_Object = MibTable
thresholdOduTcmATable = _ThresholdOduTcmATable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3)
)
if mibBuilder.loadTexts:
    thresholdOduTcmATable.setStatus("current")
_ThresholdOduTcmAEntry_Object = MibTableRow
thresholdOduTcmAEntry = _ThresholdOduTcmAEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1)
)
thresholdOduTcmAEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOduTcmAEntry.setStatus("current")


class _ThresholdOduTcmAESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmAESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmAESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmAESHighThres15min_Object = MibTableColumn
thresholdOduTcmAESHighThres15min = _ThresholdOduTcmAESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 1),
    _ThresholdOduTcmAESHighThres15min_Type()
)
thresholdOduTcmAESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmAESHighThres15min.setStatus("current")


class _ThresholdOduTcmAESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmAESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmAESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmAESHighThres1day_Object = MibTableColumn
thresholdOduTcmAESHighThres1day = _ThresholdOduTcmAESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 2),
    _ThresholdOduTcmAESHighThres1day_Type()
)
thresholdOduTcmAESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmAESHighThres1day.setStatus("current")


class _ThresholdOduTcmASESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmASESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmASESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmASESHighThres15min_Object = MibTableColumn
thresholdOduTcmASESHighThres15min = _ThresholdOduTcmASESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 3),
    _ThresholdOduTcmASESHighThres15min_Type()
)
thresholdOduTcmASESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmASESHighThres15min.setStatus("current")


class _ThresholdOduTcmASESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmASESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmASESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmASESHighThres1day_Object = MibTableColumn
thresholdOduTcmASESHighThres1day = _ThresholdOduTcmASESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 4),
    _ThresholdOduTcmASESHighThres1day_Type()
)
thresholdOduTcmASESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmASESHighThres1day.setStatus("current")
_ThresholdOduTcmABbeHighThres15min_Type = Counter64String
_ThresholdOduTcmABbeHighThres15min_Object = MibTableColumn
thresholdOduTcmABbeHighThres15min = _ThresholdOduTcmABbeHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 5),
    _ThresholdOduTcmABbeHighThres15min_Type()
)
thresholdOduTcmABbeHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmABbeHighThres15min.setStatus("current")
_ThresholdOduTcmABbeHighThres1day_Type = Counter64String
_ThresholdOduTcmABbeHighThres1day_Object = MibTableColumn
thresholdOduTcmABbeHighThres1day = _ThresholdOduTcmABbeHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 6),
    _ThresholdOduTcmABbeHighThres1day_Type()
)
thresholdOduTcmABbeHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmABbeHighThres1day.setStatus("current")


class _ThresholdOduTcmAUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmAUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmAUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmAUASHighThres15min_Object = MibTableColumn
thresholdOduTcmAUASHighThres15min = _ThresholdOduTcmAUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 7),
    _ThresholdOduTcmAUASHighThres15min_Type()
)
thresholdOduTcmAUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmAUASHighThres15min.setStatus("current")


class _ThresholdOduTcmAUASHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmAUASHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmAUASHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmAUASHighThres1day_Object = MibTableColumn
thresholdOduTcmAUASHighThres1day = _ThresholdOduTcmAUASHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 3, 1, 8),
    _ThresholdOduTcmAUASHighThres1day_Type()
)
thresholdOduTcmAUASHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmAUASHighThres1day.setStatus("current")
_ThresholdOduTcmBTable_Object = MibTable
thresholdOduTcmBTable = _ThresholdOduTcmBTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4)
)
if mibBuilder.loadTexts:
    thresholdOduTcmBTable.setStatus("current")
_ThresholdOduTcmBEntry_Object = MibTableRow
thresholdOduTcmBEntry = _ThresholdOduTcmBEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1)
)
thresholdOduTcmBEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOduTcmBEntry.setStatus("current")


class _ThresholdOduTcmBBESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmBBESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmBBESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmBBESHighThres15min_Object = MibTableColumn
thresholdOduTcmBBESHighThres15min = _ThresholdOduTcmBBESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 1),
    _ThresholdOduTcmBBESHighThres15min_Type()
)
thresholdOduTcmBBESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBBESHighThres15min.setStatus("current")


class _ThresholdOduTcmBESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmBESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmBESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmBESHighThres1day_Object = MibTableColumn
thresholdOduTcmBESHighThres1day = _ThresholdOduTcmBESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 2),
    _ThresholdOduTcmBESHighThres1day_Type()
)
thresholdOduTcmBESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBESHighThres1day.setStatus("current")


class _ThresholdOduTcmBSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmBSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmBSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmBSESHighThres15min_Object = MibTableColumn
thresholdOduTcmBSESHighThres15min = _ThresholdOduTcmBSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 3),
    _ThresholdOduTcmBSESHighThres15min_Type()
)
thresholdOduTcmBSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBSESHighThres15min.setStatus("current")


class _ThresholdOduTcmBSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmBSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmBSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmBSESHighThres1day_Object = MibTableColumn
thresholdOduTcmBSESHighThres1day = _ThresholdOduTcmBSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 4),
    _ThresholdOduTcmBSESHighThres1day_Type()
)
thresholdOduTcmBSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBSESHighThres1day.setStatus("current")
_ThresholdOduTcmBOduTcmBBbeHighThres15min_Type = Counter64String
_ThresholdOduTcmBOduTcmBBbeHighThres15min_Object = MibTableColumn
thresholdOduTcmBOduTcmBBbeHighThres15min = _ThresholdOduTcmBOduTcmBBbeHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 5),
    _ThresholdOduTcmBOduTcmBBbeHighThres15min_Type()
)
thresholdOduTcmBOduTcmBBbeHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBOduTcmBBbeHighThres15min.setStatus("current")
_ThresholdOduTcmBOduTcmBBbeHighThres1day_Type = Counter64String
_ThresholdOduTcmBOduTcmBBbeHighThres1day_Object = MibTableColumn
thresholdOduTcmBOduTcmBBbeHighThres1day = _ThresholdOduTcmBOduTcmBBbeHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 6),
    _ThresholdOduTcmBOduTcmBBbeHighThres1day_Type()
)
thresholdOduTcmBOduTcmBBbeHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBOduTcmBBbeHighThres1day.setStatus("current")


class _ThresholdOduTcmBUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmBUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmBUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmBUASHighThres15min_Object = MibTableColumn
thresholdOduTcmBUASHighThres15min = _ThresholdOduTcmBUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 7),
    _ThresholdOduTcmBUASHighThres15min_Type()
)
thresholdOduTcmBUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBUASHighThres15min.setStatus("current")


class _ThresholdOduTcmBUASHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmBUASHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmBUASHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmBUASHighThres1day_Object = MibTableColumn
thresholdOduTcmBUASHighThres1day = _ThresholdOduTcmBUASHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 4, 1, 8),
    _ThresholdOduTcmBUASHighThres1day_Type()
)
thresholdOduTcmBUASHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmBUASHighThres1day.setStatus("current")
_ThresholdSonetSectTable_Object = MibTable
thresholdSonetSectTable = _ThresholdSonetSectTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5)
)
if mibBuilder.loadTexts:
    thresholdSonetSectTable.setStatus("current")
_ThresholdSonetSectEntry_Object = MibTableRow
thresholdSonetSectEntry = _ThresholdSonetSectEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1)
)
thresholdSonetSectEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdSonetSectEntry.setStatus("current")


class _ThresholdSonetSectESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetSectESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetSectESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetSectESHighThres15min_Object = MibTableColumn
thresholdSonetSectESHighThres15min = _ThresholdSonetSectESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 1),
    _ThresholdSonetSectESHighThres15min_Type()
)
thresholdSonetSectESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectESHighThres15min.setStatus("current")


class _ThresholdSonetSectESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetSectESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetSectESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetSectESHighThres1day_Object = MibTableColumn
thresholdSonetSectESHighThres1day = _ThresholdSonetSectESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 2),
    _ThresholdSonetSectESHighThres1day_Type()
)
thresholdSonetSectESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectESHighThres1day.setStatus("current")


class _ThresholdSonetSectSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetSectSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetSectSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetSectSESHighThres15min_Object = MibTableColumn
thresholdSonetSectSESHighThres15min = _ThresholdSonetSectSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 3),
    _ThresholdSonetSectSESHighThres15min_Type()
)
thresholdSonetSectSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectSESHighThres15min.setStatus("current")


class _ThresholdSonetSectSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetSectSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetSectSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetSectSESHighThres1day_Object = MibTableColumn
thresholdSonetSectSESHighThres1day = _ThresholdSonetSectSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 4),
    _ThresholdSonetSectSESHighThres1day_Type()
)
thresholdSonetSectSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectSESHighThres1day.setStatus("current")


class _ThresholdSonetSectSEFSHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetSectSEFSHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetSectSEFSHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetSectSEFSHighThres15min_Object = MibTableColumn
thresholdSonetSectSEFSHighThres15min = _ThresholdSonetSectSEFSHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 5),
    _ThresholdSonetSectSEFSHighThres15min_Type()
)
thresholdSonetSectSEFSHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectSEFSHighThres15min.setStatus("current")


class _ThresholdSonetSectSEFSHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetSectSEFSHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetSectSEFSHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetSectSEFSHighThres1day_Object = MibTableColumn
thresholdSonetSectSEFSHighThres1day = _ThresholdSonetSectSEFSHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 6),
    _ThresholdSonetSectSEFSHighThres1day_Type()
)
thresholdSonetSectSEFSHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectSEFSHighThres1day.setStatus("current")
_ThresholdSonetSectCVHighThres15min_Type = Counter64String
_ThresholdSonetSectCVHighThres15min_Object = MibTableColumn
thresholdSonetSectCVHighThres15min = _ThresholdSonetSectCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 7),
    _ThresholdSonetSectCVHighThres15min_Type()
)
thresholdSonetSectCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectCVHighThres15min.setStatus("current")
_ThresholdSonetSectCVHighThres1day_Type = Counter64String
_ThresholdSonetSectCVHighThres1day_Object = MibTableColumn
thresholdSonetSectCVHighThres1day = _ThresholdSonetSectCVHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 5, 1, 8),
    _ThresholdSonetSectCVHighThres1day_Type()
)
thresholdSonetSectCVHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetSectCVHighThres1day.setStatus("current")
_ThresholdSonetLineTable_Object = MibTable
thresholdSonetLineTable = _ThresholdSonetLineTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6)
)
if mibBuilder.loadTexts:
    thresholdSonetLineTable.setStatus("deprecated")
_ThresholdSonetLineEntry_Object = MibTableRow
thresholdSonetLineEntry = _ThresholdSonetLineEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1)
)
thresholdSonetLineEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdSonetLineEntry.setStatus("deprecated")


class _ThresholdSonetLineESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLineESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLineESHighThres15min_Object = MibTableColumn
thresholdSonetLineESHighThres15min = _ThresholdSonetLineESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 1),
    _ThresholdSonetLineESHighThres15min_Type()
)
thresholdSonetLineESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineESHighThres15min.setStatus("deprecated")


class _ThresholdSonetLineESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLineESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLineESHighThres1day_Object = MibTableColumn
thresholdSonetLineESHighThres1day = _ThresholdSonetLineESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 2),
    _ThresholdSonetLineESHighThres1day_Type()
)
thresholdSonetLineESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineESHighThres1day.setStatus("deprecated")


class _ThresholdSonetLineSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLineSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLineSESHighThres15min_Object = MibTableColumn
thresholdSonetLineSESHighThres15min = _ThresholdSonetLineSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 3),
    _ThresholdSonetLineSESHighThres15min_Type()
)
thresholdSonetLineSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineSESHighThres15min.setStatus("deprecated")


class _ThresholdSonetLineSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLineSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLineSESHighThres1day_Object = MibTableColumn
thresholdSonetLineSESHighThres1day = _ThresholdSonetLineSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 4),
    _ThresholdSonetLineSESHighThres1day_Type()
)
thresholdSonetLineSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineSESHighThres1day.setStatus("deprecated")


class _ThresholdSonetLineUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLineUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLineUASHighThres15min_Object = MibTableColumn
thresholdSonetLineUASHighThres15min = _ThresholdSonetLineUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 5),
    _ThresholdSonetLineUASHighThres15min_Type()
)
thresholdSonetLineUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineUASHighThres15min.setStatus("deprecated")


class _ThresholdSonetLineUASSHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLineUASSHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineUASSHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLineUASSHighThres1day_Object = MibTableColumn
thresholdSonetLineUASSHighThres1day = _ThresholdSonetLineUASSHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 6),
    _ThresholdSonetLineUASSHighThres1day_Type()
)
thresholdSonetLineUASSHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineUASSHighThres1day.setStatus("deprecated")
_ThresholdSonetLineCVHighThres15min_Type = Unsigned32
_ThresholdSonetLineCVHighThres15min_Object = MibTableColumn
thresholdSonetLineCVHighThres15min = _ThresholdSonetLineCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 7),
    _ThresholdSonetLineCVHighThres15min_Type()
)
thresholdSonetLineCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineCVHighThres15min.setStatus("deprecated")
_ThresholdSonetLineCVSHighThres1day_Type = Counter64String
_ThresholdSonetLineCVSHighThres1day_Object = MibTableColumn
thresholdSonetLineCVSHighThres1day = _ThresholdSonetLineCVSHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 8),
    _ThresholdSonetLineCVSHighThres1day_Type()
)
thresholdSonetLineCVSHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineCVSHighThres1day.setStatus("deprecated")
_ThresholdSonetLineCViolHighThres15min_Type = Counter64String
_ThresholdSonetLineCViolHighThres15min_Object = MibTableColumn
thresholdSonetLineCViolHighThres15min = _ThresholdSonetLineCViolHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 6, 1, 9),
    _ThresholdSonetLineCViolHighThres15min_Type()
)
thresholdSonetLineCViolHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineCViolHighThres15min.setStatus("deprecated")
_ThresholdSonetHoPathTable_Object = MibTable
thresholdSonetHoPathTable = _ThresholdSonetHoPathTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7)
)
if mibBuilder.loadTexts:
    thresholdSonetHoPathTable.setStatus("current")
_ThresholdSonetHoPathEntry_Object = MibTableRow
thresholdSonetHoPathEntry = _ThresholdSonetHoPathEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1)
)
thresholdSonetHoPathEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdSonetHoPathEntry.setStatus("current")


class _ThresholdSonetHoPathESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetHoPathESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetHoPathESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetHoPathESHighThres15min_Object = MibTableColumn
thresholdSonetHoPathESHighThres15min = _ThresholdSonetHoPathESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 1),
    _ThresholdSonetHoPathESHighThres15min_Type()
)
thresholdSonetHoPathESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathESHighThres15min.setStatus("current")


class _ThresholdSonetHoPathESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetHoPathESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetHoPathESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetHoPathESHighThres1day_Object = MibTableColumn
thresholdSonetHoPathESHighThres1day = _ThresholdSonetHoPathESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 2),
    _ThresholdSonetHoPathESHighThres1day_Type()
)
thresholdSonetHoPathESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathESHighThres1day.setStatus("current")


class _ThresholdSonetHoPathSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetHoPathSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetHoPathSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetHoPathSESHighThres15min_Object = MibTableColumn
thresholdSonetHoPathSESHighThres15min = _ThresholdSonetHoPathSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 3),
    _ThresholdSonetHoPathSESHighThres15min_Type()
)
thresholdSonetHoPathSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathSESHighThres15min.setStatus("current")


class _ThresholdSonetHoPathSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetHoPathSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetHoPathSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetHoPathSESHighThres1day_Object = MibTableColumn
thresholdSonetHoPathSESHighThres1day = _ThresholdSonetHoPathSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 4),
    _ThresholdSonetHoPathSESHighThres1day_Type()
)
thresholdSonetHoPathSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathSESHighThres1day.setStatus("current")


class _ThresholdSonetHoPathUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetHoPathUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetHoPathUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetHoPathUASHighThres15min_Object = MibTableColumn
thresholdSonetHoPathUASHighThres15min = _ThresholdSonetHoPathUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 5),
    _ThresholdSonetHoPathUASHighThres15min_Type()
)
thresholdSonetHoPathUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathUASHighThres15min.setStatus("current")


class _ThresholdSonetHoPathUASHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetHoPathUASHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetHoPathUASHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetHoPathUASHighThres1day_Object = MibTableColumn
thresholdSonetHoPathUASHighThres1day = _ThresholdSonetHoPathUASHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 6),
    _ThresholdSonetHoPathUASHighThres1day_Type()
)
thresholdSonetHoPathUASHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathUASHighThres1day.setStatus("current")
_ThresholdSonetHoPathCVHighThres15min_Type = Counter64String
_ThresholdSonetHoPathCVHighThres15min_Object = MibTableColumn
thresholdSonetHoPathCVHighThres15min = _ThresholdSonetHoPathCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 7),
    _ThresholdSonetHoPathCVHighThres15min_Type()
)
thresholdSonetHoPathCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathCVHighThres15min.setStatus("current")
_ThresholdSonetHoPathCVHighThres1day_Type = Counter64String
_ThresholdSonetHoPathCVHighThres1day_Object = MibTableColumn
thresholdSonetHoPathCVHighThres1day = _ThresholdSonetHoPathCVHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 7, 1, 8),
    _ThresholdSonetHoPathCVHighThres1day_Type()
)
thresholdSonetHoPathCVHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetHoPathCVHighThres1day.setStatus("current")
_ThresholdSonetLoPathTable_Object = MibTable
thresholdSonetLoPathTable = _ThresholdSonetLoPathTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8)
)
if mibBuilder.loadTexts:
    thresholdSonetLoPathTable.setStatus("current")
_ThresholdSonetLoPathEntry_Object = MibTableRow
thresholdSonetLoPathEntry = _ThresholdSonetLoPathEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1)
)
thresholdSonetLoPathEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdSonetLoPathEntry.setStatus("current")


class _ThresholdSonetLoPathESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLoPathESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLoPathESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLoPathESHighThres15min_Object = MibTableColumn
thresholdSonetLoPathESHighThres15min = _ThresholdSonetLoPathESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 1),
    _ThresholdSonetLoPathESHighThres15min_Type()
)
thresholdSonetLoPathESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathESHighThres15min.setStatus("current")


class _ThresholdSonetLoPathESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLoPathESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLoPathESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLoPathESHighThres1day_Object = MibTableColumn
thresholdSonetLoPathESHighThres1day = _ThresholdSonetLoPathESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 2),
    _ThresholdSonetLoPathESHighThres1day_Type()
)
thresholdSonetLoPathESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathESHighThres1day.setStatus("current")


class _ThresholdSonetLoPathSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLoPathSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLoPathSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLoPathSESHighThres15min_Object = MibTableColumn
thresholdSonetLoPathSESHighThres15min = _ThresholdSonetLoPathSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 3),
    _ThresholdSonetLoPathSESHighThres15min_Type()
)
thresholdSonetLoPathSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathSESHighThres15min.setStatus("current")


class _ThresholdSonetLoPathSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLoPathSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLoPathSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLoPathSESHighThres1day_Object = MibTableColumn
thresholdSonetLoPathSESHighThres1day = _ThresholdSonetLoPathSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 4),
    _ThresholdSonetLoPathSESHighThres1day_Type()
)
thresholdSonetLoPathSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathSESHighThres1day.setStatus("current")


class _ThresholdSonetLoPathUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLoPathUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLoPathUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLoPathUASHighThres15min_Object = MibTableColumn
thresholdSonetLoPathUASHighThres15min = _ThresholdSonetLoPathUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 5),
    _ThresholdSonetLoPathUASHighThres15min_Type()
)
thresholdSonetLoPathUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathUASHighThres15min.setStatus("current")


class _ThresholdSonetLoPathUASHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLoPathUASHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLoPathUASHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLoPathUASHighThres1day_Object = MibTableColumn
thresholdSonetLoPathUASHighThres1day = _ThresholdSonetLoPathUASHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 6),
    _ThresholdSonetLoPathUASHighThres1day_Type()
)
thresholdSonetLoPathUASHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathUASHighThres1day.setStatus("current")
_ThresholdSonetLoPathCVHighThres15min_Type = Counter64String
_ThresholdSonetLoPathCVHighThres15min_Object = MibTableColumn
thresholdSonetLoPathCVHighThres15min = _ThresholdSonetLoPathCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 7),
    _ThresholdSonetLoPathCVHighThres15min_Type()
)
thresholdSonetLoPathCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathCVHighThres15min.setStatus("current")
_ThresholdSonetLoPathCVHighThres1day_Type = Counter64String
_ThresholdSonetLoPathCVHighThres1day_Object = MibTableColumn
thresholdSonetLoPathCVHighThres1day = _ThresholdSonetLoPathCVHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 8, 1, 8),
    _ThresholdSonetLoPathCVHighThres1day_Type()
)
thresholdSonetLoPathCVHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLoPathCVHighThres1day.setStatus("current")
_ThresholdPhysPerfTable_Object = MibTable
thresholdPhysPerfTable = _ThresholdPhysPerfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9)
)
if mibBuilder.loadTexts:
    thresholdPhysPerfTable.setStatus("current")
_ThresholdPhysPerfEntry_Object = MibTableRow
thresholdPhysPerfEntry = _ThresholdPhysPerfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1)
)
thresholdPhysPerfEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdPhysPerfEntry.setStatus("current")


class _ThresholdPhysPerfOpticalInputPwrLow_Type(Integer32):
    """Custom type thresholdPhysPerfOpticalInputPwrLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-450, 260),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfOpticalInputPwrLow_Type.__name__ = "Integer32"
_ThresholdPhysPerfOpticalInputPwrLow_Object = MibTableColumn
thresholdPhysPerfOpticalInputPwrLow = _ThresholdPhysPerfOpticalInputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 1),
    _ThresholdPhysPerfOpticalInputPwrLow_Type()
)
thresholdPhysPerfOpticalInputPwrLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalInputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalInputPwrLow.setUnits("0.1 dBm")


class _ThresholdPhysPerfOpticalInputPwrHigh_Type(Integer32):
    """Custom type thresholdPhysPerfOpticalInputPwrHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-450, 260),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfOpticalInputPwrHigh_Type.__name__ = "Integer32"
_ThresholdPhysPerfOpticalInputPwrHigh_Object = MibTableColumn
thresholdPhysPerfOpticalInputPwrHigh = _ThresholdPhysPerfOpticalInputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 2),
    _ThresholdPhysPerfOpticalInputPwrHigh_Type()
)
thresholdPhysPerfOpticalInputPwrHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalInputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalInputPwrHigh.setUnits("0.1 dBm")
_ThresholdPhysPerfOpticalOutputPwrLow_Type = Integer32
_ThresholdPhysPerfOpticalOutputPwrLow_Object = MibTableColumn
thresholdPhysPerfOpticalOutputPwrLow = _ThresholdPhysPerfOpticalOutputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 3),
    _ThresholdPhysPerfOpticalOutputPwrLow_Type()
)
thresholdPhysPerfOpticalOutputPwrLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalOutputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalOutputPwrLow.setUnits("0.1 dBm")
_ThresholdPhysPerfOpticalOutputPwrHigh_Type = Integer32
_ThresholdPhysPerfOpticalOutputPwrHigh_Object = MibTableColumn
thresholdPhysPerfOpticalOutputPwrHigh = _ThresholdPhysPerfOpticalOutputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 4),
    _ThresholdPhysPerfOpticalOutputPwrHigh_Type()
)
thresholdPhysPerfOpticalOutputPwrHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalOutputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfOpticalOutputPwrHigh.setUnits("0.1 dBm")
_ThresholdPhysPerfLaserBiasCurrentNormalized_Type = Unsigned32
_ThresholdPhysPerfLaserBiasCurrentNormalized_Object = MibTableColumn
thresholdPhysPerfLaserBiasCurrentNormalized = _ThresholdPhysPerfLaserBiasCurrentNormalized_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 5),
    _ThresholdPhysPerfLaserBiasCurrentNormalized_Type()
)
thresholdPhysPerfLaserBiasCurrentNormalized.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLaserBiasCurrentNormalized.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLaserBiasCurrentNormalized.setUnits("%")
_ThresholdPhysPerfAttRxLow_Type = Integer32
_ThresholdPhysPerfAttRxLow_Object = MibTableColumn
thresholdPhysPerfAttRxLow = _ThresholdPhysPerfAttRxLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 6),
    _ThresholdPhysPerfAttRxLow_Type()
)
thresholdPhysPerfAttRxLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttRxLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttRxLow.setUnits("0.1 dB")
_ThresholdPhysPerfAttRxHigh_Type = Integer32
_ThresholdPhysPerfAttRxHigh_Object = MibTableColumn
thresholdPhysPerfAttRxHigh = _ThresholdPhysPerfAttRxHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 7),
    _ThresholdPhysPerfAttRxHigh_Type()
)
thresholdPhysPerfAttRxHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttRxHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttRxHigh.setUnits("0.1 dB")
_ThresholdPhysPerfAttTxLow_Type = Integer32
_ThresholdPhysPerfAttTxLow_Object = MibTableColumn
thresholdPhysPerfAttTxLow = _ThresholdPhysPerfAttTxLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 8),
    _ThresholdPhysPerfAttTxLow_Type()
)
thresholdPhysPerfAttTxLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttTxLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttTxLow.setUnits("0.1 dB")
_ThresholdPhysPerfAttTxHigh_Type = Integer32
_ThresholdPhysPerfAttTxHigh_Object = MibTableColumn
thresholdPhysPerfAttTxHigh = _ThresholdPhysPerfAttTxHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 9),
    _ThresholdPhysPerfAttTxHigh_Type()
)
thresholdPhysPerfAttTxHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttTxHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfAttTxHigh.setUnits("0.1 dB")
_ThresholdPhysPerfLaserTempLowThres_Type = Integer32
_ThresholdPhysPerfLaserTempLowThres_Object = MibTableColumn
thresholdPhysPerfLaserTempLowThres = _ThresholdPhysPerfLaserTempLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 10),
    _ThresholdPhysPerfLaserTempLowThres_Type()
)
thresholdPhysPerfLaserTempLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLaserTempLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLaserTempLowThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfLaserTempHighThres_Type = Integer32
_ThresholdPhysPerfLaserTempHighThres_Object = MibTableColumn
thresholdPhysPerfLaserTempHighThres = _ThresholdPhysPerfLaserTempHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 11),
    _ThresholdPhysPerfLaserTempHighThres_Type()
)
thresholdPhysPerfLaserTempHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLaserTempHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLaserTempHighThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfPumpLaser1TempHighThres_Type = Integer32
_ThresholdPhysPerfPumpLaser1TempHighThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser1TempHighThres = _ThresholdPhysPerfPumpLaser1TempHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 12),
    _ThresholdPhysPerfPumpLaser1TempHighThres_Type()
)
thresholdPhysPerfPumpLaser1TempHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser1TempHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser1TempHighThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfPumpLaser1TempLowThres_Type = Integer32
_ThresholdPhysPerfPumpLaser1TempLowThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser1TempLowThres = _ThresholdPhysPerfPumpLaser1TempLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 13),
    _ThresholdPhysPerfPumpLaser1TempLowThres_Type()
)
thresholdPhysPerfPumpLaser1TempLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser1TempLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser1TempLowThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfPumpLaser2TempHighThres_Type = Integer32
_ThresholdPhysPerfPumpLaser2TempHighThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser2TempHighThres = _ThresholdPhysPerfPumpLaser2TempHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 14),
    _ThresholdPhysPerfPumpLaser2TempHighThres_Type()
)
thresholdPhysPerfPumpLaser2TempHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser2TempHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser2TempHighThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfPumpLaser2TempLowThres_Type = Integer32
_ThresholdPhysPerfPumpLaser2TempLowThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser2TempLowThres = _ThresholdPhysPerfPumpLaser2TempLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 15),
    _ThresholdPhysPerfPumpLaser2TempLowThres_Type()
)
thresholdPhysPerfPumpLaser2TempLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser2TempLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser2TempLowThres.setUnits("0.1 degree Celsius")


class _ThresholdPhysPerfOscPwrRcvHighThres_Type(Integer32):
    """Custom type thresholdPhysPerfOscPwrRcvHighThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-470, -50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfOscPwrRcvHighThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfOscPwrRcvHighThres_Object = MibTableColumn
thresholdPhysPerfOscPwrRcvHighThres = _ThresholdPhysPerfOscPwrRcvHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 16),
    _ThresholdPhysPerfOscPwrRcvHighThres_Type()
)
thresholdPhysPerfOscPwrRcvHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfOscPwrRcvHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfOscPwrRcvHighThres.setUnits("0.1 dBm")


class _ThresholdPhysPerfOscPwrRcvLowThres_Type(Integer32):
    """Custom type thresholdPhysPerfOscPwrRcvLowThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-470, -50),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfOscPwrRcvLowThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfOscPwrRcvLowThres_Object = MibTableColumn
thresholdPhysPerfOscPwrRcvLowThres = _ThresholdPhysPerfOscPwrRcvLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 17),
    _ThresholdPhysPerfOscPwrRcvLowThres_Type()
)
thresholdPhysPerfOscPwrRcvLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfOscPwrRcvLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfOscPwrRcvLowThres.setUnits("0.1 dBm")
_ThresholdPhysPerfRamanPumpPwrHighThres_Type = Integer32
_ThresholdPhysPerfRamanPumpPwrHighThres_Object = MibTableColumn
thresholdPhysPerfRamanPumpPwrHighThres = _ThresholdPhysPerfRamanPumpPwrHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 18),
    _ThresholdPhysPerfRamanPumpPwrHighThres_Type()
)
thresholdPhysPerfRamanPumpPwrHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfRamanPumpPwrHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfRamanPumpPwrHighThres.setUnits("0.1 dBm")
_ThresholdPhysPerfRamanPumpPwrLowThres_Type = Integer32
_ThresholdPhysPerfRamanPumpPwrLowThres_Object = MibTableColumn
thresholdPhysPerfRamanPumpPwrLowThres = _ThresholdPhysPerfRamanPumpPwrLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 19),
    _ThresholdPhysPerfRamanPumpPwrLowThres_Type()
)
thresholdPhysPerfRamanPumpPwrLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfRamanPumpPwrLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfRamanPumpPwrLowThres.setUnits("0.1 dBm")


class _ThresholdPhysPerfConfigurableOpticalOutputPwrLow_Type(Integer32):
    """Custom type thresholdPhysPerfConfigurableOpticalOutputPwrLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-500, 300),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfConfigurableOpticalOutputPwrLow_Type.__name__ = "Integer32"
_ThresholdPhysPerfConfigurableOpticalOutputPwrLow_Object = MibTableColumn
thresholdPhysPerfConfigurableOpticalOutputPwrLow = _ThresholdPhysPerfConfigurableOpticalOutputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 20),
    _ThresholdPhysPerfConfigurableOpticalOutputPwrLow_Type()
)
thresholdPhysPerfConfigurableOpticalOutputPwrLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfConfigurableOpticalOutputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfConfigurableOpticalOutputPwrLow.setUnits("0.1 dBm")


class _ThresholdPhysPerfConfigurableOpticalOutputPwrHigh_Type(Integer32):
    """Custom type thresholdPhysPerfConfigurableOpticalOutputPwrHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-500, 300),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfConfigurableOpticalOutputPwrHigh_Type.__name__ = "Integer32"
_ThresholdPhysPerfConfigurableOpticalOutputPwrHigh_Object = MibTableColumn
thresholdPhysPerfConfigurableOpticalOutputPwrHigh = _ThresholdPhysPerfConfigurableOpticalOutputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 21),
    _ThresholdPhysPerfConfigurableOpticalOutputPwrHigh_Type()
)
thresholdPhysPerfConfigurableOpticalOutputPwrHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfConfigurableOpticalOutputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfConfigurableOpticalOutputPwrHigh.setUnits("0.1 dBm")


class _ThresholdPhysPerfBrPwrReceivedHighThres_Type(Integer32):
    """Custom type thresholdPhysPerfBrPwrReceivedHighThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-300, -180),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfBrPwrReceivedHighThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfBrPwrReceivedHighThres_Object = MibTableColumn
thresholdPhysPerfBrPwrReceivedHighThres = _ThresholdPhysPerfBrPwrReceivedHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 22),
    _ThresholdPhysPerfBrPwrReceivedHighThres_Type()
)
thresholdPhysPerfBrPwrReceivedHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfBrPwrReceivedHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfBrPwrReceivedHighThres.setUnits("0.1 dB")


class _ThresholdPhysPerfDispersionCompensationLowThres_Type(Integer32):
    """Custom type thresholdPhysPerfDispersionCompensationLowThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfDispersionCompensationLowThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfDispersionCompensationLowThres_Object = MibTableColumn
thresholdPhysPerfDispersionCompensationLowThres = _ThresholdPhysPerfDispersionCompensationLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 23),
    _ThresholdPhysPerfDispersionCompensationLowThres_Type()
)
thresholdPhysPerfDispersionCompensationLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfDispersionCompensationLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfDispersionCompensationLowThres.setUnits("ps/nm")


class _ThresholdPhysPerfDispersionCompensationHighThres_Type(Integer32):
    """Custom type thresholdPhysPerfDispersionCompensationHighThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfDispersionCompensationHighThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfDispersionCompensationHighThres_Object = MibTableColumn
thresholdPhysPerfDispersionCompensationHighThres = _ThresholdPhysPerfDispersionCompensationHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 24),
    _ThresholdPhysPerfDispersionCompensationHighThres_Type()
)
thresholdPhysPerfDispersionCompensationHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfDispersionCompensationHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfDispersionCompensationHighThres.setUnits("ps/nm")


class _ThresholdPhysPerfLowerAtlinkThres_Type(Integer32):
    """Custom type thresholdPhysPerfLowerAtlinkThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 500),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfLowerAtlinkThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfLowerAtlinkThres_Object = MibTableColumn
thresholdPhysPerfLowerAtlinkThres = _ThresholdPhysPerfLowerAtlinkThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 25),
    _ThresholdPhysPerfLowerAtlinkThres_Type()
)
thresholdPhysPerfLowerAtlinkThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLowerAtlinkThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLowerAtlinkThres.setUnits("0.1 dB")


class _ThresholdPhysPerfUpperAtlinkThres_Type(Integer32):
    """Custom type thresholdPhysPerfUpperAtlinkThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 500),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfUpperAtlinkThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfUpperAtlinkThres_Object = MibTableColumn
thresholdPhysPerfUpperAtlinkThres = _ThresholdPhysPerfUpperAtlinkThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 26),
    _ThresholdPhysPerfUpperAtlinkThres_Type()
)
thresholdPhysPerfUpperAtlinkThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfUpperAtlinkThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfUpperAtlinkThres.setUnits("0.1 dB")
_ThresholdPhysPerfPumpLaser3TempHighThres_Type = Integer32
_ThresholdPhysPerfPumpLaser3TempHighThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser3TempHighThres = _ThresholdPhysPerfPumpLaser3TempHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 27),
    _ThresholdPhysPerfPumpLaser3TempHighThres_Type()
)
thresholdPhysPerfPumpLaser3TempHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser3TempHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser3TempHighThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfPumpLaser3TempLowThres_Type = Integer32
_ThresholdPhysPerfPumpLaser3TempLowThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser3TempLowThres = _ThresholdPhysPerfPumpLaser3TempLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 28),
    _ThresholdPhysPerfPumpLaser3TempLowThres_Type()
)
thresholdPhysPerfPumpLaser3TempLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser3TempLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser3TempLowThres.setUnits("0.1 degree Celsius")


class _ThresholdPhysPerfLatencyHighThres_Type(Integer32):
    """Custom type thresholdPhysPerfLatencyHighThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfLatencyHighThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfLatencyHighThres_Object = MibTableColumn
thresholdPhysPerfLatencyHighThres = _ThresholdPhysPerfLatencyHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 29),
    _ThresholdPhysPerfLatencyHighThres_Type()
)
thresholdPhysPerfLatencyHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLatencyHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLatencyHighThres.setUnits("0.1 us")


class _ThresholdPhysPerfLatencyLowThres_Type(Integer32):
    """Custom type thresholdPhysPerfLatencyLowThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfLatencyLowThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfLatencyLowThres_Object = MibTableColumn
thresholdPhysPerfLatencyLowThres = _ThresholdPhysPerfLatencyLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 30),
    _ThresholdPhysPerfLatencyLowThres_Type()
)
thresholdPhysPerfLatencyLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLatencyLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLatencyLowThres.setUnits("0.1 us")


class _ThresholdPhysPerfRoundTripDelayHighThres_Type(Integer32):
    """Custom type thresholdPhysPerfRoundTripDelayHighThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 30000000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfRoundTripDelayHighThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfRoundTripDelayHighThres_Object = MibTableColumn
thresholdPhysPerfRoundTripDelayHighThres = _ThresholdPhysPerfRoundTripDelayHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 31),
    _ThresholdPhysPerfRoundTripDelayHighThres_Type()
)
thresholdPhysPerfRoundTripDelayHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfRoundTripDelayHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfRoundTripDelayHighThres.setUnits("ns")


class _ThresholdPhysPerfRoundTripDelayLowThres_Type(Integer32):
    """Custom type thresholdPhysPerfRoundTripDelayLowThres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30000000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfRoundTripDelayLowThres_Type.__name__ = "Integer32"
_ThresholdPhysPerfRoundTripDelayLowThres_Object = MibTableColumn
thresholdPhysPerfRoundTripDelayLowThres = _ThresholdPhysPerfRoundTripDelayLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 32),
    _ThresholdPhysPerfRoundTripDelayLowThres_Type()
)
thresholdPhysPerfRoundTripDelayLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfRoundTripDelayLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfRoundTripDelayLowThres.setUnits("ns")
_ThresholdPhysPerfPumpLaser4TempHighThres_Type = Integer32
_ThresholdPhysPerfPumpLaser4TempHighThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser4TempHighThres = _ThresholdPhysPerfPumpLaser4TempHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 33),
    _ThresholdPhysPerfPumpLaser4TempHighThres_Type()
)
thresholdPhysPerfPumpLaser4TempHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser4TempHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser4TempHighThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfPumpLaser4TempLowThres_Type = Integer32
_ThresholdPhysPerfPumpLaser4TempLowThres_Object = MibTableColumn
thresholdPhysPerfPumpLaser4TempLowThres = _ThresholdPhysPerfPumpLaser4TempLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 34),
    _ThresholdPhysPerfPumpLaser4TempLowThres_Type()
)
thresholdPhysPerfPumpLaser4TempLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser4TempLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfPumpLaser4TempLowThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfLocalOscTempLowThres_Type = Integer32
_ThresholdPhysPerfLocalOscTempLowThres_Object = MibTableColumn
thresholdPhysPerfLocalOscTempLowThres = _ThresholdPhysPerfLocalOscTempLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 35),
    _ThresholdPhysPerfLocalOscTempLowThres_Type()
)
thresholdPhysPerfLocalOscTempLowThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLocalOscTempLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLocalOscTempLowThres.setUnits("0.1 degree Celsius")
_ThresholdPhysPerfLocalOscTempHighThres_Type = Integer32
_ThresholdPhysPerfLocalOscTempHighThres_Object = MibTableColumn
thresholdPhysPerfLocalOscTempHighThres = _ThresholdPhysPerfLocalOscTempHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 36),
    _ThresholdPhysPerfLocalOscTempHighThres_Type()
)
thresholdPhysPerfLocalOscTempHighThres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLocalOscTempHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLocalOscTempHighThres.setUnits("0.1 degree Celsius")


class _ThresholdPhysPerfDifferentialGroupDelayHigh_Type(Integer32):
    """Custom type thresholdPhysPerfDifferentialGroupDelayHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfDifferentialGroupDelayHigh_Type.__name__ = "Integer32"
_ThresholdPhysPerfDifferentialGroupDelayHigh_Object = MibTableColumn
thresholdPhysPerfDifferentialGroupDelayHigh = _ThresholdPhysPerfDifferentialGroupDelayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 37),
    _ThresholdPhysPerfDifferentialGroupDelayHigh_Type()
)
thresholdPhysPerfDifferentialGroupDelayHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfDifferentialGroupDelayHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfDifferentialGroupDelayHigh.setUnits("ps")


class _ThresholdPhysPerfChromaticDispersionLow_Type(Integer32):
    """Custom type thresholdPhysPerfChromaticDispersionLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfChromaticDispersionLow_Type.__name__ = "Integer32"
_ThresholdPhysPerfChromaticDispersionLow_Object = MibTableColumn
thresholdPhysPerfChromaticDispersionLow = _ThresholdPhysPerfChromaticDispersionLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 38),
    _ThresholdPhysPerfChromaticDispersionLow_Type()
)
thresholdPhysPerfChromaticDispersionLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfChromaticDispersionLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfChromaticDispersionLow.setUnits("ps/nm")


class _ThresholdPhysPerfChromaticDispersionHigh_Type(Integer32):
    """Custom type thresholdPhysPerfChromaticDispersionHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-50000, 50000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfChromaticDispersionHigh_Type.__name__ = "Integer32"
_ThresholdPhysPerfChromaticDispersionHigh_Object = MibTableColumn
thresholdPhysPerfChromaticDispersionHigh = _ThresholdPhysPerfChromaticDispersionHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 39),
    _ThresholdPhysPerfChromaticDispersionHigh_Type()
)
thresholdPhysPerfChromaticDispersionHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfChromaticDispersionHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfChromaticDispersionHigh.setUnits("ps/nm")


class _ThresholdPhysPerfSignalToNoiseRatioLow_Type(Integer32):
    """Custom type thresholdPhysPerfSignalToNoiseRatioLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(105, 160),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfSignalToNoiseRatioLow_Type.__name__ = "Integer32"
_ThresholdPhysPerfSignalToNoiseRatioLow_Object = MibTableColumn
thresholdPhysPerfSignalToNoiseRatioLow = _ThresholdPhysPerfSignalToNoiseRatioLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 40),
    _ThresholdPhysPerfSignalToNoiseRatioLow_Type()
)
thresholdPhysPerfSignalToNoiseRatioLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfSignalToNoiseRatioLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfSignalToNoiseRatioLow.setUnits("0.1 dB")


class _ThresholdPhysPerfCarrierFreqOffsetLow_Type(Integer32):
    """Custom type thresholdPhysPerfCarrierFreqOffsetLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32000, 32000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfCarrierFreqOffsetLow_Type.__name__ = "Integer32"
_ThresholdPhysPerfCarrierFreqOffsetLow_Object = MibTableColumn
thresholdPhysPerfCarrierFreqOffsetLow = _ThresholdPhysPerfCarrierFreqOffsetLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 41),
    _ThresholdPhysPerfCarrierFreqOffsetLow_Type()
)
thresholdPhysPerfCarrierFreqOffsetLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfCarrierFreqOffsetLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCarrierFreqOffsetLow.setUnits("0.001 GHz")


class _ThresholdPhysPerfCarrierFreqOffsetHigh_Type(Integer32):
    """Custom type thresholdPhysPerfCarrierFreqOffsetHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32000, 32000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfCarrierFreqOffsetHigh_Type.__name__ = "Integer32"
_ThresholdPhysPerfCarrierFreqOffsetHigh_Object = MibTableColumn
thresholdPhysPerfCarrierFreqOffsetHigh = _ThresholdPhysPerfCarrierFreqOffsetHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 42),
    _ThresholdPhysPerfCarrierFreqOffsetHigh_Type()
)
thresholdPhysPerfCarrierFreqOffsetHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfCarrierFreqOffsetHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCarrierFreqOffsetHigh.setUnits("0.001 GHz")


class _ThresholdPhysPerfLogicalLanesSkewHigh_Type(Integer32):
    """Custom type thresholdPhysPerfLogicalLanesSkewHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdPhysPerfLogicalLanesSkewHigh_Type.__name__ = "Integer32"
_ThresholdPhysPerfLogicalLanesSkewHigh_Object = MibTableColumn
thresholdPhysPerfLogicalLanesSkewHigh = _ThresholdPhysPerfLogicalLanesSkewHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 9, 1, 43),
    _ThresholdPhysPerfLogicalLanesSkewHigh_Type()
)
thresholdPhysPerfLogicalLanesSkewHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysPerfLogicalLanesSkewHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfLogicalLanesSkewHigh.setUnits("ns")
_ThresholdPhysConvTable_Object = MibTable
thresholdPhysConvTable = _ThresholdPhysConvTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10)
)
if mibBuilder.loadTexts:
    thresholdPhysConvTable.setStatus("current")
_ThresholdPhysConvEntry_Object = MibTableRow
thresholdPhysConvEntry = _ThresholdPhysConvEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10, 1)
)
thresholdPhysConvEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdPhysConvEntry.setStatus("current")


class _ThresholdPhysConvESHighThres15min_Type(Unsigned32):
    """Custom type thresholdPhysConvESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdPhysConvESHighThres15min_Object = MibTableColumn
thresholdPhysConvESHighThres15min = _ThresholdPhysConvESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10, 1, 1),
    _ThresholdPhysConvESHighThres15min_Type()
)
thresholdPhysConvESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvESHighThres15min.setStatus("current")


class _ThresholdPhysConvESHighThres1day_Type(Unsigned32):
    """Custom type thresholdPhysConvESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 89400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdPhysConvESHighThres1day_Object = MibTableColumn
thresholdPhysConvESHighThres1day = _ThresholdPhysConvESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10, 1, 2),
    _ThresholdPhysConvESHighThres1day_Type()
)
thresholdPhysConvESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvESHighThres1day.setStatus("current")
_ThresholdPhysConvDEHighThres15min_Type = Unsigned32
_ThresholdPhysConvDEHighThres15min_Object = MibTableColumn
thresholdPhysConvDEHighThres15min = _ThresholdPhysConvDEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10, 1, 3),
    _ThresholdPhysConvDEHighThres15min_Type()
)
thresholdPhysConvDEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvDEHighThres15min.setStatus("current")
_ThresholdPhysConvDEHighThres1day_Type = Unsigned32
_ThresholdPhysConvDEHighThres1day_Object = MibTableColumn
thresholdPhysConvDEHighThres1day = _ThresholdPhysConvDEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10, 1, 4),
    _ThresholdPhysConvDEHighThres1day_Type()
)
thresholdPhysConvDEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvDEHighThres1day.setStatus("current")
_ThresholdPhysConvCVHighThres15min_Type = Counter64String
_ThresholdPhysConvCVHighThres15min_Object = MibTableColumn
thresholdPhysConvCVHighThres15min = _ThresholdPhysConvCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10, 1, 5),
    _ThresholdPhysConvCVHighThres15min_Type()
)
thresholdPhysConvCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvCVHighThres15min.setStatus("current")
_ThresholdPhysConvCVHighThres1day_Type = Counter64String
_ThresholdPhysConvCVHighThres1day_Object = MibTableColumn
thresholdPhysConvCVHighThres1day = _ThresholdPhysConvCVHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 10, 1, 6),
    _ThresholdPhysConvCVHighThres1day_Type()
)
thresholdPhysConvCVHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvCVHighThres1day.setStatus("current")
_ThresholdEthRxTable_Object = MibTable
thresholdEthRxTable = _ThresholdEthRxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11)
)
if mibBuilder.loadTexts:
    thresholdEthRxTable.setStatus("current")
_ThresholdEthRxEntry_Object = MibTableRow
thresholdEthRxEntry = _ThresholdEthRxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11, 1)
)
thresholdEthRxEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdEthRxEntry.setStatus("current")


class _ThresholdEthRxPauseFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdEthRxPauseFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxPauseFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdEthRxPauseFramesHighThres15Min_Object = MibTableColumn
thresholdEthRxPauseFramesHighThres15Min = _ThresholdEthRxPauseFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11, 1, 1),
    _ThresholdEthRxPauseFramesHighThres15Min_Type()
)
thresholdEthRxPauseFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxPauseFramesHighThres15Min.setStatus("current")


class _ThresholdEthRxPauseFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdEthRxPauseFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxPauseFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdEthRxPauseFramesHighThres1Day_Object = MibTableColumn
thresholdEthRxPauseFramesHighThres1Day = _ThresholdEthRxPauseFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11, 1, 2),
    _ThresholdEthRxPauseFramesHighThres1Day_Type()
)
thresholdEthRxPauseFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxPauseFramesHighThres1Day.setStatus("current")


class _ThresholdEthRxCrcFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdEthRxCrcFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxCrcFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdEthRxCrcFramesHighThres15Min_Object = MibTableColumn
thresholdEthRxCrcFramesHighThres15Min = _ThresholdEthRxCrcFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11, 1, 3),
    _ThresholdEthRxCrcFramesHighThres15Min_Type()
)
thresholdEthRxCrcFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxCrcFramesHighThres15Min.setStatus("current")


class _ThresholdEthRxCrcFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdEthRxCrcFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxCrcFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdEthRxCrcFramesHighThres1Day_Object = MibTableColumn
thresholdEthRxCrcFramesHighThres1Day = _ThresholdEthRxCrcFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11, 1, 4),
    _ThresholdEthRxCrcFramesHighThres1Day_Type()
)
thresholdEthRxCrcFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxCrcFramesHighThres1Day.setStatus("current")


class _ThresholdEthRxDiscardedFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdEthRxDiscardedFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxDiscardedFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdEthRxDiscardedFramesHighThres15Min_Object = MibTableColumn
thresholdEthRxDiscardedFramesHighThres15Min = _ThresholdEthRxDiscardedFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11, 1, 5),
    _ThresholdEthRxDiscardedFramesHighThres15Min_Type()
)
thresholdEthRxDiscardedFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxDiscardedFramesHighThres15Min.setStatus("current")


class _ThresholdEthRxDiscardedFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdEthRxDiscardedFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxDiscardedFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdEthRxDiscardedFramesHighThres1Day_Object = MibTableColumn
thresholdEthRxDiscardedFramesHighThres1Day = _ThresholdEthRxDiscardedFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 11, 1, 6),
    _ThresholdEthRxDiscardedFramesHighThres1Day_Type()
)
thresholdEthRxDiscardedFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxDiscardedFramesHighThres1Day.setStatus("current")
_ThresholdEthTxTable_Object = MibTable
thresholdEthTxTable = _ThresholdEthTxTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 12)
)
if mibBuilder.loadTexts:
    thresholdEthTxTable.setStatus("current")
_ThresholdEthTxEntry_Object = MibTableRow
thresholdEthTxEntry = _ThresholdEthTxEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 12, 1)
)
thresholdEthTxEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdEthTxEntry.setStatus("current")


class _ThresholdEthTxPauseFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdEthTxPauseFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthTxPauseFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdEthTxPauseFramesHighThres15Min_Object = MibTableColumn
thresholdEthTxPauseFramesHighThres15Min = _ThresholdEthTxPauseFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 12, 1, 1),
    _ThresholdEthTxPauseFramesHighThres15Min_Type()
)
thresholdEthTxPauseFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthTxPauseFramesHighThres15Min.setStatus("current")


class _ThresholdEthTxPauseFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdEthTxPauseFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthTxPauseFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdEthTxPauseFramesHighThres1Day_Object = MibTableColumn
thresholdEthTxPauseFramesHighThres1Day = _ThresholdEthTxPauseFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 12, 1, 2),
    _ThresholdEthTxPauseFramesHighThres1Day_Type()
)
thresholdEthTxPauseFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthTxPauseFramesHighThres1Day.setStatus("current")


class _ThresholdEthTxCrcFramesEgressHighThres15Min_Type(Unsigned32):
    """Custom type thresholdEthTxCrcFramesEgressHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthTxCrcFramesEgressHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdEthTxCrcFramesEgressHighThres15Min_Object = MibTableColumn
thresholdEthTxCrcFramesEgressHighThres15Min = _ThresholdEthTxCrcFramesEgressHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 12, 1, 3),
    _ThresholdEthTxCrcFramesEgressHighThres15Min_Type()
)
thresholdEthTxCrcFramesEgressHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthTxCrcFramesEgressHighThres15Min.setStatus("current")


class _ThresholdEthTxCrcFramesEgressHighThres1Day_Type(Unsigned32):
    """Custom type thresholdEthTxCrcFramesEgressHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthTxCrcFramesEgressHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdEthTxCrcFramesEgressHighThres1Day_Object = MibTableColumn
thresholdEthTxCrcFramesEgressHighThres1Day = _ThresholdEthTxCrcFramesEgressHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 12, 1, 4),
    _ThresholdEthTxCrcFramesEgressHighThres1Day_Type()
)
thresholdEthTxCrcFramesEgressHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthTxCrcFramesEgressHighThres1Day.setStatus("current")
_ThresholdGfpTable_Object = MibTable
thresholdGfpTable = _ThresholdGfpTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13)
)
if mibBuilder.loadTexts:
    thresholdGfpTable.setStatus("deprecated")
_ThresholdGfpEntry_Object = MibTableRow
thresholdGfpEntry = _ThresholdGfpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1)
)
thresholdGfpEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdGfpEntry.setStatus("deprecated")


class _ThresholdGfpCoreHecCorrectedFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdGfpCoreHecCorrectedFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpCoreHecCorrectedFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdGfpCoreHecCorrectedFramesHighThres15Min_Object = MibTableColumn
thresholdGfpCoreHecCorrectedFramesHighThres15Min = _ThresholdGfpCoreHecCorrectedFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1, 1),
    _ThresholdGfpCoreHecCorrectedFramesHighThres15Min_Type()
)
thresholdGfpCoreHecCorrectedFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpCoreHecCorrectedFramesHighThres15Min.setStatus("deprecated")


class _ThresholdGfpCoreHecCorrectedFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdGfpCoreHecCorrectedFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpCoreHecCorrectedFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdGfpCoreHecCorrectedFramesHighThres1Day_Object = MibTableColumn
thresholdGfpCoreHecCorrectedFramesHighThres1Day = _ThresholdGfpCoreHecCorrectedFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1, 2),
    _ThresholdGfpCoreHecCorrectedFramesHighThres1Day_Type()
)
thresholdGfpCoreHecCorrectedFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpCoreHecCorrectedFramesHighThres1Day.setStatus("deprecated")


class _ThresholdGfpTypeHecCorrectedFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdGfpTypeHecCorrectedFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpTypeHecCorrectedFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdGfpTypeHecCorrectedFramesHighThres15Min_Object = MibTableColumn
thresholdGfpTypeHecCorrectedFramesHighThres15Min = _ThresholdGfpTypeHecCorrectedFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1, 3),
    _ThresholdGfpTypeHecCorrectedFramesHighThres15Min_Type()
)
thresholdGfpTypeHecCorrectedFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpTypeHecCorrectedFramesHighThres15Min.setStatus("deprecated")


class _ThresholdGfpTypeHecCorrectedFramesHighThres15Day_Type(Unsigned32):
    """Custom type thresholdGfpTypeHecCorrectedFramesHighThres15Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpTypeHecCorrectedFramesHighThres15Day_Type.__name__ = "Unsigned32"
_ThresholdGfpTypeHecCorrectedFramesHighThres15Day_Object = MibTableColumn
thresholdGfpTypeHecCorrectedFramesHighThres15Day = _ThresholdGfpTypeHecCorrectedFramesHighThres15Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1, 4),
    _ThresholdGfpTypeHecCorrectedFramesHighThres15Day_Type()
)
thresholdGfpTypeHecCorrectedFramesHighThres15Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpTypeHecCorrectedFramesHighThres15Day.setStatus("deprecated")


class _ThresholdGfpTypeHecDiscardedFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdGfpTypeHecDiscardedFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpTypeHecDiscardedFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdGfpTypeHecDiscardedFramesHighThres15Min_Object = MibTableColumn
thresholdGfpTypeHecDiscardedFramesHighThres15Min = _ThresholdGfpTypeHecDiscardedFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1, 5),
    _ThresholdGfpTypeHecDiscardedFramesHighThres15Min_Type()
)
thresholdGfpTypeHecDiscardedFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpTypeHecDiscardedFramesHighThres15Min.setStatus("deprecated")
_ThresholdGfpTypeHecDiscardedFramesHighThres1Day_Type = Unsigned32
_ThresholdGfpTypeHecDiscardedFramesHighThres1Day_Object = MibTableColumn
thresholdGfpTypeHecDiscardedFramesHighThres1Day = _ThresholdGfpTypeHecDiscardedFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1, 6),
    _ThresholdGfpTypeHecDiscardedFramesHighThres1Day_Type()
)
thresholdGfpTypeHecDiscardedFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpTypeHecDiscardedFramesHighThres1Day.setStatus("deprecated")
_ThresholdGfpTHecDiscardedFramesHighThres1Day_Type = Counter64String
_ThresholdGfpTHecDiscardedFramesHighThres1Day_Object = MibTableColumn
thresholdGfpTHecDiscardedFramesHighThres1Day = _ThresholdGfpTHecDiscardedFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 13, 1, 7),
    _ThresholdGfpTHecDiscardedFramesHighThres1Day_Type()
)
thresholdGfpTHecDiscardedFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpTHecDiscardedFramesHighThres1Day.setStatus("deprecated")
_ThresholdIntrusionTable_Object = MibTable
thresholdIntrusionTable = _ThresholdIntrusionTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 15)
)
if mibBuilder.loadTexts:
    thresholdIntrusionTable.setStatus("current")
_ThresholdIntrusionEntry_Object = MibTableRow
thresholdIntrusionEntry = _ThresholdIntrusionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 15, 1)
)
thresholdIntrusionEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdIntrusionEntry.setStatus("current")


class _ThresholdIntrusionGradient_Type(Unsigned32):
    """Custom type thresholdIntrusionGradient based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdIntrusionGradient_Type.__name__ = "Unsigned32"
_ThresholdIntrusionGradient_Object = MibTableColumn
thresholdIntrusionGradient = _ThresholdIntrusionGradient_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 15, 1, 1),
    _ThresholdIntrusionGradient_Type()
)
thresholdIntrusionGradient.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdIntrusionGradient.setStatus("current")
if mibBuilder.loadTexts:
    thresholdIntrusionGradient.setUnits("0.1 dB/min")
_ThresholdOtuFecTable_Object = MibTable
thresholdOtuFecTable = _ThresholdOtuFecTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16)
)
if mibBuilder.loadTexts:
    thresholdOtuFecTable.setStatus("deprecated")
_ThresholdOtuFecEntry_Object = MibTableRow
thresholdOtuFecEntry = _ThresholdOtuFecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1)
)
thresholdOtuFecEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOtuFecEntry.setStatus("deprecated")


class _ThresholdOtuFecESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOtuFecESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOtuFecESHighThres15min_Object = MibTableColumn
thresholdOtuFecESHighThres15min = _ThresholdOtuFecESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 1),
    _ThresholdOtuFecESHighThres15min_Type()
)
thresholdOtuFecESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecESHighThres15min.setStatus("deprecated")


class _ThresholdOtuFecESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOtuFecESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOtuFecESHighThres1day_Object = MibTableColumn
thresholdOtuFecESHighThres1day = _ThresholdOtuFecESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 2),
    _ThresholdOtuFecESHighThres1day_Type()
)
thresholdOtuFecESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecESHighThres1day.setStatus("deprecated")


class _ThresholdOtuFecSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOtuFecSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOtuFecSESHighThres15min_Object = MibTableColumn
thresholdOtuFecSESHighThres15min = _ThresholdOtuFecSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 3),
    _ThresholdOtuFecSESHighThres15min_Type()
)
thresholdOtuFecSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSESHighThres15min.setStatus("deprecated")


class _ThresholdOtuFecSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOtuFecSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOtuFecSESHighThres1day_Object = MibTableColumn
thresholdOtuFecSESHighThres1day = _ThresholdOtuFecSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 4),
    _ThresholdOtuFecSESHighThres1day_Type()
)
thresholdOtuFecSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSESHighThres1day.setStatus("deprecated")
_ThresholdOtuFecCEHighThres15min_Type = Unsigned32
_ThresholdOtuFecCEHighThres15min_Object = MibTableColumn
thresholdOtuFecCEHighThres15min = _ThresholdOtuFecCEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 5),
    _ThresholdOtuFecCEHighThres15min_Type()
)
thresholdOtuFecCEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecCEHighThres15min.setStatus("deprecated")
_ThresholdOtuFecCEHighThres1day_Type = Unsigned32
_ThresholdOtuFecCEHighThres1day_Object = MibTableColumn
thresholdOtuFecCEHighThres1day = _ThresholdOtuFecCEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 6),
    _ThresholdOtuFecCEHighThres1day_Type()
)
thresholdOtuFecCEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecCEHighThres1day.setStatus("deprecated")
_ThresholdOtuFecUBEHighThres15min_Type = Counter64String
_ThresholdOtuFecUBEHighThres15min_Object = MibTableColumn
thresholdOtuFecUBEHighThres15min = _ThresholdOtuFecUBEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 7),
    _ThresholdOtuFecUBEHighThres15min_Type()
)
thresholdOtuFecUBEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecUBEHighThres15min.setStatus("deprecated")
_ThresholdOtuFecUBEHighThres1day_Type = Counter64String
_ThresholdOtuFecUBEHighThres1day_Object = MibTableColumn
thresholdOtuFecUBEHighThres1day = _ThresholdOtuFecUBEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 8),
    _ThresholdOtuFecUBEHighThres1day_Type()
)
thresholdOtuFecUBEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecUBEHighThres1day.setStatus("deprecated")
_ThresholdOtuFecCErrHighThres15min_Type = Counter64String
_ThresholdOtuFecCErrHighThres15min_Object = MibTableColumn
thresholdOtuFecCErrHighThres15min = _ThresholdOtuFecCErrHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 9),
    _ThresholdOtuFecCErrHighThres15min_Type()
)
thresholdOtuFecCErrHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecCErrHighThres15min.setStatus("deprecated")
_ThresholdOtuFecCErrHighThres1day_Type = Counter64String
_ThresholdOtuFecCErrHighThres1day_Object = MibTableColumn
thresholdOtuFecCErrHighThres1day = _ThresholdOtuFecCErrHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 16, 1, 10),
    _ThresholdOtuFecCErrHighThres1day_Type()
)
thresholdOtuFecCErrHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecCErrHighThres1day.setStatus("deprecated")
_ThresholdGfptTable_Object = MibTable
thresholdGfptTable = _ThresholdGfptTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 17)
)
if mibBuilder.loadTexts:
    thresholdGfptTable.setStatus("current")
_ThresholdGfptEntry_Object = MibTableRow
thresholdGfptEntry = _ThresholdGfptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 17, 1)
)
thresholdGfptEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdGfptEntry.setStatus("current")


class _ThresholdGfptDiscardedSuperblocksHighThres15Min_Type(Unsigned32):
    """Custom type thresholdGfptDiscardedSuperblocksHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfptDiscardedSuperblocksHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdGfptDiscardedSuperblocksHighThres15Min_Object = MibTableColumn
thresholdGfptDiscardedSuperblocksHighThres15Min = _ThresholdGfptDiscardedSuperblocksHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 17, 1, 1),
    _ThresholdGfptDiscardedSuperblocksHighThres15Min_Type()
)
thresholdGfptDiscardedSuperblocksHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfptDiscardedSuperblocksHighThres15Min.setStatus("current")


class _ThresholdGfptDiscardedSuperblocksHighThres1Day_Type(Unsigned32):
    """Custom type thresholdGfptDiscardedSuperblocksHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfptDiscardedSuperblocksHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdGfptDiscardedSuperblocksHighThres1Day_Object = MibTableColumn
thresholdGfptDiscardedSuperblocksHighThres1Day = _ThresholdGfptDiscardedSuperblocksHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 17, 1, 2),
    _ThresholdGfptDiscardedSuperblocksHighThres1Day_Type()
)
thresholdGfptDiscardedSuperblocksHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfptDiscardedSuperblocksHighThres1Day.setStatus("current")
_ThresholdSubAggregateTable_Object = MibTable
thresholdSubAggregateTable = _ThresholdSubAggregateTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 18)
)
if mibBuilder.loadTexts:
    thresholdSubAggregateTable.setStatus("current")
_ThresholdSubAggregateEntry_Object = MibTableRow
thresholdSubAggregateEntry = _ThresholdSubAggregateEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 18, 1)
)
thresholdSubAggregateEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdSubAggregateEntry.setStatus("current")


class _ThresholdSubAggregateESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSubAggregateESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSubAggregateESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSubAggregateESHighThres15min_Object = MibTableColumn
thresholdSubAggregateESHighThres15min = _ThresholdSubAggregateESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 18, 1, 1),
    _ThresholdSubAggregateESHighThres15min_Type()
)
thresholdSubAggregateESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSubAggregateESHighThres15min.setStatus("current")


class _ThresholdSubAggregateESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSubAggregateESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSubAggregateESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSubAggregateESHighThres1day_Object = MibTableColumn
thresholdSubAggregateESHighThres1day = _ThresholdSubAggregateESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 18, 1, 2),
    _ThresholdSubAggregateESHighThres1day_Type()
)
thresholdSubAggregateESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSubAggregateESHighThres1day.setStatus("current")


class _ThresholdSubAggregateSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSubAggregateSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSubAggregateSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSubAggregateSESHighThres15min_Object = MibTableColumn
thresholdSubAggregateSESHighThres15min = _ThresholdSubAggregateSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 18, 1, 3),
    _ThresholdSubAggregateSESHighThres15min_Type()
)
thresholdSubAggregateSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSubAggregateSESHighThres15min.setStatus("current")


class _ThresholdSubAggregateSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSubAggregateSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSubAggregateSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSubAggregateSESHighThres1day_Object = MibTableColumn
thresholdSubAggregateSESHighThres1day = _ThresholdSubAggregateSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 18, 1, 4),
    _ThresholdSubAggregateSESHighThres1day_Type()
)
thresholdSubAggregateSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSubAggregateSESHighThres1day.setStatus("current")
_ThresholdOduTcmCTable_Object = MibTable
thresholdOduTcmCTable = _ThresholdOduTcmCTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19)
)
if mibBuilder.loadTexts:
    thresholdOduTcmCTable.setStatus("current")
_ThresholdOduTcmCEntry_Object = MibTableRow
thresholdOduTcmCEntry = _ThresholdOduTcmCEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1)
)
thresholdOduTcmCEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOduTcmCEntry.setStatus("current")


class _ThresholdOduTcmCBESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmCBESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmCBESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmCBESHighThres15min_Object = MibTableColumn
thresholdOduTcmCBESHighThres15min = _ThresholdOduTcmCBESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 1),
    _ThresholdOduTcmCBESHighThres15min_Type()
)
thresholdOduTcmCBESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCBESHighThres15min.setStatus("current")


class _ThresholdOduTcmCESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmCESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmCESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmCESHighThres1day_Object = MibTableColumn
thresholdOduTcmCESHighThres1day = _ThresholdOduTcmCESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 2),
    _ThresholdOduTcmCESHighThres1day_Type()
)
thresholdOduTcmCESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCESHighThres1day.setStatus("current")


class _ThresholdOduTcmCSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmCSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmCSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmCSESHighThres15min_Object = MibTableColumn
thresholdOduTcmCSESHighThres15min = _ThresholdOduTcmCSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 3),
    _ThresholdOduTcmCSESHighThres15min_Type()
)
thresholdOduTcmCSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCSESHighThres15min.setStatus("current")


class _ThresholdOduTcmCSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmCSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmCSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmCSESHighThres1day_Object = MibTableColumn
thresholdOduTcmCSESHighThres1day = _ThresholdOduTcmCSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 4),
    _ThresholdOduTcmCSESHighThres1day_Type()
)
thresholdOduTcmCSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCSESHighThres1day.setStatus("current")
_ThresholdOduTcmCOduTcmCBbeHighThres15min_Type = Counter64String
_ThresholdOduTcmCOduTcmCBbeHighThres15min_Object = MibTableColumn
thresholdOduTcmCOduTcmCBbeHighThres15min = _ThresholdOduTcmCOduTcmCBbeHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 5),
    _ThresholdOduTcmCOduTcmCBbeHighThres15min_Type()
)
thresholdOduTcmCOduTcmCBbeHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCOduTcmCBbeHighThres15min.setStatus("current")
_ThresholdOduTcmCOduTcmCBbeHighThres1day_Type = Counter64String
_ThresholdOduTcmCOduTcmCBbeHighThres1day_Object = MibTableColumn
thresholdOduTcmCOduTcmCBbeHighThres1day = _ThresholdOduTcmCOduTcmCBbeHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 6),
    _ThresholdOduTcmCOduTcmCBbeHighThres1day_Type()
)
thresholdOduTcmCOduTcmCBbeHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCOduTcmCBbeHighThres1day.setStatus("current")


class _ThresholdOduTcmCUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdOduTcmCUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmCUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOduTcmCUASHighThres15min_Object = MibTableColumn
thresholdOduTcmCUASHighThres15min = _ThresholdOduTcmCUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 7),
    _ThresholdOduTcmCUASHighThres15min_Type()
)
thresholdOduTcmCUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCUASHighThres15min.setStatus("current")


class _ThresholdOduTcmCUASHighThres1day_Type(Unsigned32):
    """Custom type thresholdOduTcmCUASHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOduTcmCUASHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOduTcmCUASHighThres1day_Object = MibTableColumn
thresholdOduTcmCUASHighThres1day = _ThresholdOduTcmCUASHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 19, 1, 8),
    _ThresholdOduTcmCUASHighThres1day_Type()
)
thresholdOduTcmCUASHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOduTcmCUASHighThres1day.setStatus("current")
_ThresholdPhysConvHighSpeedTable_Object = MibTable
thresholdPhysConvHighSpeedTable = _ThresholdPhysConvHighSpeedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20)
)
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedTable.setStatus("current")
_ThresholdPhysConvHighSpeedEntry_Object = MibTableRow
thresholdPhysConvHighSpeedEntry = _ThresholdPhysConvHighSpeedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20, 1)
)
thresholdPhysConvHighSpeedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedEntry.setStatus("current")


class _ThresholdPhysConvHighSpeedESHighThres15min_Type(Unsigned32):
    """Custom type thresholdPhysConvHighSpeedESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvHighSpeedESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdPhysConvHighSpeedESHighThres15min_Object = MibTableColumn
thresholdPhysConvHighSpeedESHighThres15min = _ThresholdPhysConvHighSpeedESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20, 1, 1),
    _ThresholdPhysConvHighSpeedESHighThres15min_Type()
)
thresholdPhysConvHighSpeedESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedESHighThres15min.setStatus("current")


class _ThresholdPhysConvHighSpeedESHighThres1day_Type(Unsigned32):
    """Custom type thresholdPhysConvHighSpeedESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 89400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvHighSpeedESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdPhysConvHighSpeedESHighThres1day_Object = MibTableColumn
thresholdPhysConvHighSpeedESHighThres1day = _ThresholdPhysConvHighSpeedESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20, 1, 2),
    _ThresholdPhysConvHighSpeedESHighThres1day_Type()
)
thresholdPhysConvHighSpeedESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedESHighThres1day.setStatus("current")
_ThresholdPhysConvHighSpeedCVHighThres15min_Type = Counter64String
_ThresholdPhysConvHighSpeedCVHighThres15min_Object = MibTableColumn
thresholdPhysConvHighSpeedCVHighThres15min = _ThresholdPhysConvHighSpeedCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20, 1, 3),
    _ThresholdPhysConvHighSpeedCVHighThres15min_Type()
)
thresholdPhysConvHighSpeedCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedCVHighThres15min.setStatus("current")
_ThresholdPhysConvHighSpeedCVHighThres1day_Type = Counter64String
_ThresholdPhysConvHighSpeedCVHighThres1day_Object = MibTableColumn
thresholdPhysConvHighSpeedCVHighThres1day = _ThresholdPhysConvHighSpeedCVHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20, 1, 4),
    _ThresholdPhysConvHighSpeedCVHighThres1day_Type()
)
thresholdPhysConvHighSpeedCVHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedCVHighThres1day.setStatus("current")


class _ThresholdPhysConvHighSpeedSEHighThres15min_Type(Unsigned32):
    """Custom type thresholdPhysConvHighSpeedSEHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvHighSpeedSEHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdPhysConvHighSpeedSEHighThres15min_Object = MibTableColumn
thresholdPhysConvHighSpeedSEHighThres15min = _ThresholdPhysConvHighSpeedSEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20, 1, 5),
    _ThresholdPhysConvHighSpeedSEHighThres15min_Type()
)
thresholdPhysConvHighSpeedSEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedSEHighThres15min.setStatus("current")


class _ThresholdPhysConvHighSpeedSEHighThres1day_Type(Unsigned32):
    """Custom type thresholdPhysConvHighSpeedSEHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvHighSpeedSEHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdPhysConvHighSpeedSEHighThres1day_Object = MibTableColumn
thresholdPhysConvHighSpeedSEHighThres1day = _ThresholdPhysConvHighSpeedSEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 20, 1, 6),
    _ThresholdPhysConvHighSpeedSEHighThres1day_Type()
)
thresholdPhysConvHighSpeedSEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvHighSpeedSEHighThres1day.setStatus("current")
_ThresholdEthRxHighSpeedTable_Object = MibTable
thresholdEthRxHighSpeedTable = _ThresholdEthRxHighSpeedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 21)
)
if mibBuilder.loadTexts:
    thresholdEthRxHighSpeedTable.setStatus("current")
_ThresholdEthRxHighSpeedEntry_Object = MibTableRow
thresholdEthRxHighSpeedEntry = _ThresholdEthRxHighSpeedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 21, 1)
)
thresholdEthRxHighSpeedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdEthRxHighSpeedEntry.setStatus("current")


class _ThresholdEthRxHighSpeedPauseFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdEthRxHighSpeedPauseFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxHighSpeedPauseFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdEthRxHighSpeedPauseFramesHighThres15Min_Object = MibTableColumn
thresholdEthRxHighSpeedPauseFramesHighThres15Min = _ThresholdEthRxHighSpeedPauseFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 21, 1, 1),
    _ThresholdEthRxHighSpeedPauseFramesHighThres15Min_Type()
)
thresholdEthRxHighSpeedPauseFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxHighSpeedPauseFramesHighThres15Min.setStatus("current")


class _ThresholdEthRxHighSpeedPauseFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdEthRxHighSpeedPauseFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxHighSpeedPauseFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdEthRxHighSpeedPauseFramesHighThres1Day_Object = MibTableColumn
thresholdEthRxHighSpeedPauseFramesHighThres1Day = _ThresholdEthRxHighSpeedPauseFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 21, 1, 2),
    _ThresholdEthRxHighSpeedPauseFramesHighThres1Day_Type()
)
thresholdEthRxHighSpeedPauseFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxHighSpeedPauseFramesHighThres1Day.setStatus("current")


class _ThresholdEthRxHighSpeedCrcFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdEthRxHighSpeedCrcFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxHighSpeedCrcFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdEthRxHighSpeedCrcFramesHighThres15Min_Object = MibTableColumn
thresholdEthRxHighSpeedCrcFramesHighThres15Min = _ThresholdEthRxHighSpeedCrcFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 21, 1, 3),
    _ThresholdEthRxHighSpeedCrcFramesHighThres15Min_Type()
)
thresholdEthRxHighSpeedCrcFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxHighSpeedCrcFramesHighThres15Min.setStatus("current")


class _ThresholdEthRxHighSpeedCrcFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdEthRxHighSpeedCrcFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdEthRxHighSpeedCrcFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdEthRxHighSpeedCrcFramesHighThres1Day_Object = MibTableColumn
thresholdEthRxHighSpeedCrcFramesHighThres1Day = _ThresholdEthRxHighSpeedCrcFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 21, 1, 4),
    _ThresholdEthRxHighSpeedCrcFramesHighThres1Day_Type()
)
thresholdEthRxHighSpeedCrcFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdEthRxHighSpeedCrcFramesHighThres1Day.setStatus("current")
_ThresholdPhysPerfCapTable_Object = MibTable
thresholdPhysPerfCapTable = _ThresholdPhysPerfCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22)
)
if mibBuilder.loadTexts:
    thresholdPhysPerfCapTable.setStatus("current")
_ThresholdPhysPerfCapEntry_Object = MibTableRow
thresholdPhysPerfCapEntry = _ThresholdPhysPerfCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1)
)
thresholdPhysPerfCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdPhysPerfCapEntry.setStatus("current")
_ThresholdPhysPerfCapOpticalInputPwrLow_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapOpticalInputPwrLow_Object = MibTableColumn
thresholdPhysPerfCapOpticalInputPwrLow = _ThresholdPhysPerfCapOpticalInputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 1),
    _ThresholdPhysPerfCapOpticalInputPwrLow_Type()
)
thresholdPhysPerfCapOpticalInputPwrLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOpticalInputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOpticalInputPwrLow.setUnits("0.1 dBm")
_ThresholdPhysPerfCapOpticalInputPwrHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapOpticalInputPwrHigh_Object = MibTableColumn
thresholdPhysPerfCapOpticalInputPwrHigh = _ThresholdPhysPerfCapOpticalInputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 2),
    _ThresholdPhysPerfCapOpticalInputPwrHigh_Type()
)
thresholdPhysPerfCapOpticalInputPwrHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOpticalInputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOpticalInputPwrHigh.setUnits("0.1 dBm")
_ThresholdPhysPerfCapAttRxLow_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapAttRxLow_Object = MibTableColumn
thresholdPhysPerfCapAttRxLow = _ThresholdPhysPerfCapAttRxLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 3),
    _ThresholdPhysPerfCapAttRxLow_Type()
)
thresholdPhysPerfCapAttRxLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttRxLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttRxLow.setUnits("0.1 dB")
_ThresholdPhysPerfCapAttRxHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapAttRxHigh_Object = MibTableColumn
thresholdPhysPerfCapAttRxHigh = _ThresholdPhysPerfCapAttRxHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 4),
    _ThresholdPhysPerfCapAttRxHigh_Type()
)
thresholdPhysPerfCapAttRxHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttRxHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttRxHigh.setUnits("0.1 dB")
_ThresholdPhysPerfCapAttTxLow_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapAttTxLow_Object = MibTableColumn
thresholdPhysPerfCapAttTxLow = _ThresholdPhysPerfCapAttTxLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 5),
    _ThresholdPhysPerfCapAttTxLow_Type()
)
thresholdPhysPerfCapAttTxLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttTxLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttTxLow.setUnits("0.1 dB")
_ThresholdPhysPerfCapAttTxHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapAttTxHigh_Object = MibTableColumn
thresholdPhysPerfCapAttTxHigh = _ThresholdPhysPerfCapAttTxHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 6),
    _ThresholdPhysPerfCapAttTxHigh_Type()
)
thresholdPhysPerfCapAttTxHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttTxHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapAttTxHigh.setUnits("0.1 dB")
_ThresholdPhysPerfCapOscPwrRcvHighThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapOscPwrRcvHighThres_Object = MibTableColumn
thresholdPhysPerfCapOscPwrRcvHighThres = _ThresholdPhysPerfCapOscPwrRcvHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 7),
    _ThresholdPhysPerfCapOscPwrRcvHighThres_Type()
)
thresholdPhysPerfCapOscPwrRcvHighThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOscPwrRcvHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOscPwrRcvHighThres.setUnits("0.1 dBm")
_ThresholdPhysPerfCapOscPwrRcvLowThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapOscPwrRcvLowThres_Object = MibTableColumn
thresholdPhysPerfCapOscPwrRcvLowThres = _ThresholdPhysPerfCapOscPwrRcvLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 8),
    _ThresholdPhysPerfCapOscPwrRcvLowThres_Type()
)
thresholdPhysPerfCapOscPwrRcvLowThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOscPwrRcvLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapOscPwrRcvLowThres.setUnits("0.1 dBm")
_ThresholdPhysPerfCapConfigurableOpticalOutputPwrLow_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapConfigurableOpticalOutputPwrLow_Object = MibTableColumn
thresholdPhysPerfCapConfigurableOpticalOutputPwrLow = _ThresholdPhysPerfCapConfigurableOpticalOutputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 9),
    _ThresholdPhysPerfCapConfigurableOpticalOutputPwrLow_Type()
)
thresholdPhysPerfCapConfigurableOpticalOutputPwrLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapConfigurableOpticalOutputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapConfigurableOpticalOutputPwrLow.setUnits("0.1 dBm")
_ThresholdPhysPerfCapConfigurableOpticalOutputPwrHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapConfigurableOpticalOutputPwrHigh_Object = MibTableColumn
thresholdPhysPerfCapConfigurableOpticalOutputPwrHigh = _ThresholdPhysPerfCapConfigurableOpticalOutputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 10),
    _ThresholdPhysPerfCapConfigurableOpticalOutputPwrHigh_Type()
)
thresholdPhysPerfCapConfigurableOpticalOutputPwrHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapConfigurableOpticalOutputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapConfigurableOpticalOutputPwrHigh.setUnits("0.1 dBm")
_ThresholdPhysPerfCapBrPwrReceivedHighThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapBrPwrReceivedHighThres_Object = MibTableColumn
thresholdPhysPerfCapBrPwrReceivedHighThres = _ThresholdPhysPerfCapBrPwrReceivedHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 11),
    _ThresholdPhysPerfCapBrPwrReceivedHighThres_Type()
)
thresholdPhysPerfCapBrPwrReceivedHighThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapBrPwrReceivedHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapBrPwrReceivedHighThres.setUnits("0.1 dB")
_ThresholdPhysPerfCapDispersionCompensationLowThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapDispersionCompensationLowThres_Object = MibTableColumn
thresholdPhysPerfCapDispersionCompensationLowThres = _ThresholdPhysPerfCapDispersionCompensationLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 12),
    _ThresholdPhysPerfCapDispersionCompensationLowThres_Type()
)
thresholdPhysPerfCapDispersionCompensationLowThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapDispersionCompensationLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapDispersionCompensationLowThres.setUnits("ps/nm")
_ThresholdPhysPerfCapDispersionCompensationHighThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapDispersionCompensationHighThres_Object = MibTableColumn
thresholdPhysPerfCapDispersionCompensationHighThres = _ThresholdPhysPerfCapDispersionCompensationHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 13),
    _ThresholdPhysPerfCapDispersionCompensationHighThres_Type()
)
thresholdPhysPerfCapDispersionCompensationHighThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapDispersionCompensationHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapDispersionCompensationHighThres.setUnits("ps/nm")
_ThresholdPhysPerfCapLowerAtlinkThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapLowerAtlinkThres_Object = MibTableColumn
thresholdPhysPerfCapLowerAtlinkThres = _ThresholdPhysPerfCapLowerAtlinkThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 14),
    _ThresholdPhysPerfCapLowerAtlinkThres_Type()
)
thresholdPhysPerfCapLowerAtlinkThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLowerAtlinkThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLowerAtlinkThres.setUnits("0.1 dB")
_ThresholdPhysPerfCapUpperAtlinkThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapUpperAtlinkThres_Object = MibTableColumn
thresholdPhysPerfCapUpperAtlinkThres = _ThresholdPhysPerfCapUpperAtlinkThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 15),
    _ThresholdPhysPerfCapUpperAtlinkThres_Type()
)
thresholdPhysPerfCapUpperAtlinkThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapUpperAtlinkThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapUpperAtlinkThres.setUnits("0.1 dB")
_ThresholdPhysPerfCapLatencyLowThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapLatencyLowThres_Object = MibTableColumn
thresholdPhysPerfCapLatencyLowThres = _ThresholdPhysPerfCapLatencyLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 16),
    _ThresholdPhysPerfCapLatencyLowThres_Type()
)
thresholdPhysPerfCapLatencyLowThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLatencyLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLatencyLowThres.setUnits("0.1 us")
_ThresholdPhysPerfCapLatencyHighThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapLatencyHighThres_Object = MibTableColumn
thresholdPhysPerfCapLatencyHighThres = _ThresholdPhysPerfCapLatencyHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 17),
    _ThresholdPhysPerfCapLatencyHighThres_Type()
)
thresholdPhysPerfCapLatencyHighThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLatencyHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLatencyHighThres.setUnits("0.1 us")
_ThresholdPhysPerfCapRoundTripDelayHighThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapRoundTripDelayHighThres_Object = MibTableColumn
thresholdPhysPerfCapRoundTripDelayHighThres = _ThresholdPhysPerfCapRoundTripDelayHighThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 18),
    _ThresholdPhysPerfCapRoundTripDelayHighThres_Type()
)
thresholdPhysPerfCapRoundTripDelayHighThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapRoundTripDelayHighThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapRoundTripDelayHighThres.setUnits("ns")
_ThresholdPhysPerfCapRoundTripDelayLowThres_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapRoundTripDelayLowThres_Object = MibTableColumn
thresholdPhysPerfCapRoundTripDelayLowThres = _ThresholdPhysPerfCapRoundTripDelayLowThres_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 19),
    _ThresholdPhysPerfCapRoundTripDelayLowThres_Type()
)
thresholdPhysPerfCapRoundTripDelayLowThres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapRoundTripDelayLowThres.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapRoundTripDelayLowThres.setUnits("ns")
_ThresholdPhysPerfCapDifferentialGroupDelayHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapDifferentialGroupDelayHigh_Object = MibTableColumn
thresholdPhysPerfCapDifferentialGroupDelayHigh = _ThresholdPhysPerfCapDifferentialGroupDelayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 20),
    _ThresholdPhysPerfCapDifferentialGroupDelayHigh_Type()
)
thresholdPhysPerfCapDifferentialGroupDelayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapDifferentialGroupDelayHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapDifferentialGroupDelayHigh.setUnits("ps")
_ThresholdPhysPerfCapChromaticDispersionLow_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapChromaticDispersionLow_Object = MibTableColumn
thresholdPhysPerfCapChromaticDispersionLow = _ThresholdPhysPerfCapChromaticDispersionLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 21),
    _ThresholdPhysPerfCapChromaticDispersionLow_Type()
)
thresholdPhysPerfCapChromaticDispersionLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapChromaticDispersionLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapChromaticDispersionLow.setUnits("ps/nm")
_ThresholdPhysPerfCapChromaticDispersionHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapChromaticDispersionHigh_Object = MibTableColumn
thresholdPhysPerfCapChromaticDispersionHigh = _ThresholdPhysPerfCapChromaticDispersionHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 22),
    _ThresholdPhysPerfCapChromaticDispersionHigh_Type()
)
thresholdPhysPerfCapChromaticDispersionHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapChromaticDispersionHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapChromaticDispersionHigh.setUnits("ps/nm")
_ThresholdPhysPerfCapSignalToNoiseRatioLow_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapSignalToNoiseRatioLow_Object = MibTableColumn
thresholdPhysPerfCapSignalToNoiseRatioLow = _ThresholdPhysPerfCapSignalToNoiseRatioLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 23),
    _ThresholdPhysPerfCapSignalToNoiseRatioLow_Type()
)
thresholdPhysPerfCapSignalToNoiseRatioLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapSignalToNoiseRatioLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapSignalToNoiseRatioLow.setUnits("0.1 dB")
_ThresholdPhysPerfCapCarrierFreqOffsetLow_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapCarrierFreqOffsetLow_Object = MibTableColumn
thresholdPhysPerfCapCarrierFreqOffsetLow = _ThresholdPhysPerfCapCarrierFreqOffsetLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 24),
    _ThresholdPhysPerfCapCarrierFreqOffsetLow_Type()
)
thresholdPhysPerfCapCarrierFreqOffsetLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapCarrierFreqOffsetLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapCarrierFreqOffsetLow.setUnits("0.001 GHz")
_ThresholdPhysPerfCapCarrierFreqOffsetHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapCarrierFreqOffsetHigh_Object = MibTableColumn
thresholdPhysPerfCapCarrierFreqOffsetHigh = _ThresholdPhysPerfCapCarrierFreqOffsetHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 25),
    _ThresholdPhysPerfCapCarrierFreqOffsetHigh_Type()
)
thresholdPhysPerfCapCarrierFreqOffsetHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapCarrierFreqOffsetHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapCarrierFreqOffsetHigh.setUnits("0.001 GHz")
_ThresholdPhysPerfCapLogicalLanesSkewHigh_Type = FspR7Integer32Caps
_ThresholdPhysPerfCapLogicalLanesSkewHigh_Object = MibTableColumn
thresholdPhysPerfCapLogicalLanesSkewHigh = _ThresholdPhysPerfCapLogicalLanesSkewHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 22, 1, 26),
    _ThresholdPhysPerfCapLogicalLanesSkewHigh_Type()
)
thresholdPhysPerfCapLogicalLanesSkewHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLogicalLanesSkewHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdPhysPerfCapLogicalLanesSkewHigh.setUnits("ns")
_ThresholdFarEndPhysPerfTable_Object = MibTable
thresholdFarEndPhysPerfTable = _ThresholdFarEndPhysPerfTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 23)
)
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfTable.setStatus("current")
_ThresholdFarEndPhysPerfEntry_Object = MibTableRow
thresholdFarEndPhysPerfEntry = _ThresholdFarEndPhysPerfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 23, 1)
)
thresholdFarEndPhysPerfEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfEntry.setStatus("current")


class _ThresholdFarEndPhysPerfOpticalInputPwrLow_Type(Integer32):
    """Custom type thresholdFarEndPhysPerfOpticalInputPwrLow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-450, 260),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdFarEndPhysPerfOpticalInputPwrLow_Type.__name__ = "Integer32"
_ThresholdFarEndPhysPerfOpticalInputPwrLow_Object = MibTableColumn
thresholdFarEndPhysPerfOpticalInputPwrLow = _ThresholdFarEndPhysPerfOpticalInputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 23, 1, 1),
    _ThresholdFarEndPhysPerfOpticalInputPwrLow_Type()
)
thresholdFarEndPhysPerfOpticalInputPwrLow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalInputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalInputPwrLow.setUnits("0.1 dBm")


class _ThresholdFarEndPhysPerfOpticalInputPwrHigh_Type(Integer32):
    """Custom type thresholdFarEndPhysPerfOpticalInputPwrHigh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-450, 260),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_ThresholdFarEndPhysPerfOpticalInputPwrHigh_Type.__name__ = "Integer32"
_ThresholdFarEndPhysPerfOpticalInputPwrHigh_Object = MibTableColumn
thresholdFarEndPhysPerfOpticalInputPwrHigh = _ThresholdFarEndPhysPerfOpticalInputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 23, 1, 2),
    _ThresholdFarEndPhysPerfOpticalInputPwrHigh_Type()
)
thresholdFarEndPhysPerfOpticalInputPwrHigh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalInputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalInputPwrHigh.setUnits("0.1 dBm")
_ThresholdFarEndPhysPerfOpticalOutputPwrLow_Type = Integer32
_ThresholdFarEndPhysPerfOpticalOutputPwrLow_Object = MibTableColumn
thresholdFarEndPhysPerfOpticalOutputPwrLow = _ThresholdFarEndPhysPerfOpticalOutputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 23, 1, 3),
    _ThresholdFarEndPhysPerfOpticalOutputPwrLow_Type()
)
thresholdFarEndPhysPerfOpticalOutputPwrLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalOutputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalOutputPwrLow.setUnits("0.1 dBm")
_ThresholdFarEndPhysPerfOpticalOutputPwrHigh_Type = Integer32
_ThresholdFarEndPhysPerfOpticalOutputPwrHigh_Object = MibTableColumn
thresholdFarEndPhysPerfOpticalOutputPwrHigh = _ThresholdFarEndPhysPerfOpticalOutputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 23, 1, 4),
    _ThresholdFarEndPhysPerfOpticalOutputPwrHigh_Type()
)
thresholdFarEndPhysPerfOpticalOutputPwrHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalOutputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfOpticalOutputPwrHigh.setUnits("0.1 dBm")
_ThresholdFarEndPhysPerfCapTable_Object = MibTable
thresholdFarEndPhysPerfCapTable = _ThresholdFarEndPhysPerfCapTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 24)
)
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfCapTable.setStatus("current")
_ThresholdFarEndPhysPerfCapEntry_Object = MibTableRow
thresholdFarEndPhysPerfCapEntry = _ThresholdFarEndPhysPerfCapEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 24, 1)
)
thresholdFarEndPhysPerfCapEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfCapEntry.setStatus("current")
_ThresholdFarEndPhysPerfCapOpticalInputPwrLow_Type = FspR7Integer32Caps
_ThresholdFarEndPhysPerfCapOpticalInputPwrLow_Object = MibTableColumn
thresholdFarEndPhysPerfCapOpticalInputPwrLow = _ThresholdFarEndPhysPerfCapOpticalInputPwrLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 24, 1, 1),
    _ThresholdFarEndPhysPerfCapOpticalInputPwrLow_Type()
)
thresholdFarEndPhysPerfCapOpticalInputPwrLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfCapOpticalInputPwrLow.setStatus("current")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfCapOpticalInputPwrLow.setUnits("0.1 dBm")
_ThresholdFarEndPhysPerfCapOpticalInputPwrHigh_Type = FspR7Integer32Caps
_ThresholdFarEndPhysPerfCapOpticalInputPwrHigh_Object = MibTableColumn
thresholdFarEndPhysPerfCapOpticalInputPwrHigh = _ThresholdFarEndPhysPerfCapOpticalInputPwrHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 24, 1, 2),
    _ThresholdFarEndPhysPerfCapOpticalInputPwrHigh_Type()
)
thresholdFarEndPhysPerfCapOpticalInputPwrHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfCapOpticalInputPwrHigh.setStatus("current")
if mibBuilder.loadTexts:
    thresholdFarEndPhysPerfCapOpticalInputPwrHigh.setUnits("0.1 dBm")
_ThresholdPhysConvTxHighSpeedTable_Object = MibTable
thresholdPhysConvTxHighSpeedTable = _ThresholdPhysConvTxHighSpeedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25)
)
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedTable.setStatus("current")
_ThresholdPhysConvTxHighSpeedEntry_Object = MibTableRow
thresholdPhysConvTxHighSpeedEntry = _ThresholdPhysConvTxHighSpeedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25, 1)
)
thresholdPhysConvTxHighSpeedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedEntry.setStatus("current")


class _ThresholdPhysConvTxHighSpeedESTXHighThres15min_Type(Unsigned32):
    """Custom type thresholdPhysConvTxHighSpeedESTXHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvTxHighSpeedESTXHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdPhysConvTxHighSpeedESTXHighThres15min_Object = MibTableColumn
thresholdPhysConvTxHighSpeedESTXHighThres15min = _ThresholdPhysConvTxHighSpeedESTXHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25, 1, 1),
    _ThresholdPhysConvTxHighSpeedESTXHighThres15min_Type()
)
thresholdPhysConvTxHighSpeedESTXHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedESTXHighThres15min.setStatus("current")


class _ThresholdPhysConvTxHighSpeedESTXHighThres1day_Type(Unsigned32):
    """Custom type thresholdPhysConvTxHighSpeedESTXHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 89400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvTxHighSpeedESTXHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdPhysConvTxHighSpeedESTXHighThres1day_Object = MibTableColumn
thresholdPhysConvTxHighSpeedESTXHighThres1day = _ThresholdPhysConvTxHighSpeedESTXHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25, 1, 2),
    _ThresholdPhysConvTxHighSpeedESTXHighThres1day_Type()
)
thresholdPhysConvTxHighSpeedESTXHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedESTXHighThres1day.setStatus("current")
_ThresholdPhysConvTxHighSpeedCVTXHighThres15min_Type = Counter64String
_ThresholdPhysConvTxHighSpeedCVTXHighThres15min_Object = MibTableColumn
thresholdPhysConvTxHighSpeedCVTXHighThres15min = _ThresholdPhysConvTxHighSpeedCVTXHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25, 1, 3),
    _ThresholdPhysConvTxHighSpeedCVTXHighThres15min_Type()
)
thresholdPhysConvTxHighSpeedCVTXHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedCVTXHighThres15min.setStatus("current")
_ThresholdPhysConvTxHighSpeedCVTXHighThres1day_Type = Counter64String
_ThresholdPhysConvTxHighSpeedCVTXHighThres1day_Object = MibTableColumn
thresholdPhysConvTxHighSpeedCVTXHighThres1day = _ThresholdPhysConvTxHighSpeedCVTXHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25, 1, 4),
    _ThresholdPhysConvTxHighSpeedCVTXHighThres1day_Type()
)
thresholdPhysConvTxHighSpeedCVTXHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedCVTXHighThres1day.setStatus("current")


class _ThresholdPhysConvTxHighSpeedSETXHighThres15min_Type(Unsigned32):
    """Custom type thresholdPhysConvTxHighSpeedSETXHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvTxHighSpeedSETXHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdPhysConvTxHighSpeedSETXHighThres15min_Object = MibTableColumn
thresholdPhysConvTxHighSpeedSETXHighThres15min = _ThresholdPhysConvTxHighSpeedSETXHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25, 1, 5),
    _ThresholdPhysConvTxHighSpeedSETXHighThres15min_Type()
)
thresholdPhysConvTxHighSpeedSETXHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedSETXHighThres15min.setStatus("current")


class _ThresholdPhysConvTxHighSpeedSETXHighThres1day_Type(Unsigned32):
    """Custom type thresholdPhysConvTxHighSpeedSETXHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvTxHighSpeedSETXHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdPhysConvTxHighSpeedSETXHighThres1day_Object = MibTableColumn
thresholdPhysConvTxHighSpeedSETXHighThres1day = _ThresholdPhysConvTxHighSpeedSETXHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 25, 1, 6),
    _ThresholdPhysConvTxHighSpeedSETXHighThres1day_Type()
)
thresholdPhysConvTxHighSpeedSETXHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvTxHighSpeedSETXHighThres1day.setStatus("current")
_ThresholdType4PhysCodingLayerTable_Object = MibTable
thresholdType4PhysCodingLayerTable = _ThresholdType4PhysCodingLayerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26)
)
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerTable.setStatus("current")
_ThresholdType4PhysCodingLayerEntry_Object = MibTableRow
thresholdType4PhysCodingLayerEntry = _ThresholdType4PhysCodingLayerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26, 1)
)
thresholdType4PhysCodingLayerEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerEntry.setStatus("current")


class _ThresholdType4PhysCodingLayerESHighThres15min_Type(Unsigned32):
    """Custom type thresholdType4PhysCodingLayerESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdType4PhysCodingLayerESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdType4PhysCodingLayerESHighThres15min_Object = MibTableColumn
thresholdType4PhysCodingLayerESHighThres15min = _ThresholdType4PhysCodingLayerESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26, 1, 1),
    _ThresholdType4PhysCodingLayerESHighThres15min_Type()
)
thresholdType4PhysCodingLayerESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerESHighThres15min.setStatus("current")


class _ThresholdType4PhysCodingLayerESHighThres1day_Type(Unsigned32):
    """Custom type thresholdType4PhysCodingLayerESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 89400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdType4PhysCodingLayerESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdType4PhysCodingLayerESHighThres1day_Object = MibTableColumn
thresholdType4PhysCodingLayerESHighThres1day = _ThresholdType4PhysCodingLayerESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26, 1, 2),
    _ThresholdType4PhysCodingLayerESHighThres1day_Type()
)
thresholdType4PhysCodingLayerESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerESHighThres1day.setStatus("current")
_ThresholdType4PhysCodingLayerCVHighThres15min_Type = Counter64String
_ThresholdType4PhysCodingLayerCVHighThres15min_Object = MibTableColumn
thresholdType4PhysCodingLayerCVHighThres15min = _ThresholdType4PhysCodingLayerCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26, 1, 3),
    _ThresholdType4PhysCodingLayerCVHighThres15min_Type()
)
thresholdType4PhysCodingLayerCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerCVHighThres15min.setStatus("current")
_ThresholdType4PhysCodingLayerCVHighThres1day_Type = Counter64String
_ThresholdType4PhysCodingLayerCVHighThres1day_Object = MibTableColumn
thresholdType4PhysCodingLayerCVHighThres1day = _ThresholdType4PhysCodingLayerCVHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26, 1, 4),
    _ThresholdType4PhysCodingLayerCVHighThres1day_Type()
)
thresholdType4PhysCodingLayerCVHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerCVHighThres1day.setStatus("current")
_ThresholdType4PhysCodingLayerBBEHighThres15min_Type = Counter64String
_ThresholdType4PhysCodingLayerBBEHighThres15min_Object = MibTableColumn
thresholdType4PhysCodingLayerBBEHighThres15min = _ThresholdType4PhysCodingLayerBBEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26, 1, 5),
    _ThresholdType4PhysCodingLayerBBEHighThres15min_Type()
)
thresholdType4PhysCodingLayerBBEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerBBEHighThres15min.setStatus("current")
_ThresholdType4PhysCodingLayerBBEHighThres1day_Type = Counter64String
_ThresholdType4PhysCodingLayerBBEHighThres1day_Object = MibTableColumn
thresholdType4PhysCodingLayerBBEHighThres1day = _ThresholdType4PhysCodingLayerBBEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 1, 26, 1, 6),
    _ThresholdType4PhysCodingLayerBBEHighThres1day_Type()
)
thresholdType4PhysCodingLayerBBEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdType4PhysCodingLayerBBEHighThres1day.setStatus("current")
_PerformanceMonitoring_ObjectIdentity = ObjectIdentity
performanceMonitoring = _PerformanceMonitoring_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2)
)
_CurrentOtu15minTable_Object = MibTable
currentOtu15minTable = _CurrentOtu15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 1)
)
if mibBuilder.loadTexts:
    currentOtu15minTable.setStatus("current")
_CurrentOtu15minEntry_Object = MibTableRow
currentOtu15minEntry = _CurrentOtu15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 1, 1)
)
currentOtu15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOtu15minEntry.setStatus("current")
_CurrentOtu15minES_Type = Unsigned32
_CurrentOtu15minES_Object = MibTableColumn
currentOtu15minES = _CurrentOtu15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 1, 1, 1),
    _CurrentOtu15minES_Type()
)
currentOtu15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu15minES.setStatus("current")
_CurrentOtu15minSES_Type = Unsigned32
_CurrentOtu15minSES_Object = MibTableColumn
currentOtu15minSES = _CurrentOtu15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 1, 1, 2),
    _CurrentOtu15minSES_Type()
)
currentOtu15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu15minSES.setStatus("current")
_CurrentOtu15minBbe_Type = Counter64String
_CurrentOtu15minBbe_Object = MibTableColumn
currentOtu15minBbe = _CurrentOtu15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 1, 1, 3),
    _CurrentOtu15minBbe_Type()
)
currentOtu15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu15minBbe.setStatus("current")
_CurrentOtu15minUAS_Type = Unsigned32
_CurrentOtu15minUAS_Object = MibTableColumn
currentOtu15minUAS = _CurrentOtu15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 1, 1, 4),
    _CurrentOtu15minUAS_Type()
)
currentOtu15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu15minUAS.setStatus("current")


class _CurrentOtu15minElapsedTime_Type(Integer32):
    """Custom type currentOtu15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOtu15minElapsedTime_Type.__name__ = "Integer32"
_CurrentOtu15minElapsedTime_Object = MibTableColumn
currentOtu15minElapsedTime = _CurrentOtu15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 1, 1, 5),
    _CurrentOtu15minElapsedTime_Type()
)
currentOtu15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu15minElapsedTime.setStatus("current")
_CurrentOtu1dayTable_Object = MibTable
currentOtu1dayTable = _CurrentOtu1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 2)
)
if mibBuilder.loadTexts:
    currentOtu1dayTable.setStatus("current")
_CurrentOtu1dayEntry_Object = MibTableRow
currentOtu1dayEntry = _CurrentOtu1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 2, 1)
)
currentOtu1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOtu1dayEntry.setStatus("current")
_CurrentOtu1dayES_Type = Unsigned32
_CurrentOtu1dayES_Object = MibTableColumn
currentOtu1dayES = _CurrentOtu1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 2, 1, 1),
    _CurrentOtu1dayES_Type()
)
currentOtu1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu1dayES.setStatus("current")
_CurrentOtu1daySES_Type = Unsigned32
_CurrentOtu1daySES_Object = MibTableColumn
currentOtu1daySES = _CurrentOtu1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 2, 1, 2),
    _CurrentOtu1daySES_Type()
)
currentOtu1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu1daySES.setStatus("current")
_CurrentOtu1dayBbe_Type = Counter64String
_CurrentOtu1dayBbe_Object = MibTableColumn
currentOtu1dayBbe = _CurrentOtu1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 2, 1, 3),
    _CurrentOtu1dayBbe_Type()
)
currentOtu1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu1dayBbe.setStatus("current")
_CurrentOtu1dayUAS_Type = Unsigned32
_CurrentOtu1dayUAS_Object = MibTableColumn
currentOtu1dayUAS = _CurrentOtu1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 2, 1, 4),
    _CurrentOtu1dayUAS_Type()
)
currentOtu1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu1dayUAS.setStatus("current")


class _CurrentOtu1dayElapsedTime_Type(Integer32):
    """Custom type currentOtu1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOtu1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentOtu1dayElapsedTime_Object = MibTableColumn
currentOtu1dayElapsedTime = _CurrentOtu1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 2, 1, 5),
    _CurrentOtu1dayElapsedTime_Type()
)
currentOtu1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtu1dayElapsedTime.setStatus("current")
_IntervalOtu15minTable_Object = MibTable
intervalOtu15minTable = _IntervalOtu15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3)
)
if mibBuilder.loadTexts:
    intervalOtu15minTable.setStatus("current")
_IntervalOtu15minEntry_Object = MibTableRow
intervalOtu15minEntry = _IntervalOtu15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1)
)
intervalOtu15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOtu15minNumber"),
)
if mibBuilder.loadTexts:
    intervalOtu15minEntry.setStatus("current")


class _IntervalOtu15minNumber_Type(Integer32):
    """Custom type intervalOtu15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalOtu15minNumber_Type.__name__ = "Integer32"
_IntervalOtu15minNumber_Object = MibTableColumn
intervalOtu15minNumber = _IntervalOtu15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1, 1),
    _IntervalOtu15minNumber_Type()
)
intervalOtu15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOtu15minNumber.setStatus("current")
_IntervalOtu15minES_Type = Unsigned32
_IntervalOtu15minES_Object = MibTableColumn
intervalOtu15minES = _IntervalOtu15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1, 2),
    _IntervalOtu15minES_Type()
)
intervalOtu15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu15minES.setStatus("current")
_IntervalOtu15minSES_Type = Unsigned32
_IntervalOtu15minSES_Object = MibTableColumn
intervalOtu15minSES = _IntervalOtu15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1, 3),
    _IntervalOtu15minSES_Type()
)
intervalOtu15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu15minSES.setStatus("current")
_IntervalOtu15minBbe_Type = Counter64String
_IntervalOtu15minBbe_Object = MibTableColumn
intervalOtu15minBbe = _IntervalOtu15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1, 4),
    _IntervalOtu15minBbe_Type()
)
intervalOtu15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu15minBbe.setStatus("current")
_IntervalOtu15minUAS_Type = Unsigned32
_IntervalOtu15minUAS_Object = MibTableColumn
intervalOtu15minUAS = _IntervalOtu15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1, 5),
    _IntervalOtu15minUAS_Type()
)
intervalOtu15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu15minUAS.setStatus("current")
_IntervalOtu15minValidFlag_Type = TruthValue
_IntervalOtu15minValidFlag_Object = MibTableColumn
intervalOtu15minValidFlag = _IntervalOtu15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1, 6),
    _IntervalOtu15minValidFlag_Type()
)
intervalOtu15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu15minValidFlag.setStatus("current")
_IntervalOtu15minTimeStamp_Type = DateAndTime
_IntervalOtu15minTimeStamp_Object = MibTableColumn
intervalOtu15minTimeStamp = _IntervalOtu15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 3, 1, 7),
    _IntervalOtu15minTimeStamp_Type()
)
intervalOtu15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu15minTimeStamp.setStatus("current")
_IntervalOtu1dayTable_Object = MibTable
intervalOtu1dayTable = _IntervalOtu1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4)
)
if mibBuilder.loadTexts:
    intervalOtu1dayTable.setStatus("current")
_IntervalOtu1dayEntry_Object = MibTableRow
intervalOtu1dayEntry = _IntervalOtu1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1)
)
intervalOtu1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOtu1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalOtu1dayEntry.setStatus("current")


class _IntervalOtu1dayNumber_Type(Integer32):
    """Custom type intervalOtu1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalOtu1dayNumber_Type.__name__ = "Integer32"
_IntervalOtu1dayNumber_Object = MibTableColumn
intervalOtu1dayNumber = _IntervalOtu1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1, 1),
    _IntervalOtu1dayNumber_Type()
)
intervalOtu1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOtu1dayNumber.setStatus("current")
_IntervalOtu1dayES_Type = Unsigned32
_IntervalOtu1dayES_Object = MibTableColumn
intervalOtu1dayES = _IntervalOtu1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1, 2),
    _IntervalOtu1dayES_Type()
)
intervalOtu1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu1dayES.setStatus("current")
_IntervalOtu1daySES_Type = Unsigned32
_IntervalOtu1daySES_Object = MibTableColumn
intervalOtu1daySES = _IntervalOtu1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1, 3),
    _IntervalOtu1daySES_Type()
)
intervalOtu1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu1daySES.setStatus("current")
_IntervalOtu1dayBbe_Type = Counter64String
_IntervalOtu1dayBbe_Object = MibTableColumn
intervalOtu1dayBbe = _IntervalOtu1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1, 4),
    _IntervalOtu1dayBbe_Type()
)
intervalOtu1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu1dayBbe.setStatus("current")
_IntervalOtu1dayUAS_Type = Unsigned32
_IntervalOtu1dayUAS_Object = MibTableColumn
intervalOtu1dayUAS = _IntervalOtu1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1, 5),
    _IntervalOtu1dayUAS_Type()
)
intervalOtu1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu1dayUAS.setStatus("current")
_IntervalOtu1dayValidFlag_Type = TruthValue
_IntervalOtu1dayValidFlag_Object = MibTableColumn
intervalOtu1dayValidFlag = _IntervalOtu1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1, 6),
    _IntervalOtu1dayValidFlag_Type()
)
intervalOtu1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu1dayValidFlag.setStatus("current")
_IntervalOtu1dayTimeStamp_Type = DateAndTime
_IntervalOtu1dayTimeStamp_Object = MibTableColumn
intervalOtu1dayTimeStamp = _IntervalOtu1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 4, 1, 7),
    _IntervalOtu1dayTimeStamp_Type()
)
intervalOtu1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtu1dayTimeStamp.setStatus("current")
_CurrentOdu15minTable_Object = MibTable
currentOdu15minTable = _CurrentOdu15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 5)
)
if mibBuilder.loadTexts:
    currentOdu15minTable.setStatus("current")
_CurrentOdu15minEntry_Object = MibTableRow
currentOdu15minEntry = _CurrentOdu15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 5, 1)
)
currentOdu15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOdu15minEntry.setStatus("current")
_CurrentOdu15minES_Type = Unsigned32
_CurrentOdu15minES_Object = MibTableColumn
currentOdu15minES = _CurrentOdu15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 5, 1, 1),
    _CurrentOdu15minES_Type()
)
currentOdu15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu15minES.setStatus("current")
_CurrentOdu15minSES_Type = Unsigned32
_CurrentOdu15minSES_Object = MibTableColumn
currentOdu15minSES = _CurrentOdu15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 5, 1, 2),
    _CurrentOdu15minSES_Type()
)
currentOdu15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu15minSES.setStatus("current")
_CurrentOdu15minBbe_Type = Counter64String
_CurrentOdu15minBbe_Object = MibTableColumn
currentOdu15minBbe = _CurrentOdu15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 5, 1, 3),
    _CurrentOdu15minBbe_Type()
)
currentOdu15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu15minBbe.setStatus("current")
_CurrentOdu15minUAS_Type = Unsigned32
_CurrentOdu15minUAS_Object = MibTableColumn
currentOdu15minUAS = _CurrentOdu15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 5, 1, 4),
    _CurrentOdu15minUAS_Type()
)
currentOdu15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu15minUAS.setStatus("current")


class _CurrentOdu15minElapsedTime_Type(Integer32):
    """Custom type currentOdu15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOdu15minElapsedTime_Type.__name__ = "Integer32"
_CurrentOdu15minElapsedTime_Object = MibTableColumn
currentOdu15minElapsedTime = _CurrentOdu15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 5, 1, 5),
    _CurrentOdu15minElapsedTime_Type()
)
currentOdu15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu15minElapsedTime.setStatus("current")
_CurrentOdu1dayTable_Object = MibTable
currentOdu1dayTable = _CurrentOdu1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 6)
)
if mibBuilder.loadTexts:
    currentOdu1dayTable.setStatus("current")
_CurrentOdu1dayEntry_Object = MibTableRow
currentOdu1dayEntry = _CurrentOdu1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 6, 1)
)
currentOdu1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOdu1dayEntry.setStatus("current")
_CurrentOdu1dayES_Type = Unsigned32
_CurrentOdu1dayES_Object = MibTableColumn
currentOdu1dayES = _CurrentOdu1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 6, 1, 1),
    _CurrentOdu1dayES_Type()
)
currentOdu1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu1dayES.setStatus("current")
_CurrentOdu1daySES_Type = Unsigned32
_CurrentOdu1daySES_Object = MibTableColumn
currentOdu1daySES = _CurrentOdu1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 6, 1, 2),
    _CurrentOdu1daySES_Type()
)
currentOdu1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu1daySES.setStatus("current")
_CurrentOdu1dayBbe_Type = Counter64String
_CurrentOdu1dayBbe_Object = MibTableColumn
currentOdu1dayBbe = _CurrentOdu1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 6, 1, 3),
    _CurrentOdu1dayBbe_Type()
)
currentOdu1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu1dayBbe.setStatus("current")
_CurrentOdu1dayUAS_Type = Unsigned32
_CurrentOdu1dayUAS_Object = MibTableColumn
currentOdu1dayUAS = _CurrentOdu1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 6, 1, 4),
    _CurrentOdu1dayUAS_Type()
)
currentOdu1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu1dayUAS.setStatus("current")


class _CurrentOdu1dayElapsedTime_Type(Integer32):
    """Custom type currentOdu1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOdu1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentOdu1dayElapsedTime_Object = MibTableColumn
currentOdu1dayElapsedTime = _CurrentOdu1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 6, 1, 5),
    _CurrentOdu1dayElapsedTime_Type()
)
currentOdu1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOdu1dayElapsedTime.setStatus("current")
_IntervalOdu15minTable_Object = MibTable
intervalOdu15minTable = _IntervalOdu15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7)
)
if mibBuilder.loadTexts:
    intervalOdu15minTable.setStatus("current")
_IntervalOdu15minEntry_Object = MibTableRow
intervalOdu15minEntry = _IntervalOdu15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1)
)
intervalOdu15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOdu15minNumber"),
)
if mibBuilder.loadTexts:
    intervalOdu15minEntry.setStatus("current")


class _IntervalOdu15minNumber_Type(Integer32):
    """Custom type intervalOdu15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalOdu15minNumber_Type.__name__ = "Integer32"
_IntervalOdu15minNumber_Object = MibTableColumn
intervalOdu15minNumber = _IntervalOdu15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1, 1),
    _IntervalOdu15minNumber_Type()
)
intervalOdu15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOdu15minNumber.setStatus("current")
_IntervalOdu15minES_Type = Unsigned32
_IntervalOdu15minES_Object = MibTableColumn
intervalOdu15minES = _IntervalOdu15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1, 2),
    _IntervalOdu15minES_Type()
)
intervalOdu15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu15minES.setStatus("current")
_IntervalOdu15minSES_Type = Unsigned32
_IntervalOdu15minSES_Object = MibTableColumn
intervalOdu15minSES = _IntervalOdu15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1, 3),
    _IntervalOdu15minSES_Type()
)
intervalOdu15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu15minSES.setStatus("current")
_IntervalOdu15minBbe_Type = Counter64String
_IntervalOdu15minBbe_Object = MibTableColumn
intervalOdu15minBbe = _IntervalOdu15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1, 4),
    _IntervalOdu15minBbe_Type()
)
intervalOdu15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu15minBbe.setStatus("current")
_IntervalOdu15minUAS_Type = Unsigned32
_IntervalOdu15minUAS_Object = MibTableColumn
intervalOdu15minUAS = _IntervalOdu15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1, 5),
    _IntervalOdu15minUAS_Type()
)
intervalOdu15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu15minUAS.setStatus("current")
_IntervalOdu15minValidFlag_Type = TruthValue
_IntervalOdu15minValidFlag_Object = MibTableColumn
intervalOdu15minValidFlag = _IntervalOdu15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1, 6),
    _IntervalOdu15minValidFlag_Type()
)
intervalOdu15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu15minValidFlag.setStatus("current")
_IntervalOdu15minTimeStamp_Type = DateAndTime
_IntervalOdu15minTimeStamp_Object = MibTableColumn
intervalOdu15minTimeStamp = _IntervalOdu15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 7, 1, 7),
    _IntervalOdu15minTimeStamp_Type()
)
intervalOdu15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu15minTimeStamp.setStatus("current")
_IntervalOdu1dayTable_Object = MibTable
intervalOdu1dayTable = _IntervalOdu1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8)
)
if mibBuilder.loadTexts:
    intervalOdu1dayTable.setStatus("current")
_IntervalOdu1dayEntry_Object = MibTableRow
intervalOdu1dayEntry = _IntervalOdu1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1)
)
intervalOdu1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOdu1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalOdu1dayEntry.setStatus("current")


class _IntervalOdu1dayNumber_Type(Integer32):
    """Custom type intervalOdu1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalOdu1dayNumber_Type.__name__ = "Integer32"
_IntervalOdu1dayNumber_Object = MibTableColumn
intervalOdu1dayNumber = _IntervalOdu1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1, 1),
    _IntervalOdu1dayNumber_Type()
)
intervalOdu1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOdu1dayNumber.setStatus("current")
_IntervalOdu1dayES_Type = Unsigned32
_IntervalOdu1dayES_Object = MibTableColumn
intervalOdu1dayES = _IntervalOdu1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1, 2),
    _IntervalOdu1dayES_Type()
)
intervalOdu1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu1dayES.setStatus("current")
_IntervalOdu1daySES_Type = Unsigned32
_IntervalOdu1daySES_Object = MibTableColumn
intervalOdu1daySES = _IntervalOdu1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1, 3),
    _IntervalOdu1daySES_Type()
)
intervalOdu1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu1daySES.setStatus("current")
_IntervalOdu1dayBbe_Type = Counter64String
_IntervalOdu1dayBbe_Object = MibTableColumn
intervalOdu1dayBbe = _IntervalOdu1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1, 4),
    _IntervalOdu1dayBbe_Type()
)
intervalOdu1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu1dayBbe.setStatus("current")
_IntervalOdu1dayUAS_Type = Unsigned32
_IntervalOdu1dayUAS_Object = MibTableColumn
intervalOdu1dayUAS = _IntervalOdu1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1, 5),
    _IntervalOdu1dayUAS_Type()
)
intervalOdu1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu1dayUAS.setStatus("current")
_IntervalOdu1dayValidFlag_Type = TruthValue
_IntervalOdu1dayValidFlag_Object = MibTableColumn
intervalOdu1dayValidFlag = _IntervalOdu1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1, 6),
    _IntervalOdu1dayValidFlag_Type()
)
intervalOdu1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu1dayValidFlag.setStatus("current")
_IntervalOdu1dayTimeStamp_Type = DateAndTime
_IntervalOdu1dayTimeStamp_Object = MibTableColumn
intervalOdu1dayTimeStamp = _IntervalOdu1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 8, 1, 7),
    _IntervalOdu1dayTimeStamp_Type()
)
intervalOdu1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOdu1dayTimeStamp.setStatus("current")
_CurrentOduTcmA15minTable_Object = MibTable
currentOduTcmA15minTable = _CurrentOduTcmA15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 9)
)
if mibBuilder.loadTexts:
    currentOduTcmA15minTable.setStatus("current")
_CurrentOduTcmA15minEntry_Object = MibTableRow
currentOduTcmA15minEntry = _CurrentOduTcmA15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 9, 1)
)
currentOduTcmA15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOduTcmA15minEntry.setStatus("current")
_CurrentOduTcmA15minES_Type = Unsigned32
_CurrentOduTcmA15minES_Object = MibTableColumn
currentOduTcmA15minES = _CurrentOduTcmA15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 9, 1, 1),
    _CurrentOduTcmA15minES_Type()
)
currentOduTcmA15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA15minES.setStatus("current")
_CurrentOduTcmA15minSES_Type = Unsigned32
_CurrentOduTcmA15minSES_Object = MibTableColumn
currentOduTcmA15minSES = _CurrentOduTcmA15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 9, 1, 2),
    _CurrentOduTcmA15minSES_Type()
)
currentOduTcmA15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA15minSES.setStatus("current")
_CurrentOduTcmA15minBbe_Type = Counter64String
_CurrentOduTcmA15minBbe_Object = MibTableColumn
currentOduTcmA15minBbe = _CurrentOduTcmA15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 9, 1, 3),
    _CurrentOduTcmA15minBbe_Type()
)
currentOduTcmA15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA15minBbe.setStatus("current")
_CurrentOduTcmA15minUAS_Type = Unsigned32
_CurrentOduTcmA15minUAS_Object = MibTableColumn
currentOduTcmA15minUAS = _CurrentOduTcmA15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 9, 1, 4),
    _CurrentOduTcmA15minUAS_Type()
)
currentOduTcmA15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA15minUAS.setStatus("current")


class _CurrentOduTcmA15minElapsedTime_Type(Integer32):
    """Custom type currentOduTcmA15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOduTcmA15minElapsedTime_Type.__name__ = "Integer32"
_CurrentOduTcmA15minElapsedTime_Object = MibTableColumn
currentOduTcmA15minElapsedTime = _CurrentOduTcmA15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 9, 1, 5),
    _CurrentOduTcmA15minElapsedTime_Type()
)
currentOduTcmA15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA15minElapsedTime.setStatus("current")
_CurrentOduTcmA1dayTable_Object = MibTable
currentOduTcmA1dayTable = _CurrentOduTcmA1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 10)
)
if mibBuilder.loadTexts:
    currentOduTcmA1dayTable.setStatus("current")
_CurrentOduTcmA1dayEntry_Object = MibTableRow
currentOduTcmA1dayEntry = _CurrentOduTcmA1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 10, 1)
)
currentOduTcmA1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOduTcmA1dayEntry.setStatus("current")
_CurrentOduTcmA1dayES_Type = Unsigned32
_CurrentOduTcmA1dayES_Object = MibTableColumn
currentOduTcmA1dayES = _CurrentOduTcmA1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 10, 1, 1),
    _CurrentOduTcmA1dayES_Type()
)
currentOduTcmA1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA1dayES.setStatus("current")
_CurrentOduTcmA1daySES_Type = Unsigned32
_CurrentOduTcmA1daySES_Object = MibTableColumn
currentOduTcmA1daySES = _CurrentOduTcmA1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 10, 1, 2),
    _CurrentOduTcmA1daySES_Type()
)
currentOduTcmA1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA1daySES.setStatus("current")
_CurrentOduTcmA1dayBbe_Type = Counter64String
_CurrentOduTcmA1dayBbe_Object = MibTableColumn
currentOduTcmA1dayBbe = _CurrentOduTcmA1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 10, 1, 3),
    _CurrentOduTcmA1dayBbe_Type()
)
currentOduTcmA1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA1dayBbe.setStatus("current")
_CurrentOduTcmA1dayUAS_Type = Unsigned32
_CurrentOduTcmA1dayUAS_Object = MibTableColumn
currentOduTcmA1dayUAS = _CurrentOduTcmA1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 10, 1, 4),
    _CurrentOduTcmA1dayUAS_Type()
)
currentOduTcmA1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA1dayUAS.setStatus("current")


class _CurrentOduTcmA1dayElapsedTime_Type(Integer32):
    """Custom type currentOduTcmA1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOduTcmA1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentOduTcmA1dayElapsedTime_Object = MibTableColumn
currentOduTcmA1dayElapsedTime = _CurrentOduTcmA1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 10, 1, 5),
    _CurrentOduTcmA1dayElapsedTime_Type()
)
currentOduTcmA1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmA1dayElapsedTime.setStatus("current")
_IntervalOduTcmA15minTable_Object = MibTable
intervalOduTcmA15minTable = _IntervalOduTcmA15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11)
)
if mibBuilder.loadTexts:
    intervalOduTcmA15minTable.setStatus("current")
_IntervalOduTcmA15minEntry_Object = MibTableRow
intervalOduTcmA15minEntry = _IntervalOduTcmA15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1)
)
intervalOduTcmA15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOduTcmA15minNumber"),
)
if mibBuilder.loadTexts:
    intervalOduTcmA15minEntry.setStatus("current")


class _IntervalOduTcmA15minNumber_Type(Integer32):
    """Custom type intervalOduTcmA15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalOduTcmA15minNumber_Type.__name__ = "Integer32"
_IntervalOduTcmA15minNumber_Object = MibTableColumn
intervalOduTcmA15minNumber = _IntervalOduTcmA15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1, 1),
    _IntervalOduTcmA15minNumber_Type()
)
intervalOduTcmA15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOduTcmA15minNumber.setStatus("current")
_IntervalOduTcmA15minES_Type = Unsigned32
_IntervalOduTcmA15minES_Object = MibTableColumn
intervalOduTcmA15minES = _IntervalOduTcmA15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1, 2),
    _IntervalOduTcmA15minES_Type()
)
intervalOduTcmA15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA15minES.setStatus("current")
_IntervalOduTcmA15minSES_Type = Unsigned32
_IntervalOduTcmA15minSES_Object = MibTableColumn
intervalOduTcmA15minSES = _IntervalOduTcmA15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1, 3),
    _IntervalOduTcmA15minSES_Type()
)
intervalOduTcmA15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA15minSES.setStatus("current")
_IntervalOduTcmA15minBbe_Type = Counter64String
_IntervalOduTcmA15minBbe_Object = MibTableColumn
intervalOduTcmA15minBbe = _IntervalOduTcmA15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1, 4),
    _IntervalOduTcmA15minBbe_Type()
)
intervalOduTcmA15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA15minBbe.setStatus("current")
_IntervalOduTcmA15minUAS_Type = Unsigned32
_IntervalOduTcmA15minUAS_Object = MibTableColumn
intervalOduTcmA15minUAS = _IntervalOduTcmA15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1, 5),
    _IntervalOduTcmA15minUAS_Type()
)
intervalOduTcmA15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA15minUAS.setStatus("current")
_IntervalOduTcmA15minValidFlag_Type = TruthValue
_IntervalOduTcmA15minValidFlag_Object = MibTableColumn
intervalOduTcmA15minValidFlag = _IntervalOduTcmA15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1, 6),
    _IntervalOduTcmA15minValidFlag_Type()
)
intervalOduTcmA15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA15minValidFlag.setStatus("current")
_IntervalOduTcmA15minTimeStamp_Type = DateAndTime
_IntervalOduTcmA15minTimeStamp_Object = MibTableColumn
intervalOduTcmA15minTimeStamp = _IntervalOduTcmA15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 11, 1, 7),
    _IntervalOduTcmA15minTimeStamp_Type()
)
intervalOduTcmA15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA15minTimeStamp.setStatus("current")
_IntervalOduTcmA1dayTable_Object = MibTable
intervalOduTcmA1dayTable = _IntervalOduTcmA1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12)
)
if mibBuilder.loadTexts:
    intervalOduTcmA1dayTable.setStatus("current")
_IntervalOduTcmA1dayEntry_Object = MibTableRow
intervalOduTcmA1dayEntry = _IntervalOduTcmA1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1)
)
intervalOduTcmA1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOduTcmA1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalOduTcmA1dayEntry.setStatus("current")


class _IntervalOduTcmA1dayNumber_Type(Integer32):
    """Custom type intervalOduTcmA1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalOduTcmA1dayNumber_Type.__name__ = "Integer32"
_IntervalOduTcmA1dayNumber_Object = MibTableColumn
intervalOduTcmA1dayNumber = _IntervalOduTcmA1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1, 1),
    _IntervalOduTcmA1dayNumber_Type()
)
intervalOduTcmA1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOduTcmA1dayNumber.setStatus("current")
_IntervalOduTcmA1dayES_Type = Unsigned32
_IntervalOduTcmA1dayES_Object = MibTableColumn
intervalOduTcmA1dayES = _IntervalOduTcmA1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1, 2),
    _IntervalOduTcmA1dayES_Type()
)
intervalOduTcmA1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA1dayES.setStatus("current")
_IntervalOduTcmA1daySES_Type = Unsigned32
_IntervalOduTcmA1daySES_Object = MibTableColumn
intervalOduTcmA1daySES = _IntervalOduTcmA1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1, 3),
    _IntervalOduTcmA1daySES_Type()
)
intervalOduTcmA1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA1daySES.setStatus("current")
_IntervalOduTcmA1dayBbe_Type = Counter64String
_IntervalOduTcmA1dayBbe_Object = MibTableColumn
intervalOduTcmA1dayBbe = _IntervalOduTcmA1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1, 4),
    _IntervalOduTcmA1dayBbe_Type()
)
intervalOduTcmA1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA1dayBbe.setStatus("current")
_IntervalOduTcmA1dayUAS_Type = Unsigned32
_IntervalOduTcmA1dayUAS_Object = MibTableColumn
intervalOduTcmA1dayUAS = _IntervalOduTcmA1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1, 5),
    _IntervalOduTcmA1dayUAS_Type()
)
intervalOduTcmA1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA1dayUAS.setStatus("current")
_IntervalOduTcmA1dayValidFlag_Type = TruthValue
_IntervalOduTcmA1dayValidFlag_Object = MibTableColumn
intervalOduTcmA1dayValidFlag = _IntervalOduTcmA1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1, 6),
    _IntervalOduTcmA1dayValidFlag_Type()
)
intervalOduTcmA1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA1dayValidFlag.setStatus("current")
_IntervalOduTcmA1dayTimeStamp_Type = DateAndTime
_IntervalOduTcmA1dayTimeStamp_Object = MibTableColumn
intervalOduTcmA1dayTimeStamp = _IntervalOduTcmA1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 12, 1, 7),
    _IntervalOduTcmA1dayTimeStamp_Type()
)
intervalOduTcmA1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmA1dayTimeStamp.setStatus("current")
_CurrentOduTcmB15minTable_Object = MibTable
currentOduTcmB15minTable = _CurrentOduTcmB15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 13)
)
if mibBuilder.loadTexts:
    currentOduTcmB15minTable.setStatus("current")
_CurrentOduTcmB15minEntry_Object = MibTableRow
currentOduTcmB15minEntry = _CurrentOduTcmB15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 13, 1)
)
currentOduTcmB15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOduTcmB15minEntry.setStatus("current")
_CurrentOduTcmB15minES_Type = Unsigned32
_CurrentOduTcmB15minES_Object = MibTableColumn
currentOduTcmB15minES = _CurrentOduTcmB15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 13, 1, 1),
    _CurrentOduTcmB15minES_Type()
)
currentOduTcmB15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB15minES.setStatus("current")
_CurrentOduTcmB15minSES_Type = Unsigned32
_CurrentOduTcmB15minSES_Object = MibTableColumn
currentOduTcmB15minSES = _CurrentOduTcmB15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 13, 1, 2),
    _CurrentOduTcmB15minSES_Type()
)
currentOduTcmB15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB15minSES.setStatus("current")
_CurrentOduTcmB15minBbe_Type = Counter64String
_CurrentOduTcmB15minBbe_Object = MibTableColumn
currentOduTcmB15minBbe = _CurrentOduTcmB15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 13, 1, 3),
    _CurrentOduTcmB15minBbe_Type()
)
currentOduTcmB15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB15minBbe.setStatus("current")
_CurrentOduTcmB15minUAS_Type = Unsigned32
_CurrentOduTcmB15minUAS_Object = MibTableColumn
currentOduTcmB15minUAS = _CurrentOduTcmB15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 13, 1, 4),
    _CurrentOduTcmB15minUAS_Type()
)
currentOduTcmB15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB15minUAS.setStatus("current")


class _CurrentOduTcmB15minElapsedTime_Type(Integer32):
    """Custom type currentOduTcmB15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOduTcmB15minElapsedTime_Type.__name__ = "Integer32"
_CurrentOduTcmB15minElapsedTime_Object = MibTableColumn
currentOduTcmB15minElapsedTime = _CurrentOduTcmB15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 13, 1, 5),
    _CurrentOduTcmB15minElapsedTime_Type()
)
currentOduTcmB15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB15minElapsedTime.setStatus("current")
_CurrentOduTcmB1dayTable_Object = MibTable
currentOduTcmB1dayTable = _CurrentOduTcmB1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 14)
)
if mibBuilder.loadTexts:
    currentOduTcmB1dayTable.setStatus("current")
_CurrentOduTcmB1dayEntry_Object = MibTableRow
currentOduTcmB1dayEntry = _CurrentOduTcmB1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 14, 1)
)
currentOduTcmB1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOduTcmB1dayEntry.setStatus("current")
_CurrentOduTcmB1dayES_Type = Unsigned32
_CurrentOduTcmB1dayES_Object = MibTableColumn
currentOduTcmB1dayES = _CurrentOduTcmB1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 14, 1, 1),
    _CurrentOduTcmB1dayES_Type()
)
currentOduTcmB1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB1dayES.setStatus("current")
_CurrentOduTcmB1daySES_Type = Unsigned32
_CurrentOduTcmB1daySES_Object = MibTableColumn
currentOduTcmB1daySES = _CurrentOduTcmB1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 14, 1, 2),
    _CurrentOduTcmB1daySES_Type()
)
currentOduTcmB1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB1daySES.setStatus("current")
_CurrentOduTcmB1dayBbe_Type = Counter64String
_CurrentOduTcmB1dayBbe_Object = MibTableColumn
currentOduTcmB1dayBbe = _CurrentOduTcmB1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 14, 1, 3),
    _CurrentOduTcmB1dayBbe_Type()
)
currentOduTcmB1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB1dayBbe.setStatus("current")
_CurrentOduTcmB1dayUAS_Type = Unsigned32
_CurrentOduTcmB1dayUAS_Object = MibTableColumn
currentOduTcmB1dayUAS = _CurrentOduTcmB1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 14, 1, 4),
    _CurrentOduTcmB1dayUAS_Type()
)
currentOduTcmB1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB1dayUAS.setStatus("current")


class _CurrentOduTcmB1dayElapsedTime_Type(Integer32):
    """Custom type currentOduTcmB1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOduTcmB1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentOduTcmB1dayElapsedTime_Object = MibTableColumn
currentOduTcmB1dayElapsedTime = _CurrentOduTcmB1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 14, 1, 5),
    _CurrentOduTcmB1dayElapsedTime_Type()
)
currentOduTcmB1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmB1dayElapsedTime.setStatus("current")
_IntervalOduTcmB15minTable_Object = MibTable
intervalOduTcmB15minTable = _IntervalOduTcmB15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15)
)
if mibBuilder.loadTexts:
    intervalOduTcmB15minTable.setStatus("current")
_IntervalOduTcmB15minEntry_Object = MibTableRow
intervalOduTcmB15minEntry = _IntervalOduTcmB15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1)
)
intervalOduTcmB15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOduTcmB15minNumber"),
)
if mibBuilder.loadTexts:
    intervalOduTcmB15minEntry.setStatus("current")


class _IntervalOduTcmB15minNumber_Type(Integer32):
    """Custom type intervalOduTcmB15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalOduTcmB15minNumber_Type.__name__ = "Integer32"
_IntervalOduTcmB15minNumber_Object = MibTableColumn
intervalOduTcmB15minNumber = _IntervalOduTcmB15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1, 1),
    _IntervalOduTcmB15minNumber_Type()
)
intervalOduTcmB15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOduTcmB15minNumber.setStatus("current")
_IntervalOduTcmB15minES_Type = Unsigned32
_IntervalOduTcmB15minES_Object = MibTableColumn
intervalOduTcmB15minES = _IntervalOduTcmB15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1, 2),
    _IntervalOduTcmB15minES_Type()
)
intervalOduTcmB15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB15minES.setStatus("current")
_IntervalOduTcmB15minSES_Type = Unsigned32
_IntervalOduTcmB15minSES_Object = MibTableColumn
intervalOduTcmB15minSES = _IntervalOduTcmB15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1, 3),
    _IntervalOduTcmB15minSES_Type()
)
intervalOduTcmB15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB15minSES.setStatus("current")
_IntervalOduTcmB15minBbe_Type = Counter64String
_IntervalOduTcmB15minBbe_Object = MibTableColumn
intervalOduTcmB15minBbe = _IntervalOduTcmB15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1, 4),
    _IntervalOduTcmB15minBbe_Type()
)
intervalOduTcmB15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB15minBbe.setStatus("current")
_IntervalOduTcmB15minUAS_Type = Unsigned32
_IntervalOduTcmB15minUAS_Object = MibTableColumn
intervalOduTcmB15minUAS = _IntervalOduTcmB15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1, 5),
    _IntervalOduTcmB15minUAS_Type()
)
intervalOduTcmB15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB15minUAS.setStatus("current")
_IntervalOduTcmB15minValidFlag_Type = TruthValue
_IntervalOduTcmB15minValidFlag_Object = MibTableColumn
intervalOduTcmB15minValidFlag = _IntervalOduTcmB15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1, 6),
    _IntervalOduTcmB15minValidFlag_Type()
)
intervalOduTcmB15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB15minValidFlag.setStatus("current")
_IntervalOduTcmB15minTimeStamp_Type = DateAndTime
_IntervalOduTcmB15minTimeStamp_Object = MibTableColumn
intervalOduTcmB15minTimeStamp = _IntervalOduTcmB15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 15, 1, 7),
    _IntervalOduTcmB15minTimeStamp_Type()
)
intervalOduTcmB15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB15minTimeStamp.setStatus("current")
_IntervalOduTcmB1dayTable_Object = MibTable
intervalOduTcmB1dayTable = _IntervalOduTcmB1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16)
)
if mibBuilder.loadTexts:
    intervalOduTcmB1dayTable.setStatus("current")
_IntervalOduTcmB1dayEntry_Object = MibTableRow
intervalOduTcmB1dayEntry = _IntervalOduTcmB1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1)
)
intervalOduTcmB1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOduTcmB1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalOduTcmB1dayEntry.setStatus("current")


class _IntervalOduTcmB1dayNumber_Type(Integer32):
    """Custom type intervalOduTcmB1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalOduTcmB1dayNumber_Type.__name__ = "Integer32"
_IntervalOduTcmB1dayNumber_Object = MibTableColumn
intervalOduTcmB1dayNumber = _IntervalOduTcmB1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1, 1),
    _IntervalOduTcmB1dayNumber_Type()
)
intervalOduTcmB1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOduTcmB1dayNumber.setStatus("current")
_IntervalOduTcmB1dayES_Type = Unsigned32
_IntervalOduTcmB1dayES_Object = MibTableColumn
intervalOduTcmB1dayES = _IntervalOduTcmB1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1, 2),
    _IntervalOduTcmB1dayES_Type()
)
intervalOduTcmB1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB1dayES.setStatus("current")
_IntervalOduTcmB1daySES_Type = Unsigned32
_IntervalOduTcmB1daySES_Object = MibTableColumn
intervalOduTcmB1daySES = _IntervalOduTcmB1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1, 3),
    _IntervalOduTcmB1daySES_Type()
)
intervalOduTcmB1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB1daySES.setStatus("current")
_IntervalOduTcmB1dayBbe_Type = Counter64String
_IntervalOduTcmB1dayBbe_Object = MibTableColumn
intervalOduTcmB1dayBbe = _IntervalOduTcmB1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1, 4),
    _IntervalOduTcmB1dayBbe_Type()
)
intervalOduTcmB1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB1dayBbe.setStatus("current")
_IntervalOduTcmB1dayUAS_Type = Unsigned32
_IntervalOduTcmB1dayUAS_Object = MibTableColumn
intervalOduTcmB1dayUAS = _IntervalOduTcmB1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1, 5),
    _IntervalOduTcmB1dayUAS_Type()
)
intervalOduTcmB1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB1dayUAS.setStatus("current")
_IntervalOduTcmB1dayValidFlag_Type = TruthValue
_IntervalOduTcmB1dayValidFlag_Object = MibTableColumn
intervalOduTcmB1dayValidFlag = _IntervalOduTcmB1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1, 6),
    _IntervalOduTcmB1dayValidFlag_Type()
)
intervalOduTcmB1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB1dayValidFlag.setStatus("current")
_IntervalOduTcmB1dayTimeStamp_Type = DateAndTime
_IntervalOduTcmB1dayTimeStamp_Object = MibTableColumn
intervalOduTcmB1dayTimeStamp = _IntervalOduTcmB1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 16, 1, 7),
    _IntervalOduTcmB1dayTimeStamp_Type()
)
intervalOduTcmB1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmB1dayTimeStamp.setStatus("current")
_CurrentSonetSect15minTable_Object = MibTable
currentSonetSect15minTable = _CurrentSonetSect15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 17)
)
if mibBuilder.loadTexts:
    currentSonetSect15minTable.setStatus("current")
_CurrentSonetSect15minEntry_Object = MibTableRow
currentSonetSect15minEntry = _CurrentSonetSect15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 17, 1)
)
currentSonetSect15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetSect15minEntry.setStatus("current")
_CurrentSonetSect15minES_Type = Unsigned32
_CurrentSonetSect15minES_Object = MibTableColumn
currentSonetSect15minES = _CurrentSonetSect15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 17, 1, 1),
    _CurrentSonetSect15minES_Type()
)
currentSonetSect15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect15minES.setStatus("current")
_CurrentSonetSect15minSES_Type = Unsigned32
_CurrentSonetSect15minSES_Object = MibTableColumn
currentSonetSect15minSES = _CurrentSonetSect15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 17, 1, 2),
    _CurrentSonetSect15minSES_Type()
)
currentSonetSect15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect15minSES.setStatus("current")
_CurrentSonetSect15minSEFS_Type = Unsigned32
_CurrentSonetSect15minSEFS_Object = MibTableColumn
currentSonetSect15minSEFS = _CurrentSonetSect15minSEFS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 17, 1, 3),
    _CurrentSonetSect15minSEFS_Type()
)
currentSonetSect15minSEFS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect15minSEFS.setStatus("current")
_CurrentSonetSect15minCV_Type = Counter64String
_CurrentSonetSect15minCV_Object = MibTableColumn
currentSonetSect15minCV = _CurrentSonetSect15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 17, 1, 4),
    _CurrentSonetSect15minCV_Type()
)
currentSonetSect15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect15minCV.setStatus("current")


class _CurrentSonetSect15minElapsedTime_Type(Integer32):
    """Custom type currentSonetSect15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetSect15minElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetSect15minElapsedTime_Object = MibTableColumn
currentSonetSect15minElapsedTime = _CurrentSonetSect15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 17, 1, 5),
    _CurrentSonetSect15minElapsedTime_Type()
)
currentSonetSect15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect15minElapsedTime.setStatus("current")
_CurrentSonetSect1dayTable_Object = MibTable
currentSonetSect1dayTable = _CurrentSonetSect1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 18)
)
if mibBuilder.loadTexts:
    currentSonetSect1dayTable.setStatus("current")
_CurrentSonetSect1dayEntry_Object = MibTableRow
currentSonetSect1dayEntry = _CurrentSonetSect1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 18, 1)
)
currentSonetSect1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetSect1dayEntry.setStatus("current")
_CurrentSonetSect1dayES_Type = Unsigned32
_CurrentSonetSect1dayES_Object = MibTableColumn
currentSonetSect1dayES = _CurrentSonetSect1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 18, 1, 1),
    _CurrentSonetSect1dayES_Type()
)
currentSonetSect1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect1dayES.setStatus("current")
_CurrentSonetSect1daySES_Type = Unsigned32
_CurrentSonetSect1daySES_Object = MibTableColumn
currentSonetSect1daySES = _CurrentSonetSect1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 18, 1, 2),
    _CurrentSonetSect1daySES_Type()
)
currentSonetSect1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect1daySES.setStatus("current")
_CurrentSonetSect1daySEFS_Type = Unsigned32
_CurrentSonetSect1daySEFS_Object = MibTableColumn
currentSonetSect1daySEFS = _CurrentSonetSect1daySEFS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 18, 1, 3),
    _CurrentSonetSect1daySEFS_Type()
)
currentSonetSect1daySEFS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect1daySEFS.setStatus("current")
_CurrentSonetSect1dayCV_Type = Counter64String
_CurrentSonetSect1dayCV_Object = MibTableColumn
currentSonetSect1dayCV = _CurrentSonetSect1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 18, 1, 4),
    _CurrentSonetSect1dayCV_Type()
)
currentSonetSect1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect1dayCV.setStatus("current")


class _CurrentSonetSect1dayElapsedTime_Type(Integer32):
    """Custom type currentSonetSect1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetSect1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetSect1dayElapsedTime_Object = MibTableColumn
currentSonetSect1dayElapsedTime = _CurrentSonetSect1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 18, 1, 5),
    _CurrentSonetSect1dayElapsedTime_Type()
)
currentSonetSect1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetSect1dayElapsedTime.setStatus("current")
_IntervalSonetSect15minTable_Object = MibTable
intervalSonetSect15minTable = _IntervalSonetSect15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19)
)
if mibBuilder.loadTexts:
    intervalSonetSect15minTable.setStatus("current")
_IntervalSonetSect15minEntry_Object = MibTableRow
intervalSonetSect15minEntry = _IntervalSonetSect15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1)
)
intervalSonetSect15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetSect15minNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetSect15minEntry.setStatus("current")


class _IntervalSonetSect15minNumber_Type(Integer32):
    """Custom type intervalSonetSect15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalSonetSect15minNumber_Type.__name__ = "Integer32"
_IntervalSonetSect15minNumber_Object = MibTableColumn
intervalSonetSect15minNumber = _IntervalSonetSect15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1, 1),
    _IntervalSonetSect15minNumber_Type()
)
intervalSonetSect15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetSect15minNumber.setStatus("current")
_IntervalSonetSect15minES_Type = Unsigned32
_IntervalSonetSect15minES_Object = MibTableColumn
intervalSonetSect15minES = _IntervalSonetSect15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1, 2),
    _IntervalSonetSect15minES_Type()
)
intervalSonetSect15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect15minES.setStatus("current")
_IntervalSonetSect15minSES_Type = Unsigned32
_IntervalSonetSect15minSES_Object = MibTableColumn
intervalSonetSect15minSES = _IntervalSonetSect15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1, 3),
    _IntervalSonetSect15minSES_Type()
)
intervalSonetSect15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect15minSES.setStatus("current")
_IntervalSonetSect15minSEFS_Type = Unsigned32
_IntervalSonetSect15minSEFS_Object = MibTableColumn
intervalSonetSect15minSEFS = _IntervalSonetSect15minSEFS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1, 4),
    _IntervalSonetSect15minSEFS_Type()
)
intervalSonetSect15minSEFS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect15minSEFS.setStatus("current")
_IntervalSonetSect15minCV_Type = Counter64String
_IntervalSonetSect15minCV_Object = MibTableColumn
intervalSonetSect15minCV = _IntervalSonetSect15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1, 5),
    _IntervalSonetSect15minCV_Type()
)
intervalSonetSect15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect15minCV.setStatus("current")
_IntervalSonetSect15minValidFlag_Type = TruthValue
_IntervalSonetSect15minValidFlag_Object = MibTableColumn
intervalSonetSect15minValidFlag = _IntervalSonetSect15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1, 6),
    _IntervalSonetSect15minValidFlag_Type()
)
intervalSonetSect15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect15minValidFlag.setStatus("current")
_IntervalSonetSect15minTimeStamp_Type = DateAndTime
_IntervalSonetSect15minTimeStamp_Object = MibTableColumn
intervalSonetSect15minTimeStamp = _IntervalSonetSect15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 19, 1, 7),
    _IntervalSonetSect15minTimeStamp_Type()
)
intervalSonetSect15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect15minTimeStamp.setStatus("current")
_IntervalSonetSect1dayTable_Object = MibTable
intervalSonetSect1dayTable = _IntervalSonetSect1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20)
)
if mibBuilder.loadTexts:
    intervalSonetSect1dayTable.setStatus("current")
_IntervalSonetSect1dayEntry_Object = MibTableRow
intervalSonetSect1dayEntry = _IntervalSonetSect1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1)
)
intervalSonetSect1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetSect1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetSect1dayEntry.setStatus("current")


class _IntervalSonetSect1dayNumber_Type(Integer32):
    """Custom type intervalSonetSect1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalSonetSect1dayNumber_Type.__name__ = "Integer32"
_IntervalSonetSect1dayNumber_Object = MibTableColumn
intervalSonetSect1dayNumber = _IntervalSonetSect1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1, 1),
    _IntervalSonetSect1dayNumber_Type()
)
intervalSonetSect1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetSect1dayNumber.setStatus("current")
_IntervalSonetSect1dayES_Type = Unsigned32
_IntervalSonetSect1dayES_Object = MibTableColumn
intervalSonetSect1dayES = _IntervalSonetSect1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1, 2),
    _IntervalSonetSect1dayES_Type()
)
intervalSonetSect1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect1dayES.setStatus("current")
_IntervalSonetSect1daySES_Type = Unsigned32
_IntervalSonetSect1daySES_Object = MibTableColumn
intervalSonetSect1daySES = _IntervalSonetSect1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1, 3),
    _IntervalSonetSect1daySES_Type()
)
intervalSonetSect1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect1daySES.setStatus("current")
_IntervalSonetSect1daySEFS_Type = Unsigned32
_IntervalSonetSect1daySEFS_Object = MibTableColumn
intervalSonetSect1daySEFS = _IntervalSonetSect1daySEFS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1, 4),
    _IntervalSonetSect1daySEFS_Type()
)
intervalSonetSect1daySEFS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect1daySEFS.setStatus("current")
_IntervalSonetSect1dayCV_Type = Counter64String
_IntervalSonetSect1dayCV_Object = MibTableColumn
intervalSonetSect1dayCV = _IntervalSonetSect1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1, 5),
    _IntervalSonetSect1dayCV_Type()
)
intervalSonetSect1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect1dayCV.setStatus("current")
_IntervalSonetSect1dayValidFlag_Type = TruthValue
_IntervalSonetSect1dayValidFlag_Object = MibTableColumn
intervalSonetSect1dayValidFlag = _IntervalSonetSect1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1, 6),
    _IntervalSonetSect1dayValidFlag_Type()
)
intervalSonetSect1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect1dayValidFlag.setStatus("current")
_IntervalSonetSect1dayTimeStamp_Type = DateAndTime
_IntervalSonetSect1dayTimeStamp_Object = MibTableColumn
intervalSonetSect1dayTimeStamp = _IntervalSonetSect1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 20, 1, 7),
    _IntervalSonetSect1dayTimeStamp_Type()
)
intervalSonetSect1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetSect1dayTimeStamp.setStatus("current")
_CurrentSonetLine15minTable_Object = MibTable
currentSonetLine15minTable = _CurrentSonetLine15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 21)
)
if mibBuilder.loadTexts:
    currentSonetLine15minTable.setStatus("current")
_CurrentSonetLine15minEntry_Object = MibTableRow
currentSonetLine15minEntry = _CurrentSonetLine15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 21, 1)
)
currentSonetLine15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetLine15minEntry.setStatus("current")
_CurrentSonetLine15minES_Type = Unsigned32
_CurrentSonetLine15minES_Object = MibTableColumn
currentSonetLine15minES = _CurrentSonetLine15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 21, 1, 1),
    _CurrentSonetLine15minES_Type()
)
currentSonetLine15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine15minES.setStatus("current")
_CurrentSonetLine15minSES_Type = Unsigned32
_CurrentSonetLine15minSES_Object = MibTableColumn
currentSonetLine15minSES = _CurrentSonetLine15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 21, 1, 2),
    _CurrentSonetLine15minSES_Type()
)
currentSonetLine15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine15minSES.setStatus("current")
_CurrentSonetLine15minUAS_Type = Unsigned32
_CurrentSonetLine15minUAS_Object = MibTableColumn
currentSonetLine15minUAS = _CurrentSonetLine15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 21, 1, 3),
    _CurrentSonetLine15minUAS_Type()
)
currentSonetLine15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine15minUAS.setStatus("current")
_CurrentSonetLine15minCV_Type = Counter64String
_CurrentSonetLine15minCV_Object = MibTableColumn
currentSonetLine15minCV = _CurrentSonetLine15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 21, 1, 4),
    _CurrentSonetLine15minCV_Type()
)
currentSonetLine15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine15minCV.setStatus("current")


class _CurrentSonetLine15minElapsedTime_Type(Integer32):
    """Custom type currentSonetLine15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetLine15minElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetLine15minElapsedTime_Object = MibTableColumn
currentSonetLine15minElapsedTime = _CurrentSonetLine15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 21, 1, 5),
    _CurrentSonetLine15minElapsedTime_Type()
)
currentSonetLine15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine15minElapsedTime.setStatus("current")
_CurrentSonetLine1dayTable_Object = MibTable
currentSonetLine1dayTable = _CurrentSonetLine1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 22)
)
if mibBuilder.loadTexts:
    currentSonetLine1dayTable.setStatus("current")
_CurrentSonetLine1dayEntry_Object = MibTableRow
currentSonetLine1dayEntry = _CurrentSonetLine1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 22, 1)
)
currentSonetLine1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetLine1dayEntry.setStatus("current")
_CurrentSonetLine1dayES_Type = Unsigned32
_CurrentSonetLine1dayES_Object = MibTableColumn
currentSonetLine1dayES = _CurrentSonetLine1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 22, 1, 1),
    _CurrentSonetLine1dayES_Type()
)
currentSonetLine1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine1dayES.setStatus("current")
_CurrentSonetLine1daySES_Type = Unsigned32
_CurrentSonetLine1daySES_Object = MibTableColumn
currentSonetLine1daySES = _CurrentSonetLine1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 22, 1, 2),
    _CurrentSonetLine1daySES_Type()
)
currentSonetLine1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine1daySES.setStatus("current")
_CurrentSonetLine1dayUAS_Type = Unsigned32
_CurrentSonetLine1dayUAS_Object = MibTableColumn
currentSonetLine1dayUAS = _CurrentSonetLine1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 22, 1, 3),
    _CurrentSonetLine1dayUAS_Type()
)
currentSonetLine1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine1dayUAS.setStatus("current")
_CurrentSonetLine1dayCV_Type = Counter64String
_CurrentSonetLine1dayCV_Object = MibTableColumn
currentSonetLine1dayCV = _CurrentSonetLine1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 22, 1, 4),
    _CurrentSonetLine1dayCV_Type()
)
currentSonetLine1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine1dayCV.setStatus("current")


class _CurrentSonetLine1dayElapsedTime_Type(Integer32):
    """Custom type currentSonetLine1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetLine1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetLine1dayElapsedTime_Object = MibTableColumn
currentSonetLine1dayElapsedTime = _CurrentSonetLine1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 22, 1, 5),
    _CurrentSonetLine1dayElapsedTime_Type()
)
currentSonetLine1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLine1dayElapsedTime.setStatus("current")
_IntervalSonetLine15minTable_Object = MibTable
intervalSonetLine15minTable = _IntervalSonetLine15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23)
)
if mibBuilder.loadTexts:
    intervalSonetLine15minTable.setStatus("current")
_IntervalSonetLine15minEntry_Object = MibTableRow
intervalSonetLine15minEntry = _IntervalSonetLine15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1)
)
intervalSonetLine15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetLine15minNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetLine15minEntry.setStatus("current")


class _IntervalSonetLine15minNumber_Type(Integer32):
    """Custom type intervalSonetLine15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalSonetLine15minNumber_Type.__name__ = "Integer32"
_IntervalSonetLine15minNumber_Object = MibTableColumn
intervalSonetLine15minNumber = _IntervalSonetLine15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1, 1),
    _IntervalSonetLine15minNumber_Type()
)
intervalSonetLine15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetLine15minNumber.setStatus("current")
_IntervalSonetLine15minES_Type = Unsigned32
_IntervalSonetLine15minES_Object = MibTableColumn
intervalSonetLine15minES = _IntervalSonetLine15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1, 2),
    _IntervalSonetLine15minES_Type()
)
intervalSonetLine15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine15minES.setStatus("current")
_IntervalSonetLine15minSES_Type = Unsigned32
_IntervalSonetLine15minSES_Object = MibTableColumn
intervalSonetLine15minSES = _IntervalSonetLine15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1, 3),
    _IntervalSonetLine15minSES_Type()
)
intervalSonetLine15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine15minSES.setStatus("current")
_IntervalSonetLine15minUAS_Type = Unsigned32
_IntervalSonetLine15minUAS_Object = MibTableColumn
intervalSonetLine15minUAS = _IntervalSonetLine15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1, 4),
    _IntervalSonetLine15minUAS_Type()
)
intervalSonetLine15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine15minUAS.setStatus("current")
_IntervalSonetLine15minCV_Type = Counter64String
_IntervalSonetLine15minCV_Object = MibTableColumn
intervalSonetLine15minCV = _IntervalSonetLine15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1, 5),
    _IntervalSonetLine15minCV_Type()
)
intervalSonetLine15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine15minCV.setStatus("current")
_IntervalSonetLine15minValidFlag_Type = TruthValue
_IntervalSonetLine15minValidFlag_Object = MibTableColumn
intervalSonetLine15minValidFlag = _IntervalSonetLine15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1, 6),
    _IntervalSonetLine15minValidFlag_Type()
)
intervalSonetLine15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine15minValidFlag.setStatus("current")
_IntervalSonetLine15minTimeStamp_Type = DateAndTime
_IntervalSonetLine15minTimeStamp_Object = MibTableColumn
intervalSonetLine15minTimeStamp = _IntervalSonetLine15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 23, 1, 7),
    _IntervalSonetLine15minTimeStamp_Type()
)
intervalSonetLine15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine15minTimeStamp.setStatus("current")
_IntervalSonetLine1dayTable_Object = MibTable
intervalSonetLine1dayTable = _IntervalSonetLine1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24)
)
if mibBuilder.loadTexts:
    intervalSonetLine1dayTable.setStatus("current")
_IntervalSonetLine1dayEntry_Object = MibTableRow
intervalSonetLine1dayEntry = _IntervalSonetLine1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1)
)
intervalSonetLine1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetLine1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetLine1dayEntry.setStatus("current")


class _IntervalSonetLine1dayNumber_Type(Integer32):
    """Custom type intervalSonetLine1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalSonetLine1dayNumber_Type.__name__ = "Integer32"
_IntervalSonetLine1dayNumber_Object = MibTableColumn
intervalSonetLine1dayNumber = _IntervalSonetLine1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1, 1),
    _IntervalSonetLine1dayNumber_Type()
)
intervalSonetLine1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetLine1dayNumber.setStatus("current")
_IntervalSonetLine1dayES_Type = Unsigned32
_IntervalSonetLine1dayES_Object = MibTableColumn
intervalSonetLine1dayES = _IntervalSonetLine1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1, 2),
    _IntervalSonetLine1dayES_Type()
)
intervalSonetLine1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine1dayES.setStatus("current")
_IntervalSonetLine1daySES_Type = Unsigned32
_IntervalSonetLine1daySES_Object = MibTableColumn
intervalSonetLine1daySES = _IntervalSonetLine1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1, 3),
    _IntervalSonetLine1daySES_Type()
)
intervalSonetLine1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine1daySES.setStatus("current")
_IntervalSonetLine1dayUAS_Type = Unsigned32
_IntervalSonetLine1dayUAS_Object = MibTableColumn
intervalSonetLine1dayUAS = _IntervalSonetLine1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1, 4),
    _IntervalSonetLine1dayUAS_Type()
)
intervalSonetLine1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine1dayUAS.setStatus("current")
_IntervalSonetLine1dayCV_Type = Counter64String
_IntervalSonetLine1dayCV_Object = MibTableColumn
intervalSonetLine1dayCV = _IntervalSonetLine1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1, 5),
    _IntervalSonetLine1dayCV_Type()
)
intervalSonetLine1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine1dayCV.setStatus("current")
_IntervalSonetLine1dayValidFlag_Type = TruthValue
_IntervalSonetLine1dayValidFlag_Object = MibTableColumn
intervalSonetLine1dayValidFlag = _IntervalSonetLine1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1, 6),
    _IntervalSonetLine1dayValidFlag_Type()
)
intervalSonetLine1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine1dayValidFlag.setStatus("current")
_IntervalSonetLine1dayTimeStamp_Type = DateAndTime
_IntervalSonetLine1dayTimeStamp_Object = MibTableColumn
intervalSonetLine1dayTimeStamp = _IntervalSonetLine1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 24, 1, 7),
    _IntervalSonetLine1dayTimeStamp_Type()
)
intervalSonetLine1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLine1dayTimeStamp.setStatus("current")
_CurrentSonetHoPath15minTable_Object = MibTable
currentSonetHoPath15minTable = _CurrentSonetHoPath15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 25)
)
if mibBuilder.loadTexts:
    currentSonetHoPath15minTable.setStatus("current")
_CurrentSonetHoPath15minEntry_Object = MibTableRow
currentSonetHoPath15minEntry = _CurrentSonetHoPath15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 25, 1)
)
currentSonetHoPath15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetHoPath15minEntry.setStatus("current")
_CurrentSonetHoPath15minES_Type = Unsigned32
_CurrentSonetHoPath15minES_Object = MibTableColumn
currentSonetHoPath15minES = _CurrentSonetHoPath15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 25, 1, 1),
    _CurrentSonetHoPath15minES_Type()
)
currentSonetHoPath15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath15minES.setStatus("current")
_CurrentSonetHoPath15minSES_Type = Unsigned32
_CurrentSonetHoPath15minSES_Object = MibTableColumn
currentSonetHoPath15minSES = _CurrentSonetHoPath15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 25, 1, 2),
    _CurrentSonetHoPath15minSES_Type()
)
currentSonetHoPath15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath15minSES.setStatus("current")
_CurrentSonetHoPath15minUAS_Type = Unsigned32
_CurrentSonetHoPath15minUAS_Object = MibTableColumn
currentSonetHoPath15minUAS = _CurrentSonetHoPath15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 25, 1, 3),
    _CurrentSonetHoPath15minUAS_Type()
)
currentSonetHoPath15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath15minUAS.setStatus("current")
_CurrentSonetHoPath15minCV_Type = Counter64String
_CurrentSonetHoPath15minCV_Object = MibTableColumn
currentSonetHoPath15minCV = _CurrentSonetHoPath15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 25, 1, 4),
    _CurrentSonetHoPath15minCV_Type()
)
currentSonetHoPath15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath15minCV.setStatus("current")


class _CurrentSonetHoPath15minElapsedTime_Type(Integer32):
    """Custom type currentSonetHoPath15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetHoPath15minElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetHoPath15minElapsedTime_Object = MibTableColumn
currentSonetHoPath15minElapsedTime = _CurrentSonetHoPath15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 25, 1, 5),
    _CurrentSonetHoPath15minElapsedTime_Type()
)
currentSonetHoPath15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath15minElapsedTime.setStatus("current")
_CurrentSonetHoPath1dayTable_Object = MibTable
currentSonetHoPath1dayTable = _CurrentSonetHoPath1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 26)
)
if mibBuilder.loadTexts:
    currentSonetHoPath1dayTable.setStatus("current")
_CurrentSonetHoPath1dayEntry_Object = MibTableRow
currentSonetHoPath1dayEntry = _CurrentSonetHoPath1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 26, 1)
)
currentSonetHoPath1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetHoPath1dayEntry.setStatus("current")
_CurrentSonetHoPath1dayES_Type = Unsigned32
_CurrentSonetHoPath1dayES_Object = MibTableColumn
currentSonetHoPath1dayES = _CurrentSonetHoPath1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 26, 1, 1),
    _CurrentSonetHoPath1dayES_Type()
)
currentSonetHoPath1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath1dayES.setStatus("current")
_CurrentSonetHoPath1daySES_Type = Unsigned32
_CurrentSonetHoPath1daySES_Object = MibTableColumn
currentSonetHoPath1daySES = _CurrentSonetHoPath1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 26, 1, 2),
    _CurrentSonetHoPath1daySES_Type()
)
currentSonetHoPath1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath1daySES.setStatus("current")
_CurrentSonetHoPath1dayUAS_Type = Unsigned32
_CurrentSonetHoPath1dayUAS_Object = MibTableColumn
currentSonetHoPath1dayUAS = _CurrentSonetHoPath1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 26, 1, 3),
    _CurrentSonetHoPath1dayUAS_Type()
)
currentSonetHoPath1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath1dayUAS.setStatus("current")
_CurrentSonetHoPath1dayCV_Type = Counter64String
_CurrentSonetHoPath1dayCV_Object = MibTableColumn
currentSonetHoPath1dayCV = _CurrentSonetHoPath1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 26, 1, 4),
    _CurrentSonetHoPath1dayCV_Type()
)
currentSonetHoPath1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath1dayCV.setStatus("current")


class _CurrentSonetHoPath1dayElapsedTime_Type(Integer32):
    """Custom type currentSonetHoPath1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetHoPath1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetHoPath1dayElapsedTime_Object = MibTableColumn
currentSonetHoPath1dayElapsedTime = _CurrentSonetHoPath1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 26, 1, 5),
    _CurrentSonetHoPath1dayElapsedTime_Type()
)
currentSonetHoPath1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetHoPath1dayElapsedTime.setStatus("current")
_IntervalSonetHoPath15minTable_Object = MibTable
intervalSonetHoPath15minTable = _IntervalSonetHoPath15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27)
)
if mibBuilder.loadTexts:
    intervalSonetHoPath15minTable.setStatus("current")
_IntervalSonetHoPath15minEntry_Object = MibTableRow
intervalSonetHoPath15minEntry = _IntervalSonetHoPath15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1)
)
intervalSonetHoPath15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetHoPath15minNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetHoPath15minEntry.setStatus("current")


class _IntervalSonetHoPath15minNumber_Type(Integer32):
    """Custom type intervalSonetHoPath15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalSonetHoPath15minNumber_Type.__name__ = "Integer32"
_IntervalSonetHoPath15minNumber_Object = MibTableColumn
intervalSonetHoPath15minNumber = _IntervalSonetHoPath15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1, 1),
    _IntervalSonetHoPath15minNumber_Type()
)
intervalSonetHoPath15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetHoPath15minNumber.setStatus("current")
_IntervalSonetHoPath15minES_Type = Unsigned32
_IntervalSonetHoPath15minES_Object = MibTableColumn
intervalSonetHoPath15minES = _IntervalSonetHoPath15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1, 2),
    _IntervalSonetHoPath15minES_Type()
)
intervalSonetHoPath15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath15minES.setStatus("current")
_IntervalSonetHoPath15minSES_Type = Unsigned32
_IntervalSonetHoPath15minSES_Object = MibTableColumn
intervalSonetHoPath15minSES = _IntervalSonetHoPath15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1, 3),
    _IntervalSonetHoPath15minSES_Type()
)
intervalSonetHoPath15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath15minSES.setStatus("current")
_IntervalSonetHoPath15minUAS_Type = Unsigned32
_IntervalSonetHoPath15minUAS_Object = MibTableColumn
intervalSonetHoPath15minUAS = _IntervalSonetHoPath15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1, 4),
    _IntervalSonetHoPath15minUAS_Type()
)
intervalSonetHoPath15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath15minUAS.setStatus("current")
_IntervalSonetHoPath15minCV_Type = Counter64String
_IntervalSonetHoPath15minCV_Object = MibTableColumn
intervalSonetHoPath15minCV = _IntervalSonetHoPath15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1, 5),
    _IntervalSonetHoPath15minCV_Type()
)
intervalSonetHoPath15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath15minCV.setStatus("current")
_IntervalSonetHoPath15minValidFlag_Type = TruthValue
_IntervalSonetHoPath15minValidFlag_Object = MibTableColumn
intervalSonetHoPath15minValidFlag = _IntervalSonetHoPath15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1, 6),
    _IntervalSonetHoPath15minValidFlag_Type()
)
intervalSonetHoPath15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath15minValidFlag.setStatus("current")
_IntervalSonetHoPath15minTimeStamp_Type = DateAndTime
_IntervalSonetHoPath15minTimeStamp_Object = MibTableColumn
intervalSonetHoPath15minTimeStamp = _IntervalSonetHoPath15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 27, 1, 7),
    _IntervalSonetHoPath15minTimeStamp_Type()
)
intervalSonetHoPath15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath15minTimeStamp.setStatus("current")
_IntervalSonetHoPath1dayTable_Object = MibTable
intervalSonetHoPath1dayTable = _IntervalSonetHoPath1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28)
)
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayTable.setStatus("current")
_IntervalSonetHoPath1dayEntry_Object = MibTableRow
intervalSonetHoPath1dayEntry = _IntervalSonetHoPath1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1)
)
intervalSonetHoPath1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetHoPath1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayEntry.setStatus("current")


class _IntervalSonetHoPath1dayNumber_Type(Integer32):
    """Custom type intervalSonetHoPath1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalSonetHoPath1dayNumber_Type.__name__ = "Integer32"
_IntervalSonetHoPath1dayNumber_Object = MibTableColumn
intervalSonetHoPath1dayNumber = _IntervalSonetHoPath1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1, 1),
    _IntervalSonetHoPath1dayNumber_Type()
)
intervalSonetHoPath1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayNumber.setStatus("current")
_IntervalSonetHoPath1dayES_Type = Unsigned32
_IntervalSonetHoPath1dayES_Object = MibTableColumn
intervalSonetHoPath1dayES = _IntervalSonetHoPath1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1, 2),
    _IntervalSonetHoPath1dayES_Type()
)
intervalSonetHoPath1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayES.setStatus("current")
_IntervalSonetHoPath1daySES_Type = Unsigned32
_IntervalSonetHoPath1daySES_Object = MibTableColumn
intervalSonetHoPath1daySES = _IntervalSonetHoPath1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1, 3),
    _IntervalSonetHoPath1daySES_Type()
)
intervalSonetHoPath1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath1daySES.setStatus("current")
_IntervalSonetHoPath1dayUAS_Type = Unsigned32
_IntervalSonetHoPath1dayUAS_Object = MibTableColumn
intervalSonetHoPath1dayUAS = _IntervalSonetHoPath1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1, 4),
    _IntervalSonetHoPath1dayUAS_Type()
)
intervalSonetHoPath1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayUAS.setStatus("current")
_IntervalSonetHoPath1dayCV_Type = Counter64String
_IntervalSonetHoPath1dayCV_Object = MibTableColumn
intervalSonetHoPath1dayCV = _IntervalSonetHoPath1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1, 5),
    _IntervalSonetHoPath1dayCV_Type()
)
intervalSonetHoPath1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayCV.setStatus("current")
_IntervalSonetHoPath1dayValidFlag_Type = TruthValue
_IntervalSonetHoPath1dayValidFlag_Object = MibTableColumn
intervalSonetHoPath1dayValidFlag = _IntervalSonetHoPath1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1, 6),
    _IntervalSonetHoPath1dayValidFlag_Type()
)
intervalSonetHoPath1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayValidFlag.setStatus("current")
_IntervalSonetHoPath1dayTimeStamp_Type = DateAndTime
_IntervalSonetHoPath1dayTimeStamp_Object = MibTableColumn
intervalSonetHoPath1dayTimeStamp = _IntervalSonetHoPath1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 28, 1, 7),
    _IntervalSonetHoPath1dayTimeStamp_Type()
)
intervalSonetHoPath1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetHoPath1dayTimeStamp.setStatus("current")
_CurrentSonetLoPath15minTable_Object = MibTable
currentSonetLoPath15minTable = _CurrentSonetLoPath15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 29)
)
if mibBuilder.loadTexts:
    currentSonetLoPath15minTable.setStatus("current")
_CurrentSonetLoPath15minEntry_Object = MibTableRow
currentSonetLoPath15minEntry = _CurrentSonetLoPath15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 29, 1)
)
currentSonetLoPath15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetLoPath15minEntry.setStatus("current")
_CurrentSonetLoPath15minES_Type = Unsigned32
_CurrentSonetLoPath15minES_Object = MibTableColumn
currentSonetLoPath15minES = _CurrentSonetLoPath15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 29, 1, 1),
    _CurrentSonetLoPath15minES_Type()
)
currentSonetLoPath15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath15minES.setStatus("current")
_CurrentSonetLoPath15minSES_Type = Unsigned32
_CurrentSonetLoPath15minSES_Object = MibTableColumn
currentSonetLoPath15minSES = _CurrentSonetLoPath15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 29, 1, 2),
    _CurrentSonetLoPath15minSES_Type()
)
currentSonetLoPath15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath15minSES.setStatus("current")
_CurrentSonetLoPath15minUAS_Type = Unsigned32
_CurrentSonetLoPath15minUAS_Object = MibTableColumn
currentSonetLoPath15minUAS = _CurrentSonetLoPath15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 29, 1, 3),
    _CurrentSonetLoPath15minUAS_Type()
)
currentSonetLoPath15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath15minUAS.setStatus("current")
_CurrentSonetLoPath15minCV_Type = Counter64String
_CurrentSonetLoPath15minCV_Object = MibTableColumn
currentSonetLoPath15minCV = _CurrentSonetLoPath15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 29, 1, 4),
    _CurrentSonetLoPath15minCV_Type()
)
currentSonetLoPath15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath15minCV.setStatus("current")


class _CurrentSonetLoPath15minElapsedTime_Type(Integer32):
    """Custom type currentSonetLoPath15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetLoPath15minElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetLoPath15minElapsedTime_Object = MibTableColumn
currentSonetLoPath15minElapsedTime = _CurrentSonetLoPath15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 29, 1, 5),
    _CurrentSonetLoPath15minElapsedTime_Type()
)
currentSonetLoPath15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath15minElapsedTime.setStatus("current")
_CurrentSonetLoPath1dayTable_Object = MibTable
currentSonetLoPath1dayTable = _CurrentSonetLoPath1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 30)
)
if mibBuilder.loadTexts:
    currentSonetLoPath1dayTable.setStatus("current")
_CurrentSonetLoPath1dayEntry_Object = MibTableRow
currentSonetLoPath1dayEntry = _CurrentSonetLoPath1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 30, 1)
)
currentSonetLoPath1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSonetLoPath1dayEntry.setStatus("current")
_CurrentSonetLoPath1dayES_Type = Unsigned32
_CurrentSonetLoPath1dayES_Object = MibTableColumn
currentSonetLoPath1dayES = _CurrentSonetLoPath1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 30, 1, 1),
    _CurrentSonetLoPath1dayES_Type()
)
currentSonetLoPath1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath1dayES.setStatus("current")
_CurrentSonetLoPath1daySES_Type = Unsigned32
_CurrentSonetLoPath1daySES_Object = MibTableColumn
currentSonetLoPath1daySES = _CurrentSonetLoPath1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 30, 1, 2),
    _CurrentSonetLoPath1daySES_Type()
)
currentSonetLoPath1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath1daySES.setStatus("current")
_CurrentSonetLoPath1dayUAS_Type = Unsigned32
_CurrentSonetLoPath1dayUAS_Object = MibTableColumn
currentSonetLoPath1dayUAS = _CurrentSonetLoPath1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 30, 1, 3),
    _CurrentSonetLoPath1dayUAS_Type()
)
currentSonetLoPath1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath1dayUAS.setStatus("current")
_CurrentSonetLoPath1dayCV_Type = Counter64String
_CurrentSonetLoPath1dayCV_Object = MibTableColumn
currentSonetLoPath1dayCV = _CurrentSonetLoPath1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 30, 1, 4),
    _CurrentSonetLoPath1dayCV_Type()
)
currentSonetLoPath1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath1dayCV.setStatus("current")


class _CurrentSonetLoPath1dayElapsedTime_Type(Integer32):
    """Custom type currentSonetLoPath1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSonetLoPath1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentSonetLoPath1dayElapsedTime_Object = MibTableColumn
currentSonetLoPath1dayElapsedTime = _CurrentSonetLoPath1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 30, 1, 5),
    _CurrentSonetLoPath1dayElapsedTime_Type()
)
currentSonetLoPath1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSonetLoPath1dayElapsedTime.setStatus("current")
_IntervalSonetLoPath15minTable_Object = MibTable
intervalSonetLoPath15minTable = _IntervalSonetLoPath15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31)
)
if mibBuilder.loadTexts:
    intervalSonetLoPath15minTable.setStatus("current")
_IntervalSonetLoPath15minEntry_Object = MibTableRow
intervalSonetLoPath15minEntry = _IntervalSonetLoPath15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1)
)
intervalSonetLoPath15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetLoPath15minNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetLoPath15minEntry.setStatus("current")


class _IntervalSonetLoPath15minNumber_Type(Integer32):
    """Custom type intervalSonetLoPath15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalSonetLoPath15minNumber_Type.__name__ = "Integer32"
_IntervalSonetLoPath15minNumber_Object = MibTableColumn
intervalSonetLoPath15minNumber = _IntervalSonetLoPath15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1, 1),
    _IntervalSonetLoPath15minNumber_Type()
)
intervalSonetLoPath15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetLoPath15minNumber.setStatus("current")
_IntervalSonetLoPath15minES_Type = Unsigned32
_IntervalSonetLoPath15minES_Object = MibTableColumn
intervalSonetLoPath15minES = _IntervalSonetLoPath15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1, 2),
    _IntervalSonetLoPath15minES_Type()
)
intervalSonetLoPath15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath15minES.setStatus("current")
_IntervalSonetLoPath15minSES_Type = Unsigned32
_IntervalSonetLoPath15minSES_Object = MibTableColumn
intervalSonetLoPath15minSES = _IntervalSonetLoPath15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1, 3),
    _IntervalSonetLoPath15minSES_Type()
)
intervalSonetLoPath15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath15minSES.setStatus("current")
_IntervalSonetLoPath15minUAS_Type = Unsigned32
_IntervalSonetLoPath15minUAS_Object = MibTableColumn
intervalSonetLoPath15minUAS = _IntervalSonetLoPath15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1, 4),
    _IntervalSonetLoPath15minUAS_Type()
)
intervalSonetLoPath15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath15minUAS.setStatus("current")
_IntervalSonetLoPath15minCV_Type = Counter64String
_IntervalSonetLoPath15minCV_Object = MibTableColumn
intervalSonetLoPath15minCV = _IntervalSonetLoPath15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1, 5),
    _IntervalSonetLoPath15minCV_Type()
)
intervalSonetLoPath15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath15minCV.setStatus("current")
_IntervalSonetLoPath15minValidFlag_Type = TruthValue
_IntervalSonetLoPath15minValidFlag_Object = MibTableColumn
intervalSonetLoPath15minValidFlag = _IntervalSonetLoPath15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1, 6),
    _IntervalSonetLoPath15minValidFlag_Type()
)
intervalSonetLoPath15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath15minValidFlag.setStatus("current")
_IntervalSonetLoPath15minTimeStamp_Type = DateAndTime
_IntervalSonetLoPath15minTimeStamp_Object = MibTableColumn
intervalSonetLoPath15minTimeStamp = _IntervalSonetLoPath15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 31, 1, 7),
    _IntervalSonetLoPath15minTimeStamp_Type()
)
intervalSonetLoPath15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath15minTimeStamp.setStatus("current")
_IntervalSonetLoPath1dayTable_Object = MibTable
intervalSonetLoPath1dayTable = _IntervalSonetLoPath1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32)
)
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayTable.setStatus("current")
_IntervalSonetLoPath1dayEntry_Object = MibTableRow
intervalSonetLoPath1dayEntry = _IntervalSonetLoPath1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1)
)
intervalSonetLoPath1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSonetLoPath1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayEntry.setStatus("current")


class _IntervalSonetLoPath1dayNumber_Type(Integer32):
    """Custom type intervalSonetLoPath1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalSonetLoPath1dayNumber_Type.__name__ = "Integer32"
_IntervalSonetLoPath1dayNumber_Object = MibTableColumn
intervalSonetLoPath1dayNumber = _IntervalSonetLoPath1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1, 1),
    _IntervalSonetLoPath1dayNumber_Type()
)
intervalSonetLoPath1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayNumber.setStatus("current")
_IntervalSonetLoPath1dayES_Type = Unsigned32
_IntervalSonetLoPath1dayES_Object = MibTableColumn
intervalSonetLoPath1dayES = _IntervalSonetLoPath1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1, 2),
    _IntervalSonetLoPath1dayES_Type()
)
intervalSonetLoPath1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayES.setStatus("current")
_IntervalSonetLoPath1daySES_Type = Unsigned32
_IntervalSonetLoPath1daySES_Object = MibTableColumn
intervalSonetLoPath1daySES = _IntervalSonetLoPath1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1, 3),
    _IntervalSonetLoPath1daySES_Type()
)
intervalSonetLoPath1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath1daySES.setStatus("current")
_IntervalSonetLoPath1dayUAS_Type = Unsigned32
_IntervalSonetLoPath1dayUAS_Object = MibTableColumn
intervalSonetLoPath1dayUAS = _IntervalSonetLoPath1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1, 4),
    _IntervalSonetLoPath1dayUAS_Type()
)
intervalSonetLoPath1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayUAS.setStatus("current")
_IntervalSonetLoPath1dayCV_Type = Counter64String
_IntervalSonetLoPath1dayCV_Object = MibTableColumn
intervalSonetLoPath1dayCV = _IntervalSonetLoPath1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1, 5),
    _IntervalSonetLoPath1dayCV_Type()
)
intervalSonetLoPath1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayCV.setStatus("current")
_IntervalSonetLoPath1dayValidFlag_Type = TruthValue
_IntervalSonetLoPath1dayValidFlag_Object = MibTableColumn
intervalSonetLoPath1dayValidFlag = _IntervalSonetLoPath1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1, 6),
    _IntervalSonetLoPath1dayValidFlag_Type()
)
intervalSonetLoPath1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayValidFlag.setStatus("current")
_IntervalSonetLoPath1dayTimeStamp_Type = DateAndTime
_IntervalSonetLoPath1dayTimeStamp_Object = MibTableColumn
intervalSonetLoPath1dayTimeStamp = _IntervalSonetLoPath1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 32, 1, 7),
    _IntervalSonetLoPath1dayTimeStamp_Type()
)
intervalSonetLoPath1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSonetLoPath1dayTimeStamp.setStatus("current")
_IntervalPhysPerfOpticalInputPwr15minTable_Object = MibTable
intervalPhysPerfOpticalInputPwr15minTable = _IntervalPhysPerfOpticalInputPwr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minTable.setStatus("current")
_IntervalPhysPerfOpticalInputPwr15minEntry_Object = MibTableRow
intervalPhysPerfOpticalInputPwr15minEntry = _IntervalPhysPerfOpticalInputPwr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33, 1)
)
intervalPhysPerfOpticalInputPwr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalInputPwr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minEntry.setStatus("current")


class _IntervalPhysPerfOpticalInputPwr15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfOpticalInputPwr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfOpticalInputPwr15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOpticalInputPwr15minNumber_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr15minNumber = _IntervalPhysPerfOpticalInputPwr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33, 1, 1),
    _IntervalPhysPerfOpticalInputPwr15minNumber_Type()
)
intervalPhysPerfOpticalInputPwr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minNumber.setStatus("current")
_IntervalPhysPerfOpticalInputPwr15minLow_Type = Integer32
_IntervalPhysPerfOpticalInputPwr15minLow_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr15minLow = _IntervalPhysPerfOpticalInputPwr15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33, 1, 2),
    _IntervalPhysPerfOpticalInputPwr15minLow_Type()
)
intervalPhysPerfOpticalInputPwr15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minLow.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr15minMean_Type = Integer32
_IntervalPhysPerfOpticalInputPwr15minMean_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr15minMean = _IntervalPhysPerfOpticalInputPwr15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33, 1, 3),
    _IntervalPhysPerfOpticalInputPwr15minMean_Type()
)
intervalPhysPerfOpticalInputPwr15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minMean.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr15minHigh_Type = Integer32
_IntervalPhysPerfOpticalInputPwr15minHigh_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr15minHigh = _IntervalPhysPerfOpticalInputPwr15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33, 1, 4),
    _IntervalPhysPerfOpticalInputPwr15minHigh_Type()
)
intervalPhysPerfOpticalInputPwr15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr15minValidFlag_Type = TruthValue
_IntervalPhysPerfOpticalInputPwr15minValidFlag_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr15minValidFlag = _IntervalPhysPerfOpticalInputPwr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33, 1, 5),
    _IntervalPhysPerfOpticalInputPwr15minValidFlag_Type()
)
intervalPhysPerfOpticalInputPwr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minValidFlag.setStatus("current")
_IntervalPhysPerfOpticalInputPwr15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfOpticalInputPwr15minTimeStamp_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr15minTimeStamp = _IntervalPhysPerfOpticalInputPwr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 33, 1, 6),
    _IntervalPhysPerfOpticalInputPwr15minTimeStamp_Type()
)
intervalPhysPerfOpticalInputPwr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr15minTimeStamp.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1dayTable_Object = MibTable
intervalPhysPerfOpticalInputPwr1dayTable = _IntervalPhysPerfOpticalInputPwr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayTable.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1dayEntry_Object = MibTableRow
intervalPhysPerfOpticalInputPwr1dayEntry = _IntervalPhysPerfOpticalInputPwr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34, 1)
)
intervalPhysPerfOpticalInputPwr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalInputPwr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayEntry.setStatus("current")


class _IntervalPhysPerfOpticalInputPwr1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfOpticalInputPwr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfOpticalInputPwr1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOpticalInputPwr1dayNumber_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1dayNumber = _IntervalPhysPerfOpticalInputPwr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34, 1, 1),
    _IntervalPhysPerfOpticalInputPwr1dayNumber_Type()
)
intervalPhysPerfOpticalInputPwr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayNumber.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1dayLow_Type = Integer32
_IntervalPhysPerfOpticalInputPwr1dayLow_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1dayLow = _IntervalPhysPerfOpticalInputPwr1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34, 1, 2),
    _IntervalPhysPerfOpticalInputPwr1dayLow_Type()
)
intervalPhysPerfOpticalInputPwr1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayLow.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr1dayMean_Type = Integer32
_IntervalPhysPerfOpticalInputPwr1dayMean_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1dayMean = _IntervalPhysPerfOpticalInputPwr1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34, 1, 3),
    _IntervalPhysPerfOpticalInputPwr1dayMean_Type()
)
intervalPhysPerfOpticalInputPwr1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayMean.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr1dayHigh_Type = Integer32
_IntervalPhysPerfOpticalInputPwr1dayHigh_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1dayHigh = _IntervalPhysPerfOpticalInputPwr1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34, 1, 4),
    _IntervalPhysPerfOpticalInputPwr1dayHigh_Type()
)
intervalPhysPerfOpticalInputPwr1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr1dayValidFlag_Type = TruthValue
_IntervalPhysPerfOpticalInputPwr1dayValidFlag_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1dayValidFlag = _IntervalPhysPerfOpticalInputPwr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34, 1, 5),
    _IntervalPhysPerfOpticalInputPwr1dayValidFlag_Type()
)
intervalPhysPerfOpticalInputPwr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayValidFlag.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfOpticalInputPwr1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1dayTimeStamp = _IntervalPhysPerfOpticalInputPwr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 34, 1, 6),
    _IntervalPhysPerfOpticalInputPwr1dayTimeStamp_Type()
)
intervalPhysPerfOpticalInputPwr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1dayTimeStamp.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1weekTable_Object = MibTable
intervalPhysPerfOpticalInputPwr1weekTable = _IntervalPhysPerfOpticalInputPwr1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekTable.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1weekEntry_Object = MibTableRow
intervalPhysPerfOpticalInputPwr1weekEntry = _IntervalPhysPerfOpticalInputPwr1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35, 1)
)
intervalPhysPerfOpticalInputPwr1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalInputPwr1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekEntry.setStatus("current")


class _IntervalPhysPerfOpticalInputPwr1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfOpticalInputPwr1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfOpticalInputPwr1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOpticalInputPwr1weekNumber_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1weekNumber = _IntervalPhysPerfOpticalInputPwr1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35, 1, 1),
    _IntervalPhysPerfOpticalInputPwr1weekNumber_Type()
)
intervalPhysPerfOpticalInputPwr1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekNumber.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1weekLow_Type = Integer32
_IntervalPhysPerfOpticalInputPwr1weekLow_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1weekLow = _IntervalPhysPerfOpticalInputPwr1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35, 1, 2),
    _IntervalPhysPerfOpticalInputPwr1weekLow_Type()
)
intervalPhysPerfOpticalInputPwr1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekLow.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr1weekMean_Type = Integer32
_IntervalPhysPerfOpticalInputPwr1weekMean_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1weekMean = _IntervalPhysPerfOpticalInputPwr1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35, 1, 3),
    _IntervalPhysPerfOpticalInputPwr1weekMean_Type()
)
intervalPhysPerfOpticalInputPwr1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekMean.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr1weekHigh_Type = Integer32
_IntervalPhysPerfOpticalInputPwr1weekHigh_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1weekHigh = _IntervalPhysPerfOpticalInputPwr1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35, 1, 4),
    _IntervalPhysPerfOpticalInputPwr1weekHigh_Type()
)
intervalPhysPerfOpticalInputPwr1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalInputPwr1weekValidFlag_Type = TruthValue
_IntervalPhysPerfOpticalInputPwr1weekValidFlag_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1weekValidFlag = _IntervalPhysPerfOpticalInputPwr1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35, 1, 5),
    _IntervalPhysPerfOpticalInputPwr1weekValidFlag_Type()
)
intervalPhysPerfOpticalInputPwr1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekValidFlag.setStatus("current")
_IntervalPhysPerfOpticalInputPwr1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfOpticalInputPwr1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfOpticalInputPwr1weekTimeStamp = _IntervalPhysPerfOpticalInputPwr1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 35, 1, 6),
    _IntervalPhysPerfOpticalInputPwr1weekTimeStamp_Type()
)
intervalPhysPerfOpticalInputPwr1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalInputPwr1weekTimeStamp.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr15minTable_Object = MibTable
intervalPhysPerfOpticalOutputPwr15minTable = _IntervalPhysPerfOpticalOutputPwr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minTable.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr15minEntry_Object = MibTableRow
intervalPhysPerfOpticalOutputPwr15minEntry = _IntervalPhysPerfOpticalOutputPwr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36, 1)
)
intervalPhysPerfOpticalOutputPwr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalOutputPwr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minEntry.setStatus("current")


class _IntervalPhysPerfOpticalOutputPwr15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfOpticalOutputPwr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfOpticalOutputPwr15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOpticalOutputPwr15minNumber_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr15minNumber = _IntervalPhysPerfOpticalOutputPwr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36, 1, 1),
    _IntervalPhysPerfOpticalOutputPwr15minNumber_Type()
)
intervalPhysPerfOpticalOutputPwr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minNumber.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr15minLow_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr15minLow_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr15minLow = _IntervalPhysPerfOpticalOutputPwr15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36, 1, 2),
    _IntervalPhysPerfOpticalOutputPwr15minLow_Type()
)
intervalPhysPerfOpticalOutputPwr15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minLow.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr15minMean_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr15minMean_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr15minMean = _IntervalPhysPerfOpticalOutputPwr15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36, 1, 3),
    _IntervalPhysPerfOpticalOutputPwr15minMean_Type()
)
intervalPhysPerfOpticalOutputPwr15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minMean.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr15minHigh_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr15minHigh_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr15minHigh = _IntervalPhysPerfOpticalOutputPwr15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36, 1, 4),
    _IntervalPhysPerfOpticalOutputPwr15minHigh_Type()
)
intervalPhysPerfOpticalOutputPwr15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr15minValidFlag_Type = TruthValue
_IntervalPhysPerfOpticalOutputPwr15minValidFlag_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr15minValidFlag = _IntervalPhysPerfOpticalOutputPwr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36, 1, 5),
    _IntervalPhysPerfOpticalOutputPwr15minValidFlag_Type()
)
intervalPhysPerfOpticalOutputPwr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minValidFlag.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfOpticalOutputPwr15minTimeStamp_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr15minTimeStamp = _IntervalPhysPerfOpticalOutputPwr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 36, 1, 6),
    _IntervalPhysPerfOpticalOutputPwr15minTimeStamp_Type()
)
intervalPhysPerfOpticalOutputPwr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr15minTimeStamp.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1dayTable_Object = MibTable
intervalPhysPerfOpticalOutputPwr1dayTable = _IntervalPhysPerfOpticalOutputPwr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayTable.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1dayEntry_Object = MibTableRow
intervalPhysPerfOpticalOutputPwr1dayEntry = _IntervalPhysPerfOpticalOutputPwr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37, 1)
)
intervalPhysPerfOpticalOutputPwr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalOutputPwr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayEntry.setStatus("current")


class _IntervalPhysPerfOpticalOutputPwr1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfOpticalOutputPwr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfOpticalOutputPwr1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOpticalOutputPwr1dayNumber_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1dayNumber = _IntervalPhysPerfOpticalOutputPwr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37, 1, 1),
    _IntervalPhysPerfOpticalOutputPwr1dayNumber_Type()
)
intervalPhysPerfOpticalOutputPwr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayNumber.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1dayLow_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr1dayLow_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1dayLow = _IntervalPhysPerfOpticalOutputPwr1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37, 1, 2),
    _IntervalPhysPerfOpticalOutputPwr1dayLow_Type()
)
intervalPhysPerfOpticalOutputPwr1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayLow.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr1dayMean_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr1dayMean_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1dayMean = _IntervalPhysPerfOpticalOutputPwr1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37, 1, 3),
    _IntervalPhysPerfOpticalOutputPwr1dayMean_Type()
)
intervalPhysPerfOpticalOutputPwr1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayMean.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr1dayHigh_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr1dayHigh_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1dayHigh = _IntervalPhysPerfOpticalOutputPwr1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37, 1, 4),
    _IntervalPhysPerfOpticalOutputPwr1dayHigh_Type()
)
intervalPhysPerfOpticalOutputPwr1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr1dayValidFlag_Type = TruthValue
_IntervalPhysPerfOpticalOutputPwr1dayValidFlag_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1dayValidFlag = _IntervalPhysPerfOpticalOutputPwr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37, 1, 5),
    _IntervalPhysPerfOpticalOutputPwr1dayValidFlag_Type()
)
intervalPhysPerfOpticalOutputPwr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayValidFlag.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfOpticalOutputPwr1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1dayTimeStamp = _IntervalPhysPerfOpticalOutputPwr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 37, 1, 6),
    _IntervalPhysPerfOpticalOutputPwr1dayTimeStamp_Type()
)
intervalPhysPerfOpticalOutputPwr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1dayTimeStamp.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1weekTable_Object = MibTable
intervalPhysPerfOpticalOutputPwr1weekTable = _IntervalPhysPerfOpticalOutputPwr1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekTable.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1weekEntry_Object = MibTableRow
intervalPhysPerfOpticalOutputPwr1weekEntry = _IntervalPhysPerfOpticalOutputPwr1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38, 1)
)
intervalPhysPerfOpticalOutputPwr1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalOutputPwr1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekEntry.setStatus("current")


class _IntervalPhysPerfOpticalOutputPwr1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfOpticalOutputPwr1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfOpticalOutputPwr1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOpticalOutputPwr1weekNumber_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1weekNumber = _IntervalPhysPerfOpticalOutputPwr1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38, 1, 1),
    _IntervalPhysPerfOpticalOutputPwr1weekNumber_Type()
)
intervalPhysPerfOpticalOutputPwr1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekNumber.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1weekLow_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr1weekLow_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1weekLow = _IntervalPhysPerfOpticalOutputPwr1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38, 1, 2),
    _IntervalPhysPerfOpticalOutputPwr1weekLow_Type()
)
intervalPhysPerfOpticalOutputPwr1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekLow.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr1weekMean_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr1weekMean_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1weekMean = _IntervalPhysPerfOpticalOutputPwr1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38, 1, 3),
    _IntervalPhysPerfOpticalOutputPwr1weekMean_Type()
)
intervalPhysPerfOpticalOutputPwr1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekMean.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr1weekHigh_Type = Integer32
_IntervalPhysPerfOpticalOutputPwr1weekHigh_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1weekHigh = _IntervalPhysPerfOpticalOutputPwr1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38, 1, 4),
    _IntervalPhysPerfOpticalOutputPwr1weekHigh_Type()
)
intervalPhysPerfOpticalOutputPwr1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOpticalOutputPwr1weekValidFlag_Type = TruthValue
_IntervalPhysPerfOpticalOutputPwr1weekValidFlag_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1weekValidFlag = _IntervalPhysPerfOpticalOutputPwr1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38, 1, 5),
    _IntervalPhysPerfOpticalOutputPwr1weekValidFlag_Type()
)
intervalPhysPerfOpticalOutputPwr1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekValidFlag.setStatus("current")
_IntervalPhysPerfOpticalOutputPwr1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfOpticalOutputPwr1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfOpticalOutputPwr1weekTimeStamp = _IntervalPhysPerfOpticalOutputPwr1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 38, 1, 6),
    _IntervalPhysPerfOpticalOutputPwr1weekTimeStamp_Type()
)
intervalPhysPerfOpticalOutputPwr1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOpticalOutputPwr1weekTimeStamp.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized15minTable_Object = MibTable
intervalPhysPerfLaserBiasCurrentNormalized15minTable = _IntervalPhysPerfLaserBiasCurrentNormalized15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39)
)
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minTable.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized15minEntry_Object = MibTableRow
intervalPhysPerfLaserBiasCurrentNormalized15minEntry = _IntervalPhysPerfLaserBiasCurrentNormalized15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39, 1)
)
intervalPhysPerfLaserBiasCurrentNormalized15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfLaserBiasCurrentNormalized15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minEntry.setStatus("current")


class _IntervalPhysPerfLaserBiasCurrentNormalized15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfLaserBiasCurrentNormalized15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfLaserBiasCurrentNormalized15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfLaserBiasCurrentNormalized15minNumber_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized15minNumber = _IntervalPhysPerfLaserBiasCurrentNormalized15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39, 1, 1),
    _IntervalPhysPerfLaserBiasCurrentNormalized15minNumber_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minNumber.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized15minLow_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized15minLow_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized15minLow = _IntervalPhysPerfLaserBiasCurrentNormalized15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39, 1, 2),
    _IntervalPhysPerfLaserBiasCurrentNormalized15minLow_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minLow.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized15minMean_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized15minMean_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized15minMean = _IntervalPhysPerfLaserBiasCurrentNormalized15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39, 1, 3),
    _IntervalPhysPerfLaserBiasCurrentNormalized15minMean_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minMean.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized15minHigh_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized15minHigh_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized15minHigh = _IntervalPhysPerfLaserBiasCurrentNormalized15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39, 1, 4),
    _IntervalPhysPerfLaserBiasCurrentNormalized15minHigh_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minHigh.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized15minValidFlag_Type = TruthValue
_IntervalPhysPerfLaserBiasCurrentNormalized15minValidFlag_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized15minValidFlag = _IntervalPhysPerfLaserBiasCurrentNormalized15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39, 1, 5),
    _IntervalPhysPerfLaserBiasCurrentNormalized15minValidFlag_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minValidFlag.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp = _IntervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 39, 1, 6),
    _IntervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1dayTable_Object = MibTable
intervalPhysPerfLaserBiasCurrentNormalized1dayTable = _IntervalPhysPerfLaserBiasCurrentNormalized1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40)
)
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayTable.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1dayEntry_Object = MibTableRow
intervalPhysPerfLaserBiasCurrentNormalized1dayEntry = _IntervalPhysPerfLaserBiasCurrentNormalized1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40, 1)
)
intervalPhysPerfLaserBiasCurrentNormalized1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfLaserBiasCurrentNormalized1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayEntry.setStatus("current")


class _IntervalPhysPerfLaserBiasCurrentNormalized1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfLaserBiasCurrentNormalized1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfLaserBiasCurrentNormalized1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfLaserBiasCurrentNormalized1dayNumber_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1dayNumber = _IntervalPhysPerfLaserBiasCurrentNormalized1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40, 1, 1),
    _IntervalPhysPerfLaserBiasCurrentNormalized1dayNumber_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayNumber.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1dayLow_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized1dayLow_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1dayLow = _IntervalPhysPerfLaserBiasCurrentNormalized1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40, 1, 2),
    _IntervalPhysPerfLaserBiasCurrentNormalized1dayLow_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayLow.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized1dayMean_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized1dayMean_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1dayMean = _IntervalPhysPerfLaserBiasCurrentNormalized1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40, 1, 3),
    _IntervalPhysPerfLaserBiasCurrentNormalized1dayMean_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayMean.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized1dayHigh_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized1dayHigh_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1dayHigh = _IntervalPhysPerfLaserBiasCurrentNormalized1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40, 1, 4),
    _IntervalPhysPerfLaserBiasCurrentNormalized1dayHigh_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayHigh.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag_Type = TruthValue
_IntervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag = _IntervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40, 1, 5),
    _IntervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp = _IntervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 40, 1, 6),
    _IntervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1weekTable_Object = MibTable
intervalPhysPerfLaserBiasCurrentNormalized1weekTable = _IntervalPhysPerfLaserBiasCurrentNormalized1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41)
)
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekTable.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1weekEntry_Object = MibTableRow
intervalPhysPerfLaserBiasCurrentNormalized1weekEntry = _IntervalPhysPerfLaserBiasCurrentNormalized1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41, 1)
)
intervalPhysPerfLaserBiasCurrentNormalized1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfLaserBiasCurrentNormalized1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekEntry.setStatus("current")


class _IntervalPhysPerfLaserBiasCurrentNormalized1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfLaserBiasCurrentNormalized1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfLaserBiasCurrentNormalized1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfLaserBiasCurrentNormalized1weekNumber_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1weekNumber = _IntervalPhysPerfLaserBiasCurrentNormalized1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41, 1, 1),
    _IntervalPhysPerfLaserBiasCurrentNormalized1weekNumber_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekNumber.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1weekLow_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized1weekLow_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1weekLow = _IntervalPhysPerfLaserBiasCurrentNormalized1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41, 1, 2),
    _IntervalPhysPerfLaserBiasCurrentNormalized1weekLow_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekLow.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized1weekMean_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized1weekMean_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1weekMean = _IntervalPhysPerfLaserBiasCurrentNormalized1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41, 1, 3),
    _IntervalPhysPerfLaserBiasCurrentNormalized1weekMean_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekMean.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized1weekHigh_Type = Unsigned32
_IntervalPhysPerfLaserBiasCurrentNormalized1weekHigh_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1weekHigh = _IntervalPhysPerfLaserBiasCurrentNormalized1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41, 1, 4),
    _IntervalPhysPerfLaserBiasCurrentNormalized1weekHigh_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekHigh.setUnits("%")
_IntervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag_Type = TruthValue
_IntervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag = _IntervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41, 1, 5),
    _IntervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag.setStatus("current")
_IntervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp = _IntervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 41, 1, 6),
    _IntervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp_Type()
)
intervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt15minTable_Object = MibTable
intervalPhysPerfOlmRxLineAtt15minTable = _IntervalPhysPerfOlmRxLineAtt15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minTable.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt15minEntry_Object = MibTableRow
intervalPhysPerfOlmRxLineAtt15minEntry = _IntervalPhysPerfOlmRxLineAtt15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42, 1)
)
intervalPhysPerfOlmRxLineAtt15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOlmRxLineAtt15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minEntry.setStatus("current")


class _IntervalPhysPerfOlmRxLineAtt15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfOlmRxLineAtt15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfOlmRxLineAtt15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOlmRxLineAtt15minNumber_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt15minNumber = _IntervalPhysPerfOlmRxLineAtt15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42, 1, 1),
    _IntervalPhysPerfOlmRxLineAtt15minNumber_Type()
)
intervalPhysPerfOlmRxLineAtt15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minNumber.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt15minLow_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt15minLow_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt15minLow = _IntervalPhysPerfOlmRxLineAtt15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42, 1, 2),
    _IntervalPhysPerfOlmRxLineAtt15minLow_Type()
)
intervalPhysPerfOlmRxLineAtt15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minLow.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt15minMean_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt15minMean_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt15minMean = _IntervalPhysPerfOlmRxLineAtt15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42, 1, 3),
    _IntervalPhysPerfOlmRxLineAtt15minMean_Type()
)
intervalPhysPerfOlmRxLineAtt15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minMean.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt15minHigh_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt15minHigh_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt15minHigh = _IntervalPhysPerfOlmRxLineAtt15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42, 1, 4),
    _IntervalPhysPerfOlmRxLineAtt15minHigh_Type()
)
intervalPhysPerfOlmRxLineAtt15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minHigh.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt15minValidFlag_Type = TruthValue
_IntervalPhysPerfOlmRxLineAtt15minValidFlag_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt15minValidFlag = _IntervalPhysPerfOlmRxLineAtt15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42, 1, 5),
    _IntervalPhysPerfOlmRxLineAtt15minValidFlag_Type()
)
intervalPhysPerfOlmRxLineAtt15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minValidFlag.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfOlmRxLineAtt15minTimeStamp_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt15minTimeStamp = _IntervalPhysPerfOlmRxLineAtt15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 42, 1, 6),
    _IntervalPhysPerfOlmRxLineAtt15minTimeStamp_Type()
)
intervalPhysPerfOlmRxLineAtt15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt15minTimeStamp.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1dayTable_Object = MibTable
intervalPhysPerfOlmRxLineAtt1dayTable = _IntervalPhysPerfOlmRxLineAtt1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayTable.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1dayEntry_Object = MibTableRow
intervalPhysPerfOlmRxLineAtt1dayEntry = _IntervalPhysPerfOlmRxLineAtt1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43, 1)
)
intervalPhysPerfOlmRxLineAtt1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOlmRxLineAtt1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayEntry.setStatus("current")


class _IntervalPhysPerfOlmRxLineAtt1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfOlmRxLineAtt1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfOlmRxLineAtt1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOlmRxLineAtt1dayNumber_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1dayNumber = _IntervalPhysPerfOlmRxLineAtt1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43, 1, 1),
    _IntervalPhysPerfOlmRxLineAtt1dayNumber_Type()
)
intervalPhysPerfOlmRxLineAtt1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayNumber.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1dayLow_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt1dayLow_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1dayLow = _IntervalPhysPerfOlmRxLineAtt1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43, 1, 2),
    _IntervalPhysPerfOlmRxLineAtt1dayLow_Type()
)
intervalPhysPerfOlmRxLineAtt1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayLow.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt1dayMean_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt1dayMean_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1dayMean = _IntervalPhysPerfOlmRxLineAtt1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43, 1, 3),
    _IntervalPhysPerfOlmRxLineAtt1dayMean_Type()
)
intervalPhysPerfOlmRxLineAtt1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayMean.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt1dayHigh_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt1dayHigh_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1dayHigh = _IntervalPhysPerfOlmRxLineAtt1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43, 1, 4),
    _IntervalPhysPerfOlmRxLineAtt1dayHigh_Type()
)
intervalPhysPerfOlmRxLineAtt1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayHigh.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt1dayValidFlag_Type = TruthValue
_IntervalPhysPerfOlmRxLineAtt1dayValidFlag_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1dayValidFlag = _IntervalPhysPerfOlmRxLineAtt1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43, 1, 5),
    _IntervalPhysPerfOlmRxLineAtt1dayValidFlag_Type()
)
intervalPhysPerfOlmRxLineAtt1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayValidFlag.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfOlmRxLineAtt1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1dayTimeStamp = _IntervalPhysPerfOlmRxLineAtt1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 43, 1, 6),
    _IntervalPhysPerfOlmRxLineAtt1dayTimeStamp_Type()
)
intervalPhysPerfOlmRxLineAtt1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1dayTimeStamp.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1weekTable_Object = MibTable
intervalPhysPerfOlmRxLineAtt1weekTable = _IntervalPhysPerfOlmRxLineAtt1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekTable.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1weekEntry_Object = MibTableRow
intervalPhysPerfOlmRxLineAtt1weekEntry = _IntervalPhysPerfOlmRxLineAtt1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44, 1)
)
intervalPhysPerfOlmRxLineAtt1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOlmRxLineAtt1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekEntry.setStatus("current")


class _IntervalPhysPerfOlmRxLineAtt1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfOlmRxLineAtt1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfOlmRxLineAtt1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOlmRxLineAtt1weekNumber_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1weekNumber = _IntervalPhysPerfOlmRxLineAtt1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44, 1, 1),
    _IntervalPhysPerfOlmRxLineAtt1weekNumber_Type()
)
intervalPhysPerfOlmRxLineAtt1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekNumber.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1weekLow_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt1weekLow_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1weekLow = _IntervalPhysPerfOlmRxLineAtt1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44, 1, 2),
    _IntervalPhysPerfOlmRxLineAtt1weekLow_Type()
)
intervalPhysPerfOlmRxLineAtt1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekLow.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt1weekMean_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt1weekMean_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1weekMean = _IntervalPhysPerfOlmRxLineAtt1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44, 1, 3),
    _IntervalPhysPerfOlmRxLineAtt1weekMean_Type()
)
intervalPhysPerfOlmRxLineAtt1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekMean.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt1weekHigh_Type = Integer32
_IntervalPhysPerfOlmRxLineAtt1weekHigh_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1weekHigh = _IntervalPhysPerfOlmRxLineAtt1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44, 1, 4),
    _IntervalPhysPerfOlmRxLineAtt1weekHigh_Type()
)
intervalPhysPerfOlmRxLineAtt1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekHigh.setUnits("0.1 dB")
_IntervalPhysPerfOlmRxLineAtt1weekValidFlag_Type = TruthValue
_IntervalPhysPerfOlmRxLineAtt1weekValidFlag_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1weekValidFlag = _IntervalPhysPerfOlmRxLineAtt1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44, 1, 5),
    _IntervalPhysPerfOlmRxLineAtt1weekValidFlag_Type()
)
intervalPhysPerfOlmRxLineAtt1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekValidFlag.setStatus("current")
_IntervalPhysPerfOlmRxLineAtt1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfOlmRxLineAtt1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfOlmRxLineAtt1weekTimeStamp = _IntervalPhysPerfOlmRxLineAtt1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 44, 1, 6),
    _IntervalPhysPerfOlmRxLineAtt1weekTimeStamp_Type()
)
intervalPhysPerfOlmRxLineAtt1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmRxLineAtt1weekTimeStamp.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt15minTable_Object = MibTable
intervalPhysPerfOlmTxLineAtt15minTable = _IntervalPhysPerfOlmTxLineAtt15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minTable.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt15minEntry_Object = MibTableRow
intervalPhysPerfOlmTxLineAtt15minEntry = _IntervalPhysPerfOlmTxLineAtt15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45, 1)
)
intervalPhysPerfOlmTxLineAtt15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOlmTxLineAtt15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minEntry.setStatus("current")


class _IntervalPhysPerfOlmTxLineAtt15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfOlmTxLineAtt15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfOlmTxLineAtt15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOlmTxLineAtt15minNumber_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt15minNumber = _IntervalPhysPerfOlmTxLineAtt15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45, 1, 1),
    _IntervalPhysPerfOlmTxLineAtt15minNumber_Type()
)
intervalPhysPerfOlmTxLineAtt15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minNumber.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt15minLow_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt15minLow_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt15minLow = _IntervalPhysPerfOlmTxLineAtt15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45, 1, 2),
    _IntervalPhysPerfOlmTxLineAtt15minLow_Type()
)
intervalPhysPerfOlmTxLineAtt15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minLow.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt15minHigh_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt15minHigh_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt15minHigh = _IntervalPhysPerfOlmTxLineAtt15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45, 1, 3),
    _IntervalPhysPerfOlmTxLineAtt15minHigh_Type()
)
intervalPhysPerfOlmTxLineAtt15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minHigh.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt15minMean_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt15minMean_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt15minMean = _IntervalPhysPerfOlmTxLineAtt15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45, 1, 4),
    _IntervalPhysPerfOlmTxLineAtt15minMean_Type()
)
intervalPhysPerfOlmTxLineAtt15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minMean.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt15minValidFlag_Type = TruthValue
_IntervalPhysPerfOlmTxLineAtt15minValidFlag_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt15minValidFlag = _IntervalPhysPerfOlmTxLineAtt15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45, 1, 5),
    _IntervalPhysPerfOlmTxLineAtt15minValidFlag_Type()
)
intervalPhysPerfOlmTxLineAtt15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minValidFlag.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfOlmTxLineAtt15minTimeStamp_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt15minTimeStamp = _IntervalPhysPerfOlmTxLineAtt15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 45, 1, 6),
    _IntervalPhysPerfOlmTxLineAtt15minTimeStamp_Type()
)
intervalPhysPerfOlmTxLineAtt15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt15minTimeStamp.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1dayTable_Object = MibTable
intervalPhysPerfOlmTxLineAtt1dayTable = _IntervalPhysPerfOlmTxLineAtt1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayTable.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1dayEntry_Object = MibTableRow
intervalPhysPerfOlmTxLineAtt1dayEntry = _IntervalPhysPerfOlmTxLineAtt1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46, 1)
)
intervalPhysPerfOlmTxLineAtt1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOlmTxLineAtt1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayEntry.setStatus("current")


class _IntervalPhysPerfOlmTxLineAtt1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfOlmTxLineAtt1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfOlmTxLineAtt1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOlmTxLineAtt1dayNumber_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1dayNumber = _IntervalPhysPerfOlmTxLineAtt1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46, 1, 1),
    _IntervalPhysPerfOlmTxLineAtt1dayNumber_Type()
)
intervalPhysPerfOlmTxLineAtt1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayNumber.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1dayLow_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt1dayLow_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1dayLow = _IntervalPhysPerfOlmTxLineAtt1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46, 1, 2),
    _IntervalPhysPerfOlmTxLineAtt1dayLow_Type()
)
intervalPhysPerfOlmTxLineAtt1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayLow.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt1dayHigh_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt1dayHigh_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1dayHigh = _IntervalPhysPerfOlmTxLineAtt1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46, 1, 3),
    _IntervalPhysPerfOlmTxLineAtt1dayHigh_Type()
)
intervalPhysPerfOlmTxLineAtt1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayHigh.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt1dayMean_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt1dayMean_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1dayMean = _IntervalPhysPerfOlmTxLineAtt1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46, 1, 4),
    _IntervalPhysPerfOlmTxLineAtt1dayMean_Type()
)
intervalPhysPerfOlmTxLineAtt1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayMean.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt1dayValidFlag_Type = TruthValue
_IntervalPhysPerfOlmTxLineAtt1dayValidFlag_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1dayValidFlag = _IntervalPhysPerfOlmTxLineAtt1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46, 1, 5),
    _IntervalPhysPerfOlmTxLineAtt1dayValidFlag_Type()
)
intervalPhysPerfOlmTxLineAtt1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayValidFlag.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfOlmTxLineAtt1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1dayTimeStamp = _IntervalPhysPerfOlmTxLineAtt1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 46, 1, 6),
    _IntervalPhysPerfOlmTxLineAtt1dayTimeStamp_Type()
)
intervalPhysPerfOlmTxLineAtt1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1dayTimeStamp.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1weekTable_Object = MibTable
intervalPhysPerfOlmTxLineAtt1weekTable = _IntervalPhysPerfOlmTxLineAtt1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekTable.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1weekEntry_Object = MibTableRow
intervalPhysPerfOlmTxLineAtt1weekEntry = _IntervalPhysPerfOlmTxLineAtt1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47, 1)
)
intervalPhysPerfOlmTxLineAtt1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOlmTxLineAtt1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekEntry.setStatus("current")


class _IntervalPhysPerfOlmTxLineAtt1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfOlmTxLineAtt1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfOlmTxLineAtt1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOlmTxLineAtt1weekNumber_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1weekNumber = _IntervalPhysPerfOlmTxLineAtt1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47, 1, 1),
    _IntervalPhysPerfOlmTxLineAtt1weekNumber_Type()
)
intervalPhysPerfOlmTxLineAtt1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekNumber.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1weekLow_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt1weekLow_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1weekLow = _IntervalPhysPerfOlmTxLineAtt1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47, 1, 2),
    _IntervalPhysPerfOlmTxLineAtt1weekLow_Type()
)
intervalPhysPerfOlmTxLineAtt1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekLow.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt1weekHigh_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt1weekHigh_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1weekHigh = _IntervalPhysPerfOlmTxLineAtt1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47, 1, 3),
    _IntervalPhysPerfOlmTxLineAtt1weekHigh_Type()
)
intervalPhysPerfOlmTxLineAtt1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekHigh.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt1weekMean_Type = Integer32
_IntervalPhysPerfOlmTxLineAtt1weekMean_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1weekMean = _IntervalPhysPerfOlmTxLineAtt1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47, 1, 4),
    _IntervalPhysPerfOlmTxLineAtt1weekMean_Type()
)
intervalPhysPerfOlmTxLineAtt1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekMean.setUnits("0.1 dB")
_IntervalPhysPerfOlmTxLineAtt1weekValidFlag_Type = TruthValue
_IntervalPhysPerfOlmTxLineAtt1weekValidFlag_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1weekValidFlag = _IntervalPhysPerfOlmTxLineAtt1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47, 1, 5),
    _IntervalPhysPerfOlmTxLineAtt1weekValidFlag_Type()
)
intervalPhysPerfOlmTxLineAtt1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekValidFlag.setStatus("current")
_IntervalPhysPerfOlmTxLineAtt1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfOlmTxLineAtt1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfOlmTxLineAtt1weekTimeStamp = _IntervalPhysPerfOlmTxLineAtt1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 47, 1, 6),
    _IntervalPhysPerfOlmTxLineAtt1weekTimeStamp_Type()
)
intervalPhysPerfOlmTxLineAtt1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOlmTxLineAtt1weekTimeStamp.setStatus("current")
_CurrentPhysConv15minTable_Object = MibTable
currentPhysConv15minTable = _CurrentPhysConv15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 48)
)
if mibBuilder.loadTexts:
    currentPhysConv15minTable.setStatus("current")
_CurrentPhysConv15minEntry_Object = MibTableRow
currentPhysConv15minEntry = _CurrentPhysConv15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 48, 1)
)
currentPhysConv15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConv15minEntry.setStatus("current")
_CurrentPhysConv15minES_Type = Unsigned32
_CurrentPhysConv15minES_Object = MibTableColumn
currentPhysConv15minES = _CurrentPhysConv15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 48, 1, 1),
    _CurrentPhysConv15minES_Type()
)
currentPhysConv15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv15minES.setStatus("current")
_CurrentPhysConv15minDE_Type = Unsigned32
_CurrentPhysConv15minDE_Object = MibTableColumn
currentPhysConv15minDE = _CurrentPhysConv15minDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 48, 1, 2),
    _CurrentPhysConv15minDE_Type()
)
currentPhysConv15minDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv15minDE.setStatus("current")
_CurrentPhysConv15minCV_Type = Counter64String
_CurrentPhysConv15minCV_Object = MibTableColumn
currentPhysConv15minCV = _CurrentPhysConv15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 48, 1, 3),
    _CurrentPhysConv15minCV_Type()
)
currentPhysConv15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv15minCV.setStatus("current")


class _CurrentPhysConv15minElapsedTime_Type(Integer32):
    """Custom type currentPhysConv15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConv15minElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConv15minElapsedTime_Object = MibTableColumn
currentPhysConv15minElapsedTime = _CurrentPhysConv15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 48, 1, 4),
    _CurrentPhysConv15minElapsedTime_Type()
)
currentPhysConv15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv15minElapsedTime.setStatus("current")
_CurrentPhysConv1dayTable_Object = MibTable
currentPhysConv1dayTable = _CurrentPhysConv1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 49)
)
if mibBuilder.loadTexts:
    currentPhysConv1dayTable.setStatus("current")
_CurrentPhysConv1dayEntry_Object = MibTableRow
currentPhysConv1dayEntry = _CurrentPhysConv1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 49, 1)
)
currentPhysConv1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConv1dayEntry.setStatus("current")
_CurrentPhysConv1dayES_Type = Unsigned32
_CurrentPhysConv1dayES_Object = MibTableColumn
currentPhysConv1dayES = _CurrentPhysConv1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 49, 1, 1),
    _CurrentPhysConv1dayES_Type()
)
currentPhysConv1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv1dayES.setStatus("current")
_CurrentPhysConv1dayDE_Type = Unsigned32
_CurrentPhysConv1dayDE_Object = MibTableColumn
currentPhysConv1dayDE = _CurrentPhysConv1dayDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 49, 1, 2),
    _CurrentPhysConv1dayDE_Type()
)
currentPhysConv1dayDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv1dayDE.setStatus("current")
_CurrentPhysConv1dayCV_Type = Counter64String
_CurrentPhysConv1dayCV_Object = MibTableColumn
currentPhysConv1dayCV = _CurrentPhysConv1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 49, 1, 3),
    _CurrentPhysConv1dayCV_Type()
)
currentPhysConv1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv1dayCV.setStatus("current")


class _CurrentPhysConv1dayElapsedTime_Type(Integer32):
    """Custom type currentPhysConv1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConv1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConv1dayElapsedTime_Object = MibTableColumn
currentPhysConv1dayElapsedTime = _CurrentPhysConv1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 49, 1, 4),
    _CurrentPhysConv1dayElapsedTime_Type()
)
currentPhysConv1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConv1dayElapsedTime.setStatus("current")
_IntervalPhysConv15minTable_Object = MibTable
intervalPhysConv15minTable = _IntervalPhysConv15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50)
)
if mibBuilder.loadTexts:
    intervalPhysConv15minTable.setStatus("current")
_IntervalPhysConv15minEntry_Object = MibTableRow
intervalPhysConv15minEntry = _IntervalPhysConv15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50, 1)
)
intervalPhysConv15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConv15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConv15minEntry.setStatus("current")


class _IntervalPhysConv15minNumber_Type(Integer32):
    """Custom type intervalPhysConv15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysConv15minNumber_Type.__name__ = "Integer32"
_IntervalPhysConv15minNumber_Object = MibTableColumn
intervalPhysConv15minNumber = _IntervalPhysConv15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50, 1, 1),
    _IntervalPhysConv15minNumber_Type()
)
intervalPhysConv15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConv15minNumber.setStatus("current")
_IntervalPhysConv15minES_Type = Unsigned32
_IntervalPhysConv15minES_Object = MibTableColumn
intervalPhysConv15minES = _IntervalPhysConv15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50, 1, 2),
    _IntervalPhysConv15minES_Type()
)
intervalPhysConv15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv15minES.setStatus("current")
_IntervalPhysConv15minDE_Type = Unsigned32
_IntervalPhysConv15minDE_Object = MibTableColumn
intervalPhysConv15minDE = _IntervalPhysConv15minDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50, 1, 3),
    _IntervalPhysConv15minDE_Type()
)
intervalPhysConv15minDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv15minDE.setStatus("current")
_IntervalPhysConv15minCV_Type = Counter64String
_IntervalPhysConv15minCV_Object = MibTableColumn
intervalPhysConv15minCV = _IntervalPhysConv15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50, 1, 4),
    _IntervalPhysConv15minCV_Type()
)
intervalPhysConv15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv15minCV.setStatus("current")
_IntervalPhysConv15minValidFlag_Type = TruthValue
_IntervalPhysConv15minValidFlag_Object = MibTableColumn
intervalPhysConv15minValidFlag = _IntervalPhysConv15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50, 1, 5),
    _IntervalPhysConv15minValidFlag_Type()
)
intervalPhysConv15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv15minValidFlag.setStatus("current")
_IntervalPhysConv15minTimeStamp_Type = DateAndTime
_IntervalPhysConv15minTimeStamp_Object = MibTableColumn
intervalPhysConv15minTimeStamp = _IntervalPhysConv15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 50, 1, 6),
    _IntervalPhysConv15minTimeStamp_Type()
)
intervalPhysConv15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv15minTimeStamp.setStatus("current")
_IntervalPhysConv1dayTable_Object = MibTable
intervalPhysConv1dayTable = _IntervalPhysConv1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51)
)
if mibBuilder.loadTexts:
    intervalPhysConv1dayTable.setStatus("current")
_IntervalPhysConv1dayEntry_Object = MibTableRow
intervalPhysConv1dayEntry = _IntervalPhysConv1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51, 1)
)
intervalPhysConv1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConv1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConv1dayEntry.setStatus("current")


class _IntervalPhysConv1dayNumber_Type(Integer32):
    """Custom type intervalPhysConv1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysConv1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysConv1dayNumber_Object = MibTableColumn
intervalPhysConv1dayNumber = _IntervalPhysConv1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51, 1, 1),
    _IntervalPhysConv1dayNumber_Type()
)
intervalPhysConv1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConv1dayNumber.setStatus("current")
_IntervalPhysConv1dayES_Type = Unsigned32
_IntervalPhysConv1dayES_Object = MibTableColumn
intervalPhysConv1dayES = _IntervalPhysConv1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51, 1, 2),
    _IntervalPhysConv1dayES_Type()
)
intervalPhysConv1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv1dayES.setStatus("current")
_IntervalPhysConv1dayDE_Type = Unsigned32
_IntervalPhysConv1dayDE_Object = MibTableColumn
intervalPhysConv1dayDE = _IntervalPhysConv1dayDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51, 1, 3),
    _IntervalPhysConv1dayDE_Type()
)
intervalPhysConv1dayDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv1dayDE.setStatus("current")
_IntervalPhysConv1dayCV_Type = Counter64String
_IntervalPhysConv1dayCV_Object = MibTableColumn
intervalPhysConv1dayCV = _IntervalPhysConv1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51, 1, 4),
    _IntervalPhysConv1dayCV_Type()
)
intervalPhysConv1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv1dayCV.setStatus("current")
_IntervalPhysConv1dayValidFlag_Type = TruthValue
_IntervalPhysConv1dayValidFlag_Object = MibTableColumn
intervalPhysConv1dayValidFlag = _IntervalPhysConv1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51, 1, 5),
    _IntervalPhysConv1dayValidFlag_Type()
)
intervalPhysConv1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv1dayValidFlag.setStatus("current")
_IntervalPhysConv1dayTimeStamp_Type = DateAndTime
_IntervalPhysConv1dayTimeStamp_Object = MibTableColumn
intervalPhysConv1dayTimeStamp = _IntervalPhysConv1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 51, 1, 6),
    _IntervalPhysConv1dayTimeStamp_Type()
)
intervalPhysConv1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConv1dayTimeStamp.setStatus("current")
_CurrentEthRx15minTable_Object = MibTable
currentEthRx15minTable = _CurrentEthRx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52)
)
if mibBuilder.loadTexts:
    currentEthRx15minTable.setStatus("current")
_CurrentEthRx15minEntry_Object = MibTableRow
currentEthRx15minEntry = _CurrentEthRx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52, 1)
)
currentEthRx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthRx15minEntry.setStatus("current")
_CurrentEthRx15minGoodFrames_Type = Counter64String
_CurrentEthRx15minGoodFrames_Object = MibTableColumn
currentEthRx15minGoodFrames = _CurrentEthRx15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52, 1, 1),
    _CurrentEthRx15minGoodFrames_Type()
)
currentEthRx15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx15minGoodFrames.setStatus("current")
_CurrentEthRx15minPauseFrames_Type = Counter64String
_CurrentEthRx15minPauseFrames_Object = MibTableColumn
currentEthRx15minPauseFrames = _CurrentEthRx15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52, 1, 2),
    _CurrentEthRx15minPauseFrames_Type()
)
currentEthRx15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx15minPauseFrames.setStatus("current")
_CurrentEthRx15minCrcFrames_Type = Counter64String
_CurrentEthRx15minCrcFrames_Object = MibTableColumn
currentEthRx15minCrcFrames = _CurrentEthRx15minCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52, 1, 3),
    _CurrentEthRx15minCrcFrames_Type()
)
currentEthRx15minCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx15minCrcFrames.setStatus("current")
_CurrentEthRx15minDiscardedFrames_Type = Counter64String
_CurrentEthRx15minDiscardedFrames_Object = MibTableColumn
currentEthRx15minDiscardedFrames = _CurrentEthRx15minDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52, 1, 4),
    _CurrentEthRx15minDiscardedFrames_Type()
)
currentEthRx15minDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx15minDiscardedFrames.setStatus("current")
_CurrentEthRx15minBytes_Type = Counter64String
_CurrentEthRx15minBytes_Object = MibTableColumn
currentEthRx15minBytes = _CurrentEthRx15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52, 1, 5),
    _CurrentEthRx15minBytes_Type()
)
currentEthRx15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx15minBytes.setStatus("current")


class _CurrentEthRx15minElapsedTime_Type(Integer32):
    """Custom type currentEthRx15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthRx15minElapsedTime_Type.__name__ = "Integer32"
_CurrentEthRx15minElapsedTime_Object = MibTableColumn
currentEthRx15minElapsedTime = _CurrentEthRx15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 52, 1, 6),
    _CurrentEthRx15minElapsedTime_Type()
)
currentEthRx15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx15minElapsedTime.setStatus("current")
_CurrentEthRx1dayTable_Object = MibTable
currentEthRx1dayTable = _CurrentEthRx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53)
)
if mibBuilder.loadTexts:
    currentEthRx1dayTable.setStatus("current")
_CurrentEthRx1dayEntry_Object = MibTableRow
currentEthRx1dayEntry = _CurrentEthRx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53, 1)
)
currentEthRx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthRx1dayEntry.setStatus("current")
_CurrentEthRx1dayGoodFrames_Type = Counter64String
_CurrentEthRx1dayGoodFrames_Object = MibTableColumn
currentEthRx1dayGoodFrames = _CurrentEthRx1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53, 1, 1),
    _CurrentEthRx1dayGoodFrames_Type()
)
currentEthRx1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx1dayGoodFrames.setStatus("current")
_CurrentEthRx1dayPauseFrames_Type = Counter64String
_CurrentEthRx1dayPauseFrames_Object = MibTableColumn
currentEthRx1dayPauseFrames = _CurrentEthRx1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53, 1, 2),
    _CurrentEthRx1dayPauseFrames_Type()
)
currentEthRx1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx1dayPauseFrames.setStatus("current")
_CurrentEthRx1dayCrcFrames_Type = Counter64String
_CurrentEthRx1dayCrcFrames_Object = MibTableColumn
currentEthRx1dayCrcFrames = _CurrentEthRx1dayCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53, 1, 3),
    _CurrentEthRx1dayCrcFrames_Type()
)
currentEthRx1dayCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx1dayCrcFrames.setStatus("current")
_CurrentEthRx1dayDiscardedFrames_Type = Counter64String
_CurrentEthRx1dayDiscardedFrames_Object = MibTableColumn
currentEthRx1dayDiscardedFrames = _CurrentEthRx1dayDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53, 1, 4),
    _CurrentEthRx1dayDiscardedFrames_Type()
)
currentEthRx1dayDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx1dayDiscardedFrames.setStatus("current")
_CurrentEthRx1dayBytes_Type = Counter64String
_CurrentEthRx1dayBytes_Object = MibTableColumn
currentEthRx1dayBytes = _CurrentEthRx1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53, 1, 5),
    _CurrentEthRx1dayBytes_Type()
)
currentEthRx1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx1dayBytes.setStatus("current")


class _CurrentEthRx1dayElapsedTime_Type(Integer32):
    """Custom type currentEthRx1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthRx1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentEthRx1dayElapsedTime_Object = MibTableColumn
currentEthRx1dayElapsedTime = _CurrentEthRx1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 53, 1, 6),
    _CurrentEthRx1dayElapsedTime_Type()
)
currentEthRx1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx1dayElapsedTime.setStatus("current")
_IntervalEthRx15minTable_Object = MibTable
intervalEthRx15minTable = _IntervalEthRx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54)
)
if mibBuilder.loadTexts:
    intervalEthRx15minTable.setStatus("current")
_IntervalEthRx15minEntry_Object = MibTableRow
intervalEthRx15minEntry = _IntervalEthRx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1)
)
intervalEthRx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRx15minNumber"),
)
if mibBuilder.loadTexts:
    intervalEthRx15minEntry.setStatus("current")


class _IntervalEthRx15minNumber_Type(Integer32):
    """Custom type intervalEthRx15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalEthRx15minNumber_Type.__name__ = "Integer32"
_IntervalEthRx15minNumber_Object = MibTableColumn
intervalEthRx15minNumber = _IntervalEthRx15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 1),
    _IntervalEthRx15minNumber_Type()
)
intervalEthRx15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthRx15minNumber.setStatus("current")
_IntervalEthRx15minGoodFrames_Type = Counter64String
_IntervalEthRx15minGoodFrames_Object = MibTableColumn
intervalEthRx15minGoodFrames = _IntervalEthRx15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 2),
    _IntervalEthRx15minGoodFrames_Type()
)
intervalEthRx15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx15minGoodFrames.setStatus("current")
_IntervalEthRx15minPauseFrames_Type = Counter64String
_IntervalEthRx15minPauseFrames_Object = MibTableColumn
intervalEthRx15minPauseFrames = _IntervalEthRx15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 3),
    _IntervalEthRx15minPauseFrames_Type()
)
intervalEthRx15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx15minPauseFrames.setStatus("current")
_IntervalEthRx15minCrcFrames_Type = Counter64String
_IntervalEthRx15minCrcFrames_Object = MibTableColumn
intervalEthRx15minCrcFrames = _IntervalEthRx15minCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 4),
    _IntervalEthRx15minCrcFrames_Type()
)
intervalEthRx15minCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx15minCrcFrames.setStatus("current")
_IntervalEthRx15minDiscardedFrames_Type = Counter64String
_IntervalEthRx15minDiscardedFrames_Object = MibTableColumn
intervalEthRx15minDiscardedFrames = _IntervalEthRx15minDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 5),
    _IntervalEthRx15minDiscardedFrames_Type()
)
intervalEthRx15minDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx15minDiscardedFrames.setStatus("current")
_IntervalEthRx15minBytes_Type = Counter64String
_IntervalEthRx15minBytes_Object = MibTableColumn
intervalEthRx15minBytes = _IntervalEthRx15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 6),
    _IntervalEthRx15minBytes_Type()
)
intervalEthRx15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx15minBytes.setStatus("current")
_IntervalEthRx15minValidFlag_Type = TruthValue
_IntervalEthRx15minValidFlag_Object = MibTableColumn
intervalEthRx15minValidFlag = _IntervalEthRx15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 7),
    _IntervalEthRx15minValidFlag_Type()
)
intervalEthRx15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx15minValidFlag.setStatus("current")
_IntervalEthRx15minTimeStamp_Type = DateAndTime
_IntervalEthRx15minTimeStamp_Object = MibTableColumn
intervalEthRx15minTimeStamp = _IntervalEthRx15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 54, 1, 8),
    _IntervalEthRx15minTimeStamp_Type()
)
intervalEthRx15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx15minTimeStamp.setStatus("current")
_IntervalEthRx1dayTable_Object = MibTable
intervalEthRx1dayTable = _IntervalEthRx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55)
)
if mibBuilder.loadTexts:
    intervalEthRx1dayTable.setStatus("current")
_IntervalEthRx1dayEntry_Object = MibTableRow
intervalEthRx1dayEntry = _IntervalEthRx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1)
)
intervalEthRx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRx1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalEthRx1dayEntry.setStatus("current")


class _IntervalEthRx1dayNumber_Type(Integer32):
    """Custom type intervalEthRx1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalEthRx1dayNumber_Type.__name__ = "Integer32"
_IntervalEthRx1dayNumber_Object = MibTableColumn
intervalEthRx1dayNumber = _IntervalEthRx1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 1),
    _IntervalEthRx1dayNumber_Type()
)
intervalEthRx1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthRx1dayNumber.setStatus("current")
_IntervalEthRx1dayGoodFrames_Type = Counter64String
_IntervalEthRx1dayGoodFrames_Object = MibTableColumn
intervalEthRx1dayGoodFrames = _IntervalEthRx1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 2),
    _IntervalEthRx1dayGoodFrames_Type()
)
intervalEthRx1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx1dayGoodFrames.setStatus("current")
_IntervalEthRx1dayPauseFrames_Type = Counter64String
_IntervalEthRx1dayPauseFrames_Object = MibTableColumn
intervalEthRx1dayPauseFrames = _IntervalEthRx1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 3),
    _IntervalEthRx1dayPauseFrames_Type()
)
intervalEthRx1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx1dayPauseFrames.setStatus("current")
_IntervalEthRx1dayCrcFrames_Type = Counter64String
_IntervalEthRx1dayCrcFrames_Object = MibTableColumn
intervalEthRx1dayCrcFrames = _IntervalEthRx1dayCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 4),
    _IntervalEthRx1dayCrcFrames_Type()
)
intervalEthRx1dayCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx1dayCrcFrames.setStatus("current")
_IntervalEthRx1dayDiscardedFrames_Type = Counter64String
_IntervalEthRx1dayDiscardedFrames_Object = MibTableColumn
intervalEthRx1dayDiscardedFrames = _IntervalEthRx1dayDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 5),
    _IntervalEthRx1dayDiscardedFrames_Type()
)
intervalEthRx1dayDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx1dayDiscardedFrames.setStatus("current")
_IntervalEthRx1dayBytes_Type = Counter64String
_IntervalEthRx1dayBytes_Object = MibTableColumn
intervalEthRx1dayBytes = _IntervalEthRx1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 6),
    _IntervalEthRx1dayBytes_Type()
)
intervalEthRx1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx1dayBytes.setStatus("current")
_IntervalEthRx1dayValidFlag_Type = TruthValue
_IntervalEthRx1dayValidFlag_Object = MibTableColumn
intervalEthRx1dayValidFlag = _IntervalEthRx1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 7),
    _IntervalEthRx1dayValidFlag_Type()
)
intervalEthRx1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx1dayValidFlag.setStatus("current")
_IntervalEthRx1dayTimeStamp_Type = DateAndTime
_IntervalEthRx1dayTimeStamp_Object = MibTableColumn
intervalEthRx1dayTimeStamp = _IntervalEthRx1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 55, 1, 8),
    _IntervalEthRx1dayTimeStamp_Type()
)
intervalEthRx1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx1dayTimeStamp.setStatus("current")
_CurrentEthTx15minTable_Object = MibTable
currentEthTx15minTable = _CurrentEthTx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 56)
)
if mibBuilder.loadTexts:
    currentEthTx15minTable.setStatus("current")
_CurrentEthTx15minEntry_Object = MibTableRow
currentEthTx15minEntry = _CurrentEthTx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 56, 1)
)
currentEthTx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthTx15minEntry.setStatus("current")
_CurrentEthTx15minGoodFramesx_Type = Counter64String
_CurrentEthTx15minGoodFramesx_Object = MibTableColumn
currentEthTx15minGoodFramesx = _CurrentEthTx15minGoodFramesx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 56, 1, 1),
    _CurrentEthTx15minGoodFramesx_Type()
)
currentEthTx15minGoodFramesx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx15minGoodFramesx.setStatus("current")
_CurrentEthTx15minPauseFrames_Type = Counter64String
_CurrentEthTx15minPauseFrames_Object = MibTableColumn
currentEthTx15minPauseFrames = _CurrentEthTx15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 56, 1, 2),
    _CurrentEthTx15minPauseFrames_Type()
)
currentEthTx15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx15minPauseFrames.setStatus("current")
_CurrentEthTx15minBytes_Type = Counter64String
_CurrentEthTx15minBytes_Object = MibTableColumn
currentEthTx15minBytes = _CurrentEthTx15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 56, 1, 3),
    _CurrentEthTx15minBytes_Type()
)
currentEthTx15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx15minBytes.setStatus("current")
_CurrentEthTx15minCrcFramesEgress_Type = Counter64String
_CurrentEthTx15minCrcFramesEgress_Object = MibTableColumn
currentEthTx15minCrcFramesEgress = _CurrentEthTx15minCrcFramesEgress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 56, 1, 4),
    _CurrentEthTx15minCrcFramesEgress_Type()
)
currentEthTx15minCrcFramesEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx15minCrcFramesEgress.setStatus("current")


class _CurrentEthTx15minElapsedTime_Type(Integer32):
    """Custom type currentEthTx15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthTx15minElapsedTime_Type.__name__ = "Integer32"
_CurrentEthTx15minElapsedTime_Object = MibTableColumn
currentEthTx15minElapsedTime = _CurrentEthTx15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 56, 1, 5),
    _CurrentEthTx15minElapsedTime_Type()
)
currentEthTx15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx15minElapsedTime.setStatus("current")
_CurrentEthTx1dayTable_Object = MibTable
currentEthTx1dayTable = _CurrentEthTx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 57)
)
if mibBuilder.loadTexts:
    currentEthTx1dayTable.setStatus("current")
_CurrentEthTx1dayEntry_Object = MibTableRow
currentEthTx1dayEntry = _CurrentEthTx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 57, 1)
)
currentEthTx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthTx1dayEntry.setStatus("current")
_CurrentEthTx1dayGoodFramesx_Type = Counter64String
_CurrentEthTx1dayGoodFramesx_Object = MibTableColumn
currentEthTx1dayGoodFramesx = _CurrentEthTx1dayGoodFramesx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 57, 1, 1),
    _CurrentEthTx1dayGoodFramesx_Type()
)
currentEthTx1dayGoodFramesx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx1dayGoodFramesx.setStatus("current")
_CurrentEthTx1dayPauseFrames_Type = Counter64String
_CurrentEthTx1dayPauseFrames_Object = MibTableColumn
currentEthTx1dayPauseFrames = _CurrentEthTx1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 57, 1, 2),
    _CurrentEthTx1dayPauseFrames_Type()
)
currentEthTx1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx1dayPauseFrames.setStatus("current")
_CurrentEthTx1dayBytes_Type = Counter64String
_CurrentEthTx1dayBytes_Object = MibTableColumn
currentEthTx1dayBytes = _CurrentEthTx1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 57, 1, 3),
    _CurrentEthTx1dayBytes_Type()
)
currentEthTx1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx1dayBytes.setStatus("current")
_CurrentEthTx1dayCrcFramesEgress_Type = Counter64String
_CurrentEthTx1dayCrcFramesEgress_Object = MibTableColumn
currentEthTx1dayCrcFramesEgress = _CurrentEthTx1dayCrcFramesEgress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 57, 1, 4),
    _CurrentEthTx1dayCrcFramesEgress_Type()
)
currentEthTx1dayCrcFramesEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx1dayCrcFramesEgress.setStatus("current")


class _CurrentEthTx1dayElapsedTime_Type(Integer32):
    """Custom type currentEthTx1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthTx1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentEthTx1dayElapsedTime_Object = MibTableColumn
currentEthTx1dayElapsedTime = _CurrentEthTx1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 57, 1, 5),
    _CurrentEthTx1dayElapsedTime_Type()
)
currentEthTx1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthTx1dayElapsedTime.setStatus("current")
_IntervalEthTx15minTable_Object = MibTable
intervalEthTx15minTable = _IntervalEthTx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58)
)
if mibBuilder.loadTexts:
    intervalEthTx15minTable.setStatus("current")
_IntervalEthTx15minEntry_Object = MibTableRow
intervalEthTx15minEntry = _IntervalEthTx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1)
)
intervalEthTx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthTx15minNumber"),
)
if mibBuilder.loadTexts:
    intervalEthTx15minEntry.setStatus("current")


class _IntervalEthTx15minNumber_Type(Integer32):
    """Custom type intervalEthTx15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalEthTx15minNumber_Type.__name__ = "Integer32"
_IntervalEthTx15minNumber_Object = MibTableColumn
intervalEthTx15minNumber = _IntervalEthTx15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1, 1),
    _IntervalEthTx15minNumber_Type()
)
intervalEthTx15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthTx15minNumber.setStatus("current")
_IntervalEthTx15minGoodFramesx_Type = Counter64String
_IntervalEthTx15minGoodFramesx_Object = MibTableColumn
intervalEthTx15minGoodFramesx = _IntervalEthTx15minGoodFramesx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1, 2),
    _IntervalEthTx15minGoodFramesx_Type()
)
intervalEthTx15minGoodFramesx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx15minGoodFramesx.setStatus("current")
_IntervalEthTx15minPauseFrames_Type = Counter64String
_IntervalEthTx15minPauseFrames_Object = MibTableColumn
intervalEthTx15minPauseFrames = _IntervalEthTx15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1, 3),
    _IntervalEthTx15minPauseFrames_Type()
)
intervalEthTx15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx15minPauseFrames.setStatus("current")
_IntervalEthTx15minBytes_Type = Counter64String
_IntervalEthTx15minBytes_Object = MibTableColumn
intervalEthTx15minBytes = _IntervalEthTx15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1, 4),
    _IntervalEthTx15minBytes_Type()
)
intervalEthTx15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx15minBytes.setStatus("current")
_IntervalEthTx15minCrcFramesEgress_Type = Counter64String
_IntervalEthTx15minCrcFramesEgress_Object = MibTableColumn
intervalEthTx15minCrcFramesEgress = _IntervalEthTx15minCrcFramesEgress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1, 5),
    _IntervalEthTx15minCrcFramesEgress_Type()
)
intervalEthTx15minCrcFramesEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx15minCrcFramesEgress.setStatus("current")
_IntervalEthTx15minValidFlag_Type = TruthValue
_IntervalEthTx15minValidFlag_Object = MibTableColumn
intervalEthTx15minValidFlag = _IntervalEthTx15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1, 6),
    _IntervalEthTx15minValidFlag_Type()
)
intervalEthTx15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx15minValidFlag.setStatus("current")
_IntervalEthTx15minTimeStamp_Type = DateAndTime
_IntervalEthTx15minTimeStamp_Object = MibTableColumn
intervalEthTx15minTimeStamp = _IntervalEthTx15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 58, 1, 7),
    _IntervalEthTx15minTimeStamp_Type()
)
intervalEthTx15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx15minTimeStamp.setStatus("current")
_IntervalEthTx1dayTable_Object = MibTable
intervalEthTx1dayTable = _IntervalEthTx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59)
)
if mibBuilder.loadTexts:
    intervalEthTx1dayTable.setStatus("current")
_IntervalEthTx1dayEntry_Object = MibTableRow
intervalEthTx1dayEntry = _IntervalEthTx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1)
)
intervalEthTx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthTx1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalEthTx1dayEntry.setStatus("current")


class _IntervalEthTx1dayNumber_Type(Integer32):
    """Custom type intervalEthTx1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalEthTx1dayNumber_Type.__name__ = "Integer32"
_IntervalEthTx1dayNumber_Object = MibTableColumn
intervalEthTx1dayNumber = _IntervalEthTx1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1, 1),
    _IntervalEthTx1dayNumber_Type()
)
intervalEthTx1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthTx1dayNumber.setStatus("current")
_IntervalEthTx1dayGoodFramesx_Type = Counter64String
_IntervalEthTx1dayGoodFramesx_Object = MibTableColumn
intervalEthTx1dayGoodFramesx = _IntervalEthTx1dayGoodFramesx_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1, 2),
    _IntervalEthTx1dayGoodFramesx_Type()
)
intervalEthTx1dayGoodFramesx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx1dayGoodFramesx.setStatus("current")
_IntervalEthTx1dayPauseFrames_Type = Counter64String
_IntervalEthTx1dayPauseFrames_Object = MibTableColumn
intervalEthTx1dayPauseFrames = _IntervalEthTx1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1, 3),
    _IntervalEthTx1dayPauseFrames_Type()
)
intervalEthTx1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx1dayPauseFrames.setStatus("current")
_IntervalEthTx1dayBytes_Type = Counter64String
_IntervalEthTx1dayBytes_Object = MibTableColumn
intervalEthTx1dayBytes = _IntervalEthTx1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1, 4),
    _IntervalEthTx1dayBytes_Type()
)
intervalEthTx1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx1dayBytes.setStatus("current")
_IntervalEthTx1dayCrcFramesEgress_Type = Counter64String
_IntervalEthTx1dayCrcFramesEgress_Object = MibTableColumn
intervalEthTx1dayCrcFramesEgress = _IntervalEthTx1dayCrcFramesEgress_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1, 5),
    _IntervalEthTx1dayCrcFramesEgress_Type()
)
intervalEthTx1dayCrcFramesEgress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx1dayCrcFramesEgress.setStatus("current")
_IntervalEthTx1dayValidFlag_Type = TruthValue
_IntervalEthTx1dayValidFlag_Object = MibTableColumn
intervalEthTx1dayValidFlag = _IntervalEthTx1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1, 6),
    _IntervalEthTx1dayValidFlag_Type()
)
intervalEthTx1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx1dayValidFlag.setStatus("current")
_IntervalEthTx1dayTimeStamp_Type = DateAndTime
_IntervalEthTx1dayTimeStamp_Object = MibTableColumn
intervalEthTx1dayTimeStamp = _IntervalEthTx1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 59, 1, 7),
    _IntervalEthTx1dayTimeStamp_Type()
)
intervalEthTx1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthTx1dayTimeStamp.setStatus("current")
_CurrentGfp15minTable_Object = MibTable
currentGfp15minTable = _CurrentGfp15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 60)
)
if mibBuilder.loadTexts:
    currentGfp15minTable.setStatus("deprecated")
_CurrentGfp15minEntry_Object = MibTableRow
currentGfp15minEntry = _CurrentGfp15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 60, 1)
)
currentGfp15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfp15minEntry.setStatus("deprecated")
_CurrentGfp15minCoreHecCorrectedFrames_Type = Unsigned32
_CurrentGfp15minCoreHecCorrectedFrames_Object = MibTableColumn
currentGfp15minCoreHecCorrectedFrames = _CurrentGfp15minCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 60, 1, 1),
    _CurrentGfp15minCoreHecCorrectedFrames_Type()
)
currentGfp15minCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp15minCoreHecCorrectedFrames.setStatus("deprecated")
_CurrentGfp15minTypeHecCorrectedFrames_Type = Unsigned32
_CurrentGfp15minTypeHecCorrectedFrames_Object = MibTableColumn
currentGfp15minTypeHecCorrectedFrames = _CurrentGfp15minTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 60, 1, 2),
    _CurrentGfp15minTypeHecCorrectedFrames_Type()
)
currentGfp15minTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp15minTypeHecCorrectedFrames.setStatus("deprecated")
_CurrentGfp15minTypeHecDiscardedFrames_Type = Unsigned32
_CurrentGfp15minTypeHecDiscardedFrames_Object = MibTableColumn
currentGfp15minTypeHecDiscardedFrames = _CurrentGfp15minTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 60, 1, 3),
    _CurrentGfp15minTypeHecDiscardedFrames_Type()
)
currentGfp15minTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp15minTypeHecDiscardedFrames.setStatus("deprecated")


class _CurrentGfp15minElapsedTime_Type(Integer32):
    """Custom type currentGfp15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfp15minElapsedTime_Type.__name__ = "Integer32"
_CurrentGfp15minElapsedTime_Object = MibTableColumn
currentGfp15minElapsedTime = _CurrentGfp15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 60, 1, 4),
    _CurrentGfp15minElapsedTime_Type()
)
currentGfp15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp15minElapsedTime.setStatus("deprecated")
_CurrentGfp1dayTable_Object = MibTable
currentGfp1dayTable = _CurrentGfp1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 61)
)
if mibBuilder.loadTexts:
    currentGfp1dayTable.setStatus("deprecated")
_CurrentGfp1dayEntry_Object = MibTableRow
currentGfp1dayEntry = _CurrentGfp1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 61, 1)
)
currentGfp1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfp1dayEntry.setStatus("deprecated")
_CurrentGfp1dayCoreHecCorrectedFrames_Type = Unsigned32
_CurrentGfp1dayCoreHecCorrectedFrames_Object = MibTableColumn
currentGfp1dayCoreHecCorrectedFrames = _CurrentGfp1dayCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 61, 1, 1),
    _CurrentGfp1dayCoreHecCorrectedFrames_Type()
)
currentGfp1dayCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp1dayCoreHecCorrectedFrames.setStatus("deprecated")
_CurrentGfp1dayTypeHecCorrectedFrames_Type = Unsigned32
_CurrentGfp1dayTypeHecCorrectedFrames_Object = MibTableColumn
currentGfp1dayTypeHecCorrectedFrames = _CurrentGfp1dayTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 61, 1, 2),
    _CurrentGfp1dayTypeHecCorrectedFrames_Type()
)
currentGfp1dayTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp1dayTypeHecCorrectedFrames.setStatus("deprecated")
_CurrentGfp1dayTypeHecDiscardedFrames_Type = Unsigned32
_CurrentGfp1dayTypeHecDiscardedFrames_Object = MibTableColumn
currentGfp1dayTypeHecDiscardedFrames = _CurrentGfp1dayTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 61, 1, 3),
    _CurrentGfp1dayTypeHecDiscardedFrames_Type()
)
currentGfp1dayTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp1dayTypeHecDiscardedFrames.setStatus("deprecated")


class _CurrentGfp1dayElapsedTime_Type(Integer32):
    """Custom type currentGfp1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfp1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentGfp1dayElapsedTime_Object = MibTableColumn
currentGfp1dayElapsedTime = _CurrentGfp1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 61, 1, 4),
    _CurrentGfp1dayElapsedTime_Type()
)
currentGfp1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfp1dayElapsedTime.setStatus("deprecated")
_IntervalGfp15minTable_Object = MibTable
intervalGfp15minTable = _IntervalGfp15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62)
)
if mibBuilder.loadTexts:
    intervalGfp15minTable.setStatus("deprecated")
_IntervalGfp15minEntry_Object = MibTableRow
intervalGfp15minEntry = _IntervalGfp15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62, 1)
)
intervalGfp15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfp15minNumber"),
)
if mibBuilder.loadTexts:
    intervalGfp15minEntry.setStatus("deprecated")


class _IntervalGfp15minNumber_Type(Integer32):
    """Custom type intervalGfp15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalGfp15minNumber_Type.__name__ = "Integer32"
_IntervalGfp15minNumber_Object = MibTableColumn
intervalGfp15minNumber = _IntervalGfp15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62, 1, 1),
    _IntervalGfp15minNumber_Type()
)
intervalGfp15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfp15minNumber.setStatus("deprecated")
_IntervalGfp15minCoreHecCorrectedFrames_Type = Unsigned32
_IntervalGfp15minCoreHecCorrectedFrames_Object = MibTableColumn
intervalGfp15minCoreHecCorrectedFrames = _IntervalGfp15minCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62, 1, 2),
    _IntervalGfp15minCoreHecCorrectedFrames_Type()
)
intervalGfp15minCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp15minCoreHecCorrectedFrames.setStatus("deprecated")
_IntervalGfp15minTypeHecCorrectedFrames_Type = Unsigned32
_IntervalGfp15minTypeHecCorrectedFrames_Object = MibTableColumn
intervalGfp15minTypeHecCorrectedFrames = _IntervalGfp15minTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62, 1, 3),
    _IntervalGfp15minTypeHecCorrectedFrames_Type()
)
intervalGfp15minTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp15minTypeHecCorrectedFrames.setStatus("deprecated")
_IntervalGfp15minTypeHecDiscardedFrames_Type = Unsigned32
_IntervalGfp15minTypeHecDiscardedFrames_Object = MibTableColumn
intervalGfp15minTypeHecDiscardedFrames = _IntervalGfp15minTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62, 1, 4),
    _IntervalGfp15minTypeHecDiscardedFrames_Type()
)
intervalGfp15minTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp15minTypeHecDiscardedFrames.setStatus("deprecated")
_IntervalGfp15minValidFlag_Type = TruthValue
_IntervalGfp15minValidFlag_Object = MibTableColumn
intervalGfp15minValidFlag = _IntervalGfp15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62, 1, 5),
    _IntervalGfp15minValidFlag_Type()
)
intervalGfp15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp15minValidFlag.setStatus("deprecated")
_IntervalGfp15minTimeStamp_Type = DateAndTime
_IntervalGfp15minTimeStamp_Object = MibTableColumn
intervalGfp15minTimeStamp = _IntervalGfp15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 62, 1, 6),
    _IntervalGfp15minTimeStamp_Type()
)
intervalGfp15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp15minTimeStamp.setStatus("deprecated")
_IntervalGfp1dayTable_Object = MibTable
intervalGfp1dayTable = _IntervalGfp1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63)
)
if mibBuilder.loadTexts:
    intervalGfp1dayTable.setStatus("deprecated")
_IntervalGfp1dayEntry_Object = MibTableRow
intervalGfp1dayEntry = _IntervalGfp1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63, 1)
)
intervalGfp1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfp1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalGfp1dayEntry.setStatus("deprecated")


class _IntervalGfp1dayNumber_Type(Integer32):
    """Custom type intervalGfp1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalGfp1dayNumber_Type.__name__ = "Integer32"
_IntervalGfp1dayNumber_Object = MibTableColumn
intervalGfp1dayNumber = _IntervalGfp1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63, 1, 1),
    _IntervalGfp1dayNumber_Type()
)
intervalGfp1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfp1dayNumber.setStatus("deprecated")
_IntervalGfp1dayCoreHecCorrectedFrames_Type = Unsigned32
_IntervalGfp1dayCoreHecCorrectedFrames_Object = MibTableColumn
intervalGfp1dayCoreHecCorrectedFrames = _IntervalGfp1dayCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63, 1, 2),
    _IntervalGfp1dayCoreHecCorrectedFrames_Type()
)
intervalGfp1dayCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp1dayCoreHecCorrectedFrames.setStatus("deprecated")
_IntervalGfp1dayTypeHecCorrectedFrames_Type = Unsigned32
_IntervalGfp1dayTypeHecCorrectedFrames_Object = MibTableColumn
intervalGfp1dayTypeHecCorrectedFrames = _IntervalGfp1dayTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63, 1, 3),
    _IntervalGfp1dayTypeHecCorrectedFrames_Type()
)
intervalGfp1dayTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp1dayTypeHecCorrectedFrames.setStatus("deprecated")
_IntervalGfp1dayTypeHecDiscardedFrames_Type = Unsigned32
_IntervalGfp1dayTypeHecDiscardedFrames_Object = MibTableColumn
intervalGfp1dayTypeHecDiscardedFrames = _IntervalGfp1dayTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63, 1, 4),
    _IntervalGfp1dayTypeHecDiscardedFrames_Type()
)
intervalGfp1dayTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp1dayTypeHecDiscardedFrames.setStatus("deprecated")
_IntervalGfp1dayValidFlag_Type = TruthValue
_IntervalGfp1dayValidFlag_Object = MibTableColumn
intervalGfp1dayValidFlag = _IntervalGfp1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63, 1, 5),
    _IntervalGfp1dayValidFlag_Type()
)
intervalGfp1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp1dayValidFlag.setStatus("deprecated")
_IntervalGfp1dayTimeStamp_Type = DateAndTime
_IntervalGfp1dayTimeStamp_Object = MibTableColumn
intervalGfp1dayTimeStamp = _IntervalGfp1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 63, 1, 6),
    _IntervalGfp1dayTimeStamp_Type()
)
intervalGfp1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfp1dayTimeStamp.setStatus("deprecated")
_CurrentOtuFec15minTable_Object = MibTable
currentOtuFec15minTable = _CurrentOtuFec15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68)
)
if mibBuilder.loadTexts:
    currentOtuFec15minTable.setStatus("current")
_CurrentOtuFec15minEntry_Object = MibTableRow
currentOtuFec15minEntry = _CurrentOtuFec15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68, 1)
)
currentOtuFec15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOtuFec15minEntry.setStatus("current")
_CurrentOtuFec15minES_Type = Unsigned32
_CurrentOtuFec15minES_Object = MibTableColumn
currentOtuFec15minES = _CurrentOtuFec15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68, 1, 1),
    _CurrentOtuFec15minES_Type()
)
currentOtuFec15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minES.setStatus("current")
_CurrentOtuFec15minSES_Type = Unsigned32
_CurrentOtuFec15minSES_Object = MibTableColumn
currentOtuFec15minSES = _CurrentOtuFec15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68, 1, 2),
    _CurrentOtuFec15minSES_Type()
)
currentOtuFec15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minSES.setStatus("current")
_CurrentOtuFec15minCE_Type = Counter64String
_CurrentOtuFec15minCE_Object = MibTableColumn
currentOtuFec15minCE = _CurrentOtuFec15minCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68, 1, 3),
    _CurrentOtuFec15minCE_Type()
)
currentOtuFec15minCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minCE.setStatus("current")
_CurrentOtuFec15minUBE_Type = Counter64String
_CurrentOtuFec15minUBE_Object = MibTableColumn
currentOtuFec15minUBE = _CurrentOtuFec15minUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68, 1, 4),
    _CurrentOtuFec15minUBE_Type()
)
currentOtuFec15minUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minUBE.setStatus("current")


class _CurrentOtuFec15minElapsedTime_Type(Integer32):
    """Custom type currentOtuFec15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOtuFec15minElapsedTime_Type.__name__ = "Integer32"
_CurrentOtuFec15minElapsedTime_Object = MibTableColumn
currentOtuFec15minElapsedTime = _CurrentOtuFec15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68, 1, 5),
    _CurrentOtuFec15minElapsedTime_Type()
)
currentOtuFec15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minElapsedTime.setStatus("current")
_CurrentOtuFec15minBERCE_Type = Counter64String
_CurrentOtuFec15minBERCE_Object = MibTableColumn
currentOtuFec15minBERCE = _CurrentOtuFec15minBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 68, 1, 6),
    _CurrentOtuFec15minBERCE_Type()
)
currentOtuFec15minBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minBERCE.setStatus("current")
if mibBuilder.loadTexts:
    currentOtuFec15minBERCE.setUnits("1.0E-18")
_CurrentOtuFec1dayTable_Object = MibTable
currentOtuFec1dayTable = _CurrentOtuFec1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69)
)
if mibBuilder.loadTexts:
    currentOtuFec1dayTable.setStatus("current")
_CurrentOtuFec1dayEntry_Object = MibTableRow
currentOtuFec1dayEntry = _CurrentOtuFec1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69, 1)
)
currentOtuFec1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOtuFec1dayEntry.setStatus("current")
_CurrentOtuFec1dayES_Type = Unsigned32
_CurrentOtuFec1dayES_Object = MibTableColumn
currentOtuFec1dayES = _CurrentOtuFec1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69, 1, 1),
    _CurrentOtuFec1dayES_Type()
)
currentOtuFec1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayES.setStatus("current")
_CurrentOtuFec1daySES_Type = Unsigned32
_CurrentOtuFec1daySES_Object = MibTableColumn
currentOtuFec1daySES = _CurrentOtuFec1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69, 1, 2),
    _CurrentOtuFec1daySES_Type()
)
currentOtuFec1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1daySES.setStatus("current")
_CurrentOtuFec1dayCE_Type = Counter64String
_CurrentOtuFec1dayCE_Object = MibTableColumn
currentOtuFec1dayCE = _CurrentOtuFec1dayCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69, 1, 3),
    _CurrentOtuFec1dayCE_Type()
)
currentOtuFec1dayCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayCE.setStatus("current")
_CurrentOtuFec1dayUBE_Type = Counter64String
_CurrentOtuFec1dayUBE_Object = MibTableColumn
currentOtuFec1dayUBE = _CurrentOtuFec1dayUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69, 1, 4),
    _CurrentOtuFec1dayUBE_Type()
)
currentOtuFec1dayUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayUBE.setStatus("current")


class _CurrentOtuFec1dayElapsedTime_Type(Integer32):
    """Custom type currentOtuFec1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOtuFec1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentOtuFec1dayElapsedTime_Object = MibTableColumn
currentOtuFec1dayElapsedTime = _CurrentOtuFec1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69, 1, 5),
    _CurrentOtuFec1dayElapsedTime_Type()
)
currentOtuFec1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayElapsedTime.setStatus("current")
_CurrentOtuFec1dayBERCE_Type = Counter64String
_CurrentOtuFec1dayBERCE_Object = MibTableColumn
currentOtuFec1dayBERCE = _CurrentOtuFec1dayBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 69, 1, 6),
    _CurrentOtuFec1dayBERCE_Type()
)
currentOtuFec1dayBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayBERCE.setStatus("current")
if mibBuilder.loadTexts:
    currentOtuFec1dayBERCE.setUnits("1.0E-18")
_IntervalOtuFec15minTable_Object = MibTable
intervalOtuFec15minTable = _IntervalOtuFec15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70)
)
if mibBuilder.loadTexts:
    intervalOtuFec15minTable.setStatus("current")
_IntervalOtuFec15minEntry_Object = MibTableRow
intervalOtuFec15minEntry = _IntervalOtuFec15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1)
)
intervalOtuFec15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOtuFec15minNumber"),
)
if mibBuilder.loadTexts:
    intervalOtuFec15minEntry.setStatus("current")


class _IntervalOtuFec15minNumber_Type(Integer32):
    """Custom type intervalOtuFec15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalOtuFec15minNumber_Type.__name__ = "Integer32"
_IntervalOtuFec15minNumber_Object = MibTableColumn
intervalOtuFec15minNumber = _IntervalOtuFec15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 1),
    _IntervalOtuFec15minNumber_Type()
)
intervalOtuFec15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOtuFec15minNumber.setStatus("current")
_IntervalOtuFec15minES_Type = Unsigned32
_IntervalOtuFec15minES_Object = MibTableColumn
intervalOtuFec15minES = _IntervalOtuFec15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 2),
    _IntervalOtuFec15minES_Type()
)
intervalOtuFec15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minES.setStatus("current")
_IntervalOtuFec15minSES_Type = Unsigned32
_IntervalOtuFec15minSES_Object = MibTableColumn
intervalOtuFec15minSES = _IntervalOtuFec15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 3),
    _IntervalOtuFec15minSES_Type()
)
intervalOtuFec15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minSES.setStatus("current")
_IntervalOtuFec15minCE_Type = Counter64String
_IntervalOtuFec15minCE_Object = MibTableColumn
intervalOtuFec15minCE = _IntervalOtuFec15minCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 4),
    _IntervalOtuFec15minCE_Type()
)
intervalOtuFec15minCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minCE.setStatus("current")
_IntervalOtuFec15minUBE_Type = Counter64String
_IntervalOtuFec15minUBE_Object = MibTableColumn
intervalOtuFec15minUBE = _IntervalOtuFec15minUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 5),
    _IntervalOtuFec15minUBE_Type()
)
intervalOtuFec15minUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minUBE.setStatus("current")
_IntervalOtuFec15minValidFlag_Type = TruthValue
_IntervalOtuFec15minValidFlag_Object = MibTableColumn
intervalOtuFec15minValidFlag = _IntervalOtuFec15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 6),
    _IntervalOtuFec15minValidFlag_Type()
)
intervalOtuFec15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minValidFlag.setStatus("current")
_IntervalOtuFec15minTimeStamp_Type = DateAndTime
_IntervalOtuFec15minTimeStamp_Object = MibTableColumn
intervalOtuFec15minTimeStamp = _IntervalOtuFec15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 7),
    _IntervalOtuFec15minTimeStamp_Type()
)
intervalOtuFec15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minTimeStamp.setStatus("current")
_IntervalOtuFec15minBERCE_Type = Counter64String
_IntervalOtuFec15minBERCE_Object = MibTableColumn
intervalOtuFec15minBERCE = _IntervalOtuFec15minBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 70, 1, 8),
    _IntervalOtuFec15minBERCE_Type()
)
intervalOtuFec15minBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minBERCE.setStatus("current")
if mibBuilder.loadTexts:
    intervalOtuFec15minBERCE.setUnits("1.0E-18")
_IntervalOtuFec1dayTable_Object = MibTable
intervalOtuFec1dayTable = _IntervalOtuFec1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71)
)
if mibBuilder.loadTexts:
    intervalOtuFec1dayTable.setStatus("current")
_IntervalOtuFec1dayEntry_Object = MibTableRow
intervalOtuFec1dayEntry = _IntervalOtuFec1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1)
)
intervalOtuFec1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOtuFec1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalOtuFec1dayEntry.setStatus("current")


class _IntervalOtuFec1dayNumber_Type(Integer32):
    """Custom type intervalOtuFec1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalOtuFec1dayNumber_Type.__name__ = "Integer32"
_IntervalOtuFec1dayNumber_Object = MibTableColumn
intervalOtuFec1dayNumber = _IntervalOtuFec1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 1),
    _IntervalOtuFec1dayNumber_Type()
)
intervalOtuFec1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOtuFec1dayNumber.setStatus("current")
_IntervalOtuFec1dayES_Type = Unsigned32
_IntervalOtuFec1dayES_Object = MibTableColumn
intervalOtuFec1dayES = _IntervalOtuFec1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 2),
    _IntervalOtuFec1dayES_Type()
)
intervalOtuFec1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayES.setStatus("current")
_IntervalOtuFec1daySES_Type = Unsigned32
_IntervalOtuFec1daySES_Object = MibTableColumn
intervalOtuFec1daySES = _IntervalOtuFec1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 3),
    _IntervalOtuFec1daySES_Type()
)
intervalOtuFec1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1daySES.setStatus("current")
_IntervalOtuFec1dayCE_Type = Counter64String
_IntervalOtuFec1dayCE_Object = MibTableColumn
intervalOtuFec1dayCE = _IntervalOtuFec1dayCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 4),
    _IntervalOtuFec1dayCE_Type()
)
intervalOtuFec1dayCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayCE.setStatus("current")
_IntervalOtuFec1dayUBE_Type = Counter64String
_IntervalOtuFec1dayUBE_Object = MibTableColumn
intervalOtuFec1dayUBE = _IntervalOtuFec1dayUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 5),
    _IntervalOtuFec1dayUBE_Type()
)
intervalOtuFec1dayUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayUBE.setStatus("current")
_IntervalOtuFec1dayValidFlag_Type = TruthValue
_IntervalOtuFec1dayValidFlag_Object = MibTableColumn
intervalOtuFec1dayValidFlag = _IntervalOtuFec1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 6),
    _IntervalOtuFec1dayValidFlag_Type()
)
intervalOtuFec1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayValidFlag.setStatus("current")
_IntervalOtuFec1dayTimeStamp_Type = DateAndTime
_IntervalOtuFec1dayTimeStamp_Object = MibTableColumn
intervalOtuFec1dayTimeStamp = _IntervalOtuFec1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 7),
    _IntervalOtuFec1dayTimeStamp_Type()
)
intervalOtuFec1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayTimeStamp.setStatus("current")
_IntervalOtuFec1dayBERCE_Type = Counter64String
_IntervalOtuFec1dayBERCE_Object = MibTableColumn
intervalOtuFec1dayBERCE = _IntervalOtuFec1dayBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 71, 1, 8),
    _IntervalOtuFec1dayBERCE_Type()
)
intervalOtuFec1dayBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayBERCE.setStatus("current")
if mibBuilder.loadTexts:
    intervalOtuFec1dayBERCE.setUnits("1.0E-18")
_CurrentGfpt15minTable_Object = MibTable
currentGfpt15minTable = _CurrentGfpt15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 72)
)
if mibBuilder.loadTexts:
    currentGfpt15minTable.setStatus("current")
_CurrentGfpt15minEntry_Object = MibTableRow
currentGfpt15minEntry = _CurrentGfpt15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 72, 1)
)
currentGfpt15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpt15minEntry.setStatus("current")
_CurrentGfpt15minDiscardedSuperblocks_Type = Unsigned32
_CurrentGfpt15minDiscardedSuperblocks_Object = MibTableColumn
currentGfpt15minDiscardedSuperblocks = _CurrentGfpt15minDiscardedSuperblocks_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 72, 1, 1),
    _CurrentGfpt15minDiscardedSuperblocks_Type()
)
currentGfpt15minDiscardedSuperblocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpt15minDiscardedSuperblocks.setStatus("current")


class _CurrentGfpt15minElapsedTime_Type(Integer32):
    """Custom type currentGfpt15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpt15minElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpt15minElapsedTime_Object = MibTableColumn
currentGfpt15minElapsedTime = _CurrentGfpt15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 72, 1, 2),
    _CurrentGfpt15minElapsedTime_Type()
)
currentGfpt15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpt15minElapsedTime.setStatus("current")
_CurrentGfpt1dayTable_Object = MibTable
currentGfpt1dayTable = _CurrentGfpt1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 73)
)
if mibBuilder.loadTexts:
    currentGfpt1dayTable.setStatus("current")
_CurrentGfpt1dayEntry_Object = MibTableRow
currentGfpt1dayEntry = _CurrentGfpt1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 73, 1)
)
currentGfpt1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpt1dayEntry.setStatus("current")
_CurrentGfpt1dayDiscardedSuperblocks_Type = Unsigned32
_CurrentGfpt1dayDiscardedSuperblocks_Object = MibTableColumn
currentGfpt1dayDiscardedSuperblocks = _CurrentGfpt1dayDiscardedSuperblocks_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 73, 1, 1),
    _CurrentGfpt1dayDiscardedSuperblocks_Type()
)
currentGfpt1dayDiscardedSuperblocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpt1dayDiscardedSuperblocks.setStatus("current")


class _CurrentGfpt1dayElapsedTime_Type(Integer32):
    """Custom type currentGfpt1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpt1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpt1dayElapsedTime_Object = MibTableColumn
currentGfpt1dayElapsedTime = _CurrentGfpt1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 73, 1, 2),
    _CurrentGfpt1dayElapsedTime_Type()
)
currentGfpt1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpt1dayElapsedTime.setStatus("current")
_IntervalGfpt15minTable_Object = MibTable
intervalGfpt15minTable = _IntervalGfpt15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 74)
)
if mibBuilder.loadTexts:
    intervalGfpt15minTable.setStatus("current")
_IntervalGfpt15minEntry_Object = MibTableRow
intervalGfpt15minEntry = _IntervalGfpt15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 74, 1)
)
intervalGfpt15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpt15minNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpt15minEntry.setStatus("current")


class _IntervalGfpt15minNumber_Type(Integer32):
    """Custom type intervalGfpt15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalGfpt15minNumber_Type.__name__ = "Integer32"
_IntervalGfpt15minNumber_Object = MibTableColumn
intervalGfpt15minNumber = _IntervalGfpt15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 74, 1, 1),
    _IntervalGfpt15minNumber_Type()
)
intervalGfpt15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpt15minNumber.setStatus("current")
_IntervalGfpt15minDiscardedSuperblocks_Type = Unsigned32
_IntervalGfpt15minDiscardedSuperblocks_Object = MibTableColumn
intervalGfpt15minDiscardedSuperblocks = _IntervalGfpt15minDiscardedSuperblocks_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 74, 1, 2),
    _IntervalGfpt15minDiscardedSuperblocks_Type()
)
intervalGfpt15minDiscardedSuperblocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpt15minDiscardedSuperblocks.setStatus("current")
_IntervalGfpt15minValidFlag_Type = TruthValue
_IntervalGfpt15minValidFlag_Object = MibTableColumn
intervalGfpt15minValidFlag = _IntervalGfpt15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 74, 1, 3),
    _IntervalGfpt15minValidFlag_Type()
)
intervalGfpt15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpt15minValidFlag.setStatus("current")
_IntervalGfpt15minTimeStamp_Type = DateAndTime
_IntervalGfpt15minTimeStamp_Object = MibTableColumn
intervalGfpt15minTimeStamp = _IntervalGfpt15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 74, 1, 4),
    _IntervalGfpt15minTimeStamp_Type()
)
intervalGfpt15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpt15minTimeStamp.setStatus("current")
_IntervalGfpt1dayTable_Object = MibTable
intervalGfpt1dayTable = _IntervalGfpt1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 75)
)
if mibBuilder.loadTexts:
    intervalGfpt1dayTable.setStatus("current")
_IntervalGfpt1dayEntry_Object = MibTableRow
intervalGfpt1dayEntry = _IntervalGfpt1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 75, 1)
)
intervalGfpt1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpt1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpt1dayEntry.setStatus("current")


class _IntervalGfpt1dayNumber_Type(Integer32):
    """Custom type intervalGfpt1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalGfpt1dayNumber_Type.__name__ = "Integer32"
_IntervalGfpt1dayNumber_Object = MibTableColumn
intervalGfpt1dayNumber = _IntervalGfpt1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 75, 1, 1),
    _IntervalGfpt1dayNumber_Type()
)
intervalGfpt1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpt1dayNumber.setStatus("current")
_IntervalGfpt1dayDiscardedSuperblocks_Type = Unsigned32
_IntervalGfpt1dayDiscardedSuperblocks_Object = MibTableColumn
intervalGfpt1dayDiscardedSuperblocks = _IntervalGfpt1dayDiscardedSuperblocks_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 75, 1, 2),
    _IntervalGfpt1dayDiscardedSuperblocks_Type()
)
intervalGfpt1dayDiscardedSuperblocks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpt1dayDiscardedSuperblocks.setStatus("current")
_IntervalGfpt1dayValidFlag_Type = TruthValue
_IntervalGfpt1dayValidFlag_Object = MibTableColumn
intervalGfpt1dayValidFlag = _IntervalGfpt1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 75, 1, 3),
    _IntervalGfpt1dayValidFlag_Type()
)
intervalGfpt1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpt1dayValidFlag.setStatus("current")
_IntervalGfpt1dayTimeStamp_Type = DateAndTime
_IntervalGfpt1dayTimeStamp_Object = MibTableColumn
intervalGfpt1dayTimeStamp = _IntervalGfpt1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 75, 1, 4),
    _IntervalGfpt1dayTimeStamp_Type()
)
intervalGfpt1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpt1dayTimeStamp.setStatus("current")
_CurrentSubAggregate15minTable_Object = MibTable
currentSubAggregate15minTable = _CurrentSubAggregate15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 76)
)
if mibBuilder.loadTexts:
    currentSubAggregate15minTable.setStatus("current")
_CurrentSubAggregate15minEntry_Object = MibTableRow
currentSubAggregate15minEntry = _CurrentSubAggregate15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 76, 1)
)
currentSubAggregate15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSubAggregate15minEntry.setStatus("current")
_CurrentSubAggregate15minES_Type = Unsigned32
_CurrentSubAggregate15minES_Object = MibTableColumn
currentSubAggregate15minES = _CurrentSubAggregate15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 76, 1, 1),
    _CurrentSubAggregate15minES_Type()
)
currentSubAggregate15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate15minES.setStatus("current")
_CurrentSubAggregate15minSES_Type = Unsigned32
_CurrentSubAggregate15minSES_Object = MibTableColumn
currentSubAggregate15minSES = _CurrentSubAggregate15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 76, 1, 2),
    _CurrentSubAggregate15minSES_Type()
)
currentSubAggregate15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate15minSES.setStatus("current")


class _CurrentSubAggregate15minElapsedTime_Type(Integer32):
    """Custom type currentSubAggregate15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSubAggregate15minElapsedTime_Type.__name__ = "Integer32"
_CurrentSubAggregate15minElapsedTime_Object = MibTableColumn
currentSubAggregate15minElapsedTime = _CurrentSubAggregate15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 76, 1, 3),
    _CurrentSubAggregate15minElapsedTime_Type()
)
currentSubAggregate15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate15minElapsedTime.setStatus("current")
_CurrentSubAggregate15minCrc_Type = Unsigned32
_CurrentSubAggregate15minCrc_Object = MibTableColumn
currentSubAggregate15minCrc = _CurrentSubAggregate15minCrc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 76, 1, 4),
    _CurrentSubAggregate15minCrc_Type()
)
currentSubAggregate15minCrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate15minCrc.setStatus("current")
_CurrentSubAggregate1dayTable_Object = MibTable
currentSubAggregate1dayTable = _CurrentSubAggregate1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 77)
)
if mibBuilder.loadTexts:
    currentSubAggregate1dayTable.setStatus("current")
_CurrentSubAggregate1dayEntry_Object = MibTableRow
currentSubAggregate1dayEntry = _CurrentSubAggregate1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 77, 1)
)
currentSubAggregate1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentSubAggregate1dayEntry.setStatus("current")
_CurrentSubAggregate1dayES_Type = Unsigned32
_CurrentSubAggregate1dayES_Object = MibTableColumn
currentSubAggregate1dayES = _CurrentSubAggregate1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 77, 1, 1),
    _CurrentSubAggregate1dayES_Type()
)
currentSubAggregate1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate1dayES.setStatus("current")
_CurrentSubAggregate1daySES_Type = Unsigned32
_CurrentSubAggregate1daySES_Object = MibTableColumn
currentSubAggregate1daySES = _CurrentSubAggregate1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 77, 1, 2),
    _CurrentSubAggregate1daySES_Type()
)
currentSubAggregate1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate1daySES.setStatus("current")


class _CurrentSubAggregate1dayElapsedTime_Type(Integer32):
    """Custom type currentSubAggregate1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentSubAggregate1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentSubAggregate1dayElapsedTime_Object = MibTableColumn
currentSubAggregate1dayElapsedTime = _CurrentSubAggregate1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 77, 1, 3),
    _CurrentSubAggregate1dayElapsedTime_Type()
)
currentSubAggregate1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate1dayElapsedTime.setStatus("current")
_CurrentSubAggregate1dayCrc_Type = Unsigned32
_CurrentSubAggregate1dayCrc_Object = MibTableColumn
currentSubAggregate1dayCrc = _CurrentSubAggregate1dayCrc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 77, 1, 4),
    _CurrentSubAggregate1dayCrc_Type()
)
currentSubAggregate1dayCrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentSubAggregate1dayCrc.setStatus("current")
_IntervalSubAggregate15minTable_Object = MibTable
intervalSubAggregate15minTable = _IntervalSubAggregate15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78)
)
if mibBuilder.loadTexts:
    intervalSubAggregate15minTable.setStatus("current")
_IntervalSubAggregate15minEntry_Object = MibTableRow
intervalSubAggregate15minEntry = _IntervalSubAggregate15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78, 1)
)
intervalSubAggregate15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSubAggregate15minNumber"),
)
if mibBuilder.loadTexts:
    intervalSubAggregate15minEntry.setStatus("current")


class _IntervalSubAggregate15minNumber_Type(Integer32):
    """Custom type intervalSubAggregate15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalSubAggregate15minNumber_Type.__name__ = "Integer32"
_IntervalSubAggregate15minNumber_Object = MibTableColumn
intervalSubAggregate15minNumber = _IntervalSubAggregate15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78, 1, 1),
    _IntervalSubAggregate15minNumber_Type()
)
intervalSubAggregate15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSubAggregate15minNumber.setStatus("current")
_IntervalSubAggregate15minES_Type = Unsigned32
_IntervalSubAggregate15minES_Object = MibTableColumn
intervalSubAggregate15minES = _IntervalSubAggregate15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78, 1, 2),
    _IntervalSubAggregate15minES_Type()
)
intervalSubAggregate15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate15minES.setStatus("current")
_IntervalSubAggregate15minSES_Type = Unsigned32
_IntervalSubAggregate15minSES_Object = MibTableColumn
intervalSubAggregate15minSES = _IntervalSubAggregate15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78, 1, 3),
    _IntervalSubAggregate15minSES_Type()
)
intervalSubAggregate15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate15minSES.setStatus("current")
_IntervalSubAggregate15minValidFlag_Type = TruthValue
_IntervalSubAggregate15minValidFlag_Object = MibTableColumn
intervalSubAggregate15minValidFlag = _IntervalSubAggregate15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78, 1, 4),
    _IntervalSubAggregate15minValidFlag_Type()
)
intervalSubAggregate15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate15minValidFlag.setStatus("current")
_IntervalSubAggregate15minTimeStamp_Type = DateAndTime
_IntervalSubAggregate15minTimeStamp_Object = MibTableColumn
intervalSubAggregate15minTimeStamp = _IntervalSubAggregate15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78, 1, 5),
    _IntervalSubAggregate15minTimeStamp_Type()
)
intervalSubAggregate15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate15minTimeStamp.setStatus("current")
_IntervalSubAggregate15minCrc_Type = Unsigned32
_IntervalSubAggregate15minCrc_Object = MibTableColumn
intervalSubAggregate15minCrc = _IntervalSubAggregate15minCrc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 78, 1, 6),
    _IntervalSubAggregate15minCrc_Type()
)
intervalSubAggregate15minCrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate15minCrc.setStatus("current")
_IntervalSubAggregate1dayTable_Object = MibTable
intervalSubAggregate1dayTable = _IntervalSubAggregate1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79)
)
if mibBuilder.loadTexts:
    intervalSubAggregate1dayTable.setStatus("current")
_IntervalSubAggregate1dayEntry_Object = MibTableRow
intervalSubAggregate1dayEntry = _IntervalSubAggregate1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79, 1)
)
intervalSubAggregate1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalSubAggregate1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalSubAggregate1dayEntry.setStatus("current")


class _IntervalSubAggregate1dayNumber_Type(Integer32):
    """Custom type intervalSubAggregate1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalSubAggregate1dayNumber_Type.__name__ = "Integer32"
_IntervalSubAggregate1dayNumber_Object = MibTableColumn
intervalSubAggregate1dayNumber = _IntervalSubAggregate1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79, 1, 1),
    _IntervalSubAggregate1dayNumber_Type()
)
intervalSubAggregate1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalSubAggregate1dayNumber.setStatus("current")
_IntervalSubAggregate1dayES_Type = Unsigned32
_IntervalSubAggregate1dayES_Object = MibTableColumn
intervalSubAggregate1dayES = _IntervalSubAggregate1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79, 1, 2),
    _IntervalSubAggregate1dayES_Type()
)
intervalSubAggregate1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate1dayES.setStatus("current")
_IntervalSubAggregate1daySES_Type = Unsigned32
_IntervalSubAggregate1daySES_Object = MibTableColumn
intervalSubAggregate1daySES = _IntervalSubAggregate1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79, 1, 3),
    _IntervalSubAggregate1daySES_Type()
)
intervalSubAggregate1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate1daySES.setStatus("current")
_IntervalSubAggregate1dayValidFlag_Type = TruthValue
_IntervalSubAggregate1dayValidFlag_Object = MibTableColumn
intervalSubAggregate1dayValidFlag = _IntervalSubAggregate1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79, 1, 4),
    _IntervalSubAggregate1dayValidFlag_Type()
)
intervalSubAggregate1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate1dayValidFlag.setStatus("current")
_IntervalSubAggregate1dayTimeStamp_Type = DateAndTime
_IntervalSubAggregate1dayTimeStamp_Object = MibTableColumn
intervalSubAggregate1dayTimeStamp = _IntervalSubAggregate1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79, 1, 5),
    _IntervalSubAggregate1dayTimeStamp_Type()
)
intervalSubAggregate1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate1dayTimeStamp.setStatus("current")
_IntervalSubAggregate1dayCrc_Type = Unsigned32
_IntervalSubAggregate1dayCrc_Object = MibTableColumn
intervalSubAggregate1dayCrc = _IntervalSubAggregate1dayCrc_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 79, 1, 6),
    _IntervalSubAggregate1dayCrc_Type()
)
intervalSubAggregate1dayCrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalSubAggregate1dayCrc.setStatus("current")
_CurrentOduTcmC15minTable_Object = MibTable
currentOduTcmC15minTable = _CurrentOduTcmC15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 80)
)
if mibBuilder.loadTexts:
    currentOduTcmC15minTable.setStatus("current")
_CurrentOduTcmC15minEntry_Object = MibTableRow
currentOduTcmC15minEntry = _CurrentOduTcmC15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 80, 1)
)
currentOduTcmC15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOduTcmC15minEntry.setStatus("current")
_CurrentOduTcmC15minES_Type = Unsigned32
_CurrentOduTcmC15minES_Object = MibTableColumn
currentOduTcmC15minES = _CurrentOduTcmC15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 80, 1, 1),
    _CurrentOduTcmC15minES_Type()
)
currentOduTcmC15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC15minES.setStatus("current")
_CurrentOduTcmC15minSES_Type = Unsigned32
_CurrentOduTcmC15minSES_Object = MibTableColumn
currentOduTcmC15minSES = _CurrentOduTcmC15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 80, 1, 2),
    _CurrentOduTcmC15minSES_Type()
)
currentOduTcmC15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC15minSES.setStatus("current")
_CurrentOduTcmC15minBbe_Type = Counter64String
_CurrentOduTcmC15minBbe_Object = MibTableColumn
currentOduTcmC15minBbe = _CurrentOduTcmC15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 80, 1, 3),
    _CurrentOduTcmC15minBbe_Type()
)
currentOduTcmC15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC15minBbe.setStatus("current")
_CurrentOduTcmC15minUAS_Type = Unsigned32
_CurrentOduTcmC15minUAS_Object = MibTableColumn
currentOduTcmC15minUAS = _CurrentOduTcmC15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 80, 1, 4),
    _CurrentOduTcmC15minUAS_Type()
)
currentOduTcmC15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC15minUAS.setStatus("current")


class _CurrentOduTcmC15minElapsedTime_Type(Integer32):
    """Custom type currentOduTcmC15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOduTcmC15minElapsedTime_Type.__name__ = "Integer32"
_CurrentOduTcmC15minElapsedTime_Object = MibTableColumn
currentOduTcmC15minElapsedTime = _CurrentOduTcmC15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 80, 1, 5),
    _CurrentOduTcmC15minElapsedTime_Type()
)
currentOduTcmC15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC15minElapsedTime.setStatus("current")
_CurrentOduTcmC1dayTable_Object = MibTable
currentOduTcmC1dayTable = _CurrentOduTcmC1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 81)
)
if mibBuilder.loadTexts:
    currentOduTcmC1dayTable.setStatus("current")
_CurrentOduTcmC1dayEntry_Object = MibTableRow
currentOduTcmC1dayEntry = _CurrentOduTcmC1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 81, 1)
)
currentOduTcmC1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOduTcmC1dayEntry.setStatus("current")
_CurrentOduTcmC1dayES_Type = Unsigned32
_CurrentOduTcmC1dayES_Object = MibTableColumn
currentOduTcmC1dayES = _CurrentOduTcmC1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 81, 1, 1),
    _CurrentOduTcmC1dayES_Type()
)
currentOduTcmC1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC1dayES.setStatus("current")
_CurrentOduTcmC1daySES_Type = Unsigned32
_CurrentOduTcmC1daySES_Object = MibTableColumn
currentOduTcmC1daySES = _CurrentOduTcmC1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 81, 1, 2),
    _CurrentOduTcmC1daySES_Type()
)
currentOduTcmC1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC1daySES.setStatus("current")
_CurrentOduTcmC1dayBbe_Type = Counter64String
_CurrentOduTcmC1dayBbe_Object = MibTableColumn
currentOduTcmC1dayBbe = _CurrentOduTcmC1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 81, 1, 3),
    _CurrentOduTcmC1dayBbe_Type()
)
currentOduTcmC1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC1dayBbe.setStatus("current")
_CurrentOduTcmC1dayUAS_Type = Unsigned32
_CurrentOduTcmC1dayUAS_Object = MibTableColumn
currentOduTcmC1dayUAS = _CurrentOduTcmC1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 81, 1, 4),
    _CurrentOduTcmC1dayUAS_Type()
)
currentOduTcmC1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC1dayUAS.setStatus("current")


class _CurrentOduTcmC1dayElapsedTime_Type(Integer32):
    """Custom type currentOduTcmC1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOduTcmC1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentOduTcmC1dayElapsedTime_Object = MibTableColumn
currentOduTcmC1dayElapsedTime = _CurrentOduTcmC1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 81, 1, 5),
    _CurrentOduTcmC1dayElapsedTime_Type()
)
currentOduTcmC1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOduTcmC1dayElapsedTime.setStatus("current")
_IntervalOduTcmC15minTable_Object = MibTable
intervalOduTcmC15minTable = _IntervalOduTcmC15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82)
)
if mibBuilder.loadTexts:
    intervalOduTcmC15minTable.setStatus("current")
_IntervalOduTcmC15minEntry_Object = MibTableRow
intervalOduTcmC15minEntry = _IntervalOduTcmC15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1)
)
intervalOduTcmC15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOduTcmC15minNumber"),
)
if mibBuilder.loadTexts:
    intervalOduTcmC15minEntry.setStatus("current")


class _IntervalOduTcmC15minNumber_Type(Integer32):
    """Custom type intervalOduTcmC15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalOduTcmC15minNumber_Type.__name__ = "Integer32"
_IntervalOduTcmC15minNumber_Object = MibTableColumn
intervalOduTcmC15minNumber = _IntervalOduTcmC15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1, 1),
    _IntervalOduTcmC15minNumber_Type()
)
intervalOduTcmC15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOduTcmC15minNumber.setStatus("current")
_IntervalOduTcmC15minES_Type = Unsigned32
_IntervalOduTcmC15minES_Object = MibTableColumn
intervalOduTcmC15minES = _IntervalOduTcmC15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1, 2),
    _IntervalOduTcmC15minES_Type()
)
intervalOduTcmC15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC15minES.setStatus("current")
_IntervalOduTcmC15minSES_Type = Unsigned32
_IntervalOduTcmC15minSES_Object = MibTableColumn
intervalOduTcmC15minSES = _IntervalOduTcmC15minSES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1, 3),
    _IntervalOduTcmC15minSES_Type()
)
intervalOduTcmC15minSES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC15minSES.setStatus("current")
_IntervalOduTcmC15minBbe_Type = Counter64String
_IntervalOduTcmC15minBbe_Object = MibTableColumn
intervalOduTcmC15minBbe = _IntervalOduTcmC15minBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1, 4),
    _IntervalOduTcmC15minBbe_Type()
)
intervalOduTcmC15minBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC15minBbe.setStatus("current")
_IntervalOduTcmC15minUAS_Type = Unsigned32
_IntervalOduTcmC15minUAS_Object = MibTableColumn
intervalOduTcmC15minUAS = _IntervalOduTcmC15minUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1, 5),
    _IntervalOduTcmC15minUAS_Type()
)
intervalOduTcmC15minUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC15minUAS.setStatus("current")
_IntervalOduTcmC15minValidFlag_Type = TruthValue
_IntervalOduTcmC15minValidFlag_Object = MibTableColumn
intervalOduTcmC15minValidFlag = _IntervalOduTcmC15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1, 6),
    _IntervalOduTcmC15minValidFlag_Type()
)
intervalOduTcmC15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC15minValidFlag.setStatus("current")
_IntervalOduTcmC15minTimeStamp_Type = DateAndTime
_IntervalOduTcmC15minTimeStamp_Object = MibTableColumn
intervalOduTcmC15minTimeStamp = _IntervalOduTcmC15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 82, 1, 7),
    _IntervalOduTcmC15minTimeStamp_Type()
)
intervalOduTcmC15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC15minTimeStamp.setStatus("current")
_IntervalOduTcmC1dayTable_Object = MibTable
intervalOduTcmC1dayTable = _IntervalOduTcmC1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83)
)
if mibBuilder.loadTexts:
    intervalOduTcmC1dayTable.setStatus("current")
_IntervalOduTcmC1dayEntry_Object = MibTableRow
intervalOduTcmC1dayEntry = _IntervalOduTcmC1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1)
)
intervalOduTcmC1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOduTcmC1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalOduTcmC1dayEntry.setStatus("current")


class _IntervalOduTcmC1dayNumber_Type(Integer32):
    """Custom type intervalOduTcmC1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalOduTcmC1dayNumber_Type.__name__ = "Integer32"
_IntervalOduTcmC1dayNumber_Object = MibTableColumn
intervalOduTcmC1dayNumber = _IntervalOduTcmC1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1, 1),
    _IntervalOduTcmC1dayNumber_Type()
)
intervalOduTcmC1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOduTcmC1dayNumber.setStatus("current")
_IntervalOduTcmC1dayES_Type = Unsigned32
_IntervalOduTcmC1dayES_Object = MibTableColumn
intervalOduTcmC1dayES = _IntervalOduTcmC1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1, 2),
    _IntervalOduTcmC1dayES_Type()
)
intervalOduTcmC1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC1dayES.setStatus("current")
_IntervalOduTcmC1daySES_Type = Unsigned32
_IntervalOduTcmC1daySES_Object = MibTableColumn
intervalOduTcmC1daySES = _IntervalOduTcmC1daySES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1, 3),
    _IntervalOduTcmC1daySES_Type()
)
intervalOduTcmC1daySES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC1daySES.setStatus("current")
_IntervalOduTcmC1dayBbe_Type = Counter64String
_IntervalOduTcmC1dayBbe_Object = MibTableColumn
intervalOduTcmC1dayBbe = _IntervalOduTcmC1dayBbe_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1, 4),
    _IntervalOduTcmC1dayBbe_Type()
)
intervalOduTcmC1dayBbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC1dayBbe.setStatus("current")
_IntervalOduTcmC1dayUAS_Type = Unsigned32
_IntervalOduTcmC1dayUAS_Object = MibTableColumn
intervalOduTcmC1dayUAS = _IntervalOduTcmC1dayUAS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1, 5),
    _IntervalOduTcmC1dayUAS_Type()
)
intervalOduTcmC1dayUAS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC1dayUAS.setStatus("current")
_IntervalOduTcmC1dayValidFlag_Type = TruthValue
_IntervalOduTcmC1dayValidFlag_Object = MibTableColumn
intervalOduTcmC1dayValidFlag = _IntervalOduTcmC1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1, 6),
    _IntervalOduTcmC1dayValidFlag_Type()
)
intervalOduTcmC1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC1dayValidFlag.setStatus("current")
_IntervalOduTcmC1dayTimeStamp_Type = DateAndTime
_IntervalOduTcmC1dayTimeStamp_Object = MibTableColumn
intervalOduTcmC1dayTimeStamp = _IntervalOduTcmC1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 83, 1, 7),
    _IntervalOduTcmC1dayTimeStamp_Type()
)
intervalOduTcmC1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOduTcmC1dayTimeStamp.setStatus("current")
_CurrentPhysConvHighSpeed15minTable_Object = MibTable
currentPhysConvHighSpeed15minTable = _CurrentPhysConvHighSpeed15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 84)
)
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed15minTable.setStatus("current")
_CurrentPhysConvHighSpeed15minEntry_Object = MibTableRow
currentPhysConvHighSpeed15minEntry = _CurrentPhysConvHighSpeed15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 84, 1)
)
currentPhysConvHighSpeed15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed15minEntry.setStatus("current")
_CurrentPhysConvHighSpeed15minES_Type = Unsigned32
_CurrentPhysConvHighSpeed15minES_Object = MibTableColumn
currentPhysConvHighSpeed15minES = _CurrentPhysConvHighSpeed15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 84, 1, 1),
    _CurrentPhysConvHighSpeed15minES_Type()
)
currentPhysConvHighSpeed15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed15minES.setStatus("current")
_CurrentPhysConvHighSpeed15minCV_Type = Counter64String
_CurrentPhysConvHighSpeed15minCV_Object = MibTableColumn
currentPhysConvHighSpeed15minCV = _CurrentPhysConvHighSpeed15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 84, 1, 2),
    _CurrentPhysConvHighSpeed15minCV_Type()
)
currentPhysConvHighSpeed15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed15minCV.setStatus("current")
_CurrentPhysConvHighSpeed15minSE_Type = Unsigned32
_CurrentPhysConvHighSpeed15minSE_Object = MibTableColumn
currentPhysConvHighSpeed15minSE = _CurrentPhysConvHighSpeed15minSE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 84, 1, 3),
    _CurrentPhysConvHighSpeed15minSE_Type()
)
currentPhysConvHighSpeed15minSE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed15minSE.setStatus("current")


class _CurrentPhysConvHighSpeed15minElapsedTime_Type(Integer32):
    """Custom type currentPhysConvHighSpeed15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConvHighSpeed15minElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConvHighSpeed15minElapsedTime_Object = MibTableColumn
currentPhysConvHighSpeed15minElapsedTime = _CurrentPhysConvHighSpeed15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 84, 1, 4),
    _CurrentPhysConvHighSpeed15minElapsedTime_Type()
)
currentPhysConvHighSpeed15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed15minElapsedTime.setStatus("current")
_CurrentPhysConvHighSpeed1dayTable_Object = MibTable
currentPhysConvHighSpeed1dayTable = _CurrentPhysConvHighSpeed1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 85)
)
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed1dayTable.setStatus("current")
_CurrentPhysConvHighSpeed1dayEntry_Object = MibTableRow
currentPhysConvHighSpeed1dayEntry = _CurrentPhysConvHighSpeed1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 85, 1)
)
currentPhysConvHighSpeed1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed1dayEntry.setStatus("current")
_CurrentPhysConvHighSpeed1dayES_Type = Unsigned32
_CurrentPhysConvHighSpeed1dayES_Object = MibTableColumn
currentPhysConvHighSpeed1dayES = _CurrentPhysConvHighSpeed1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 85, 1, 1),
    _CurrentPhysConvHighSpeed1dayES_Type()
)
currentPhysConvHighSpeed1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed1dayES.setStatus("current")
_CurrentPhysConvHighSpeed1dayCV_Type = Counter64String
_CurrentPhysConvHighSpeed1dayCV_Object = MibTableColumn
currentPhysConvHighSpeed1dayCV = _CurrentPhysConvHighSpeed1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 85, 1, 2),
    _CurrentPhysConvHighSpeed1dayCV_Type()
)
currentPhysConvHighSpeed1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed1dayCV.setStatus("current")
_CurrentPhysConvHighSpeed1daySE_Type = Unsigned32
_CurrentPhysConvHighSpeed1daySE_Object = MibTableColumn
currentPhysConvHighSpeed1daySE = _CurrentPhysConvHighSpeed1daySE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 85, 1, 3),
    _CurrentPhysConvHighSpeed1daySE_Type()
)
currentPhysConvHighSpeed1daySE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed1daySE.setStatus("current")


class _CurrentPhysConvHighSpeed1dayElapsedTime_Type(Integer32):
    """Custom type currentPhysConvHighSpeed1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConvHighSpeed1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConvHighSpeed1dayElapsedTime_Object = MibTableColumn
currentPhysConvHighSpeed1dayElapsedTime = _CurrentPhysConvHighSpeed1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 85, 1, 4),
    _CurrentPhysConvHighSpeed1dayElapsedTime_Type()
)
currentPhysConvHighSpeed1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvHighSpeed1dayElapsedTime.setStatus("current")
_IntervalPhysConvHighSpeed15minTable_Object = MibTable
intervalPhysConvHighSpeed15minTable = _IntervalPhysConvHighSpeed15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86)
)
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minTable.setStatus("current")
_IntervalPhysConvHighSpeed15minEntry_Object = MibTableRow
intervalPhysConvHighSpeed15minEntry = _IntervalPhysConvHighSpeed15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86, 1)
)
intervalPhysConvHighSpeed15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConvHighSpeed15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minEntry.setStatus("current")


class _IntervalPhysConvHighSpeed15minNumber_Type(Integer32):
    """Custom type intervalPhysConvHighSpeed15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysConvHighSpeed15minNumber_Type.__name__ = "Integer32"
_IntervalPhysConvHighSpeed15minNumber_Object = MibTableColumn
intervalPhysConvHighSpeed15minNumber = _IntervalPhysConvHighSpeed15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86, 1, 1),
    _IntervalPhysConvHighSpeed15minNumber_Type()
)
intervalPhysConvHighSpeed15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minNumber.setStatus("current")
_IntervalPhysConvHighSpeed15minES_Type = Unsigned32
_IntervalPhysConvHighSpeed15minES_Object = MibTableColumn
intervalPhysConvHighSpeed15minES = _IntervalPhysConvHighSpeed15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86, 1, 2),
    _IntervalPhysConvHighSpeed15minES_Type()
)
intervalPhysConvHighSpeed15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minES.setStatus("current")
_IntervalPhysConvHighSpeed15minCV_Type = Counter64String
_IntervalPhysConvHighSpeed15minCV_Object = MibTableColumn
intervalPhysConvHighSpeed15minCV = _IntervalPhysConvHighSpeed15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86, 1, 3),
    _IntervalPhysConvHighSpeed15minCV_Type()
)
intervalPhysConvHighSpeed15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minCV.setStatus("current")
_IntervalPhysConvHighSpeed15minSE_Type = Unsigned32
_IntervalPhysConvHighSpeed15minSE_Object = MibTableColumn
intervalPhysConvHighSpeed15minSE = _IntervalPhysConvHighSpeed15minSE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86, 1, 4),
    _IntervalPhysConvHighSpeed15minSE_Type()
)
intervalPhysConvHighSpeed15minSE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minSE.setStatus("current")
_IntervalPhysConvHighSpeed15minValidFlag_Type = TruthValue
_IntervalPhysConvHighSpeed15minValidFlag_Object = MibTableColumn
intervalPhysConvHighSpeed15minValidFlag = _IntervalPhysConvHighSpeed15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86, 1, 5),
    _IntervalPhysConvHighSpeed15minValidFlag_Type()
)
intervalPhysConvHighSpeed15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minValidFlag.setStatus("current")
_IntervalPhysConvHighSpeed15minTimeStamp_Type = DateAndTime
_IntervalPhysConvHighSpeed15minTimeStamp_Object = MibTableColumn
intervalPhysConvHighSpeed15minTimeStamp = _IntervalPhysConvHighSpeed15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 86, 1, 6),
    _IntervalPhysConvHighSpeed15minTimeStamp_Type()
)
intervalPhysConvHighSpeed15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed15minTimeStamp.setStatus("current")
_IntervalPhysConvHighSpeed1dayTable_Object = MibTable
intervalPhysConvHighSpeed1dayTable = _IntervalPhysConvHighSpeed1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87)
)
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1dayTable.setStatus("current")
_IntervalPhysConvHighSpeed1dayEntry_Object = MibTableRow
intervalPhysConvHighSpeed1dayEntry = _IntervalPhysConvHighSpeed1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87, 1)
)
intervalPhysConvHighSpeed1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConvHighSpeed1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1dayEntry.setStatus("current")


class _IntervalPhysConvHighSpeed1dayNumber_Type(Integer32):
    """Custom type intervalPhysConvHighSpeed1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysConvHighSpeed1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysConvHighSpeed1dayNumber_Object = MibTableColumn
intervalPhysConvHighSpeed1dayNumber = _IntervalPhysConvHighSpeed1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87, 1, 1),
    _IntervalPhysConvHighSpeed1dayNumber_Type()
)
intervalPhysConvHighSpeed1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1dayNumber.setStatus("current")
_IntervalPhysConvHighSpeed1dayES_Type = Unsigned32
_IntervalPhysConvHighSpeed1dayES_Object = MibTableColumn
intervalPhysConvHighSpeed1dayES = _IntervalPhysConvHighSpeed1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87, 1, 2),
    _IntervalPhysConvHighSpeed1dayES_Type()
)
intervalPhysConvHighSpeed1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1dayES.setStatus("current")
_IntervalPhysConvHighSpeed1dayCV_Type = Counter64String
_IntervalPhysConvHighSpeed1dayCV_Object = MibTableColumn
intervalPhysConvHighSpeed1dayCV = _IntervalPhysConvHighSpeed1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87, 1, 3),
    _IntervalPhysConvHighSpeed1dayCV_Type()
)
intervalPhysConvHighSpeed1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1dayCV.setStatus("current")
_IntervalPhysConvHighSpeed1daySE_Type = Unsigned32
_IntervalPhysConvHighSpeed1daySE_Object = MibTableColumn
intervalPhysConvHighSpeed1daySE = _IntervalPhysConvHighSpeed1daySE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87, 1, 4),
    _IntervalPhysConvHighSpeed1daySE_Type()
)
intervalPhysConvHighSpeed1daySE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1daySE.setStatus("current")
_IntervalPhysConvHighSpeed1dayValidFlag_Type = TruthValue
_IntervalPhysConvHighSpeed1dayValidFlag_Object = MibTableColumn
intervalPhysConvHighSpeed1dayValidFlag = _IntervalPhysConvHighSpeed1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87, 1, 5),
    _IntervalPhysConvHighSpeed1dayValidFlag_Type()
)
intervalPhysConvHighSpeed1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1dayValidFlag.setStatus("current")
_IntervalPhysConvHighSpeed1dayTimeStamp_Type = DateAndTime
_IntervalPhysConvHighSpeed1dayTimeStamp_Object = MibTableColumn
intervalPhysConvHighSpeed1dayTimeStamp = _IntervalPhysConvHighSpeed1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 87, 1, 6),
    _IntervalPhysConvHighSpeed1dayTimeStamp_Type()
)
intervalPhysConvHighSpeed1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvHighSpeed1dayTimeStamp.setStatus("current")
_CurrentEthRxHighSpeed15minTable_Object = MibTable
currentEthRxHighSpeed15minTable = _CurrentEthRxHighSpeed15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 88)
)
if mibBuilder.loadTexts:
    currentEthRxHighSpeed15minTable.setStatus("current")
_CurrentEthRxHighSpeed15minEntry_Object = MibTableRow
currentEthRxHighSpeed15minEntry = _CurrentEthRxHighSpeed15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 88, 1)
)
currentEthRxHighSpeed15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthRxHighSpeed15minEntry.setStatus("current")
_CurrentEthRxHighSpeed15minGoodFrames_Type = Counter64String
_CurrentEthRxHighSpeed15minGoodFrames_Object = MibTableColumn
currentEthRxHighSpeed15minGoodFrames = _CurrentEthRxHighSpeed15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 88, 1, 1),
    _CurrentEthRxHighSpeed15minGoodFrames_Type()
)
currentEthRxHighSpeed15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed15minGoodFrames.setStatus("current")
_CurrentEthRxHighSpeed15minPauseFrames_Type = Counter64String
_CurrentEthRxHighSpeed15minPauseFrames_Object = MibTableColumn
currentEthRxHighSpeed15minPauseFrames = _CurrentEthRxHighSpeed15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 88, 1, 2),
    _CurrentEthRxHighSpeed15minPauseFrames_Type()
)
currentEthRxHighSpeed15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed15minPauseFrames.setStatus("current")
_CurrentEthRxHighSpeed15minCrcFrames_Type = Counter64String
_CurrentEthRxHighSpeed15minCrcFrames_Object = MibTableColumn
currentEthRxHighSpeed15minCrcFrames = _CurrentEthRxHighSpeed15minCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 88, 1, 3),
    _CurrentEthRxHighSpeed15minCrcFrames_Type()
)
currentEthRxHighSpeed15minCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed15minCrcFrames.setStatus("current")
_CurrentEthRxHighSpeed15minBytes_Type = Counter64String
_CurrentEthRxHighSpeed15minBytes_Object = MibTableColumn
currentEthRxHighSpeed15minBytes = _CurrentEthRxHighSpeed15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 88, 1, 4),
    _CurrentEthRxHighSpeed15minBytes_Type()
)
currentEthRxHighSpeed15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed15minBytes.setStatus("current")


class _CurrentEthRxHighSpeed15minElapsedTime_Type(Integer32):
    """Custom type currentEthRxHighSpeed15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthRxHighSpeed15minElapsedTime_Type.__name__ = "Integer32"
_CurrentEthRxHighSpeed15minElapsedTime_Object = MibTableColumn
currentEthRxHighSpeed15minElapsedTime = _CurrentEthRxHighSpeed15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 88, 1, 5),
    _CurrentEthRxHighSpeed15minElapsedTime_Type()
)
currentEthRxHighSpeed15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed15minElapsedTime.setStatus("current")
_CurrentEthRxHighSpeed1dayTable_Object = MibTable
currentEthRxHighSpeed1dayTable = _CurrentEthRxHighSpeed1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 89)
)
if mibBuilder.loadTexts:
    currentEthRxHighSpeed1dayTable.setStatus("current")
_CurrentEthRxHighSpeed1dayEntry_Object = MibTableRow
currentEthRxHighSpeed1dayEntry = _CurrentEthRxHighSpeed1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 89, 1)
)
currentEthRxHighSpeed1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthRxHighSpeed1dayEntry.setStatus("current")
_CurrentEthRxHighSpeed1dayGoodFrames_Type = Counter64String
_CurrentEthRxHighSpeed1dayGoodFrames_Object = MibTableColumn
currentEthRxHighSpeed1dayGoodFrames = _CurrentEthRxHighSpeed1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 89, 1, 1),
    _CurrentEthRxHighSpeed1dayGoodFrames_Type()
)
currentEthRxHighSpeed1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed1dayGoodFrames.setStatus("current")
_CurrentEthRxHighSpeed1dayPauseFrames_Type = Counter64String
_CurrentEthRxHighSpeed1dayPauseFrames_Object = MibTableColumn
currentEthRxHighSpeed1dayPauseFrames = _CurrentEthRxHighSpeed1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 89, 1, 2),
    _CurrentEthRxHighSpeed1dayPauseFrames_Type()
)
currentEthRxHighSpeed1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed1dayPauseFrames.setStatus("current")
_CurrentEthRxHighSpeed1dayCrcFrames_Type = Counter64String
_CurrentEthRxHighSpeed1dayCrcFrames_Object = MibTableColumn
currentEthRxHighSpeed1dayCrcFrames = _CurrentEthRxHighSpeed1dayCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 89, 1, 3),
    _CurrentEthRxHighSpeed1dayCrcFrames_Type()
)
currentEthRxHighSpeed1dayCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed1dayCrcFrames.setStatus("current")
_CurrentEthRxHighSpeed1dayBytes_Type = Counter64String
_CurrentEthRxHighSpeed1dayBytes_Object = MibTableColumn
currentEthRxHighSpeed1dayBytes = _CurrentEthRxHighSpeed1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 89, 1, 4),
    _CurrentEthRxHighSpeed1dayBytes_Type()
)
currentEthRxHighSpeed1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed1dayBytes.setStatus("current")


class _CurrentEthRxHighSpeed1dayElapsedTime_Type(Integer32):
    """Custom type currentEthRxHighSpeed1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthRxHighSpeed1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentEthRxHighSpeed1dayElapsedTime_Object = MibTableColumn
currentEthRxHighSpeed1dayElapsedTime = _CurrentEthRxHighSpeed1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 89, 1, 5),
    _CurrentEthRxHighSpeed1dayElapsedTime_Type()
)
currentEthRxHighSpeed1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRxHighSpeed1dayElapsedTime.setStatus("current")
_IntervalEthRxHighSpeed15minTable_Object = MibTable
intervalEthRxHighSpeed15minTable = _IntervalEthRxHighSpeed15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90)
)
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minTable.setStatus("current")
_IntervalEthRxHighSpeed15minEntry_Object = MibTableRow
intervalEthRxHighSpeed15minEntry = _IntervalEthRxHighSpeed15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1)
)
intervalEthRxHighSpeed15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRxHighSpeed15minNumber"),
)
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minEntry.setStatus("current")


class _IntervalEthRxHighSpeed15minNumber_Type(Integer32):
    """Custom type intervalEthRxHighSpeed15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalEthRxHighSpeed15minNumber_Type.__name__ = "Integer32"
_IntervalEthRxHighSpeed15minNumber_Object = MibTableColumn
intervalEthRxHighSpeed15minNumber = _IntervalEthRxHighSpeed15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1, 1),
    _IntervalEthRxHighSpeed15minNumber_Type()
)
intervalEthRxHighSpeed15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minNumber.setStatus("current")
_IntervalEthRxHighSpeed15minGoodFrames_Type = Counter64String
_IntervalEthRxHighSpeed15minGoodFrames_Object = MibTableColumn
intervalEthRxHighSpeed15minGoodFrames = _IntervalEthRxHighSpeed15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1, 2),
    _IntervalEthRxHighSpeed15minGoodFrames_Type()
)
intervalEthRxHighSpeed15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minGoodFrames.setStatus("current")
_IntervalEthRxHighSpeed15minPauseFrames_Type = Counter64String
_IntervalEthRxHighSpeed15minPauseFrames_Object = MibTableColumn
intervalEthRxHighSpeed15minPauseFrames = _IntervalEthRxHighSpeed15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1, 3),
    _IntervalEthRxHighSpeed15minPauseFrames_Type()
)
intervalEthRxHighSpeed15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minPauseFrames.setStatus("current")
_IntervalEthRxHighSpeed15minCrcFrames_Type = Counter64String
_IntervalEthRxHighSpeed15minCrcFrames_Object = MibTableColumn
intervalEthRxHighSpeed15minCrcFrames = _IntervalEthRxHighSpeed15minCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1, 4),
    _IntervalEthRxHighSpeed15minCrcFrames_Type()
)
intervalEthRxHighSpeed15minCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minCrcFrames.setStatus("current")
_IntervalEthRxHighSpeed15minBytes_Type = Counter64String
_IntervalEthRxHighSpeed15minBytes_Object = MibTableColumn
intervalEthRxHighSpeed15minBytes = _IntervalEthRxHighSpeed15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1, 5),
    _IntervalEthRxHighSpeed15minBytes_Type()
)
intervalEthRxHighSpeed15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minBytes.setStatus("current")
_IntervalEthRxHighSpeed15minValidFlag_Type = TruthValue
_IntervalEthRxHighSpeed15minValidFlag_Object = MibTableColumn
intervalEthRxHighSpeed15minValidFlag = _IntervalEthRxHighSpeed15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1, 6),
    _IntervalEthRxHighSpeed15minValidFlag_Type()
)
intervalEthRxHighSpeed15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minValidFlag.setStatus("current")
_IntervalEthRxHighSpeed15minTimeStamp_Type = DateAndTime
_IntervalEthRxHighSpeed15minTimeStamp_Object = MibTableColumn
intervalEthRxHighSpeed15minTimeStamp = _IntervalEthRxHighSpeed15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 90, 1, 7),
    _IntervalEthRxHighSpeed15minTimeStamp_Type()
)
intervalEthRxHighSpeed15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed15minTimeStamp.setStatus("current")
_IntervalEthRxHighSpeed1dayTable_Object = MibTable
intervalEthRxHighSpeed1dayTable = _IntervalEthRxHighSpeed1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91)
)
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayTable.setStatus("current")
_IntervalEthRxHighSpeed1dayEntry_Object = MibTableRow
intervalEthRxHighSpeed1dayEntry = _IntervalEthRxHighSpeed1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1)
)
intervalEthRxHighSpeed1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRxHighSpeed1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayEntry.setStatus("current")


class _IntervalEthRxHighSpeed1dayNumber_Type(Integer32):
    """Custom type intervalEthRxHighSpeed1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalEthRxHighSpeed1dayNumber_Type.__name__ = "Integer32"
_IntervalEthRxHighSpeed1dayNumber_Object = MibTableColumn
intervalEthRxHighSpeed1dayNumber = _IntervalEthRxHighSpeed1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1, 1),
    _IntervalEthRxHighSpeed1dayNumber_Type()
)
intervalEthRxHighSpeed1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayNumber.setStatus("current")
_IntervalEthRxHighSpeed1dayGoodFrames_Type = Counter64String
_IntervalEthRxHighSpeed1dayGoodFrames_Object = MibTableColumn
intervalEthRxHighSpeed1dayGoodFrames = _IntervalEthRxHighSpeed1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1, 2),
    _IntervalEthRxHighSpeed1dayGoodFrames_Type()
)
intervalEthRxHighSpeed1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayGoodFrames.setStatus("current")
_IntervalEthRxHighSpeed1dayPauseFrames_Type = Counter64String
_IntervalEthRxHighSpeed1dayPauseFrames_Object = MibTableColumn
intervalEthRxHighSpeed1dayPauseFrames = _IntervalEthRxHighSpeed1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1, 3),
    _IntervalEthRxHighSpeed1dayPauseFrames_Type()
)
intervalEthRxHighSpeed1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayPauseFrames.setStatus("current")
_IntervalEthRxHighSpeed1dayCrcFrames_Type = Counter64String
_IntervalEthRxHighSpeed1dayCrcFrames_Object = MibTableColumn
intervalEthRxHighSpeed1dayCrcFrames = _IntervalEthRxHighSpeed1dayCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1, 4),
    _IntervalEthRxHighSpeed1dayCrcFrames_Type()
)
intervalEthRxHighSpeed1dayCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayCrcFrames.setStatus("current")
_IntervalEthRxHighSpeed1dayBytes_Type = Counter64String
_IntervalEthRxHighSpeed1dayBytes_Object = MibTableColumn
intervalEthRxHighSpeed1dayBytes = _IntervalEthRxHighSpeed1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1, 5),
    _IntervalEthRxHighSpeed1dayBytes_Type()
)
intervalEthRxHighSpeed1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayBytes.setStatus("current")
_IntervalEthRxHighSpeed1dayValidFlag_Type = TruthValue
_IntervalEthRxHighSpeed1dayValidFlag_Object = MibTableColumn
intervalEthRxHighSpeed1dayValidFlag = _IntervalEthRxHighSpeed1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1, 6),
    _IntervalEthRxHighSpeed1dayValidFlag_Type()
)
intervalEthRxHighSpeed1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayValidFlag.setStatus("current")
_IntervalEthRxHighSpeed1dayTimeStamp_Type = DateAndTime
_IntervalEthRxHighSpeed1dayTimeStamp_Object = MibTableColumn
intervalEthRxHighSpeed1dayTimeStamp = _IntervalEthRxHighSpeed1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 91, 1, 7),
    _IntervalEthRxHighSpeed1dayTimeStamp_Type()
)
intervalEthRxHighSpeed1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRxHighSpeed1dayTimeStamp.setStatus("current")
_CurrentGfpfr15minTable_Object = MibTable
currentGfpfr15minTable = _CurrentGfpfr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 92)
)
if mibBuilder.loadTexts:
    currentGfpfr15minTable.setStatus("deprecated")
_CurrentGfpfr15minEntry_Object = MibTableRow
currentGfpfr15minEntry = _CurrentGfpfr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 92, 1)
)
currentGfpfr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpfr15minEntry.setStatus("deprecated")
_CurrentGfpfr15minGoodFrames_Type = Unsigned32
_CurrentGfpfr15minGoodFrames_Object = MibTableColumn
currentGfpfr15minGoodFrames = _CurrentGfpfr15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 92, 1, 1),
    _CurrentGfpfr15minGoodFrames_Type()
)
currentGfpfr15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr15minGoodFrames.setStatus("deprecated")
_CurrentGfpfr15minCHecDiscardedFrames_Type = Unsigned32
_CurrentGfpfr15minCHecDiscardedFrames_Object = MibTableColumn
currentGfpfr15minCHecDiscardedFrames = _CurrentGfpfr15minCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 92, 1, 2),
    _CurrentGfpfr15minCHecDiscardedFrames_Type()
)
currentGfpfr15minCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr15minCHecDiscardedFrames.setStatus("deprecated")
_CurrentGfpfr15minTHecDiscardedFrames_Type = Unsigned32
_CurrentGfpfr15minTHecDiscardedFrames_Object = MibTableColumn
currentGfpfr15minTHecDiscardedFrames = _CurrentGfpfr15minTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 92, 1, 3),
    _CurrentGfpfr15minTHecDiscardedFrames_Type()
)
currentGfpfr15minTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr15minTHecDiscardedFrames.setStatus("deprecated")


class _CurrentGfpfr15minElapsedTime_Type(Integer32):
    """Custom type currentGfpfr15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpfr15minElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpfr15minElapsedTime_Object = MibTableColumn
currentGfpfr15minElapsedTime = _CurrentGfpfr15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 92, 1, 4),
    _CurrentGfpfr15minElapsedTime_Type()
)
currentGfpfr15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr15minElapsedTime.setStatus("deprecated")
_CurrentGfpfr1dayTable_Object = MibTable
currentGfpfr1dayTable = _CurrentGfpfr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 93)
)
if mibBuilder.loadTexts:
    currentGfpfr1dayTable.setStatus("deprecated")
_CurrentGfpfr1dayEntry_Object = MibTableRow
currentGfpfr1dayEntry = _CurrentGfpfr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 93, 1)
)
currentGfpfr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpfr1dayEntry.setStatus("deprecated")
_CurrentGfpfr1dayGoodFrames_Type = Unsigned32
_CurrentGfpfr1dayGoodFrames_Object = MibTableColumn
currentGfpfr1dayGoodFrames = _CurrentGfpfr1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 93, 1, 1),
    _CurrentGfpfr1dayGoodFrames_Type()
)
currentGfpfr1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr1dayGoodFrames.setStatus("deprecated")
_CurrentGfpfr1dayCHecDiscardedFrames_Type = Unsigned32
_CurrentGfpfr1dayCHecDiscardedFrames_Object = MibTableColumn
currentGfpfr1dayCHecDiscardedFrames = _CurrentGfpfr1dayCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 93, 1, 2),
    _CurrentGfpfr1dayCHecDiscardedFrames_Type()
)
currentGfpfr1dayCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr1dayCHecDiscardedFrames.setStatus("deprecated")
_CurrentGfpfr1dayTHecDiscardedFrames_Type = Unsigned32
_CurrentGfpfr1dayTHecDiscardedFrames_Object = MibTableColumn
currentGfpfr1dayTHecDiscardedFrames = _CurrentGfpfr1dayTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 93, 1, 3),
    _CurrentGfpfr1dayTHecDiscardedFrames_Type()
)
currentGfpfr1dayTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr1dayTHecDiscardedFrames.setStatus("deprecated")


class _CurrentGfpfr1dayElapsedTime_Type(Integer32):
    """Custom type currentGfpfr1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpfr1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpfr1dayElapsedTime_Object = MibTableColumn
currentGfpfr1dayElapsedTime = _CurrentGfpfr1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 93, 1, 4),
    _CurrentGfpfr1dayElapsedTime_Type()
)
currentGfpfr1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfr1dayElapsedTime.setStatus("deprecated")
_IntervalGfpfr15minTable_Object = MibTable
intervalGfpfr15minTable = _IntervalGfpfr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94)
)
if mibBuilder.loadTexts:
    intervalGfpfr15minTable.setStatus("deprecated")
_IntervalGfpfr15minEntry_Object = MibTableRow
intervalGfpfr15minEntry = _IntervalGfpfr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94, 1)
)
intervalGfpfr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpfr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpfr15minEntry.setStatus("deprecated")


class _IntervalGfpfr15minNumber_Type(Integer32):
    """Custom type intervalGfpfr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalGfpfr15minNumber_Type.__name__ = "Integer32"
_IntervalGfpfr15minNumber_Object = MibTableColumn
intervalGfpfr15minNumber = _IntervalGfpfr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94, 1, 1),
    _IntervalGfpfr15minNumber_Type()
)
intervalGfpfr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpfr15minNumber.setStatus("deprecated")
_IntervalGfpfr15minGoodFrames_Type = Unsigned32
_IntervalGfpfr15minGoodFrames_Object = MibTableColumn
intervalGfpfr15minGoodFrames = _IntervalGfpfr15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94, 1, 2),
    _IntervalGfpfr15minGoodFrames_Type()
)
intervalGfpfr15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr15minGoodFrames.setStatus("deprecated")
_IntervalGfpfr15minCHecDiscardedFrames_Type = Unsigned32
_IntervalGfpfr15minCHecDiscardedFrames_Object = MibTableColumn
intervalGfpfr15minCHecDiscardedFrames = _IntervalGfpfr15minCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94, 1, 3),
    _IntervalGfpfr15minCHecDiscardedFrames_Type()
)
intervalGfpfr15minCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr15minCHecDiscardedFrames.setStatus("deprecated")
_IntervalGfpfr15minTHecDiscardedFrames_Type = Unsigned32
_IntervalGfpfr15minTHecDiscardedFrames_Object = MibTableColumn
intervalGfpfr15minTHecDiscardedFrames = _IntervalGfpfr15minTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94, 1, 4),
    _IntervalGfpfr15minTHecDiscardedFrames_Type()
)
intervalGfpfr15minTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr15minTHecDiscardedFrames.setStatus("deprecated")
_IntervalGfpfr15minValidFlag_Type = TruthValue
_IntervalGfpfr15minValidFlag_Object = MibTableColumn
intervalGfpfr15minValidFlag = _IntervalGfpfr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94, 1, 5),
    _IntervalGfpfr15minValidFlag_Type()
)
intervalGfpfr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr15minValidFlag.setStatus("deprecated")
_IntervalGfpfr15minTimeStamp_Type = DateAndTime
_IntervalGfpfr15minTimeStamp_Object = MibTableColumn
intervalGfpfr15minTimeStamp = _IntervalGfpfr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 94, 1, 6),
    _IntervalGfpfr15minTimeStamp_Type()
)
intervalGfpfr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr15minTimeStamp.setStatus("deprecated")
_IntervalGfpfr1dayTable_Object = MibTable
intervalGfpfr1dayTable = _IntervalGfpfr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95)
)
if mibBuilder.loadTexts:
    intervalGfpfr1dayTable.setStatus("deprecated")
_IntervalGfpfr1dayEntry_Object = MibTableRow
intervalGfpfr1dayEntry = _IntervalGfpfr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95, 1)
)
intervalGfpfr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpfr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpfr1dayEntry.setStatus("deprecated")


class _IntervalGfpfr1dayNumber_Type(Integer32):
    """Custom type intervalGfpfr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalGfpfr1dayNumber_Type.__name__ = "Integer32"
_IntervalGfpfr1dayNumber_Object = MibTableColumn
intervalGfpfr1dayNumber = _IntervalGfpfr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95, 1, 1),
    _IntervalGfpfr1dayNumber_Type()
)
intervalGfpfr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpfr1dayNumber.setStatus("deprecated")
_IntervalGfpfr1dayGoodFrames_Type = Unsigned32
_IntervalGfpfr1dayGoodFrames_Object = MibTableColumn
intervalGfpfr1dayGoodFrames = _IntervalGfpfr1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95, 1, 2),
    _IntervalGfpfr1dayGoodFrames_Type()
)
intervalGfpfr1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr1dayGoodFrames.setStatus("deprecated")
_IntervalGfpfr1dayCHecDiscardedFrames_Type = Unsigned32
_IntervalGfpfr1dayCHecDiscardedFrames_Object = MibTableColumn
intervalGfpfr1dayCHecDiscardedFrames = _IntervalGfpfr1dayCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95, 1, 3),
    _IntervalGfpfr1dayCHecDiscardedFrames_Type()
)
intervalGfpfr1dayCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr1dayCHecDiscardedFrames.setStatus("deprecated")
_IntervalGfpfr1dayTHecDiscardedFrames_Type = Unsigned32
_IntervalGfpfr1dayTHecDiscardedFrames_Object = MibTableColumn
intervalGfpfr1dayTHecDiscardedFrames = _IntervalGfpfr1dayTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95, 1, 4),
    _IntervalGfpfr1dayTHecDiscardedFrames_Type()
)
intervalGfpfr1dayTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr1dayTHecDiscardedFrames.setStatus("deprecated")
_IntervalGfpfr1dayValidFlag_Type = TruthValue
_IntervalGfpfr1dayValidFlag_Object = MibTableColumn
intervalGfpfr1dayValidFlag = _IntervalGfpfr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95, 1, 5),
    _IntervalGfpfr1dayValidFlag_Type()
)
intervalGfpfr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr1dayValidFlag.setStatus("deprecated")
_IntervalGfpfr1dayTimeStamp_Type = DateAndTime
_IntervalGfpfr1dayTimeStamp_Object = MibTableColumn
intervalGfpfr1dayTimeStamp = _IntervalGfpfr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 95, 1, 6),
    _IntervalGfpfr1dayTimeStamp_Type()
)
intervalGfpfr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfr1dayTimeStamp.setStatus("deprecated")
_CurrentGfpSublayer15minTable_Object = MibTable
currentGfpSublayer15minTable = _CurrentGfpSublayer15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 96)
)
if mibBuilder.loadTexts:
    currentGfpSublayer15minTable.setStatus("current")
_CurrentGfpSublayer15minEntry_Object = MibTableRow
currentGfpSublayer15minEntry = _CurrentGfpSublayer15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 96, 1)
)
currentGfpSublayer15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpSublayer15minEntry.setStatus("current")
_CurrentGfpSublayer15minCoreHecCorrectedFrames_Type = Unsigned32
_CurrentGfpSublayer15minCoreHecCorrectedFrames_Object = MibTableColumn
currentGfpSublayer15minCoreHecCorrectedFrames = _CurrentGfpSublayer15minCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 96, 1, 1),
    _CurrentGfpSublayer15minCoreHecCorrectedFrames_Type()
)
currentGfpSublayer15minCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer15minCoreHecCorrectedFrames.setStatus("current")
_CurrentGfpSublayer15minTypeHecCorrectedFrames_Type = Unsigned32
_CurrentGfpSublayer15minTypeHecCorrectedFrames_Object = MibTableColumn
currentGfpSublayer15minTypeHecCorrectedFrames = _CurrentGfpSublayer15minTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 96, 1, 2),
    _CurrentGfpSublayer15minTypeHecCorrectedFrames_Type()
)
currentGfpSublayer15minTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer15minTypeHecCorrectedFrames.setStatus("current")
_CurrentGfpSublayer15minTypeHecDiscardedFrames_Type = Counter64String
_CurrentGfpSublayer15minTypeHecDiscardedFrames_Object = MibTableColumn
currentGfpSublayer15minTypeHecDiscardedFrames = _CurrentGfpSublayer15minTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 96, 1, 3),
    _CurrentGfpSublayer15minTypeHecDiscardedFrames_Type()
)
currentGfpSublayer15minTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer15minTypeHecDiscardedFrames.setStatus("current")


class _CurrentGfpSublayer15minElapsedTime_Type(Integer32):
    """Custom type currentGfpSublayer15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpSublayer15minElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpSublayer15minElapsedTime_Object = MibTableColumn
currentGfpSublayer15minElapsedTime = _CurrentGfpSublayer15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 96, 1, 4),
    _CurrentGfpSublayer15minElapsedTime_Type()
)
currentGfpSublayer15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer15minElapsedTime.setStatus("current")
_CurrentGfpSublayer1dayTable_Object = MibTable
currentGfpSublayer1dayTable = _CurrentGfpSublayer1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 97)
)
if mibBuilder.loadTexts:
    currentGfpSublayer1dayTable.setStatus("current")
_CurrentGfpSublayer1dayEntry_Object = MibTableRow
currentGfpSublayer1dayEntry = _CurrentGfpSublayer1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 97, 1)
)
currentGfpSublayer1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpSublayer1dayEntry.setStatus("current")
_CurrentGfpSublayer1dayCoreHecCorrectedFrames_Type = Unsigned32
_CurrentGfpSublayer1dayCoreHecCorrectedFrames_Object = MibTableColumn
currentGfpSublayer1dayCoreHecCorrectedFrames = _CurrentGfpSublayer1dayCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 97, 1, 1),
    _CurrentGfpSublayer1dayCoreHecCorrectedFrames_Type()
)
currentGfpSublayer1dayCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer1dayCoreHecCorrectedFrames.setStatus("current")
_CurrentGfpSublayer1dayTypeHecCorrectedFrames_Type = Unsigned32
_CurrentGfpSublayer1dayTypeHecCorrectedFrames_Object = MibTableColumn
currentGfpSublayer1dayTypeHecCorrectedFrames = _CurrentGfpSublayer1dayTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 97, 1, 2),
    _CurrentGfpSublayer1dayTypeHecCorrectedFrames_Type()
)
currentGfpSublayer1dayTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer1dayTypeHecCorrectedFrames.setStatus("current")
_CurrentGfpSublayer1dayTypeHecDiscardedFrames_Type = Counter64String
_CurrentGfpSublayer1dayTypeHecDiscardedFrames_Object = MibTableColumn
currentGfpSublayer1dayTypeHecDiscardedFrames = _CurrentGfpSublayer1dayTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 97, 1, 3),
    _CurrentGfpSublayer1dayTypeHecDiscardedFrames_Type()
)
currentGfpSublayer1dayTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer1dayTypeHecDiscardedFrames.setStatus("current")


class _CurrentGfpSublayer1dayElapsedTime_Type(Integer32):
    """Custom type currentGfpSublayer1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpSublayer1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpSublayer1dayElapsedTime_Object = MibTableColumn
currentGfpSublayer1dayElapsedTime = _CurrentGfpSublayer1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 97, 1, 4),
    _CurrentGfpSublayer1dayElapsedTime_Type()
)
currentGfpSublayer1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpSublayer1dayElapsedTime.setStatus("current")
_IntervalGfpSublayer15minTable_Object = MibTable
intervalGfpSublayer15minTable = _IntervalGfpSublayer15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98)
)
if mibBuilder.loadTexts:
    intervalGfpSublayer15minTable.setStatus("current")
_IntervalGfpSublayer15minEntry_Object = MibTableRow
intervalGfpSublayer15minEntry = _IntervalGfpSublayer15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98, 1)
)
intervalGfpSublayer15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpSublayer15minNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpSublayer15minEntry.setStatus("current")


class _IntervalGfpSublayer15minNumber_Type(Integer32):
    """Custom type intervalGfpSublayer15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalGfpSublayer15minNumber_Type.__name__ = "Integer32"
_IntervalGfpSublayer15minNumber_Object = MibTableColumn
intervalGfpSublayer15minNumber = _IntervalGfpSublayer15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98, 1, 1),
    _IntervalGfpSublayer15minNumber_Type()
)
intervalGfpSublayer15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpSublayer15minNumber.setStatus("current")
_IntervalGfpSublayer15minCoreHecCorrectedFrames_Type = Unsigned32
_IntervalGfpSublayer15minCoreHecCorrectedFrames_Object = MibTableColumn
intervalGfpSublayer15minCoreHecCorrectedFrames = _IntervalGfpSublayer15minCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98, 1, 2),
    _IntervalGfpSublayer15minCoreHecCorrectedFrames_Type()
)
intervalGfpSublayer15minCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer15minCoreHecCorrectedFrames.setStatus("current")
_IntervalGfpSublayer15minTypeHecCorrectedFrames_Type = Unsigned32
_IntervalGfpSublayer15minTypeHecCorrectedFrames_Object = MibTableColumn
intervalGfpSublayer15minTypeHecCorrectedFrames = _IntervalGfpSublayer15minTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98, 1, 3),
    _IntervalGfpSublayer15minTypeHecCorrectedFrames_Type()
)
intervalGfpSublayer15minTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer15minTypeHecCorrectedFrames.setStatus("current")
_IntervalGfpSublayer15minTypeHecDiscardedFrames_Type = Counter64String
_IntervalGfpSublayer15minTypeHecDiscardedFrames_Object = MibTableColumn
intervalGfpSublayer15minTypeHecDiscardedFrames = _IntervalGfpSublayer15minTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98, 1, 4),
    _IntervalGfpSublayer15minTypeHecDiscardedFrames_Type()
)
intervalGfpSublayer15minTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer15minTypeHecDiscardedFrames.setStatus("current")
_IntervalGfpSublayer15minValidFlag_Type = TruthValue
_IntervalGfpSublayer15minValidFlag_Object = MibTableColumn
intervalGfpSublayer15minValidFlag = _IntervalGfpSublayer15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98, 1, 5),
    _IntervalGfpSublayer15minValidFlag_Type()
)
intervalGfpSublayer15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer15minValidFlag.setStatus("current")
_IntervalGfpSublayer15minTimeStamp_Type = DateAndTime
_IntervalGfpSublayer15minTimeStamp_Object = MibTableColumn
intervalGfpSublayer15minTimeStamp = _IntervalGfpSublayer15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 98, 1, 6),
    _IntervalGfpSublayer15minTimeStamp_Type()
)
intervalGfpSublayer15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer15minTimeStamp.setStatus("current")
_IntervalGfpSublayer1dayTable_Object = MibTable
intervalGfpSublayer1dayTable = _IntervalGfpSublayer1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99)
)
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayTable.setStatus("current")
_IntervalGfpSublayer1dayEntry_Object = MibTableRow
intervalGfpSublayer1dayEntry = _IntervalGfpSublayer1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99, 1)
)
intervalGfpSublayer1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpSublayer1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayEntry.setStatus("current")


class _IntervalGfpSublayer1dayNumber_Type(Integer32):
    """Custom type intervalGfpSublayer1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalGfpSublayer1dayNumber_Type.__name__ = "Integer32"
_IntervalGfpSublayer1dayNumber_Object = MibTableColumn
intervalGfpSublayer1dayNumber = _IntervalGfpSublayer1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99, 1, 1),
    _IntervalGfpSublayer1dayNumber_Type()
)
intervalGfpSublayer1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayNumber.setStatus("current")
_IntervalGfpSublayer1dayCoreHecCorrectedFrames_Type = Unsigned32
_IntervalGfpSublayer1dayCoreHecCorrectedFrames_Object = MibTableColumn
intervalGfpSublayer1dayCoreHecCorrectedFrames = _IntervalGfpSublayer1dayCoreHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99, 1, 2),
    _IntervalGfpSublayer1dayCoreHecCorrectedFrames_Type()
)
intervalGfpSublayer1dayCoreHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayCoreHecCorrectedFrames.setStatus("current")
_IntervalGfpSublayer1dayTypeHecCorrectedFrames_Type = Unsigned32
_IntervalGfpSublayer1dayTypeHecCorrectedFrames_Object = MibTableColumn
intervalGfpSublayer1dayTypeHecCorrectedFrames = _IntervalGfpSublayer1dayTypeHecCorrectedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99, 1, 3),
    _IntervalGfpSublayer1dayTypeHecCorrectedFrames_Type()
)
intervalGfpSublayer1dayTypeHecCorrectedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayTypeHecCorrectedFrames.setStatus("current")
_IntervalGfpSublayer1dayTypeHecDiscardedFrames_Type = Counter64String
_IntervalGfpSublayer1dayTypeHecDiscardedFrames_Object = MibTableColumn
intervalGfpSublayer1dayTypeHecDiscardedFrames = _IntervalGfpSublayer1dayTypeHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99, 1, 4),
    _IntervalGfpSublayer1dayTypeHecDiscardedFrames_Type()
)
intervalGfpSublayer1dayTypeHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayTypeHecDiscardedFrames.setStatus("current")
_IntervalGfpSublayer1dayValidFlag_Type = TruthValue
_IntervalGfpSublayer1dayValidFlag_Object = MibTableColumn
intervalGfpSublayer1dayValidFlag = _IntervalGfpSublayer1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99, 1, 5),
    _IntervalGfpSublayer1dayValidFlag_Type()
)
intervalGfpSublayer1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayValidFlag.setStatus("current")
_IntervalGfpSublayer1dayTimeStamp_Type = DateAndTime
_IntervalGfpSublayer1dayTimeStamp_Object = MibTableColumn
intervalGfpSublayer1dayTimeStamp = _IntervalGfpSublayer1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 99, 1, 6),
    _IntervalGfpSublayer1dayTimeStamp_Type()
)
intervalGfpSublayer1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpSublayer1dayTimeStamp.setStatus("current")
_CurrentGfpfrSublayer15minTable_Object = MibTable
currentGfpfrSublayer15minTable = _CurrentGfpfrSublayer15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 100)
)
if mibBuilder.loadTexts:
    currentGfpfrSublayer15minTable.setStatus("current")
_CurrentGfpfrSublayer15minEntry_Object = MibTableRow
currentGfpfrSublayer15minEntry = _CurrentGfpfrSublayer15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 100, 1)
)
currentGfpfrSublayer15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpfrSublayer15minEntry.setStatus("current")
_CurrentGfpfrSublayer15minGoodFrames_Type = Counter64String
_CurrentGfpfrSublayer15minGoodFrames_Object = MibTableColumn
currentGfpfrSublayer15minGoodFrames = _CurrentGfpfrSublayer15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 100, 1, 1),
    _CurrentGfpfrSublayer15minGoodFrames_Type()
)
currentGfpfrSublayer15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer15minGoodFrames.setStatus("current")
_CurrentGfpfrSublayer15minCHecDiscardedFrames_Type = Counter64String
_CurrentGfpfrSublayer15minCHecDiscardedFrames_Object = MibTableColumn
currentGfpfrSublayer15minCHecDiscardedFrames = _CurrentGfpfrSublayer15minCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 100, 1, 2),
    _CurrentGfpfrSublayer15minCHecDiscardedFrames_Type()
)
currentGfpfrSublayer15minCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer15minCHecDiscardedFrames.setStatus("current")
_CurrentGfpfrSublayer15minTHecDiscardedFrames_Type = Counter64String
_CurrentGfpfrSublayer15minTHecDiscardedFrames_Object = MibTableColumn
currentGfpfrSublayer15minTHecDiscardedFrames = _CurrentGfpfrSublayer15minTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 100, 1, 3),
    _CurrentGfpfrSublayer15minTHecDiscardedFrames_Type()
)
currentGfpfrSublayer15minTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer15minTHecDiscardedFrames.setStatus("current")


class _CurrentGfpfrSublayer15minElapsedTime_Type(Integer32):
    """Custom type currentGfpfrSublayer15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpfrSublayer15minElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpfrSublayer15minElapsedTime_Object = MibTableColumn
currentGfpfrSublayer15minElapsedTime = _CurrentGfpfrSublayer15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 100, 1, 4),
    _CurrentGfpfrSublayer15minElapsedTime_Type()
)
currentGfpfrSublayer15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer15minElapsedTime.setStatus("current")
_CurrentGfpfrSublayer1dayTable_Object = MibTable
currentGfpfrSublayer1dayTable = _CurrentGfpfrSublayer1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 101)
)
if mibBuilder.loadTexts:
    currentGfpfrSublayer1dayTable.setStatus("current")
_CurrentGfpfrSublayer1dayEntry_Object = MibTableRow
currentGfpfrSublayer1dayEntry = _CurrentGfpfrSublayer1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 101, 1)
)
currentGfpfrSublayer1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentGfpfrSublayer1dayEntry.setStatus("current")
_CurrentGfpfrSublayer1dayGoodFrames_Type = Counter64String
_CurrentGfpfrSublayer1dayGoodFrames_Object = MibTableColumn
currentGfpfrSublayer1dayGoodFrames = _CurrentGfpfrSublayer1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 101, 1, 1),
    _CurrentGfpfrSublayer1dayGoodFrames_Type()
)
currentGfpfrSublayer1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer1dayGoodFrames.setStatus("current")
_CurrentGfpfrSublayer1dayCHecDiscardedFrames_Type = Counter64String
_CurrentGfpfrSublayer1dayCHecDiscardedFrames_Object = MibTableColumn
currentGfpfrSublayer1dayCHecDiscardedFrames = _CurrentGfpfrSublayer1dayCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 101, 1, 2),
    _CurrentGfpfrSublayer1dayCHecDiscardedFrames_Type()
)
currentGfpfrSublayer1dayCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer1dayCHecDiscardedFrames.setStatus("current")
_CurrentGfpfrSublayer1dayTHecDiscardedFrames_Type = Counter64String
_CurrentGfpfrSublayer1dayTHecDiscardedFrames_Object = MibTableColumn
currentGfpfrSublayer1dayTHecDiscardedFrames = _CurrentGfpfrSublayer1dayTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 101, 1, 3),
    _CurrentGfpfrSublayer1dayTHecDiscardedFrames_Type()
)
currentGfpfrSublayer1dayTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer1dayTHecDiscardedFrames.setStatus("current")


class _CurrentGfpfrSublayer1dayElapsedTime_Type(Integer32):
    """Custom type currentGfpfrSublayer1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentGfpfrSublayer1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentGfpfrSublayer1dayElapsedTime_Object = MibTableColumn
currentGfpfrSublayer1dayElapsedTime = _CurrentGfpfrSublayer1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 101, 1, 4),
    _CurrentGfpfrSublayer1dayElapsedTime_Type()
)
currentGfpfrSublayer1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentGfpfrSublayer1dayElapsedTime.setStatus("current")
_IntervalGfpfrSublayer15minTable_Object = MibTable
intervalGfpfrSublayer15minTable = _IntervalGfpfrSublayer15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102)
)
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minTable.setStatus("current")
_IntervalGfpfrSublayer15minEntry_Object = MibTableRow
intervalGfpfrSublayer15minEntry = _IntervalGfpfrSublayer15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102, 1)
)
intervalGfpfrSublayer15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpfrSublayer15minNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minEntry.setStatus("current")


class _IntervalGfpfrSublayer15minNumber_Type(Integer32):
    """Custom type intervalGfpfrSublayer15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalGfpfrSublayer15minNumber_Type.__name__ = "Integer32"
_IntervalGfpfrSublayer15minNumber_Object = MibTableColumn
intervalGfpfrSublayer15minNumber = _IntervalGfpfrSublayer15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102, 1, 1),
    _IntervalGfpfrSublayer15minNumber_Type()
)
intervalGfpfrSublayer15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minNumber.setStatus("current")
_IntervalGfpfrSublayer15minGoodFrames_Type = Counter64String
_IntervalGfpfrSublayer15minGoodFrames_Object = MibTableColumn
intervalGfpfrSublayer15minGoodFrames = _IntervalGfpfrSublayer15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102, 1, 2),
    _IntervalGfpfrSublayer15minGoodFrames_Type()
)
intervalGfpfrSublayer15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minGoodFrames.setStatus("current")
_IntervalGfpfrSublayer15minCHecDiscardedFrames_Type = Counter64String
_IntervalGfpfrSublayer15minCHecDiscardedFrames_Object = MibTableColumn
intervalGfpfrSublayer15minCHecDiscardedFrames = _IntervalGfpfrSublayer15minCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102, 1, 3),
    _IntervalGfpfrSublayer15minCHecDiscardedFrames_Type()
)
intervalGfpfrSublayer15minCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minCHecDiscardedFrames.setStatus("current")
_IntervalGfpfrSublayer15minTHecDiscardedFrames_Type = Counter64String
_IntervalGfpfrSublayer15minTHecDiscardedFrames_Object = MibTableColumn
intervalGfpfrSublayer15minTHecDiscardedFrames = _IntervalGfpfrSublayer15minTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102, 1, 4),
    _IntervalGfpfrSublayer15minTHecDiscardedFrames_Type()
)
intervalGfpfrSublayer15minTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minTHecDiscardedFrames.setStatus("current")
_IntervalGfpfrSublayer15minValidFlag_Type = TruthValue
_IntervalGfpfrSublayer15minValidFlag_Object = MibTableColumn
intervalGfpfrSublayer15minValidFlag = _IntervalGfpfrSublayer15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102, 1, 5),
    _IntervalGfpfrSublayer15minValidFlag_Type()
)
intervalGfpfrSublayer15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minValidFlag.setStatus("current")
_IntervalGfpfrSublayer15minTimeStamp_Type = DateAndTime
_IntervalGfpfrSublayer15minTimeStamp_Object = MibTableColumn
intervalGfpfrSublayer15minTimeStamp = _IntervalGfpfrSublayer15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 102, 1, 6),
    _IntervalGfpfrSublayer15minTimeStamp_Type()
)
intervalGfpfrSublayer15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer15minTimeStamp.setStatus("current")
_IntervalGfpfrSublayer1dayTable_Object = MibTable
intervalGfpfrSublayer1dayTable = _IntervalGfpfrSublayer1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103)
)
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayTable.setStatus("current")
_IntervalGfpfrSublayer1dayEntry_Object = MibTableRow
intervalGfpfrSublayer1dayEntry = _IntervalGfpfrSublayer1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103, 1)
)
intervalGfpfrSublayer1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalGfpfrSublayer1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayEntry.setStatus("current")


class _IntervalGfpfrSublayer1dayNumber_Type(Integer32):
    """Custom type intervalGfpfrSublayer1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalGfpfrSublayer1dayNumber_Type.__name__ = "Integer32"
_IntervalGfpfrSublayer1dayNumber_Object = MibTableColumn
intervalGfpfrSublayer1dayNumber = _IntervalGfpfrSublayer1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103, 1, 1),
    _IntervalGfpfrSublayer1dayNumber_Type()
)
intervalGfpfrSublayer1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayNumber.setStatus("current")
_IntervalGfpfrSublayer1dayGoodFrames_Type = Counter64String
_IntervalGfpfrSublayer1dayGoodFrames_Object = MibTableColumn
intervalGfpfrSublayer1dayGoodFrames = _IntervalGfpfrSublayer1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103, 1, 2),
    _IntervalGfpfrSublayer1dayGoodFrames_Type()
)
intervalGfpfrSublayer1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayGoodFrames.setStatus("current")
_IntervalGfpfrSublayer1dayCHecDiscardedFrames_Type = Counter64String
_IntervalGfpfrSublayer1dayCHecDiscardedFrames_Object = MibTableColumn
intervalGfpfrSublayer1dayCHecDiscardedFrames = _IntervalGfpfrSublayer1dayCHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103, 1, 3),
    _IntervalGfpfrSublayer1dayCHecDiscardedFrames_Type()
)
intervalGfpfrSublayer1dayCHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayCHecDiscardedFrames.setStatus("current")
_IntervalGfpfrSublayer1dayTHecDiscardedFrames_Type = Counter64String
_IntervalGfpfrSublayer1dayTHecDiscardedFrames_Object = MibTableColumn
intervalGfpfrSublayer1dayTHecDiscardedFrames = _IntervalGfpfrSublayer1dayTHecDiscardedFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103, 1, 4),
    _IntervalGfpfrSublayer1dayTHecDiscardedFrames_Type()
)
intervalGfpfrSublayer1dayTHecDiscardedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayTHecDiscardedFrames.setStatus("current")
_IntervalGfpfrSublayer1dayValidFlag_Type = TruthValue
_IntervalGfpfrSublayer1dayValidFlag_Object = MibTableColumn
intervalGfpfrSublayer1dayValidFlag = _IntervalGfpfrSublayer1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103, 1, 5),
    _IntervalGfpfrSublayer1dayValidFlag_Type()
)
intervalGfpfrSublayer1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayValidFlag.setStatus("current")
_IntervalGfpfrSublayer1dayTimeStamp_Type = DateAndTime
_IntervalGfpfrSublayer1dayTimeStamp_Object = MibTableColumn
intervalGfpfrSublayer1dayTimeStamp = _IntervalGfpfrSublayer1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 103, 1, 6),
    _IntervalGfpfrSublayer1dayTimeStamp_Type()
)
intervalGfpfrSublayer1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalGfpfrSublayer1dayTimeStamp.setStatus("current")
_ThresholdGfpSublayerTable_Object = MibTable
thresholdGfpSublayerTable = _ThresholdGfpSublayerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104)
)
if mibBuilder.loadTexts:
    thresholdGfpSublayerTable.setStatus("current")
_ThresholdGfpSublayerEntry_Object = MibTableRow
thresholdGfpSublayerEntry = _ThresholdGfpSublayerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104, 1)
)
thresholdGfpSublayerEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdGfpSublayerEntry.setStatus("current")


class _ThresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min_Object = MibTableColumn
thresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min = _ThresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104, 1, 1),
    _ThresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min_Type()
)
thresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min.setStatus("current")


class _ThresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day_Type(Unsigned32):
    """Custom type thresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day_Object = MibTableColumn
thresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day = _ThresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104, 1, 2),
    _ThresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day_Type()
)
thresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day.setStatus("current")


class _ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min_Object = MibTableColumn
thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min = _ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104, 1, 3),
    _ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min_Type()
)
thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min.setStatus("current")


class _ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day_Type(Unsigned32):
    """Custom type thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day_Type.__name__ = "Unsigned32"
_ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day_Object = MibTableColumn
thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day = _ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104, 1, 4),
    _ThresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day_Type()
)
thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day.setStatus("current")


class _ThresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min_Type(Unsigned32):
    """Custom type thresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min_Object = MibTableColumn
thresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min = _ThresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104, 1, 5),
    _ThresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min_Type()
)
thresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min.setStatus("current")
_ThresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day_Type = Unsigned32
_ThresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day_Object = MibTableColumn
thresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day = _ThresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 104, 1, 6),
    _ThresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day_Type()
)
thresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day.setStatus("current")
_ThresholdPhysConvCombinedTable_Object = MibTable
thresholdPhysConvCombinedTable = _ThresholdPhysConvCombinedTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 105)
)
if mibBuilder.loadTexts:
    thresholdPhysConvCombinedTable.setStatus("current")
_ThresholdPhysConvCombinedEntry_Object = MibTableRow
thresholdPhysConvCombinedEntry = _ThresholdPhysConvCombinedEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 105, 1)
)
thresholdPhysConvCombinedEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdPhysConvCombinedEntry.setStatus("current")


class _ThresholdPhysConvCombinedESHighThres15min_Type(Unsigned32):
    """Custom type thresholdPhysConvCombinedESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvCombinedESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdPhysConvCombinedESHighThres15min_Object = MibTableColumn
thresholdPhysConvCombinedESHighThres15min = _ThresholdPhysConvCombinedESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 105, 1, 1),
    _ThresholdPhysConvCombinedESHighThres15min_Type()
)
thresholdPhysConvCombinedESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvCombinedESHighThres15min.setStatus("current")


class _ThresholdPhysConvCombinedESHighThres1day_Type(Unsigned32):
    """Custom type thresholdPhysConvCombinedESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 89400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdPhysConvCombinedESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdPhysConvCombinedESHighThres1day_Object = MibTableColumn
thresholdPhysConvCombinedESHighThres1day = _ThresholdPhysConvCombinedESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 105, 1, 2),
    _ThresholdPhysConvCombinedESHighThres1day_Type()
)
thresholdPhysConvCombinedESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvCombinedESHighThres1day.setStatus("current")
_ThresholdPhysConvCombinedCVDEHighThres15min_Type = Counter64String
_ThresholdPhysConvCombinedCVDEHighThres15min_Object = MibTableColumn
thresholdPhysConvCombinedCVDEHighThres15min = _ThresholdPhysConvCombinedCVDEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 105, 1, 3),
    _ThresholdPhysConvCombinedCVDEHighThres15min_Type()
)
thresholdPhysConvCombinedCVDEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvCombinedCVDEHighThres15min.setStatus("current")
_ThresholdPhysConvCombinedCVDEHighThres1day_Type = Counter64String
_ThresholdPhysConvCombinedCVDEHighThres1day_Object = MibTableColumn
thresholdPhysConvCombinedCVDEHighThres1day = _ThresholdPhysConvCombinedCVDEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 105, 1, 4),
    _ThresholdPhysConvCombinedCVDEHighThres1day_Type()
)
thresholdPhysConvCombinedCVDEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdPhysConvCombinedCVDEHighThres1day.setStatus("current")
_CurrentPhysConvCombined15minTable_Object = MibTable
currentPhysConvCombined15minTable = _CurrentPhysConvCombined15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 106)
)
if mibBuilder.loadTexts:
    currentPhysConvCombined15minTable.setStatus("current")
_CurrentPhysConvCombined15minEntry_Object = MibTableRow
currentPhysConvCombined15minEntry = _CurrentPhysConvCombined15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 106, 1)
)
currentPhysConvCombined15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConvCombined15minEntry.setStatus("current")
_CurrentPhysConvCombined15minES_Type = Unsigned32
_CurrentPhysConvCombined15minES_Object = MibTableColumn
currentPhysConvCombined15minES = _CurrentPhysConvCombined15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 106, 1, 1),
    _CurrentPhysConvCombined15minES_Type()
)
currentPhysConvCombined15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvCombined15minES.setStatus("current")
_CurrentPhysConvCombined15minCVDE_Type = Counter64String
_CurrentPhysConvCombined15minCVDE_Object = MibTableColumn
currentPhysConvCombined15minCVDE = _CurrentPhysConvCombined15minCVDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 106, 1, 2),
    _CurrentPhysConvCombined15minCVDE_Type()
)
currentPhysConvCombined15minCVDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvCombined15minCVDE.setStatus("current")


class _CurrentPhysConvCombined15minElapsedTime_Type(Integer32):
    """Custom type currentPhysConvCombined15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConvCombined15minElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConvCombined15minElapsedTime_Object = MibTableColumn
currentPhysConvCombined15minElapsedTime = _CurrentPhysConvCombined15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 106, 1, 3),
    _CurrentPhysConvCombined15minElapsedTime_Type()
)
currentPhysConvCombined15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvCombined15minElapsedTime.setStatus("current")
_CurrentPhysConvCombined1dayTable_Object = MibTable
currentPhysConvCombined1dayTable = _CurrentPhysConvCombined1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 107)
)
if mibBuilder.loadTexts:
    currentPhysConvCombined1dayTable.setStatus("current")
_CurrentPhysConvCombined1dayEntry_Object = MibTableRow
currentPhysConvCombined1dayEntry = _CurrentPhysConvCombined1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 107, 1)
)
currentPhysConvCombined1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConvCombined1dayEntry.setStatus("current")
_CurrentPhysConvCombined1dayES_Type = Unsigned32
_CurrentPhysConvCombined1dayES_Object = MibTableColumn
currentPhysConvCombined1dayES = _CurrentPhysConvCombined1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 107, 1, 1),
    _CurrentPhysConvCombined1dayES_Type()
)
currentPhysConvCombined1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvCombined1dayES.setStatus("current")
_CurrentPhysConvCombined1dayCVDE_Type = Counter64String
_CurrentPhysConvCombined1dayCVDE_Object = MibTableColumn
currentPhysConvCombined1dayCVDE = _CurrentPhysConvCombined1dayCVDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 107, 1, 2),
    _CurrentPhysConvCombined1dayCVDE_Type()
)
currentPhysConvCombined1dayCVDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvCombined1dayCVDE.setStatus("current")


class _CurrentPhysConvCombined1dayElapsedTime_Type(Integer32):
    """Custom type currentPhysConvCombined1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConvCombined1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConvCombined1dayElapsedTime_Object = MibTableColumn
currentPhysConvCombined1dayElapsedTime = _CurrentPhysConvCombined1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 107, 1, 3),
    _CurrentPhysConvCombined1dayElapsedTime_Type()
)
currentPhysConvCombined1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvCombined1dayElapsedTime.setStatus("current")
_IntervalPhysConvCombined15minTable_Object = MibTable
intervalPhysConvCombined15minTable = _IntervalPhysConvCombined15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 108)
)
if mibBuilder.loadTexts:
    intervalPhysConvCombined15minTable.setStatus("current")
_IntervalPhysConvCombined15minEntry_Object = MibTableRow
intervalPhysConvCombined15minEntry = _IntervalPhysConvCombined15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 108, 1)
)
intervalPhysConvCombined15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConvCombined15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConvCombined15minEntry.setStatus("current")


class _IntervalPhysConvCombined15minNumber_Type(Integer32):
    """Custom type intervalPhysConvCombined15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysConvCombined15minNumber_Type.__name__ = "Integer32"
_IntervalPhysConvCombined15minNumber_Object = MibTableColumn
intervalPhysConvCombined15minNumber = _IntervalPhysConvCombined15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 108, 1, 1),
    _IntervalPhysConvCombined15minNumber_Type()
)
intervalPhysConvCombined15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConvCombined15minNumber.setStatus("current")
_IntervalPhysConvCombined15minES_Type = Unsigned32
_IntervalPhysConvCombined15minES_Object = MibTableColumn
intervalPhysConvCombined15minES = _IntervalPhysConvCombined15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 108, 1, 2),
    _IntervalPhysConvCombined15minES_Type()
)
intervalPhysConvCombined15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined15minES.setStatus("current")
_IntervalPhysConvCombined15minCVDE_Type = Counter64String
_IntervalPhysConvCombined15minCVDE_Object = MibTableColumn
intervalPhysConvCombined15minCVDE = _IntervalPhysConvCombined15minCVDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 108, 1, 3),
    _IntervalPhysConvCombined15minCVDE_Type()
)
intervalPhysConvCombined15minCVDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined15minCVDE.setStatus("current")
_IntervalPhysConvCombined15minValidFlag_Type = TruthValue
_IntervalPhysConvCombined15minValidFlag_Object = MibTableColumn
intervalPhysConvCombined15minValidFlag = _IntervalPhysConvCombined15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 108, 1, 4),
    _IntervalPhysConvCombined15minValidFlag_Type()
)
intervalPhysConvCombined15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined15minValidFlag.setStatus("current")
_IntervalPhysConvCombined15minTimeStamp_Type = DateAndTime
_IntervalPhysConvCombined15minTimeStamp_Object = MibTableColumn
intervalPhysConvCombined15minTimeStamp = _IntervalPhysConvCombined15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 108, 1, 5),
    _IntervalPhysConvCombined15minTimeStamp_Type()
)
intervalPhysConvCombined15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined15minTimeStamp.setStatus("current")
_IntervalPhysConvCombined1dayTable_Object = MibTable
intervalPhysConvCombined1dayTable = _IntervalPhysConvCombined1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 109)
)
if mibBuilder.loadTexts:
    intervalPhysConvCombined1dayTable.setStatus("current")
_IntervalPhysConvCombined1dayEntry_Object = MibTableRow
intervalPhysConvCombined1dayEntry = _IntervalPhysConvCombined1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 109, 1)
)
intervalPhysConvCombined1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConvCombined1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConvCombined1dayEntry.setStatus("current")


class _IntervalPhysConvCombined1dayNumber_Type(Integer32):
    """Custom type intervalPhysConvCombined1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysConvCombined1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysConvCombined1dayNumber_Object = MibTableColumn
intervalPhysConvCombined1dayNumber = _IntervalPhysConvCombined1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 109, 1, 1),
    _IntervalPhysConvCombined1dayNumber_Type()
)
intervalPhysConvCombined1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConvCombined1dayNumber.setStatus("current")
_IntervalPhysConvCombined1dayES_Type = Unsigned32
_IntervalPhysConvCombined1dayES_Object = MibTableColumn
intervalPhysConvCombined1dayES = _IntervalPhysConvCombined1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 109, 1, 2),
    _IntervalPhysConvCombined1dayES_Type()
)
intervalPhysConvCombined1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined1dayES.setStatus("current")
_IntervalPhysConvCombined1dayCVDE_Type = Counter64String
_IntervalPhysConvCombined1dayCVDE_Object = MibTableColumn
intervalPhysConvCombined1dayCVDE = _IntervalPhysConvCombined1dayCVDE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 109, 1, 3),
    _IntervalPhysConvCombined1dayCVDE_Type()
)
intervalPhysConvCombined1dayCVDE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined1dayCVDE.setStatus("current")
_IntervalPhysConvCombined1dayValidFlag_Type = TruthValue
_IntervalPhysConvCombined1dayValidFlag_Object = MibTableColumn
intervalPhysConvCombined1dayValidFlag = _IntervalPhysConvCombined1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 109, 1, 4),
    _IntervalPhysConvCombined1dayValidFlag_Type()
)
intervalPhysConvCombined1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined1dayValidFlag.setStatus("current")
_IntervalPhysConvCombined1dayTimeStamp_Type = DateAndTime
_IntervalPhysConvCombined1dayTimeStamp_Object = MibTableColumn
intervalPhysConvCombined1dayTimeStamp = _IntervalPhysConvCombined1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 109, 1, 5),
    _IntervalPhysConvCombined1dayTimeStamp_Type()
)
intervalPhysConvCombined1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvCombined1dayTimeStamp.setStatus("current")
_ThresholdOtuFecSublayerTable_Object = MibTable
thresholdOtuFecSublayerTable = _ThresholdOtuFecSublayerTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110)
)
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerTable.setStatus("current")
_ThresholdOtuFecSublayerEntry_Object = MibTableRow
thresholdOtuFecSublayerEntry = _ThresholdOtuFecSublayerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1)
)
thresholdOtuFecSublayerEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerEntry.setStatus("current")


class _ThresholdOtuFecSublayerESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOtuFecSublayerESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecSublayerESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOtuFecSublayerESHighThres15min_Object = MibTableColumn
thresholdOtuFecSublayerESHighThres15min = _ThresholdOtuFecSublayerESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 1),
    _ThresholdOtuFecSublayerESHighThres15min_Type()
)
thresholdOtuFecSublayerESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerESHighThres15min.setStatus("current")


class _ThresholdOtuFecSublayerESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOtuFecSublayerESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecSublayerESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOtuFecSublayerESHighThres1day_Object = MibTableColumn
thresholdOtuFecSublayerESHighThres1day = _ThresholdOtuFecSublayerESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 2),
    _ThresholdOtuFecSublayerESHighThres1day_Type()
)
thresholdOtuFecSublayerESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerESHighThres1day.setStatus("current")


class _ThresholdOtuFecSublayerSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdOtuFecSublayerSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecSublayerSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdOtuFecSublayerSESHighThres15min_Object = MibTableColumn
thresholdOtuFecSublayerSESHighThres15min = _ThresholdOtuFecSublayerSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 3),
    _ThresholdOtuFecSublayerSESHighThres15min_Type()
)
thresholdOtuFecSublayerSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerSESHighThres15min.setStatus("current")


class _ThresholdOtuFecSublayerSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdOtuFecSublayerSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdOtuFecSublayerSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdOtuFecSublayerSESHighThres1day_Object = MibTableColumn
thresholdOtuFecSublayerSESHighThres1day = _ThresholdOtuFecSublayerSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 4),
    _ThresholdOtuFecSublayerSESHighThres1day_Type()
)
thresholdOtuFecSublayerSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerSESHighThres1day.setStatus("current")
_ThresholdOtuFecSublayerCEHighThres15min_Type = Counter64String
_ThresholdOtuFecSublayerCEHighThres15min_Object = MibTableColumn
thresholdOtuFecSublayerCEHighThres15min = _ThresholdOtuFecSublayerCEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 5),
    _ThresholdOtuFecSublayerCEHighThres15min_Type()
)
thresholdOtuFecSublayerCEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerCEHighThres15min.setStatus("current")
_ThresholdOtuFecSublayerCEHighThres1day_Type = Counter64String
_ThresholdOtuFecSublayerCEHighThres1day_Object = MibTableColumn
thresholdOtuFecSublayerCEHighThres1day = _ThresholdOtuFecSublayerCEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 6),
    _ThresholdOtuFecSublayerCEHighThres1day_Type()
)
thresholdOtuFecSublayerCEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerCEHighThres1day.setStatus("current")
_ThresholdOtuFecSublayerUBEHighThres15min_Type = Counter64String
_ThresholdOtuFecSublayerUBEHighThres15min_Object = MibTableColumn
thresholdOtuFecSublayerUBEHighThres15min = _ThresholdOtuFecSublayerUBEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 7),
    _ThresholdOtuFecSublayerUBEHighThres15min_Type()
)
thresholdOtuFecSublayerUBEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerUBEHighThres15min.setStatus("current")
_ThresholdOtuFecSublayerUBEHighThres1day_Type = Counter64String
_ThresholdOtuFecSublayerUBEHighThres1day_Object = MibTableColumn
thresholdOtuFecSublayerUBEHighThres1day = _ThresholdOtuFecSublayerUBEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 8),
    _ThresholdOtuFecSublayerUBEHighThres1day_Type()
)
thresholdOtuFecSublayerUBEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerUBEHighThres1day.setStatus("current")
_ThresholdOtuFecSublayerBERCEHighThres15min_Type = Counter64String
_ThresholdOtuFecSublayerBERCEHighThres15min_Object = MibTableColumn
thresholdOtuFecSublayerBERCEHighThres15min = _ThresholdOtuFecSublayerBERCEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 9),
    _ThresholdOtuFecSublayerBERCEHighThres15min_Type()
)
thresholdOtuFecSublayerBERCEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerBERCEHighThres15min.setStatus("current")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerBERCEHighThres15min.setUnits("1.0E-18")
_ThresholdOtuFecSublayerBERCEHighThres1day_Type = Counter64String
_ThresholdOtuFecSublayerBERCEHighThres1day_Object = MibTableColumn
thresholdOtuFecSublayerBERCEHighThres1day = _ThresholdOtuFecSublayerBERCEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 110, 1, 10),
    _ThresholdOtuFecSublayerBERCEHighThres1day_Type()
)
thresholdOtuFecSublayerBERCEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerBERCEHighThres1day.setStatus("current")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerBERCEHighThres1day.setUnits("1.0E-18")
_ThresholdSonetLineMsTable_Object = MibTable
thresholdSonetLineMsTable = _ThresholdSonetLineMsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111)
)
if mibBuilder.loadTexts:
    thresholdSonetLineMsTable.setStatus("current")
_ThresholdSonetLineMsEntry_Object = MibTableRow
thresholdSonetLineMsEntry = _ThresholdSonetLineMsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1)
)
thresholdSonetLineMsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdSonetLineMsEntry.setStatus("current")


class _ThresholdSonetLineMsESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLineMsESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineMsESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLineMsESHighThres15min_Object = MibTableColumn
thresholdSonetLineMsESHighThres15min = _ThresholdSonetLineMsESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 1),
    _ThresholdSonetLineMsESHighThres15min_Type()
)
thresholdSonetLineMsESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsESHighThres15min.setStatus("current")


class _ThresholdSonetLineMsESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLineMsESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineMsESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLineMsESHighThres1day_Object = MibTableColumn
thresholdSonetLineMsESHighThres1day = _ThresholdSonetLineMsESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 2),
    _ThresholdSonetLineMsESHighThres1day_Type()
)
thresholdSonetLineMsESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsESHighThres1day.setStatus("current")


class _ThresholdSonetLineMsSESHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLineMsSESHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineMsSESHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLineMsSESHighThres15min_Object = MibTableColumn
thresholdSonetLineMsSESHighThres15min = _ThresholdSonetLineMsSESHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 3),
    _ThresholdSonetLineMsSESHighThres15min_Type()
)
thresholdSonetLineMsSESHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsSESHighThres15min.setStatus("current")


class _ThresholdSonetLineMsSESHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLineMsSESHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineMsSESHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLineMsSESHighThres1day_Object = MibTableColumn
thresholdSonetLineMsSESHighThres1day = _ThresholdSonetLineMsSESHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 4),
    _ThresholdSonetLineMsSESHighThres1day_Type()
)
thresholdSonetLineMsSESHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsSESHighThres1day.setStatus("current")


class _ThresholdSonetLineMsUASHighThres15min_Type(Unsigned32):
    """Custom type thresholdSonetLineMsUASHighThres15min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineMsUASHighThres15min_Type.__name__ = "Unsigned32"
_ThresholdSonetLineMsUASHighThres15min_Object = MibTableColumn
thresholdSonetLineMsUASHighThres15min = _ThresholdSonetLineMsUASHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 5),
    _ThresholdSonetLineMsUASHighThres15min_Type()
)
thresholdSonetLineMsUASHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsUASHighThres15min.setStatus("current")


class _ThresholdSonetLineMsUASSHighThres1day_Type(Unsigned32):
    """Custom type thresholdSonetLineMsUASSHighThres1day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdSonetLineMsUASSHighThres1day_Type.__name__ = "Unsigned32"
_ThresholdSonetLineMsUASSHighThres1day_Object = MibTableColumn
thresholdSonetLineMsUASSHighThres1day = _ThresholdSonetLineMsUASSHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 6),
    _ThresholdSonetLineMsUASSHighThres1day_Type()
)
thresholdSonetLineMsUASSHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsUASSHighThres1day.setStatus("current")
_ThresholdSonetLineMsCVHighThres15min_Type = Counter64String
_ThresholdSonetLineMsCVHighThres15min_Object = MibTableColumn
thresholdSonetLineMsCVHighThres15min = _ThresholdSonetLineMsCVHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 7),
    _ThresholdSonetLineMsCVHighThres15min_Type()
)
thresholdSonetLineMsCVHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsCVHighThres15min.setStatus("current")
_ThresholdSonetLineMsCVSHighThres1day_Type = Counter64String
_ThresholdSonetLineMsCVSHighThres1day_Object = MibTableColumn
thresholdSonetLineMsCVSHighThres1day = _ThresholdSonetLineMsCVSHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 111, 1, 8),
    _ThresholdSonetLineMsCVSHighThres1day_Type()
)
thresholdSonetLineMsCVSHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdSonetLineMsCVSHighThres1day.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain15minTable_Object = MibTable
intervalPhysPerfEstimatedSignalGain15minTable = _IntervalPhysPerfEstimatedSignalGain15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112)
)
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minTable.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain15minEntry_Object = MibTableRow
intervalPhysPerfEstimatedSignalGain15minEntry = _IntervalPhysPerfEstimatedSignalGain15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112, 1)
)
intervalPhysPerfEstimatedSignalGain15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfEstimatedSignalGain15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minEntry.setStatus("current")


class _IntervalPhysPerfEstimatedSignalGain15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfEstimatedSignalGain15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfEstimatedSignalGain15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfEstimatedSignalGain15minNumber_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain15minNumber = _IntervalPhysPerfEstimatedSignalGain15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112, 1, 1),
    _IntervalPhysPerfEstimatedSignalGain15minNumber_Type()
)
intervalPhysPerfEstimatedSignalGain15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minNumber.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain15minLow_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain15minLow_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain15minLow = _IntervalPhysPerfEstimatedSignalGain15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112, 1, 2),
    _IntervalPhysPerfEstimatedSignalGain15minLow_Type()
)
intervalPhysPerfEstimatedSignalGain15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minLow.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain15minMean_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain15minMean_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain15minMean = _IntervalPhysPerfEstimatedSignalGain15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112, 1, 3),
    _IntervalPhysPerfEstimatedSignalGain15minMean_Type()
)
intervalPhysPerfEstimatedSignalGain15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minMean.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain15minHigh_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain15minHigh_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain15minHigh = _IntervalPhysPerfEstimatedSignalGain15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112, 1, 4),
    _IntervalPhysPerfEstimatedSignalGain15minHigh_Type()
)
intervalPhysPerfEstimatedSignalGain15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minHigh.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain15minValidFlag_Type = TruthValue
_IntervalPhysPerfEstimatedSignalGain15minValidFlag_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain15minValidFlag = _IntervalPhysPerfEstimatedSignalGain15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112, 1, 5),
    _IntervalPhysPerfEstimatedSignalGain15minValidFlag_Type()
)
intervalPhysPerfEstimatedSignalGain15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minValidFlag.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfEstimatedSignalGain15minTimeStamp_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain15minTimeStamp = _IntervalPhysPerfEstimatedSignalGain15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 112, 1, 6),
    _IntervalPhysPerfEstimatedSignalGain15minTimeStamp_Type()
)
intervalPhysPerfEstimatedSignalGain15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain15minTimeStamp.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1dayTable_Object = MibTable
intervalPhysPerfEstimatedSignalGain1dayTable = _IntervalPhysPerfEstimatedSignalGain1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113)
)
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayTable.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1dayEntry_Object = MibTableRow
intervalPhysPerfEstimatedSignalGain1dayEntry = _IntervalPhysPerfEstimatedSignalGain1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113, 1)
)
intervalPhysPerfEstimatedSignalGain1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfEstimatedSignalGain1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayEntry.setStatus("current")


class _IntervalPhysPerfEstimatedSignalGain1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfEstimatedSignalGain1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfEstimatedSignalGain1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfEstimatedSignalGain1dayNumber_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1dayNumber = _IntervalPhysPerfEstimatedSignalGain1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113, 1, 1),
    _IntervalPhysPerfEstimatedSignalGain1dayNumber_Type()
)
intervalPhysPerfEstimatedSignalGain1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayNumber.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1dayLow_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain1dayLow_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1dayLow = _IntervalPhysPerfEstimatedSignalGain1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113, 1, 2),
    _IntervalPhysPerfEstimatedSignalGain1dayLow_Type()
)
intervalPhysPerfEstimatedSignalGain1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayLow.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain1dayMean_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain1dayMean_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1dayMean = _IntervalPhysPerfEstimatedSignalGain1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113, 1, 3),
    _IntervalPhysPerfEstimatedSignalGain1dayMean_Type()
)
intervalPhysPerfEstimatedSignalGain1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayMean.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain1dayHigh_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain1dayHigh_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1dayHigh = _IntervalPhysPerfEstimatedSignalGain1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113, 1, 4),
    _IntervalPhysPerfEstimatedSignalGain1dayHigh_Type()
)
intervalPhysPerfEstimatedSignalGain1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayHigh.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain1dayValidFlag_Type = TruthValue
_IntervalPhysPerfEstimatedSignalGain1dayValidFlag_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1dayValidFlag = _IntervalPhysPerfEstimatedSignalGain1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113, 1, 5),
    _IntervalPhysPerfEstimatedSignalGain1dayValidFlag_Type()
)
intervalPhysPerfEstimatedSignalGain1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayValidFlag.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfEstimatedSignalGain1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1dayTimeStamp = _IntervalPhysPerfEstimatedSignalGain1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 113, 1, 6),
    _IntervalPhysPerfEstimatedSignalGain1dayTimeStamp_Type()
)
intervalPhysPerfEstimatedSignalGain1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1dayTimeStamp.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1weekTable_Object = MibTable
intervalPhysPerfEstimatedSignalGain1weekTable = _IntervalPhysPerfEstimatedSignalGain1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114)
)
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekTable.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1weekEntry_Object = MibTableRow
intervalPhysPerfEstimatedSignalGain1weekEntry = _IntervalPhysPerfEstimatedSignalGain1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114, 1)
)
intervalPhysPerfEstimatedSignalGain1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfEstimatedSignalGain1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekEntry.setStatus("current")


class _IntervalPhysPerfEstimatedSignalGain1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfEstimatedSignalGain1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfEstimatedSignalGain1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfEstimatedSignalGain1weekNumber_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1weekNumber = _IntervalPhysPerfEstimatedSignalGain1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114, 1, 1),
    _IntervalPhysPerfEstimatedSignalGain1weekNumber_Type()
)
intervalPhysPerfEstimatedSignalGain1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekNumber.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1weekLow_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain1weekLow_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1weekLow = _IntervalPhysPerfEstimatedSignalGain1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114, 1, 2),
    _IntervalPhysPerfEstimatedSignalGain1weekLow_Type()
)
intervalPhysPerfEstimatedSignalGain1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekLow.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain1weekMean_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain1weekMean_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1weekMean = _IntervalPhysPerfEstimatedSignalGain1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114, 1, 3),
    _IntervalPhysPerfEstimatedSignalGain1weekMean_Type()
)
intervalPhysPerfEstimatedSignalGain1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekMean.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain1weekHigh_Type = Unsigned32
_IntervalPhysPerfEstimatedSignalGain1weekHigh_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1weekHigh = _IntervalPhysPerfEstimatedSignalGain1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114, 1, 4),
    _IntervalPhysPerfEstimatedSignalGain1weekHigh_Type()
)
intervalPhysPerfEstimatedSignalGain1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekHigh.setUnits("0.1 dB")
_IntervalPhysPerfEstimatedSignalGain1weekValidFlag_Type = TruthValue
_IntervalPhysPerfEstimatedSignalGain1weekValidFlag_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1weekValidFlag = _IntervalPhysPerfEstimatedSignalGain1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114, 1, 5),
    _IntervalPhysPerfEstimatedSignalGain1weekValidFlag_Type()
)
intervalPhysPerfEstimatedSignalGain1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekValidFlag.setStatus("current")
_IntervalPhysPerfEstimatedSignalGain1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfEstimatedSignalGain1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfEstimatedSignalGain1weekTimeStamp = _IntervalPhysPerfEstimatedSignalGain1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 114, 1, 6),
    _IntervalPhysPerfEstimatedSignalGain1weekTimeStamp_Type()
)
intervalPhysPerfEstimatedSignalGain1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfEstimatedSignalGain1weekTimeStamp.setStatus("current")
_IntervalPhysPerfCurrent15minTable_Object = MibTable
intervalPhysPerfCurrent15minTable = _IntervalPhysPerfCurrent15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minTable.setStatus("current")
_IntervalPhysPerfCurrent15minEntry_Object = MibTableRow
intervalPhysPerfCurrent15minEntry = _IntervalPhysPerfCurrent15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115, 1)
)
intervalPhysPerfCurrent15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCurrent15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minEntry.setStatus("current")


class _IntervalPhysPerfCurrent15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfCurrent15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfCurrent15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCurrent15minNumber_Object = MibTableColumn
intervalPhysPerfCurrent15minNumber = _IntervalPhysPerfCurrent15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115, 1, 1),
    _IntervalPhysPerfCurrent15minNumber_Type()
)
intervalPhysPerfCurrent15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minNumber.setStatus("current")
_IntervalPhysPerfCurrent15minLow_Type = Unsigned32
_IntervalPhysPerfCurrent15minLow_Object = MibTableColumn
intervalPhysPerfCurrent15minLow = _IntervalPhysPerfCurrent15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115, 1, 2),
    _IntervalPhysPerfCurrent15minLow_Type()
)
intervalPhysPerfCurrent15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minLow.setUnits("0.001 A")
_IntervalPhysPerfCurrent15minMean_Type = Unsigned32
_IntervalPhysPerfCurrent15minMean_Object = MibTableColumn
intervalPhysPerfCurrent15minMean = _IntervalPhysPerfCurrent15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115, 1, 3),
    _IntervalPhysPerfCurrent15minMean_Type()
)
intervalPhysPerfCurrent15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minMean.setUnits("0.001 A")
_IntervalPhysPerfCurrent15minHigh_Type = Unsigned32
_IntervalPhysPerfCurrent15minHigh_Object = MibTableColumn
intervalPhysPerfCurrent15minHigh = _IntervalPhysPerfCurrent15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115, 1, 4),
    _IntervalPhysPerfCurrent15minHigh_Type()
)
intervalPhysPerfCurrent15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minHigh.setUnits("0.001 A")
_IntervalPhysPerfCurrent15minValidFlag_Type = TruthValue
_IntervalPhysPerfCurrent15minValidFlag_Object = MibTableColumn
intervalPhysPerfCurrent15minValidFlag = _IntervalPhysPerfCurrent15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115, 1, 5),
    _IntervalPhysPerfCurrent15minValidFlag_Type()
)
intervalPhysPerfCurrent15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minValidFlag.setStatus("current")
_IntervalPhysPerfCurrent15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfCurrent15minTimeStamp_Object = MibTableColumn
intervalPhysPerfCurrent15minTimeStamp = _IntervalPhysPerfCurrent15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 115, 1, 6),
    _IntervalPhysPerfCurrent15minTimeStamp_Type()
)
intervalPhysPerfCurrent15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent15minTimeStamp.setStatus("current")
_IntervalPhysPerfCurrent1dayTable_Object = MibTable
intervalPhysPerfCurrent1dayTable = _IntervalPhysPerfCurrent1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayTable.setStatus("current")
_IntervalPhysPerfCurrent1dayEntry_Object = MibTableRow
intervalPhysPerfCurrent1dayEntry = _IntervalPhysPerfCurrent1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116, 1)
)
intervalPhysPerfCurrent1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCurrent1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayEntry.setStatus("current")


class _IntervalPhysPerfCurrent1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfCurrent1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfCurrent1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCurrent1dayNumber_Object = MibTableColumn
intervalPhysPerfCurrent1dayNumber = _IntervalPhysPerfCurrent1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116, 1, 1),
    _IntervalPhysPerfCurrent1dayNumber_Type()
)
intervalPhysPerfCurrent1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayNumber.setStatus("current")
_IntervalPhysPerfCurrent1dayLow_Type = Unsigned32
_IntervalPhysPerfCurrent1dayLow_Object = MibTableColumn
intervalPhysPerfCurrent1dayLow = _IntervalPhysPerfCurrent1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116, 1, 2),
    _IntervalPhysPerfCurrent1dayLow_Type()
)
intervalPhysPerfCurrent1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayLow.setUnits("0.001 A")
_IntervalPhysPerfCurrent1dayMean_Type = Unsigned32
_IntervalPhysPerfCurrent1dayMean_Object = MibTableColumn
intervalPhysPerfCurrent1dayMean = _IntervalPhysPerfCurrent1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116, 1, 3),
    _IntervalPhysPerfCurrent1dayMean_Type()
)
intervalPhysPerfCurrent1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayMean.setUnits("0.001 A")
_IntervalPhysPerfCurrent1dayHigh_Type = Unsigned32
_IntervalPhysPerfCurrent1dayHigh_Object = MibTableColumn
intervalPhysPerfCurrent1dayHigh = _IntervalPhysPerfCurrent1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116, 1, 4),
    _IntervalPhysPerfCurrent1dayHigh_Type()
)
intervalPhysPerfCurrent1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayHigh.setUnits("0.001 A")
_IntervalPhysPerfCurrent1dayValidFlag_Type = TruthValue
_IntervalPhysPerfCurrent1dayValidFlag_Object = MibTableColumn
intervalPhysPerfCurrent1dayValidFlag = _IntervalPhysPerfCurrent1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116, 1, 5),
    _IntervalPhysPerfCurrent1dayValidFlag_Type()
)
intervalPhysPerfCurrent1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayValidFlag.setStatus("current")
_IntervalPhysPerfCurrent1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfCurrent1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfCurrent1dayTimeStamp = _IntervalPhysPerfCurrent1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 116, 1, 6),
    _IntervalPhysPerfCurrent1dayTimeStamp_Type()
)
intervalPhysPerfCurrent1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1dayTimeStamp.setStatus("current")
_IntervalPhysPerfCurrent1weekTable_Object = MibTable
intervalPhysPerfCurrent1weekTable = _IntervalPhysPerfCurrent1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekTable.setStatus("current")
_IntervalPhysPerfCurrent1weekEntry_Object = MibTableRow
intervalPhysPerfCurrent1weekEntry = _IntervalPhysPerfCurrent1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117, 1)
)
intervalPhysPerfCurrent1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCurrent1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekEntry.setStatus("current")


class _IntervalPhysPerfCurrent1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfCurrent1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfCurrent1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCurrent1weekNumber_Object = MibTableColumn
intervalPhysPerfCurrent1weekNumber = _IntervalPhysPerfCurrent1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117, 1, 1),
    _IntervalPhysPerfCurrent1weekNumber_Type()
)
intervalPhysPerfCurrent1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekNumber.setStatus("current")
_IntervalPhysPerfCurrent1weekLow_Type = Unsigned32
_IntervalPhysPerfCurrent1weekLow_Object = MibTableColumn
intervalPhysPerfCurrent1weekLow = _IntervalPhysPerfCurrent1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117, 1, 2),
    _IntervalPhysPerfCurrent1weekLow_Type()
)
intervalPhysPerfCurrent1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekLow.setUnits("0.001 A")
_IntervalPhysPerfCurrent1weekMean_Type = Unsigned32
_IntervalPhysPerfCurrent1weekMean_Object = MibTableColumn
intervalPhysPerfCurrent1weekMean = _IntervalPhysPerfCurrent1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117, 1, 3),
    _IntervalPhysPerfCurrent1weekMean_Type()
)
intervalPhysPerfCurrent1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekMean.setUnits("0.001 A")
_IntervalPhysPerfCurrent1weekHigh_Type = Unsigned32
_IntervalPhysPerfCurrent1weekHigh_Object = MibTableColumn
intervalPhysPerfCurrent1weekHigh = _IntervalPhysPerfCurrent1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117, 1, 4),
    _IntervalPhysPerfCurrent1weekHigh_Type()
)
intervalPhysPerfCurrent1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekHigh.setUnits("0.001 A")
_IntervalPhysPerfCurrent1weekValidFlag_Type = TruthValue
_IntervalPhysPerfCurrent1weekValidFlag_Object = MibTableColumn
intervalPhysPerfCurrent1weekValidFlag = _IntervalPhysPerfCurrent1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117, 1, 5),
    _IntervalPhysPerfCurrent1weekValidFlag_Type()
)
intervalPhysPerfCurrent1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekValidFlag.setStatus("current")
_IntervalPhysPerfCurrent1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfCurrent1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfCurrent1weekTimeStamp = _IntervalPhysPerfCurrent1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 117, 1, 6),
    _IntervalPhysPerfCurrent1weekTimeStamp_Type()
)
intervalPhysPerfCurrent1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrent1weekTimeStamp.setStatus("current")
_IntervalPhysPerfCurrentOscGain15minTable_Object = MibTable
intervalPhysPerfCurrentOscGain15minTable = _IntervalPhysPerfCurrentOscGain15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minTable.setStatus("current")
_IntervalPhysPerfCurrentOscGain15minEntry_Object = MibTableRow
intervalPhysPerfCurrentOscGain15minEntry = _IntervalPhysPerfCurrentOscGain15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118, 1)
)
intervalPhysPerfCurrentOscGain15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCurrentOscGain15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minEntry.setStatus("current")


class _IntervalPhysPerfCurrentOscGain15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfCurrentOscGain15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfCurrentOscGain15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCurrentOscGain15minNumber_Object = MibTableColumn
intervalPhysPerfCurrentOscGain15minNumber = _IntervalPhysPerfCurrentOscGain15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118, 1, 1),
    _IntervalPhysPerfCurrentOscGain15minNumber_Type()
)
intervalPhysPerfCurrentOscGain15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minNumber.setStatus("current")
_IntervalPhysPerfCurrentOscGain15minLow_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain15minLow_Object = MibTableColumn
intervalPhysPerfCurrentOscGain15minLow = _IntervalPhysPerfCurrentOscGain15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118, 1, 2),
    _IntervalPhysPerfCurrentOscGain15minLow_Type()
)
intervalPhysPerfCurrentOscGain15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minLow.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain15minMean_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain15minMean_Object = MibTableColumn
intervalPhysPerfCurrentOscGain15minMean = _IntervalPhysPerfCurrentOscGain15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118, 1, 3),
    _IntervalPhysPerfCurrentOscGain15minMean_Type()
)
intervalPhysPerfCurrentOscGain15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minMean.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain15minHigh_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain15minHigh_Object = MibTableColumn
intervalPhysPerfCurrentOscGain15minHigh = _IntervalPhysPerfCurrentOscGain15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118, 1, 4),
    _IntervalPhysPerfCurrentOscGain15minHigh_Type()
)
intervalPhysPerfCurrentOscGain15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minHigh.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain15minValidFlag_Type = TruthValue
_IntervalPhysPerfCurrentOscGain15minValidFlag_Object = MibTableColumn
intervalPhysPerfCurrentOscGain15minValidFlag = _IntervalPhysPerfCurrentOscGain15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118, 1, 5),
    _IntervalPhysPerfCurrentOscGain15minValidFlag_Type()
)
intervalPhysPerfCurrentOscGain15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minValidFlag.setStatus("current")
_IntervalPhysPerfCurrentOscGain15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfCurrentOscGain15minTimeStamp_Object = MibTableColumn
intervalPhysPerfCurrentOscGain15minTimeStamp = _IntervalPhysPerfCurrentOscGain15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 118, 1, 6),
    _IntervalPhysPerfCurrentOscGain15minTimeStamp_Type()
)
intervalPhysPerfCurrentOscGain15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain15minTimeStamp.setStatus("current")
_IntervalPhysPerfCurrentOscGain1dayTable_Object = MibTable
intervalPhysPerfCurrentOscGain1dayTable = _IntervalPhysPerfCurrentOscGain1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayTable.setStatus("current")
_IntervalPhysPerfCurrentOscGain1dayEntry_Object = MibTableRow
intervalPhysPerfCurrentOscGain1dayEntry = _IntervalPhysPerfCurrentOscGain1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119, 1)
)
intervalPhysPerfCurrentOscGain1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCurrentOscGain1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayEntry.setStatus("current")


class _IntervalPhysPerfCurrentOscGain1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfCurrentOscGain1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfCurrentOscGain1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCurrentOscGain1dayNumber_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1dayNumber = _IntervalPhysPerfCurrentOscGain1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119, 1, 1),
    _IntervalPhysPerfCurrentOscGain1dayNumber_Type()
)
intervalPhysPerfCurrentOscGain1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayNumber.setStatus("current")
_IntervalPhysPerfCurrentOscGain1dayLow_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain1dayLow_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1dayLow = _IntervalPhysPerfCurrentOscGain1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119, 1, 2),
    _IntervalPhysPerfCurrentOscGain1dayLow_Type()
)
intervalPhysPerfCurrentOscGain1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayLow.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain1dayMean_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain1dayMean_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1dayMean = _IntervalPhysPerfCurrentOscGain1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119, 1, 3),
    _IntervalPhysPerfCurrentOscGain1dayMean_Type()
)
intervalPhysPerfCurrentOscGain1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayMean.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain1dayHigh_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain1dayHigh_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1dayHigh = _IntervalPhysPerfCurrentOscGain1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119, 1, 4),
    _IntervalPhysPerfCurrentOscGain1dayHigh_Type()
)
intervalPhysPerfCurrentOscGain1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayHigh.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain1dayValidFlag_Type = TruthValue
_IntervalPhysPerfCurrentOscGain1dayValidFlag_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1dayValidFlag = _IntervalPhysPerfCurrentOscGain1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119, 1, 5),
    _IntervalPhysPerfCurrentOscGain1dayValidFlag_Type()
)
intervalPhysPerfCurrentOscGain1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayValidFlag.setStatus("current")
_IntervalPhysPerfCurrentOscGain1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfCurrentOscGain1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1dayTimeStamp = _IntervalPhysPerfCurrentOscGain1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 119, 1, 6),
    _IntervalPhysPerfCurrentOscGain1dayTimeStamp_Type()
)
intervalPhysPerfCurrentOscGain1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1dayTimeStamp.setStatus("current")
_IntervalPhysPerfCurrentOscGain1weekTable_Object = MibTable
intervalPhysPerfCurrentOscGain1weekTable = _IntervalPhysPerfCurrentOscGain1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekTable.setStatus("current")
_IntervalPhysPerfCurrentOscGain1weekEntry_Object = MibTableRow
intervalPhysPerfCurrentOscGain1weekEntry = _IntervalPhysPerfCurrentOscGain1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120, 1)
)
intervalPhysPerfCurrentOscGain1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCurrentOscGain1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekEntry.setStatus("current")


class _IntervalPhysPerfCurrentOscGain1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfCurrentOscGain1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfCurrentOscGain1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCurrentOscGain1weekNumber_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1weekNumber = _IntervalPhysPerfCurrentOscGain1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120, 1, 1),
    _IntervalPhysPerfCurrentOscGain1weekNumber_Type()
)
intervalPhysPerfCurrentOscGain1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekNumber.setStatus("current")
_IntervalPhysPerfCurrentOscGain1weekLow_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain1weekLow_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1weekLow = _IntervalPhysPerfCurrentOscGain1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120, 1, 2),
    _IntervalPhysPerfCurrentOscGain1weekLow_Type()
)
intervalPhysPerfCurrentOscGain1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekLow.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain1weekMean_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain1weekMean_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1weekMean = _IntervalPhysPerfCurrentOscGain1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120, 1, 3),
    _IntervalPhysPerfCurrentOscGain1weekMean_Type()
)
intervalPhysPerfCurrentOscGain1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekMean.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain1weekHigh_Type = Unsigned32
_IntervalPhysPerfCurrentOscGain1weekHigh_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1weekHigh = _IntervalPhysPerfCurrentOscGain1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120, 1, 4),
    _IntervalPhysPerfCurrentOscGain1weekHigh_Type()
)
intervalPhysPerfCurrentOscGain1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekHigh.setUnits("0.1 dB")
_IntervalPhysPerfCurrentOscGain1weekValidFlag_Type = TruthValue
_IntervalPhysPerfCurrentOscGain1weekValidFlag_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1weekValidFlag = _IntervalPhysPerfCurrentOscGain1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120, 1, 5),
    _IntervalPhysPerfCurrentOscGain1weekValidFlag_Type()
)
intervalPhysPerfCurrentOscGain1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekValidFlag.setStatus("current")
_IntervalPhysPerfCurrentOscGain1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfCurrentOscGain1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfCurrentOscGain1weekTimeStamp = _IntervalPhysPerfCurrentOscGain1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 120, 1, 6),
    _IntervalPhysPerfCurrentOscGain1weekTimeStamp_Type()
)
intervalPhysPerfCurrentOscGain1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCurrentOscGain1weekTimeStamp.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv15minTable_Object = MibTable
intervalPhysPerfBackreflectionPwrRcv15minTable = _IntervalPhysPerfBackreflectionPwrRcv15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121)
)
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minTable.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv15minEntry_Object = MibTableRow
intervalPhysPerfBackreflectionPwrRcv15minEntry = _IntervalPhysPerfBackreflectionPwrRcv15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121, 1)
)
intervalPhysPerfBackreflectionPwrRcv15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfBackreflectionPwrRcv15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minEntry.setStatus("current")


class _IntervalPhysPerfBackreflectionPwrRcv15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfBackreflectionPwrRcv15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfBackreflectionPwrRcv15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfBackreflectionPwrRcv15minNumber_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv15minNumber = _IntervalPhysPerfBackreflectionPwrRcv15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121, 1, 1),
    _IntervalPhysPerfBackreflectionPwrRcv15minNumber_Type()
)
intervalPhysPerfBackreflectionPwrRcv15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minNumber.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv15minLow_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv15minLow_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv15minLow = _IntervalPhysPerfBackreflectionPwrRcv15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121, 1, 2),
    _IntervalPhysPerfBackreflectionPwrRcv15minLow_Type()
)
intervalPhysPerfBackreflectionPwrRcv15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minLow.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv15minMean_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv15minMean_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv15minMean = _IntervalPhysPerfBackreflectionPwrRcv15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121, 1, 3),
    _IntervalPhysPerfBackreflectionPwrRcv15minMean_Type()
)
intervalPhysPerfBackreflectionPwrRcv15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minMean.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv15minHigh_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv15minHigh_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv15minHigh = _IntervalPhysPerfBackreflectionPwrRcv15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121, 1, 4),
    _IntervalPhysPerfBackreflectionPwrRcv15minHigh_Type()
)
intervalPhysPerfBackreflectionPwrRcv15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minHigh.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv15minValidFlag_Type = TruthValue
_IntervalPhysPerfBackreflectionPwrRcv15minValidFlag_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv15minValidFlag = _IntervalPhysPerfBackreflectionPwrRcv15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121, 1, 5),
    _IntervalPhysPerfBackreflectionPwrRcv15minValidFlag_Type()
)
intervalPhysPerfBackreflectionPwrRcv15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minValidFlag.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfBackreflectionPwrRcv15minTimeStamp_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv15minTimeStamp = _IntervalPhysPerfBackreflectionPwrRcv15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 121, 1, 6),
    _IntervalPhysPerfBackreflectionPwrRcv15minTimeStamp_Type()
)
intervalPhysPerfBackreflectionPwrRcv15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv15minTimeStamp.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1dayTable_Object = MibTable
intervalPhysPerfBackreflectionPwrRcv1dayTable = _IntervalPhysPerfBackreflectionPwrRcv1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122)
)
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayTable.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1dayEntry_Object = MibTableRow
intervalPhysPerfBackreflectionPwrRcv1dayEntry = _IntervalPhysPerfBackreflectionPwrRcv1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122, 1)
)
intervalPhysPerfBackreflectionPwrRcv1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfBackreflectionPwrRcv1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayEntry.setStatus("current")


class _IntervalPhysPerfBackreflectionPwrRcv1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfBackreflectionPwrRcv1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfBackreflectionPwrRcv1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfBackreflectionPwrRcv1dayNumber_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1dayNumber = _IntervalPhysPerfBackreflectionPwrRcv1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122, 1, 1),
    _IntervalPhysPerfBackreflectionPwrRcv1dayNumber_Type()
)
intervalPhysPerfBackreflectionPwrRcv1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayNumber.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1dayLow_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv1dayLow_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1dayLow = _IntervalPhysPerfBackreflectionPwrRcv1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122, 1, 2),
    _IntervalPhysPerfBackreflectionPwrRcv1dayLow_Type()
)
intervalPhysPerfBackreflectionPwrRcv1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayLow.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv1dayMean_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv1dayMean_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1dayMean = _IntervalPhysPerfBackreflectionPwrRcv1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122, 1, 3),
    _IntervalPhysPerfBackreflectionPwrRcv1dayMean_Type()
)
intervalPhysPerfBackreflectionPwrRcv1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayMean.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv1dayHigh_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv1dayHigh_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1dayHigh = _IntervalPhysPerfBackreflectionPwrRcv1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122, 1, 4),
    _IntervalPhysPerfBackreflectionPwrRcv1dayHigh_Type()
)
intervalPhysPerfBackreflectionPwrRcv1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayHigh.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv1dayValidFlag_Type = TruthValue
_IntervalPhysPerfBackreflectionPwrRcv1dayValidFlag_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1dayValidFlag = _IntervalPhysPerfBackreflectionPwrRcv1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122, 1, 5),
    _IntervalPhysPerfBackreflectionPwrRcv1dayValidFlag_Type()
)
intervalPhysPerfBackreflectionPwrRcv1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayValidFlag.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfBackreflectionPwrRcv1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1dayTimeStamp = _IntervalPhysPerfBackreflectionPwrRcv1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 122, 1, 6),
    _IntervalPhysPerfBackreflectionPwrRcv1dayTimeStamp_Type()
)
intervalPhysPerfBackreflectionPwrRcv1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1dayTimeStamp.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1weekTable_Object = MibTable
intervalPhysPerfBackreflectionPwrRcv1weekTable = _IntervalPhysPerfBackreflectionPwrRcv1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123)
)
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekTable.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1weekEntry_Object = MibTableRow
intervalPhysPerfBackreflectionPwrRcv1weekEntry = _IntervalPhysPerfBackreflectionPwrRcv1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123, 1)
)
intervalPhysPerfBackreflectionPwrRcv1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfBackreflectionPwrRcv1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekEntry.setStatus("current")


class _IntervalPhysPerfBackreflectionPwrRcv1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfBackreflectionPwrRcv1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfBackreflectionPwrRcv1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfBackreflectionPwrRcv1weekNumber_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1weekNumber = _IntervalPhysPerfBackreflectionPwrRcv1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123, 1, 1),
    _IntervalPhysPerfBackreflectionPwrRcv1weekNumber_Type()
)
intervalPhysPerfBackreflectionPwrRcv1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekNumber.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1weekLow_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv1weekLow_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1weekLow = _IntervalPhysPerfBackreflectionPwrRcv1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123, 1, 2),
    _IntervalPhysPerfBackreflectionPwrRcv1weekLow_Type()
)
intervalPhysPerfBackreflectionPwrRcv1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekLow.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv1weekMean_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv1weekMean_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1weekMean = _IntervalPhysPerfBackreflectionPwrRcv1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123, 1, 3),
    _IntervalPhysPerfBackreflectionPwrRcv1weekMean_Type()
)
intervalPhysPerfBackreflectionPwrRcv1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekMean.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv1weekHigh_Type = Integer32
_IntervalPhysPerfBackreflectionPwrRcv1weekHigh_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1weekHigh = _IntervalPhysPerfBackreflectionPwrRcv1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123, 1, 4),
    _IntervalPhysPerfBackreflectionPwrRcv1weekHigh_Type()
)
intervalPhysPerfBackreflectionPwrRcv1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekHigh.setUnits("0.1 dB")
_IntervalPhysPerfBackreflectionPwrRcv1weekValidFlag_Type = TruthValue
_IntervalPhysPerfBackreflectionPwrRcv1weekValidFlag_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1weekValidFlag = _IntervalPhysPerfBackreflectionPwrRcv1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123, 1, 5),
    _IntervalPhysPerfBackreflectionPwrRcv1weekValidFlag_Type()
)
intervalPhysPerfBackreflectionPwrRcv1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekValidFlag.setStatus("current")
_IntervalPhysPerfBackreflectionPwrRcv1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfBackreflectionPwrRcv1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfBackreflectionPwrRcv1weekTimeStamp = _IntervalPhysPerfBackreflectionPwrRcv1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 123, 1, 6),
    _IntervalPhysPerfBackreflectionPwrRcv1weekTimeStamp_Type()
)
intervalPhysPerfBackreflectionPwrRcv1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfBackreflectionPwrRcv1weekTimeStamp.setStatus("current")
_IntervalPhysPerfOscPwr15minTable_Object = MibTable
intervalPhysPerfOscPwr15minTable = _IntervalPhysPerfOscPwr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minTable.setStatus("current")
_IntervalPhysPerfOscPwr15minEntry_Object = MibTableRow
intervalPhysPerfOscPwr15minEntry = _IntervalPhysPerfOscPwr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124, 1)
)
intervalPhysPerfOscPwr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOscPwr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minEntry.setStatus("current")


class _IntervalPhysPerfOscPwr15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfOscPwr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfOscPwr15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOscPwr15minNumber_Object = MibTableColumn
intervalPhysPerfOscPwr15minNumber = _IntervalPhysPerfOscPwr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124, 1, 1),
    _IntervalPhysPerfOscPwr15minNumber_Type()
)
intervalPhysPerfOscPwr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minNumber.setStatus("current")
_IntervalPhysPerfOscPwr15minLow_Type = Integer32
_IntervalPhysPerfOscPwr15minLow_Object = MibTableColumn
intervalPhysPerfOscPwr15minLow = _IntervalPhysPerfOscPwr15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124, 1, 2),
    _IntervalPhysPerfOscPwr15minLow_Type()
)
intervalPhysPerfOscPwr15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minLow.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr15minMean_Type = Integer32
_IntervalPhysPerfOscPwr15minMean_Object = MibTableColumn
intervalPhysPerfOscPwr15minMean = _IntervalPhysPerfOscPwr15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124, 1, 3),
    _IntervalPhysPerfOscPwr15minMean_Type()
)
intervalPhysPerfOscPwr15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minMean.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr15minHigh_Type = Integer32
_IntervalPhysPerfOscPwr15minHigh_Object = MibTableColumn
intervalPhysPerfOscPwr15minHigh = _IntervalPhysPerfOscPwr15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124, 1, 4),
    _IntervalPhysPerfOscPwr15minHigh_Type()
)
intervalPhysPerfOscPwr15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr15minValidFlag_Type = TruthValue
_IntervalPhysPerfOscPwr15minValidFlag_Object = MibTableColumn
intervalPhysPerfOscPwr15minValidFlag = _IntervalPhysPerfOscPwr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124, 1, 5),
    _IntervalPhysPerfOscPwr15minValidFlag_Type()
)
intervalPhysPerfOscPwr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minValidFlag.setStatus("current")
_IntervalPhysPerfOscPwr15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfOscPwr15minTimeStamp_Object = MibTableColumn
intervalPhysPerfOscPwr15minTimeStamp = _IntervalPhysPerfOscPwr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 124, 1, 6),
    _IntervalPhysPerfOscPwr15minTimeStamp_Type()
)
intervalPhysPerfOscPwr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr15minTimeStamp.setStatus("current")
_IntervalPhysPerfOscPwr1dayTable_Object = MibTable
intervalPhysPerfOscPwr1dayTable = _IntervalPhysPerfOscPwr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayTable.setStatus("current")
_IntervalPhysPerfOscPwr1dayEntry_Object = MibTableRow
intervalPhysPerfOscPwr1dayEntry = _IntervalPhysPerfOscPwr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125, 1)
)
intervalPhysPerfOscPwr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOscPwr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayEntry.setStatus("current")


class _IntervalPhysPerfOscPwr1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfOscPwr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfOscPwr1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOscPwr1dayNumber_Object = MibTableColumn
intervalPhysPerfOscPwr1dayNumber = _IntervalPhysPerfOscPwr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125, 1, 1),
    _IntervalPhysPerfOscPwr1dayNumber_Type()
)
intervalPhysPerfOscPwr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayNumber.setStatus("current")
_IntervalPhysPerfOscPwr1dayLow_Type = Integer32
_IntervalPhysPerfOscPwr1dayLow_Object = MibTableColumn
intervalPhysPerfOscPwr1dayLow = _IntervalPhysPerfOscPwr1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125, 1, 2),
    _IntervalPhysPerfOscPwr1dayLow_Type()
)
intervalPhysPerfOscPwr1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayLow.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr1dayMean_Type = Integer32
_IntervalPhysPerfOscPwr1dayMean_Object = MibTableColumn
intervalPhysPerfOscPwr1dayMean = _IntervalPhysPerfOscPwr1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125, 1, 3),
    _IntervalPhysPerfOscPwr1dayMean_Type()
)
intervalPhysPerfOscPwr1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayMean.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr1dayHigh_Type = Integer32
_IntervalPhysPerfOscPwr1dayHigh_Object = MibTableColumn
intervalPhysPerfOscPwr1dayHigh = _IntervalPhysPerfOscPwr1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125, 1, 4),
    _IntervalPhysPerfOscPwr1dayHigh_Type()
)
intervalPhysPerfOscPwr1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr1dayValidFlag_Type = TruthValue
_IntervalPhysPerfOscPwr1dayValidFlag_Object = MibTableColumn
intervalPhysPerfOscPwr1dayValidFlag = _IntervalPhysPerfOscPwr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125, 1, 5),
    _IntervalPhysPerfOscPwr1dayValidFlag_Type()
)
intervalPhysPerfOscPwr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayValidFlag.setStatus("current")
_IntervalPhysPerfOscPwr1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfOscPwr1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfOscPwr1dayTimeStamp = _IntervalPhysPerfOscPwr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 125, 1, 6),
    _IntervalPhysPerfOscPwr1dayTimeStamp_Type()
)
intervalPhysPerfOscPwr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1dayTimeStamp.setStatus("current")
_IntervalPhysPerfOscPwr1weekTable_Object = MibTable
intervalPhysPerfOscPwr1weekTable = _IntervalPhysPerfOscPwr1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekTable.setStatus("current")
_IntervalPhysPerfOscPwr1weekEntry_Object = MibTableRow
intervalPhysPerfOscPwr1weekEntry = _IntervalPhysPerfOscPwr1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126, 1)
)
intervalPhysPerfOscPwr1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOscPwr1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekEntry.setStatus("current")


class _IntervalPhysPerfOscPwr1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfOscPwr1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfOscPwr1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOscPwr1weekNumber_Object = MibTableColumn
intervalPhysPerfOscPwr1weekNumber = _IntervalPhysPerfOscPwr1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126, 1, 1),
    _IntervalPhysPerfOscPwr1weekNumber_Type()
)
intervalPhysPerfOscPwr1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekNumber.setStatus("current")
_IntervalPhysPerfOscPwr1weekLow_Type = Integer32
_IntervalPhysPerfOscPwr1weekLow_Object = MibTableColumn
intervalPhysPerfOscPwr1weekLow = _IntervalPhysPerfOscPwr1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126, 1, 2),
    _IntervalPhysPerfOscPwr1weekLow_Type()
)
intervalPhysPerfOscPwr1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekLow.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr1weekMean_Type = Integer32
_IntervalPhysPerfOscPwr1weekMean_Object = MibTableColumn
intervalPhysPerfOscPwr1weekMean = _IntervalPhysPerfOscPwr1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126, 1, 3),
    _IntervalPhysPerfOscPwr1weekMean_Type()
)
intervalPhysPerfOscPwr1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekMean.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr1weekHigh_Type = Integer32
_IntervalPhysPerfOscPwr1weekHigh_Object = MibTableColumn
intervalPhysPerfOscPwr1weekHigh = _IntervalPhysPerfOscPwr1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126, 1, 4),
    _IntervalPhysPerfOscPwr1weekHigh_Type()
)
intervalPhysPerfOscPwr1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOscPwr1weekValidFlag_Type = TruthValue
_IntervalPhysPerfOscPwr1weekValidFlag_Object = MibTableColumn
intervalPhysPerfOscPwr1weekValidFlag = _IntervalPhysPerfOscPwr1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126, 1, 5),
    _IntervalPhysPerfOscPwr1weekValidFlag_Type()
)
intervalPhysPerfOscPwr1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekValidFlag.setStatus("current")
_IntervalPhysPerfOscPwr1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfOscPwr1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfOscPwr1weekTimeStamp = _IntervalPhysPerfOscPwr1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 126, 1, 6),
    _IntervalPhysPerfOscPwr1weekTimeStamp_Type()
)
intervalPhysPerfOscPwr1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscPwr1weekTimeStamp.setStatus("current")
_IntervalPhysPerfPumpPwr15minTable_Object = MibTable
intervalPhysPerfPumpPwr15minTable = _IntervalPhysPerfPumpPwr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127)
)
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minTable.setStatus("current")
_IntervalPhysPerfPumpPwr15minEntry_Object = MibTableRow
intervalPhysPerfPumpPwr15minEntry = _IntervalPhysPerfPumpPwr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127, 1)
)
intervalPhysPerfPumpPwr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfPumpPwr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minEntry.setStatus("current")


class _IntervalPhysPerfPumpPwr15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfPumpPwr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfPumpPwr15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfPumpPwr15minNumber_Object = MibTableColumn
intervalPhysPerfPumpPwr15minNumber = _IntervalPhysPerfPumpPwr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127, 1, 1),
    _IntervalPhysPerfPumpPwr15minNumber_Type()
)
intervalPhysPerfPumpPwr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minNumber.setStatus("current")
_IntervalPhysPerfPumpPwr15minLow_Type = Integer32
_IntervalPhysPerfPumpPwr15minLow_Object = MibTableColumn
intervalPhysPerfPumpPwr15minLow = _IntervalPhysPerfPumpPwr15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127, 1, 2),
    _IntervalPhysPerfPumpPwr15minLow_Type()
)
intervalPhysPerfPumpPwr15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minLow.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr15minMean_Type = Integer32
_IntervalPhysPerfPumpPwr15minMean_Object = MibTableColumn
intervalPhysPerfPumpPwr15minMean = _IntervalPhysPerfPumpPwr15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127, 1, 3),
    _IntervalPhysPerfPumpPwr15minMean_Type()
)
intervalPhysPerfPumpPwr15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minMean.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr15minHigh_Type = Integer32
_IntervalPhysPerfPumpPwr15minHigh_Object = MibTableColumn
intervalPhysPerfPumpPwr15minHigh = _IntervalPhysPerfPumpPwr15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127, 1, 4),
    _IntervalPhysPerfPumpPwr15minHigh_Type()
)
intervalPhysPerfPumpPwr15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minHigh.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr15minValidFlag_Type = TruthValue
_IntervalPhysPerfPumpPwr15minValidFlag_Object = MibTableColumn
intervalPhysPerfPumpPwr15minValidFlag = _IntervalPhysPerfPumpPwr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127, 1, 5),
    _IntervalPhysPerfPumpPwr15minValidFlag_Type()
)
intervalPhysPerfPumpPwr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minValidFlag.setStatus("current")
_IntervalPhysPerfPumpPwr15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfPumpPwr15minTimeStamp_Object = MibTableColumn
intervalPhysPerfPumpPwr15minTimeStamp = _IntervalPhysPerfPumpPwr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 127, 1, 6),
    _IntervalPhysPerfPumpPwr15minTimeStamp_Type()
)
intervalPhysPerfPumpPwr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr15minTimeStamp.setStatus("current")
_IntervalPhysPerfPumpPwr1dayTable_Object = MibTable
intervalPhysPerfPumpPwr1dayTable = _IntervalPhysPerfPumpPwr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128)
)
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayTable.setStatus("current")
_IntervalPhysPerfPumpPwr1dayEntry_Object = MibTableRow
intervalPhysPerfPumpPwr1dayEntry = _IntervalPhysPerfPumpPwr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128, 1)
)
intervalPhysPerfPumpPwr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfPumpPwr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayEntry.setStatus("current")


class _IntervalPhysPerfPumpPwr1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfPumpPwr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfPumpPwr1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfPumpPwr1dayNumber_Object = MibTableColumn
intervalPhysPerfPumpPwr1dayNumber = _IntervalPhysPerfPumpPwr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128, 1, 1),
    _IntervalPhysPerfPumpPwr1dayNumber_Type()
)
intervalPhysPerfPumpPwr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayNumber.setStatus("current")
_IntervalPhysPerfPumpPwr1dayLow_Type = Integer32
_IntervalPhysPerfPumpPwr1dayLow_Object = MibTableColumn
intervalPhysPerfPumpPwr1dayLow = _IntervalPhysPerfPumpPwr1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128, 1, 2),
    _IntervalPhysPerfPumpPwr1dayLow_Type()
)
intervalPhysPerfPumpPwr1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayLow.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr1dayMean_Type = Integer32
_IntervalPhysPerfPumpPwr1dayMean_Object = MibTableColumn
intervalPhysPerfPumpPwr1dayMean = _IntervalPhysPerfPumpPwr1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128, 1, 3),
    _IntervalPhysPerfPumpPwr1dayMean_Type()
)
intervalPhysPerfPumpPwr1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayMean.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr1dayHigh_Type = Integer32
_IntervalPhysPerfPumpPwr1dayHigh_Object = MibTableColumn
intervalPhysPerfPumpPwr1dayHigh = _IntervalPhysPerfPumpPwr1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128, 1, 4),
    _IntervalPhysPerfPumpPwr1dayHigh_Type()
)
intervalPhysPerfPumpPwr1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayHigh.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr1dayValidFlag_Type = TruthValue
_IntervalPhysPerfPumpPwr1dayValidFlag_Object = MibTableColumn
intervalPhysPerfPumpPwr1dayValidFlag = _IntervalPhysPerfPumpPwr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128, 1, 5),
    _IntervalPhysPerfPumpPwr1dayValidFlag_Type()
)
intervalPhysPerfPumpPwr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayValidFlag.setStatus("current")
_IntervalPhysPerfPumpPwr1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfPumpPwr1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfPumpPwr1dayTimeStamp = _IntervalPhysPerfPumpPwr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 128, 1, 6),
    _IntervalPhysPerfPumpPwr1dayTimeStamp_Type()
)
intervalPhysPerfPumpPwr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1dayTimeStamp.setStatus("current")
_IntervalPhysPerfPumpPwr1weekTable_Object = MibTable
intervalPhysPerfPumpPwr1weekTable = _IntervalPhysPerfPumpPwr1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129)
)
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekTable.setStatus("current")
_IntervalPhysPerfPumpPwr1weekEntry_Object = MibTableRow
intervalPhysPerfPumpPwr1weekEntry = _IntervalPhysPerfPumpPwr1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129, 1)
)
intervalPhysPerfPumpPwr1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfPumpPwr1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekEntry.setStatus("current")


class _IntervalPhysPerfPumpPwr1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfPumpPwr1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfPumpPwr1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfPumpPwr1weekNumber_Object = MibTableColumn
intervalPhysPerfPumpPwr1weekNumber = _IntervalPhysPerfPumpPwr1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129, 1, 1),
    _IntervalPhysPerfPumpPwr1weekNumber_Type()
)
intervalPhysPerfPumpPwr1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekNumber.setStatus("current")
_IntervalPhysPerfPumpPwr1weekLow_Type = Integer32
_IntervalPhysPerfPumpPwr1weekLow_Object = MibTableColumn
intervalPhysPerfPumpPwr1weekLow = _IntervalPhysPerfPumpPwr1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129, 1, 2),
    _IntervalPhysPerfPumpPwr1weekLow_Type()
)
intervalPhysPerfPumpPwr1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekLow.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr1weekMean_Type = Integer32
_IntervalPhysPerfPumpPwr1weekMean_Object = MibTableColumn
intervalPhysPerfPumpPwr1weekMean = _IntervalPhysPerfPumpPwr1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129, 1, 3),
    _IntervalPhysPerfPumpPwr1weekMean_Type()
)
intervalPhysPerfPumpPwr1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekMean.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr1weekHigh_Type = Integer32
_IntervalPhysPerfPumpPwr1weekHigh_Object = MibTableColumn
intervalPhysPerfPumpPwr1weekHigh = _IntervalPhysPerfPumpPwr1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129, 1, 4),
    _IntervalPhysPerfPumpPwr1weekHigh_Type()
)
intervalPhysPerfPumpPwr1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekHigh.setUnits("0.1 dBm")
_IntervalPhysPerfPumpPwr1weekValidFlag_Type = TruthValue
_IntervalPhysPerfPumpPwr1weekValidFlag_Object = MibTableColumn
intervalPhysPerfPumpPwr1weekValidFlag = _IntervalPhysPerfPumpPwr1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129, 1, 5),
    _IntervalPhysPerfPumpPwr1weekValidFlag_Type()
)
intervalPhysPerfPumpPwr1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekValidFlag.setStatus("current")
_IntervalPhysPerfPumpPwr1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfPumpPwr1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfPumpPwr1weekTimeStamp = _IntervalPhysPerfPumpPwr1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 129, 1, 6),
    _IntervalPhysPerfPumpPwr1weekTimeStamp_Type()
)
intervalPhysPerfPumpPwr1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfPumpPwr1weekTimeStamp.setStatus("current")
_IntervalDispersionCompensation15minTable_Object = MibTable
intervalDispersionCompensation15minTable = _IntervalDispersionCompensation15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130)
)
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minTable.setStatus("current")
_IntervalDispersionCompensation15minEntry_Object = MibTableRow
intervalDispersionCompensation15minEntry = _IntervalDispersionCompensation15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130, 1)
)
intervalDispersionCompensation15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalDispersionCompensation15minNumber"),
)
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minEntry.setStatus("current")


class _IntervalDispersionCompensation15minNumber_Type(Integer32):
    """Custom type intervalDispersionCompensation15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalDispersionCompensation15minNumber_Type.__name__ = "Integer32"
_IntervalDispersionCompensation15minNumber_Object = MibTableColumn
intervalDispersionCompensation15minNumber = _IntervalDispersionCompensation15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130, 1, 1),
    _IntervalDispersionCompensation15minNumber_Type()
)
intervalDispersionCompensation15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minNumber.setStatus("current")
_IntervalDispersionCompensation15minLow_Type = Integer32
_IntervalDispersionCompensation15minLow_Object = MibTableColumn
intervalDispersionCompensation15minLow = _IntervalDispersionCompensation15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130, 1, 2),
    _IntervalDispersionCompensation15minLow_Type()
)
intervalDispersionCompensation15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minLow.setUnits("ps/nm")
_IntervalDispersionCompensation15minMean_Type = Integer32
_IntervalDispersionCompensation15minMean_Object = MibTableColumn
intervalDispersionCompensation15minMean = _IntervalDispersionCompensation15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130, 1, 3),
    _IntervalDispersionCompensation15minMean_Type()
)
intervalDispersionCompensation15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minMean.setUnits("ps/nm")
_IntervalDispersionCompensation15minHigh_Type = Integer32
_IntervalDispersionCompensation15minHigh_Object = MibTableColumn
intervalDispersionCompensation15minHigh = _IntervalDispersionCompensation15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130, 1, 4),
    _IntervalDispersionCompensation15minHigh_Type()
)
intervalDispersionCompensation15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minHigh.setUnits("ps/nm")
_IntervalDispersionCompensation15minValidFlag_Type = TruthValue
_IntervalDispersionCompensation15minValidFlag_Object = MibTableColumn
intervalDispersionCompensation15minValidFlag = _IntervalDispersionCompensation15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130, 1, 5),
    _IntervalDispersionCompensation15minValidFlag_Type()
)
intervalDispersionCompensation15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minValidFlag.setStatus("current")
_IntervalDispersionCompensation15minTimeStamp_Type = DateAndTime
_IntervalDispersionCompensation15minTimeStamp_Object = MibTableColumn
intervalDispersionCompensation15minTimeStamp = _IntervalDispersionCompensation15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 130, 1, 6),
    _IntervalDispersionCompensation15minTimeStamp_Type()
)
intervalDispersionCompensation15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation15minTimeStamp.setStatus("current")
_IntervalDispersionCompensation1dayTable_Object = MibTable
intervalDispersionCompensation1dayTable = _IntervalDispersionCompensation1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131)
)
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayTable.setStatus("current")
_IntervalDispersionCompensation1dayEntry_Object = MibTableRow
intervalDispersionCompensation1dayEntry = _IntervalDispersionCompensation1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131, 1)
)
intervalDispersionCompensation1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalDispersionCompensation1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayEntry.setStatus("current")


class _IntervalDispersionCompensation1dayNumber_Type(Integer32):
    """Custom type intervalDispersionCompensation1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalDispersionCompensation1dayNumber_Type.__name__ = "Integer32"
_IntervalDispersionCompensation1dayNumber_Object = MibTableColumn
intervalDispersionCompensation1dayNumber = _IntervalDispersionCompensation1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131, 1, 1),
    _IntervalDispersionCompensation1dayNumber_Type()
)
intervalDispersionCompensation1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayNumber.setStatus("current")
_IntervalDispersionCompensation1dayLow_Type = Integer32
_IntervalDispersionCompensation1dayLow_Object = MibTableColumn
intervalDispersionCompensation1dayLow = _IntervalDispersionCompensation1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131, 1, 2),
    _IntervalDispersionCompensation1dayLow_Type()
)
intervalDispersionCompensation1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayLow.setUnits("ps/nm")
_IntervalDispersionCompensation1dayMean_Type = Integer32
_IntervalDispersionCompensation1dayMean_Object = MibTableColumn
intervalDispersionCompensation1dayMean = _IntervalDispersionCompensation1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131, 1, 3),
    _IntervalDispersionCompensation1dayMean_Type()
)
intervalDispersionCompensation1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayMean.setUnits("ps/nm")
_IntervalDispersionCompensation1dayHigh_Type = Integer32
_IntervalDispersionCompensation1dayHigh_Object = MibTableColumn
intervalDispersionCompensation1dayHigh = _IntervalDispersionCompensation1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131, 1, 4),
    _IntervalDispersionCompensation1dayHigh_Type()
)
intervalDispersionCompensation1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayHigh.setUnits("ps/nm")
_IntervalDispersionCompensation1dayValidFlag_Type = TruthValue
_IntervalDispersionCompensation1dayValidFlag_Object = MibTableColumn
intervalDispersionCompensation1dayValidFlag = _IntervalDispersionCompensation1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131, 1, 5),
    _IntervalDispersionCompensation1dayValidFlag_Type()
)
intervalDispersionCompensation1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayValidFlag.setStatus("current")
_IntervalDispersionCompensation1dayTimeStamp_Type = DateAndTime
_IntervalDispersionCompensation1dayTimeStamp_Object = MibTableColumn
intervalDispersionCompensation1dayTimeStamp = _IntervalDispersionCompensation1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 131, 1, 6),
    _IntervalDispersionCompensation1dayTimeStamp_Type()
)
intervalDispersionCompensation1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1dayTimeStamp.setStatus("current")
_IntervalDispersionCompensation1weekTable_Object = MibTable
intervalDispersionCompensation1weekTable = _IntervalDispersionCompensation1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132)
)
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekTable.setStatus("current")
_IntervalDispersionCompensation1weekEntry_Object = MibTableRow
intervalDispersionCompensation1weekEntry = _IntervalDispersionCompensation1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132, 1)
)
intervalDispersionCompensation1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalDispersionCompensation1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekEntry.setStatus("current")


class _IntervalDispersionCompensation1weekNumber_Type(Integer32):
    """Custom type intervalDispersionCompensation1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalDispersionCompensation1weekNumber_Type.__name__ = "Integer32"
_IntervalDispersionCompensation1weekNumber_Object = MibTableColumn
intervalDispersionCompensation1weekNumber = _IntervalDispersionCompensation1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132, 1, 1),
    _IntervalDispersionCompensation1weekNumber_Type()
)
intervalDispersionCompensation1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekNumber.setStatus("current")
_IntervalDispersionCompensation1weekLow_Type = Integer32
_IntervalDispersionCompensation1weekLow_Object = MibTableColumn
intervalDispersionCompensation1weekLow = _IntervalDispersionCompensation1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132, 1, 2),
    _IntervalDispersionCompensation1weekLow_Type()
)
intervalDispersionCompensation1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekLow.setUnits("ps/nm")
_IntervalDispersionCompensation1weekMean_Type = Integer32
_IntervalDispersionCompensation1weekMean_Object = MibTableColumn
intervalDispersionCompensation1weekMean = _IntervalDispersionCompensation1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132, 1, 3),
    _IntervalDispersionCompensation1weekMean_Type()
)
intervalDispersionCompensation1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekMean.setUnits("ps/nm")
_IntervalDispersionCompensation1weekHigh_Type = Integer32
_IntervalDispersionCompensation1weekHigh_Object = MibTableColumn
intervalDispersionCompensation1weekHigh = _IntervalDispersionCompensation1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132, 1, 4),
    _IntervalDispersionCompensation1weekHigh_Type()
)
intervalDispersionCompensation1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekHigh.setUnits("ps/nm")
_IntervalDispersionCompensation1weekValidFlag_Type = TruthValue
_IntervalDispersionCompensation1weekValidFlag_Object = MibTableColumn
intervalDispersionCompensation1weekValidFlag = _IntervalDispersionCompensation1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132, 1, 5),
    _IntervalDispersionCompensation1weekValidFlag_Type()
)
intervalDispersionCompensation1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekValidFlag.setStatus("current")
_IntervalDispersionCompensation1weekTimeStamp_Type = DateAndTime
_IntervalDispersionCompensation1weekTimeStamp_Object = MibTableColumn
intervalDispersionCompensation1weekTimeStamp = _IntervalDispersionCompensation1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 132, 1, 6),
    _IntervalDispersionCompensation1weekTimeStamp_Type()
)
intervalDispersionCompensation1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDispersionCompensation1weekTimeStamp.setStatus("current")
_IntervalLinkAttenuation15minTable_Object = MibTable
intervalLinkAttenuation15minTable = _IntervalLinkAttenuation15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133)
)
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minTable.setStatus("current")
_IntervalLinkAttenuation15minEntry_Object = MibTableRow
intervalLinkAttenuation15minEntry = _IntervalLinkAttenuation15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133, 1)
)
intervalLinkAttenuation15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalLinkAttenuation15minNumber"),
)
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minEntry.setStatus("current")


class _IntervalLinkAttenuation15minNumber_Type(Integer32):
    """Custom type intervalLinkAttenuation15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalLinkAttenuation15minNumber_Type.__name__ = "Integer32"
_IntervalLinkAttenuation15minNumber_Object = MibTableColumn
intervalLinkAttenuation15minNumber = _IntervalLinkAttenuation15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133, 1, 1),
    _IntervalLinkAttenuation15minNumber_Type()
)
intervalLinkAttenuation15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minNumber.setStatus("current")
_IntervalLinkAttenuation15minLow_Type = Integer32
_IntervalLinkAttenuation15minLow_Object = MibTableColumn
intervalLinkAttenuation15minLow = _IntervalLinkAttenuation15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133, 1, 2),
    _IntervalLinkAttenuation15minLow_Type()
)
intervalLinkAttenuation15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minLow.setUnits("0.1 dB")
_IntervalLinkAttenuation15minMean_Type = Integer32
_IntervalLinkAttenuation15minMean_Object = MibTableColumn
intervalLinkAttenuation15minMean = _IntervalLinkAttenuation15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133, 1, 3),
    _IntervalLinkAttenuation15minMean_Type()
)
intervalLinkAttenuation15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minMean.setUnits("0.1 dB")
_IntervalLinkAttenuation15minHigh_Type = Integer32
_IntervalLinkAttenuation15minHigh_Object = MibTableColumn
intervalLinkAttenuation15minHigh = _IntervalLinkAttenuation15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133, 1, 4),
    _IntervalLinkAttenuation15minHigh_Type()
)
intervalLinkAttenuation15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minHigh.setUnits("0.1 dB")
_IntervalLinkAttenuation15minValidFlag_Type = TruthValue
_IntervalLinkAttenuation15minValidFlag_Object = MibTableColumn
intervalLinkAttenuation15minValidFlag = _IntervalLinkAttenuation15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133, 1, 5),
    _IntervalLinkAttenuation15minValidFlag_Type()
)
intervalLinkAttenuation15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minValidFlag.setStatus("current")
_IntervalLinkAttenuation15minTimeStamp_Type = DateAndTime
_IntervalLinkAttenuation15minTimeStamp_Object = MibTableColumn
intervalLinkAttenuation15minTimeStamp = _IntervalLinkAttenuation15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 133, 1, 6),
    _IntervalLinkAttenuation15minTimeStamp_Type()
)
intervalLinkAttenuation15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation15minTimeStamp.setStatus("current")
_IntervalLinkAttenuation1dayTable_Object = MibTable
intervalLinkAttenuation1dayTable = _IntervalLinkAttenuation1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134)
)
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayTable.setStatus("current")
_IntervalLinkAttenuation1dayEntry_Object = MibTableRow
intervalLinkAttenuation1dayEntry = _IntervalLinkAttenuation1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134, 1)
)
intervalLinkAttenuation1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalLinkAttenuation1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayEntry.setStatus("current")


class _IntervalLinkAttenuation1dayNumber_Type(Integer32):
    """Custom type intervalLinkAttenuation1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalLinkAttenuation1dayNumber_Type.__name__ = "Integer32"
_IntervalLinkAttenuation1dayNumber_Object = MibTableColumn
intervalLinkAttenuation1dayNumber = _IntervalLinkAttenuation1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134, 1, 1),
    _IntervalLinkAttenuation1dayNumber_Type()
)
intervalLinkAttenuation1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayNumber.setStatus("current")
_IntervalLinkAttenuation1dayLow_Type = Integer32
_IntervalLinkAttenuation1dayLow_Object = MibTableColumn
intervalLinkAttenuation1dayLow = _IntervalLinkAttenuation1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134, 1, 2),
    _IntervalLinkAttenuation1dayLow_Type()
)
intervalLinkAttenuation1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayLow.setUnits("0.1 dB")
_IntervalLinkAttenuation1dayMean_Type = Integer32
_IntervalLinkAttenuation1dayMean_Object = MibTableColumn
intervalLinkAttenuation1dayMean = _IntervalLinkAttenuation1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134, 1, 3),
    _IntervalLinkAttenuation1dayMean_Type()
)
intervalLinkAttenuation1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayMean.setUnits("0.1 dB")
_IntervalLinkAttenuation1dayHigh_Type = Integer32
_IntervalLinkAttenuation1dayHigh_Object = MibTableColumn
intervalLinkAttenuation1dayHigh = _IntervalLinkAttenuation1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134, 1, 4),
    _IntervalLinkAttenuation1dayHigh_Type()
)
intervalLinkAttenuation1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayHigh.setUnits("0.1 dB")
_IntervalLinkAttenuation1dayValidFlag_Type = TruthValue
_IntervalLinkAttenuation1dayValidFlag_Object = MibTableColumn
intervalLinkAttenuation1dayValidFlag = _IntervalLinkAttenuation1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134, 1, 5),
    _IntervalLinkAttenuation1dayValidFlag_Type()
)
intervalLinkAttenuation1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayValidFlag.setStatus("current")
_IntervalLinkAttenuation1dayTimeStamp_Type = DateAndTime
_IntervalLinkAttenuation1dayTimeStamp_Object = MibTableColumn
intervalLinkAttenuation1dayTimeStamp = _IntervalLinkAttenuation1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 134, 1, 6),
    _IntervalLinkAttenuation1dayTimeStamp_Type()
)
intervalLinkAttenuation1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1dayTimeStamp.setStatus("current")
_IntervalLinkAttenuation1weekTable_Object = MibTable
intervalLinkAttenuation1weekTable = _IntervalLinkAttenuation1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135)
)
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekTable.setStatus("current")
_IntervalLinkAttenuation1weekEntry_Object = MibTableRow
intervalLinkAttenuation1weekEntry = _IntervalLinkAttenuation1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135, 1)
)
intervalLinkAttenuation1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalLinkAttenuation1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekEntry.setStatus("current")


class _IntervalLinkAttenuation1weekNumber_Type(Integer32):
    """Custom type intervalLinkAttenuation1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalLinkAttenuation1weekNumber_Type.__name__ = "Integer32"
_IntervalLinkAttenuation1weekNumber_Object = MibTableColumn
intervalLinkAttenuation1weekNumber = _IntervalLinkAttenuation1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135, 1, 1),
    _IntervalLinkAttenuation1weekNumber_Type()
)
intervalLinkAttenuation1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekNumber.setStatus("current")
_IntervalLinkAttenuation1weekLow_Type = Integer32
_IntervalLinkAttenuation1weekLow_Object = MibTableColumn
intervalLinkAttenuation1weekLow = _IntervalLinkAttenuation1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135, 1, 2),
    _IntervalLinkAttenuation1weekLow_Type()
)
intervalLinkAttenuation1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekLow.setUnits("0.1 dB")
_IntervalLinkAttenuation1weekMean_Type = Integer32
_IntervalLinkAttenuation1weekMean_Object = MibTableColumn
intervalLinkAttenuation1weekMean = _IntervalLinkAttenuation1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135, 1, 3),
    _IntervalLinkAttenuation1weekMean_Type()
)
intervalLinkAttenuation1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekMean.setUnits("0.1 dB")
_IntervalLinkAttenuation1weekHigh_Type = Integer32
_IntervalLinkAttenuation1weekHigh_Object = MibTableColumn
intervalLinkAttenuation1weekHigh = _IntervalLinkAttenuation1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135, 1, 4),
    _IntervalLinkAttenuation1weekHigh_Type()
)
intervalLinkAttenuation1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekHigh.setUnits("0.1 dB")
_IntervalLinkAttenuation1weekValidFlag_Type = TruthValue
_IntervalLinkAttenuation1weekValidFlag_Object = MibTableColumn
intervalLinkAttenuation1weekValidFlag = _IntervalLinkAttenuation1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135, 1, 5),
    _IntervalLinkAttenuation1weekValidFlag_Type()
)
intervalLinkAttenuation1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekValidFlag.setStatus("current")
_IntervalLinkAttenuation1weekTimeStamp_Type = DateAndTime
_IntervalLinkAttenuation1weekTimeStamp_Object = MibTableColumn
intervalLinkAttenuation1weekTimeStamp = _IntervalLinkAttenuation1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 135, 1, 6),
    _IntervalLinkAttenuation1weekTimeStamp_Type()
)
intervalLinkAttenuation1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLinkAttenuation1weekTimeStamp.setStatus("current")
_CurrentL2EthRx15minTable_Object = MibTable
currentL2EthRx15minTable = _CurrentL2EthRx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136)
)
if mibBuilder.loadTexts:
    currentL2EthRx15minTable.setStatus("current")
_CurrentL2EthRx15minEntry_Object = MibTableRow
currentL2EthRx15minEntry = _CurrentL2EthRx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1)
)
currentL2EthRx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentL2EthRx15minEntry.setStatus("current")
_CurrentL2EthRx15minFramesRcv_Type = Counter64String
_CurrentL2EthRx15minFramesRcv_Object = MibTableColumn
currentL2EthRx15minFramesRcv = _CurrentL2EthRx15minFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 1),
    _CurrentL2EthRx15minFramesRcv_Type()
)
currentL2EthRx15minFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minFramesRcv.setStatus("current")
_CurrentL2EthRx15minBytesRcv_Type = Counter64String
_CurrentL2EthRx15minBytesRcv_Object = MibTableColumn
currentL2EthRx15minBytesRcv = _CurrentL2EthRx15minBytesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 2),
    _CurrentL2EthRx15minBytesRcv_Type()
)
currentL2EthRx15minBytesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesRcv.setStatus("current")
_CurrentL2EthRx15minBroadcastFramesRcv_Type = Counter64String
_CurrentL2EthRx15minBroadcastFramesRcv_Object = MibTableColumn
currentL2EthRx15minBroadcastFramesRcv = _CurrentL2EthRx15minBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 3),
    _CurrentL2EthRx15minBroadcastFramesRcv_Type()
)
currentL2EthRx15minBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBroadcastFramesRcv.setStatus("current")
_CurrentL2EthRx15minMulticastFramesRcv_Type = Counter64String
_CurrentL2EthRx15minMulticastFramesRcv_Object = MibTableColumn
currentL2EthRx15minMulticastFramesRcv = _CurrentL2EthRx15minMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 4),
    _CurrentL2EthRx15minMulticastFramesRcv_Type()
)
currentL2EthRx15minMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minMulticastFramesRcv.setStatus("current")
_CurrentL2EthRx15minCrcErrorsRcv_Type = Counter64String
_CurrentL2EthRx15minCrcErrorsRcv_Object = MibTableColumn
currentL2EthRx15minCrcErrorsRcv = _CurrentL2EthRx15minCrcErrorsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 5),
    _CurrentL2EthRx15minCrcErrorsRcv_Type()
)
currentL2EthRx15minCrcErrorsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minCrcErrorsRcv.setStatus("current")
_CurrentL2EthRx15minUndersizedFramesRcv_Type = Counter64String
_CurrentL2EthRx15minUndersizedFramesRcv_Object = MibTableColumn
currentL2EthRx15minUndersizedFramesRcv = _CurrentL2EthRx15minUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 6),
    _CurrentL2EthRx15minUndersizedFramesRcv_Type()
)
currentL2EthRx15minUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minUndersizedFramesRcv.setStatus("current")
_CurrentL2EthRx15minOversizedFramesRcv_Type = Counter64String
_CurrentL2EthRx15minOversizedFramesRcv_Object = MibTableColumn
currentL2EthRx15minOversizedFramesRcv = _CurrentL2EthRx15minOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 7),
    _CurrentL2EthRx15minOversizedFramesRcv_Type()
)
currentL2EthRx15minOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minOversizedFramesRcv.setStatus("current")
_CurrentL2EthRx15minPauseFramesRcv_Type = Counter64String
_CurrentL2EthRx15minPauseFramesRcv_Object = MibTableColumn
currentL2EthRx15minPauseFramesRcv = _CurrentL2EthRx15minPauseFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 8),
    _CurrentL2EthRx15minPauseFramesRcv_Type()
)
currentL2EthRx15minPauseFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minPauseFramesRcv.setStatus("current")
_CurrentL2EthRx15minBytesFrames64Rcv_Type = Counter64String
_CurrentL2EthRx15minBytesFrames64Rcv_Object = MibTableColumn
currentL2EthRx15minBytesFrames64Rcv = _CurrentL2EthRx15minBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 9),
    _CurrentL2EthRx15minBytesFrames64Rcv_Type()
)
currentL2EthRx15minBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesFrames64Rcv.setStatus("current")
_CurrentL2EthRx15minBytesFrames65Rcv_Type = Counter64String
_CurrentL2EthRx15minBytesFrames65Rcv_Object = MibTableColumn
currentL2EthRx15minBytesFrames65Rcv = _CurrentL2EthRx15minBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 10),
    _CurrentL2EthRx15minBytesFrames65Rcv_Type()
)
currentL2EthRx15minBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesFrames65Rcv.setStatus("current")
_CurrentL2EthRx15minBytesFrames128Rcv_Type = Counter64String
_CurrentL2EthRx15minBytesFrames128Rcv_Object = MibTableColumn
currentL2EthRx15minBytesFrames128Rcv = _CurrentL2EthRx15minBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 11),
    _CurrentL2EthRx15minBytesFrames128Rcv_Type()
)
currentL2EthRx15minBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesFrames128Rcv.setStatus("current")
_CurrentL2EthRx15minBytesFrames256Rcv_Type = Counter64String
_CurrentL2EthRx15minBytesFrames256Rcv_Object = MibTableColumn
currentL2EthRx15minBytesFrames256Rcv = _CurrentL2EthRx15minBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 12),
    _CurrentL2EthRx15minBytesFrames256Rcv_Type()
)
currentL2EthRx15minBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesFrames256Rcv.setStatus("current")
_CurrentL2EthRx15minBytesFrames512Rcv_Type = Counter64String
_CurrentL2EthRx15minBytesFrames512Rcv_Object = MibTableColumn
currentL2EthRx15minBytesFrames512Rcv = _CurrentL2EthRx15minBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 13),
    _CurrentL2EthRx15minBytesFrames512Rcv_Type()
)
currentL2EthRx15minBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesFrames512Rcv.setStatus("current")
_CurrentL2EthRx15minBytesFrames1024Rcv_Type = Counter64String
_CurrentL2EthRx15minBytesFrames1024Rcv_Object = MibTableColumn
currentL2EthRx15minBytesFrames1024Rcv = _CurrentL2EthRx15minBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 14),
    _CurrentL2EthRx15minBytesFrames1024Rcv_Type()
)
currentL2EthRx15minBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesFrames1024Rcv.setStatus("current")
_CurrentL2EthRx15minBytesFrames1519Rcv_Type = Counter64String
_CurrentL2EthRx15minBytesFrames1519Rcv_Object = MibTableColumn
currentL2EthRx15minBytesFrames1519Rcv = _CurrentL2EthRx15minBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 15),
    _CurrentL2EthRx15minBytesFrames1519Rcv_Type()
)
currentL2EthRx15minBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minBytesFrames1519Rcv.setStatus("current")
_CurrentL2EthRx15minInterPackJunkBytesFramesRcv_Type = Counter64String
_CurrentL2EthRx15minInterPackJunkBytesFramesRcv_Object = MibTableColumn
currentL2EthRx15minInterPackJunkBytesFramesRcv = _CurrentL2EthRx15minInterPackJunkBytesFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 16),
    _CurrentL2EthRx15minInterPackJunkBytesFramesRcv_Type()
)
currentL2EthRx15minInterPackJunkBytesFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minInterPackJunkBytesFramesRcv.setStatus("current")


class _CurrentL2EthRx15minElapsedTime_Type(Integer32):
    """Custom type currentL2EthRx15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentL2EthRx15minElapsedTime_Type.__name__ = "Integer32"
_CurrentL2EthRx15minElapsedTime_Object = MibTableColumn
currentL2EthRx15minElapsedTime = _CurrentL2EthRx15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 136, 1, 17),
    _CurrentL2EthRx15minElapsedTime_Type()
)
currentL2EthRx15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx15minElapsedTime.setStatus("current")
_CurrentL2EthRx1dayTable_Object = MibTable
currentL2EthRx1dayTable = _CurrentL2EthRx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137)
)
if mibBuilder.loadTexts:
    currentL2EthRx1dayTable.setStatus("current")
_CurrentL2EthRx1dayEntry_Object = MibTableRow
currentL2EthRx1dayEntry = _CurrentL2EthRx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1)
)
currentL2EthRx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentL2EthRx1dayEntry.setStatus("current")
_CurrentL2EthRx1dayFramesRcv_Type = Counter64String
_CurrentL2EthRx1dayFramesRcv_Object = MibTableColumn
currentL2EthRx1dayFramesRcv = _CurrentL2EthRx1dayFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 1),
    _CurrentL2EthRx1dayFramesRcv_Type()
)
currentL2EthRx1dayFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayFramesRcv.setStatus("current")
_CurrentL2EthRx1dayBytesRcv_Type = Counter64String
_CurrentL2EthRx1dayBytesRcv_Object = MibTableColumn
currentL2EthRx1dayBytesRcv = _CurrentL2EthRx1dayBytesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 2),
    _CurrentL2EthRx1dayBytesRcv_Type()
)
currentL2EthRx1dayBytesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesRcv.setStatus("current")
_CurrentL2EthRx1dayBroadcastFramesRcv_Type = Counter64String
_CurrentL2EthRx1dayBroadcastFramesRcv_Object = MibTableColumn
currentL2EthRx1dayBroadcastFramesRcv = _CurrentL2EthRx1dayBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 3),
    _CurrentL2EthRx1dayBroadcastFramesRcv_Type()
)
currentL2EthRx1dayBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBroadcastFramesRcv.setStatus("current")
_CurrentL2EthRx1dayMulticastFramesRcv_Type = Counter64String
_CurrentL2EthRx1dayMulticastFramesRcv_Object = MibTableColumn
currentL2EthRx1dayMulticastFramesRcv = _CurrentL2EthRx1dayMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 4),
    _CurrentL2EthRx1dayMulticastFramesRcv_Type()
)
currentL2EthRx1dayMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayMulticastFramesRcv.setStatus("current")
_CurrentL2EthRx1dayCrcErrorsRcv_Type = Counter64String
_CurrentL2EthRx1dayCrcErrorsRcv_Object = MibTableColumn
currentL2EthRx1dayCrcErrorsRcv = _CurrentL2EthRx1dayCrcErrorsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 5),
    _CurrentL2EthRx1dayCrcErrorsRcv_Type()
)
currentL2EthRx1dayCrcErrorsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayCrcErrorsRcv.setStatus("current")
_CurrentL2EthRx1dayUndersizedFramesRcv_Type = Counter64String
_CurrentL2EthRx1dayUndersizedFramesRcv_Object = MibTableColumn
currentL2EthRx1dayUndersizedFramesRcv = _CurrentL2EthRx1dayUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 6),
    _CurrentL2EthRx1dayUndersizedFramesRcv_Type()
)
currentL2EthRx1dayUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayUndersizedFramesRcv.setStatus("current")
_CurrentL2EthRx1dayOversizedFramesRcv_Type = Counter64String
_CurrentL2EthRx1dayOversizedFramesRcv_Object = MibTableColumn
currentL2EthRx1dayOversizedFramesRcv = _CurrentL2EthRx1dayOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 7),
    _CurrentL2EthRx1dayOversizedFramesRcv_Type()
)
currentL2EthRx1dayOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayOversizedFramesRcv.setStatus("current")
_CurrentL2EthRx1dayPauseFramesRcv_Type = Counter64String
_CurrentL2EthRx1dayPauseFramesRcv_Object = MibTableColumn
currentL2EthRx1dayPauseFramesRcv = _CurrentL2EthRx1dayPauseFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 8),
    _CurrentL2EthRx1dayPauseFramesRcv_Type()
)
currentL2EthRx1dayPauseFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayPauseFramesRcv.setStatus("current")
_CurrentL2EthRx1dayBytesFrames64Rcv_Type = Counter64String
_CurrentL2EthRx1dayBytesFrames64Rcv_Object = MibTableColumn
currentL2EthRx1dayBytesFrames64Rcv = _CurrentL2EthRx1dayBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 9),
    _CurrentL2EthRx1dayBytesFrames64Rcv_Type()
)
currentL2EthRx1dayBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesFrames64Rcv.setStatus("current")
_CurrentL2EthRx1dayBytesFrames65Rcv_Type = Counter64String
_CurrentL2EthRx1dayBytesFrames65Rcv_Object = MibTableColumn
currentL2EthRx1dayBytesFrames65Rcv = _CurrentL2EthRx1dayBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 10),
    _CurrentL2EthRx1dayBytesFrames65Rcv_Type()
)
currentL2EthRx1dayBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesFrames65Rcv.setStatus("current")
_CurrentL2EthRx1dayBytesFrames128Rcv_Type = Counter64String
_CurrentL2EthRx1dayBytesFrames128Rcv_Object = MibTableColumn
currentL2EthRx1dayBytesFrames128Rcv = _CurrentL2EthRx1dayBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 11),
    _CurrentL2EthRx1dayBytesFrames128Rcv_Type()
)
currentL2EthRx1dayBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesFrames128Rcv.setStatus("current")
_CurrentL2EthRx1dayBytesFrames256Rcv_Type = Counter64String
_CurrentL2EthRx1dayBytesFrames256Rcv_Object = MibTableColumn
currentL2EthRx1dayBytesFrames256Rcv = _CurrentL2EthRx1dayBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 12),
    _CurrentL2EthRx1dayBytesFrames256Rcv_Type()
)
currentL2EthRx1dayBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesFrames256Rcv.setStatus("current")
_CurrentL2EthRx1dayBytesFrames512Rcv_Type = Counter64String
_CurrentL2EthRx1dayBytesFrames512Rcv_Object = MibTableColumn
currentL2EthRx1dayBytesFrames512Rcv = _CurrentL2EthRx1dayBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 13),
    _CurrentL2EthRx1dayBytesFrames512Rcv_Type()
)
currentL2EthRx1dayBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesFrames512Rcv.setStatus("current")
_CurrentL2EthRx1dayBytesFrames1024Rcv_Type = Counter64String
_CurrentL2EthRx1dayBytesFrames1024Rcv_Object = MibTableColumn
currentL2EthRx1dayBytesFrames1024Rcv = _CurrentL2EthRx1dayBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 14),
    _CurrentL2EthRx1dayBytesFrames1024Rcv_Type()
)
currentL2EthRx1dayBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesFrames1024Rcv.setStatus("current")
_CurrentL2EthRx1dayBytesFrames1519Rcv_Type = Counter64String
_CurrentL2EthRx1dayBytesFrames1519Rcv_Object = MibTableColumn
currentL2EthRx1dayBytesFrames1519Rcv = _CurrentL2EthRx1dayBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 15),
    _CurrentL2EthRx1dayBytesFrames1519Rcv_Type()
)
currentL2EthRx1dayBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayBytesFrames1519Rcv.setStatus("current")
_CurrentL2EthRx1dayInterPackJunkBytesFramesRcv_Type = Counter64String
_CurrentL2EthRx1dayInterPackJunkBytesFramesRcv_Object = MibTableColumn
currentL2EthRx1dayInterPackJunkBytesFramesRcv = _CurrentL2EthRx1dayInterPackJunkBytesFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 16),
    _CurrentL2EthRx1dayInterPackJunkBytesFramesRcv_Type()
)
currentL2EthRx1dayInterPackJunkBytesFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayInterPackJunkBytesFramesRcv.setStatus("current")


class _CurrentL2EthRx1dayElapsedTime_Type(Integer32):
    """Custom type currentL2EthRx1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentL2EthRx1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentL2EthRx1dayElapsedTime_Object = MibTableColumn
currentL2EthRx1dayElapsedTime = _CurrentL2EthRx1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 137, 1, 17),
    _CurrentL2EthRx1dayElapsedTime_Type()
)
currentL2EthRx1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthRx1dayElapsedTime.setStatus("current")
_IntervalL2EthRx15minTable_Object = MibTable
intervalL2EthRx15minTable = _IntervalL2EthRx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138)
)
if mibBuilder.loadTexts:
    intervalL2EthRx15minTable.setStatus("current")
_IntervalL2EthRx15minEntry_Object = MibTableRow
intervalL2EthRx15minEntry = _IntervalL2EthRx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1)
)
intervalL2EthRx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRx15minNumber"),
)
if mibBuilder.loadTexts:
    intervalL2EthRx15minEntry.setStatus("current")


class _IntervalL2EthRx15minNumber_Type(Integer32):
    """Custom type intervalL2EthRx15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalL2EthRx15minNumber_Type.__name__ = "Integer32"
_IntervalL2EthRx15minNumber_Object = MibTableColumn
intervalL2EthRx15minNumber = _IntervalL2EthRx15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 1),
    _IntervalL2EthRx15minNumber_Type()
)
intervalL2EthRx15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalL2EthRx15minNumber.setStatus("current")
_IntervalL2EthRx15minFramesRcv_Type = Counter64String
_IntervalL2EthRx15minFramesRcv_Object = MibTableColumn
intervalL2EthRx15minFramesRcv = _IntervalL2EthRx15minFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 2),
    _IntervalL2EthRx15minFramesRcv_Type()
)
intervalL2EthRx15minFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minFramesRcv.setStatus("current")
_IntervalL2EthRx15minBytesRcv_Type = Counter64String
_IntervalL2EthRx15minBytesRcv_Object = MibTableColumn
intervalL2EthRx15minBytesRcv = _IntervalL2EthRx15minBytesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 3),
    _IntervalL2EthRx15minBytesRcv_Type()
)
intervalL2EthRx15minBytesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesRcv.setStatus("current")
_IntervalL2EthRx15minBroadcastFramesRcv_Type = Counter64String
_IntervalL2EthRx15minBroadcastFramesRcv_Object = MibTableColumn
intervalL2EthRx15minBroadcastFramesRcv = _IntervalL2EthRx15minBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 4),
    _IntervalL2EthRx15minBroadcastFramesRcv_Type()
)
intervalL2EthRx15minBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBroadcastFramesRcv.setStatus("current")
_IntervalL2EthRx15minMulticastFramesRcv_Type = Counter64String
_IntervalL2EthRx15minMulticastFramesRcv_Object = MibTableColumn
intervalL2EthRx15minMulticastFramesRcv = _IntervalL2EthRx15minMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 5),
    _IntervalL2EthRx15minMulticastFramesRcv_Type()
)
intervalL2EthRx15minMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minMulticastFramesRcv.setStatus("current")
_IntervalL2EthRx15minCrcErrorsRcv_Type = Counter64String
_IntervalL2EthRx15minCrcErrorsRcv_Object = MibTableColumn
intervalL2EthRx15minCrcErrorsRcv = _IntervalL2EthRx15minCrcErrorsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 6),
    _IntervalL2EthRx15minCrcErrorsRcv_Type()
)
intervalL2EthRx15minCrcErrorsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minCrcErrorsRcv.setStatus("current")
_IntervalL2EthRx15minUndersizedFramesRcv_Type = Counter64String
_IntervalL2EthRx15minUndersizedFramesRcv_Object = MibTableColumn
intervalL2EthRx15minUndersizedFramesRcv = _IntervalL2EthRx15minUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 7),
    _IntervalL2EthRx15minUndersizedFramesRcv_Type()
)
intervalL2EthRx15minUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minUndersizedFramesRcv.setStatus("current")
_IntervalL2EthRx15minOversizedFramesRcv_Type = Counter64String
_IntervalL2EthRx15minOversizedFramesRcv_Object = MibTableColumn
intervalL2EthRx15minOversizedFramesRcv = _IntervalL2EthRx15minOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 8),
    _IntervalL2EthRx15minOversizedFramesRcv_Type()
)
intervalL2EthRx15minOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minOversizedFramesRcv.setStatus("current")
_IntervalL2EthRx15minPauseFramesRcv_Type = Counter64String
_IntervalL2EthRx15minPauseFramesRcv_Object = MibTableColumn
intervalL2EthRx15minPauseFramesRcv = _IntervalL2EthRx15minPauseFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 9),
    _IntervalL2EthRx15minPauseFramesRcv_Type()
)
intervalL2EthRx15minPauseFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minPauseFramesRcv.setStatus("current")
_IntervalL2EthRx15minBytesFrames64Rcv_Type = Counter64String
_IntervalL2EthRx15minBytesFrames64Rcv_Object = MibTableColumn
intervalL2EthRx15minBytesFrames64Rcv = _IntervalL2EthRx15minBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 10),
    _IntervalL2EthRx15minBytesFrames64Rcv_Type()
)
intervalL2EthRx15minBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesFrames64Rcv.setStatus("current")
_IntervalL2EthRx15minBytesFrames65Rcv_Type = Counter64String
_IntervalL2EthRx15minBytesFrames65Rcv_Object = MibTableColumn
intervalL2EthRx15minBytesFrames65Rcv = _IntervalL2EthRx15minBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 11),
    _IntervalL2EthRx15minBytesFrames65Rcv_Type()
)
intervalL2EthRx15minBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesFrames65Rcv.setStatus("current")
_IntervalL2EthRx15minBytesFrames128Rcv_Type = Counter64String
_IntervalL2EthRx15minBytesFrames128Rcv_Object = MibTableColumn
intervalL2EthRx15minBytesFrames128Rcv = _IntervalL2EthRx15minBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 12),
    _IntervalL2EthRx15minBytesFrames128Rcv_Type()
)
intervalL2EthRx15minBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesFrames128Rcv.setStatus("current")
_IntervalL2EthRx15minBytesFrames256Rcv_Type = Counter64String
_IntervalL2EthRx15minBytesFrames256Rcv_Object = MibTableColumn
intervalL2EthRx15minBytesFrames256Rcv = _IntervalL2EthRx15minBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 13),
    _IntervalL2EthRx15minBytesFrames256Rcv_Type()
)
intervalL2EthRx15minBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesFrames256Rcv.setStatus("current")
_IntervalL2EthRx15minBytesFrames512Rcv_Type = Counter64String
_IntervalL2EthRx15minBytesFrames512Rcv_Object = MibTableColumn
intervalL2EthRx15minBytesFrames512Rcv = _IntervalL2EthRx15minBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 14),
    _IntervalL2EthRx15minBytesFrames512Rcv_Type()
)
intervalL2EthRx15minBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesFrames512Rcv.setStatus("current")
_IntervalL2EthRx15minBytesFrames1024Rcv_Type = Counter64String
_IntervalL2EthRx15minBytesFrames1024Rcv_Object = MibTableColumn
intervalL2EthRx15minBytesFrames1024Rcv = _IntervalL2EthRx15minBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 15),
    _IntervalL2EthRx15minBytesFrames1024Rcv_Type()
)
intervalL2EthRx15minBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesFrames1024Rcv.setStatus("current")
_IntervalL2EthRx15minBytesFrames1519Rcv_Type = Counter64String
_IntervalL2EthRx15minBytesFrames1519Rcv_Object = MibTableColumn
intervalL2EthRx15minBytesFrames1519Rcv = _IntervalL2EthRx15minBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 16),
    _IntervalL2EthRx15minBytesFrames1519Rcv_Type()
)
intervalL2EthRx15minBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minBytesFrames1519Rcv.setStatus("current")
_IntervalL2EthRx15minInterPackJunkBytesFramesRcv_Type = Counter64String
_IntervalL2EthRx15minInterPackJunkBytesFramesRcv_Object = MibTableColumn
intervalL2EthRx15minInterPackJunkBytesFramesRcv = _IntervalL2EthRx15minInterPackJunkBytesFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 17),
    _IntervalL2EthRx15minInterPackJunkBytesFramesRcv_Type()
)
intervalL2EthRx15minInterPackJunkBytesFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minInterPackJunkBytesFramesRcv.setStatus("current")
_IntervalL2EthRx15minValidFlag_Type = TruthValue
_IntervalL2EthRx15minValidFlag_Object = MibTableColumn
intervalL2EthRx15minValidFlag = _IntervalL2EthRx15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 18),
    _IntervalL2EthRx15minValidFlag_Type()
)
intervalL2EthRx15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minValidFlag.setStatus("current")
_IntervalL2EthRx15minTimeStamp_Type = DateAndTime
_IntervalL2EthRx15minTimeStamp_Object = MibTableColumn
intervalL2EthRx15minTimeStamp = _IntervalL2EthRx15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 138, 1, 19),
    _IntervalL2EthRx15minTimeStamp_Type()
)
intervalL2EthRx15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx15minTimeStamp.setStatus("current")
_IntervalL2EthRx1dayTable_Object = MibTable
intervalL2EthRx1dayTable = _IntervalL2EthRx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139)
)
if mibBuilder.loadTexts:
    intervalL2EthRx1dayTable.setStatus("current")
_IntervalL2EthRx1dayEntry_Object = MibTableRow
intervalL2EthRx1dayEntry = _IntervalL2EthRx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1)
)
intervalL2EthRx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRx1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalL2EthRx1dayEntry.setStatus("current")


class _IntervalL2EthRx1dayNumber_Type(Integer32):
    """Custom type intervalL2EthRx1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalL2EthRx1dayNumber_Type.__name__ = "Integer32"
_IntervalL2EthRx1dayNumber_Object = MibTableColumn
intervalL2EthRx1dayNumber = _IntervalL2EthRx1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 1),
    _IntervalL2EthRx1dayNumber_Type()
)
intervalL2EthRx1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayNumber.setStatus("current")
_IntervalL2EthRx1dayFramesRcv_Type = Counter64String
_IntervalL2EthRx1dayFramesRcv_Object = MibTableColumn
intervalL2EthRx1dayFramesRcv = _IntervalL2EthRx1dayFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 2),
    _IntervalL2EthRx1dayFramesRcv_Type()
)
intervalL2EthRx1dayFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayFramesRcv.setStatus("current")
_IntervalL2EthRx1dayBytesRcv_Type = Counter64String
_IntervalL2EthRx1dayBytesRcv_Object = MibTableColumn
intervalL2EthRx1dayBytesRcv = _IntervalL2EthRx1dayBytesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 3),
    _IntervalL2EthRx1dayBytesRcv_Type()
)
intervalL2EthRx1dayBytesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesRcv.setStatus("current")
_IntervalL2EthRx1dayBroadcastFramesRcv_Type = Counter64String
_IntervalL2EthRx1dayBroadcastFramesRcv_Object = MibTableColumn
intervalL2EthRx1dayBroadcastFramesRcv = _IntervalL2EthRx1dayBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 4),
    _IntervalL2EthRx1dayBroadcastFramesRcv_Type()
)
intervalL2EthRx1dayBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBroadcastFramesRcv.setStatus("current")
_IntervalL2EthRx1dayMulticastFramesRcv_Type = Counter64String
_IntervalL2EthRx1dayMulticastFramesRcv_Object = MibTableColumn
intervalL2EthRx1dayMulticastFramesRcv = _IntervalL2EthRx1dayMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 5),
    _IntervalL2EthRx1dayMulticastFramesRcv_Type()
)
intervalL2EthRx1dayMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayMulticastFramesRcv.setStatus("current")
_IntervalL2EthRx1dayCrcErrorsRcv_Type = Counter64String
_IntervalL2EthRx1dayCrcErrorsRcv_Object = MibTableColumn
intervalL2EthRx1dayCrcErrorsRcv = _IntervalL2EthRx1dayCrcErrorsRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 6),
    _IntervalL2EthRx1dayCrcErrorsRcv_Type()
)
intervalL2EthRx1dayCrcErrorsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayCrcErrorsRcv.setStatus("current")
_IntervalL2EthRx1dayUndersizedFramesRcv_Type = Counter64String
_IntervalL2EthRx1dayUndersizedFramesRcv_Object = MibTableColumn
intervalL2EthRx1dayUndersizedFramesRcv = _IntervalL2EthRx1dayUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 7),
    _IntervalL2EthRx1dayUndersizedFramesRcv_Type()
)
intervalL2EthRx1dayUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayUndersizedFramesRcv.setStatus("current")
_IntervalL2EthRx1dayOversizedFramesRcv_Type = Counter64String
_IntervalL2EthRx1dayOversizedFramesRcv_Object = MibTableColumn
intervalL2EthRx1dayOversizedFramesRcv = _IntervalL2EthRx1dayOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 8),
    _IntervalL2EthRx1dayOversizedFramesRcv_Type()
)
intervalL2EthRx1dayOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayOversizedFramesRcv.setStatus("current")
_IntervalL2EthRx1dayPauseFramesRcv_Type = Counter64String
_IntervalL2EthRx1dayPauseFramesRcv_Object = MibTableColumn
intervalL2EthRx1dayPauseFramesRcv = _IntervalL2EthRx1dayPauseFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 9),
    _IntervalL2EthRx1dayPauseFramesRcv_Type()
)
intervalL2EthRx1dayPauseFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayPauseFramesRcv.setStatus("current")
_IntervalL2EthRx1dayBytesFrames64Rcv_Type = Counter64String
_IntervalL2EthRx1dayBytesFrames64Rcv_Object = MibTableColumn
intervalL2EthRx1dayBytesFrames64Rcv = _IntervalL2EthRx1dayBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 10),
    _IntervalL2EthRx1dayBytesFrames64Rcv_Type()
)
intervalL2EthRx1dayBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesFrames64Rcv.setStatus("current")
_IntervalL2EthRx1dayBytesFrames65Rcv_Type = Counter64String
_IntervalL2EthRx1dayBytesFrames65Rcv_Object = MibTableColumn
intervalL2EthRx1dayBytesFrames65Rcv = _IntervalL2EthRx1dayBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 11),
    _IntervalL2EthRx1dayBytesFrames65Rcv_Type()
)
intervalL2EthRx1dayBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesFrames65Rcv.setStatus("current")
_IntervalL2EthRx1dayBytesFrames128Rcv_Type = Counter64String
_IntervalL2EthRx1dayBytesFrames128Rcv_Object = MibTableColumn
intervalL2EthRx1dayBytesFrames128Rcv = _IntervalL2EthRx1dayBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 12),
    _IntervalL2EthRx1dayBytesFrames128Rcv_Type()
)
intervalL2EthRx1dayBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesFrames128Rcv.setStatus("current")
_IntervalL2EthRx1dayBytesFrames256Rcv_Type = Counter64String
_IntervalL2EthRx1dayBytesFrames256Rcv_Object = MibTableColumn
intervalL2EthRx1dayBytesFrames256Rcv = _IntervalL2EthRx1dayBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 13),
    _IntervalL2EthRx1dayBytesFrames256Rcv_Type()
)
intervalL2EthRx1dayBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesFrames256Rcv.setStatus("current")
_IntervalL2EthRx1dayBytesFrames512Rcv_Type = Counter64String
_IntervalL2EthRx1dayBytesFrames512Rcv_Object = MibTableColumn
intervalL2EthRx1dayBytesFrames512Rcv = _IntervalL2EthRx1dayBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 14),
    _IntervalL2EthRx1dayBytesFrames512Rcv_Type()
)
intervalL2EthRx1dayBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesFrames512Rcv.setStatus("current")
_IntervalL2EthRx1dayBytesFrames1024Rcv_Type = Counter64String
_IntervalL2EthRx1dayBytesFrames1024Rcv_Object = MibTableColumn
intervalL2EthRx1dayBytesFrames1024Rcv = _IntervalL2EthRx1dayBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 15),
    _IntervalL2EthRx1dayBytesFrames1024Rcv_Type()
)
intervalL2EthRx1dayBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesFrames1024Rcv.setStatus("current")
_IntervalL2EthRx1dayBytesFrames1519Rcv_Type = Counter64String
_IntervalL2EthRx1dayBytesFrames1519Rcv_Object = MibTableColumn
intervalL2EthRx1dayBytesFrames1519Rcv = _IntervalL2EthRx1dayBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 16),
    _IntervalL2EthRx1dayBytesFrames1519Rcv_Type()
)
intervalL2EthRx1dayBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayBytesFrames1519Rcv.setStatus("current")
_IntervalL2EthRx1dayInterPackJunkBytesFramesRcv_Type = Counter64String
_IntervalL2EthRx1dayInterPackJunkBytesFramesRcv_Object = MibTableColumn
intervalL2EthRx1dayInterPackJunkBytesFramesRcv = _IntervalL2EthRx1dayInterPackJunkBytesFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 17),
    _IntervalL2EthRx1dayInterPackJunkBytesFramesRcv_Type()
)
intervalL2EthRx1dayInterPackJunkBytesFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayInterPackJunkBytesFramesRcv.setStatus("current")
_IntervalL2EthRx1dayValidFlag_Type = TruthValue
_IntervalL2EthRx1dayValidFlag_Object = MibTableColumn
intervalL2EthRx1dayValidFlag = _IntervalL2EthRx1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 18),
    _IntervalL2EthRx1dayValidFlag_Type()
)
intervalL2EthRx1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayValidFlag.setStatus("current")
_IntervalL2EthRx1dayTimeStamp_Type = DateAndTime
_IntervalL2EthRx1dayTimeStamp_Object = MibTableColumn
intervalL2EthRx1dayTimeStamp = _IntervalL2EthRx1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 139, 1, 19),
    _IntervalL2EthRx1dayTimeStamp_Type()
)
intervalL2EthRx1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthRx1dayTimeStamp.setStatus("current")
_CurrentL2EthTx15minTable_Object = MibTable
currentL2EthTx15minTable = _CurrentL2EthTx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140)
)
if mibBuilder.loadTexts:
    currentL2EthTx15minTable.setStatus("current")
_CurrentL2EthTx15minEntry_Object = MibTableRow
currentL2EthTx15minEntry = _CurrentL2EthTx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1)
)
currentL2EthTx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentL2EthTx15minEntry.setStatus("current")
_CurrentL2EthTx15minFramesTrmt_Type = Counter64String
_CurrentL2EthTx15minFramesTrmt_Object = MibTableColumn
currentL2EthTx15minFramesTrmt = _CurrentL2EthTx15minFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 1),
    _CurrentL2EthTx15minFramesTrmt_Type()
)
currentL2EthTx15minFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minFramesTrmt.setStatus("current")
_CurrentL2EthTx15minBytesTrmt_Type = Counter64String
_CurrentL2EthTx15minBytesTrmt_Object = MibTableColumn
currentL2EthTx15minBytesTrmt = _CurrentL2EthTx15minBytesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 2),
    _CurrentL2EthTx15minBytesTrmt_Type()
)
currentL2EthTx15minBytesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesTrmt.setStatus("current")
_CurrentL2EthTx15minBroadcastFramesTrmt_Type = Counter64String
_CurrentL2EthTx15minBroadcastFramesTrmt_Object = MibTableColumn
currentL2EthTx15minBroadcastFramesTrmt = _CurrentL2EthTx15minBroadcastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 3),
    _CurrentL2EthTx15minBroadcastFramesTrmt_Type()
)
currentL2EthTx15minBroadcastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBroadcastFramesTrmt.setStatus("current")
_CurrentL2EthTx15minMulticastFramesTrmt_Type = Counter64String
_CurrentL2EthTx15minMulticastFramesTrmt_Object = MibTableColumn
currentL2EthTx15minMulticastFramesTrmt = _CurrentL2EthTx15minMulticastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 4),
    _CurrentL2EthTx15minMulticastFramesTrmt_Type()
)
currentL2EthTx15minMulticastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minMulticastFramesTrmt.setStatus("current")
_CurrentL2EthTx15minPauseFramesTrmt_Type = Counter64String
_CurrentL2EthTx15minPauseFramesTrmt_Object = MibTableColumn
currentL2EthTx15minPauseFramesTrmt = _CurrentL2EthTx15minPauseFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 5),
    _CurrentL2EthTx15minPauseFramesTrmt_Type()
)
currentL2EthTx15minPauseFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minPauseFramesTrmt.setStatus("current")
_CurrentL2EthTx15minBytesFrames64Trmt_Type = Counter64String
_CurrentL2EthTx15minBytesFrames64Trmt_Object = MibTableColumn
currentL2EthTx15minBytesFrames64Trmt = _CurrentL2EthTx15minBytesFrames64Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 6),
    _CurrentL2EthTx15minBytesFrames64Trmt_Type()
)
currentL2EthTx15minBytesFrames64Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesFrames64Trmt.setStatus("current")
_CurrentL2EthTx15minBytesFrames65Trmt_Type = Counter64String
_CurrentL2EthTx15minBytesFrames65Trmt_Object = MibTableColumn
currentL2EthTx15minBytesFrames65Trmt = _CurrentL2EthTx15minBytesFrames65Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 7),
    _CurrentL2EthTx15minBytesFrames65Trmt_Type()
)
currentL2EthTx15minBytesFrames65Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesFrames65Trmt.setStatus("current")
_CurrentL2EthTx15minBytesFrames128Trmt_Type = Counter64String
_CurrentL2EthTx15minBytesFrames128Trmt_Object = MibTableColumn
currentL2EthTx15minBytesFrames128Trmt = _CurrentL2EthTx15minBytesFrames128Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 8),
    _CurrentL2EthTx15minBytesFrames128Trmt_Type()
)
currentL2EthTx15minBytesFrames128Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesFrames128Trmt.setStatus("current")
_CurrentL2EthTx15minBytesFrames256Trmt_Type = Counter64String
_CurrentL2EthTx15minBytesFrames256Trmt_Object = MibTableColumn
currentL2EthTx15minBytesFrames256Trmt = _CurrentL2EthTx15minBytesFrames256Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 9),
    _CurrentL2EthTx15minBytesFrames256Trmt_Type()
)
currentL2EthTx15minBytesFrames256Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesFrames256Trmt.setStatus("current")
_CurrentL2EthTx15minBytesFrames512Trmt_Type = Counter64String
_CurrentL2EthTx15minBytesFrames512Trmt_Object = MibTableColumn
currentL2EthTx15minBytesFrames512Trmt = _CurrentL2EthTx15minBytesFrames512Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 10),
    _CurrentL2EthTx15minBytesFrames512Trmt_Type()
)
currentL2EthTx15minBytesFrames512Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesFrames512Trmt.setStatus("current")
_CurrentL2EthTx15minBytesFrames1024Trmt_Type = Counter64String
_CurrentL2EthTx15minBytesFrames1024Trmt_Object = MibTableColumn
currentL2EthTx15minBytesFrames1024Trmt = _CurrentL2EthTx15minBytesFrames1024Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 11),
    _CurrentL2EthTx15minBytesFrames1024Trmt_Type()
)
currentL2EthTx15minBytesFrames1024Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesFrames1024Trmt.setStatus("current")
_CurrentL2EthTx15minBytesFrames1519Trmt_Type = Counter64String
_CurrentL2EthTx15minBytesFrames1519Trmt_Object = MibTableColumn
currentL2EthTx15minBytesFrames1519Trmt = _CurrentL2EthTx15minBytesFrames1519Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 12),
    _CurrentL2EthTx15minBytesFrames1519Trmt_Type()
)
currentL2EthTx15minBytesFrames1519Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minBytesFrames1519Trmt.setStatus("current")


class _CurrentL2EthTx15minElapsedTime_Type(Integer32):
    """Custom type currentL2EthTx15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentL2EthTx15minElapsedTime_Type.__name__ = "Integer32"
_CurrentL2EthTx15minElapsedTime_Object = MibTableColumn
currentL2EthTx15minElapsedTime = _CurrentL2EthTx15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 140, 1, 13),
    _CurrentL2EthTx15minElapsedTime_Type()
)
currentL2EthTx15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx15minElapsedTime.setStatus("current")
_CurrentL2EthTx1dayTable_Object = MibTable
currentL2EthTx1dayTable = _CurrentL2EthTx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141)
)
if mibBuilder.loadTexts:
    currentL2EthTx1dayTable.setStatus("current")
_CurrentL2EthTx1dayEntry_Object = MibTableRow
currentL2EthTx1dayEntry = _CurrentL2EthTx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1)
)
currentL2EthTx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentL2EthTx1dayEntry.setStatus("current")
_CurrentL2EthTx1dayFramesTrmt_Type = Counter64String
_CurrentL2EthTx1dayFramesTrmt_Object = MibTableColumn
currentL2EthTx1dayFramesTrmt = _CurrentL2EthTx1dayFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 1),
    _CurrentL2EthTx1dayFramesTrmt_Type()
)
currentL2EthTx1dayFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayFramesTrmt.setStatus("current")
_CurrentL2EthTx1dayBytesTrmt_Type = Counter64String
_CurrentL2EthTx1dayBytesTrmt_Object = MibTableColumn
currentL2EthTx1dayBytesTrmt = _CurrentL2EthTx1dayBytesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 2),
    _CurrentL2EthTx1dayBytesTrmt_Type()
)
currentL2EthTx1dayBytesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesTrmt.setStatus("current")
_CurrentL2EthTx1dayBroadcastFramesTrmt_Type = Counter64String
_CurrentL2EthTx1dayBroadcastFramesTrmt_Object = MibTableColumn
currentL2EthTx1dayBroadcastFramesTrmt = _CurrentL2EthTx1dayBroadcastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 3),
    _CurrentL2EthTx1dayBroadcastFramesTrmt_Type()
)
currentL2EthTx1dayBroadcastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBroadcastFramesTrmt.setStatus("current")
_CurrentL2EthTx1dayMulticastFramesTrmt_Type = Counter64String
_CurrentL2EthTx1dayMulticastFramesTrmt_Object = MibTableColumn
currentL2EthTx1dayMulticastFramesTrmt = _CurrentL2EthTx1dayMulticastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 4),
    _CurrentL2EthTx1dayMulticastFramesTrmt_Type()
)
currentL2EthTx1dayMulticastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayMulticastFramesTrmt.setStatus("current")
_CurrentL2EthTx1dayPauseFramesTrmt_Type = Counter64String
_CurrentL2EthTx1dayPauseFramesTrmt_Object = MibTableColumn
currentL2EthTx1dayPauseFramesTrmt = _CurrentL2EthTx1dayPauseFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 5),
    _CurrentL2EthTx1dayPauseFramesTrmt_Type()
)
currentL2EthTx1dayPauseFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayPauseFramesTrmt.setStatus("current")
_CurrentL2EthTx1dayBytesFrames64Trmt_Type = Counter64String
_CurrentL2EthTx1dayBytesFrames64Trmt_Object = MibTableColumn
currentL2EthTx1dayBytesFrames64Trmt = _CurrentL2EthTx1dayBytesFrames64Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 6),
    _CurrentL2EthTx1dayBytesFrames64Trmt_Type()
)
currentL2EthTx1dayBytesFrames64Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesFrames64Trmt.setStatus("current")
_CurrentL2EthTx1dayBytesFrames65Trmt_Type = Counter64String
_CurrentL2EthTx1dayBytesFrames65Trmt_Object = MibTableColumn
currentL2EthTx1dayBytesFrames65Trmt = _CurrentL2EthTx1dayBytesFrames65Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 7),
    _CurrentL2EthTx1dayBytesFrames65Trmt_Type()
)
currentL2EthTx1dayBytesFrames65Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesFrames65Trmt.setStatus("current")
_CurrentL2EthTx1dayBytesFrames128Trmt_Type = Counter64String
_CurrentL2EthTx1dayBytesFrames128Trmt_Object = MibTableColumn
currentL2EthTx1dayBytesFrames128Trmt = _CurrentL2EthTx1dayBytesFrames128Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 8),
    _CurrentL2EthTx1dayBytesFrames128Trmt_Type()
)
currentL2EthTx1dayBytesFrames128Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesFrames128Trmt.setStatus("current")
_CurrentL2EthTx1dayBytesFrames256Trmt_Type = Counter64String
_CurrentL2EthTx1dayBytesFrames256Trmt_Object = MibTableColumn
currentL2EthTx1dayBytesFrames256Trmt = _CurrentL2EthTx1dayBytesFrames256Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 9),
    _CurrentL2EthTx1dayBytesFrames256Trmt_Type()
)
currentL2EthTx1dayBytesFrames256Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesFrames256Trmt.setStatus("current")
_CurrentL2EthTx1dayBytesFrames512Trmt_Type = Counter64String
_CurrentL2EthTx1dayBytesFrames512Trmt_Object = MibTableColumn
currentL2EthTx1dayBytesFrames512Trmt = _CurrentL2EthTx1dayBytesFrames512Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 10),
    _CurrentL2EthTx1dayBytesFrames512Trmt_Type()
)
currentL2EthTx1dayBytesFrames512Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesFrames512Trmt.setStatus("current")
_CurrentL2EthTx1dayBytesFrames1024Trmt_Type = Counter64String
_CurrentL2EthTx1dayBytesFrames1024Trmt_Object = MibTableColumn
currentL2EthTx1dayBytesFrames1024Trmt = _CurrentL2EthTx1dayBytesFrames1024Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 11),
    _CurrentL2EthTx1dayBytesFrames1024Trmt_Type()
)
currentL2EthTx1dayBytesFrames1024Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesFrames1024Trmt.setStatus("current")
_CurrentL2EthTx1dayBytesFrames1519Trmt_Type = Counter64String
_CurrentL2EthTx1dayBytesFrames1519Trmt_Object = MibTableColumn
currentL2EthTx1dayBytesFrames1519Trmt = _CurrentL2EthTx1dayBytesFrames1519Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 12),
    _CurrentL2EthTx1dayBytesFrames1519Trmt_Type()
)
currentL2EthTx1dayBytesFrames1519Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayBytesFrames1519Trmt.setStatus("current")


class _CurrentL2EthTx1dayElapsedTime_Type(Integer32):
    """Custom type currentL2EthTx1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentL2EthTx1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentL2EthTx1dayElapsedTime_Object = MibTableColumn
currentL2EthTx1dayElapsedTime = _CurrentL2EthTx1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 141, 1, 13),
    _CurrentL2EthTx1dayElapsedTime_Type()
)
currentL2EthTx1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentL2EthTx1dayElapsedTime.setStatus("current")
_IntervalL2EthTx15minTable_Object = MibTable
intervalL2EthTx15minTable = _IntervalL2EthTx15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142)
)
if mibBuilder.loadTexts:
    intervalL2EthTx15minTable.setStatus("current")
_IntervalL2EthTx15minEntry_Object = MibTableRow
intervalL2EthTx15minEntry = _IntervalL2EthTx15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1)
)
intervalL2EthTx15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthTx15minNumber"),
)
if mibBuilder.loadTexts:
    intervalL2EthTx15minEntry.setStatus("current")


class _IntervalL2EthTx15minNumber_Type(Integer32):
    """Custom type intervalL2EthTx15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalL2EthTx15minNumber_Type.__name__ = "Integer32"
_IntervalL2EthTx15minNumber_Object = MibTableColumn
intervalL2EthTx15minNumber = _IntervalL2EthTx15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 1),
    _IntervalL2EthTx15minNumber_Type()
)
intervalL2EthTx15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalL2EthTx15minNumber.setStatus("current")
_IntervalL2EthTx15minFramesTrmt_Type = Counter64String
_IntervalL2EthTx15minFramesTrmt_Object = MibTableColumn
intervalL2EthTx15minFramesTrmt = _IntervalL2EthTx15minFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 2),
    _IntervalL2EthTx15minFramesTrmt_Type()
)
intervalL2EthTx15minFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minFramesTrmt.setStatus("current")
_IntervalL2EthTx15minBytesTrmt_Type = Counter64String
_IntervalL2EthTx15minBytesTrmt_Object = MibTableColumn
intervalL2EthTx15minBytesTrmt = _IntervalL2EthTx15minBytesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 3),
    _IntervalL2EthTx15minBytesTrmt_Type()
)
intervalL2EthTx15minBytesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesTrmt.setStatus("current")
_IntervalL2EthTx15minBroadcastFramesTrmt_Type = Counter64String
_IntervalL2EthTx15minBroadcastFramesTrmt_Object = MibTableColumn
intervalL2EthTx15minBroadcastFramesTrmt = _IntervalL2EthTx15minBroadcastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 4),
    _IntervalL2EthTx15minBroadcastFramesTrmt_Type()
)
intervalL2EthTx15minBroadcastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBroadcastFramesTrmt.setStatus("current")
_IntervalL2EthTx15minMulticastFramesTrmt_Type = Counter64String
_IntervalL2EthTx15minMulticastFramesTrmt_Object = MibTableColumn
intervalL2EthTx15minMulticastFramesTrmt = _IntervalL2EthTx15minMulticastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 5),
    _IntervalL2EthTx15minMulticastFramesTrmt_Type()
)
intervalL2EthTx15minMulticastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minMulticastFramesTrmt.setStatus("current")
_IntervalL2EthTx15minPauseFramesTrmt_Type = Counter64String
_IntervalL2EthTx15minPauseFramesTrmt_Object = MibTableColumn
intervalL2EthTx15minPauseFramesTrmt = _IntervalL2EthTx15minPauseFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 6),
    _IntervalL2EthTx15minPauseFramesTrmt_Type()
)
intervalL2EthTx15minPauseFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minPauseFramesTrmt.setStatus("current")
_IntervalL2EthTx15minBytesFrames64Trmt_Type = Counter64String
_IntervalL2EthTx15minBytesFrames64Trmt_Object = MibTableColumn
intervalL2EthTx15minBytesFrames64Trmt = _IntervalL2EthTx15minBytesFrames64Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 7),
    _IntervalL2EthTx15minBytesFrames64Trmt_Type()
)
intervalL2EthTx15minBytesFrames64Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesFrames64Trmt.setStatus("current")
_IntervalL2EthTx15minBytesFrames65Trmt_Type = Counter64String
_IntervalL2EthTx15minBytesFrames65Trmt_Object = MibTableColumn
intervalL2EthTx15minBytesFrames65Trmt = _IntervalL2EthTx15minBytesFrames65Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 8),
    _IntervalL2EthTx15minBytesFrames65Trmt_Type()
)
intervalL2EthTx15minBytesFrames65Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesFrames65Trmt.setStatus("current")
_IntervalL2EthTx15minBytesFrames128Trmt_Type = Counter64String
_IntervalL2EthTx15minBytesFrames128Trmt_Object = MibTableColumn
intervalL2EthTx15minBytesFrames128Trmt = _IntervalL2EthTx15minBytesFrames128Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 9),
    _IntervalL2EthTx15minBytesFrames128Trmt_Type()
)
intervalL2EthTx15minBytesFrames128Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesFrames128Trmt.setStatus("current")
_IntervalL2EthTx15minBytesFrames256Trmt_Type = Counter64String
_IntervalL2EthTx15minBytesFrames256Trmt_Object = MibTableColumn
intervalL2EthTx15minBytesFrames256Trmt = _IntervalL2EthTx15minBytesFrames256Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 10),
    _IntervalL2EthTx15minBytesFrames256Trmt_Type()
)
intervalL2EthTx15minBytesFrames256Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesFrames256Trmt.setStatus("current")
_IntervalL2EthTx15minBytesFrames512Trmt_Type = Counter64String
_IntervalL2EthTx15minBytesFrames512Trmt_Object = MibTableColumn
intervalL2EthTx15minBytesFrames512Trmt = _IntervalL2EthTx15minBytesFrames512Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 11),
    _IntervalL2EthTx15minBytesFrames512Trmt_Type()
)
intervalL2EthTx15minBytesFrames512Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesFrames512Trmt.setStatus("current")
_IntervalL2EthTx15minBytesFrames1024Trmt_Type = Counter64String
_IntervalL2EthTx15minBytesFrames1024Trmt_Object = MibTableColumn
intervalL2EthTx15minBytesFrames1024Trmt = _IntervalL2EthTx15minBytesFrames1024Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 12),
    _IntervalL2EthTx15minBytesFrames1024Trmt_Type()
)
intervalL2EthTx15minBytesFrames1024Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesFrames1024Trmt.setStatus("current")
_IntervalL2EthTx15minBytesFrames1519Trmt_Type = Counter64String
_IntervalL2EthTx15minBytesFrames1519Trmt_Object = MibTableColumn
intervalL2EthTx15minBytesFrames1519Trmt = _IntervalL2EthTx15minBytesFrames1519Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 13),
    _IntervalL2EthTx15minBytesFrames1519Trmt_Type()
)
intervalL2EthTx15minBytesFrames1519Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minBytesFrames1519Trmt.setStatus("current")
_IntervalL2EthTx15minValidFlag_Type = TruthValue
_IntervalL2EthTx15minValidFlag_Object = MibTableColumn
intervalL2EthTx15minValidFlag = _IntervalL2EthTx15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 14),
    _IntervalL2EthTx15minValidFlag_Type()
)
intervalL2EthTx15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minValidFlag.setStatus("current")
_IntervalL2EthTx15minTimeStamp_Type = DateAndTime
_IntervalL2EthTx15minTimeStamp_Object = MibTableColumn
intervalL2EthTx15minTimeStamp = _IntervalL2EthTx15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 142, 1, 15),
    _IntervalL2EthTx15minTimeStamp_Type()
)
intervalL2EthTx15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx15minTimeStamp.setStatus("current")
_IntervalL2EthTx1dayTable_Object = MibTable
intervalL2EthTx1dayTable = _IntervalL2EthTx1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143)
)
if mibBuilder.loadTexts:
    intervalL2EthTx1dayTable.setStatus("current")
_IntervalL2EthTx1dayEntry_Object = MibTableRow
intervalL2EthTx1dayEntry = _IntervalL2EthTx1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1)
)
intervalL2EthTx1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthTx1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalL2EthTx1dayEntry.setStatus("current")


class _IntervalL2EthTx1dayNumber_Type(Integer32):
    """Custom type intervalL2EthTx1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalL2EthTx1dayNumber_Type.__name__ = "Integer32"
_IntervalL2EthTx1dayNumber_Object = MibTableColumn
intervalL2EthTx1dayNumber = _IntervalL2EthTx1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 1),
    _IntervalL2EthTx1dayNumber_Type()
)
intervalL2EthTx1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayNumber.setStatus("current")
_IntervalL2EthTx1dayFramesTrmt_Type = Counter64String
_IntervalL2EthTx1dayFramesTrmt_Object = MibTableColumn
intervalL2EthTx1dayFramesTrmt = _IntervalL2EthTx1dayFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 2),
    _IntervalL2EthTx1dayFramesTrmt_Type()
)
intervalL2EthTx1dayFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayFramesTrmt.setStatus("current")
_IntervalL2EthTx1dayBytesTrmt_Type = Counter64String
_IntervalL2EthTx1dayBytesTrmt_Object = MibTableColumn
intervalL2EthTx1dayBytesTrmt = _IntervalL2EthTx1dayBytesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 3),
    _IntervalL2EthTx1dayBytesTrmt_Type()
)
intervalL2EthTx1dayBytesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesTrmt.setStatus("current")
_IntervalL2EthTx1dayBroadcastFramesTrmt_Type = Counter64String
_IntervalL2EthTx1dayBroadcastFramesTrmt_Object = MibTableColumn
intervalL2EthTx1dayBroadcastFramesTrmt = _IntervalL2EthTx1dayBroadcastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 4),
    _IntervalL2EthTx1dayBroadcastFramesTrmt_Type()
)
intervalL2EthTx1dayBroadcastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBroadcastFramesTrmt.setStatus("current")
_IntervalL2EthTx1dayMulticastFramesTrmt_Type = Counter64String
_IntervalL2EthTx1dayMulticastFramesTrmt_Object = MibTableColumn
intervalL2EthTx1dayMulticastFramesTrmt = _IntervalL2EthTx1dayMulticastFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 5),
    _IntervalL2EthTx1dayMulticastFramesTrmt_Type()
)
intervalL2EthTx1dayMulticastFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayMulticastFramesTrmt.setStatus("current")
_IntervalL2EthTx1dayPauseFramesTrmt_Type = Counter64String
_IntervalL2EthTx1dayPauseFramesTrmt_Object = MibTableColumn
intervalL2EthTx1dayPauseFramesTrmt = _IntervalL2EthTx1dayPauseFramesTrmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 6),
    _IntervalL2EthTx1dayPauseFramesTrmt_Type()
)
intervalL2EthTx1dayPauseFramesTrmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayPauseFramesTrmt.setStatus("current")
_IntervalL2EthTx1dayBytesFrames64Trmt_Type = Counter64String
_IntervalL2EthTx1dayBytesFrames64Trmt_Object = MibTableColumn
intervalL2EthTx1dayBytesFrames64Trmt = _IntervalL2EthTx1dayBytesFrames64Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 7),
    _IntervalL2EthTx1dayBytesFrames64Trmt_Type()
)
intervalL2EthTx1dayBytesFrames64Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesFrames64Trmt.setStatus("current")
_IntervalL2EthTx1dayBytesFrames65Trmt_Type = Counter64String
_IntervalL2EthTx1dayBytesFrames65Trmt_Object = MibTableColumn
intervalL2EthTx1dayBytesFrames65Trmt = _IntervalL2EthTx1dayBytesFrames65Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 8),
    _IntervalL2EthTx1dayBytesFrames65Trmt_Type()
)
intervalL2EthTx1dayBytesFrames65Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesFrames65Trmt.setStatus("current")
_IntervalL2EthTx1dayBytesFrames128Trmt_Type = Counter64String
_IntervalL2EthTx1dayBytesFrames128Trmt_Object = MibTableColumn
intervalL2EthTx1dayBytesFrames128Trmt = _IntervalL2EthTx1dayBytesFrames128Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 9),
    _IntervalL2EthTx1dayBytesFrames128Trmt_Type()
)
intervalL2EthTx1dayBytesFrames128Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesFrames128Trmt.setStatus("current")
_IntervalL2EthTx1dayBytesFrames256Trmt_Type = Counter64String
_IntervalL2EthTx1dayBytesFrames256Trmt_Object = MibTableColumn
intervalL2EthTx1dayBytesFrames256Trmt = _IntervalL2EthTx1dayBytesFrames256Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 10),
    _IntervalL2EthTx1dayBytesFrames256Trmt_Type()
)
intervalL2EthTx1dayBytesFrames256Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesFrames256Trmt.setStatus("current")
_IntervalL2EthTx1dayBytesFrames512Trmt_Type = Counter64String
_IntervalL2EthTx1dayBytesFrames512Trmt_Object = MibTableColumn
intervalL2EthTx1dayBytesFrames512Trmt = _IntervalL2EthTx1dayBytesFrames512Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 11),
    _IntervalL2EthTx1dayBytesFrames512Trmt_Type()
)
intervalL2EthTx1dayBytesFrames512Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesFrames512Trmt.setStatus("current")
_IntervalL2EthTx1dayBytesFrames1024Trmt_Type = Counter64String
_IntervalL2EthTx1dayBytesFrames1024Trmt_Object = MibTableColumn
intervalL2EthTx1dayBytesFrames1024Trmt = _IntervalL2EthTx1dayBytesFrames1024Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 12),
    _IntervalL2EthTx1dayBytesFrames1024Trmt_Type()
)
intervalL2EthTx1dayBytesFrames1024Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesFrames1024Trmt.setStatus("current")
_IntervalL2EthTx1dayBytesFrames1519Trmt_Type = Counter64String
_IntervalL2EthTx1dayBytesFrames1519Trmt_Object = MibTableColumn
intervalL2EthTx1dayBytesFrames1519Trmt = _IntervalL2EthTx1dayBytesFrames1519Trmt_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 13),
    _IntervalL2EthTx1dayBytesFrames1519Trmt_Type()
)
intervalL2EthTx1dayBytesFrames1519Trmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayBytesFrames1519Trmt.setStatus("current")
_IntervalL2EthTx1dayValidFlag_Type = TruthValue
_IntervalL2EthTx1dayValidFlag_Object = MibTableColumn
intervalL2EthTx1dayValidFlag = _IntervalL2EthTx1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 14),
    _IntervalL2EthTx1dayValidFlag_Type()
)
intervalL2EthTx1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayValidFlag.setStatus("current")
_IntervalL2EthTx1dayTimeStamp_Type = DateAndTime
_IntervalL2EthTx1dayTimeStamp_Object = MibTableColumn
intervalL2EthTx1dayTimeStamp = _IntervalL2EthTx1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 143, 1, 15),
    _IntervalL2EthTx1dayTimeStamp_Type()
)
intervalL2EthTx1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalL2EthTx1dayTimeStamp.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr15minTable_Object = MibTable
intervalFarEndPhysPerfOpticalInputPwr15minTable = _IntervalFarEndPhysPerfOpticalInputPwr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144)
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minTable.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr15minEntry_Object = MibTableRow
intervalFarEndPhysPerfOpticalInputPwr15minEntry = _IntervalFarEndPhysPerfOpticalInputPwr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144, 1)
)
intervalFarEndPhysPerfOpticalInputPwr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalInputPwr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minEntry.setStatus("current")


class _IntervalFarEndPhysPerfOpticalInputPwr15minNumber_Type(Integer32):
    """Custom type intervalFarEndPhysPerfOpticalInputPwr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalFarEndPhysPerfOpticalInputPwr15minNumber_Type.__name__ = "Integer32"
_IntervalFarEndPhysPerfOpticalInputPwr15minNumber_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr15minNumber = _IntervalFarEndPhysPerfOpticalInputPwr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144, 1, 1),
    _IntervalFarEndPhysPerfOpticalInputPwr15minNumber_Type()
)
intervalFarEndPhysPerfOpticalInputPwr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minNumber.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr15minLow_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr15minLow_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr15minLow = _IntervalFarEndPhysPerfOpticalInputPwr15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144, 1, 2),
    _IntervalFarEndPhysPerfOpticalInputPwr15minLow_Type()
)
intervalFarEndPhysPerfOpticalInputPwr15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minLow.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr15minMean_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr15minMean_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr15minMean = _IntervalFarEndPhysPerfOpticalInputPwr15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144, 1, 3),
    _IntervalFarEndPhysPerfOpticalInputPwr15minMean_Type()
)
intervalFarEndPhysPerfOpticalInputPwr15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minMean.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr15minHigh_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr15minHigh_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr15minHigh = _IntervalFarEndPhysPerfOpticalInputPwr15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144, 1, 4),
    _IntervalFarEndPhysPerfOpticalInputPwr15minHigh_Type()
)
intervalFarEndPhysPerfOpticalInputPwr15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minHigh.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr15minValidFlag_Type = TruthValue
_IntervalFarEndPhysPerfOpticalInputPwr15minValidFlag_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr15minValidFlag = _IntervalFarEndPhysPerfOpticalInputPwr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144, 1, 5),
    _IntervalFarEndPhysPerfOpticalInputPwr15minValidFlag_Type()
)
intervalFarEndPhysPerfOpticalInputPwr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minValidFlag.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr15minTimeStamp_Type = DateAndTime
_IntervalFarEndPhysPerfOpticalInputPwr15minTimeStamp_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr15minTimeStamp = _IntervalFarEndPhysPerfOpticalInputPwr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 144, 1, 6),
    _IntervalFarEndPhysPerfOpticalInputPwr15minTimeStamp_Type()
)
intervalFarEndPhysPerfOpticalInputPwr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr15minTimeStamp.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1dayTable_Object = MibTable
intervalFarEndPhysPerfOpticalInputPwr1dayTable = _IntervalFarEndPhysPerfOpticalInputPwr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145)
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayTable.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1dayEntry_Object = MibTableRow
intervalFarEndPhysPerfOpticalInputPwr1dayEntry = _IntervalFarEndPhysPerfOpticalInputPwr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145, 1)
)
intervalFarEndPhysPerfOpticalInputPwr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalInputPwr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayEntry.setStatus("current")


class _IntervalFarEndPhysPerfOpticalInputPwr1dayNumber_Type(Integer32):
    """Custom type intervalFarEndPhysPerfOpticalInputPwr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalFarEndPhysPerfOpticalInputPwr1dayNumber_Type.__name__ = "Integer32"
_IntervalFarEndPhysPerfOpticalInputPwr1dayNumber_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1dayNumber = _IntervalFarEndPhysPerfOpticalInputPwr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145, 1, 1),
    _IntervalFarEndPhysPerfOpticalInputPwr1dayNumber_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayNumber.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1dayLow_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr1dayLow_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1dayLow = _IntervalFarEndPhysPerfOpticalInputPwr1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145, 1, 2),
    _IntervalFarEndPhysPerfOpticalInputPwr1dayLow_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayLow.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr1dayMean_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr1dayMean_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1dayMean = _IntervalFarEndPhysPerfOpticalInputPwr1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145, 1, 3),
    _IntervalFarEndPhysPerfOpticalInputPwr1dayMean_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayMean.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr1dayHigh_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr1dayHigh_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1dayHigh = _IntervalFarEndPhysPerfOpticalInputPwr1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145, 1, 4),
    _IntervalFarEndPhysPerfOpticalInputPwr1dayHigh_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayHigh.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr1dayValidFlag_Type = TruthValue
_IntervalFarEndPhysPerfOpticalInputPwr1dayValidFlag_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1dayValidFlag = _IntervalFarEndPhysPerfOpticalInputPwr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145, 1, 5),
    _IntervalFarEndPhysPerfOpticalInputPwr1dayValidFlag_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayValidFlag.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp_Type = DateAndTime
_IntervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp = _IntervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 145, 1, 6),
    _IntervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1weekTable_Object = MibTable
intervalFarEndPhysPerfOpticalInputPwr1weekTable = _IntervalFarEndPhysPerfOpticalInputPwr1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146)
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekTable.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1weekEntry_Object = MibTableRow
intervalFarEndPhysPerfOpticalInputPwr1weekEntry = _IntervalFarEndPhysPerfOpticalInputPwr1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146, 1)
)
intervalFarEndPhysPerfOpticalInputPwr1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalInputPwr1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekEntry.setStatus("current")


class _IntervalFarEndPhysPerfOpticalInputPwr1weekNumber_Type(Integer32):
    """Custom type intervalFarEndPhysPerfOpticalInputPwr1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalFarEndPhysPerfOpticalInputPwr1weekNumber_Type.__name__ = "Integer32"
_IntervalFarEndPhysPerfOpticalInputPwr1weekNumber_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1weekNumber = _IntervalFarEndPhysPerfOpticalInputPwr1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146, 1, 1),
    _IntervalFarEndPhysPerfOpticalInputPwr1weekNumber_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekNumber.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1weekLow_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr1weekLow_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1weekLow = _IntervalFarEndPhysPerfOpticalInputPwr1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146, 1, 2),
    _IntervalFarEndPhysPerfOpticalInputPwr1weekLow_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekLow.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr1weekMean_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr1weekMean_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1weekMean = _IntervalFarEndPhysPerfOpticalInputPwr1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146, 1, 3),
    _IntervalFarEndPhysPerfOpticalInputPwr1weekMean_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekMean.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr1weekHigh_Type = Integer32
_IntervalFarEndPhysPerfOpticalInputPwr1weekHigh_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1weekHigh = _IntervalFarEndPhysPerfOpticalInputPwr1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146, 1, 4),
    _IntervalFarEndPhysPerfOpticalInputPwr1weekHigh_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekHigh.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalInputPwr1weekValidFlag_Type = TruthValue
_IntervalFarEndPhysPerfOpticalInputPwr1weekValidFlag_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1weekValidFlag = _IntervalFarEndPhysPerfOpticalInputPwr1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146, 1, 5),
    _IntervalFarEndPhysPerfOpticalInputPwr1weekValidFlag_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekValidFlag.setStatus("current")
_IntervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp_Type = DateAndTime
_IntervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp_Object = MibTableColumn
intervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp = _IntervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 146, 1, 6),
    _IntervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp_Type()
)
intervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr15minTable_Object = MibTable
intervalFarEndPhysPerfOpticalOutputPwr15minTable = _IntervalFarEndPhysPerfOpticalOutputPwr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147)
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minTable.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr15minEntry_Object = MibTableRow
intervalFarEndPhysPerfOpticalOutputPwr15minEntry = _IntervalFarEndPhysPerfOpticalOutputPwr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147, 1)
)
intervalFarEndPhysPerfOpticalOutputPwr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalOutputPwr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minEntry.setStatus("current")


class _IntervalFarEndPhysPerfOpticalOutputPwr15minNumber_Type(Integer32):
    """Custom type intervalFarEndPhysPerfOpticalOutputPwr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalFarEndPhysPerfOpticalOutputPwr15minNumber_Type.__name__ = "Integer32"
_IntervalFarEndPhysPerfOpticalOutputPwr15minNumber_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr15minNumber = _IntervalFarEndPhysPerfOpticalOutputPwr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147, 1, 1),
    _IntervalFarEndPhysPerfOpticalOutputPwr15minNumber_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minNumber.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr15minLow_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr15minLow_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr15minLow = _IntervalFarEndPhysPerfOpticalOutputPwr15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147, 1, 2),
    _IntervalFarEndPhysPerfOpticalOutputPwr15minLow_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minLow.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr15minMean_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr15minMean_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr15minMean = _IntervalFarEndPhysPerfOpticalOutputPwr15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147, 1, 3),
    _IntervalFarEndPhysPerfOpticalOutputPwr15minMean_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minMean.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr15minHigh_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr15minHigh_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr15minHigh = _IntervalFarEndPhysPerfOpticalOutputPwr15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147, 1, 4),
    _IntervalFarEndPhysPerfOpticalOutputPwr15minHigh_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minHigh.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr15minValidFlag_Type = TruthValue
_IntervalFarEndPhysPerfOpticalOutputPwr15minValidFlag_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr15minValidFlag = _IntervalFarEndPhysPerfOpticalOutputPwr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147, 1, 5),
    _IntervalFarEndPhysPerfOpticalOutputPwr15minValidFlag_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minValidFlag.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp_Type = DateAndTime
_IntervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp = _IntervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 147, 1, 6),
    _IntervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1dayTable_Object = MibTable
intervalFarEndPhysPerfOpticalOutputPwr1dayTable = _IntervalFarEndPhysPerfOpticalOutputPwr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148)
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayTable.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1dayEntry_Object = MibTableRow
intervalFarEndPhysPerfOpticalOutputPwr1dayEntry = _IntervalFarEndPhysPerfOpticalOutputPwr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148, 1)
)
intervalFarEndPhysPerfOpticalOutputPwr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalOutputPwr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayEntry.setStatus("current")


class _IntervalFarEndPhysPerfOpticalOutputPwr1dayNumber_Type(Integer32):
    """Custom type intervalFarEndPhysPerfOpticalOutputPwr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalFarEndPhysPerfOpticalOutputPwr1dayNumber_Type.__name__ = "Integer32"
_IntervalFarEndPhysPerfOpticalOutputPwr1dayNumber_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1dayNumber = _IntervalFarEndPhysPerfOpticalOutputPwr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148, 1, 1),
    _IntervalFarEndPhysPerfOpticalOutputPwr1dayNumber_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayNumber.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1dayLow_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr1dayLow_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1dayLow = _IntervalFarEndPhysPerfOpticalOutputPwr1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148, 1, 2),
    _IntervalFarEndPhysPerfOpticalOutputPwr1dayLow_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayLow.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr1dayMean_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr1dayMean_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1dayMean = _IntervalFarEndPhysPerfOpticalOutputPwr1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148, 1, 3),
    _IntervalFarEndPhysPerfOpticalOutputPwr1dayMean_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayMean.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr1dayHigh_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr1dayHigh_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1dayHigh = _IntervalFarEndPhysPerfOpticalOutputPwr1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148, 1, 4),
    _IntervalFarEndPhysPerfOpticalOutputPwr1dayHigh_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayHigh.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag_Type = TruthValue
_IntervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag = _IntervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148, 1, 5),
    _IntervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp_Type = DateAndTime
_IntervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp = _IntervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 148, 1, 6),
    _IntervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1weekTable_Object = MibTable
intervalFarEndPhysPerfOpticalOutputPwr1weekTable = _IntervalFarEndPhysPerfOpticalOutputPwr1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149)
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekTable.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1weekEntry_Object = MibTableRow
intervalFarEndPhysPerfOpticalOutputPwr1weekEntry = _IntervalFarEndPhysPerfOpticalOutputPwr1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149, 1)
)
intervalFarEndPhysPerfOpticalOutputPwr1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOpticalOutputPwr1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekEntry.setStatus("current")


class _IntervalFarEndPhysPerfOpticalOutputPwr1weekNumber_Type(Integer32):
    """Custom type intervalFarEndPhysPerfOpticalOutputPwr1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalFarEndPhysPerfOpticalOutputPwr1weekNumber_Type.__name__ = "Integer32"
_IntervalFarEndPhysPerfOpticalOutputPwr1weekNumber_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1weekNumber = _IntervalFarEndPhysPerfOpticalOutputPwr1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149, 1, 1),
    _IntervalFarEndPhysPerfOpticalOutputPwr1weekNumber_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekNumber.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1weekLow_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr1weekLow_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1weekLow = _IntervalFarEndPhysPerfOpticalOutputPwr1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149, 1, 2),
    _IntervalFarEndPhysPerfOpticalOutputPwr1weekLow_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekLow.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr1weekMean_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr1weekMean_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1weekMean = _IntervalFarEndPhysPerfOpticalOutputPwr1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149, 1, 3),
    _IntervalFarEndPhysPerfOpticalOutputPwr1weekMean_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekMean.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr1weekHigh_Type = Integer32
_IntervalFarEndPhysPerfOpticalOutputPwr1weekHigh_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1weekHigh = _IntervalFarEndPhysPerfOpticalOutputPwr1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149, 1, 4),
    _IntervalFarEndPhysPerfOpticalOutputPwr1weekHigh_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekHigh.setUnits("0.1 dBm")
_IntervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag_Type = TruthValue
_IntervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag = _IntervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149, 1, 5),
    _IntervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag.setStatus("current")
_IntervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp_Type = DateAndTime
_IntervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp_Object = MibTableColumn
intervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp = _IntervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 149, 1, 6),
    _IntervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp_Type()
)
intervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp.setStatus("current")
_IntervalLatency15minTable_Object = MibTable
intervalLatency15minTable = _IntervalLatency15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150)
)
if mibBuilder.loadTexts:
    intervalLatency15minTable.setStatus("current")
_IntervalLatency15minEntry_Object = MibTableRow
intervalLatency15minEntry = _IntervalLatency15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150, 1)
)
intervalLatency15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalLatency15minNumber"),
)
if mibBuilder.loadTexts:
    intervalLatency15minEntry.setStatus("current")


class _IntervalLatency15minNumber_Type(Integer32):
    """Custom type intervalLatency15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalLatency15minNumber_Type.__name__ = "Integer32"
_IntervalLatency15minNumber_Object = MibTableColumn
intervalLatency15minNumber = _IntervalLatency15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150, 1, 1),
    _IntervalLatency15minNumber_Type()
)
intervalLatency15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalLatency15minNumber.setStatus("current")
_IntervalLatency15minLow_Type = Unsigned32
_IntervalLatency15minLow_Object = MibTableColumn
intervalLatency15minLow = _IntervalLatency15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150, 1, 2),
    _IntervalLatency15minLow_Type()
)
intervalLatency15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency15minLow.setUnits("0.1 us")
_IntervalLatency15minMean_Type = Unsigned32
_IntervalLatency15minMean_Object = MibTableColumn
intervalLatency15minMean = _IntervalLatency15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150, 1, 3),
    _IntervalLatency15minMean_Type()
)
intervalLatency15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency15minMean.setUnits("0.1 us")
_IntervalLatency15minHigh_Type = Unsigned32
_IntervalLatency15minHigh_Object = MibTableColumn
intervalLatency15minHigh = _IntervalLatency15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150, 1, 4),
    _IntervalLatency15minHigh_Type()
)
intervalLatency15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency15minHigh.setUnits("0.1 us")
_IntervalLatency15minValidFlag_Type = TruthValue
_IntervalLatency15minValidFlag_Object = MibTableColumn
intervalLatency15minValidFlag = _IntervalLatency15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150, 1, 5),
    _IntervalLatency15minValidFlag_Type()
)
intervalLatency15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency15minValidFlag.setStatus("current")
_IntervalLatency15minTimeStamp_Type = DateAndTime
_IntervalLatency15minTimeStamp_Object = MibTableColumn
intervalLatency15minTimeStamp = _IntervalLatency15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 150, 1, 6),
    _IntervalLatency15minTimeStamp_Type()
)
intervalLatency15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency15minTimeStamp.setStatus("current")
_IntervalLatency1dayTable_Object = MibTable
intervalLatency1dayTable = _IntervalLatency1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151)
)
if mibBuilder.loadTexts:
    intervalLatency1dayTable.setStatus("current")
_IntervalLatency1dayEntry_Object = MibTableRow
intervalLatency1dayEntry = _IntervalLatency1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151, 1)
)
intervalLatency1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalLatency1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalLatency1dayEntry.setStatus("current")


class _IntervalLatency1dayNumber_Type(Integer32):
    """Custom type intervalLatency1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalLatency1dayNumber_Type.__name__ = "Integer32"
_IntervalLatency1dayNumber_Object = MibTableColumn
intervalLatency1dayNumber = _IntervalLatency1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151, 1, 1),
    _IntervalLatency1dayNumber_Type()
)
intervalLatency1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalLatency1dayNumber.setStatus("current")
_IntervalLatency1dayLow_Type = Unsigned32
_IntervalLatency1dayLow_Object = MibTableColumn
intervalLatency1dayLow = _IntervalLatency1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151, 1, 2),
    _IntervalLatency1dayLow_Type()
)
intervalLatency1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency1dayLow.setUnits("0.1 us")
_IntervalLatency1dayMean_Type = Unsigned32
_IntervalLatency1dayMean_Object = MibTableColumn
intervalLatency1dayMean = _IntervalLatency1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151, 1, 3),
    _IntervalLatency1dayMean_Type()
)
intervalLatency1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency1dayMean.setUnits("0.1 us")
_IntervalLatency1dayHigh_Type = Unsigned32
_IntervalLatency1dayHigh_Object = MibTableColumn
intervalLatency1dayHigh = _IntervalLatency1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151, 1, 4),
    _IntervalLatency1dayHigh_Type()
)
intervalLatency1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency1dayHigh.setUnits("0.1 us")
_IntervalLatency1dayValidFlag_Type = TruthValue
_IntervalLatency1dayValidFlag_Object = MibTableColumn
intervalLatency1dayValidFlag = _IntervalLatency1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151, 1, 5),
    _IntervalLatency1dayValidFlag_Type()
)
intervalLatency1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1dayValidFlag.setStatus("current")
_IntervalLatency1dayTimeStamp_Type = DateAndTime
_IntervalLatency1dayTimeStamp_Object = MibTableColumn
intervalLatency1dayTimeStamp = _IntervalLatency1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 151, 1, 6),
    _IntervalLatency1dayTimeStamp_Type()
)
intervalLatency1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1dayTimeStamp.setStatus("current")
_IntervalLatency1weekTable_Object = MibTable
intervalLatency1weekTable = _IntervalLatency1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152)
)
if mibBuilder.loadTexts:
    intervalLatency1weekTable.setStatus("current")
_IntervalLatency1weekEntry_Object = MibTableRow
intervalLatency1weekEntry = _IntervalLatency1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152, 1)
)
intervalLatency1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalLatency1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalLatency1weekEntry.setStatus("current")


class _IntervalLatency1weekNumber_Type(Integer32):
    """Custom type intervalLatency1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalLatency1weekNumber_Type.__name__ = "Integer32"
_IntervalLatency1weekNumber_Object = MibTableColumn
intervalLatency1weekNumber = _IntervalLatency1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152, 1, 1),
    _IntervalLatency1weekNumber_Type()
)
intervalLatency1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalLatency1weekNumber.setStatus("current")
_IntervalLatency1weekLow_Type = Unsigned32
_IntervalLatency1weekLow_Object = MibTableColumn
intervalLatency1weekLow = _IntervalLatency1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152, 1, 2),
    _IntervalLatency1weekLow_Type()
)
intervalLatency1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency1weekLow.setUnits("0.1 us")
_IntervalLatency1weekMean_Type = Unsigned32
_IntervalLatency1weekMean_Object = MibTableColumn
intervalLatency1weekMean = _IntervalLatency1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152, 1, 3),
    _IntervalLatency1weekMean_Type()
)
intervalLatency1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency1weekMean.setUnits("0.1 us")
_IntervalLatency1weekHigh_Type = Unsigned32
_IntervalLatency1weekHigh_Object = MibTableColumn
intervalLatency1weekHigh = _IntervalLatency1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152, 1, 4),
    _IntervalLatency1weekHigh_Type()
)
intervalLatency1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalLatency1weekHigh.setUnits("0.1 us")
_IntervalLatency1weekValidFlag_Type = TruthValue
_IntervalLatency1weekValidFlag_Object = MibTableColumn
intervalLatency1weekValidFlag = _IntervalLatency1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152, 1, 5),
    _IntervalLatency1weekValidFlag_Type()
)
intervalLatency1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1weekValidFlag.setStatus("current")
_IntervalLatency1weekTimeStamp_Type = DateAndTime
_IntervalLatency1weekTimeStamp_Object = MibTableColumn
intervalLatency1weekTimeStamp = _IntervalLatency1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 152, 1, 6),
    _IntervalLatency1weekTimeStamp_Type()
)
intervalLatency1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalLatency1weekTimeStamp.setStatus("current")
_IntervalRoundTripDelay15minTable_Object = MibTable
intervalRoundTripDelay15minTable = _IntervalRoundTripDelay15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153)
)
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minTable.setStatus("current")
_IntervalRoundTripDelay15minEntry_Object = MibTableRow
intervalRoundTripDelay15minEntry = _IntervalRoundTripDelay15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153, 1)
)
intervalRoundTripDelay15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalRoundTripDelay15minNumber"),
)
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minEntry.setStatus("current")


class _IntervalRoundTripDelay15minNumber_Type(Integer32):
    """Custom type intervalRoundTripDelay15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalRoundTripDelay15minNumber_Type.__name__ = "Integer32"
_IntervalRoundTripDelay15minNumber_Object = MibTableColumn
intervalRoundTripDelay15minNumber = _IntervalRoundTripDelay15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153, 1, 1),
    _IntervalRoundTripDelay15minNumber_Type()
)
intervalRoundTripDelay15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minNumber.setStatus("current")
_IntervalRoundTripDelay15minLow_Type = Unsigned32
_IntervalRoundTripDelay15minLow_Object = MibTableColumn
intervalRoundTripDelay15minLow = _IntervalRoundTripDelay15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153, 1, 2),
    _IntervalRoundTripDelay15minLow_Type()
)
intervalRoundTripDelay15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minLow.setUnits("ns")
_IntervalRoundTripDelay15minMean_Type = Unsigned32
_IntervalRoundTripDelay15minMean_Object = MibTableColumn
intervalRoundTripDelay15minMean = _IntervalRoundTripDelay15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153, 1, 3),
    _IntervalRoundTripDelay15minMean_Type()
)
intervalRoundTripDelay15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minMean.setUnits("ns")
_IntervalRoundTripDelay15minHigh_Type = Unsigned32
_IntervalRoundTripDelay15minHigh_Object = MibTableColumn
intervalRoundTripDelay15minHigh = _IntervalRoundTripDelay15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153, 1, 4),
    _IntervalRoundTripDelay15minHigh_Type()
)
intervalRoundTripDelay15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minHigh.setUnits("ns")
_IntervalRoundTripDelay15minValidFlag_Type = TruthValue
_IntervalRoundTripDelay15minValidFlag_Object = MibTableColumn
intervalRoundTripDelay15minValidFlag = _IntervalRoundTripDelay15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153, 1, 5),
    _IntervalRoundTripDelay15minValidFlag_Type()
)
intervalRoundTripDelay15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minValidFlag.setStatus("current")
_IntervalRoundTripDelay15minTimeStamp_Type = DateAndTime
_IntervalRoundTripDelay15minTimeStamp_Object = MibTableColumn
intervalRoundTripDelay15minTimeStamp = _IntervalRoundTripDelay15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 153, 1, 6),
    _IntervalRoundTripDelay15minTimeStamp_Type()
)
intervalRoundTripDelay15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay15minTimeStamp.setStatus("current")
_IntervalRoundTripDelay1dayTable_Object = MibTable
intervalRoundTripDelay1dayTable = _IntervalRoundTripDelay1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154)
)
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayTable.setStatus("current")
_IntervalRoundTripDelay1dayEntry_Object = MibTableRow
intervalRoundTripDelay1dayEntry = _IntervalRoundTripDelay1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154, 1)
)
intervalRoundTripDelay1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalRoundTripDelay1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayEntry.setStatus("current")


class _IntervalRoundTripDelay1dayNumber_Type(Integer32):
    """Custom type intervalRoundTripDelay1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalRoundTripDelay1dayNumber_Type.__name__ = "Integer32"
_IntervalRoundTripDelay1dayNumber_Object = MibTableColumn
intervalRoundTripDelay1dayNumber = _IntervalRoundTripDelay1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154, 1, 1),
    _IntervalRoundTripDelay1dayNumber_Type()
)
intervalRoundTripDelay1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayNumber.setStatus("current")
_IntervalRoundTripDelay1dayLow_Type = Unsigned32
_IntervalRoundTripDelay1dayLow_Object = MibTableColumn
intervalRoundTripDelay1dayLow = _IntervalRoundTripDelay1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154, 1, 2),
    _IntervalRoundTripDelay1dayLow_Type()
)
intervalRoundTripDelay1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayLow.setUnits("ns")
_IntervalRoundTripDelay1dayMean_Type = Unsigned32
_IntervalRoundTripDelay1dayMean_Object = MibTableColumn
intervalRoundTripDelay1dayMean = _IntervalRoundTripDelay1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154, 1, 3),
    _IntervalRoundTripDelay1dayMean_Type()
)
intervalRoundTripDelay1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayMean.setUnits("ns")
_IntervalRoundTripDelay1dayHigh_Type = Unsigned32
_IntervalRoundTripDelay1dayHigh_Object = MibTableColumn
intervalRoundTripDelay1dayHigh = _IntervalRoundTripDelay1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154, 1, 4),
    _IntervalRoundTripDelay1dayHigh_Type()
)
intervalRoundTripDelay1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayHigh.setUnits("ns")
_IntervalRoundTripDelay1dayValidFlag_Type = TruthValue
_IntervalRoundTripDelay1dayValidFlag_Object = MibTableColumn
intervalRoundTripDelay1dayValidFlag = _IntervalRoundTripDelay1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154, 1, 5),
    _IntervalRoundTripDelay1dayValidFlag_Type()
)
intervalRoundTripDelay1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayValidFlag.setStatus("current")
_IntervalRoundTripDelay1dayTimeStamp_Type = DateAndTime
_IntervalRoundTripDelay1dayTimeStamp_Object = MibTableColumn
intervalRoundTripDelay1dayTimeStamp = _IntervalRoundTripDelay1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 154, 1, 6),
    _IntervalRoundTripDelay1dayTimeStamp_Type()
)
intervalRoundTripDelay1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1dayTimeStamp.setStatus("current")
_IntervalRoundTripDelay1weekTable_Object = MibTable
intervalRoundTripDelay1weekTable = _IntervalRoundTripDelay1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155)
)
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekTable.setStatus("current")
_IntervalRoundTripDelay1weekEntry_Object = MibTableRow
intervalRoundTripDelay1weekEntry = _IntervalRoundTripDelay1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155, 1)
)
intervalRoundTripDelay1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalRoundTripDelay1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekEntry.setStatus("current")


class _IntervalRoundTripDelay1weekNumber_Type(Integer32):
    """Custom type intervalRoundTripDelay1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalRoundTripDelay1weekNumber_Type.__name__ = "Integer32"
_IntervalRoundTripDelay1weekNumber_Object = MibTableColumn
intervalRoundTripDelay1weekNumber = _IntervalRoundTripDelay1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155, 1, 1),
    _IntervalRoundTripDelay1weekNumber_Type()
)
intervalRoundTripDelay1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekNumber.setStatus("current")
_IntervalRoundTripDelay1weekLow_Type = Unsigned32
_IntervalRoundTripDelay1weekLow_Object = MibTableColumn
intervalRoundTripDelay1weekLow = _IntervalRoundTripDelay1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155, 1, 2),
    _IntervalRoundTripDelay1weekLow_Type()
)
intervalRoundTripDelay1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekLow.setUnits("ns")
_IntervalRoundTripDelay1weekMean_Type = Unsigned32
_IntervalRoundTripDelay1weekMean_Object = MibTableColumn
intervalRoundTripDelay1weekMean = _IntervalRoundTripDelay1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155, 1, 3),
    _IntervalRoundTripDelay1weekMean_Type()
)
intervalRoundTripDelay1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekMean.setUnits("ns")
_IntervalRoundTripDelay1weekHigh_Type = Unsigned32
_IntervalRoundTripDelay1weekHigh_Object = MibTableColumn
intervalRoundTripDelay1weekHigh = _IntervalRoundTripDelay1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155, 1, 4),
    _IntervalRoundTripDelay1weekHigh_Type()
)
intervalRoundTripDelay1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekHigh.setUnits("ns")
_IntervalRoundTripDelay1weekValidFlag_Type = TruthValue
_IntervalRoundTripDelay1weekValidFlag_Object = MibTableColumn
intervalRoundTripDelay1weekValidFlag = _IntervalRoundTripDelay1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155, 1, 5),
    _IntervalRoundTripDelay1weekValidFlag_Type()
)
intervalRoundTripDelay1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekValidFlag.setStatus("current")
_IntervalRoundTripDelay1weekTimeStamp_Type = DateAndTime
_IntervalRoundTripDelay1weekTimeStamp_Object = MibTableColumn
intervalRoundTripDelay1weekTimeStamp = _IntervalRoundTripDelay1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 155, 1, 6),
    _IntervalRoundTripDelay1weekTimeStamp_Type()
)
intervalRoundTripDelay1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalRoundTripDelay1weekTimeStamp.setStatus("current")
_CurrentPmSnapshotTable_Object = MibTable
currentPmSnapshotTable = _CurrentPmSnapshotTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156)
)
if mibBuilder.loadTexts:
    currentPmSnapshotTable.setStatus("current")
_CurrentPmSnapshotEntry_Object = MibTableRow
currentPmSnapshotEntry = _CurrentPmSnapshotEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1)
)
currentPmSnapshotEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPmSnapshotEntry.setStatus("current")
_CurrentPmSnapshotOutputPower_Type = Integer32
_CurrentPmSnapshotOutputPower_Object = MibTableColumn
currentPmSnapshotOutputPower = _CurrentPmSnapshotOutputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 1),
    _CurrentPmSnapshotOutputPower_Type()
)
currentPmSnapshotOutputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotOutputPower.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotOutputPower.setUnits("0.1 dBm")
_CurrentPmSnapshotInputPower_Type = Integer32
_CurrentPmSnapshotInputPower_Object = MibTableColumn
currentPmSnapshotInputPower = _CurrentPmSnapshotInputPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 2),
    _CurrentPmSnapshotInputPower_Type()
)
currentPmSnapshotInputPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotInputPower.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotInputPower.setUnits("0.1 dBm")
_CurrentPmSnapshotAttenuation_Type = Integer32
_CurrentPmSnapshotAttenuation_Object = MibTableColumn
currentPmSnapshotAttenuation = _CurrentPmSnapshotAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 3),
    _CurrentPmSnapshotAttenuation_Type()
)
currentPmSnapshotAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotAttenuation.setUnits("0.1 dB")
_CurrentPmSnapshotAttenuationOfVoa_Type = Unsigned32
_CurrentPmSnapshotAttenuationOfVoa_Object = MibTableColumn
currentPmSnapshotAttenuationOfVoa = _CurrentPmSnapshotAttenuationOfVoa_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 4),
    _CurrentPmSnapshotAttenuationOfVoa_Type()
)
currentPmSnapshotAttenuationOfVoa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotAttenuationOfVoa.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotAttenuationOfVoa.setUnits("0.1 dB")
_CurrentPmSnapshotOscGain_Type = Unsigned32
_CurrentPmSnapshotOscGain_Object = MibTableColumn
currentPmSnapshotOscGain = _CurrentPmSnapshotOscGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 5),
    _CurrentPmSnapshotOscGain_Type()
)
currentPmSnapshotOscGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotOscGain.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotOscGain.setUnits("0.1 dB")
_CurrentPmSnapshotBackreflectionPowerReceived_Type = Integer32
_CurrentPmSnapshotBackreflectionPowerReceived_Object = MibTableColumn
currentPmSnapshotBackreflectionPowerReceived = _CurrentPmSnapshotBackreflectionPowerReceived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 6),
    _CurrentPmSnapshotBackreflectionPowerReceived_Type()
)
currentPmSnapshotBackreflectionPowerReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotBackreflectionPowerReceived.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotBackreflectionPowerReceived.setUnits("0.1 dB")
_CurrentPmSnapshotRamanPumpPower_Type = Integer32
_CurrentPmSnapshotRamanPumpPower_Object = MibTableColumn
currentPmSnapshotRamanPumpPower = _CurrentPmSnapshotRamanPumpPower_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 7),
    _CurrentPmSnapshotRamanPumpPower_Type()
)
currentPmSnapshotRamanPumpPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotRamanPumpPower.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotRamanPumpPower.setUnits("0.1 dBm")
_CurrentPmSnapshotOscPowerReceived_Type = Integer32
_CurrentPmSnapshotOscPowerReceived_Object = MibTableColumn
currentPmSnapshotOscPowerReceived = _CurrentPmSnapshotOscPowerReceived_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 8),
    _CurrentPmSnapshotOscPowerReceived_Type()
)
currentPmSnapshotOscPowerReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotOscPowerReceived.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotOscPowerReceived.setUnits("0.1 dBm")
_CurrentPmSnapshotVariableGain_Type = Unsigned32
_CurrentPmSnapshotVariableGain_Object = MibTableColumn
currentPmSnapshotVariableGain = _CurrentPmSnapshotVariableGain_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 9),
    _CurrentPmSnapshotVariableGain_Type()
)
currentPmSnapshotVariableGain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotVariableGain.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotVariableGain.setUnits("0.1 dB")
_CurrentPmSnapshotTxLineAttenuation_Type = Integer32
_CurrentPmSnapshotTxLineAttenuation_Object = MibTableColumn
currentPmSnapshotTxLineAttenuation = _CurrentPmSnapshotTxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 10),
    _CurrentPmSnapshotTxLineAttenuation_Type()
)
currentPmSnapshotTxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotTxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotTxLineAttenuation.setUnits("0.1 dB")
_CurrentPmSnapshotRxLineAttenuation_Type = Integer32
_CurrentPmSnapshotRxLineAttenuation_Object = MibTableColumn
currentPmSnapshotRxLineAttenuation = _CurrentPmSnapshotRxLineAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 156, 1, 11),
    _CurrentPmSnapshotRxLineAttenuation_Type()
)
currentPmSnapshotRxLineAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPmSnapshotRxLineAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    currentPmSnapshotRxLineAttenuation.setUnits("0.1 dB")
_IntervalPmSnapshotTable_Object = MibTable
intervalPmSnapshotTable = _IntervalPmSnapshotTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 157)
)
if mibBuilder.loadTexts:
    intervalPmSnapshotTable.setStatus("current")
_IntervalPmSnapshotEntry_Object = MibTableRow
intervalPmSnapshotEntry = _IntervalPmSnapshotEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 157, 1)
)
intervalPmSnapshotEntry.setIndexNames(
    (0, "FspR7-MIB", "intervalPmSnapshotParameter"),
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPmSnapshotNumber"),
)
if mibBuilder.loadTexts:
    intervalPmSnapshotEntry.setStatus("current")
_IntervalPmSnapshotParameter_Type = FspR7PmSnapshotParameterTypes
_IntervalPmSnapshotParameter_Object = MibTableColumn
intervalPmSnapshotParameter = _IntervalPmSnapshotParameter_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 157, 1, 1),
    _IntervalPmSnapshotParameter_Type()
)
intervalPmSnapshotParameter.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPmSnapshotParameter.setStatus("current")


class _IntervalPmSnapshotNumber_Type(Unsigned32):
    """Custom type intervalPmSnapshotNumber based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_IntervalPmSnapshotNumber_Type.__name__ = "Unsigned32"
_IntervalPmSnapshotNumber_Object = MibTableColumn
intervalPmSnapshotNumber = _IntervalPmSnapshotNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 157, 1, 2),
    _IntervalPmSnapshotNumber_Type()
)
intervalPmSnapshotNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPmSnapshotNumber.setStatus("current")
_IntervalPmSnapshotValue_Type = Integer32
_IntervalPmSnapshotValue_Object = MibTableColumn
intervalPmSnapshotValue = _IntervalPmSnapshotValue_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 157, 1, 3),
    _IntervalPmSnapshotValue_Type()
)
intervalPmSnapshotValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPmSnapshotValue.setStatus("current")
if mibBuilder.loadTexts:
    intervalPmSnapshotValue.setUnits("0.1")
_IntervalPmSnapshotValidFlag_Type = TruthValue
_IntervalPmSnapshotValidFlag_Object = MibTableColumn
intervalPmSnapshotValidFlag = _IntervalPmSnapshotValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 157, 1, 4),
    _IntervalPmSnapshotValidFlag_Type()
)
intervalPmSnapshotValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPmSnapshotValidFlag.setStatus("current")
_IntervalPmSnapshotTimeStamp_Type = DateAndTime
_IntervalPmSnapshotTimeStamp_Object = MibTableColumn
intervalPmSnapshotTimeStamp = _IntervalPmSnapshotTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 157, 1, 5),
    _IntervalPmSnapshotTimeStamp_Type()
)
intervalPmSnapshotTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPmSnapshotTimeStamp.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr15minTable_Object = MibTable
intervalPhysPerfOscOpticalOutputPwr15minTable = _IntervalPhysPerfOscOpticalOutputPwr15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minTable.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr15minEntry_Object = MibTableRow
intervalPhysPerfOscOpticalOutputPwr15minEntry = _IntervalPhysPerfOscOpticalOutputPwr15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158, 1)
)
intervalPhysPerfOscOpticalOutputPwr15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOscOpticalOutputPwr15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minEntry.setStatus("current")


class _IntervalPhysPerfOscOpticalOutputPwr15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfOscOpticalOutputPwr15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfOscOpticalOutputPwr15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOscOpticalOutputPwr15minNumber_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr15minNumber = _IntervalPhysPerfOscOpticalOutputPwr15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158, 1, 1),
    _IntervalPhysPerfOscOpticalOutputPwr15minNumber_Type()
)
intervalPhysPerfOscOpticalOutputPwr15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minNumber.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr15minLow_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr15minLow_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr15minLow = _IntervalPhysPerfOscOpticalOutputPwr15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158, 1, 2),
    _IntervalPhysPerfOscOpticalOutputPwr15minLow_Type()
)
intervalPhysPerfOscOpticalOutputPwr15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minLow.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr15minMean_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr15minMean_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr15minMean = _IntervalPhysPerfOscOpticalOutputPwr15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158, 1, 3),
    _IntervalPhysPerfOscOpticalOutputPwr15minMean_Type()
)
intervalPhysPerfOscOpticalOutputPwr15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minMean.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr15minHigh_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr15minHigh_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr15minHigh = _IntervalPhysPerfOscOpticalOutputPwr15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158, 1, 4),
    _IntervalPhysPerfOscOpticalOutputPwr15minHigh_Type()
)
intervalPhysPerfOscOpticalOutputPwr15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr15minValidFlag_Type = TruthValue
_IntervalPhysPerfOscOpticalOutputPwr15minValidFlag_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr15minValidFlag = _IntervalPhysPerfOscOpticalOutputPwr15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158, 1, 5),
    _IntervalPhysPerfOscOpticalOutputPwr15minValidFlag_Type()
)
intervalPhysPerfOscOpticalOutputPwr15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minValidFlag.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfOscOpticalOutputPwr15minTimeStamp_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr15minTimeStamp = _IntervalPhysPerfOscOpticalOutputPwr15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 158, 1, 6),
    _IntervalPhysPerfOscOpticalOutputPwr15minTimeStamp_Type()
)
intervalPhysPerfOscOpticalOutputPwr15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr15minTimeStamp.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1dayTable_Object = MibTable
intervalPhysPerfOscOpticalOutputPwr1dayTable = _IntervalPhysPerfOscOpticalOutputPwr1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayTable.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1dayEntry_Object = MibTableRow
intervalPhysPerfOscOpticalOutputPwr1dayEntry = _IntervalPhysPerfOscOpticalOutputPwr1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159, 1)
)
intervalPhysPerfOscOpticalOutputPwr1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOscOpticalOutputPwr1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayEntry.setStatus("current")


class _IntervalPhysPerfOscOpticalOutputPwr1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfOscOpticalOutputPwr1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfOscOpticalOutputPwr1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOscOpticalOutputPwr1dayNumber_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1dayNumber = _IntervalPhysPerfOscOpticalOutputPwr1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159, 1, 1),
    _IntervalPhysPerfOscOpticalOutputPwr1dayNumber_Type()
)
intervalPhysPerfOscOpticalOutputPwr1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayNumber.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1dayLow_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr1dayLow_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1dayLow = _IntervalPhysPerfOscOpticalOutputPwr1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159, 1, 2),
    _IntervalPhysPerfOscOpticalOutputPwr1dayLow_Type()
)
intervalPhysPerfOscOpticalOutputPwr1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayLow.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr1dayMean_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr1dayMean_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1dayMean = _IntervalPhysPerfOscOpticalOutputPwr1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159, 1, 3),
    _IntervalPhysPerfOscOpticalOutputPwr1dayMean_Type()
)
intervalPhysPerfOscOpticalOutputPwr1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayMean.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr1dayHigh_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr1dayHigh_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1dayHigh = _IntervalPhysPerfOscOpticalOutputPwr1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159, 1, 4),
    _IntervalPhysPerfOscOpticalOutputPwr1dayHigh_Type()
)
intervalPhysPerfOscOpticalOutputPwr1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr1dayValidFlag_Type = TruthValue
_IntervalPhysPerfOscOpticalOutputPwr1dayValidFlag_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1dayValidFlag = _IntervalPhysPerfOscOpticalOutputPwr1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159, 1, 5),
    _IntervalPhysPerfOscOpticalOutputPwr1dayValidFlag_Type()
)
intervalPhysPerfOscOpticalOutputPwr1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayValidFlag.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfOscOpticalOutputPwr1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1dayTimeStamp = _IntervalPhysPerfOscOpticalOutputPwr1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 159, 1, 6),
    _IntervalPhysPerfOscOpticalOutputPwr1dayTimeStamp_Type()
)
intervalPhysPerfOscOpticalOutputPwr1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1dayTimeStamp.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1weekTable_Object = MibTable
intervalPhysPerfOscOpticalOutputPwr1weekTable = _IntervalPhysPerfOscOpticalOutputPwr1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160)
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekTable.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1weekEntry_Object = MibTableRow
intervalPhysPerfOscOpticalOutputPwr1weekEntry = _IntervalPhysPerfOscOpticalOutputPwr1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160, 1)
)
intervalPhysPerfOscOpticalOutputPwr1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfOscOpticalOutputPwr1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekEntry.setStatus("current")


class _IntervalPhysPerfOscOpticalOutputPwr1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfOscOpticalOutputPwr1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfOscOpticalOutputPwr1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfOscOpticalOutputPwr1weekNumber_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1weekNumber = _IntervalPhysPerfOscOpticalOutputPwr1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160, 1, 1),
    _IntervalPhysPerfOscOpticalOutputPwr1weekNumber_Type()
)
intervalPhysPerfOscOpticalOutputPwr1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekNumber.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1weekLow_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr1weekLow_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1weekLow = _IntervalPhysPerfOscOpticalOutputPwr1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160, 1, 2),
    _IntervalPhysPerfOscOpticalOutputPwr1weekLow_Type()
)
intervalPhysPerfOscOpticalOutputPwr1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekLow.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr1weekMean_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr1weekMean_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1weekMean = _IntervalPhysPerfOscOpticalOutputPwr1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160, 1, 3),
    _IntervalPhysPerfOscOpticalOutputPwr1weekMean_Type()
)
intervalPhysPerfOscOpticalOutputPwr1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekMean.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr1weekHigh_Type = Integer32
_IntervalPhysPerfOscOpticalOutputPwr1weekHigh_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1weekHigh = _IntervalPhysPerfOscOpticalOutputPwr1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160, 1, 4),
    _IntervalPhysPerfOscOpticalOutputPwr1weekHigh_Type()
)
intervalPhysPerfOscOpticalOutputPwr1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekHigh.setUnits("0.1 dBm")
_IntervalPhysPerfOscOpticalOutputPwr1weekValidFlag_Type = TruthValue
_IntervalPhysPerfOscOpticalOutputPwr1weekValidFlag_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1weekValidFlag = _IntervalPhysPerfOscOpticalOutputPwr1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160, 1, 5),
    _IntervalPhysPerfOscOpticalOutputPwr1weekValidFlag_Type()
)
intervalPhysPerfOscOpticalOutputPwr1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekValidFlag.setStatus("current")
_IntervalPhysPerfOscOpticalOutputPwr1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfOscOpticalOutputPwr1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfOscOpticalOutputPwr1weekTimeStamp = _IntervalPhysPerfOscOpticalOutputPwr1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 160, 1, 6),
    _IntervalPhysPerfOscOpticalOutputPwr1weekTimeStamp_Type()
)
intervalPhysPerfOscOpticalOutputPwr1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfOscOpticalOutputPwr1weekTimeStamp.setStatus("current")
_CurrentPhysConvTxHighSpeed15minTable_Object = MibTable
currentPhysConvTxHighSpeed15minTable = _CurrentPhysConvTxHighSpeed15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 161)
)
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed15minTable.setStatus("current")
_CurrentPhysConvTxHighSpeed15minEntry_Object = MibTableRow
currentPhysConvTxHighSpeed15minEntry = _CurrentPhysConvTxHighSpeed15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 161, 1)
)
currentPhysConvTxHighSpeed15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed15minEntry.setStatus("current")
_CurrentPhysConvTxHighSpeed15minESTX_Type = Unsigned32
_CurrentPhysConvTxHighSpeed15minESTX_Object = MibTableColumn
currentPhysConvTxHighSpeed15minESTX = _CurrentPhysConvTxHighSpeed15minESTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 161, 1, 1),
    _CurrentPhysConvTxHighSpeed15minESTX_Type()
)
currentPhysConvTxHighSpeed15minESTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed15minESTX.setStatus("current")
_CurrentPhysConvTxHighSpeed15minCVTX_Type = Counter64String
_CurrentPhysConvTxHighSpeed15minCVTX_Object = MibTableColumn
currentPhysConvTxHighSpeed15minCVTX = _CurrentPhysConvTxHighSpeed15minCVTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 161, 1, 2),
    _CurrentPhysConvTxHighSpeed15minCVTX_Type()
)
currentPhysConvTxHighSpeed15minCVTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed15minCVTX.setStatus("current")
_CurrentPhysConvTxHighSpeed15minSETX_Type = Unsigned32
_CurrentPhysConvTxHighSpeed15minSETX_Object = MibTableColumn
currentPhysConvTxHighSpeed15minSETX = _CurrentPhysConvTxHighSpeed15minSETX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 161, 1, 3),
    _CurrentPhysConvTxHighSpeed15minSETX_Type()
)
currentPhysConvTxHighSpeed15minSETX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed15minSETX.setStatus("current")


class _CurrentPhysConvTxHighSpeed15minElapsedTime_Type(Integer32):
    """Custom type currentPhysConvTxHighSpeed15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConvTxHighSpeed15minElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConvTxHighSpeed15minElapsedTime_Object = MibTableColumn
currentPhysConvTxHighSpeed15minElapsedTime = _CurrentPhysConvTxHighSpeed15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 161, 1, 4),
    _CurrentPhysConvTxHighSpeed15minElapsedTime_Type()
)
currentPhysConvTxHighSpeed15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed15minElapsedTime.setStatus("current")
_CurrentPhysConvTxHighSpeed1dayTable_Object = MibTable
currentPhysConvTxHighSpeed1dayTable = _CurrentPhysConvTxHighSpeed1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 162)
)
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed1dayTable.setStatus("current")
_CurrentPhysConvTxHighSpeed1dayEntry_Object = MibTableRow
currentPhysConvTxHighSpeed1dayEntry = _CurrentPhysConvTxHighSpeed1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 162, 1)
)
currentPhysConvTxHighSpeed1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed1dayEntry.setStatus("current")
_CurrentPhysConvTxHighSpeed1dayESTX_Type = Unsigned32
_CurrentPhysConvTxHighSpeed1dayESTX_Object = MibTableColumn
currentPhysConvTxHighSpeed1dayESTX = _CurrentPhysConvTxHighSpeed1dayESTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 162, 1, 1),
    _CurrentPhysConvTxHighSpeed1dayESTX_Type()
)
currentPhysConvTxHighSpeed1dayESTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed1dayESTX.setStatus("current")
_CurrentPhysConvTxHighSpeed1dayCVTX_Type = Counter64String
_CurrentPhysConvTxHighSpeed1dayCVTX_Object = MibTableColumn
currentPhysConvTxHighSpeed1dayCVTX = _CurrentPhysConvTxHighSpeed1dayCVTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 162, 1, 2),
    _CurrentPhysConvTxHighSpeed1dayCVTX_Type()
)
currentPhysConvTxHighSpeed1dayCVTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed1dayCVTX.setStatus("current")
_CurrentPhysConvTxHighSpeed1daySETX_Type = Unsigned32
_CurrentPhysConvTxHighSpeed1daySETX_Object = MibTableColumn
currentPhysConvTxHighSpeed1daySETX = _CurrentPhysConvTxHighSpeed1daySETX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 162, 1, 3),
    _CurrentPhysConvTxHighSpeed1daySETX_Type()
)
currentPhysConvTxHighSpeed1daySETX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed1daySETX.setStatus("current")


class _CurrentPhysConvTxHighSpeed1dayElapsedTime_Type(Integer32):
    """Custom type currentPhysConvTxHighSpeed1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentPhysConvTxHighSpeed1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentPhysConvTxHighSpeed1dayElapsedTime_Object = MibTableColumn
currentPhysConvTxHighSpeed1dayElapsedTime = _CurrentPhysConvTxHighSpeed1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 162, 1, 4),
    _CurrentPhysConvTxHighSpeed1dayElapsedTime_Type()
)
currentPhysConvTxHighSpeed1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentPhysConvTxHighSpeed1dayElapsedTime.setStatus("current")
_IntervalPhysConvTxHighSpeed15minTable_Object = MibTable
intervalPhysConvTxHighSpeed15minTable = _IntervalPhysConvTxHighSpeed15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163)
)
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minTable.setStatus("current")
_IntervalPhysConvTxHighSpeed15minEntry_Object = MibTableRow
intervalPhysConvTxHighSpeed15minEntry = _IntervalPhysConvTxHighSpeed15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163, 1)
)
intervalPhysConvTxHighSpeed15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConvTxHighSpeed15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minEntry.setStatus("current")


class _IntervalPhysConvTxHighSpeed15minNumber_Type(Integer32):
    """Custom type intervalPhysConvTxHighSpeed15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysConvTxHighSpeed15minNumber_Type.__name__ = "Integer32"
_IntervalPhysConvTxHighSpeed15minNumber_Object = MibTableColumn
intervalPhysConvTxHighSpeed15minNumber = _IntervalPhysConvTxHighSpeed15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163, 1, 1),
    _IntervalPhysConvTxHighSpeed15minNumber_Type()
)
intervalPhysConvTxHighSpeed15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minNumber.setStatus("current")
_IntervalPhysConvTxHighSpeed15minESTX_Type = Unsigned32
_IntervalPhysConvTxHighSpeed15minESTX_Object = MibTableColumn
intervalPhysConvTxHighSpeed15minESTX = _IntervalPhysConvTxHighSpeed15minESTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163, 1, 2),
    _IntervalPhysConvTxHighSpeed15minESTX_Type()
)
intervalPhysConvTxHighSpeed15minESTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minESTX.setStatus("current")
_IntervalPhysConvTxHighSpeed15minCVTX_Type = Counter64String
_IntervalPhysConvTxHighSpeed15minCVTX_Object = MibTableColumn
intervalPhysConvTxHighSpeed15minCVTX = _IntervalPhysConvTxHighSpeed15minCVTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163, 1, 3),
    _IntervalPhysConvTxHighSpeed15minCVTX_Type()
)
intervalPhysConvTxHighSpeed15minCVTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minCVTX.setStatus("current")
_IntervalPhysConvTxHighSpeed15minSETX_Type = Unsigned32
_IntervalPhysConvTxHighSpeed15minSETX_Object = MibTableColumn
intervalPhysConvTxHighSpeed15minSETX = _IntervalPhysConvTxHighSpeed15minSETX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163, 1, 4),
    _IntervalPhysConvTxHighSpeed15minSETX_Type()
)
intervalPhysConvTxHighSpeed15minSETX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minSETX.setStatus("current")
_IntervalPhysConvTxHighSpeed15minValidFlag_Type = TruthValue
_IntervalPhysConvTxHighSpeed15minValidFlag_Object = MibTableColumn
intervalPhysConvTxHighSpeed15minValidFlag = _IntervalPhysConvTxHighSpeed15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163, 1, 5),
    _IntervalPhysConvTxHighSpeed15minValidFlag_Type()
)
intervalPhysConvTxHighSpeed15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minValidFlag.setStatus("current")
_IntervalPhysConvTxHighSpeed15minTimeStamp_Type = DateAndTime
_IntervalPhysConvTxHighSpeed15minTimeStamp_Object = MibTableColumn
intervalPhysConvTxHighSpeed15minTimeStamp = _IntervalPhysConvTxHighSpeed15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 163, 1, 6),
    _IntervalPhysConvTxHighSpeed15minTimeStamp_Type()
)
intervalPhysConvTxHighSpeed15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed15minTimeStamp.setStatus("current")
_IntervalPhysConvTxHighSpeed1dayTable_Object = MibTable
intervalPhysConvTxHighSpeed1dayTable = _IntervalPhysConvTxHighSpeed1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164)
)
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1dayTable.setStatus("current")
_IntervalPhysConvTxHighSpeed1dayEntry_Object = MibTableRow
intervalPhysConvTxHighSpeed1dayEntry = _IntervalPhysConvTxHighSpeed1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164, 1)
)
intervalPhysConvTxHighSpeed1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysConvTxHighSpeed1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1dayEntry.setStatus("current")


class _IntervalPhysConvTxHighSpeed1dayNumber_Type(Integer32):
    """Custom type intervalPhysConvTxHighSpeed1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysConvTxHighSpeed1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysConvTxHighSpeed1dayNumber_Object = MibTableColumn
intervalPhysConvTxHighSpeed1dayNumber = _IntervalPhysConvTxHighSpeed1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164, 1, 1),
    _IntervalPhysConvTxHighSpeed1dayNumber_Type()
)
intervalPhysConvTxHighSpeed1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1dayNumber.setStatus("current")
_IntervalPhysConvTxHighSpeed1dayESTX_Type = Unsigned32
_IntervalPhysConvTxHighSpeed1dayESTX_Object = MibTableColumn
intervalPhysConvTxHighSpeed1dayESTX = _IntervalPhysConvTxHighSpeed1dayESTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164, 1, 2),
    _IntervalPhysConvTxHighSpeed1dayESTX_Type()
)
intervalPhysConvTxHighSpeed1dayESTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1dayESTX.setStatus("current")
_IntervalPhysConvTxHighSpeed1dayCVTX_Type = Counter64String
_IntervalPhysConvTxHighSpeed1dayCVTX_Object = MibTableColumn
intervalPhysConvTxHighSpeed1dayCVTX = _IntervalPhysConvTxHighSpeed1dayCVTX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164, 1, 3),
    _IntervalPhysConvTxHighSpeed1dayCVTX_Type()
)
intervalPhysConvTxHighSpeed1dayCVTX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1dayCVTX.setStatus("current")
_IntervalPhysConvTxHighSpeed1daySETX_Type = Unsigned32
_IntervalPhysConvTxHighSpeed1daySETX_Object = MibTableColumn
intervalPhysConvTxHighSpeed1daySETX = _IntervalPhysConvTxHighSpeed1daySETX_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164, 1, 4),
    _IntervalPhysConvTxHighSpeed1daySETX_Type()
)
intervalPhysConvTxHighSpeed1daySETX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1daySETX.setStatus("current")
_IntervalPhysConvTxHighSpeed1dayValidFlag_Type = TruthValue
_IntervalPhysConvTxHighSpeed1dayValidFlag_Object = MibTableColumn
intervalPhysConvTxHighSpeed1dayValidFlag = _IntervalPhysConvTxHighSpeed1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164, 1, 5),
    _IntervalPhysConvTxHighSpeed1dayValidFlag_Type()
)
intervalPhysConvTxHighSpeed1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1dayValidFlag.setStatus("current")
_IntervalPhysConvTxHighSpeed1dayTimeStamp_Type = DateAndTime
_IntervalPhysConvTxHighSpeed1dayTimeStamp_Object = MibTableColumn
intervalPhysConvTxHighSpeed1dayTimeStamp = _IntervalPhysConvTxHighSpeed1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 164, 1, 6),
    _IntervalPhysConvTxHighSpeed1dayTimeStamp_Type()
)
intervalPhysConvTxHighSpeed1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysConvTxHighSpeed1dayTimeStamp.setStatus("current")
_IntervalPhysPerfDiffGrDelay15minTable_Object = MibTable
intervalPhysPerfDiffGrDelay15minTable = _IntervalPhysPerfDiffGrDelay15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165)
)
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minTable.setStatus("current")
_IntervalPhysPerfDiffGrDelay15minEntry_Object = MibTableRow
intervalPhysPerfDiffGrDelay15minEntry = _IntervalPhysPerfDiffGrDelay15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165, 1)
)
intervalPhysPerfDiffGrDelay15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfDiffGrDelay15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minEntry.setStatus("current")


class _IntervalPhysPerfDiffGrDelay15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfDiffGrDelay15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfDiffGrDelay15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfDiffGrDelay15minNumber_Object = MibTableColumn
intervalPhysPerfDiffGrDelay15minNumber = _IntervalPhysPerfDiffGrDelay15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165, 1, 1),
    _IntervalPhysPerfDiffGrDelay15minNumber_Type()
)
intervalPhysPerfDiffGrDelay15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minNumber.setStatus("current")
_IntervalPhysPerfDiffGrDelay15minLow_Type = Integer32
_IntervalPhysPerfDiffGrDelay15minLow_Object = MibTableColumn
intervalPhysPerfDiffGrDelay15minLow = _IntervalPhysPerfDiffGrDelay15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165, 1, 2),
    _IntervalPhysPerfDiffGrDelay15minLow_Type()
)
intervalPhysPerfDiffGrDelay15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minLow.setUnits("ps")
_IntervalPhysPerfDiffGrDelay15minMean_Type = Integer32
_IntervalPhysPerfDiffGrDelay15minMean_Object = MibTableColumn
intervalPhysPerfDiffGrDelay15minMean = _IntervalPhysPerfDiffGrDelay15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165, 1, 3),
    _IntervalPhysPerfDiffGrDelay15minMean_Type()
)
intervalPhysPerfDiffGrDelay15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minMean.setUnits("ps")
_IntervalPhysPerfDiffGrDelay15minHigh_Type = Integer32
_IntervalPhysPerfDiffGrDelay15minHigh_Object = MibTableColumn
intervalPhysPerfDiffGrDelay15minHigh = _IntervalPhysPerfDiffGrDelay15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165, 1, 4),
    _IntervalPhysPerfDiffGrDelay15minHigh_Type()
)
intervalPhysPerfDiffGrDelay15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minHigh.setUnits("ps")
_IntervalPhysPerfDiffGrDelay15minValidFlag_Type = TruthValue
_IntervalPhysPerfDiffGrDelay15minValidFlag_Object = MibTableColumn
intervalPhysPerfDiffGrDelay15minValidFlag = _IntervalPhysPerfDiffGrDelay15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165, 1, 5),
    _IntervalPhysPerfDiffGrDelay15minValidFlag_Type()
)
intervalPhysPerfDiffGrDelay15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minValidFlag.setStatus("current")
_IntervalPhysPerfDiffGrDelay15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfDiffGrDelay15minTimeStamp_Object = MibTableColumn
intervalPhysPerfDiffGrDelay15minTimeStamp = _IntervalPhysPerfDiffGrDelay15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 165, 1, 6),
    _IntervalPhysPerfDiffGrDelay15minTimeStamp_Type()
)
intervalPhysPerfDiffGrDelay15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay15minTimeStamp.setStatus("current")
_IntervalPhysPerfDiffGrDelay1dayTable_Object = MibTable
intervalPhysPerfDiffGrDelay1dayTable = _IntervalPhysPerfDiffGrDelay1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166)
)
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayTable.setStatus("current")
_IntervalPhysPerfDiffGrDelay1dayEntry_Object = MibTableRow
intervalPhysPerfDiffGrDelay1dayEntry = _IntervalPhysPerfDiffGrDelay1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166, 1)
)
intervalPhysPerfDiffGrDelay1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfDiffGrDelay1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayEntry.setStatus("current")


class _IntervalPhysPerfDiffGrDelay1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfDiffGrDelay1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfDiffGrDelay1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfDiffGrDelay1dayNumber_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1dayNumber = _IntervalPhysPerfDiffGrDelay1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166, 1, 1),
    _IntervalPhysPerfDiffGrDelay1dayNumber_Type()
)
intervalPhysPerfDiffGrDelay1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayNumber.setStatus("current")
_IntervalPhysPerfDiffGrDelay1dayLow_Type = Integer32
_IntervalPhysPerfDiffGrDelay1dayLow_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1dayLow = _IntervalPhysPerfDiffGrDelay1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166, 1, 2),
    _IntervalPhysPerfDiffGrDelay1dayLow_Type()
)
intervalPhysPerfDiffGrDelay1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayLow.setUnits("ps")
_IntervalPhysPerfDiffGrDelay1dayMean_Type = Integer32
_IntervalPhysPerfDiffGrDelay1dayMean_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1dayMean = _IntervalPhysPerfDiffGrDelay1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166, 1, 3),
    _IntervalPhysPerfDiffGrDelay1dayMean_Type()
)
intervalPhysPerfDiffGrDelay1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayMean.setUnits("ps")
_IntervalPhysPerfDiffGrDelay1dayHigh_Type = Integer32
_IntervalPhysPerfDiffGrDelay1dayHigh_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1dayHigh = _IntervalPhysPerfDiffGrDelay1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166, 1, 4),
    _IntervalPhysPerfDiffGrDelay1dayHigh_Type()
)
intervalPhysPerfDiffGrDelay1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayHigh.setUnits("ps")
_IntervalPhysPerfDiffGrDelay1dayValidFlag_Type = TruthValue
_IntervalPhysPerfDiffGrDelay1dayValidFlag_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1dayValidFlag = _IntervalPhysPerfDiffGrDelay1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166, 1, 5),
    _IntervalPhysPerfDiffGrDelay1dayValidFlag_Type()
)
intervalPhysPerfDiffGrDelay1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayValidFlag.setStatus("current")
_IntervalPhysPerfDiffGrDelay1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfDiffGrDelay1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1dayTimeStamp = _IntervalPhysPerfDiffGrDelay1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 166, 1, 6),
    _IntervalPhysPerfDiffGrDelay1dayTimeStamp_Type()
)
intervalPhysPerfDiffGrDelay1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1dayTimeStamp.setStatus("current")
_IntervalPhysPerfDiffGrDelay1weekTable_Object = MibTable
intervalPhysPerfDiffGrDelay1weekTable = _IntervalPhysPerfDiffGrDelay1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167)
)
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekTable.setStatus("current")
_IntervalPhysPerfDiffGrDelay1weekEntry_Object = MibTableRow
intervalPhysPerfDiffGrDelay1weekEntry = _IntervalPhysPerfDiffGrDelay1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167, 1)
)
intervalPhysPerfDiffGrDelay1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfDiffGrDelay1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekEntry.setStatus("current")


class _IntervalPhysPerfDiffGrDelay1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfDiffGrDelay1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfDiffGrDelay1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfDiffGrDelay1weekNumber_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1weekNumber = _IntervalPhysPerfDiffGrDelay1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167, 1, 1),
    _IntervalPhysPerfDiffGrDelay1weekNumber_Type()
)
intervalPhysPerfDiffGrDelay1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekNumber.setStatus("current")
_IntervalPhysPerfDiffGrDelay1weekLow_Type = Integer32
_IntervalPhysPerfDiffGrDelay1weekLow_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1weekLow = _IntervalPhysPerfDiffGrDelay1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167, 1, 2),
    _IntervalPhysPerfDiffGrDelay1weekLow_Type()
)
intervalPhysPerfDiffGrDelay1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekLow.setUnits("ps")
_IntervalPhysPerfDiffGrDelay1weekMean_Type = Integer32
_IntervalPhysPerfDiffGrDelay1weekMean_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1weekMean = _IntervalPhysPerfDiffGrDelay1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167, 1, 3),
    _IntervalPhysPerfDiffGrDelay1weekMean_Type()
)
intervalPhysPerfDiffGrDelay1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekMean.setUnits("ps")
_IntervalPhysPerfDiffGrDelay1weekHigh_Type = Integer32
_IntervalPhysPerfDiffGrDelay1weekHigh_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1weekHigh = _IntervalPhysPerfDiffGrDelay1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167, 1, 4),
    _IntervalPhysPerfDiffGrDelay1weekHigh_Type()
)
intervalPhysPerfDiffGrDelay1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekHigh.setUnits("ps")
_IntervalPhysPerfDiffGrDelay1weekValidFlag_Type = TruthValue
_IntervalPhysPerfDiffGrDelay1weekValidFlag_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1weekValidFlag = _IntervalPhysPerfDiffGrDelay1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167, 1, 5),
    _IntervalPhysPerfDiffGrDelay1weekValidFlag_Type()
)
intervalPhysPerfDiffGrDelay1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekValidFlag.setStatus("current")
_IntervalPhysPerfDiffGrDelay1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfDiffGrDelay1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfDiffGrDelay1weekTimeStamp = _IntervalPhysPerfDiffGrDelay1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 167, 1, 6),
    _IntervalPhysPerfDiffGrDelay1weekTimeStamp_Type()
)
intervalPhysPerfDiffGrDelay1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfDiffGrDelay1weekTimeStamp.setStatus("current")
_IntervalPhysPerfChromaticDispersion15minTable_Object = MibTable
intervalPhysPerfChromaticDispersion15minTable = _IntervalPhysPerfChromaticDispersion15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168)
)
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minTable.setStatus("current")
_IntervalPhysPerfChromaticDispersion15minEntry_Object = MibTableRow
intervalPhysPerfChromaticDispersion15minEntry = _IntervalPhysPerfChromaticDispersion15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168, 1)
)
intervalPhysPerfChromaticDispersion15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfChromaticDispersion15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minEntry.setStatus("current")


class _IntervalPhysPerfChromaticDispersion15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfChromaticDispersion15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfChromaticDispersion15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfChromaticDispersion15minNumber_Object = MibTableColumn
intervalPhysPerfChromaticDispersion15minNumber = _IntervalPhysPerfChromaticDispersion15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168, 1, 1),
    _IntervalPhysPerfChromaticDispersion15minNumber_Type()
)
intervalPhysPerfChromaticDispersion15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minNumber.setStatus("current")
_IntervalPhysPerfChromaticDispersion15minLow_Type = Integer32
_IntervalPhysPerfChromaticDispersion15minLow_Object = MibTableColumn
intervalPhysPerfChromaticDispersion15minLow = _IntervalPhysPerfChromaticDispersion15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168, 1, 2),
    _IntervalPhysPerfChromaticDispersion15minLow_Type()
)
intervalPhysPerfChromaticDispersion15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minLow.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion15minMean_Type = Integer32
_IntervalPhysPerfChromaticDispersion15minMean_Object = MibTableColumn
intervalPhysPerfChromaticDispersion15minMean = _IntervalPhysPerfChromaticDispersion15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168, 1, 3),
    _IntervalPhysPerfChromaticDispersion15minMean_Type()
)
intervalPhysPerfChromaticDispersion15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minMean.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion15minHigh_Type = Integer32
_IntervalPhysPerfChromaticDispersion15minHigh_Object = MibTableColumn
intervalPhysPerfChromaticDispersion15minHigh = _IntervalPhysPerfChromaticDispersion15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168, 1, 4),
    _IntervalPhysPerfChromaticDispersion15minHigh_Type()
)
intervalPhysPerfChromaticDispersion15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minHigh.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion15minValidFlag_Type = TruthValue
_IntervalPhysPerfChromaticDispersion15minValidFlag_Object = MibTableColumn
intervalPhysPerfChromaticDispersion15minValidFlag = _IntervalPhysPerfChromaticDispersion15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168, 1, 5),
    _IntervalPhysPerfChromaticDispersion15minValidFlag_Type()
)
intervalPhysPerfChromaticDispersion15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minValidFlag.setStatus("current")
_IntervalPhysPerfChromaticDispersion15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfChromaticDispersion15minTimeStamp_Object = MibTableColumn
intervalPhysPerfChromaticDispersion15minTimeStamp = _IntervalPhysPerfChromaticDispersion15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 168, 1, 6),
    _IntervalPhysPerfChromaticDispersion15minTimeStamp_Type()
)
intervalPhysPerfChromaticDispersion15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion15minTimeStamp.setStatus("current")
_IntervalPhysPerfChromaticDispersion1dayTable_Object = MibTable
intervalPhysPerfChromaticDispersion1dayTable = _IntervalPhysPerfChromaticDispersion1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169)
)
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayTable.setStatus("current")
_IntervalPhysPerfChromaticDispersion1dayEntry_Object = MibTableRow
intervalPhysPerfChromaticDispersion1dayEntry = _IntervalPhysPerfChromaticDispersion1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169, 1)
)
intervalPhysPerfChromaticDispersion1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfChromaticDispersion1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayEntry.setStatus("current")


class _IntervalPhysPerfChromaticDispersion1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfChromaticDispersion1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfChromaticDispersion1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfChromaticDispersion1dayNumber_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1dayNumber = _IntervalPhysPerfChromaticDispersion1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169, 1, 1),
    _IntervalPhysPerfChromaticDispersion1dayNumber_Type()
)
intervalPhysPerfChromaticDispersion1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayNumber.setStatus("current")
_IntervalPhysPerfChromaticDispersion1dayLow_Type = Integer32
_IntervalPhysPerfChromaticDispersion1dayLow_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1dayLow = _IntervalPhysPerfChromaticDispersion1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169, 1, 2),
    _IntervalPhysPerfChromaticDispersion1dayLow_Type()
)
intervalPhysPerfChromaticDispersion1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayLow.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion1dayMean_Type = Integer32
_IntervalPhysPerfChromaticDispersion1dayMean_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1dayMean = _IntervalPhysPerfChromaticDispersion1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169, 1, 3),
    _IntervalPhysPerfChromaticDispersion1dayMean_Type()
)
intervalPhysPerfChromaticDispersion1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayMean.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion1dayHigh_Type = Integer32
_IntervalPhysPerfChromaticDispersion1dayHigh_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1dayHigh = _IntervalPhysPerfChromaticDispersion1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169, 1, 4),
    _IntervalPhysPerfChromaticDispersion1dayHigh_Type()
)
intervalPhysPerfChromaticDispersion1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayHigh.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion1dayValidFlag_Type = TruthValue
_IntervalPhysPerfChromaticDispersion1dayValidFlag_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1dayValidFlag = _IntervalPhysPerfChromaticDispersion1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169, 1, 5),
    _IntervalPhysPerfChromaticDispersion1dayValidFlag_Type()
)
intervalPhysPerfChromaticDispersion1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayValidFlag.setStatus("current")
_IntervalPhysPerfChromaticDispersion1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfChromaticDispersion1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1dayTimeStamp = _IntervalPhysPerfChromaticDispersion1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 169, 1, 6),
    _IntervalPhysPerfChromaticDispersion1dayTimeStamp_Type()
)
intervalPhysPerfChromaticDispersion1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1dayTimeStamp.setStatus("current")
_IntervalPhysPerfChromaticDispersion1weekTable_Object = MibTable
intervalPhysPerfChromaticDispersion1weekTable = _IntervalPhysPerfChromaticDispersion1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170)
)
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekTable.setStatus("current")
_IntervalPhysPerfChromaticDispersion1weekEntry_Object = MibTableRow
intervalPhysPerfChromaticDispersion1weekEntry = _IntervalPhysPerfChromaticDispersion1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170, 1)
)
intervalPhysPerfChromaticDispersion1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfChromaticDispersion1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekEntry.setStatus("current")


class _IntervalPhysPerfChromaticDispersion1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfChromaticDispersion1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfChromaticDispersion1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfChromaticDispersion1weekNumber_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1weekNumber = _IntervalPhysPerfChromaticDispersion1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170, 1, 1),
    _IntervalPhysPerfChromaticDispersion1weekNumber_Type()
)
intervalPhysPerfChromaticDispersion1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekNumber.setStatus("current")
_IntervalPhysPerfChromaticDispersion1weekLow_Type = Integer32
_IntervalPhysPerfChromaticDispersion1weekLow_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1weekLow = _IntervalPhysPerfChromaticDispersion1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170, 1, 2),
    _IntervalPhysPerfChromaticDispersion1weekLow_Type()
)
intervalPhysPerfChromaticDispersion1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekLow.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion1weekMean_Type = Integer32
_IntervalPhysPerfChromaticDispersion1weekMean_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1weekMean = _IntervalPhysPerfChromaticDispersion1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170, 1, 3),
    _IntervalPhysPerfChromaticDispersion1weekMean_Type()
)
intervalPhysPerfChromaticDispersion1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekMean.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion1weekHigh_Type = Integer32
_IntervalPhysPerfChromaticDispersion1weekHigh_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1weekHigh = _IntervalPhysPerfChromaticDispersion1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170, 1, 4),
    _IntervalPhysPerfChromaticDispersion1weekHigh_Type()
)
intervalPhysPerfChromaticDispersion1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekHigh.setUnits("ps/nm")
_IntervalPhysPerfChromaticDispersion1weekValidFlag_Type = TruthValue
_IntervalPhysPerfChromaticDispersion1weekValidFlag_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1weekValidFlag = _IntervalPhysPerfChromaticDispersion1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170, 1, 5),
    _IntervalPhysPerfChromaticDispersion1weekValidFlag_Type()
)
intervalPhysPerfChromaticDispersion1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekValidFlag.setStatus("current")
_IntervalPhysPerfChromaticDispersion1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfChromaticDispersion1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfChromaticDispersion1weekTimeStamp = _IntervalPhysPerfChromaticDispersion1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 170, 1, 6),
    _IntervalPhysPerfChromaticDispersion1weekTimeStamp_Type()
)
intervalPhysPerfChromaticDispersion1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfChromaticDispersion1weekTimeStamp.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio15minTable_Object = MibTable
intervalPhysPerfSignalToNoiseRatio15minTable = _IntervalPhysPerfSignalToNoiseRatio15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171)
)
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minTable.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio15minEntry_Object = MibTableRow
intervalPhysPerfSignalToNoiseRatio15minEntry = _IntervalPhysPerfSignalToNoiseRatio15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171, 1)
)
intervalPhysPerfSignalToNoiseRatio15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfSignalToNoiseRatio15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minEntry.setStatus("current")


class _IntervalPhysPerfSignalToNoiseRatio15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfSignalToNoiseRatio15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfSignalToNoiseRatio15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfSignalToNoiseRatio15minNumber_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio15minNumber = _IntervalPhysPerfSignalToNoiseRatio15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171, 1, 1),
    _IntervalPhysPerfSignalToNoiseRatio15minNumber_Type()
)
intervalPhysPerfSignalToNoiseRatio15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minNumber.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio15minLow_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio15minLow_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio15minLow = _IntervalPhysPerfSignalToNoiseRatio15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171, 1, 2),
    _IntervalPhysPerfSignalToNoiseRatio15minLow_Type()
)
intervalPhysPerfSignalToNoiseRatio15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minLow.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio15minMean_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio15minMean_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio15minMean = _IntervalPhysPerfSignalToNoiseRatio15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171, 1, 3),
    _IntervalPhysPerfSignalToNoiseRatio15minMean_Type()
)
intervalPhysPerfSignalToNoiseRatio15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minMean.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio15minHigh_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio15minHigh_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio15minHigh = _IntervalPhysPerfSignalToNoiseRatio15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171, 1, 4),
    _IntervalPhysPerfSignalToNoiseRatio15minHigh_Type()
)
intervalPhysPerfSignalToNoiseRatio15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minHigh.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio15minValidFlag_Type = TruthValue
_IntervalPhysPerfSignalToNoiseRatio15minValidFlag_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio15minValidFlag = _IntervalPhysPerfSignalToNoiseRatio15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171, 1, 5),
    _IntervalPhysPerfSignalToNoiseRatio15minValidFlag_Type()
)
intervalPhysPerfSignalToNoiseRatio15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minValidFlag.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfSignalToNoiseRatio15minTimeStamp_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio15minTimeStamp = _IntervalPhysPerfSignalToNoiseRatio15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 171, 1, 6),
    _IntervalPhysPerfSignalToNoiseRatio15minTimeStamp_Type()
)
intervalPhysPerfSignalToNoiseRatio15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio15minTimeStamp.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1dayTable_Object = MibTable
intervalPhysPerfSignalToNoiseRatio1dayTable = _IntervalPhysPerfSignalToNoiseRatio1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172)
)
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayTable.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1dayEntry_Object = MibTableRow
intervalPhysPerfSignalToNoiseRatio1dayEntry = _IntervalPhysPerfSignalToNoiseRatio1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172, 1)
)
intervalPhysPerfSignalToNoiseRatio1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfSignalToNoiseRatio1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayEntry.setStatus("current")


class _IntervalPhysPerfSignalToNoiseRatio1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfSignalToNoiseRatio1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfSignalToNoiseRatio1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfSignalToNoiseRatio1dayNumber_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1dayNumber = _IntervalPhysPerfSignalToNoiseRatio1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172, 1, 1),
    _IntervalPhysPerfSignalToNoiseRatio1dayNumber_Type()
)
intervalPhysPerfSignalToNoiseRatio1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayNumber.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1dayLow_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio1dayLow_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1dayLow = _IntervalPhysPerfSignalToNoiseRatio1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172, 1, 2),
    _IntervalPhysPerfSignalToNoiseRatio1dayLow_Type()
)
intervalPhysPerfSignalToNoiseRatio1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayLow.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio1dayMean_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio1dayMean_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1dayMean = _IntervalPhysPerfSignalToNoiseRatio1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172, 1, 3),
    _IntervalPhysPerfSignalToNoiseRatio1dayMean_Type()
)
intervalPhysPerfSignalToNoiseRatio1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayMean.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio1dayHigh_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio1dayHigh_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1dayHigh = _IntervalPhysPerfSignalToNoiseRatio1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172, 1, 4),
    _IntervalPhysPerfSignalToNoiseRatio1dayHigh_Type()
)
intervalPhysPerfSignalToNoiseRatio1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayHigh.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio1dayValidFlag_Type = TruthValue
_IntervalPhysPerfSignalToNoiseRatio1dayValidFlag_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1dayValidFlag = _IntervalPhysPerfSignalToNoiseRatio1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172, 1, 5),
    _IntervalPhysPerfSignalToNoiseRatio1dayValidFlag_Type()
)
intervalPhysPerfSignalToNoiseRatio1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayValidFlag.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfSignalToNoiseRatio1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1dayTimeStamp = _IntervalPhysPerfSignalToNoiseRatio1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 172, 1, 6),
    _IntervalPhysPerfSignalToNoiseRatio1dayTimeStamp_Type()
)
intervalPhysPerfSignalToNoiseRatio1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1dayTimeStamp.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1weekTable_Object = MibTable
intervalPhysPerfSignalToNoiseRatio1weekTable = _IntervalPhysPerfSignalToNoiseRatio1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173)
)
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekTable.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1weekEntry_Object = MibTableRow
intervalPhysPerfSignalToNoiseRatio1weekEntry = _IntervalPhysPerfSignalToNoiseRatio1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173, 1)
)
intervalPhysPerfSignalToNoiseRatio1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfSignalToNoiseRatio1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekEntry.setStatus("current")


class _IntervalPhysPerfSignalToNoiseRatio1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfSignalToNoiseRatio1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfSignalToNoiseRatio1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfSignalToNoiseRatio1weekNumber_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1weekNumber = _IntervalPhysPerfSignalToNoiseRatio1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173, 1, 1),
    _IntervalPhysPerfSignalToNoiseRatio1weekNumber_Type()
)
intervalPhysPerfSignalToNoiseRatio1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekNumber.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1weekLow_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio1weekLow_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1weekLow = _IntervalPhysPerfSignalToNoiseRatio1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173, 1, 2),
    _IntervalPhysPerfSignalToNoiseRatio1weekLow_Type()
)
intervalPhysPerfSignalToNoiseRatio1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekLow.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio1weekMean_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio1weekMean_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1weekMean = _IntervalPhysPerfSignalToNoiseRatio1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173, 1, 3),
    _IntervalPhysPerfSignalToNoiseRatio1weekMean_Type()
)
intervalPhysPerfSignalToNoiseRatio1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekMean.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio1weekHigh_Type = Integer32
_IntervalPhysPerfSignalToNoiseRatio1weekHigh_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1weekHigh = _IntervalPhysPerfSignalToNoiseRatio1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173, 1, 4),
    _IntervalPhysPerfSignalToNoiseRatio1weekHigh_Type()
)
intervalPhysPerfSignalToNoiseRatio1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekHigh.setUnits("0.1 dB")
_IntervalPhysPerfSignalToNoiseRatio1weekValidFlag_Type = TruthValue
_IntervalPhysPerfSignalToNoiseRatio1weekValidFlag_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1weekValidFlag = _IntervalPhysPerfSignalToNoiseRatio1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173, 1, 5),
    _IntervalPhysPerfSignalToNoiseRatio1weekValidFlag_Type()
)
intervalPhysPerfSignalToNoiseRatio1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekValidFlag.setStatus("current")
_IntervalPhysPerfSignalToNoiseRatio1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfSignalToNoiseRatio1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfSignalToNoiseRatio1weekTimeStamp = _IntervalPhysPerfSignalToNoiseRatio1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 173, 1, 6),
    _IntervalPhysPerfSignalToNoiseRatio1weekTimeStamp_Type()
)
intervalPhysPerfSignalToNoiseRatio1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSignalToNoiseRatio1weekTimeStamp.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset15minTable_Object = MibTable
intervalPhysPerfCarrierFreqOffset15minTable = _IntervalPhysPerfCarrierFreqOffset15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minTable.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset15minEntry_Object = MibTableRow
intervalPhysPerfCarrierFreqOffset15minEntry = _IntervalPhysPerfCarrierFreqOffset15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174, 1)
)
intervalPhysPerfCarrierFreqOffset15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCarrierFreqOffset15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minEntry.setStatus("current")


class _IntervalPhysPerfCarrierFreqOffset15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfCarrierFreqOffset15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfCarrierFreqOffset15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCarrierFreqOffset15minNumber_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset15minNumber = _IntervalPhysPerfCarrierFreqOffset15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174, 1, 1),
    _IntervalPhysPerfCarrierFreqOffset15minNumber_Type()
)
intervalPhysPerfCarrierFreqOffset15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minNumber.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset15minLow_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset15minLow_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset15minLow = _IntervalPhysPerfCarrierFreqOffset15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174, 1, 2),
    _IntervalPhysPerfCarrierFreqOffset15minLow_Type()
)
intervalPhysPerfCarrierFreqOffset15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minLow.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset15minMean_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset15minMean_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset15minMean = _IntervalPhysPerfCarrierFreqOffset15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174, 1, 3),
    _IntervalPhysPerfCarrierFreqOffset15minMean_Type()
)
intervalPhysPerfCarrierFreqOffset15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minMean.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset15minHigh_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset15minHigh_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset15minHigh = _IntervalPhysPerfCarrierFreqOffset15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174, 1, 4),
    _IntervalPhysPerfCarrierFreqOffset15minHigh_Type()
)
intervalPhysPerfCarrierFreqOffset15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minHigh.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset15minValidFlag_Type = TruthValue
_IntervalPhysPerfCarrierFreqOffset15minValidFlag_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset15minValidFlag = _IntervalPhysPerfCarrierFreqOffset15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174, 1, 5),
    _IntervalPhysPerfCarrierFreqOffset15minValidFlag_Type()
)
intervalPhysPerfCarrierFreqOffset15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minValidFlag.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfCarrierFreqOffset15minTimeStamp_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset15minTimeStamp = _IntervalPhysPerfCarrierFreqOffset15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 174, 1, 6),
    _IntervalPhysPerfCarrierFreqOffset15minTimeStamp_Type()
)
intervalPhysPerfCarrierFreqOffset15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset15minTimeStamp.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1dayTable_Object = MibTable
intervalPhysPerfCarrierFreqOffset1dayTable = _IntervalPhysPerfCarrierFreqOffset1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayTable.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1dayEntry_Object = MibTableRow
intervalPhysPerfCarrierFreqOffset1dayEntry = _IntervalPhysPerfCarrierFreqOffset1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175, 1)
)
intervalPhysPerfCarrierFreqOffset1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCarrierFreqOffset1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayEntry.setStatus("current")


class _IntervalPhysPerfCarrierFreqOffset1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfCarrierFreqOffset1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfCarrierFreqOffset1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCarrierFreqOffset1dayNumber_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1dayNumber = _IntervalPhysPerfCarrierFreqOffset1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175, 1, 1),
    _IntervalPhysPerfCarrierFreqOffset1dayNumber_Type()
)
intervalPhysPerfCarrierFreqOffset1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayNumber.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1dayLow_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset1dayLow_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1dayLow = _IntervalPhysPerfCarrierFreqOffset1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175, 1, 2),
    _IntervalPhysPerfCarrierFreqOffset1dayLow_Type()
)
intervalPhysPerfCarrierFreqOffset1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayLow.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset1dayMean_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset1dayMean_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1dayMean = _IntervalPhysPerfCarrierFreqOffset1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175, 1, 3),
    _IntervalPhysPerfCarrierFreqOffset1dayMean_Type()
)
intervalPhysPerfCarrierFreqOffset1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayMean.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset1dayHigh_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset1dayHigh_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1dayHigh = _IntervalPhysPerfCarrierFreqOffset1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175, 1, 4),
    _IntervalPhysPerfCarrierFreqOffset1dayHigh_Type()
)
intervalPhysPerfCarrierFreqOffset1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayHigh.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset1dayValidFlag_Type = TruthValue
_IntervalPhysPerfCarrierFreqOffset1dayValidFlag_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1dayValidFlag = _IntervalPhysPerfCarrierFreqOffset1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175, 1, 5),
    _IntervalPhysPerfCarrierFreqOffset1dayValidFlag_Type()
)
intervalPhysPerfCarrierFreqOffset1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayValidFlag.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfCarrierFreqOffset1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1dayTimeStamp = _IntervalPhysPerfCarrierFreqOffset1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 175, 1, 6),
    _IntervalPhysPerfCarrierFreqOffset1dayTimeStamp_Type()
)
intervalPhysPerfCarrierFreqOffset1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1dayTimeStamp.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1weekTable_Object = MibTable
intervalPhysPerfCarrierFreqOffset1weekTable = _IntervalPhysPerfCarrierFreqOffset1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176)
)
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekTable.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1weekEntry_Object = MibTableRow
intervalPhysPerfCarrierFreqOffset1weekEntry = _IntervalPhysPerfCarrierFreqOffset1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176, 1)
)
intervalPhysPerfCarrierFreqOffset1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfCarrierFreqOffset1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekEntry.setStatus("current")


class _IntervalPhysPerfCarrierFreqOffset1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfCarrierFreqOffset1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfCarrierFreqOffset1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfCarrierFreqOffset1weekNumber_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1weekNumber = _IntervalPhysPerfCarrierFreqOffset1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176, 1, 1),
    _IntervalPhysPerfCarrierFreqOffset1weekNumber_Type()
)
intervalPhysPerfCarrierFreqOffset1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekNumber.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1weekLow_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset1weekLow_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1weekLow = _IntervalPhysPerfCarrierFreqOffset1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176, 1, 2),
    _IntervalPhysPerfCarrierFreqOffset1weekLow_Type()
)
intervalPhysPerfCarrierFreqOffset1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekLow.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset1weekMean_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset1weekMean_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1weekMean = _IntervalPhysPerfCarrierFreqOffset1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176, 1, 3),
    _IntervalPhysPerfCarrierFreqOffset1weekMean_Type()
)
intervalPhysPerfCarrierFreqOffset1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekMean.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset1weekHigh_Type = Integer32
_IntervalPhysPerfCarrierFreqOffset1weekHigh_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1weekHigh = _IntervalPhysPerfCarrierFreqOffset1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176, 1, 4),
    _IntervalPhysPerfCarrierFreqOffset1weekHigh_Type()
)
intervalPhysPerfCarrierFreqOffset1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekHigh.setUnits("0.001 GHz")
_IntervalPhysPerfCarrierFreqOffset1weekValidFlag_Type = TruthValue
_IntervalPhysPerfCarrierFreqOffset1weekValidFlag_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1weekValidFlag = _IntervalPhysPerfCarrierFreqOffset1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176, 1, 5),
    _IntervalPhysPerfCarrierFreqOffset1weekValidFlag_Type()
)
intervalPhysPerfCarrierFreqOffset1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekValidFlag.setStatus("current")
_IntervalPhysPerfCarrierFreqOffset1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfCarrierFreqOffset1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfCarrierFreqOffset1weekTimeStamp = _IntervalPhysPerfCarrierFreqOffset1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 176, 1, 6),
    _IntervalPhysPerfCarrierFreqOffset1weekTimeStamp_Type()
)
intervalPhysPerfCarrierFreqOffset1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfCarrierFreqOffset1weekTimeStamp.setStatus("current")
_ThresholdOtuFecSublayerExTable_Object = MibTable
thresholdOtuFecSublayerExTable = _ThresholdOtuFecSublayerExTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 177)
)
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerExTable.setStatus("current")
_ThresholdOtuFecSublayerExEntry_Object = MibTableRow
thresholdOtuFecSublayerExEntry = _ThresholdOtuFecSublayerExEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 177, 1)
)
thresholdOtuFecSublayerExEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerExEntry.setStatus("current")
_ThresholdOtuFecSublayerExCEHighThres15min_Type = Counter64String
_ThresholdOtuFecSublayerExCEHighThres15min_Object = MibTableColumn
thresholdOtuFecSublayerExCEHighThres15min = _ThresholdOtuFecSublayerExCEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 177, 1, 1),
    _ThresholdOtuFecSublayerExCEHighThres15min_Type()
)
thresholdOtuFecSublayerExCEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerExCEHighThres15min.setStatus("current")
_ThresholdOtuFecSublayerExCEHighThres1day_Type = Counter64String
_ThresholdOtuFecSublayerExCEHighThres1day_Object = MibTableColumn
thresholdOtuFecSublayerExCEHighThres1day = _ThresholdOtuFecSublayerExCEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 177, 1, 2),
    _ThresholdOtuFecSublayerExCEHighThres1day_Type()
)
thresholdOtuFecSublayerExCEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerExCEHighThres1day.setStatus("current")
_ThresholdOtuFecSublayerExUBEHighThres15min_Type = Counter64String
_ThresholdOtuFecSublayerExUBEHighThres15min_Object = MibTableColumn
thresholdOtuFecSublayerExUBEHighThres15min = _ThresholdOtuFecSublayerExUBEHighThres15min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 177, 1, 3),
    _ThresholdOtuFecSublayerExUBEHighThres15min_Type()
)
thresholdOtuFecSublayerExUBEHighThres15min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerExUBEHighThres15min.setStatus("current")
_ThresholdOtuFecSublayerExUBEHighThres1day_Type = Counter64String
_ThresholdOtuFecSublayerExUBEHighThres1day_Object = MibTableColumn
thresholdOtuFecSublayerExUBEHighThres1day = _ThresholdOtuFecSublayerExUBEHighThres1day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 177, 1, 4),
    _ThresholdOtuFecSublayerExUBEHighThres1day_Type()
)
thresholdOtuFecSublayerExUBEHighThres1day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdOtuFecSublayerExUBEHighThres1day.setStatus("current")
_CurrentOtuFec15minExTable_Object = MibTable
currentOtuFec15minExTable = _CurrentOtuFec15minExTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 178)
)
if mibBuilder.loadTexts:
    currentOtuFec15minExTable.setStatus("current")
_CurrentOtuFec15minExEntry_Object = MibTableRow
currentOtuFec15minExEntry = _CurrentOtuFec15minExEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 178, 1)
)
currentOtuFec15minExEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOtuFec15minExEntry.setStatus("current")
_CurrentOtuFec15minExCE_Type = Counter64String
_CurrentOtuFec15minExCE_Object = MibTableColumn
currentOtuFec15minExCE = _CurrentOtuFec15minExCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 178, 1, 1),
    _CurrentOtuFec15minExCE_Type()
)
currentOtuFec15minExCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minExCE.setStatus("current")
_CurrentOtuFec15minExUBE_Type = Counter64String
_CurrentOtuFec15minExUBE_Object = MibTableColumn
currentOtuFec15minExUBE = _CurrentOtuFec15minExUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 178, 1, 2),
    _CurrentOtuFec15minExUBE_Type()
)
currentOtuFec15minExUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minExUBE.setStatus("current")
_CurrentOtuFec15minExBERCE_Type = Counter64String
_CurrentOtuFec15minExBERCE_Object = MibTableColumn
currentOtuFec15minExBERCE = _CurrentOtuFec15minExBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 178, 1, 3),
    _CurrentOtuFec15minExBERCE_Type()
)
currentOtuFec15minExBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minExBERCE.setStatus("current")
if mibBuilder.loadTexts:
    currentOtuFec15minExBERCE.setUnits("1.0E-18")


class _CurrentOtuFec15minExElapsedTime_Type(Integer32):
    """Custom type currentOtuFec15minExElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOtuFec15minExElapsedTime_Type.__name__ = "Integer32"
_CurrentOtuFec15minExElapsedTime_Object = MibTableColumn
currentOtuFec15minExElapsedTime = _CurrentOtuFec15minExElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 178, 1, 4),
    _CurrentOtuFec15minExElapsedTime_Type()
)
currentOtuFec15minExElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec15minExElapsedTime.setStatus("current")
_CurrentOtuFec1dayExTable_Object = MibTable
currentOtuFec1dayExTable = _CurrentOtuFec1dayExTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 179)
)
if mibBuilder.loadTexts:
    currentOtuFec1dayExTable.setStatus("current")
_CurrentOtuFec1dayExEntry_Object = MibTableRow
currentOtuFec1dayExEntry = _CurrentOtuFec1dayExEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 179, 1)
)
currentOtuFec1dayExEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentOtuFec1dayExEntry.setStatus("current")
_CurrentOtuFec1dayExCE_Type = Counter64String
_CurrentOtuFec1dayExCE_Object = MibTableColumn
currentOtuFec1dayExCE = _CurrentOtuFec1dayExCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 179, 1, 1),
    _CurrentOtuFec1dayExCE_Type()
)
currentOtuFec1dayExCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayExCE.setStatus("current")
_CurrentOtuFec1dayExUBE_Type = Counter64String
_CurrentOtuFec1dayExUBE_Object = MibTableColumn
currentOtuFec1dayExUBE = _CurrentOtuFec1dayExUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 179, 1, 2),
    _CurrentOtuFec1dayExUBE_Type()
)
currentOtuFec1dayExUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayExUBE.setStatus("current")
_CurrentOtuFec1dayExBERCE_Type = Counter64String
_CurrentOtuFec1dayExBERCE_Object = MibTableColumn
currentOtuFec1dayExBERCE = _CurrentOtuFec1dayExBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 179, 1, 3),
    _CurrentOtuFec1dayExBERCE_Type()
)
currentOtuFec1dayExBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayExBERCE.setStatus("current")
if mibBuilder.loadTexts:
    currentOtuFec1dayExBERCE.setUnits("1.0E-18")


class _CurrentOtuFec1dayExElapsedTime_Type(Integer32):
    """Custom type currentOtuFec1dayExElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentOtuFec1dayExElapsedTime_Type.__name__ = "Integer32"
_CurrentOtuFec1dayExElapsedTime_Object = MibTableColumn
currentOtuFec1dayExElapsedTime = _CurrentOtuFec1dayExElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 179, 1, 4),
    _CurrentOtuFec1dayExElapsedTime_Type()
)
currentOtuFec1dayExElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentOtuFec1dayExElapsedTime.setStatus("current")
_IntervalOtuFec15minExTable_Object = MibTable
intervalOtuFec15minExTable = _IntervalOtuFec15minExTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180)
)
if mibBuilder.loadTexts:
    intervalOtuFec15minExTable.setStatus("current")
_IntervalOtuFec15minExEntry_Object = MibTableRow
intervalOtuFec15minExEntry = _IntervalOtuFec15minExEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180, 1)
)
intervalOtuFec15minExEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOtuFec15minExNumber"),
)
if mibBuilder.loadTexts:
    intervalOtuFec15minExEntry.setStatus("current")


class _IntervalOtuFec15minExNumber_Type(Integer32):
    """Custom type intervalOtuFec15minExNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalOtuFec15minExNumber_Type.__name__ = "Integer32"
_IntervalOtuFec15minExNumber_Object = MibTableColumn
intervalOtuFec15minExNumber = _IntervalOtuFec15minExNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180, 1, 1),
    _IntervalOtuFec15minExNumber_Type()
)
intervalOtuFec15minExNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOtuFec15minExNumber.setStatus("current")
_IntervalOtuFec15minExCE_Type = Counter64String
_IntervalOtuFec15minExCE_Object = MibTableColumn
intervalOtuFec15minExCE = _IntervalOtuFec15minExCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180, 1, 2),
    _IntervalOtuFec15minExCE_Type()
)
intervalOtuFec15minExCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minExCE.setStatus("current")
_IntervalOtuFec15minExUBE_Type = Counter64String
_IntervalOtuFec15minExUBE_Object = MibTableColumn
intervalOtuFec15minExUBE = _IntervalOtuFec15minExUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180, 1, 3),
    _IntervalOtuFec15minExUBE_Type()
)
intervalOtuFec15minExUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minExUBE.setStatus("current")
_IntervalOtuFec15minExBERCE_Type = Counter64String
_IntervalOtuFec15minExBERCE_Object = MibTableColumn
intervalOtuFec15minExBERCE = _IntervalOtuFec15minExBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180, 1, 4),
    _IntervalOtuFec15minExBERCE_Type()
)
intervalOtuFec15minExBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minExBERCE.setStatus("current")
if mibBuilder.loadTexts:
    intervalOtuFec15minExBERCE.setUnits("1.0E-18")
_IntervalOtuFec15minExValidFlag_Type = TruthValue
_IntervalOtuFec15minExValidFlag_Object = MibTableColumn
intervalOtuFec15minExValidFlag = _IntervalOtuFec15minExValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180, 1, 5),
    _IntervalOtuFec15minExValidFlag_Type()
)
intervalOtuFec15minExValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minExValidFlag.setStatus("current")
_IntervalOtuFec15minExTimeStamp_Type = DateAndTime
_IntervalOtuFec15minExTimeStamp_Object = MibTableColumn
intervalOtuFec15minExTimeStamp = _IntervalOtuFec15minExTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 180, 1, 6),
    _IntervalOtuFec15minExTimeStamp_Type()
)
intervalOtuFec15minExTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec15minExTimeStamp.setStatus("current")
_IntervalOtuFec1dayExTable_Object = MibTable
intervalOtuFec1dayExTable = _IntervalOtuFec1dayExTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181)
)
if mibBuilder.loadTexts:
    intervalOtuFec1dayExTable.setStatus("current")
_IntervalOtuFec1dayExEntry_Object = MibTableRow
intervalOtuFec1dayExEntry = _IntervalOtuFec1dayExEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181, 1)
)
intervalOtuFec1dayExEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalOtuFec1dayExNumber"),
)
if mibBuilder.loadTexts:
    intervalOtuFec1dayExEntry.setStatus("current")


class _IntervalOtuFec1dayExNumber_Type(Integer32):
    """Custom type intervalOtuFec1dayExNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalOtuFec1dayExNumber_Type.__name__ = "Integer32"
_IntervalOtuFec1dayExNumber_Object = MibTableColumn
intervalOtuFec1dayExNumber = _IntervalOtuFec1dayExNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181, 1, 1),
    _IntervalOtuFec1dayExNumber_Type()
)
intervalOtuFec1dayExNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalOtuFec1dayExNumber.setStatus("current")
_IntervalOtuFec1dayExCE_Type = Counter64String
_IntervalOtuFec1dayExCE_Object = MibTableColumn
intervalOtuFec1dayExCE = _IntervalOtuFec1dayExCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181, 1, 2),
    _IntervalOtuFec1dayExCE_Type()
)
intervalOtuFec1dayExCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayExCE.setStatus("current")
_IntervalOtuFec1dayExUBE_Type = Counter64String
_IntervalOtuFec1dayExUBE_Object = MibTableColumn
intervalOtuFec1dayExUBE = _IntervalOtuFec1dayExUBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181, 1, 3),
    _IntervalOtuFec1dayExUBE_Type()
)
intervalOtuFec1dayExUBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayExUBE.setStatus("current")
_IntervalOtuFec1dayExBERCE_Type = Counter64String
_IntervalOtuFec1dayExBERCE_Object = MibTableColumn
intervalOtuFec1dayExBERCE = _IntervalOtuFec1dayExBERCE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181, 1, 4),
    _IntervalOtuFec1dayExBERCE_Type()
)
intervalOtuFec1dayExBERCE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayExBERCE.setStatus("current")
if mibBuilder.loadTexts:
    intervalOtuFec1dayExBERCE.setUnits("1.0E-18")
_IntervalOtuFec1dayExValidFlag_Type = TruthValue
_IntervalOtuFec1dayExValidFlag_Object = MibTableColumn
intervalOtuFec1dayExValidFlag = _IntervalOtuFec1dayExValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181, 1, 5),
    _IntervalOtuFec1dayExValidFlag_Type()
)
intervalOtuFec1dayExValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayExValidFlag.setStatus("current")
_IntervalOtuFec1dayExTimeStamp_Type = DateAndTime
_IntervalOtuFec1dayExTimeStamp_Object = MibTableColumn
intervalOtuFec1dayExTimeStamp = _IntervalOtuFec1dayExTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 181, 1, 6),
    _IntervalOtuFec1dayExTimeStamp_Type()
)
intervalOtuFec1dayExTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalOtuFec1dayExTimeStamp.setStatus("current")
_CurrentEthRx3HS15minTable_Object = MibTable
currentEthRx3HS15minTable = _CurrentEthRx3HS15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182)
)
if mibBuilder.loadTexts:
    currentEthRx3HS15minTable.setStatus("current")
_CurrentEthRx3HS15minEntry_Object = MibTableRow
currentEthRx3HS15minEntry = _CurrentEthRx3HS15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1)
)
currentEthRx3HS15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthRx3HS15minEntry.setStatus("current")
_CurrentEthRx3HS15minGoodFrames_Type = Counter64String
_CurrentEthRx3HS15minGoodFrames_Object = MibTableColumn
currentEthRx3HS15minGoodFrames = _CurrentEthRx3HS15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 1),
    _CurrentEthRx3HS15minGoodFrames_Type()
)
currentEthRx3HS15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minGoodFrames.setStatus("current")
_CurrentEthRx3HS15minPauseFrames_Type = Counter64String
_CurrentEthRx3HS15minPauseFrames_Object = MibTableColumn
currentEthRx3HS15minPauseFrames = _CurrentEthRx3HS15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 2),
    _CurrentEthRx3HS15minPauseFrames_Type()
)
currentEthRx3HS15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minPauseFrames.setStatus("current")
_CurrentEthRx3HS15minCrcFrames_Type = Counter64String
_CurrentEthRx3HS15minCrcFrames_Object = MibTableColumn
currentEthRx3HS15minCrcFrames = _CurrentEthRx3HS15minCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 3),
    _CurrentEthRx3HS15minCrcFrames_Type()
)
currentEthRx3HS15minCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minCrcFrames.setStatus("current")
_CurrentEthRx3HS15minBytes_Type = Counter64String
_CurrentEthRx3HS15minBytes_Object = MibTableColumn
currentEthRx3HS15minBytes = _CurrentEthRx3HS15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 4),
    _CurrentEthRx3HS15minBytes_Type()
)
currentEthRx3HS15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytes.setStatus("current")
_CurrentEthRx3HS15minBroadcastFramesRcv_Type = Counter64String
_CurrentEthRx3HS15minBroadcastFramesRcv_Object = MibTableColumn
currentEthRx3HS15minBroadcastFramesRcv = _CurrentEthRx3HS15minBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 5),
    _CurrentEthRx3HS15minBroadcastFramesRcv_Type()
)
currentEthRx3HS15minBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBroadcastFramesRcv.setStatus("current")
_CurrentEthRx3HS15minMulticastFramesRcv_Type = Counter64String
_CurrentEthRx3HS15minMulticastFramesRcv_Object = MibTableColumn
currentEthRx3HS15minMulticastFramesRcv = _CurrentEthRx3HS15minMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 6),
    _CurrentEthRx3HS15minMulticastFramesRcv_Type()
)
currentEthRx3HS15minMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minMulticastFramesRcv.setStatus("current")
_CurrentEthRx3HS15minUndersizedFramesRcv_Type = Counter64String
_CurrentEthRx3HS15minUndersizedFramesRcv_Object = MibTableColumn
currentEthRx3HS15minUndersizedFramesRcv = _CurrentEthRx3HS15minUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 7),
    _CurrentEthRx3HS15minUndersizedFramesRcv_Type()
)
currentEthRx3HS15minUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minUndersizedFramesRcv.setStatus("current")
_CurrentEthRx3HS15minOversizedFramesRcv_Type = Counter64String
_CurrentEthRx3HS15minOversizedFramesRcv_Object = MibTableColumn
currentEthRx3HS15minOversizedFramesRcv = _CurrentEthRx3HS15minOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 8),
    _CurrentEthRx3HS15minOversizedFramesRcv_Type()
)
currentEthRx3HS15minOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minOversizedFramesRcv.setStatus("current")
_CurrentEthRx3HS15minFragmentFramesRcv_Type = Counter64String
_CurrentEthRx3HS15minFragmentFramesRcv_Object = MibTableColumn
currentEthRx3HS15minFragmentFramesRcv = _CurrentEthRx3HS15minFragmentFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 9),
    _CurrentEthRx3HS15minFragmentFramesRcv_Type()
)
currentEthRx3HS15minFragmentFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minFragmentFramesRcv.setStatus("current")
_CurrentEthRx3HS15minJabberFrameRcv_Type = Counter64String
_CurrentEthRx3HS15minJabberFrameRcv_Object = MibTableColumn
currentEthRx3HS15minJabberFrameRcv = _CurrentEthRx3HS15minJabberFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 10),
    _CurrentEthRx3HS15minJabberFrameRcv_Type()
)
currentEthRx3HS15minJabberFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minJabberFrameRcv.setStatus("current")
_CurrentEthRx3HS15minControlFrameRcv_Type = Counter64String
_CurrentEthRx3HS15minControlFrameRcv_Object = MibTableColumn
currentEthRx3HS15minControlFrameRcv = _CurrentEthRx3HS15minControlFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 11),
    _CurrentEthRx3HS15minControlFrameRcv_Type()
)
currentEthRx3HS15minControlFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minControlFrameRcv.setStatus("current")
_CurrentEthRx3HS15minBytesFrames64Rcv_Type = Counter64String
_CurrentEthRx3HS15minBytesFrames64Rcv_Object = MibTableColumn
currentEthRx3HS15minBytesFrames64Rcv = _CurrentEthRx3HS15minBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 12),
    _CurrentEthRx3HS15minBytesFrames64Rcv_Type()
)
currentEthRx3HS15minBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytesFrames64Rcv.setStatus("current")
_CurrentEthRx3HS15minBytesFrames65Rcv_Type = Counter64String
_CurrentEthRx3HS15minBytesFrames65Rcv_Object = MibTableColumn
currentEthRx3HS15minBytesFrames65Rcv = _CurrentEthRx3HS15minBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 13),
    _CurrentEthRx3HS15minBytesFrames65Rcv_Type()
)
currentEthRx3HS15minBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytesFrames65Rcv.setStatus("current")
_CurrentEthRx3HS15minBytesFrames128Rcv_Type = Counter64String
_CurrentEthRx3HS15minBytesFrames128Rcv_Object = MibTableColumn
currentEthRx3HS15minBytesFrames128Rcv = _CurrentEthRx3HS15minBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 14),
    _CurrentEthRx3HS15minBytesFrames128Rcv_Type()
)
currentEthRx3HS15minBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytesFrames128Rcv.setStatus("current")
_CurrentEthRx3HS15minBytesFrames256Rcv_Type = Counter64String
_CurrentEthRx3HS15minBytesFrames256Rcv_Object = MibTableColumn
currentEthRx3HS15minBytesFrames256Rcv = _CurrentEthRx3HS15minBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 15),
    _CurrentEthRx3HS15minBytesFrames256Rcv_Type()
)
currentEthRx3HS15minBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytesFrames256Rcv.setStatus("current")
_CurrentEthRx3HS15minBytesFrames512Rcv_Type = Counter64String
_CurrentEthRx3HS15minBytesFrames512Rcv_Object = MibTableColumn
currentEthRx3HS15minBytesFrames512Rcv = _CurrentEthRx3HS15minBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 16),
    _CurrentEthRx3HS15minBytesFrames512Rcv_Type()
)
currentEthRx3HS15minBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytesFrames512Rcv.setStatus("current")
_CurrentEthRx3HS15minBytesFrames1024Rcv_Type = Counter64String
_CurrentEthRx3HS15minBytesFrames1024Rcv_Object = MibTableColumn
currentEthRx3HS15minBytesFrames1024Rcv = _CurrentEthRx3HS15minBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 17),
    _CurrentEthRx3HS15minBytesFrames1024Rcv_Type()
)
currentEthRx3HS15minBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytesFrames1024Rcv.setStatus("current")
_CurrentEthRx3HS15minBytesFrames1519Rcv_Type = Counter64String
_CurrentEthRx3HS15minBytesFrames1519Rcv_Object = MibTableColumn
currentEthRx3HS15minBytesFrames1519Rcv = _CurrentEthRx3HS15minBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 18),
    _CurrentEthRx3HS15minBytesFrames1519Rcv_Type()
)
currentEthRx3HS15minBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minBytesFrames1519Rcv.setStatus("current")


class _CurrentEthRx3HS15minElapsedTime_Type(Integer32):
    """Custom type currentEthRx3HS15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthRx3HS15minElapsedTime_Type.__name__ = "Integer32"
_CurrentEthRx3HS15minElapsedTime_Object = MibTableColumn
currentEthRx3HS15minElapsedTime = _CurrentEthRx3HS15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 182, 1, 19),
    _CurrentEthRx3HS15minElapsedTime_Type()
)
currentEthRx3HS15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS15minElapsedTime.setStatus("current")
_CurrentEthRx3HS1dayTable_Object = MibTable
currentEthRx3HS1dayTable = _CurrentEthRx3HS1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183)
)
if mibBuilder.loadTexts:
    currentEthRx3HS1dayTable.setStatus("current")
_CurrentEthRx3HS1dayEntry_Object = MibTableRow
currentEthRx3HS1dayEntry = _CurrentEthRx3HS1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1)
)
currentEthRx3HS1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentEthRx3HS1dayEntry.setStatus("current")
_CurrentEthRx3HS1dayGoodFrames_Type = Counter64String
_CurrentEthRx3HS1dayGoodFrames_Object = MibTableColumn
currentEthRx3HS1dayGoodFrames = _CurrentEthRx3HS1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 1),
    _CurrentEthRx3HS1dayGoodFrames_Type()
)
currentEthRx3HS1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayGoodFrames.setStatus("current")
_CurrentEthRx3HS1dayPauseFrames_Type = Counter64String
_CurrentEthRx3HS1dayPauseFrames_Object = MibTableColumn
currentEthRx3HS1dayPauseFrames = _CurrentEthRx3HS1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 2),
    _CurrentEthRx3HS1dayPauseFrames_Type()
)
currentEthRx3HS1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayPauseFrames.setStatus("current")
_CurrentEthRx3HS1dayCrcFrames_Type = Counter64String
_CurrentEthRx3HS1dayCrcFrames_Object = MibTableColumn
currentEthRx3HS1dayCrcFrames = _CurrentEthRx3HS1dayCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 3),
    _CurrentEthRx3HS1dayCrcFrames_Type()
)
currentEthRx3HS1dayCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayCrcFrames.setStatus("current")
_CurrentEthRx3HS1dayBytes_Type = Counter64String
_CurrentEthRx3HS1dayBytes_Object = MibTableColumn
currentEthRx3HS1dayBytes = _CurrentEthRx3HS1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 4),
    _CurrentEthRx3HS1dayBytes_Type()
)
currentEthRx3HS1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytes.setStatus("current")
_CurrentEthRx3HS1dayBroadcastFramesRcv_Type = Counter64String
_CurrentEthRx3HS1dayBroadcastFramesRcv_Object = MibTableColumn
currentEthRx3HS1dayBroadcastFramesRcv = _CurrentEthRx3HS1dayBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 5),
    _CurrentEthRx3HS1dayBroadcastFramesRcv_Type()
)
currentEthRx3HS1dayBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBroadcastFramesRcv.setStatus("current")
_CurrentEthRx3HS1dayMulticastFramesRcv_Type = Counter64String
_CurrentEthRx3HS1dayMulticastFramesRcv_Object = MibTableColumn
currentEthRx3HS1dayMulticastFramesRcv = _CurrentEthRx3HS1dayMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 6),
    _CurrentEthRx3HS1dayMulticastFramesRcv_Type()
)
currentEthRx3HS1dayMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayMulticastFramesRcv.setStatus("current")
_CurrentEthRx3HS1dayUndersizedFramesRcv_Type = Counter64String
_CurrentEthRx3HS1dayUndersizedFramesRcv_Object = MibTableColumn
currentEthRx3HS1dayUndersizedFramesRcv = _CurrentEthRx3HS1dayUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 7),
    _CurrentEthRx3HS1dayUndersizedFramesRcv_Type()
)
currentEthRx3HS1dayUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayUndersizedFramesRcv.setStatus("current")
_CurrentEthRx3HS1dayOversizedFramesRcv_Type = Counter64String
_CurrentEthRx3HS1dayOversizedFramesRcv_Object = MibTableColumn
currentEthRx3HS1dayOversizedFramesRcv = _CurrentEthRx3HS1dayOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 8),
    _CurrentEthRx3HS1dayOversizedFramesRcv_Type()
)
currentEthRx3HS1dayOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayOversizedFramesRcv.setStatus("current")
_CurrentEthRx3HS1dayFragmentFramesRcv_Type = Counter64String
_CurrentEthRx3HS1dayFragmentFramesRcv_Object = MibTableColumn
currentEthRx3HS1dayFragmentFramesRcv = _CurrentEthRx3HS1dayFragmentFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 9),
    _CurrentEthRx3HS1dayFragmentFramesRcv_Type()
)
currentEthRx3HS1dayFragmentFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayFragmentFramesRcv.setStatus("current")
_CurrentEthRx3HS1dayJabberFrameRcv_Type = Counter64String
_CurrentEthRx3HS1dayJabberFrameRcv_Object = MibTableColumn
currentEthRx3HS1dayJabberFrameRcv = _CurrentEthRx3HS1dayJabberFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 10),
    _CurrentEthRx3HS1dayJabberFrameRcv_Type()
)
currentEthRx3HS1dayJabberFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayJabberFrameRcv.setStatus("current")
_CurrentEthRx3HS1dayControlFrameRcv_Type = Counter64String
_CurrentEthRx3HS1dayControlFrameRcv_Object = MibTableColumn
currentEthRx3HS1dayControlFrameRcv = _CurrentEthRx3HS1dayControlFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 11),
    _CurrentEthRx3HS1dayControlFrameRcv_Type()
)
currentEthRx3HS1dayControlFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayControlFrameRcv.setStatus("current")
_CurrentEthRx3HS1dayBytesFrames64Rcv_Type = Counter64String
_CurrentEthRx3HS1dayBytesFrames64Rcv_Object = MibTableColumn
currentEthRx3HS1dayBytesFrames64Rcv = _CurrentEthRx3HS1dayBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 12),
    _CurrentEthRx3HS1dayBytesFrames64Rcv_Type()
)
currentEthRx3HS1dayBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytesFrames64Rcv.setStatus("current")
_CurrentEthRx3HS1dayBytesFrames65Rcv_Type = Counter64String
_CurrentEthRx3HS1dayBytesFrames65Rcv_Object = MibTableColumn
currentEthRx3HS1dayBytesFrames65Rcv = _CurrentEthRx3HS1dayBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 13),
    _CurrentEthRx3HS1dayBytesFrames65Rcv_Type()
)
currentEthRx3HS1dayBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytesFrames65Rcv.setStatus("current")
_CurrentEthRx3HS1dayBytesFrames128Rcv_Type = Counter64String
_CurrentEthRx3HS1dayBytesFrames128Rcv_Object = MibTableColumn
currentEthRx3HS1dayBytesFrames128Rcv = _CurrentEthRx3HS1dayBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 14),
    _CurrentEthRx3HS1dayBytesFrames128Rcv_Type()
)
currentEthRx3HS1dayBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytesFrames128Rcv.setStatus("current")
_CurrentEthRx3HS1dayBytesFrames256Rcv_Type = Counter64String
_CurrentEthRx3HS1dayBytesFrames256Rcv_Object = MibTableColumn
currentEthRx3HS1dayBytesFrames256Rcv = _CurrentEthRx3HS1dayBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 15),
    _CurrentEthRx3HS1dayBytesFrames256Rcv_Type()
)
currentEthRx3HS1dayBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytesFrames256Rcv.setStatus("current")
_CurrentEthRx3HS1dayBytesFrames512Rcv_Type = Counter64String
_CurrentEthRx3HS1dayBytesFrames512Rcv_Object = MibTableColumn
currentEthRx3HS1dayBytesFrames512Rcv = _CurrentEthRx3HS1dayBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 16),
    _CurrentEthRx3HS1dayBytesFrames512Rcv_Type()
)
currentEthRx3HS1dayBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytesFrames512Rcv.setStatus("current")
_CurrentEthRx3HS1dayBytesFrames1024Rcv_Type = Counter64String
_CurrentEthRx3HS1dayBytesFrames1024Rcv_Object = MibTableColumn
currentEthRx3HS1dayBytesFrames1024Rcv = _CurrentEthRx3HS1dayBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 17),
    _CurrentEthRx3HS1dayBytesFrames1024Rcv_Type()
)
currentEthRx3HS1dayBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytesFrames1024Rcv.setStatus("current")
_CurrentEthRx3HS1dayBytesFrames1519Rcv_Type = Counter64String
_CurrentEthRx3HS1dayBytesFrames1519Rcv_Object = MibTableColumn
currentEthRx3HS1dayBytesFrames1519Rcv = _CurrentEthRx3HS1dayBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 18),
    _CurrentEthRx3HS1dayBytesFrames1519Rcv_Type()
)
currentEthRx3HS1dayBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayBytesFrames1519Rcv.setStatus("current")


class _CurrentEthRx3HS1dayElapsedTime_Type(Integer32):
    """Custom type currentEthRx3HS1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentEthRx3HS1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentEthRx3HS1dayElapsedTime_Object = MibTableColumn
currentEthRx3HS1dayElapsedTime = _CurrentEthRx3HS1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 183, 1, 19),
    _CurrentEthRx3HS1dayElapsedTime_Type()
)
currentEthRx3HS1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentEthRx3HS1dayElapsedTime.setStatus("current")
_IntervalEthRx3HS15minTable_Object = MibTable
intervalEthRx3HS15minTable = _IntervalEthRx3HS15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184)
)
if mibBuilder.loadTexts:
    intervalEthRx3HS15minTable.setStatus("current")
_IntervalEthRx3HS15minEntry_Object = MibTableRow
intervalEthRx3HS15minEntry = _IntervalEthRx3HS15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1)
)
intervalEthRx3HS15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRx3HS15minNumber"),
)
if mibBuilder.loadTexts:
    intervalEthRx3HS15minEntry.setStatus("current")


class _IntervalEthRx3HS15minNumber_Type(Integer32):
    """Custom type intervalEthRx3HS15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalEthRx3HS15minNumber_Type.__name__ = "Integer32"
_IntervalEthRx3HS15minNumber_Object = MibTableColumn
intervalEthRx3HS15minNumber = _IntervalEthRx3HS15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 1),
    _IntervalEthRx3HS15minNumber_Type()
)
intervalEthRx3HS15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minNumber.setStatus("current")
_IntervalEthRx3HS15minGoodFrames_Type = Counter64String
_IntervalEthRx3HS15minGoodFrames_Object = MibTableColumn
intervalEthRx3HS15minGoodFrames = _IntervalEthRx3HS15minGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 2),
    _IntervalEthRx3HS15minGoodFrames_Type()
)
intervalEthRx3HS15minGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minGoodFrames.setStatus("current")
_IntervalEthRx3HS15minPauseFrames_Type = Counter64String
_IntervalEthRx3HS15minPauseFrames_Object = MibTableColumn
intervalEthRx3HS15minPauseFrames = _IntervalEthRx3HS15minPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 3),
    _IntervalEthRx3HS15minPauseFrames_Type()
)
intervalEthRx3HS15minPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minPauseFrames.setStatus("current")
_IntervalEthRx3HS15minCrcFrames_Type = Counter64String
_IntervalEthRx3HS15minCrcFrames_Object = MibTableColumn
intervalEthRx3HS15minCrcFrames = _IntervalEthRx3HS15minCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 4),
    _IntervalEthRx3HS15minCrcFrames_Type()
)
intervalEthRx3HS15minCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minCrcFrames.setStatus("current")
_IntervalEthRx3HS15minBytes_Type = Counter64String
_IntervalEthRx3HS15minBytes_Object = MibTableColumn
intervalEthRx3HS15minBytes = _IntervalEthRx3HS15minBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 5),
    _IntervalEthRx3HS15minBytes_Type()
)
intervalEthRx3HS15minBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytes.setStatus("current")
_IntervalEthRx3HS15minBroadcastFramesRcv_Type = Counter64String
_IntervalEthRx3HS15minBroadcastFramesRcv_Object = MibTableColumn
intervalEthRx3HS15minBroadcastFramesRcv = _IntervalEthRx3HS15minBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 6),
    _IntervalEthRx3HS15minBroadcastFramesRcv_Type()
)
intervalEthRx3HS15minBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBroadcastFramesRcv.setStatus("current")
_IntervalEthRx3HS15minMulticastFramesRcv_Type = Counter64String
_IntervalEthRx3HS15minMulticastFramesRcv_Object = MibTableColumn
intervalEthRx3HS15minMulticastFramesRcv = _IntervalEthRx3HS15minMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 7),
    _IntervalEthRx3HS15minMulticastFramesRcv_Type()
)
intervalEthRx3HS15minMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minMulticastFramesRcv.setStatus("current")
_IntervalEthRx3HS15minUndersizedFramesRcv_Type = Counter64String
_IntervalEthRx3HS15minUndersizedFramesRcv_Object = MibTableColumn
intervalEthRx3HS15minUndersizedFramesRcv = _IntervalEthRx3HS15minUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 8),
    _IntervalEthRx3HS15minUndersizedFramesRcv_Type()
)
intervalEthRx3HS15minUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minUndersizedFramesRcv.setStatus("current")
_IntervalEthRx3HS15minOversizedFramesRcv_Type = Counter64String
_IntervalEthRx3HS15minOversizedFramesRcv_Object = MibTableColumn
intervalEthRx3HS15minOversizedFramesRcv = _IntervalEthRx3HS15minOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 9),
    _IntervalEthRx3HS15minOversizedFramesRcv_Type()
)
intervalEthRx3HS15minOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minOversizedFramesRcv.setStatus("current")
_IntervalEthRx3HS15minFragmentFramesRcv_Type = Counter64String
_IntervalEthRx3HS15minFragmentFramesRcv_Object = MibTableColumn
intervalEthRx3HS15minFragmentFramesRcv = _IntervalEthRx3HS15minFragmentFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 10),
    _IntervalEthRx3HS15minFragmentFramesRcv_Type()
)
intervalEthRx3HS15minFragmentFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minFragmentFramesRcv.setStatus("current")
_IntervalEthRx3HS15minJabberFrameRcv_Type = Counter64String
_IntervalEthRx3HS15minJabberFrameRcv_Object = MibTableColumn
intervalEthRx3HS15minJabberFrameRcv = _IntervalEthRx3HS15minJabberFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 11),
    _IntervalEthRx3HS15minJabberFrameRcv_Type()
)
intervalEthRx3HS15minJabberFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minJabberFrameRcv.setStatus("current")
_IntervalEthRx3HS15minControlFrameRcv_Type = Counter64String
_IntervalEthRx3HS15minControlFrameRcv_Object = MibTableColumn
intervalEthRx3HS15minControlFrameRcv = _IntervalEthRx3HS15minControlFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 12),
    _IntervalEthRx3HS15minControlFrameRcv_Type()
)
intervalEthRx3HS15minControlFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minControlFrameRcv.setStatus("current")
_IntervalEthRx3HS15minBytesFrames64Rcv_Type = Counter64String
_IntervalEthRx3HS15minBytesFrames64Rcv_Object = MibTableColumn
intervalEthRx3HS15minBytesFrames64Rcv = _IntervalEthRx3HS15minBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 13),
    _IntervalEthRx3HS15minBytesFrames64Rcv_Type()
)
intervalEthRx3HS15minBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytesFrames64Rcv.setStatus("current")
_IntervalEthRx3HS15minBytesFrames65Rcv_Type = Counter64String
_IntervalEthRx3HS15minBytesFrames65Rcv_Object = MibTableColumn
intervalEthRx3HS15minBytesFrames65Rcv = _IntervalEthRx3HS15minBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 14),
    _IntervalEthRx3HS15minBytesFrames65Rcv_Type()
)
intervalEthRx3HS15minBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytesFrames65Rcv.setStatus("current")
_IntervalEthRx3HS15minBytesFrames128Rcv_Type = Counter64String
_IntervalEthRx3HS15minBytesFrames128Rcv_Object = MibTableColumn
intervalEthRx3HS15minBytesFrames128Rcv = _IntervalEthRx3HS15minBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 15),
    _IntervalEthRx3HS15minBytesFrames128Rcv_Type()
)
intervalEthRx3HS15minBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytesFrames128Rcv.setStatus("current")
_IntervalEthRx3HS15minBytesFrames256Rcv_Type = Counter64String
_IntervalEthRx3HS15minBytesFrames256Rcv_Object = MibTableColumn
intervalEthRx3HS15minBytesFrames256Rcv = _IntervalEthRx3HS15minBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 16),
    _IntervalEthRx3HS15minBytesFrames256Rcv_Type()
)
intervalEthRx3HS15minBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytesFrames256Rcv.setStatus("current")
_IntervalEthRx3HS15minBytesFrames512Rcv_Type = Counter64String
_IntervalEthRx3HS15minBytesFrames512Rcv_Object = MibTableColumn
intervalEthRx3HS15minBytesFrames512Rcv = _IntervalEthRx3HS15minBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 17),
    _IntervalEthRx3HS15minBytesFrames512Rcv_Type()
)
intervalEthRx3HS15minBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytesFrames512Rcv.setStatus("current")
_IntervalEthRx3HS15minBytesFrames1024Rcv_Type = Counter64String
_IntervalEthRx3HS15minBytesFrames1024Rcv_Object = MibTableColumn
intervalEthRx3HS15minBytesFrames1024Rcv = _IntervalEthRx3HS15minBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 18),
    _IntervalEthRx3HS15minBytesFrames1024Rcv_Type()
)
intervalEthRx3HS15minBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytesFrames1024Rcv.setStatus("current")
_IntervalEthRx3HS15minBytesFrames1519Rcv_Type = Counter64String
_IntervalEthRx3HS15minBytesFrames1519Rcv_Object = MibTableColumn
intervalEthRx3HS15minBytesFrames1519Rcv = _IntervalEthRx3HS15minBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 19),
    _IntervalEthRx3HS15minBytesFrames1519Rcv_Type()
)
intervalEthRx3HS15minBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minBytesFrames1519Rcv.setStatus("current")
_IntervalEthRx3HS15minValidFlag_Type = TruthValue
_IntervalEthRx3HS15minValidFlag_Object = MibTableColumn
intervalEthRx3HS15minValidFlag = _IntervalEthRx3HS15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 20),
    _IntervalEthRx3HS15minValidFlag_Type()
)
intervalEthRx3HS15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minValidFlag.setStatus("current")
_IntervalEthRx3HS15minTimeStamp_Type = DateAndTime
_IntervalEthRx3HS15minTimeStamp_Object = MibTableColumn
intervalEthRx3HS15minTimeStamp = _IntervalEthRx3HS15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 184, 1, 21),
    _IntervalEthRx3HS15minTimeStamp_Type()
)
intervalEthRx3HS15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS15minTimeStamp.setStatus("current")
_IntervalEthRx3HS1dayTable_Object = MibTable
intervalEthRx3HS1dayTable = _IntervalEthRx3HS1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185)
)
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayTable.setStatus("current")
_IntervalEthRx3HS1dayEntry_Object = MibTableRow
intervalEthRx3HS1dayEntry = _IntervalEthRx3HS1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1)
)
intervalEthRx3HS1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalEthRx3HS1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayEntry.setStatus("current")


class _IntervalEthRx3HS1dayNumber_Type(Integer32):
    """Custom type intervalEthRx3HS1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalEthRx3HS1dayNumber_Type.__name__ = "Integer32"
_IntervalEthRx3HS1dayNumber_Object = MibTableColumn
intervalEthRx3HS1dayNumber = _IntervalEthRx3HS1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 1),
    _IntervalEthRx3HS1dayNumber_Type()
)
intervalEthRx3HS1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayNumber.setStatus("current")
_IntervalEthRx3HS1dayGoodFrames_Type = Counter64String
_IntervalEthRx3HS1dayGoodFrames_Object = MibTableColumn
intervalEthRx3HS1dayGoodFrames = _IntervalEthRx3HS1dayGoodFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 2),
    _IntervalEthRx3HS1dayGoodFrames_Type()
)
intervalEthRx3HS1dayGoodFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayGoodFrames.setStatus("current")
_IntervalEthRx3HS1dayPauseFrames_Type = Counter64String
_IntervalEthRx3HS1dayPauseFrames_Object = MibTableColumn
intervalEthRx3HS1dayPauseFrames = _IntervalEthRx3HS1dayPauseFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 3),
    _IntervalEthRx3HS1dayPauseFrames_Type()
)
intervalEthRx3HS1dayPauseFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayPauseFrames.setStatus("current")
_IntervalEthRx3HS1dayCrcFrames_Type = Counter64String
_IntervalEthRx3HS1dayCrcFrames_Object = MibTableColumn
intervalEthRx3HS1dayCrcFrames = _IntervalEthRx3HS1dayCrcFrames_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 4),
    _IntervalEthRx3HS1dayCrcFrames_Type()
)
intervalEthRx3HS1dayCrcFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayCrcFrames.setStatus("current")
_IntervalEthRx3HS1dayBytes_Type = Counter64String
_IntervalEthRx3HS1dayBytes_Object = MibTableColumn
intervalEthRx3HS1dayBytes = _IntervalEthRx3HS1dayBytes_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 5),
    _IntervalEthRx3HS1dayBytes_Type()
)
intervalEthRx3HS1dayBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytes.setStatus("current")
_IntervalEthRx3HS1dayBroadcastFramesRcv_Type = Counter64String
_IntervalEthRx3HS1dayBroadcastFramesRcv_Object = MibTableColumn
intervalEthRx3HS1dayBroadcastFramesRcv = _IntervalEthRx3HS1dayBroadcastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 6),
    _IntervalEthRx3HS1dayBroadcastFramesRcv_Type()
)
intervalEthRx3HS1dayBroadcastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBroadcastFramesRcv.setStatus("current")
_IntervalEthRx3HS1dayMulticastFramesRcv_Type = Counter64String
_IntervalEthRx3HS1dayMulticastFramesRcv_Object = MibTableColumn
intervalEthRx3HS1dayMulticastFramesRcv = _IntervalEthRx3HS1dayMulticastFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 7),
    _IntervalEthRx3HS1dayMulticastFramesRcv_Type()
)
intervalEthRx3HS1dayMulticastFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayMulticastFramesRcv.setStatus("current")
_IntervalEthRx3HS1dayUndersizedFramesRcv_Type = Counter64String
_IntervalEthRx3HS1dayUndersizedFramesRcv_Object = MibTableColumn
intervalEthRx3HS1dayUndersizedFramesRcv = _IntervalEthRx3HS1dayUndersizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 8),
    _IntervalEthRx3HS1dayUndersizedFramesRcv_Type()
)
intervalEthRx3HS1dayUndersizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayUndersizedFramesRcv.setStatus("current")
_IntervalEthRx3HS1dayOversizedFramesRcv_Type = Counter64String
_IntervalEthRx3HS1dayOversizedFramesRcv_Object = MibTableColumn
intervalEthRx3HS1dayOversizedFramesRcv = _IntervalEthRx3HS1dayOversizedFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 9),
    _IntervalEthRx3HS1dayOversizedFramesRcv_Type()
)
intervalEthRx3HS1dayOversizedFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayOversizedFramesRcv.setStatus("current")
_IntervalEthRx3HS1dayFragmentFramesRcv_Type = Counter64String
_IntervalEthRx3HS1dayFragmentFramesRcv_Object = MibTableColumn
intervalEthRx3HS1dayFragmentFramesRcv = _IntervalEthRx3HS1dayFragmentFramesRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 10),
    _IntervalEthRx3HS1dayFragmentFramesRcv_Type()
)
intervalEthRx3HS1dayFragmentFramesRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayFragmentFramesRcv.setStatus("current")
_IntervalEthRx3HS1dayJabberFrameRcv_Type = Counter64String
_IntervalEthRx3HS1dayJabberFrameRcv_Object = MibTableColumn
intervalEthRx3HS1dayJabberFrameRcv = _IntervalEthRx3HS1dayJabberFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 11),
    _IntervalEthRx3HS1dayJabberFrameRcv_Type()
)
intervalEthRx3HS1dayJabberFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayJabberFrameRcv.setStatus("current")
_IntervalEthRx3HS1dayControlFrameRcv_Type = Counter64String
_IntervalEthRx3HS1dayControlFrameRcv_Object = MibTableColumn
intervalEthRx3HS1dayControlFrameRcv = _IntervalEthRx3HS1dayControlFrameRcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 12),
    _IntervalEthRx3HS1dayControlFrameRcv_Type()
)
intervalEthRx3HS1dayControlFrameRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayControlFrameRcv.setStatus("current")
_IntervalEthRx3HS1dayBytesFrames64Rcv_Type = Counter64String
_IntervalEthRx3HS1dayBytesFrames64Rcv_Object = MibTableColumn
intervalEthRx3HS1dayBytesFrames64Rcv = _IntervalEthRx3HS1dayBytesFrames64Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 13),
    _IntervalEthRx3HS1dayBytesFrames64Rcv_Type()
)
intervalEthRx3HS1dayBytesFrames64Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytesFrames64Rcv.setStatus("current")
_IntervalEthRx3HS1dayBytesFrames65Rcv_Type = Counter64String
_IntervalEthRx3HS1dayBytesFrames65Rcv_Object = MibTableColumn
intervalEthRx3HS1dayBytesFrames65Rcv = _IntervalEthRx3HS1dayBytesFrames65Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 14),
    _IntervalEthRx3HS1dayBytesFrames65Rcv_Type()
)
intervalEthRx3HS1dayBytesFrames65Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytesFrames65Rcv.setStatus("current")
_IntervalEthRx3HS1dayBytesFrames128Rcv_Type = Counter64String
_IntervalEthRx3HS1dayBytesFrames128Rcv_Object = MibTableColumn
intervalEthRx3HS1dayBytesFrames128Rcv = _IntervalEthRx3HS1dayBytesFrames128Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 15),
    _IntervalEthRx3HS1dayBytesFrames128Rcv_Type()
)
intervalEthRx3HS1dayBytesFrames128Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytesFrames128Rcv.setStatus("current")
_IntervalEthRx3HS1dayBytesFrames256Rcv_Type = Counter64String
_IntervalEthRx3HS1dayBytesFrames256Rcv_Object = MibTableColumn
intervalEthRx3HS1dayBytesFrames256Rcv = _IntervalEthRx3HS1dayBytesFrames256Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 16),
    _IntervalEthRx3HS1dayBytesFrames256Rcv_Type()
)
intervalEthRx3HS1dayBytesFrames256Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytesFrames256Rcv.setStatus("current")
_IntervalEthRx3HS1dayBytesFrames512Rcv_Type = Counter64String
_IntervalEthRx3HS1dayBytesFrames512Rcv_Object = MibTableColumn
intervalEthRx3HS1dayBytesFrames512Rcv = _IntervalEthRx3HS1dayBytesFrames512Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 17),
    _IntervalEthRx3HS1dayBytesFrames512Rcv_Type()
)
intervalEthRx3HS1dayBytesFrames512Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytesFrames512Rcv.setStatus("current")
_IntervalEthRx3HS1dayBytesFrames1024Rcv_Type = Counter64String
_IntervalEthRx3HS1dayBytesFrames1024Rcv_Object = MibTableColumn
intervalEthRx3HS1dayBytesFrames1024Rcv = _IntervalEthRx3HS1dayBytesFrames1024Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 18),
    _IntervalEthRx3HS1dayBytesFrames1024Rcv_Type()
)
intervalEthRx3HS1dayBytesFrames1024Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytesFrames1024Rcv.setStatus("current")
_IntervalEthRx3HS1dayBytesFrames1519Rcv_Type = Counter64String
_IntervalEthRx3HS1dayBytesFrames1519Rcv_Object = MibTableColumn
intervalEthRx3HS1dayBytesFrames1519Rcv = _IntervalEthRx3HS1dayBytesFrames1519Rcv_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 19),
    _IntervalEthRx3HS1dayBytesFrames1519Rcv_Type()
)
intervalEthRx3HS1dayBytesFrames1519Rcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayBytesFrames1519Rcv.setStatus("current")
_IntervalEthRx3HS1dayValidFlag_Type = TruthValue
_IntervalEthRx3HS1dayValidFlag_Object = MibTableColumn
intervalEthRx3HS1dayValidFlag = _IntervalEthRx3HS1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 20),
    _IntervalEthRx3HS1dayValidFlag_Type()
)
intervalEthRx3HS1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayValidFlag.setStatus("current")
_IntervalEthRx3HS1dayTimeStamp_Type = DateAndTime
_IntervalEthRx3HS1dayTimeStamp_Object = MibTableColumn
intervalEthRx3HS1dayTimeStamp = _IntervalEthRx3HS1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 185, 1, 21),
    _IntervalEthRx3HS1dayTimeStamp_Type()
)
intervalEthRx3HS1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalEthRx3HS1dayTimeStamp.setStatus("current")
_IntervalPhysPerfSkew15minTable_Object = MibTable
intervalPhysPerfSkew15minTable = _IntervalPhysPerfSkew15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186)
)
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minTable.setStatus("current")
_IntervalPhysPerfSkew15minEntry_Object = MibTableRow
intervalPhysPerfSkew15minEntry = _IntervalPhysPerfSkew15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186, 1)
)
intervalPhysPerfSkew15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfSkew15minNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minEntry.setStatus("current")


class _IntervalPhysPerfSkew15minNumber_Type(Integer32):
    """Custom type intervalPhysPerfSkew15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalPhysPerfSkew15minNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfSkew15minNumber_Object = MibTableColumn
intervalPhysPerfSkew15minNumber = _IntervalPhysPerfSkew15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186, 1, 1),
    _IntervalPhysPerfSkew15minNumber_Type()
)
intervalPhysPerfSkew15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minNumber.setStatus("current")
_IntervalPhysPerfSkew15minLow_Type = Integer32
_IntervalPhysPerfSkew15minLow_Object = MibTableColumn
intervalPhysPerfSkew15minLow = _IntervalPhysPerfSkew15minLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186, 1, 2),
    _IntervalPhysPerfSkew15minLow_Type()
)
intervalPhysPerfSkew15minLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minLow.setUnits("ns")
_IntervalPhysPerfSkew15minMean_Type = Integer32
_IntervalPhysPerfSkew15minMean_Object = MibTableColumn
intervalPhysPerfSkew15minMean = _IntervalPhysPerfSkew15minMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186, 1, 3),
    _IntervalPhysPerfSkew15minMean_Type()
)
intervalPhysPerfSkew15minMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minMean.setUnits("ns")
_IntervalPhysPerfSkew15minHigh_Type = Integer32
_IntervalPhysPerfSkew15minHigh_Object = MibTableColumn
intervalPhysPerfSkew15minHigh = _IntervalPhysPerfSkew15minHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186, 1, 4),
    _IntervalPhysPerfSkew15minHigh_Type()
)
intervalPhysPerfSkew15minHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minHigh.setUnits("ns")
_IntervalPhysPerfSkew15minValidFlag_Type = TruthValue
_IntervalPhysPerfSkew15minValidFlag_Object = MibTableColumn
intervalPhysPerfSkew15minValidFlag = _IntervalPhysPerfSkew15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186, 1, 5),
    _IntervalPhysPerfSkew15minValidFlag_Type()
)
intervalPhysPerfSkew15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minValidFlag.setStatus("current")
_IntervalPhysPerfSkew15minTimeStamp_Type = DateAndTime
_IntervalPhysPerfSkew15minTimeStamp_Object = MibTableColumn
intervalPhysPerfSkew15minTimeStamp = _IntervalPhysPerfSkew15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 186, 1, 6),
    _IntervalPhysPerfSkew15minTimeStamp_Type()
)
intervalPhysPerfSkew15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew15minTimeStamp.setStatus("current")
_IntervalPhysPerfSkew1dayTable_Object = MibTable
intervalPhysPerfSkew1dayTable = _IntervalPhysPerfSkew1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187)
)
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayTable.setStatus("current")
_IntervalPhysPerfSkew1dayEntry_Object = MibTableRow
intervalPhysPerfSkew1dayEntry = _IntervalPhysPerfSkew1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187, 1)
)
intervalPhysPerfSkew1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfSkew1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayEntry.setStatus("current")


class _IntervalPhysPerfSkew1dayNumber_Type(Integer32):
    """Custom type intervalPhysPerfSkew1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalPhysPerfSkew1dayNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfSkew1dayNumber_Object = MibTableColumn
intervalPhysPerfSkew1dayNumber = _IntervalPhysPerfSkew1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187, 1, 1),
    _IntervalPhysPerfSkew1dayNumber_Type()
)
intervalPhysPerfSkew1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayNumber.setStatus("current")
_IntervalPhysPerfSkew1dayLow_Type = Integer32
_IntervalPhysPerfSkew1dayLow_Object = MibTableColumn
intervalPhysPerfSkew1dayLow = _IntervalPhysPerfSkew1dayLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187, 1, 2),
    _IntervalPhysPerfSkew1dayLow_Type()
)
intervalPhysPerfSkew1dayLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayLow.setUnits("ns")
_IntervalPhysPerfSkew1dayMean_Type = Integer32
_IntervalPhysPerfSkew1dayMean_Object = MibTableColumn
intervalPhysPerfSkew1dayMean = _IntervalPhysPerfSkew1dayMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187, 1, 3),
    _IntervalPhysPerfSkew1dayMean_Type()
)
intervalPhysPerfSkew1dayMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayMean.setUnits("ns")
_IntervalPhysPerfSkew1dayHigh_Type = Integer32
_IntervalPhysPerfSkew1dayHigh_Object = MibTableColumn
intervalPhysPerfSkew1dayHigh = _IntervalPhysPerfSkew1dayHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187, 1, 4),
    _IntervalPhysPerfSkew1dayHigh_Type()
)
intervalPhysPerfSkew1dayHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayHigh.setUnits("ns")
_IntervalPhysPerfSkew1dayValidFlag_Type = TruthValue
_IntervalPhysPerfSkew1dayValidFlag_Object = MibTableColumn
intervalPhysPerfSkew1dayValidFlag = _IntervalPhysPerfSkew1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187, 1, 5),
    _IntervalPhysPerfSkew1dayValidFlag_Type()
)
intervalPhysPerfSkew1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayValidFlag.setStatus("current")
_IntervalPhysPerfSkew1dayTimeStamp_Type = DateAndTime
_IntervalPhysPerfSkew1dayTimeStamp_Object = MibTableColumn
intervalPhysPerfSkew1dayTimeStamp = _IntervalPhysPerfSkew1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 187, 1, 6),
    _IntervalPhysPerfSkew1dayTimeStamp_Type()
)
intervalPhysPerfSkew1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1dayTimeStamp.setStatus("current")
_IntervalPhysPerfSkew1weekTable_Object = MibTable
intervalPhysPerfSkew1weekTable = _IntervalPhysPerfSkew1weekTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188)
)
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekTable.setStatus("current")
_IntervalPhysPerfSkew1weekEntry_Object = MibTableRow
intervalPhysPerfSkew1weekEntry = _IntervalPhysPerfSkew1weekEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188, 1)
)
intervalPhysPerfSkew1weekEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalPhysPerfSkew1weekNumber"),
)
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekEntry.setStatus("current")


class _IntervalPhysPerfSkew1weekNumber_Type(Integer32):
    """Custom type intervalPhysPerfSkew1weekNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 52),
    )


_IntervalPhysPerfSkew1weekNumber_Type.__name__ = "Integer32"
_IntervalPhysPerfSkew1weekNumber_Object = MibTableColumn
intervalPhysPerfSkew1weekNumber = _IntervalPhysPerfSkew1weekNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188, 1, 1),
    _IntervalPhysPerfSkew1weekNumber_Type()
)
intervalPhysPerfSkew1weekNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekNumber.setStatus("current")
_IntervalPhysPerfSkew1weekLow_Type = Integer32
_IntervalPhysPerfSkew1weekLow_Object = MibTableColumn
intervalPhysPerfSkew1weekLow = _IntervalPhysPerfSkew1weekLow_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188, 1, 2),
    _IntervalPhysPerfSkew1weekLow_Type()
)
intervalPhysPerfSkew1weekLow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekLow.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekLow.setUnits("ns")
_IntervalPhysPerfSkew1weekMean_Type = Integer32
_IntervalPhysPerfSkew1weekMean_Object = MibTableColumn
intervalPhysPerfSkew1weekMean = _IntervalPhysPerfSkew1weekMean_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188, 1, 3),
    _IntervalPhysPerfSkew1weekMean_Type()
)
intervalPhysPerfSkew1weekMean.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekMean.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekMean.setUnits("ns")
_IntervalPhysPerfSkew1weekHigh_Type = Integer32
_IntervalPhysPerfSkew1weekHigh_Object = MibTableColumn
intervalPhysPerfSkew1weekHigh = _IntervalPhysPerfSkew1weekHigh_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188, 1, 4),
    _IntervalPhysPerfSkew1weekHigh_Type()
)
intervalPhysPerfSkew1weekHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekHigh.setStatus("current")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekHigh.setUnits("ns")
_IntervalPhysPerfSkew1weekValidFlag_Type = TruthValue
_IntervalPhysPerfSkew1weekValidFlag_Object = MibTableColumn
intervalPhysPerfSkew1weekValidFlag = _IntervalPhysPerfSkew1weekValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188, 1, 5),
    _IntervalPhysPerfSkew1weekValidFlag_Type()
)
intervalPhysPerfSkew1weekValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekValidFlag.setStatus("current")
_IntervalPhysPerfSkew1weekTimeStamp_Type = DateAndTime
_IntervalPhysPerfSkew1weekTimeStamp_Object = MibTableColumn
intervalPhysPerfSkew1weekTimeStamp = _IntervalPhysPerfSkew1weekTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 188, 1, 6),
    _IntervalPhysPerfSkew1weekTimeStamp_Type()
)
intervalPhysPerfSkew1weekTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalPhysPerfSkew1weekTimeStamp.setStatus("current")
_CurrentType4PhysCodingLayer15minTable_Object = MibTable
currentType4PhysCodingLayer15minTable = _CurrentType4PhysCodingLayer15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 189)
)
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer15minTable.setStatus("current")
_CurrentType4PhysCodingLayer15minEntry_Object = MibTableRow
currentType4PhysCodingLayer15minEntry = _CurrentType4PhysCodingLayer15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 189, 1)
)
currentType4PhysCodingLayer15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer15minEntry.setStatus("current")
_CurrentType4PhysCodingLayer15minES_Type = Unsigned32
_CurrentType4PhysCodingLayer15minES_Object = MibTableColumn
currentType4PhysCodingLayer15minES = _CurrentType4PhysCodingLayer15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 189, 1, 1),
    _CurrentType4PhysCodingLayer15minES_Type()
)
currentType4PhysCodingLayer15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer15minES.setStatus("current")
_CurrentType4PhysCodingLayer15minCV_Type = Counter64String
_CurrentType4PhysCodingLayer15minCV_Object = MibTableColumn
currentType4PhysCodingLayer15minCV = _CurrentType4PhysCodingLayer15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 189, 1, 2),
    _CurrentType4PhysCodingLayer15minCV_Type()
)
currentType4PhysCodingLayer15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer15minCV.setStatus("current")
_CurrentType4PhysCodingLayer15minBBE_Type = Counter64String
_CurrentType4PhysCodingLayer15minBBE_Object = MibTableColumn
currentType4PhysCodingLayer15minBBE = _CurrentType4PhysCodingLayer15minBBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 189, 1, 3),
    _CurrentType4PhysCodingLayer15minBBE_Type()
)
currentType4PhysCodingLayer15minBBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer15minBBE.setStatus("current")


class _CurrentType4PhysCodingLayer15minElapsedTime_Type(Integer32):
    """Custom type currentType4PhysCodingLayer15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentType4PhysCodingLayer15minElapsedTime_Type.__name__ = "Integer32"
_CurrentType4PhysCodingLayer15minElapsedTime_Object = MibTableColumn
currentType4PhysCodingLayer15minElapsedTime = _CurrentType4PhysCodingLayer15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 189, 1, 4),
    _CurrentType4PhysCodingLayer15minElapsedTime_Type()
)
currentType4PhysCodingLayer15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer15minElapsedTime.setStatus("current")
_CurrentType4PhysCodingLayer1dayTable_Object = MibTable
currentType4PhysCodingLayer1dayTable = _CurrentType4PhysCodingLayer1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 190)
)
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer1dayTable.setStatus("current")
_CurrentType4PhysCodingLayer1dayEntry_Object = MibTableRow
currentType4PhysCodingLayer1dayEntry = _CurrentType4PhysCodingLayer1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 190, 1)
)
currentType4PhysCodingLayer1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer1dayEntry.setStatus("current")
_CurrentType4PhysCodingLayer1dayES_Type = Unsigned32
_CurrentType4PhysCodingLayer1dayES_Object = MibTableColumn
currentType4PhysCodingLayer1dayES = _CurrentType4PhysCodingLayer1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 190, 1, 1),
    _CurrentType4PhysCodingLayer1dayES_Type()
)
currentType4PhysCodingLayer1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer1dayES.setStatus("current")
_CurrentType4PhysCodingLayer1dayCV_Type = Counter64String
_CurrentType4PhysCodingLayer1dayCV_Object = MibTableColumn
currentType4PhysCodingLayer1dayCV = _CurrentType4PhysCodingLayer1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 190, 1, 2),
    _CurrentType4PhysCodingLayer1dayCV_Type()
)
currentType4PhysCodingLayer1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer1dayCV.setStatus("current")
_CurrentType4PhysCodingLayer1dayBBE_Type = Counter64String
_CurrentType4PhysCodingLayer1dayBBE_Object = MibTableColumn
currentType4PhysCodingLayer1dayBBE = _CurrentType4PhysCodingLayer1dayBBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 190, 1, 3),
    _CurrentType4PhysCodingLayer1dayBBE_Type()
)
currentType4PhysCodingLayer1dayBBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer1dayBBE.setStatus("current")


class _CurrentType4PhysCodingLayer1dayElapsedTime_Type(Integer32):
    """Custom type currentType4PhysCodingLayer1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentType4PhysCodingLayer1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentType4PhysCodingLayer1dayElapsedTime_Object = MibTableColumn
currentType4PhysCodingLayer1dayElapsedTime = _CurrentType4PhysCodingLayer1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 190, 1, 4),
    _CurrentType4PhysCodingLayer1dayElapsedTime_Type()
)
currentType4PhysCodingLayer1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentType4PhysCodingLayer1dayElapsedTime.setStatus("current")
_IntervalType4PhysCodingLayer15minTable_Object = MibTable
intervalType4PhysCodingLayer15minTable = _IntervalType4PhysCodingLayer15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191)
)
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minTable.setStatus("current")
_IntervalType4PhysCodingLayer15minEntry_Object = MibTableRow
intervalType4PhysCodingLayer15minEntry = _IntervalType4PhysCodingLayer15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191, 1)
)
intervalType4PhysCodingLayer15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalType4PhysCodingLayer15minNumber"),
)
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minEntry.setStatus("current")


class _IntervalType4PhysCodingLayer15minNumber_Type(Integer32):
    """Custom type intervalType4PhysCodingLayer15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalType4PhysCodingLayer15minNumber_Type.__name__ = "Integer32"
_IntervalType4PhysCodingLayer15minNumber_Object = MibTableColumn
intervalType4PhysCodingLayer15minNumber = _IntervalType4PhysCodingLayer15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191, 1, 1),
    _IntervalType4PhysCodingLayer15minNumber_Type()
)
intervalType4PhysCodingLayer15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minNumber.setStatus("current")
_IntervalType4PhysCodingLayer15minES_Type = Unsigned32
_IntervalType4PhysCodingLayer15minES_Object = MibTableColumn
intervalType4PhysCodingLayer15minES = _IntervalType4PhysCodingLayer15minES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191, 1, 2),
    _IntervalType4PhysCodingLayer15minES_Type()
)
intervalType4PhysCodingLayer15minES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minES.setStatus("current")
_IntervalType4PhysCodingLayer15minCV_Type = Counter64String
_IntervalType4PhysCodingLayer15minCV_Object = MibTableColumn
intervalType4PhysCodingLayer15minCV = _IntervalType4PhysCodingLayer15minCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191, 1, 3),
    _IntervalType4PhysCodingLayer15minCV_Type()
)
intervalType4PhysCodingLayer15minCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minCV.setStatus("current")
_IntervalType4PhysCodingLayer15minBBE_Type = Counter64String
_IntervalType4PhysCodingLayer15minBBE_Object = MibTableColumn
intervalType4PhysCodingLayer15minBBE = _IntervalType4PhysCodingLayer15minBBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191, 1, 4),
    _IntervalType4PhysCodingLayer15minBBE_Type()
)
intervalType4PhysCodingLayer15minBBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minBBE.setStatus("current")
_IntervalType4PhysCodingLayer15minValidFlag_Type = TruthValue
_IntervalType4PhysCodingLayer15minValidFlag_Object = MibTableColumn
intervalType4PhysCodingLayer15minValidFlag = _IntervalType4PhysCodingLayer15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191, 1, 5),
    _IntervalType4PhysCodingLayer15minValidFlag_Type()
)
intervalType4PhysCodingLayer15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minValidFlag.setStatus("current")
_IntervalType4PhysCodingLayer15minTimeStamp_Type = DateAndTime
_IntervalType4PhysCodingLayer15minTimeStamp_Object = MibTableColumn
intervalType4PhysCodingLayer15minTimeStamp = _IntervalType4PhysCodingLayer15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 191, 1, 6),
    _IntervalType4PhysCodingLayer15minTimeStamp_Type()
)
intervalType4PhysCodingLayer15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer15minTimeStamp.setStatus("current")
_IntervalType4PhysCodingLayer1dayTable_Object = MibTable
intervalType4PhysCodingLayer1dayTable = _IntervalType4PhysCodingLayer1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192)
)
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayTable.setStatus("current")
_IntervalType4PhysCodingLayer1dayEntry_Object = MibTableRow
intervalType4PhysCodingLayer1dayEntry = _IntervalType4PhysCodingLayer1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192, 1)
)
intervalType4PhysCodingLayer1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalType4PhysCodingLayer1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayEntry.setStatus("current")


class _IntervalType4PhysCodingLayer1dayNumber_Type(Integer32):
    """Custom type intervalType4PhysCodingLayer1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalType4PhysCodingLayer1dayNumber_Type.__name__ = "Integer32"
_IntervalType4PhysCodingLayer1dayNumber_Object = MibTableColumn
intervalType4PhysCodingLayer1dayNumber = _IntervalType4PhysCodingLayer1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192, 1, 1),
    _IntervalType4PhysCodingLayer1dayNumber_Type()
)
intervalType4PhysCodingLayer1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayNumber.setStatus("current")
_IntervalType4PhysCodingLayer1dayES_Type = Unsigned32
_IntervalType4PhysCodingLayer1dayES_Object = MibTableColumn
intervalType4PhysCodingLayer1dayES = _IntervalType4PhysCodingLayer1dayES_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192, 1, 2),
    _IntervalType4PhysCodingLayer1dayES_Type()
)
intervalType4PhysCodingLayer1dayES.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayES.setStatus("current")
_IntervalType4PhysCodingLayer1dayCV_Type = Counter64String
_IntervalType4PhysCodingLayer1dayCV_Object = MibTableColumn
intervalType4PhysCodingLayer1dayCV = _IntervalType4PhysCodingLayer1dayCV_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192, 1, 3),
    _IntervalType4PhysCodingLayer1dayCV_Type()
)
intervalType4PhysCodingLayer1dayCV.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayCV.setStatus("current")
_IntervalType4PhysCodingLayer1dayBBE_Type = Counter64String
_IntervalType4PhysCodingLayer1dayBBE_Object = MibTableColumn
intervalType4PhysCodingLayer1dayBBE = _IntervalType4PhysCodingLayer1dayBBE_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192, 1, 4),
    _IntervalType4PhysCodingLayer1dayBBE_Type()
)
intervalType4PhysCodingLayer1dayBBE.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayBBE.setStatus("current")
_IntervalType4PhysCodingLayer1dayValidFlag_Type = TruthValue
_IntervalType4PhysCodingLayer1dayValidFlag_Object = MibTableColumn
intervalType4PhysCodingLayer1dayValidFlag = _IntervalType4PhysCodingLayer1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192, 1, 5),
    _IntervalType4PhysCodingLayer1dayValidFlag_Type()
)
intervalType4PhysCodingLayer1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayValidFlag.setStatus("current")
_IntervalType4PhysCodingLayer1dayTimeStamp_Type = DateAndTime
_IntervalType4PhysCodingLayer1dayTimeStamp_Object = MibTableColumn
intervalType4PhysCodingLayer1dayTimeStamp = _IntervalType4PhysCodingLayer1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 2, 192, 1, 6),
    _IntervalType4PhysCodingLayer1dayTimeStamp_Type()
)
intervalType4PhysCodingLayer1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalType4PhysCodingLayer1dayTimeStamp.setStatus("current")
_ThresholdDefectSecondsTable_Object = MibTable
thresholdDefectSecondsTable = _ThresholdDefectSecondsTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 14)
)
if mibBuilder.loadTexts:
    thresholdDefectSecondsTable.setStatus("current")
_ThresholdDefectSecondsEntry_Object = MibTableRow
thresholdDefectSecondsEntry = _ThresholdDefectSecondsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 14, 1)
)
thresholdDefectSecondsEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    thresholdDefectSecondsEntry.setStatus("current")


class _ThresholdDefectSecondsDefectSecondsHighThres15Min_Type(Unsigned32):
    """Custom type thresholdDefectSecondsDefectSecondsHighThres15Min based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 900),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdDefectSecondsDefectSecondsHighThres15Min_Type.__name__ = "Unsigned32"
_ThresholdDefectSecondsDefectSecondsHighThres15Min_Object = MibTableColumn
thresholdDefectSecondsDefectSecondsHighThres15Min = _ThresholdDefectSecondsDefectSecondsHighThres15Min_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 14, 1, 1),
    _ThresholdDefectSecondsDefectSecondsHighThres15Min_Type()
)
thresholdDefectSecondsDefectSecondsHighThres15Min.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdDefectSecondsDefectSecondsHighThres15Min.setStatus("current")


class _ThresholdDefectSecondsDefectSecondsHighThres1Day_Type(Unsigned32):
    """Custom type thresholdDefectSecondsDefectSecondsHighThres1Day based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(4294967295, 4294967295),
    )


_ThresholdDefectSecondsDefectSecondsHighThres1Day_Type.__name__ = "Unsigned32"
_ThresholdDefectSecondsDefectSecondsHighThres1Day_Object = MibTableColumn
thresholdDefectSecondsDefectSecondsHighThres1Day = _ThresholdDefectSecondsDefectSecondsHighThres1Day_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 14, 1, 2),
    _ThresholdDefectSecondsDefectSecondsHighThres1Day_Type()
)
thresholdDefectSecondsDefectSecondsHighThres1Day.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    thresholdDefectSecondsDefectSecondsHighThres1Day.setStatus("current")
_CurrentDefectSeconds15minTable_Object = MibTable
currentDefectSeconds15minTable = _CurrentDefectSeconds15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 64)
)
if mibBuilder.loadTexts:
    currentDefectSeconds15minTable.setStatus("current")
_CurrentDefectSeconds15minEntry_Object = MibTableRow
currentDefectSeconds15minEntry = _CurrentDefectSeconds15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 64, 1)
)
currentDefectSeconds15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentDefectSeconds15minEntry.setStatus("current")
_CurrentDefectSeconds15minDS_Type = Unsigned32
_CurrentDefectSeconds15minDS_Object = MibTableColumn
currentDefectSeconds15minDS = _CurrentDefectSeconds15minDS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 64, 1, 1),
    _CurrentDefectSeconds15minDS_Type()
)
currentDefectSeconds15minDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentDefectSeconds15minDS.setStatus("current")


class _CurrentDefectSeconds15minElapsedTime_Type(Integer32):
    """Custom type currentDefectSeconds15minElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9000),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentDefectSeconds15minElapsedTime_Type.__name__ = "Integer32"
_CurrentDefectSeconds15minElapsedTime_Object = MibTableColumn
currentDefectSeconds15minElapsedTime = _CurrentDefectSeconds15minElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 64, 1, 2),
    _CurrentDefectSeconds15minElapsedTime_Type()
)
currentDefectSeconds15minElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentDefectSeconds15minElapsedTime.setStatus("current")
_CurrentDefectSeconds1dayTable_Object = MibTable
currentDefectSeconds1dayTable = _CurrentDefectSeconds1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 65)
)
if mibBuilder.loadTexts:
    currentDefectSeconds1dayTable.setStatus("current")
_CurrentDefectSeconds1dayEntry_Object = MibTableRow
currentDefectSeconds1dayEntry = _CurrentDefectSeconds1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 65, 1)
)
currentDefectSeconds1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
)
if mibBuilder.loadTexts:
    currentDefectSeconds1dayEntry.setStatus("current")
_CurrentDefectSeconds1dayDS_Type = Unsigned32
_CurrentDefectSeconds1dayDS_Object = MibTableColumn
currentDefectSeconds1dayDS = _CurrentDefectSeconds1dayDS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 65, 1, 1),
    _CurrentDefectSeconds1dayDS_Type()
)
currentDefectSeconds1dayDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentDefectSeconds1dayDS.setStatus("current")


class _CurrentDefectSeconds1dayElapsedTime_Type(Integer32):
    """Custom type currentDefectSeconds1dayElapsedTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
        ValueRangeConstraint(-2147483648, -2147483648),
    )


_CurrentDefectSeconds1dayElapsedTime_Type.__name__ = "Integer32"
_CurrentDefectSeconds1dayElapsedTime_Object = MibTableColumn
currentDefectSeconds1dayElapsedTime = _CurrentDefectSeconds1dayElapsedTime_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 65, 1, 2),
    _CurrentDefectSeconds1dayElapsedTime_Type()
)
currentDefectSeconds1dayElapsedTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    currentDefectSeconds1dayElapsedTime.setStatus("current")
_IntervalDefectSeconds15minTable_Object = MibTable
intervalDefectSeconds15minTable = _IntervalDefectSeconds15minTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 66)
)
if mibBuilder.loadTexts:
    intervalDefectSeconds15minTable.setStatus("current")
_IntervalDefectSeconds15minEntry_Object = MibTableRow
intervalDefectSeconds15minEntry = _IntervalDefectSeconds15minEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 66, 1)
)
intervalDefectSeconds15minEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalDefectSeconds15minNumber"),
)
if mibBuilder.loadTexts:
    intervalDefectSeconds15minEntry.setStatus("current")


class _IntervalDefectSeconds15minNumber_Type(Integer32):
    """Custom type intervalDefectSeconds15minNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_IntervalDefectSeconds15minNumber_Type.__name__ = "Integer32"
_IntervalDefectSeconds15minNumber_Object = MibTableColumn
intervalDefectSeconds15minNumber = _IntervalDefectSeconds15minNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 66, 1, 1),
    _IntervalDefectSeconds15minNumber_Type()
)
intervalDefectSeconds15minNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalDefectSeconds15minNumber.setStatus("current")
_IntervalDefectSeconds15minDS_Type = Unsigned32
_IntervalDefectSeconds15minDS_Object = MibTableColumn
intervalDefectSeconds15minDS = _IntervalDefectSeconds15minDS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 66, 1, 2),
    _IntervalDefectSeconds15minDS_Type()
)
intervalDefectSeconds15minDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDefectSeconds15minDS.setStatus("current")
_IntervalDefectSeconds15minValidFlag_Type = TruthValue
_IntervalDefectSeconds15minValidFlag_Object = MibTableColumn
intervalDefectSeconds15minValidFlag = _IntervalDefectSeconds15minValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 66, 1, 3),
    _IntervalDefectSeconds15minValidFlag_Type()
)
intervalDefectSeconds15minValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDefectSeconds15minValidFlag.setStatus("current")
_IntervalDefectSeconds15minTimeStamp_Type = DateAndTime
_IntervalDefectSeconds15minTimeStamp_Object = MibTableColumn
intervalDefectSeconds15minTimeStamp = _IntervalDefectSeconds15minTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 66, 1, 4),
    _IntervalDefectSeconds15minTimeStamp_Type()
)
intervalDefectSeconds15minTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDefectSeconds15minTimeStamp.setStatus("current")
_IntervalDefectSeconds1dayTable_Object = MibTable
intervalDefectSeconds1dayTable = _IntervalDefectSeconds1dayTable_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 67)
)
if mibBuilder.loadTexts:
    intervalDefectSeconds1dayTable.setStatus("current")
_IntervalDefectSeconds1dayEntry_Object = MibTableRow
intervalDefectSeconds1dayEntry = _IntervalDefectSeconds1dayEntry_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 67, 1)
)
intervalDefectSeconds1dayEntry.setIndexNames(
    (0, "ADVA-MIB", "entityIndex"),
    (0, "FspR7-MIB", "intervalDefectSeconds1dayNumber"),
)
if mibBuilder.loadTexts:
    intervalDefectSeconds1dayEntry.setStatus("current")


class _IntervalDefectSeconds1dayNumber_Type(Integer32):
    """Custom type intervalDefectSeconds1dayNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_IntervalDefectSeconds1dayNumber_Type.__name__ = "Integer32"
_IntervalDefectSeconds1dayNumber_Object = MibTableColumn
intervalDefectSeconds1dayNumber = _IntervalDefectSeconds1dayNumber_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 67, 1, 1),
    _IntervalDefectSeconds1dayNumber_Type()
)
intervalDefectSeconds1dayNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intervalDefectSeconds1dayNumber.setStatus("current")
_IntervalDefectSeconds1dayDS_Type = Unsigned32
_IntervalDefectSeconds1dayDS_Object = MibTableColumn
intervalDefectSeconds1dayDS = _IntervalDefectSeconds1dayDS_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 67, 1, 2),
    _IntervalDefectSeconds1dayDS_Type()
)
intervalDefectSeconds1dayDS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDefectSeconds1dayDS.setStatus("current")
_IntervalDefectSeconds1dayValidFlag_Type = TruthValue
_IntervalDefectSeconds1dayValidFlag_Object = MibTableColumn
intervalDefectSeconds1dayValidFlag = _IntervalDefectSeconds1dayValidFlag_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 67, 1, 3),
    _IntervalDefectSeconds1dayValidFlag_Type()
)
intervalDefectSeconds1dayValidFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDefectSeconds1dayValidFlag.setStatus("current")
_IntervalDefectSeconds1dayTimeStamp_Type = DateAndTime
_IntervalDefectSeconds1dayTimeStamp_Object = MibTableColumn
intervalDefectSeconds1dayTimeStamp = _IntervalDefectSeconds1dayTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 6, 67, 1, 4),
    _IntervalDefectSeconds1dayTimeStamp_Type()
)
intervalDefectSeconds1dayTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intervalDefectSeconds1dayTimeStamp.setStatus("current")
_FspR7Conformance_ObjectIdentity = ObjectIdentity
fspR7Conformance = _FspR7Conformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 7)
)
_FspR7VendorTypes_ObjectIdentity = ObjectIdentity
fspR7VendorTypes = _FspR7VendorTypes_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8)
)
_F7Containers_ObjectIdentity = ObjectIdentity
f7Containers = _F7Containers_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 1)
)
_F7ContainerFanSlot_ObjectIdentity = ObjectIdentity
f7ContainerFanSlot = _F7ContainerFanSlot_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 1, 1)
)
_F7ContainerModuleSlot_ObjectIdentity = ObjectIdentity
f7ContainerModuleSlot = _F7ContainerModuleSlot_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 1, 2)
)
_F7ContainerSfpSlot_ObjectIdentity = ObjectIdentity
f7ContainerSfpSlot = _F7ContainerSfpSlot_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 1, 3)
)
_F7Shelfs_ObjectIdentity = ObjectIdentity
f7Shelfs = _F7Shelfs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 2)
)
_F7FanUnits_ObjectIdentity = ObjectIdentity
f7FanUnits = _F7FanUnits_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 3)
)
_F7FanUnitsFan_ObjectIdentity = ObjectIdentity
f7FanUnitsFan = _F7FanUnitsFan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 3, 1)
)
_F7Modules_ObjectIdentity = ObjectIdentity
f7Modules = _F7Modules_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4)
)
_F7eqpSh1hu_ObjectIdentity = ObjectIdentity
f7eqpSh1hu = _F7eqpSh1hu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 1)
)
_F7eqpSh1huDc_ObjectIdentity = ObjectIdentity
f7eqpSh1huDc = _F7eqpSh1huDc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 2)
)
_F7eqpSh3hu_ObjectIdentity = ObjectIdentity
f7eqpSh3hu = _F7eqpSh3hu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 3)
)
_F7eqpSh7hu_ObjectIdentity = ObjectIdentity
f7eqpSh7hu = _F7eqpSh7hu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 4)
)
_F7eqpUnknown_ObjectIdentity = ObjectIdentity
f7eqpUnknown = _F7eqpUnknown_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 5)
)
_F7eqpNcu_ObjectIdentity = ObjectIdentity
f7eqpNcu = _F7eqpNcu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 6)
)
_F7eqpNcutif_ObjectIdentity = ObjectIdentity
f7eqpNcutif = _F7eqpNcutif_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 7)
)
_F7eqpScu_ObjectIdentity = ObjectIdentity
f7eqpScu = _F7eqpScu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 8)
)
_F7eqpScue_ObjectIdentity = ObjectIdentity
f7eqpScue = _F7eqpScue_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 9)
)
_F7eqpR6cu_ObjectIdentity = ObjectIdentity
f7eqpR6cu = _F7eqpR6cu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 10)
)
_F7eqpPsu1huac_ObjectIdentity = ObjectIdentity
f7eqpPsu1huac = _F7eqpPsu1huac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 11)
)
_F7eqpPsu7huac_ObjectIdentity = ObjectIdentity
f7eqpPsu7huac = _F7eqpPsu7huac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 12)
)
_F7eqpPsu7hudc_ObjectIdentity = ObjectIdentity
f7eqpPsu7hudc = _F7eqpPsu7hudc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 13)
)
_F7eqpFcu7hu_ObjectIdentity = ObjectIdentity
f7eqpFcu7hu = _F7eqpFcu7hu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 14)
)
_F7eqp2clsmd_ObjectIdentity = ObjectIdentity
f7eqp2clsmd = _F7eqp2clsmd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 15)
)
_F7eqp2absmc_ObjectIdentity = ObjectIdentity
f7eqp2absmc = _F7eqp2absmc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 16)
)
_F7eqp2bsmd_ObjectIdentity = ObjectIdentity
f7eqp2bsmd = _F7eqp2bsmd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 17)
)
_F7eqp1Gsmud_ObjectIdentity = ObjectIdentity
f7eqp1Gsmud = _F7eqp1Gsmud_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 18)
)
_F7eqp4gsmd_ObjectIdentity = ObjectIdentity
f7eqp4gsmd = _F7eqp4gsmd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 19)
)
_F7eqp8gsmd_ObjectIdentity = ObjectIdentity
f7eqp8gsmd = _F7eqp8gsmd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 20)
)
_F7eqp1csmuc_ObjectIdentity = ObjectIdentity
f7eqp1csmuc = _F7eqp1csmuc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 21)
)
_F7eqp1csmuewc_ObjectIdentity = ObjectIdentity
f7eqp1csmuewc = _F7eqp1csmuewc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 22)
)
_F7eqp4csmd_ObjectIdentity = ObjectIdentity
f7eqp4csmd = _F7eqp4csmd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 23)
)
_F7eqp4csmud_ObjectIdentity = ObjectIdentity
f7eqp4csmud = _F7eqp4csmud_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 24)
)
_F7eqp4csmc_ObjectIdentity = ObjectIdentity
f7eqp4csmc = _F7eqp4csmc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 25)
)
_F7eqpOsfm_ObjectIdentity = ObjectIdentity
f7eqpOsfm = _F7eqpOsfm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 26)
)
_F7eqp1pm_ObjectIdentity = ObjectIdentity
f7eqp1pm = _F7eqp1pm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 27)
)
_F7eqp2pm_ObjectIdentity = ObjectIdentity
f7eqp2pm = _F7eqp2pm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 28)
)
_F7eqp40csmd_ObjectIdentity = ObjectIdentity
f7eqp40csmd = _F7eqp40csmd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 29)
)
_F7eqpDcm_ObjectIdentity = ObjectIdentity
f7eqpDcm = _F7eqpDcm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 30)
)
_F7eqpEdfas_ObjectIdentity = ObjectIdentity
f7eqpEdfas = _F7eqpEdfas_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 31)
)
_F7eqpEdfasgc_ObjectIdentity = ObjectIdentity
f7eqpEdfasgc = _F7eqpEdfasgc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 32)
)
_F7eqpEdfadgc_ObjectIdentity = ObjectIdentity
f7eqpEdfadgc = _F7eqpEdfadgc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 33)
)
_F7eqpRaman_ObjectIdentity = ObjectIdentity
f7eqpRaman = _F7eqpRaman_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 34)
)
_F7eqp4tcc2g5_ObjectIdentity = ObjectIdentity
f7eqp4tcc2g5 = _F7eqp4tcc2g5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 35)
)
_F7eqp4tcc2g5d_ObjectIdentity = ObjectIdentity
f7eqp4tcc2g5d = _F7eqp4tcc2g5d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 36)
)
_F7eqp4tcc10gd_ObjectIdentity = ObjectIdentity
f7eqp4tcc10gd = _F7eqp4tcc10gd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 37)
)
_F7eqp4tcc10gc_ObjectIdentity = ObjectIdentity
f7eqp4tcc10gc = _F7eqp4tcc10gc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 38)
)
_F7eqpWcc10gd_ObjectIdentity = ObjectIdentity
f7eqpWcc10gd = _F7eqpWcc10gd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 39)
)
_F7eqpWcc10gc_ObjectIdentity = ObjectIdentity
f7eqpWcc10gc = _F7eqpWcc10gc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 40)
)
_F7eqpWcc2g7_ObjectIdentity = ObjectIdentity
f7eqpWcc2g7 = _F7eqpWcc2g7_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 41)
)
_F7eqpWcc2g7d_ObjectIdentity = ObjectIdentity
f7eqpWcc2g7d = _F7eqpWcc2g7d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 42)
)
_F7eqp2tcm2g5_ObjectIdentity = ObjectIdentity
f7eqp2tcm2g5 = _F7eqp2tcm2g5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 43)
)
_F7eqp2tca2g5_ObjectIdentity = ObjectIdentity
f7eqp2tca2g5 = _F7eqp2tca2g5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 44)
)
_F7eqp8tca10gd_ObjectIdentity = ObjectIdentity
f7eqp8tca10gd = _F7eqp8tca10gd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 45)
)
_F7eqp8tca10gc_ObjectIdentity = ObjectIdentity
f7eqp8tca10gc = _F7eqp8tca10gc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 46)
)
_F7eqpWca10gd_ObjectIdentity = ObjectIdentity
f7eqpWca10gd = _F7eqpWca10gd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 47)
)
_F7eqpWca10gc_ObjectIdentity = ObjectIdentity
f7eqpWca10gc = _F7eqpWca10gc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 48)
)
_F7eqp4tca4gd_ObjectIdentity = ObjectIdentity
f7eqp4tca4gd = _F7eqp4tca4gd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 49)
)
_F7eqp4tca4gc_ObjectIdentity = ObjectIdentity
f7eqp4tca4gc = _F7eqp4tca4gc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 50)
)
_F7eqpwca2g5_ObjectIdentity = ObjectIdentity
f7eqpwca2g5 = _F7eqpwca2g5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 51)
)
_F7eqp4tca1g3d_ObjectIdentity = ObjectIdentity
f7eqp4tca1g3d = _F7eqp4tca1g3d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 52)
)
_F7eqp4tca1g3c_ObjectIdentity = ObjectIdentity
f7eqp4tca1g3c = _F7eqp4tca1g3c_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 53)
)
_F7eqp8tce2g5d_ObjectIdentity = ObjectIdentity
f7eqp8tce2g5d = _F7eqp8tce2g5d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 54)
)
_F7eqp8tce2g5c_ObjectIdentity = ObjectIdentity
f7eqp8tce2g5c = _F7eqp8tce2g5c_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 55)
)
_F7eqpWcelsd_ObjectIdentity = ObjectIdentity
f7eqpWcelsd = _F7eqpWcelsd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 56)
)
_F7eqpWcelsc_ObjectIdentity = ObjectIdentity
f7eqpWcelsc = _F7eqpWcelsc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 57)
)
_F7eqpVsm_ObjectIdentity = ObjectIdentity
f7eqpVsm = _F7eqpVsm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 58)
)
_F7eqpRsmolm_ObjectIdentity = ObjectIdentity
f7eqpRsmolm = _F7eqpRsmolm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 59)
)
_F7eqpRsmsf_ObjectIdentity = ObjectIdentity
f7eqpRsmsf = _F7eqpRsmsf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 60)
)
_F7eqpOscm_ObjectIdentity = ObjectIdentity
f7eqpOscm = _F7eqpOscm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 61)
)
_F7eqp2oscm_ObjectIdentity = ObjectIdentity
f7eqp2oscm = _F7eqp2oscm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 62)
)
_F7eqpDrm_ObjectIdentity = ObjectIdentity
f7eqpDrm = _F7eqpDrm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 63)
)
_F7eqpXfpG_ObjectIdentity = ObjectIdentity
f7eqpXfpG = _F7eqpXfpG_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 64)
)
_F7eqpsfpd_ObjectIdentity = ObjectIdentity
f7eqpsfpd = _F7eqpsfpd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 65)
)
_F7eqpSfpc_ObjectIdentity = ObjectIdentity
f7eqpSfpc = _F7eqpSfpc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 66)
)
_F7eqpSfpg_ObjectIdentity = ObjectIdentity
f7eqpSfpg = _F7eqpSfpg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 67)
)
_F7eqpSfpe_ObjectIdentity = ObjectIdentity
f7eqpSfpe = _F7eqpSfpe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 68)
)
_F7eqpSh1hudcm_ObjectIdentity = ObjectIdentity
f7eqpSh1hudcm = _F7eqpSh1hudcm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 69)
)
_F7eqpCustomc_ObjectIdentity = ObjectIdentity
f7eqpCustomc = _F7eqpCustomc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 70)
)
_F7eqpCustomd_ObjectIdentity = ObjectIdentity
f7eqpCustomd = _F7eqpCustomd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 71)
)
_F7eqpPsu1hudc_ObjectIdentity = ObjectIdentity
f7eqpPsu1hudc = _F7eqpPsu1hudc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 72)
)
_F7eqpWcc2g7c_ObjectIdentity = ObjectIdentity
f7eqpWcc2g7c = _F7eqpWcc2g7c_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 73)
)
_F7eqp1csmuEwD_ObjectIdentity = ObjectIdentity
f7eqp1csmuEwD = _F7eqp1csmuEwD_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 74)
)
_F7eqp1csmuG_ObjectIdentity = ObjectIdentity
f7eqp1csmuG = _F7eqp1csmuG_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 75)
)
_F7eqp3BsmC_ObjectIdentity = ObjectIdentity
f7eqp3BsmC = _F7eqp3BsmC_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 76)
)
_F7eqpF2kSh5hu_ObjectIdentity = ObjectIdentity
f7eqpF2kSh5hu = _F7eqpF2kSh5hu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 77)
)
_F7eqpF2kSh6hu_ObjectIdentity = ObjectIdentity
f7eqpF2kSh6hu = _F7eqpF2kSh6hu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 78)
)
_F7eqp2Tca2g5s_ObjectIdentity = ObjectIdentity
f7eqp2Tca2g5s = _F7eqp2Tca2g5s_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 79)
)
_F7eqp8Csmuc_ObjectIdentity = ObjectIdentity
f7eqp8Csmuc = _F7eqp8Csmuc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 80)
)
_F7eqpEdfaDgcb_ObjectIdentity = ObjectIdentity
f7eqpEdfaDgcb = _F7eqpEdfaDgcb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 81)
)
_F7eqpOscm2n_ObjectIdentity = ObjectIdentity
f7eqpOscm2n = _F7eqpOscm2n_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 82)
)
_F7eqp4Tcc10gtd_ObjectIdentity = ObjectIdentity
f7eqp4Tcc10gtd = _F7eqp4Tcc10gtd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 83)
)
_F7eqp4Tca4g_ObjectIdentity = ObjectIdentity
f7eqp4Tca4g = _F7eqp4Tca4g_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 84)
)
_F7eqpDcg_ObjectIdentity = ObjectIdentity
f7eqpDcg = _F7eqpDcg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 85)
)
_F7eqp2Tcm2g5d_ObjectIdentity = ObjectIdentity
f7eqp2Tcm2g5d = _F7eqp2Tcm2g5d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 86)
)
_F7eqp2Tcm2g5c_ObjectIdentity = ObjectIdentity
f7eqp2Tcm2g5c = _F7eqp2Tcm2g5c_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 87)
)
_F7eqpWcm2g5d_ObjectIdentity = ObjectIdentity
f7eqpWcm2g5d = _F7eqpWcm2g5d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 88)
)
_F7eqpWcm2g5c_ObjectIdentity = ObjectIdentity
f7eqpWcm2g5c = _F7eqpWcm2g5c_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 89)
)
_F7eqpEdfmSgc_ObjectIdentity = ObjectIdentity
f7eqpEdfmSgc = _F7eqpEdfmSgc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 90)
)
_F7eqpF2kDemiV2_ObjectIdentity = ObjectIdentity
f7eqpF2kDemiV2 = _F7eqpF2kDemiV2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 91)
)
_F7eqpPsm955_ObjectIdentity = ObjectIdentity
f7eqpPsm955 = _F7eqpPsm955_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 92)
)
_F7eqpNcu2e_ObjectIdentity = ObjectIdentity
f7eqpNcu2e = _F7eqpNcu2e_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 93)
)
_F7eqp8TceGl2g5d_ObjectIdentity = ObjectIdentity
f7eqp8TceGl2g5d = _F7eqp8TceGl2g5d_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 94)
)
_F7eqp8TceGl2g5c_ObjectIdentity = ObjectIdentity
f7eqp8TceGl2g5c = _F7eqp8TceGl2g5c_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 4, 95)
)
_F7Plugs_ObjectIdentity = ObjectIdentity
f7Plugs = _F7Plugs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 5)
)
_F7SFPCL_ObjectIdentity = ObjectIdentity
f7SFPCL = _F7SFPCL_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 5, 1)
)
_F7SFPHS_ObjectIdentity = ObjectIdentity
f7SFPHS = _F7SFPHS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 5, 2)
)
_F7SFP2G1_ObjectIdentity = ObjectIdentity
f7SFP2G1 = _F7SFP2G1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 5, 3)
)
_F7SFP2G5_ObjectIdentity = ObjectIdentity
f7SFP2G5 = _F7SFP2G5_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 5, 4)
)
_F7SFP4G_ObjectIdentity = ObjectIdentity
f7SFP4G = _F7SFP4G_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 5, 5)
)
_F7XFP10G_ObjectIdentity = ObjectIdentity
f7XFP10G = _F7XFP10G_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 5, 6)
)
_F7Ports_ObjectIdentity = ObjectIdentity
f7Ports = _F7Ports_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6)
)
_F7OTU1_ObjectIdentity = ObjectIdentity
f7OTU1 = _F7OTU1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 1)
)
_F7OTU2_ObjectIdentity = ObjectIdentity
f7OTU2 = _F7OTU2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 2)
)
_F710GBE_ObjectIdentity = ObjectIdentity
f710GBE = _F710GBE_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 3)
)
_F7OC192_ObjectIdentity = ObjectIdentity
f7OC192 = _F7OC192_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 4)
)
_F7OC48_ObjectIdentity = ObjectIdentity
f7OC48 = _F7OC48_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 5)
)
_F7STM16_ObjectIdentity = ObjectIdentity
f7STM16 = _F7STM16_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 6)
)
_F7STM64_ObjectIdentity = ObjectIdentity
f7STM64 = _F7STM64_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 7)
)
_F710GFC_ObjectIdentity = ObjectIdentity
f710GFC = _F710GFC_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 8)
)
_F710GFP_ObjectIdentity = ObjectIdentity
f710GFP = _F710GFP_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 6, 9)
)
_F7Error_ObjectIdentity = ObjectIdentity
f7Error = _F7Error_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 8, 7)
)

# Managed Objects groups


# Notification objects

chassisCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 2)
)
chassisCreation.setObjects(
      *(("ADVA-MIB", "entityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    chassisCreation.setStatus(
        "current"
    )

chassisDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3)
)
chassisDeletion.setObjects(
      *(("ADVA-MIB", "entityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    chassisDeletion.setStatus(
        "current"
    )

entityCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 4)
)
entityCreation.setObjects(
      *(("ADVA-MIB", "entityContainedIn"),
        ("ADVA-MIB", "entityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    entityCreation.setStatus(
        "current"
    )

entityDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 5)
)
entityDeletion.setObjects(
      *(("ADVA-MIB", "entityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    entityDeletion.setStatus(
        "current"
    )

neTrapsinkObjectCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 6)
)
neTrapsinkObjectCreation.setObjects(
      *(("ADVA-MIB", "neTrapsinkAddress"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    neTrapsinkObjectCreation.setStatus(
        "current"
    )

neTrapsinkObjectDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 7)
)
neTrapsinkObjectDeletion.setObjects(
      *(("ADVA-MIB", "neTrapsinkAddress"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    neTrapsinkObjectDeletion.setStatus(
        "current"
    )

equipmentInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 8)
)
equipmentInserted.setObjects(
      *(("ADVA-MIB", "entityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    equipmentInserted.setStatus(
        "current"
    )

equipmentRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 9)
)
equipmentRemoved.setObjects(
      *(("ADVA-MIB", "entityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    equipmentRemoved.setStatus(
        "current"
    )

crossConnectionCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 10)
)
crossConnectionCreation.setObjects(
      *(("FspR7-MIB", "crsConnDeployProvConn"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    crossConnectionCreation.setStatus(
        "current"
    )

crossConnectionDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 11)
)
crossConnectionDeletion.setObjects(
      *(("FspR7-MIB", "crsConnDeployProvFrom"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    crossConnectionDeletion.setStatus(
        "current"
    )

neStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 20)
)
neStateChange.setObjects(
      *(("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    neStateChange.setStatus(
        "current"
    )

entityStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 21)
)
entityStateChange.setObjects(
      *(("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    entityStateChange.setStatus(
        "current"
    )

neSysTypeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 22)
)
neSysTypeChanged.setObjects(
      *(("FspR7-MIB", "neSysType"),
        ("ADVA-MIB", "neEventLogTimeStamp"))
)
if mibBuilder.loadTexts:
    neSysTypeChanged.setStatus(
        "current"
    )

neAttributeValueChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 30)
)
neAttributeValueChange.setObjects(
      *(("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    neAttributeValueChange.setStatus(
        "current"
    )

facilityAttributeValueChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 31)
)
facilityAttributeValueChange.setObjects(
      *(("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    facilityAttributeValueChange.setStatus(
        "current"
    )

loopbackChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 32)
)
loopbackChange.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("FspR7-MIB", "interfaceConfigLoopConfig"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    loopbackChange.setStatus(
        "current"
    )

snmpAgentStateChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 33)
)
snmpAgentStateChanged.setObjects(
      *(("ADVA-MIB", "snmpProxyEntrySingleTargetOutNodeAgentStatus"),
        ("ADVA-MIB", "neEventLogTimeStamp"))
)
if mibBuilder.loadTexts:
    snmpAgentStateChanged.setStatus(
        "current"
    )

snmpAgentSynchronizationStageChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 34)
)
snmpAgentSynchronizationStageChanged.setObjects(
      *(("ADVA-MIB", "snmpProxyServerSynchroStage"),
        ("ADVA-MIB", "neEventLogTimeStamp"))
)
if mibBuilder.loadTexts:
    snmpAgentSynchronizationStageChanged.setStatus(
        "current"
    )

coldStartAgentReconfigured = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 35)
)
coldStartAgentReconfigured.setObjects(
    ("ADVA-MIB", "neEventLogTimeStamp")
)
if mibBuilder.loadTexts:
    coldStartAgentReconfigured.setStatus(
        "current"
    )

dcnOspfAreaCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 36)
)
dcnOspfAreaCreation.setObjects(
      *(("FspR7-MIB", "dcnOspfAreaId"),
        ("FspR7-MIB", "dcnOspfAreaType"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    dcnOspfAreaCreation.setStatus(
        "current"
    )

dcnOspfAreaDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 37)
)
dcnOspfAreaDeletion.setObjects(
      *(("FspR7-MIB", "dcnOspfAreaId"),
        ("FspR7-MIB", "dcnOspfAreaType"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    dcnOspfAreaDeletion.setStatus(
        "current"
    )

dcnOspfAreaPropertiesChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 38)
)
dcnOspfAreaPropertiesChange.setObjects(
      *(("FspR7-MIB", "dcnOspfAreaId"),
        ("FspR7-MIB", "dcnOspfAreaType"),
        ("FspR7-MIB", "dcnOspfAreaStubDefaultMetric"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    dcnOspfAreaPropertiesChange.setStatus(
        "current"
    )

timeNtpAttributeValueChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 39)
)
if mibBuilder.loadTexts:
    timeNtpAttributeValueChange.setStatus(
        "current"
    )

ntpSrvAttributeValueChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 40)
)
if mibBuilder.loadTexts:
    ntpSrvAttributeValueChange.setStatus(
        "current"
    )

ntpSrvObjectChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 41)
)
if mibBuilder.loadTexts:
    ntpSrvObjectChange.setStatus(
        "current"
    )

ntpSrvCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 42)
)
if mibBuilder.loadTexts:
    ntpSrvCreation.setStatus(
        "current"
    )

ntpSrvDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 43)
)
if mibBuilder.loadTexts:
    ntpSrvDeletion.setStatus(
        "current"
    )

knownHostCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 44)
)
knownHostCreation.setObjects(
      *(("FspR7-MIB", "knownHostIP"),
        ("FspR7-MIB", "knownHostKeyEncryptAlgorithm"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    knownHostCreation.setStatus(
        "current"
    )

knownHostDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 45)
)
knownHostDeletion.setObjects(
      *(("FspR7-MIB", "knownHostIP"),
        ("FspR7-MIB", "knownHostKeyEncryptAlgorithm"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    knownHostDeletion.setStatus(
        "current"
    )

radiusSrvObjectChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 46)
)
if mibBuilder.loadTexts:
    radiusSrvObjectChange.setStatus(
        "current"
    )

radiusSrvCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 47)
)
radiusSrvCreation.setObjects(
      *(("FspR7-MIB", "radiusServerPriority"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    radiusSrvCreation.setStatus(
        "current"
    )

radiusSrvDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 48)
)
radiusSrvDeletion.setObjects(
      *(("FspR7-MIB", "radiusServerPriority"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    radiusSrvDeletion.setStatus(
        "current"
    )

radiusSrvAttributeValueChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 49)
)
if mibBuilder.loadTexts:
    radiusSrvAttributeValueChange.setStatus(
        "current"
    )

ptpEntityCreation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 50)
)
ptpEntityCreation.setObjects(
      *(("ADVA-MIB", "ptpEntityContainedIn"),
        ("ADVA-MIB", "ptpEntityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    ptpEntityCreation.setStatus(
        "current"
    )

ptpEntityDeletion = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 51)
)
ptpEntityDeletion.setObjects(
      *(("ADVA-MIB", "ptpEntityClass"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    ptpEntityDeletion.setStatus(
        "current"
    )

entityObjectChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 100)
)
entityObjectChange.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    entityObjectChange.setStatus(
        "current"
    )

crsConnObjectChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 101)
)
crsConnObjectChange.setObjects(
      *(("FspR7-MIB", "crsConnDeployProvFrom"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    crsConnObjectChange.setStatus(
        "current"
    )

authenticationNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 102)
)
authenticationNotification.setObjects(
      *(("FspR7-MIB", "authTrapSrcIp"),
        ("FspR7-MIB", "authTrapLctIp"),
        ("FspR7-MIB", "authTrapStatus"),
        ("FspR7-MIB", "authTrapSessionId"),
        ("FspR7-MIB", "authTrapProtocol"),
        ("FspR7-MIB", "authTrapPort"),
        ("FspR7-MIB", "authTrapUserName"),
        ("FspR7-MIB", "authTrapRadUserName"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    authenticationNotification.setStatus(
        "current"
    )

authenticationNotificationSummary = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 103)
)
authenticationNotificationSummary.setObjects(
      *(("FspR7-MIB", "authTrapProtocol"),
        ("FspR7-MIB", "authTrapSuccessfulAuthCount"),
        ("FspR7-MIB", "authTrapUnsuccessfulAuthCount"),
        ("ADVA-MIB", "neEventLogTimeStamp"))
)
if mibBuilder.loadTexts:
    authenticationNotificationSummary.setStatus(
        "current"
    )

wdmTunnelResultNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 110)
)
wdmTunnelResultNotification.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"),
        ("FspR7-MIB", "tunnelWdmDataErrorCodeMajor"),
        ("FspR7-MIB", "tunnelWdmDataErrorCodeMinor"),
        ("FspR7-MIB", "tunnelWdmDataErrorCategory"),
        ("FspR7-MIB", "tunnelWdmDataErrorIp"),
        ("FspR7-MIB", "tunnelWdmDataErrorTid"),
        ("FspR7-MIB", "tunnelWdmDataSpecificErrorMessage"))
)
if mibBuilder.loadTexts:
    wdmTunnelResultNotification.setStatus(
        "current"
    )

ethTunnelResultNotification = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 111)
)
ethTunnelResultNotification.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"),
        ("FspR7-MIB", "tunnelEthDataErrorCodeMajor"),
        ("FspR7-MIB", "tunnelEthDataErrorCodeMinor"),
        ("FspR7-MIB", "tunnelEthDataErrorCategory"),
        ("FspR7-MIB", "tunnelEthDataErrorIp"),
        ("FspR7-MIB", "tunnelEthDataErrorTid"),
        ("FspR7-MIB", "tunnelEthDataSpecificErrorMessage"))
)
if mibBuilder.loadTexts:
    ethTunnelResultNotification.setStatus(
        "current"
    )

ptpEntityObjectChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 112)
)
ptpEntityObjectChange.setObjects(
      *(("ADVA-MIB", "ptpEntityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    ptpEntityObjectChange.setStatus(
        "current"
    )

alarmThirdPartyPlug = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1001)
)
alarmThirdPartyPlug.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThirdPartyPlug.setStatus(
        "current"
    )

alarmFacilityLoopback = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1002)
)
alarmFacilityLoopback.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFacilityLoopback.setStatus(
        "current"
    )

alarmTerminalLoopback = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1003)
)
alarmTerminalLoopback.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTerminalLoopback.setStatus(
        "current"
    )

alarmFacilityForcedOn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1004)
)
alarmFacilityForcedOn.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFacilityForcedOn.setStatus(
        "current"
    )

alarmOosDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1005)
)
alarmOosDisabled.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosDisabled.setStatus(
        "current"
    )

alarmReceiverDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1006)
)
alarmReceiverDisabled.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmReceiverDisabled.setStatus(
        "current"
    )

alarmTransmitterDisabledOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1007)
)
alarmTransmitterDisabledOff.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTransmitterDisabledOff.setStatus(
        "current"
    )

alarmTransmittedDisabledIdle = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1008)
)
alarmTransmittedDisabledIdle.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTransmittedDisabledIdle.setStatus(
        "current"
    )

alarmTransmitterDisabledAis = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1009)
)
alarmTransmitterDisabledAis.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTransmitterDisabledAis.setStatus(
        "current"
    )

alarmTransmitterDisabledEpc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1010)
)
alarmTransmitterDisabledEpc.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTransmitterDisabledEpc.setStatus(
        "current"
    )

alarmOosManagement = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1011)
)
alarmOosManagement.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosManagement.setStatus(
        "current"
    )

alarmOosMaintenance = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1012)
)
alarmOosMaintenance.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosMaintenance.setStatus(
        "current"
    )

alarmOosAins = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1013)
)
alarmOosAins.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosAins.setStatus(
        "current"
    )

alarmDcnCommunicationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1014)
)
alarmDcnCommunicationFail.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDcnCommunicationFail.setStatus(
        "current"
    )

alarmRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1015)
)
alarmRemoved.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRemoved.setStatus(
        "current"
    )

alarmMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1016)
)
alarmMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMismatch.setStatus(
        "current"
    )

alarmEquipmentNotAccepted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1017)
)
alarmEquipmentNotAccepted.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEquipmentNotAccepted.setStatus(
        "current"
    )

alarmFacilityDataRateNotSupported = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1018)
)
alarmFacilityDataRateNotSupported.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFacilityDataRateNotSupported.setStatus(
        "current"
    )

alarmEquipmentNotSupportedByPhysicalLayer = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1019)
)
alarmEquipmentNotSupportedByPhysicalLayer.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEquipmentNotSupportedByPhysicalLayer.setStatus(
        "current"
    )

alarmEquipmentNotApproved = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1020)
)
alarmEquipmentNotApproved.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEquipmentNotApproved.setStatus(
        "current"
    )

alarmEquipmentMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1021)
)
alarmEquipmentMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEquipmentMismatch.setStatus(
        "current"
    )

alarmFuseAlarm1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1022)
)
alarmFuseAlarm1.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFuseAlarm1.setStatus(
        "deprecated"
    )

alarmFuseAlarm2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1023)
)
alarmFuseAlarm2.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFuseAlarm2.setStatus(
        "deprecated"
    )

alarmFanAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1024)
)
alarmFanAlarm.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFanAlarm.setStatus(
        "deprecated"
    )

alarmFanUnitAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1025)
)
alarmFanUnitAlarm.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFanUnitAlarm.setStatus(
        "deprecated"
    )

alarmPowerMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1026)
)
alarmPowerMissing.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPowerMissing.setStatus(
        "current"
    )

alarmPowerFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1027)
)
alarmPowerFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPowerFailure.setStatus(
        "deprecated"
    )

alarmVoltageTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1028)
)
alarmVoltageTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmVoltageTooLow.setStatus(
        "deprecated"
    )

alarmVoltageTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1029)
)
alarmVoltageTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmVoltageTooHigh.setStatus(
        "deprecated"
    )

alarmTemperatureTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1030)
)
alarmTemperatureTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTemperatureTooLow.setStatus(
        "current"
    )

alarmTemperatureTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1031)
)
alarmTemperatureTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTemperatureTooHigh.setStatus(
        "current"
    )

alarmReceiverFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1032)
)
alarmReceiverFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmReceiverFailure.setStatus(
        "deprecated"
    )

alarmOpticalInputPowerReceiverFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1033)
)
alarmOpticalInputPowerReceiverFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpticalInputPowerReceiverFailure.setStatus(
        "deprecated"
    )

alarmLossOfSignal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1034)
)
alarmLossOfSignal.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfSignal.setStatus(
        "current"
    )

alarmIdleSignalReceived = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1035)
)
alarmIdleSignalReceived.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmIdleSignalReceived.setStatus(
        "deprecated"
    )

alarmLossOfLinkPulse = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1036)
)
alarmLossOfLinkPulse.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfLinkPulse.setStatus(
        "deprecated"
    )

alarmLossOfReceiverClockRecovery = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1037)
)
alarmLossOfReceiverClockRecovery.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfReceiverClockRecovery.setStatus(
        "current"
    )

alarmElasticStoreOverflowReceiver = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1038)
)
alarmElasticStoreOverflowReceiver.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmElasticStoreOverflowReceiver.setStatus(
        "deprecated"
    )

alarmLossOfTransmitterClockRecovery = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1039)
)
alarmLossOfTransmitterClockRecovery.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfTransmitterClockRecovery.setStatus(
        "deprecated"
    )

alarmLaserFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1040)
)
alarmLaserFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLaserFailure.setStatus(
        "current"
    )

alarmSwitchFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1041)
)
alarmSwitchFailed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSwitchFailed.setStatus(
        "current"
    )

alarmElasticStoreOverflowTransmitter = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1042)
)
alarmElasticStoreOverflowTransmitter.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmElasticStoreOverflowTransmitter.setStatus(
        "deprecated"
    )

alarmAutoShutdownLaserOffDueToErrFwd = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1043)
)
alarmAutoShutdownLaserOffDueToErrFwd.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownLaserOffDueToErrFwd.setStatus(
        "current"
    )

alarmAutoShutdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1044)
)
alarmAutoShutdown.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdown.setStatus(
        "deprecated"
    )

alarmAutoShutdownAls = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1045)
)
alarmAutoShutdownAls.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownAls.setStatus(
        "current"
    )

alarmAutoShutdownSendingIdle = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1046)
)
alarmAutoShutdownSendingIdle.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingIdle.setStatus(
        "deprecated"
    )

alarmThermoElectricCoolerEndOfLife = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1047)
)
alarmThermoElectricCoolerEndOfLife.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThermoElectricCoolerEndOfLife.setStatus(
        "current"
    )

alarmOpticalInputPwrReceivedTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1048)
)
alarmOpticalInputPwrReceivedTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpticalInputPwrReceivedTooLow.setStatus(
        "current"
    )

alarmOpticalInputPwrReceivedTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1049)
)
alarmOpticalInputPwrReceivedTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpticalInputPwrReceivedTooHigh.setStatus(
        "current"
    )

alarmLaserTemperatureTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1050)
)
alarmLaserTemperatureTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLaserTemperatureTooHigh.setStatus(
        "current"
    )

alarmLaserTemperatureTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1051)
)
alarmLaserTemperatureTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLaserTemperatureTooLow.setStatus(
        "current"
    )

alarmOpticalOutputPowerTransmittedTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1052)
)
alarmOpticalOutputPowerTransmittedTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpticalOutputPowerTransmittedTooLow.setStatus(
        "current"
    )

alarmOpticalOutputPowerTransmittedTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1053)
)
alarmOpticalOutputPowerTransmittedTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpticalOutputPowerTransmittedTooHigh.setStatus(
        "current"
    )

alarmLaserBiasCurrentNormalizedtooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1054)
)
alarmLaserBiasCurrentNormalizedtooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLaserBiasCurrentNormalizedtooHigh.setStatus(
        "current"
    )

alarmLossOfSignalTransmitter = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1055)
)
alarmLossOfSignalTransmitter.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfSignalTransmitter.setStatus(
        "current"
    )

alarmAttOnReceiverFiberLowerThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1056)
)
alarmAttOnReceiverFiberLowerThanMonitor.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAttOnReceiverFiberLowerThanMonitor.setStatus(
        "current"
    )

alarmAttOnReceiverFiberHigherThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1057)
)
alarmAttOnReceiverFiberHigherThanMonitor.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAttOnReceiverFiberHigherThanMonitor.setStatus(
        "current"
    )

alarmAttOnTransmitterFiberLowerThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1058)
)
alarmAttOnTransmitterFiberLowerThanMonitor.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAttOnTransmitterFiberLowerThanMonitor.setStatus(
        "current"
    )

alarmAttOnTransmitterFiberHigherThanMonitor = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1059)
)
alarmAttOnTransmitterFiberHigherThanMonitor.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAttOnTransmitterFiberHigherThanMonitor.setStatus(
        "current"
    )

alarmAutoShutdownSendingAisOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1060)
)
alarmAutoShutdownSendingAisOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingAisOtu.setStatus(
        "current"
    )

alarmLossOfFrameOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1061)
)
alarmLossOfFrameOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfFrameOtu.setStatus(
        "current"
    )

alarmLossOfMultiFrameOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1062)
)
alarmLossOfMultiFrameOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfMultiFrameOtu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1063)
)
alarmAlarmIndicationSignalOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOtu.setStatus(
        "current"
    )

alarmSignalDegradeOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1064)
)
alarmSignalDegradeOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOtu.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1065)
)
alarmBackwardDefectIndicationOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOtu.setStatus(
        "current"
    )

alarmAutoShutdownSendingAisOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1066)
)
alarmAutoShutdownSendingAisOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingAisOdu.setStatus(
        "current"
    )

alarmLossOfFrameLossOfMultiFrameOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1067)
)
alarmLossOfFrameLossOfMultiFrameOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfFrameLossOfMultiFrameOdu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1068)
)
alarmAlarmIndicationSignalOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOdu.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1069)
)
alarmOpenConnectionIndicationOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOdu.setStatus(
        "current"
    )

alarmLockedDefectOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1070)
)
alarmLockedDefectOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLockedDefectOdu.setStatus(
        "current"
    )

alarmSignalDegradeOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1071)
)
alarmSignalDegradeOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOdu.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1072)
)
alarmBackwardDefectIndicationOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOdu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1073)
)
alarmAlarmIndicationSignalOduTcmA.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOduTcmA.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1074)
)
alarmOpenConnectionIndicationOduTcmA.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOduTcmA.setStatus(
        "current"
    )

alarmLockedDefectOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1075)
)
alarmLockedDefectOduTcmA.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLockedDefectOduTcmA.setStatus(
        "current"
    )

alarmLossofTandemConnectionOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1076)
)
alarmLossofTandemConnectionOduTcmA.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofTandemConnectionOduTcmA.setStatus(
        "current"
    )

alarmSignalDegradeOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1077)
)
alarmSignalDegradeOduTcmA.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOduTcmA.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1078)
)
alarmBackwardDefectIndicationOduTcmA.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOduTcmA.setStatus(
        "current"
    )

alarmPayloadMismatchOPU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1079)
)
alarmPayloadMismatchOPU.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchOPU.setStatus(
        "current"
    )

alarmMultiplexStructureIdentifierMismatchOPU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1080)
)
alarmMultiplexStructureIdentifierMismatchOPU.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMultiplexStructureIdentifierMismatchOPU.setStatus(
        "current"
    )

alarmLossOfFrame = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1081)
)
alarmLossOfFrame.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfFrame.setStatus(
        "current"
    )

alarmSectionSignalFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1082)
)
alarmSectionSignalFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSectionSignalFailure.setStatus(
        "deprecated"
    )

alarmAutoShutdownSendingAisLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1083)
)
alarmAutoShutdownSendingAisLine.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingAisLine.setStatus(
        "current"
    )

alarmAlarmIndicationSignalLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1084)
)
alarmAlarmIndicationSignalLine.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalLine.setStatus(
        "current"
    )

alarmRemoteDefectIndicationLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1085)
)
alarmRemoteDefectIndicationLine.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRemoteDefectIndicationLine.setStatus(
        "current"
    )

alarmSignalDegradeLine = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1086)
)
alarmSignalDegradeLine.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeLine.setStatus(
        "current"
    )

alarmAlarmIndicationSignalHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1087)
)
alarmAlarmIndicationSignalHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalHigherOrderPath.setStatus(
        "current"
    )

alarmLossOfPointerHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1088)
)
alarmLossOfPointerHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfPointerHigherOrderPath.setStatus(
        "current"
    )

alarmLossofMultiframeHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1089)
)
alarmLossofMultiframeHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofMultiframeHigherOrderPath.setStatus(
        "current"
    )

alarmLossofSequenceHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1090)
)
alarmLossofSequenceHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofSequenceHigherOrderPath.setStatus(
        "current"
    )

alarmUnequippedHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1091)
)
alarmUnequippedHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmUnequippedHigherOrderPath.setStatus(
        "current"
    )

alarmPayloadMismatchHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1092)
)
alarmPayloadMismatchHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchHigherOrderPath.setStatus(
        "current"
    )

alarmRemoteDefectIndicationHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1093)
)
alarmRemoteDefectIndicationHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRemoteDefectIndicationHigherOrderPath.setStatus(
        "current"
    )

alarmSignalDegradeHigherOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1094)
)
alarmSignalDegradeHigherOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeHigherOrderPath.setStatus(
        "deprecated"
    )

alarmAlarmIndicationSignalLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1095)
)
alarmAlarmIndicationSignalLowerOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalLowerOrderPath.setStatus(
        "current"
    )

alarmLossOfPointerLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1096)
)
alarmLossOfPointerLowerOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfPointerLowerOrderPath.setStatus(
        "current"
    )

alarmLossofMultiframeLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1097)
)
alarmLossofMultiframeLowerOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofMultiframeLowerOrderPath.setStatus(
        "current"
    )

alarmLossofSequenceLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1098)
)
alarmLossofSequenceLowerOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofSequenceLowerOrderPath.setStatus(
        "current"
    )

alarmUnequippedLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1099)
)
alarmUnequippedLowerOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmUnequippedLowerOrderPath.setStatus(
        "current"
    )

alarmPayloadMismatchLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1100)
)
alarmPayloadMismatchLowerOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchLowerOrderPath.setStatus(
        "current"
    )

alarmRemoteDefectIndicationLowerOrderPath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1101)
)
alarmRemoteDefectIndicationLowerOrderPath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRemoteDefectIndicationLowerOrderPath.setStatus(
        "current"
    )

alarmLossOfMultiframeVCG = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1102)
)
alarmLossOfMultiframeVCG.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfMultiframeVCG.setStatus(
        "deprecated"
    )

alarmLossOfSequenceVCG = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1103)
)
alarmLossOfSequenceVCG.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfSequenceVCG.setStatus(
        "deprecated"
    )

alarmLossofAlignmentVCG = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1104)
)
alarmLossofAlignmentVCG.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofAlignmentVCG.setStatus(
        "deprecated"
    )

alarmAutoShutdownSendingEPC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1105)
)
alarmAutoShutdownSendingEPC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingEPC.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1106)
)
alarmThres15MinExceededPhysConvES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvES.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1107)
)
alarmThres15MinExceededPhysConvCV.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvCV.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1108)
)
alarmThres15MinExceededPhysConvDE.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvDE.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvCVDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1109)
)
alarmThres15MinExceededPhysConvCVDE.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvCVDE.setStatus(
        "current"
    )

alarmLossOfGfpFrame = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1110)
)
alarmLossOfGfpFrame.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfGfpFrame.setStatus(
        "current"
    )

alarmPayloadMismatchGfp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1111)
)
alarmPayloadMismatchGfp.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPayloadMismatchGfp.setStatus(
        "current"
    )

alarmGfpLossOfClientSig = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1112)
)
alarmGfpLossOfClientSig.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmGfpLossOfClientSig.setStatus(
        "current"
    )

alarmLossOfCharSyncFromFarEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1113)
)
alarmLossOfCharSyncFromFarEnd.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfCharSyncFromFarEnd.setStatus(
        "current"
    )

alarmSwitchtoProtectionInhibited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1114)
)
alarmSwitchtoProtectionInhibited.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSwitchtoProtectionInhibited.setStatus(
        "current"
    )

alarmSwitchtoWorkingInhibited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1115)
)
alarmSwitchtoWorkingInhibited.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSwitchtoWorkingInhibited.setStatus(
        "current"
    )

alarmOTDRMeasuringinProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1116)
)
alarmOTDRMeasuringinProgress.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOTDRMeasuringinProgress.setStatus(
        "current"
    )

alarmProtectionNotAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1117)
)
alarmProtectionNotAvailable.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmProtectionNotAvailable.setStatus(
        "current"
    )

alarmApsConfigMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1118)
)
alarmApsConfigMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmApsConfigMismatch.setStatus(
        "current"
    )

alarmEmbeddedOperationsChannelFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1119)
)
alarmEmbeddedOperationsChannelFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEmbeddedOperationsChannelFailure.setStatus(
        "current"
    )

alarmSignalDegradeSection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1120)
)
alarmSignalDegradeSection.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeSection.setStatus(
        "deprecated"
    )

alarmSignalDegradationonLinkVector = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1121)
)
alarmSignalDegradationonLinkVector.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradationonLinkVector.setStatus(
        "current"
    )

alarmSignalFailureonLinkVector = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1122)
)
alarmSignalFailureonLinkVector.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalFailureonLinkVector.setStatus(
        "current"
    )

alarmInputVoltageFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1123)
)
alarmInputVoltageFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmInputVoltageFailure.setStatus(
        "current"
    )

alarmPowerSupplyUnitFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1124)
)
alarmPowerSupplyUnitFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPowerSupplyUnitFailure.setStatus(
        "current"
    )

alarmCurrentTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1125)
)
alarmCurrentTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCurrentTooLow.setStatus(
        "current"
    )

alarmCurrentTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1126)
)
alarmCurrentTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCurrentTooHigh.setStatus(
        "current"
    )

alarmMultipleFanFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1127)
)
alarmMultipleFanFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMultipleFanFailure.setStatus(
        "current"
    )

alarmSingleFanFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1128)
)
alarmSingleFanFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSingleFanFailure.setStatus(
        "current"
    )

alarmLinkDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1129)
)
alarmLinkDown.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLinkDown.setStatus(
        "current"
    )

alarmVoltageOutOfRange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1130)
)
alarmVoltageOutOfRange.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmVoltageOutOfRange.setStatus(
        "current"
    )

alarmPeerLink = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1131)
)
alarmPeerLink.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPeerLink.setStatus(
        "current"
    )

alarmHwFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1132)
)
alarmHwFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmHwFailure.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1133)
)
alarmAlarmIndicationSignalOduTcmB.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOduTcmB.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1134)
)
alarmOpenConnectionIndicationOduTcmB.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOduTcmB.setStatus(
        "current"
    )

alarmLockedDefectOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1135)
)
alarmLockedDefectOduTcmB.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLockedDefectOduTcmB.setStatus(
        "current"
    )

alarmLossofTandemConnectionOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1136)
)
alarmLossofTandemConnectionOduTcmB.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofTandemConnectionOduTcmB.setStatus(
        "current"
    )

alarmSignalDegradeOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1137)
)
alarmSignalDegradeOduTcmB.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOduTcmB.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1138)
)
alarmBackwardDefectIndicationOduTcmB.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOduTcmB.setStatus(
        "current"
    )

alarmApsProtocolFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1139)
)
alarmApsProtocolFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmApsProtocolFailure.setStatus(
        "current"
    )

alarmApdLowVoltage = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1140)
)
alarmApdLowVoltage.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmApdLowVoltage.setStatus(
        "deprecated"
    )

alarmApdHighVoltage = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1141)
)
alarmApdHighVoltage.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmApdHighVoltage.setStatus(
        "deprecated"
    )

alarmLinkControlProtocolFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1142)
)
alarmLinkControlProtocolFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLinkControlProtocolFailure.setStatus(
        "current"
    )

alarmReceiverLowTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1143)
)
alarmReceiverLowTemp.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmReceiverLowTemp.setStatus(
        "deprecated"
    )

alarmReceiverHighTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1144)
)
alarmReceiverHighTemp.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmReceiverHighTemp.setStatus(
        "deprecated"
    )

alarmThermoElectricCoolerCurrentTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1145)
)
alarmThermoElectricCoolerCurrentTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThermoElectricCoolerCurrentTooLow.setStatus(
        "deprecated"
    )

alarmThermoElectricCoolerCurrentTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1146)
)
alarmThermoElectricCoolerCurrentTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThermoElectricCoolerCurrentTooHigh.setStatus(
        "deprecated"
    )

alarmSubModuleTempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1147)
)
alarmSubModuleTempTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSubModuleTempTooHigh.setStatus(
        "current"
    )

alarmSignalDegradeOlm = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1148)
)
alarmSignalDegradeOlm.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOlm.setStatus(
        "current"
    )

alarmReceiverOverloadProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1149)
)
alarmReceiverOverloadProtection.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmReceiverOverloadProtection.setStatus(
        "current"
    )

alarmLossOfFrameMux = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1150)
)
alarmLossOfFrameMux.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfFrameMux.setStatus(
        "current"
    )

alarmLossOfFrameMuxFarEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1151)
)
alarmLossOfFrameMuxFarEnd.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfFrameMuxFarEnd.setStatus(
        "current"
    )

alarmLossOfCharSync = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1152)
)
alarmLossOfCharSync.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfCharSync.setStatus(
        "current"
    )

alarmThres15MinExceededFecCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1153)
)
alarmThres15MinExceededFecCE.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecCE.setStatus(
        "current"
    )

alarmThres15MinExceededFecUBE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1154)
)
alarmThres15MinExceededFecUBE.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecUBE.setStatus(
        "current"
    )

alarmThres15MinExceededFecES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1155)
)
alarmThres15MinExceededFecES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecES.setStatus(
        "current"
    )

alarmThres15MinExceededFecSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1156)
)
alarmThres15MinExceededFecSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecSES.setStatus(
        "current"
    )

alarmThres15MinExceededMuxES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1157)
)
alarmThres15MinExceededMuxES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededMuxES.setStatus(
        "current"
    )

alarmThres15MinExceededMuxSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1158)
)
alarmThres15MinExceededMuxSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededMuxSES.setStatus(
        "current"
    )

alarmThres15MinExceededGfpCHEC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1159)
)
alarmThres15MinExceededGfpCHEC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededGfpCHEC.setStatus(
        "current"
    )

alarmThres15MinExceededGfpTHEC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1160)
)
alarmThres15MinExceededGfpTHEC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededGfpTHEC.setStatus(
        "current"
    )

alarmThres15MinExceededGfpTHecDisc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1161)
)
alarmThres15MinExceededGfpTHecDisc.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededGfpTHecDisc.setStatus(
        "current"
    )

alarmThres15MinExceededGfpTsuperblockDisc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1162)
)
alarmThres15MinExceededGfpTsuperblockDisc.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededGfpTsuperblockDisc.setStatus(
        "current"
    )

alarmIntrusionRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1163)
)
alarmIntrusionRx.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmIntrusionRx.setStatus(
        "deprecated"
    )

alarmIntrusionTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1164)
)
alarmIntrusionTx.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmIntrusionTx.setStatus(
        "deprecated"
    )

alarmAutoShutdownLaserOffDueToHighTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1165)
)
alarmAutoShutdownLaserOffDueToHighTemp.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownLaserOffDueToHighTemp.setStatus(
        "current"
    )

alarmAutoShutdownLaserOffDueToHighTxPwr = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1166)
)
alarmAutoShutdownLaserOffDueToHighTxPwr.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownLaserOffDueToHighTxPwr.setStatus(
        "current"
    )

alarmLaserEndOfLife = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1167)
)
alarmLaserEndOfLife.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLaserEndOfLife.setStatus(
        "current"
    )

alarmLaserBiasCurrAbnormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1168)
)
alarmLaserBiasCurrAbnormal.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLaserBiasCurrAbnormal.setStatus(
        "current"
    )

alarmOpticalPowerTxLOS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1169)
)
alarmOpticalPowerTxLOS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpticalPowerTxLOS.setStatus(
        "current"
    )

alarmMidstageFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1170)
)
alarmMidstageFault.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMidstageFault.setStatus(
        "current"
    )

alarmFarEndIpAddressUnknown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1171)
)
alarmFarEndIpAddressUnknown.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFarEndIpAddressUnknown.setStatus(
        "current"
    )

alarmTopologyDataCalculationInProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1172)
)
alarmTopologyDataCalculationInProgress.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTopologyDataCalculationInProgress.setStatus(
        "current"
    )

alarmNtpServer1Unreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1173)
)
alarmNtpServer1Unreachable.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmNtpServer1Unreachable.setStatus(
        "current"
    )

alarmNtpServer2Unreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1174)
)
alarmNtpServer2Unreachable.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmNtpServer2Unreachable.setStatus(
        "current"
    )

alarmNtpServer3Unreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1175)
)
alarmNtpServer3Unreachable.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmNtpServer3Unreachable.setStatus(
        "current"
    )

alarmAutoShutdownSendingAisOpu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1176)
)
alarmAutoShutdownSendingAisOpu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingAisOpu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOpu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1177)
)
alarmAlarmIndicationSignalOpu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOpu.setStatus(
        "current"
    )

alarmAlarmIndicationSignalOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1178)
)
alarmAlarmIndicationSignalOduTcmC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAlarmIndicationSignalOduTcmC.setStatus(
        "current"
    )

alarmBackwardDefectIndicationOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1179)
)
alarmBackwardDefectIndicationOduTcmC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBackwardDefectIndicationOduTcmC.setStatus(
        "current"
    )

alarmLockedDefectOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1180)
)
alarmLockedDefectOduTcmC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLockedDefectOduTcmC.setStatus(
        "current"
    )

alarmLossofTandemConnectionOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1181)
)
alarmLossofTandemConnectionOduTcmC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossofTandemConnectionOduTcmC.setStatus(
        "current"
    )

alarmOpenConnectionIndicationOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1182)
)
alarmOpenConnectionIndicationOduTcmC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpenConnectionIndicationOduTcmC.setStatus(
        "current"
    )

alarmSignalDegradeOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1183)
)
alarmSignalDegradeOduTcmC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeOduTcmC.setStatus(
        "current"
    )

alarmLoopbackError = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1184)
)
alarmLoopbackError.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLoopbackError.setStatus(
        "current"
    )

alarmSectionTraceMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1185)
)
alarmSectionTraceMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSectionTraceMismatch.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1186)
)
alarmTraceIdentifierMismatchOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOtu.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1187)
)
alarmTraceIdentifierMismatchOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOdu.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOduTcmA = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1188)
)
alarmTraceIdentifierMismatchOduTcmA.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOduTcmA.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOduTcmC = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1189)
)
alarmTraceIdentifierMismatchOduTcmC.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOduTcmC.setStatus(
        "current"
    )

alarmTraceIdentifierMismatchOduTcmB = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1190)
)
alarmTraceIdentifierMismatchOduTcmB.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTraceIdentifierMismatchOduTcmB.setStatus(
        "current"
    )

alarmDatabaseMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1191)
)
alarmDatabaseMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDatabaseMismatch.setStatus(
        "current"
    )

alarmDatabaseNcuMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1192)
)
alarmDatabaseNcuMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDatabaseNcuMismatch.setStatus(
        "current"
    )

alarmServerSignalFailureSectionRS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1193)
)
alarmServerSignalFailureSectionRS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureSectionRS.setStatus(
        "current"
    )

alarmFwpMismatchDownloadServiceAffecting = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1194)
)
alarmFwpMismatchDownloadServiceAffecting.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFwpMismatchDownloadServiceAffecting.setStatus(
        "current"
    )

alarmFwpMismatchDownloadNotServiceAffecting = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1195)
)
alarmFwpMismatchDownloadNotServiceAffecting.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFwpMismatchDownloadNotServiceAffecting.setStatus(
        "current"
    )

alarmDatabaseVersionMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1196)
)
alarmDatabaseVersionMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDatabaseVersionMismatch.setStatus(
        "current"
    )

alarmClientFailForwarding = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1197)
)
alarmClientFailForwarding.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmClientFailForwarding.setStatus(
        "current"
    )

alarmVirtualChannelAis = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1198)
)
alarmVirtualChannelAis.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmVirtualChannelAis.setStatus(
        "current"
    )

alarmServerSignalFailureVf = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1199)
)
alarmServerSignalFailureVf.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureVf.setStatus(
        "current"
    )

alarmSignalFailureOnLink = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1200)
)
alarmSignalFailureOnLink.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalFailureOnLink.setStatus(
        "current"
    )

alarmServerSignalFailureGfp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1201)
)
alarmServerSignalFailureGfp.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureGfp.setStatus(
        "current"
    )

alarmServerSignalFailurePath = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1202)
)
alarmServerSignalFailurePath.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFailurePath.setStatus(
        "current"
    )

alarmGainTiltNotSettable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1203)
)
alarmGainTiltNotSettable.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmGainTiltNotSettable.setStatus(
        "current"
    )

alarmTxPowerLimited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1204)
)
alarmTxPowerLimited.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTxPowerLimited.setStatus(
        "current"
    )

alarmEqualizationProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1205)
)
alarmEqualizationProgress.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEqualizationProgress.setStatus(
        "current"
    )

alarmUPortFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1206)
)
alarmUPortFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmUPortFailure.setStatus(
        "current"
    )

alarmAutoShutdownBlock = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1207)
)
alarmAutoShutdownBlock.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownBlock.setStatus(
        "current"
    )

alarmServerSignalFailTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1208)
)
alarmServerSignalFailTx.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFailTx.setStatus(
        "current"
    )

alarmPayloadMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1209)
)
alarmPayloadMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPayloadMismatch.setStatus(
        "current"
    )

alarmVoaControlFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1210)
)
alarmVoaControlFail.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmVoaControlFail.setStatus(
        "current"
    )

alarmProvisioningLocked = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1211)
)
alarmProvisioningLocked.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmProvisioningLocked.setStatus(
        "current"
    )

alarmMansw = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1212)
)
alarmMansw.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMansw.setStatus(
        "current"
    )

alarmWtrTimerRunning = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1213)
)
alarmWtrTimerRunning.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmWtrTimerRunning.setStatus(
        "current"
    )

alarmPcsSignalDegrade = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1214)
)
alarmPcsSignalDegrade.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPcsSignalDegrade.setStatus(
        "current"
    )

alarmInputTIF = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1215)
)
alarmInputTIF.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("FspR7-MIB", "tifiConfigTifAlarmType"),
        ("FspR7-MIB", "tifiConfigTifAlarmMessage"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmInputTIF.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1216)
)
alarmThres15MinExceededSonetSectES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1217)
)
alarmThres15MinExceededSonetSectSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectSES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectSEFS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1218)
)
alarmThres15MinExceededSonetSectSEFS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectSEFS.setStatus(
        "current"
    )

alarmThres15MinExceededSonetSectCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1219)
)
alarmThres15MinExceededSonetSectCV.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetSectCV.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1220)
)
alarmThres15MinExceededSonetLineES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1221)
)
alarmThres15MinExceededSonetLineSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineSES.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1222)
)
alarmThres15MinExceededSonetLineCV.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineCV.setStatus(
        "current"
    )

alarmThres15MinExceededSonetLineUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1223)
)
alarmThres15MinExceededSonetLineUAS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededSonetLineUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmAES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1224)
)
alarmThres15MinExceededOduTcmAES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmAES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmASES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1225)
)
alarmThres15MinExceededOduTcmASES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmASES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmAUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1226)
)
alarmThres15MinExceededOduTcmAUAS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmAUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmABbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1227)
)
alarmThres15MinExceededOduTcmABbe.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmABbe.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1228)
)
alarmThres15MinExceededOduTcmBES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1229)
)
alarmThres15MinExceededOduTcmBSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBSES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1230)
)
alarmThres15MinExceededOduTcmBUAS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmBBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1231)
)
alarmThres15MinExceededOduTcmBBbe.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmBBbe.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1232)
)
alarmThres15MinExceededOduTcmCES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1233)
)
alarmThres15MinExceededOduTcmCSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCSES.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1234)
)
alarmThres15MinExceededOduTcmCUAS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduTcmCBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1235)
)
alarmThres15MinExceededOduTcmCBbe.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduTcmCBbe.setStatus(
        "current"
    )

alarmThres15MinExceededOtuES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1236)
)
alarmThres15MinExceededOtuES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuES.setStatus(
        "current"
    )

alarmThres15MinExceededOtuSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1237)
)
alarmThres15MinExceededOtuSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuSES.setStatus(
        "current"
    )

alarmThres15MinExceededOtuUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1238)
)
alarmThres15MinExceededOtuUAS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOtuBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1239)
)
alarmThres15MinExceededOtuBbe.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOtuBbe.setStatus(
        "current"
    )

alarmThres15MinExceededOduES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1240)
)
alarmThres15MinExceededOduES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduES.setStatus(
        "current"
    )

alarmThres15MinExceededOduSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1241)
)
alarmThres15MinExceededOduSES.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduSES.setStatus(
        "current"
    )

alarmThres15MinExceededOduUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1242)
)
alarmThres15MinExceededOduUAS.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduUAS.setStatus(
        "current"
    )

alarmThres15MinExceededOduBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1243)
)
alarmThres15MinExceededOduBbe.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededOduBbe.setStatus(
        "current"
    )

alarmThresOptPowerCtrlFailureLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1244)
)
alarmThresOptPowerCtrlFailureLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThresOptPowerCtrlFailureLow.setStatus(
        "current"
    )

alarmThresOptPowerCtrlFailureHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1245)
)
alarmThresOptPowerCtrlFailureHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThresOptPowerCtrlFailureHigh.setStatus(
        "current"
    )

alarmDcnServerSignalFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1246)
)
alarmDcnServerSignalFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDcnServerSignalFailure.setStatus(
        "current"
    )

alarmMaxPowerConsEquipModulesToHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1247)
)
alarmMaxPowerConsEquipModulesToHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMaxPowerConsEquipModulesToHigh.setStatus(
        "current"
    )

alarmMaxPowerConsProvModulesToHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1248)
)
alarmMaxPowerConsProvModulesToHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMaxPowerConsProvModulesToHigh.setStatus(
        "current"
    )

alarmEquipmentMismatchAllow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1249)
)
alarmEquipmentMismatchAllow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEquipmentMismatchAllow.setStatus(
        "current"
    )

alarmOosPrePostSig = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1250)
)
alarmOosPrePostSig.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosPrePostSig.setStatus(
        "current"
    )

alarmOosPrePostSigInSetUpProcess = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1251)
)
alarmOosPrePostSigInSetUpProcess.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosPrePostSigInSetUpProcess.setStatus(
        "current"
    )

alarmOosPrePostSigInTearDownProcess = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1252)
)
alarmOosPrePostSigInTearDownProcess.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosPrePostSigInTearDownProcess.setStatus(
        "current"
    )

alarmCpTunnelModificationInProgess = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1253)
)
alarmCpTunnelModificationInProgess.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCpTunnelModificationInProgess.setStatus(
        "current"
    )

alarmCapabilityLevelMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1254)
)
alarmCapabilityLevelMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCapabilityLevelMismatch.setStatus(
        "current"
    )

alarmOosPrePostSigEstablishFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1255)
)
alarmOosPrePostSigEstablishFailed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosPrePostSigEstablishFailed.setStatus(
        "current"
    )

alarmOosPrePostSigAfterPrecompFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1256)
)
alarmOosPrePostSigAfterPrecompFailed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOosPrePostSigAfterPrecompFailed.setStatus(
        "current"
    )

alarmCpTunnelEstablishFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1257)
)
alarmCpTunnelEstablishFailed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCpTunnelEstablishFailed.setStatus(
        "current"
    )

alarmCpTunnelPrecompFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1258)
)
alarmCpTunnelPrecompFailed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCpTunnelPrecompFailed.setStatus(
        "current"
    )

alarmLocalFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1259)
)
alarmLocalFault.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLocalFault.setStatus(
        "current"
    )

alarmOscPwrTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1260)
)
alarmOscPwrTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOscPwrTooHigh.setStatus(
        "current"
    )

alarmOscPwrTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1261)
)
alarmOscPwrTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOscPwrTooLow.setStatus(
        "current"
    )

alarmAseTableBuild = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1262)
)
alarmAseTableBuild.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableBuild.setStatus(
        "current"
    )

alarmAseTableNotAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1263)
)
alarmAseTableNotAvailable.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableNotAvailable.setStatus(
        "current"
    )

alarmAutomaticPowerReduction = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1264)
)
alarmAutomaticPowerReduction.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutomaticPowerReduction.setStatus(
        "current"
    )

alarmHighBer = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1266)
)
alarmHighBer.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmHighBer.setStatus(
        "current"
    )

alarmPumpLaser1TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1267)
)
alarmPumpLaser1TempTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser1TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser1TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1268)
)
alarmPumpLaser1TempTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser1TempTooLow.setStatus(
        "current"
    )

alarmPumpLaser2TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1269)
)
alarmPumpLaser2TempTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser2TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser2TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1270)
)
alarmPumpLaser2TempTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser2TempTooLow.setStatus(
        "current"
    )

alarmOspfIpServerNotAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1271)
)
alarmOspfIpServerNotAvailable.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOspfIpServerNotAvailable.setStatus(
        "current"
    )

alarmLossOsc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1272)
)
alarmLossOsc.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOsc.setStatus(
        "current"
    )

alarmBrPwrRxTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1273)
)
alarmBrPwrRxTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBrPwrRxTooHigh.setStatus(
        "current"
    )

alarmAseTableGenFailSignalinput = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1274)
)
alarmAseTableGenFailSignalinput.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailSignalinput.setStatus(
        "current"
    )

alarmAseTableGenFailOscMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1275)
)
alarmAseTableGenFailOscMissing.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailOscMissing.setStatus(
        "current"
    )

alarmAseTableGenFailHighBackreflection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1276)
)
alarmAseTableGenFailHighBackreflection.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailHighBackreflection.setStatus(
        "current"
    )

alarmRamanPumpPwrTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1277)
)
alarmRamanPumpPwrTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRamanPumpPwrTooHigh.setStatus(
        "current"
    )

alarmRamanPumpPwrTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1278)
)
alarmRamanPumpPwrTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRamanPumpPwrTooLow.setStatus(
        "current"
    )

alarmAutoPowerShutdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1279)
)
alarmAutoPowerShutdown.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoPowerShutdown.setStatus(
        "current"
    )

alarmAseTableGenFailLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1280)
)
alarmAseTableGenFailLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailLow.setStatus(
        "current"
    )

alarmAseLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1281)
)
alarmAseLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseLow.setStatus(
        "current"
    )

alarmConfigurableOpticalOutputPowerTransmittedTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1282)
)
alarmConfigurableOpticalOutputPowerTransmittedTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmConfigurableOpticalOutputPowerTransmittedTooHigh.setStatus(
        "current"
    )

alarmConfigurableOpticalOutputPowerTransmittedTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1283)
)
alarmConfigurableOpticalOutputPowerTransmittedTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmConfigurableOpticalOutputPowerTransmittedTooLow.setStatus(
        "current"
    )

alarmLosAttProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1284)
)
alarmLosAttProgress.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLosAttProgress.setStatus(
        "current"
    )

alarmAseTableGenProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1285)
)
alarmAseTableGenProgress.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableGenProgress.setStatus(
        "current"
    )

alarmSignalDegradeScn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1286)
)
alarmSignalDegradeScn.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalDegradeScn.setStatus(
        "current"
    )

alarmDispertionTunningCondition = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1287)
)
alarmDispertionTunningCondition.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDispertionTunningCondition.setStatus(
        "current"
    )

alarmTurnupCondition = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1288)
)
alarmTurnupCondition.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTurnupCondition.setStatus(
        "current"
    )

alarmTurnupFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1289)
)
alarmTurnupFailed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmTurnupFailed.setStatus(
        "current"
    )

alarmFaultOnOpm = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1301)
)
alarmFaultOnOpm.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFaultOnOpm.setStatus(
        "current"
    )

alarmOptSignalFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1302)
)
alarmOptSignalFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOptSignalFailure.setStatus(
        "current"
    )

alarmOpmAbnormalCondition = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1303)
)
alarmOpmAbnormalCondition.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpmAbnormalCondition.setStatus(
        "current"
    )

alarmHwOprReachedHT = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1304)
)
alarmHwOprReachedHT.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmHwOprReachedHT.setStatus(
        "current"
    )

alarmDisabledChannelPowerTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1305)
)
alarmDisabledChannelPowerTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDisabledChannelPowerTooHigh.setStatus(
        "current"
    )

alarmLossOfSignalCPort = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1306)
)
alarmLossOfSignalCPort.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfSignalCPort.setStatus(
        "current"
    )

alarmLossOfSignalNPort = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1307)
)
alarmLossOfSignalNPort.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfSignalNPort.setStatus(
        "current"
    )

alarmServerSignalFailureODU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1308)
)
alarmServerSignalFailureODU.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureODU.setStatus(
        "current"
    )

alarmSignalFailureOPU = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1309)
)
alarmSignalFailureOPU.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalFailureOPU.setStatus(
        "current"
    )

alarmServerSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1310)
)
alarmServerSignalFail.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFail.setStatus(
        "current"
    )

alarmServerSignalReduced = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1311)
)
alarmServerSignalReduced.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalReduced.setStatus(
        "current"
    )

alarmDispersionCompensationTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1312)
)
alarmDispersionCompensationTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDispersionCompensationTooLow.setStatus(
        "current"
    )

alarmDispersionCompensationTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1313)
)
alarmDispersionCompensationTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDispersionCompensationTooHigh.setStatus(
        "current"
    )

alarmFarEndCommFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1315)
)
alarmFarEndCommFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFarEndCommFailure.setStatus(
        "current"
    )

alarmLinkAttenuationTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1316)
)
alarmLinkAttenuationTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLinkAttenuationTooLow.setStatus(
        "current"
    )

alarmLinkAttenuationTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1317)
)
alarmLinkAttenuationTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLinkAttenuationTooHigh.setStatus(
        "current"
    )

alarmEntityOutageIndication = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1320)
)
alarmEntityOutageIndication.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEntityOutageIndication.setStatus(
        "current"
    )

alarmFiberConnectionMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1321)
)
alarmFiberConnectionMissing.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFiberConnectionMissing.setStatus(
        "current"
    )

alarmFarEndInformationMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1322)
)
alarmFarEndInformationMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFarEndInformationMismatch.setStatus(
        "current"
    )

alarmAutomaticPowerReductionForEyeSafety = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1325)
)
alarmAutomaticPowerReductionForEyeSafety.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutomaticPowerReductionForEyeSafety.setStatus(
        "current"
    )

alarmLossOfPilotSignal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1326)
)
alarmLossOfPilotSignal.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfPilotSignal.setStatus(
        "current"
    )

alarmPumpLaser3TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1327)
)
alarmPumpLaser3TempTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser3TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser3TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1328)
)
alarmPumpLaser3TempTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser3TempTooLow.setStatus(
        "current"
    )

alarmPilotReceiveLevelHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1329)
)
alarmPilotReceiveLevelHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPilotReceiveLevelHigh.setStatus(
        "current"
    )

alarmAutoShutdownStbyProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1330)
)
alarmAutoShutdownStbyProtection.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownStbyProtection.setStatus(
        "current"
    )

alarmDatabaseFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1331)
)
alarmDatabaseFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDatabaseFailure.setStatus(
        "current"
    )

alarmLatencyTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1335)
)
alarmLatencyTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLatencyTooHigh.setStatus(
        "current"
    )

alarmLatencyTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1336)
)
alarmLatencyTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLatencyTooLow.setStatus(
        "current"
    )

alarmThres15MinExceededFecBERCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1337)
)
alarmThres15MinExceededFecBERCE.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededFecBERCE.setStatus(
        "current"
    )

alarmAutoShutdownSendingLckOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1338)
)
alarmAutoShutdownSendingLckOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingLckOdu.setStatus(
        "current"
    )

alarmNtpNotInSync = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1339)
)
alarmNtpNotInSync.setObjects(
      *(("FspR7-MIB", "ntpSrvCurrentConditionSeverity"),
        ("FspR7-MIB", "ntpSrvCurrentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmNtpNotInSync.setStatus(
        "current"
    )

alarmEncryptionModuleTamperDetected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1340)
)
alarmEncryptionModuleTamperDetected.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleTamperDetected.setStatus(
        "current"
    )

alarmEncryptionModuleCryPasswdMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1341)
)
alarmEncryptionModuleCryPasswdMissing.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleCryPasswdMissing.setStatus(
        "current"
    )

alarmEncryptionModuleCryPasswdError = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1342)
)
alarmEncryptionModuleCryPasswdError.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleCryPasswdError.setStatus(
        "current"
    )

alarmEncryptionModuleFwpUpdateEnabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1343)
)
alarmEncryptionModuleFwpUpdateEnabled.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleFwpUpdateEnabled.setStatus(
        "current"
    )

alarmEncryptionModuleSelfTestStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1344)
)
alarmEncryptionModuleSelfTestStarted.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleSelfTestStarted.setStatus(
        "current"
    )

alarmEncryptionModuleSelfTestFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1345)
)
alarmEncryptionModuleSelfTestFail.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleSelfTestFail.setStatus(
        "current"
    )

alarmEncryptionModuleSelfTestFailCritical = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1346)
)
alarmEncryptionModuleSelfTestFailCritical.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionModuleSelfTestFailCritical.setStatus(
        "current"
    )

alarmEncryptionPortAuthPasswdMissing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1350)
)
alarmEncryptionPortAuthPasswdMissing.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionPortAuthPasswdMissing.setStatus(
        "current"
    )

alarmEncryptionPortMaxKeyExchgFailuresReachedIs = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1351)
)
alarmEncryptionPortMaxKeyExchgFailuresReachedIs.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionPortMaxKeyExchgFailuresReachedIs.setStatus(
        "current"
    )

alarmEncryptionPortMaxKeyExchgFailuresReachedOos = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1352)
)
alarmEncryptionPortMaxKeyExchgFailuresReachedOos.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionPortMaxKeyExchgFailuresReachedOos.setStatus(
        "current"
    )

alarmEncryptionPortEncryptionSwitchedOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1353)
)
alarmEncryptionPortEncryptionSwitchedOff.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionPortEncryptionSwitchedOff.setStatus(
        "current"
    )

alarmEncryptionPortKeyExchangedForced = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1354)
)
alarmEncryptionPortKeyExchangedForced.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionPortKeyExchangedForced.setStatus(
        "current"
    )

alarmEncryptionPortEncryptionSwitchOffEnabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1355)
)
alarmEncryptionPortEncryptionSwitchOffEnabled.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionPortEncryptionSwitchOffEnabled.setStatus(
        "current"
    )

alarmEncryptionPortKeyInitExchgMissed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1356)
)
alarmEncryptionPortKeyInitExchgMissed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmEncryptionPortKeyInitExchgMissed.setStatus(
        "current"
    )

alarmRoundTripDelayTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1380)
)
alarmRoundTripDelayTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRoundTripDelayTooHigh.setStatus(
        "current"
    )

alarmRoundTripDelayTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1381)
)
alarmRoundTripDelayTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmRoundTripDelayTooLow.setStatus(
        "current"
    )

alarmAirDustFilterClogged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1385)
)
alarmAirDustFilterClogged.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAirDustFilterClogged.setStatus(
        "current"
    )

alarmNtpForSchedEqlzRequired = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1386)
)
alarmNtpForSchedEqlzRequired.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmNtpForSchedEqlzRequired.setStatus(
        "current"
    )

alarmOscOpticalPowerControlFailHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1387)
)
alarmOscOpticalPowerControlFailHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOscOpticalPowerControlFailHigh.setStatus(
        "current"
    )

alarmOscOpticalPowerControlFailLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1388)
)
alarmOscOpticalPowerControlFailLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOscOpticalPowerControlFailLow.setStatus(
        "current"
    )

alarmAmplifierAbnormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1389)
)
alarmAmplifierAbnormal.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAmplifierAbnormal.setStatus(
        "current"
    )

alarmAseTableGenFailPilot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1390)
)
alarmAseTableGenFailPilot.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAseTableGenFailPilot.setStatus(
        "current"
    )

alarmPumpLaser4TempTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1391)
)
alarmPumpLaser4TempTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser4TempTooHigh.setStatus(
        "current"
    )

alarmPumpLaser4TempTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1392)
)
alarmPumpLaser4TempTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPumpLaser4TempTooLow.setStatus(
        "current"
    )

alarmFwdAseTableFailPilot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1393)
)
alarmFwdAseTableFailPilot.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFwdAseTableFailPilot.setStatus(
        "current"
    )

alarmFwdAseTableOnPilot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1394)
)
alarmFwdAseTableOnPilot.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmFwdAseTableOnPilot.setStatus(
        "current"
    )

alarmInputVoltageFailurePort1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1395)
)
alarmInputVoltageFailurePort1.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmInputVoltageFailurePort1.setStatus(
        "current"
    )

alarmInputVoltageFailurePort2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1396)
)
alarmInputVoltageFailurePort2.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmInputVoltageFailurePort2.setStatus(
        "current"
    )

alarmXfpDecisionThresSetFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1397)
)
alarmXfpDecisionThresSetFailed.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmXfpDecisionThresSetFailed.setStatus(
        "current"
    )

alarmNtpSrvOosDsbld = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1398)
)
alarmNtpSrvOosDsbld.setObjects(
      *(("FspR7-MIB", "ntpSrvCurrentConditionSeverity"),
        ("FspR7-MIB", "ntpSrvCurrentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmNtpSrvOosDsbld.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvSE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1399)
)
alarmThres15MinExceededPhysConvSE.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvSE.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvESTX = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1400)
)
alarmThres15MinExceededPhysConvESTX.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvESTX.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvCVTX = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1401)
)
alarmThres15MinExceededPhysConvCVTX.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvCVTX.setStatus(
        "current"
    )

alarmThres15MinExceededPhysConvSETX = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1402)
)
alarmThres15MinExceededPhysConvSETX.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmThres15MinExceededPhysConvSETX.setStatus(
        "current"
    )

alarmPrbsRcvActivated = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1403)
)
alarmPrbsRcvActivated.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPrbsRcvActivated.setStatus(
        "current"
    )

alarmPrbsTrmtActivated = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1404)
)
alarmPrbsTrmtActivated.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPrbsTrmtActivated.setStatus(
        "current"
    )

alarmPrbsLossOfSeqSynch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1405)
)
alarmPrbsLossOfSeqSynch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmPrbsLossOfSeqSynch.setStatus(
        "current"
    )

alarmOpuClientSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1406)
)
alarmOpuClientSignalFail.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOpuClientSignalFail.setStatus(
        "current"
    )

alarmLossOfTestSeqSynchOpu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1407)
)
alarmLossOfTestSeqSynchOpu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfTestSeqSynchOpu.setStatus(
        "current"
    )

alarmAutoShutdownOpuClientSignalFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1408)
)
alarmAutoShutdownOpuClientSignalFail.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownOpuClientSignalFail.setStatus(
        "current"
    )

alarmLocalOscTemperatureTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1409)
)
alarmLocalOscTemperatureTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLocalOscTemperatureTooLow.setStatus(
        "current"
    )

alarmLocalOscTemperatureTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1410)
)
alarmLocalOscTemperatureTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLocalOscTemperatureTooHigh.setStatus(
        "current"
    )

alarmDifferentialGroupDelayTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1412)
)
alarmDifferentialGroupDelayTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDifferentialGroupDelayTooHigh.setStatus(
        "current"
    )

alarmChromaticDispersionTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1413)
)
alarmChromaticDispersionTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmChromaticDispersionTooLow.setStatus(
        "current"
    )

alarmChromaticDispersionTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1414)
)
alarmChromaticDispersionTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmChromaticDispersionTooHigh.setStatus(
        "current"
    )

alarmSignalToNoiseRatioTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1415)
)
alarmSignalToNoiseRatioTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSignalToNoiseRatioTooLow.setStatus(
        "current"
    )

alarmLocalOscLevelAbnormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1416)
)
alarmLocalOscLevelAbnormal.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLocalOscLevelAbnormal.setStatus(
        "current"
    )

alarmCarrierFreqOffsetTooLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1417)
)
alarmCarrierFreqOffsetTooLow.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCarrierFreqOffsetTooLow.setStatus(
        "current"
    )

alarmCarrierFreqOffsetTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1418)
)
alarmCarrierFreqOffsetTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmCarrierFreqOffsetTooHigh.setStatus(
        "current"
    )

alarmLossOfLane = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1419)
)
alarmLossOfLane.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfLane.setStatus(
        "current"
    )

alarmServerSignalFailureODUcrs = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1420)
)
alarmServerSignalFailureODUcrs.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmServerSignalFailureODUcrs.setStatus(
        "current"
    )

alarmAutoShutdownSendingOciOdu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1421)
)
alarmAutoShutdownSendingOciOdu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownSendingOciOdu.setStatus(
        "current"
    )

alarmOduTribMsiMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1422)
)
alarmOduTribMsiMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmOduTribMsiMismatch.setStatus(
        "current"
    )

alarmChannelMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1423)
)
alarmChannelMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmChannelMismatch.setStatus(
        "current"
    )

alarmEqlzAdjust = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1424)
)
if mibBuilder.loadTexts:
    alarmEqlzAdjust.setStatus(
        "current"
    )

alarmHwDegrade = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1425)
)
if mibBuilder.loadTexts:
    alarmHwDegrade.setStatus(
        "current"
    )

alarmHwInitializing = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1426)
)
if mibBuilder.loadTexts:
    alarmHwInitializing.setStatus(
        "current"
    )

alarmAmpFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1427)
)
if mibBuilder.loadTexts:
    alarmAmpFailure.setStatus(
        "current"
    )

alarmAutoAmpShutdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1428)
)
if mibBuilder.loadTexts:
    alarmAutoAmpShutdown.setStatus(
        "current"
    )

alarmFiberConnLos = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1429)
)
if mibBuilder.loadTexts:
    alarmFiberConnLos.setStatus(
        "current"
    )

alarmFiberConnOptFault = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1430)
)
if mibBuilder.loadTexts:
    alarmFiberConnOptFault.setStatus(
        "current"
    )

alarmFiberConnInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1431)
)
if mibBuilder.loadTexts:
    alarmFiberConnInvalid.setStatus(
        "current"
    )

alarmFiberConnMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1432)
)
if mibBuilder.loadTexts:
    alarmFiberConnMismatch.setStatus(
        "current"
    )

alarmFiberConnCommError = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1433)
)
if mibBuilder.loadTexts:
    alarmFiberConnCommError.setStatus(
        "current"
    )

alarmFiberConnProtocolFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1434)
)
if mibBuilder.loadTexts:
    alarmFiberConnProtocolFailure.setStatus(
        "current"
    )

alarmFiberConnDataFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1435)
)
if mibBuilder.loadTexts:
    alarmFiberConnDataFailure.setStatus(
        "current"
    )

alarmFiberAttenuationHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1436)
)
if mibBuilder.loadTexts:
    alarmFiberAttenuationHigh.setStatus(
        "current"
    )

alarmFiberConnInvalidTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1437)
)
if mibBuilder.loadTexts:
    alarmFiberConnInvalidTx.setStatus(
        "current"
    )

alarmFiberConnMismatchTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1438)
)
if mibBuilder.loadTexts:
    alarmFiberConnMismatchTx.setStatus(
        "current"
    )

alarmFiberAttenuationHighTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1439)
)
if mibBuilder.loadTexts:
    alarmFiberAttenuationHighTx.setStatus(
        "current"
    )

alarmSwitchToDuplexInhibited = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1440)
)
alarmSwitchToDuplexInhibited.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmSwitchToDuplexInhibited.setStatus(
        "current"
    )

alarmMeaSwRevision = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1441)
)
alarmMeaSwRevision.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmMeaSwRevision.setStatus(
        "current"
    )

alarmDbReplicationIncompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1442)
)
alarmDbReplicationIncompleted.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDbReplicationIncompleted.setStatus(
        "current"
    )

alarmBackupNotResponding = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1443)
)
alarmBackupNotResponding.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBackupNotResponding.setStatus(
        "current"
    )

alarmBackupForcedToHalt = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1444)
)
alarmBackupForcedToHalt.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmBackupForcedToHalt.setStatus(
        "current"
    )

alarmDuplexLinkFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1445)
)
alarmDuplexLinkFailure.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmDuplexLinkFailure.setStatus(
        "current"
    )

alarmProvPayloadMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1446)
)
alarmProvPayloadMismatch.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmProvPayloadMismatch.setStatus(
        "current"
    )

alarmAutoShutdownOpuFlxCSF = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1447)
)
alarmAutoShutdownOpuFlxCSF.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownOpuFlxCSF.setStatus(
        "current"
    )

alarmLogicalLanesSkewTooHigh = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1448)
)
alarmLogicalLanesSkewTooHigh.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLogicalLanesSkewTooHigh.setStatus(
        "current"
    )

alarmFiberAttenuationCond = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1449)
)
if mibBuilder.loadTexts:
    alarmFiberAttenuationCond.setStatus(
        "current"
    )

alarmLaserOnDelay = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1450)
)
alarmLaserOnDelay.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLaserOnDelay.setStatus(
        "current"
    )

alarmAutoShutdownTxRxLasersDueToHighTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1451)
)
alarmAutoShutdownTxRxLasersDueToHighTemp.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownTxRxLasersDueToHighTemp.setStatus(
        "current"
    )

alarmPtpEntityOosDisabled = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1452)
)
if mibBuilder.loadTexts:
    alarmPtpEntityOosDisabled.setStatus(
        "current"
    )

ptpEntityOosManagement = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1453)
)
if mibBuilder.loadTexts:
    ptpEntityOosManagement.setStatus(
        "current"
    )

ptpEntityOosMaintenance = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1454)
)
if mibBuilder.loadTexts:
    ptpEntityOosMaintenance.setStatus(
        "current"
    )

ptpEntityOosAins = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1455)
)
if mibBuilder.loadTexts:
    ptpEntityOosAins.setStatus(
        "current"
    )

alarmLossOfLaneOtu = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1456)
)
alarmLossOfLaneOtu.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmLossOfLaneOtu.setStatus(
        "current"
    )

alarmAutoShutdownAmpAps = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 1459)
)
alarmAutoShutdownAmpAps.setObjects(
      *(("FspR7-MIB", "currentConditionSeverity"),
        ("FspR7-MIB", "currentConditionAffect"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    alarmAutoShutdownAmpAps.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3001)
)
transientThres1DayExceededPhysConvES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvES.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3002)
)
transientThres1DayExceededPhysConvCV.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvCV.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3003)
)
transientThres1DayExceededPhysConvDE.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvDE.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvCVDE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3004)
)
transientThres1DayExceededPhysConvCVDE.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvCVDE.setStatus(
        "current"
    )

transientMin15RecordsAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3005)
)
transientMin15RecordsAvailable.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientMin15RecordsAvailable.setStatus(
        "current"
    )

transientDay1RecordsAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3006)
)
transientDay1RecordsAvailable.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientDay1RecordsAvailable.setStatus(
        "current"
    )

transientWeek1RecordsAvailable = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3007)
)
transientWeek1RecordsAvailable.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientWeek1RecordsAvailable.setStatus(
        "current"
    )

transientNeColdStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3008)
)
transientNeColdStart.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientNeColdStart.setStatus(
        "current"
    )

transientWorkingSwitchedtoProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3009)
)
transientWorkingSwitchedtoProtection.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientWorkingSwitchedtoProtection.setStatus(
        "current"
    )

transientWorkingSwitchedBacktoWorking = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3010)
)
transientWorkingSwitchedBacktoWorking.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientWorkingSwitchedBacktoWorking.setStatus(
        "current"
    )

transientManualWorkingSwitchedtoProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3011)
)
transientManualWorkingSwitchedtoProtection.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientManualWorkingSwitchedtoProtection.setStatus(
        "current"
    )

transientManualWorkingSwitchedBacktoWorking = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3012)
)
transientManualWorkingSwitchedBacktoWorking.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientManualWorkingSwitchedBacktoWorking.setStatus(
        "current"
    )

transientForcedWorkingSwitchedBacktoWorking = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3013)
)
transientForcedWorkingSwitchedBacktoWorking.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientForcedWorkingSwitchedBacktoWorking.setStatus(
        "current"
    )

transientForcedWorkingSwitchedBacktoProtection = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3014)
)
transientForcedWorkingSwitchedBacktoProtection.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientForcedWorkingSwitchedBacktoProtection.setStatus(
        "current"
    )

transientThres1DayExceededBytesTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3015)
)
transientThres1DayExceededBytesTx.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededBytesTx.setStatus(
        "deprecated"
    )

transientThres1DayExceededFecCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3016)
)
transientThres1DayExceededFecCE.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecCE.setStatus(
        "current"
    )

transientThres1DayExceededFecUBE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3017)
)
transientThres1DayExceededFecUBE.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecUBE.setStatus(
        "current"
    )

transientThres1DayExceededFecES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3018)
)
transientThres1DayExceededFecES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecES.setStatus(
        "current"
    )

transientThres1DayExceededFecSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3019)
)
transientThres1DayExceededFecSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecSES.setStatus(
        "current"
    )

transientThres1DayExceededMuxES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3020)
)
transientThres1DayExceededMuxES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededMuxES.setStatus(
        "current"
    )

transientThres1DayExceededMuxSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3021)
)
transientThres1DayExceededMuxSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededMuxSES.setStatus(
        "current"
    )

transientTopologyDataInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3022)
)
transientTopologyDataInvalid.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientTopologyDataInvalid.setStatus(
        "current"
    )

transientCopyFileFailNotExist = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3023)
)
transientCopyFileFailNotExist.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileFailNotExist.setStatus(
        "current"
    )

transientCopyFileConnectionFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3024)
)
transientCopyFileConnectionFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileConnectionFail.setStatus(
        "current"
    )

transientCopyFileLoginFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3025)
)
transientCopyFileLoginFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileLoginFail.setStatus(
        "current"
    )

transientCopyFileSpaceFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3026)
)
transientCopyFileSpaceFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileSpaceFail.setStatus(
        "current"
    )

transientCopyFileProtocolFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3027)
)
transientCopyFileProtocolFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileProtocolFail.setStatus(
        "current"
    )

transientCopyFileAccessDenied = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3028)
)
transientCopyFileAccessDenied.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileAccessDenied.setStatus(
        "current"
    )

transientCopyFileChecksumFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3029)
)
transientCopyFileChecksumFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileChecksumFail.setStatus(
        "current"
    )

transientCopyFileTransferStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3030)
)
transientCopyFileTransferStart.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileTransferStart.setStatus(
        "current"
    )

transientCopyFileTransferInProgress = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3031)
)
transientCopyFileTransferInProgress.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileTransferInProgress.setStatus(
        "current"
    )

transientCopyFileTransferComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3032)
)
transientCopyFileTransferComplete.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileTransferComplete.setStatus(
        "current"
    )

transientLocalCopyMemFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3033)
)
transientLocalCopyMemFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFail.setStatus(
        "current"
    )

transientLocalCopyFileStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3034)
)
transientLocalCopyFileStarted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyFileStarted.setStatus(
        "current"
    )

transientLocalCopyMemComplted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3035)
)
transientLocalCopyMemComplted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemComplted.setStatus(
        "current"
    )

transientSoftwareActivation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3036)
)
transientSoftwareActivation.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientSoftwareActivation.setStatus(
        "current"
    )

transientSoftwareActivationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3037)
)
transientSoftwareActivationFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientSoftwareActivationFail.setStatus(
        "current"
    )

transientDatabaseActivationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3038)
)
transientDatabaseActivationFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientDatabaseActivationFail.setStatus(
        "current"
    )

transientDatabaseActivation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3039)
)
transientDatabaseActivation.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientDatabaseActivation.setStatus(
        "current"
    )

transientBootUpFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3040)
)
transientBootUpFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientBootUpFailed.setStatus(
        "current"
    )

transientBootUpCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3041)
)
transientBootUpCompleted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientBootUpCompleted.setStatus(
        "current"
    )

transientBootUpStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3042)
)
transientBootUpStarted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientBootUpStarted.setStatus(
        "current"
    )

transientIntrusionRx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3043)
)
transientIntrusionRx.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientIntrusionRx.setStatus(
        "current"
    )

transientIntrusionTx = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3044)
)
transientIntrusionTx.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientIntrusionTx.setStatus(
        "current"
    )

transientDatabaseMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3045)
)
transientDatabaseMismatch.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientDatabaseMismatch.setStatus(
        "deprecated"
    )

transientSwResetReload = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3046)
)
transientSwResetReload.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientSwResetReload.setStatus(
        "current"
    )

transientInstallFwpCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3047)
)
transientInstallFwpCompleted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientInstallFwpCompleted.setStatus(
        "current"
    )

transientCopyFileSshHostKeyFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3048)
)
transientCopyFileSshHostKeyFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileSshHostKeyFail.setStatus(
        "current"
    )

transientCopyFileNoHostKeyFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3049)
)
transientCopyFileNoHostKeyFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileNoHostKeyFail.setStatus(
        "current"
    )

transientHardwareResetInputTIF = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3050)
)
transientHardwareResetInputTIF.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientHardwareResetInputTIF.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3051)
)
transientThres1DayExceededSonetSectES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectES.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3052)
)
transientThres1DayExceededSonetSectSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectSES.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectSEFS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3053)
)
transientThres1DayExceededSonetSectSEFS.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectSEFS.setStatus(
        "current"
    )

transientThres1DayExceededSonetSectCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3054)
)
transientThres1DayExceededSonetSectCV.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetSectCV.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3055)
)
transientThres1DayExceededSonetLineES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineES.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3056)
)
transientThres1DayExceededSonetLineSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineSES.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineCV = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3057)
)
transientThres1DayExceededSonetLineCV.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineCV.setStatus(
        "current"
    )

transientThres1DayExceededSonetLineUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3058)
)
transientThres1DayExceededSonetLineUAS.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededSonetLineUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmAES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3059)
)
transientThres1DayExceededOduTcmAES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmAES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmASES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3060)
)
transientThres1DayExceededOduTcmASES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmASES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmAUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3061)
)
transientThres1DayExceededOduTcmAUAS.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmAUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmABbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3062)
)
transientThres1DayExceededOduTcmABbe.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmABbe.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3063)
)
transientThres1DayExceededOduTcmBES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3064)
)
transientThres1DayExceededOduTcmBSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBSES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3065)
)
transientThres1DayExceededOduTcmBUAS.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmBBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3066)
)
transientThres1DayExceededOduTcmBBbe.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmBBbe.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3067)
)
transientThres1DayExceededOduTcmCES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3068)
)
transientThres1DayExceededOduTcmCSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCSES.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3069)
)
transientThres1DayExceededOduTcmCUAS.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduTcmCBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3070)
)
transientThres1DayExceededOduTcmCBbe.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduTcmCBbe.setStatus(
        "current"
    )

transientThres1DayExceededOtuES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3071)
)
transientThres1DayExceededOtuES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuES.setStatus(
        "current"
    )

transientThres1DayExceededOtuSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3072)
)
transientThres1DayExceededOtuSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuSES.setStatus(
        "current"
    )

transientThres1DayExceededOtuUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3073)
)
transientThres1DayExceededOtuUAS.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuUAS.setStatus(
        "current"
    )

transientThres1DayExceededOtuBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3074)
)
transientThres1DayExceededOtuBbe.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOtuBbe.setStatus(
        "current"
    )

transientThres1DayExceededOduES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3075)
)
transientThres1DayExceededOduES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduES.setStatus(
        "current"
    )

transientThres1DayExceededOduSES = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3076)
)
transientThres1DayExceededOduSES.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduSES.setStatus(
        "current"
    )

transientThres1DayExceededOduUAS = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3077)
)
transientThres1DayExceededOduUAS.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduUAS.setStatus(
        "current"
    )

transientThres1DayExceededOduBbe = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3078)
)
transientThres1DayExceededOduBbe.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededOduBbe.setStatus(
        "current"
    )

transientCpConnectionEstablishmentStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3080)
)
transientCpConnectionEstablishmentStart.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCpConnectionEstablishmentStart.setStatus(
        "current"
    )

transientCpConnectionEstablishmentFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3081)
)
transientCpConnectionEstablishmentFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCpConnectionEstablishmentFail.setStatus(
        "current"
    )

transientCpConnectionEstablishmentCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3082)
)
transientCpConnectionEstablishmentCompleted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCpConnectionEstablishmentCompleted.setStatus(
        "current"
    )

transientCpConnectionModificationStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3083)
)
transientCpConnectionModificationStart.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCpConnectionModificationStart.setStatus(
        "current"
    )

transientCpConnectionModificationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3084)
)
transientCpConnectionModificationFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCpConnectionModificationFail.setStatus(
        "current"
    )

transientCpConnectionModificationCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3085)
)
transientCpConnectionModificationCompleted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCpConnectionModificationCompleted.setStatus(
        "current"
    )

transientAlarmProfileActivation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3086)
)
transientAlarmProfileActivation.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientAlarmProfileActivation.setStatus(
        "current"
    )

transientAlarmProfileActivationFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3087)
)
transientAlarmProfileActivationFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientAlarmProfileActivationFail.setStatus(
        "current"
    )

transientCpConnectionEstablishmentAborted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3088)
)
transientCpConnectionEstablishmentAborted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCpConnectionEstablishmentAborted.setStatus(
        "current"
    )

transientEqlzStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3089)
)
transientEqlzStart.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEqlzStart.setStatus(
        "current"
    )

transientEqlzFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3090)
)
transientEqlzFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEqlzFailed.setStatus(
        "current"
    )

transientEqlzCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3091)
)
transientEqlzCompleted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEqlzCompleted.setStatus(
        "current"
    )

transientEqlzRequestDenied = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3100)
)
transientEqlzRequestDenied.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEqlzRequestDenied.setStatus(
        "current"
    )

transientEqlzNotRequired = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3101)
)
transientEqlzNotRequired.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEqlzNotRequired.setStatus(
        "current"
    )

transientEqlzProcessPassed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3102)
)
transientEqlzProcessPassed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEqlzProcessPassed.setStatus(
        "current"
    )

transientEqlzProcessWait = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3103)
)
transientEqlzProcessWait.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEqlzProcessWait.setStatus(
        "current"
    )

transientDispersionCompFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3110)
)
transientDispersionCompFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientDispersionCompFailed.setStatus(
        "current"
    )

transientAlpSettingStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3111)
)
transientAlpSettingStarted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientAlpSettingStarted.setStatus(
        "current"
    )

transientAlpSettingFinished = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3112)
)
transientAlpSettingFinished.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientAlpSettingFinished.setStatus(
        "current"
    )

transientFarEndDyingGasp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3113)
)
transientFarEndDyingGasp.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientFarEndDyingGasp.setStatus(
        "current"
    )

transientLocalCopyMemFailDenied = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3114)
)
transientLocalCopyMemFailDenied.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailDenied.setStatus(
        "current"
    )

transientLocalCopyMemFailCrcErr = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3115)
)
transientLocalCopyMemFailCrcErr.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailCrcErr.setStatus(
        "current"
    )

transientAlarmProfileFactoryDefaultActivation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3116)
)
transientAlarmProfileFactoryDefaultActivation.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientAlarmProfileFactoryDefaultActivation.setStatus(
        "current"
    )

transientLocalCopyMemFailVersionMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3120)
)
transientLocalCopyMemFailVersionMismatch.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailVersionMismatch.setStatus(
        "current"
    )

transientLocalCopyMemFailWrongState = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3121)
)
transientLocalCopyMemFailWrongState.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailWrongState.setStatus(
        "current"
    )

transientLocalCopyMemFailDamagedConfFile = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3122)
)
transientLocalCopyMemFailDamagedConfFile.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailDamagedConfFile.setStatus(
        "current"
    )

transientLocalCopyMemFailFsckFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3123)
)
transientLocalCopyMemFailFsckFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailFsckFailed.setStatus(
        "current"
    )

transientLocalCopyMemFailNotExist = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3124)
)
transientLocalCopyMemFailNotExist.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailNotExist.setStatus(
        "current"
    )

transientLocalCopyMemFailExist = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3125)
)
transientLocalCopyMemFailExist.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailExist.setStatus(
        "current"
    )

transientLocalCopyMemFailDisallowed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3126)
)
transientLocalCopyMemFailDisallowed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailDisallowed.setStatus(
        "current"
    )

transientLocalCopyMemFailLimitReached = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3127)
)
transientLocalCopyMemFailLimitReached.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailLimitReached.setStatus(
        "current"
    )

transientLocalCopyMemFailGeneration = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3140)
)
transientLocalCopyMemFailGeneration.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientLocalCopyMemFailGeneration.setStatus(
        "current"
    )

transientCopyFileFailDisabledProtocol = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3141)
)
transientCopyFileFailDisabledProtocol.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCopyFileFailDisabledProtocol.setStatus(
        "current"
    )

transientAutomaticBackupReport = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3142)
)
transientAutomaticBackupReport.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientAutomaticBackupReport.setStatus(
        "current"
    )

transientRestorationStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3160)
)
transientRestorationStart.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientRestorationStart.setStatus(
        "current"
    )

transientRestorationFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3161)
)
transientRestorationFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientRestorationFailed.setStatus(
        "current"
    )

transientRestorationCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3162)
)
transientRestorationCompleted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientRestorationCompleted.setStatus(
        "current"
    )

transientFarEndChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3163)
)
transientFarEndChanged.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientFarEndChanged.setStatus(
        "current"
    )

transientBootUpRejected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3170)
)
transientBootUpRejected.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientBootUpRejected.setStatus(
        "current"
    )

transientThres1DayExceededFecBERCE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3175)
)
transientThres1DayExceededFecBERCE.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededFecBERCE.setStatus(
        "current"
    )

transientPreComputationReady = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3180)
)
transientPreComputationReady.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientPreComputationReady.setStatus(
        "current"
    )

transientNeTimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3181)
)
if mibBuilder.loadTexts:
    transientNeTimeChanged.setStatus(
        "current"
    )

transientNtpSrvTestSuccessed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3182)
)
transientNtpSrvTestSuccessed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientNtpSrvTestSuccessed.setStatus(
        "current"
    )

transientNtpSrvTestFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3183)
)
transientNtpSrvTestFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientNtpSrvTestFailed.setStatus(
        "current"
    )

transientNtpSrvSyncStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3184)
)
transientNtpSrvSyncStarted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientNtpSrvSyncStarted.setStatus(
        "current"
    )

transientNtpSrvSyncFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3185)
)
transientNtpSrvSyncFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientNtpSrvSyncFailed.setStatus(
        "current"
    )

transientNtpSrvSyncEnded = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3186)
)
transientNtpSrvSyncEnded.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientNtpSrvSyncEnded.setStatus(
        "current"
    )

transientPmSnapshotStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3187)
)
transientPmSnapshotStarted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientPmSnapshotStarted.setStatus(
        "current"
    )

transientPmSnapshotEnded = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3188)
)
transientPmSnapshotEnded.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientPmSnapshotEnded.setStatus(
        "current"
    )

transientNtpSrvSyncChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3189)
)
transientNtpSrvSyncChanged.setObjects(
      *(("FspR7-MIB", "ntpServerSyncStatus"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientNtpSrvSyncChanged.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvSE = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3190)
)
transientThres1DayExceededPhysConvSE.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvSE.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvESTX = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3191)
)
transientThres1DayExceededPhysConvESTX.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvESTX.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvCVTX = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3192)
)
transientThres1DayExceededPhysConvCVTX.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvCVTX.setStatus(
        "current"
    )

transientThres1DayExceededPhysConvSETX = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3193)
)
transientThres1DayExceededPhysConvSETX.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientThres1DayExceededPhysConvSETX.setStatus(
        "current"
    )

transientCryptoRtf = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3194)
)
transientCryptoRtf.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoRtf.setStatus(
        "current"
    )

transientCryptoFwpRevChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3195)
)
transientCryptoFwpRevChanged.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoFwpRevChanged.setStatus(
        "current"
    )

transientCryptoPasswdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3196)
)
transientCryptoPasswdChanged.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoPasswdChanged.setStatus(
        "current"
    )

transientCryptoFwpUpdate = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3197)
)
transientCryptoFwpUpdate.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoFwpUpdate.setStatus(
        "current"
    )

transientCryptoKeyExchgFailCondClr = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3198)
)
transientCryptoKeyExchgFailCondClr.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoKeyExchgFailCondClr.setStatus(
        "current"
    )

transientCryptoAuthPasswdChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3199)
)
transientCryptoAuthPasswdChanged.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoAuthPasswdChanged.setStatus(
        "current"
    )

transientCryptoSessKeyLifetimeChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3200)
)
transientCryptoSessKeyLifetimeChanged.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoSessKeyLifetimeChanged.setStatus(
        "current"
    )

transientCryptoAuthPasswdInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3201)
)
transientCryptoAuthPasswdInvalid.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientCryptoAuthPasswdInvalid.setStatus(
        "current"
    )

transientEncryptionPortSingleKeyExchgFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3202)
)
transientEncryptionPortSingleKeyExchgFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientEncryptionPortSingleKeyExchgFailed.setStatus(
        "current"
    )

transientWaitToRevert = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3203)
)
transientWaitToRevert.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientWaitToRevert.setStatus(
        "current"
    )

transientReversionStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3204)
)
transientReversionStarted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientReversionStarted.setStatus(
        "current"
    )

transientReversionFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3205)
)
transientReversionFailed.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientReversionFailed.setStatus(
        "current"
    )

transientReversionCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3206)
)
transientReversionCompleted.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientReversionCompleted.setStatus(
        "current"
    )

transientFiberConnStatChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3207)
)
if mibBuilder.loadTexts:
    transientFiberConnStatChange.setStatus(
        "current"
    )

transientProtSwToDuplexStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3210)
)
transientProtSwToDuplexStart.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientProtSwToDuplexStart.setStatus(
        "current"
    )

transientProtSwToDuplexCompl = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3211)
)
if mibBuilder.loadTexts:
    transientProtSwToDuplexCompl.setStatus(
        "current"
    )

transientProtSwToDuplexFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3212)
)
transientProtSwToDuplexFail.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientProtSwToDuplexFail.setStatus(
        "current"
    )

transientForcedReboot = NotificationType(
    (1, 3, 6, 1, 4, 1, 2544, 1, 11, 2, 3, 0, 3220)
)
transientForcedReboot.setObjects(
      *(("ADVA-MIB", "entityIndex"),
        ("ADVA-MIB", "neEventLogTimeStamp"),
        ("ADVA-MIB", "neEventLogIdentityTranslation"))
)
if mibBuilder.loadTexts:
    transientForcedReboot.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "FspR7-MIB",
    **{"ApsDirection": ApsDirection,
       "ApsDirectionCaps": ApsDirectionCaps,
       "ApsRevertMode": ApsRevertMode,
       "ApsRevertModeCaps": ApsRevertModeCaps,
       "ApsType": ApsType,
       "ApsTypeCaps": ApsTypeCaps,
       "Counter64StringCaps": Counter64StringCaps,
       "FspR7AccessLevel": FspR7AccessLevel,
       "FspR7AccessProtocol": FspR7AccessProtocol,
       "FspR7AccessStatus": FspR7AccessStatus,
       "FspR7AccountFlag": FspR7AccountFlag,
       "FspR7Action": FspR7Action,
       "FspR7ActionCaps": FspR7ActionCaps,
       "FspR7AdminState": FspR7AdminState,
       "FspR7AdminStateCaps": FspR7AdminStateCaps,
       "FspR7AidType": FspR7AidType,
       "FspR7AlsHoldoff": FspR7AlsHoldoff,
       "FspR7AlsHoldoffCaps": FspR7AlsHoldoffCaps,
       "FspR7AlsMode": FspR7AlsMode,
       "FspR7AlsModeCaps": FspR7AlsModeCaps,
       "FspR7ApplyAlarmProfile": FspR7ApplyAlarmProfile,
       "FspR7ApplyAlarmProfileCaps": FspR7ApplyAlarmProfileCaps,
       "FspR7APSCommand": FspR7APSCommand,
       "FspR7APSCommandCaps": FspR7APSCommandCaps,
       "FspR7AseTabOpr": FspR7AseTabOpr,
       "FspR7AseTabOprCaps": FspR7AseTabOprCaps,
       "FspR7AutopLif": FspR7AutopLif,
       "FspR7AutopLifCaps": FspR7AutopLifCaps,
       "FspR7AutoThresReset": FspR7AutoThresReset,
       "FspR7AutoThresResetCaps": FspR7AutoThresResetCaps,
       "FspR7Baund": FspR7Baund,
       "FspR7BaundCaps": FspR7BaundCaps,
       "FspR7BERThreshold": FspR7BERThreshold,
       "FspR7BERThresholdCaps": FspR7BERThresholdCaps,
       "FspR7BERThresholdSection": FspR7BERThresholdSection,
       "FspR7BERThresholdSectionCaps": FspR7BERThresholdSectionCaps,
       "FspR7Bip": FspR7Bip,
       "FspR7BipCaps": FspR7BipCaps,
       "FspR7Bitrate": FspR7Bitrate,
       "FspR7BitrateCaps": FspR7BitrateCaps,
       "FspR7BootloaderAccess": FspR7BootloaderAccess,
       "FspR7CapInventory": FspR7CapInventory,
       "FspR7CapInventoryCaps": FspR7CapInventoryCaps,
       "FspR7Category": FspR7Category,
       "FspR7ChannelBandwidth": FspR7ChannelBandwidth,
       "FspR7ChannelBandwidthCaps": FspR7ChannelBandwidthCaps,
       "FspR7ChannelIdentifier": FspR7ChannelIdentifier,
       "FspR7ChannelIdentifierCaps": FspR7ChannelIdentifierCaps,
       "FspR7ChannelNumber": FspR7ChannelNumber,
       "FspR7ChannelNumberCaps": FspR7ChannelNumberCaps,
       "FspR7ChannelSpacing": FspR7ChannelSpacing,
       "FspR7ChannelSpacingCaps": FspR7ChannelSpacingCaps,
       "FspR7CodeGain": FspR7CodeGain,
       "FspR7CodeGainCaps": FspR7CodeGainCaps,
       "FspR7CommandModifier": FspR7CommandModifier,
       "FspR7CommandModifierCaps": FspR7CommandModifierCaps,
       "FspR7CommunityCmd": FspR7CommunityCmd,
       "FspR7Conn": FspR7Conn,
       "FspR7ConnCaps": FspR7ConnCaps,
       "FspR7ConnCommand": FspR7ConnCommand,
       "FspR7ConnectorType": FspR7ConnectorType,
       "FspR7ConnectorTypeCaps": FspR7ConnectorTypeCaps,
       "FspR7ConnectState": FspR7ConnectState,
       "FspR7CpAbortProcess": FspR7CpAbortProcess,
       "FspR7CpAbortProcessCaps": FspR7CpAbortProcessCaps,
       "FspR7CpActivState": FspR7CpActivState,
       "FspR7CpActivStateCaps": FspR7CpActivStateCaps,
       "FspR7CpAffinityInclusion": FspR7CpAffinityInclusion,
       "FspR7CpAffinityInclusionCaps": FspR7CpAffinityInclusionCaps,
       "FspR7CpAuthType": FspR7CpAuthType,
       "FspR7CpAuthTypeCaps": FspR7CpAuthTypeCaps,
       "FspR7CpCancConnection": FspR7CpCancConnection,
       "FspR7CpCancConnectionCaps": FspR7CpCancConnectionCaps,
       "FspR7CpCommand": FspR7CpCommand,
       "FspR7CpCommandCaps": FspR7CpCommandCaps,
       "FspR7CpCompState": FspR7CpCompState,
       "FspR7CpCompStateCaps": FspR7CpCompStateCaps,
       "FspR7CpEncapsulation": FspR7CpEncapsulation,
       "FspR7CpEncapsulationCaps": FspR7CpEncapsulationCaps,
       "FspR7CpEncode": FspR7CpEncode,
       "FspR7CpEncodeCaps": FspR7CpEncodeCaps,
       "FspR7CpErrorCategory": FspR7CpErrorCategory,
       "FspR7CpNePosition": FspR7CpNePosition,
       "FspR7CpNodeId": FspR7CpNodeId,
       "FspR7CpOperateReversion": FspR7CpOperateReversion,
       "FspR7CpOspfTeRouting": FspR7CpOspfTeRouting,
       "FspR7CpOspfTeRoutingCaps": FspR7CpOspfTeRoutingCaps,
       "FspR7CpPathType": FspR7CpPathType,
       "FspR7CpPinning": FspR7CpPinning,
       "FspR7CpPinningCaps": FspR7CpPinningCaps,
       "FspR7CpPreprovUeqState": FspR7CpPreprovUeqState,
       "FspR7CpPreprovUeqStateCaps": FspR7CpPreprovUeqStateCaps,
       "FspR7CpProtectionType": FspR7CpProtectionType,
       "FspR7CpProtectionTypeCaps": FspR7CpProtectionTypeCaps,
       "FspR7CpProtType": FspR7CpProtType,
       "FspR7CpRecoveryType": FspR7CpRecoveryType,
       "FspR7CpRecoveryTypeCaps": FspR7CpRecoveryTypeCaps,
       "FspR7CpRestorationState": FspR7CpRestorationState,
       "FspR7CpRestorationType": FspR7CpRestorationType,
       "FspR7CpRestorationTypeCaps": FspR7CpRestorationTypeCaps,
       "FspR7CpRestorationMode": FspR7CpRestorationMode,
       "FspR7CpRestorationModeCaps": FspR7CpRestorationModeCaps,
       "FspR7CpReversionState": FspR7CpReversionState,
       "FspR7CpReversionType": FspR7CpReversionType,
       "FspR7CpReversionTypeCaps": FspR7CpReversionTypeCaps,
       "FspR7CpRole": FspR7CpRole,
       "FspR7CpRsvpSignalling": FspR7CpRsvpSignalling,
       "FspR7CpRsvpSignallingCaps": FspR7CpRsvpSignallingCaps,
       "FspR7CpTEType": FspR7CpTEType,
       "FspR7CpTETypeCaps": FspR7CpTETypeCaps,
       "FspR7CpTie": FspR7CpTie,
       "FspR7CpTieCaps": FspR7CpTieCaps,
       "FspR7CpTunnelType": FspR7CpTunnelType,
       "FspR7CpTunnelTypeCaps": FspR7CpTunnelTypeCaps,
       "FspR7CpTunnelScope": FspR7CpTunnelScope,
       "FspR7CpTunnelScopeCaps": FspR7CpTunnelScopeCaps,
       "FspR7CpType": FspR7CpType,
       "FspR7CpTypeCaps": FspR7CpTypeCaps,
       "FspR7CpVTeType": FspR7CpVTeType,
       "FspR7CpVTeTypeCaps": FspR7CpVTeTypeCaps,
       "FspR7DatabaseType": FspR7DatabaseType,
       "FspR7Date": FspR7Date,
       "FspR7DCFiberType": FspR7DCFiberType,
       "FspR7DCFiberTypeCaps": FspR7DCFiberTypeCaps,
       "FspR7DeploymentScenario": FspR7DeploymentScenario,
       "FspR7DeploymentScenarioCaps": FspR7DeploymentScenarioCaps,
       "FspR7DisableEnable": FspR7DisableEnable,
       "FspR7DispersionCompensation": FspR7DispersionCompensation,
       "FspR7DispersionCompensationCaps": FspR7DispersionCompensationCaps,
       "FspR7DispersionConfig": FspR7DispersionConfig,
       "FspR7DispersionConfigCaps": FspR7DispersionConfigCaps,
       "FspR7DispersionModes": FspR7DispersionModes,
       "FspR7DispersionModesCaps": FspR7DispersionModesCaps,
       "FspR7EdfaOutputPowerRating": FspR7EdfaOutputPowerRating,
       "FspR7EdfaOutputPowerRatingCaps": FspR7EdfaOutputPowerRatingCaps,
       "FspR7EnableDisable": FspR7EnableDisable,
       "FspR7EnableDisableCaps": FspR7EnableDisableCaps,
       "FspR7EntitySecondaryStates": FspR7EntitySecondaryStates,
       "FspR7EntityType": FspR7EntityType,
       "FspR7EocProtAvailability": FspR7EocProtAvailability,
       "FspR7EqlzAdminState": FspR7EqlzAdminState,
       "FspR7EqlzAdminStateCaps": FspR7EqlzAdminStateCaps,
       "FspR7EqlzInterval": FspR7EqlzInterval,
       "FspR7EqlzIntervalCaps": FspR7EqlzIntervalCaps,
       "FspR7EquipmentType": FspR7EquipmentType,
       "FspR7EquipmentTypeCaps": FspR7EquipmentTypeCaps,
       "FspR7ErrorFwdMode": FspR7ErrorFwdMode,
       "FspR7ErrorFwdModeCaps": FspR7ErrorFwdModeCaps,
       "FspR7FalseTrue": FspR7FalseTrue,
       "FspR7FalseTrueCaps": FspR7FalseTrueCaps,
       "FspR7FDStatus": FspR7FDStatus,
       "FspR7FDStatusCaps": FspR7FDStatusCaps,
       "FspR7FecType": FspR7FecType,
       "FspR7FecTypeCaps": FspR7FecTypeCaps,
       "FspR7FiberBrand": FspR7FiberBrand,
       "FspR7FiberBrandCaps": FspR7FiberBrandCaps,
       "FspR7FiberDetect": FspR7FiberDetect,
       "FspR7FiberDetectCaps": FspR7FiberDetectCaps,
       "FspR7FlowControlMode": FspR7FlowControlMode,
       "FspR7FlowControlModeCaps": FspR7FlowControlModeCaps,
       "FspR7ForcedStatus": FspR7ForcedStatus,
       "FspR7ForcedStatusCaps": FspR7ForcedStatusCaps,
       "FspR7FrameFormat": FspR7FrameFormat,
       "FspR7FrameFormatCaps": FspR7FrameFormatCaps,
       "FspR7FtpServer": FspR7FtpServer,
       "FspR7FtpServerCaps": FspR7FtpServerCaps,
       "FspR7FtpClient": FspR7FtpClient,
       "FspR7FunctionCrs": FspR7FunctionCrs,
       "FspR7Gain": FspR7Gain,
       "FspR7GainCaps": FspR7GainCaps,
       "FspR7GainRange": FspR7GainRange,
       "FspR7GainRangeCaps": FspR7GainRangeCaps,
       "FspR7InitEqualization": FspR7InitEqualization,
       "FspR7InitEqualizationCaps": FspR7InitEqualizationCaps,
       "FspR7InterfaceFunction": FspR7InterfaceFunction,
       "FspR7InterfaceFunctionCaps": FspR7InterfaceFunctionCaps,
       "FspR7InterfaceType": FspR7InterfaceType,
       "FspR7InterfaceTypeCaps": FspR7InterfaceTypeCaps,
       "FspR7Integer32Caps": FspR7Integer32Caps,
       "FspR7InvertTelemetryInputLogic": FspR7InvertTelemetryInputLogic,
       "FspR7InvertTelemetryInputLogicCaps": FspR7InvertTelemetryInputLogicCaps,
       "FspR7IpType": FspR7IpType,
       "FspR7IpTypeCaps": FspR7IpTypeCaps,
       "FspR7L2CacEnable": FspR7L2CacEnable,
       "FspR7L2CacEnableCaps": FspR7L2CacEnableCaps,
       "FspR7LacpMode": FspR7LacpMode,
       "FspR7LacpModeCaps": FspR7LacpModeCaps,
       "FspR7LacpTimeout": FspR7LacpTimeout,
       "FspR7LacpTimeoutCaps": FspR7LacpTimeoutCaps,
       "FspR7LagFendState": FspR7LagFendState,
       "FspR7LagIdFend": FspR7LagIdFend,
       "FspR7LagLoadBallanceSource": FspR7LagLoadBallanceSource,
       "FspR7LagLoadBallanceSourceCaps": FspR7LagLoadBallanceSourceCaps,
       "FspR7LagPorts": FspR7LagPorts,
       "FspR7LagPortType": FspR7LagPortType,
       "FspR7LagPortTypeCaps": FspR7LagPortTypeCaps,
       "FspR7LagStandby": FspR7LagStandby,
       "FspR7LagState": FspR7LagState,
       "FspR7LagSysIdFend": FspR7LagSysIdFend,
       "FspR7LaneGroupInventory": FspR7LaneGroupInventory,
       "FspR7LaneGroupInventoryCaps": FspR7LaneGroupInventoryCaps,
       "FspR7LaserDelayTimer": FspR7LaserDelayTimer,
       "FspR7LaserDelayTimerCaps": FspR7LaserDelayTimerCaps,
       "FspR7LaserForcedOperation": FspR7LaserForcedOperation,
       "FspR7LaserForcedOperationCaps": FspR7LaserForcedOperationCaps,
       "FspR7LaserOffDelayTime": FspR7LaserOffDelayTime,
       "FspR7LaserOffDelayTimeCaps": FspR7LaserOffDelayTimeCaps,
       "FspR7LineCoding": FspR7LineCoding,
       "FspR7LineCodingCaps": FspR7LineCodingCaps,
       "FspR7LossAttenuation": FspR7LossAttenuation,
       "FspR7LossAttenuationCaps": FspR7LossAttenuationCaps,
       "FspR7ManualAuto": FspR7ManualAuto,
       "FspR7ManualAutoCaps": FspR7ManualAutoCaps,
       "FspR7Mapping": FspR7Mapping,
       "FspR7MappingCaps": FspR7MappingCaps,
       "FspR7MaxBitErrorRate": FspR7MaxBitErrorRate,
       "FspR7MaxBitErrorRateCaps": FspR7MaxBitErrorRateCaps,
       "FspR7ModeDbInit": FspR7ModeDbInit,
       "FspR7Model": FspR7Model,
       "FspR7ModusLastRestart": FspR7ModusLastRestart,
       "FspR7MonLevel": FspR7MonLevel,
       "FspR7NCTraceId": FspR7NCTraceId,
       "FspR7NCTRouteType": FspR7NCTRouteType,
       "FspR7NeType": FspR7NeType,
       "FspR7NodeId": FspR7NodeId,
       "FspR7NodeIdCaps": FspR7NodeIdCaps,
       "FspR7NoYes": FspR7NoYes,
       "FspR7NoYesCaps": FspR7NoYesCaps,
       "FspR7NtpAdminState": FspR7NtpAdminState,
       "FspR7NtpMode": FspR7NtpMode,
       "FspR7NtpServerStatus": FspR7NtpServerStatus,
       "FspR7NtpSyncStatus": FspR7NtpSyncStatus,
       "FspR7NtpTest": FspR7NtpTest,
       "FspR7NtpTestStatus": FspR7NtpTestStatus,
       "FspR7NumberOfChannels": FspR7NumberOfChannels,
       "FspR7NumberOfChannelsCaps": FspR7NumberOfChannelsCaps,
       "FspR7OdtuType": FspR7OdtuType,
       "FspR7OdtuTypeCaps": FspR7OdtuTypeCaps,
       "FspR7OperState": FspR7OperState,
       "FspR7OpticalBand": FspR7OpticalBand,
       "FspR7OpticalBandCaps": FspR7OpticalBandCaps,
       "FspR7OpticalFiberType": FspR7OpticalFiberType,
       "FspR7OpticalFiberTypeCaps": FspR7OpticalFiberTypeCaps,
       "FspR7OpticalGroup": FspR7OpticalGroup,
       "FspR7OpticalGroupCaps": FspR7OpticalGroupCaps,
       "FspR7OpticalInterfaceReach": FspR7OpticalInterfaceReach,
       "FspR7OpticalInterfaceReachCaps": FspR7OpticalInterfaceReachCaps,
       "FspR7OpticalLanes": FspR7OpticalLanes,
       "FspR7OpticalMultiplexLevel": FspR7OpticalMultiplexLevel,
       "FspR7OpticalSubBand": FspR7OpticalSubBand,
       "FspR7OpticalSubBandCaps": FspR7OpticalSubBandCaps,
       "FspR7OpuPayloadType": FspR7OpuPayloadType,
       "FspR7OpuPayloadTypeCaps": FspR7OpuPayloadTypeCaps,
       "FspR7OspfAreaType": FspR7OspfAreaType,
       "FspR7OspfAreaTypeCaps": FspR7OspfAreaTypeCaps,
       "FspR7OspfMode": FspR7OspfMode,
       "FspR7OspfModeCaps": FspR7OspfModeCaps,
       "FspR7OscChannel": FspR7OscChannel,
       "FspR7OscChannelCaps": FspR7OscChannelCaps,
       "FspR7OscUsage": FspR7OscUsage,
       "FspR7OscUsageCaps": FspR7OscUsageCaps,
       "FspR7OtdrPeriod": FspR7OtdrPeriod,
       "FspR7Overwrite": FspR7Overwrite,
       "FspR7PacketsLayer": FspR7PacketsLayer,
       "FspR7PacketsLayerCaps": FspR7PacketsLayerCaps,
       "FspR7ParityBit": FspR7ParityBit,
       "FspR7PathNode": FspR7PathNode,
       "FspR7PathNodeCaps": FspR7PathNodeCaps,
       "FspR7PceMode": FspR7PceMode,
       "FspR7PceModeCaps": FspR7PceModeCaps,
       "FspR7PlugDataRate": FspR7PlugDataRate,
       "FspR7PlugDataRateCaps": FspR7PlugDataRateCaps,
       "FspR7PmSnapshotParameterTypes": FspR7PmSnapshotParameterTypes,
       "FspR7PmReset": FspR7PmReset,
       "FspR7PmResetCaps": FspR7PmResetCaps,
       "FspR7PmSnapshotStatus": FspR7PmSnapshotStatus,
       "FspR7PortBehaviour": FspR7PortBehaviour,
       "FspR7PortBehaviourCaps": FspR7PortBehaviourCaps,
       "FspR7PortMode": FspR7PortMode,
       "FspR7PortModeCaps": FspR7PortModeCaps,
       "FspR7PortRole": FspR7PortRole,
       "FspR7PortRoleCaps": FspR7PortRoleCaps,
       "FspR7PrbsPmReset": FspR7PrbsPmReset,
       "FspR7PrbsPmResetCaps": FspR7PrbsPmResetCaps,
       "FspR7PreferredFacilityType": FspR7PreferredFacilityType,
       "FspR7PreferredFacilityTypeCaps": FspR7PreferredFacilityTypeCaps,
       "FspR7ProfileCmd": FspR7ProfileCmd,
       "FspR7ProfileType": FspR7ProfileType,
       "FspR7ProtectionRole": FspR7ProtectionRole,
       "FspR7ProtectionType": FspR7ProtectionType,
       "FspR7ProtectionTypeCaps": FspR7ProtectionTypeCaps,
       "FspR7Protocol": FspR7Protocol,
       "FspR7PsuOutputPower": FspR7PsuOutputPower,
       "FspR7PsuOutputPowerCaps": FspR7PsuOutputPowerCaps,
       "FspR7RedLinedState": FspR7RedLinedState,
       "FspR7RedLinedStateCaps": FspR7RedLinedStateCaps,
       "FspR7RemoteAlarmPath": FspR7RemoteAlarmPath,
       "FspR7RemoteAlarmType": FspR7RemoteAlarmType,
       "FspR7RemoteAuth": FspR7RemoteAuth,
       "FspR7RemoteAuthCaps": FspR7RemoteAuthCaps,
       "FspR7ResetRfi": FspR7ResetRfi,
       "FspR7ResetRfiCaps": FspR7ResetRfiCaps,
       "FspR7RoadmNumber": FspR7RoadmNumber,
       "FspR7RoadmNumberCaps": FspR7RoadmNumberCaps,
       "FspR7RouteRedist": FspR7RouteRedist,
       "FspR7RowStatusCaps": FspR7RowStatusCaps,
       "FspR7Scrambling": FspR7Scrambling,
       "FspR7ScramblingCaps": FspR7ScramblingCaps,
       "FspR7ScuDbBackup": FspR7ScuDbBackup,
       "FspR7ScuRing": FspR7ScuRing,
       "FspR7ScuRingCaps": FspR7ScuRingCaps,
       "FspR7SecurityMode": FspR7SecurityMode,
       "FspR7SecurityModeCaps": FspR7SecurityModeCaps,
       "FspR7SecurityName": FspR7SecurityName,
       "FspR7SessionStatus": FspR7SessionStatus,
       "FspR7SessionStatusCaps": FspR7SessionStatusCaps,
       "FspR7SignalDirection": FspR7SignalDirection,
       "FspR7SignalMapping": FspR7SignalMapping,
       "FspR7SignalMappingCaps": FspR7SignalMappingCaps,
       "FspR7SingleFiberLocation": FspR7SingleFiberLocation,
       "FspR7SingleFiberLocationCaps": FspR7SingleFiberLocationCaps,
       "FspR7SnmpHexString": FspR7SnmpHexString,
       "FspR7SnmpLongString": FspR7SnmpLongString,
       "FspR7SnmpPrivLevel": FspR7SnmpPrivLevel,
       "FspR7SnmpPrivLevelCaps": FspR7SnmpPrivLevelCaps,
       "FspR7SnmpSecuLevel": FspR7SnmpSecuLevel,
       "FspR7SnmpSecuLevelCaps": FspR7SnmpSecuLevelCaps,
       "FspR7SshDeamon": FspR7SshDeamon,
       "FspR7SshHostKeyEncryptAlgorithm": FspR7SshHostKeyEncryptAlgorithm,
       "FspR7SshHostKeyEncryptAlgorithmCaps": FspR7SshHostKeyEncryptAlgorithmCaps,
       "FspR7Stages": FspR7Stages,
       "FspR7StandingConditionTypes": FspR7StandingConditionTypes,
       "FspR7StartPmSnapshot": FspR7StartPmSnapshot,
       "FspR7StartOpticalPmSnapshotExport": FspR7StartOpticalPmSnapshotExport,
       "FspR7StateConnection": FspR7StateConnection,
       "FspR7Stuff": FspR7Stuff,
       "FspR7StuffCaps": FspR7StuffCaps,
       "FspR7SubLayer": FspR7SubLayer,
       "FspR7SubLayerCaps": FspR7SubLayerCaps,
       "FspR7SubLayerEncoding": FspR7SubLayerEncoding,
       "FspR7SubLayerEncodingCaps": FspR7SubLayerEncodingCaps,
       "FspR7SupplyType": FspR7SupplyType,
       "FspR7SupplyTypeCaps": FspR7SupplyTypeCaps,
       "FspR7SwitchOverCause": FspR7SwitchOverCause,
       "FspR7SystemBusy": FspR7SystemBusy,
       "FspR7SysType": FspR7SysType,
       "FspR7TelemetryOutput": FspR7TelemetryOutput,
       "FspR7TelemetryOutputCaps": FspR7TelemetryOutputCaps,
       "FspR7TestMode": FspR7TestMode,
       "FspR7TestModeCaps": FspR7TestModeCaps,
       "FspR7TifOutputReset": FspR7TifOutputReset,
       "FspR7TifOutputResetCaps": FspR7TifOutputResetCaps,
       "FspR7Time": FspR7Time,
       "FspR7TimeChangeReason": FspR7TimeChangeReason,
       "FspR7TiltSet": FspR7TiltSet,
       "FspR7TiltSetCaps": FspR7TiltSetCaps,
       "FspR7TL1InternalState": FspR7TL1InternalState,
       "FspR7TL1InternalStateCaps": FspR7TL1InternalStateCaps,
       "FspR7TL1TimoutAvailable": FspR7TL1TimoutAvailable,
       "FspR7TL1TimoutAvailableCaps": FspR7TL1TimoutAvailableCaps,
       "FspR7TopologyType": FspR7TopologyType,
       "FspR7TopologyTypeCaps": FspR7TopologyTypeCaps,
       "FspR7TrafficDirection": FspR7TrafficDirection,
       "FspR7TrafficDirectionCaps": FspR7TrafficDirectionCaps,
       "FspR7TransmissionMode": FspR7TransmissionMode,
       "FspR7TransmissionModeCaps": FspR7TransmissionModeCaps,
       "FspR7TurnupConfig": FspR7TurnupConfig,
       "FspR7TurnupConfigCaps": FspR7TurnupConfigCaps,
       "FspR7TypeConnection": FspR7TypeConnection,
       "FspR7TypeConnectionCaps": FspR7TypeConnectionCaps,
       "FspR7TypeCrs": FspR7TypeCrs,
       "FspR7TypeCrsCaps": FspR7TypeCrsCaps,
       "FspR7Unsigned32Caps": FspR7Unsigned32Caps,
       "FspR7UntaggedFrames": FspR7UntaggedFrames,
       "FspR7UntaggedFramesCaps": FspR7UntaggedFramesCaps,
       "FspR7VoaMode": FspR7VoaMode,
       "FspR7VoaModeCaps": FspR7VoaModeCaps,
       "FspR7Swdx": FspR7Swdx,
       "FspR7XfpDecisionThres": FspR7XfpDecisionThres,
       "FspR7XfpDecisionThresCaps": FspR7XfpDecisionThresCaps,
       "FspR7YesNo": FspR7YesNo,
       "FspR7YesNoCaps": FspR7YesNoCaps,
       "SourceIpAddress": SourceIpAddress,
       "SourceIpAddressCaps": SourceIpAddressCaps,
       "fspR7Products": fspR7Products,
       "fspR7V1": fspR7V1,
       "ots1000": ots1000,
       "fspR7MIB": fspR7MIB,
       "conditionMIB": conditionMIB,
       "conditionFilters": conditionFilters,
       "conditionSeverityTable": conditionSeverityTable,
       "conditionSeverityEntry": conditionSeverityEntry,
       "conditionSeverityType": conditionSeverityType,
       "conditionSeverityValue": conditionSeverityValue,
       "ntpSysConditionSeverityTable": ntpSysConditionSeverityTable,
       "ntpSysConditionSeverityEntry": ntpSysConditionSeverityEntry,
       "ntpSysConditionSeverityType": ntpSysConditionSeverityType,
       "ntpSysConditionSeverityValue": ntpSysConditionSeverityValue,
       "ntpSrvConditionSeverityTable": ntpSrvConditionSeverityTable,
       "ntpSrvConditionSeverityEntry": ntpSrvConditionSeverityEntry,
       "ntpSrvConditionSeverityType": ntpSrvConditionSeverityType,
       "ntpSrvConditionSeverityValue": ntpSrvConditionSeverityValue,
       "ptpConditionSeverityTable": ptpConditionSeverityTable,
       "ptpConditionSeverityEntry": ptpConditionSeverityEntry,
       "ptpConditionSeverityType": ptpConditionSeverityType,
       "ptpConditionSeverityValue": ptpConditionSeverityValue,
       "currentConditions": currentConditions,
       "currentConditionTable": currentConditionTable,
       "currentConditionEntry": currentConditionEntry,
       "currentConditionType": currentConditionType,
       "currentConditionSeverity": currentConditionSeverity,
       "currentConditionAffect": currentConditionAffect,
       "currentConditionTimeStamp": currentConditionTimeStamp,
       "ntpSysCurrentConditionTable": ntpSysCurrentConditionTable,
       "ntpSysCurrentConditionEntry": ntpSysCurrentConditionEntry,
       "ntpSysCurrentConditionType": ntpSysCurrentConditionType,
       "ntpSysCurrentConditionSeverity": ntpSysCurrentConditionSeverity,
       "ntpSysCurrentConditionAffect": ntpSysCurrentConditionAffect,
       "ntpSysCurrentConditionTimeStamp": ntpSysCurrentConditionTimeStamp,
       "ntpSrvCurrentConditionTable": ntpSrvCurrentConditionTable,
       "ntpSrvCurrentConditionEntry": ntpSrvCurrentConditionEntry,
       "ntpSrvCurrentConditionType": ntpSrvCurrentConditionType,
       "ntpSrvCurrentConditionSeverity": ntpSrvCurrentConditionSeverity,
       "ntpSrvCurrentConditionAffect": ntpSrvCurrentConditionAffect,
       "ntpSrvCurrentConditionTimeStamp": ntpSrvCurrentConditionTimeStamp,
       "ptpCurrentConditionTable": ptpCurrentConditionTable,
       "ptpCurrentConditionEntry": ptpCurrentConditionEntry,
       "ptpCurrentConditionType": ptpCurrentConditionType,
       "ptpCurrentConditionSeverity": ptpCurrentConditionSeverity,
       "ptpCurrentConditionAffect": ptpCurrentConditionAffect,
       "ptpCurrentConditionTimeStamp": ptpCurrentConditionTimeStamp,
       "alarmProfileConfig": alarmProfileConfig,
       "alarmProfileTable": alarmProfileTable,
       "alarmProfileEntry": alarmProfileEntry,
       "alarmProfileAidType": alarmProfileAidType,
       "alarmProfileValue": alarmProfileValue,
       "alarmProfileDefaultValue": alarmProfileDefaultValue,
       "adminMIB": adminMIB,
       "neAdmin": neAdmin,
       "neSystemId": neSystemId,
       "neSysType": neSysType,
       "neAutoProvisioning": neAutoProvisioning,
       "neType": neType,
       "neSwVersion": neSwVersion,
       "neGradeInventory": neGradeInventory,
       "neModel": neModel,
       "neVendorId": neVendorId,
       "neAINSProvEnabled": neAINSProvEnabled,
       "neAINSDefaultTimer": neAINSDefaultTimer,
       "nePreferredFacilityType": nePreferredFacilityType,
       "neForceDelete": neForceDelete,
       "neSdhSesThreshold": neSdhSesThreshold,
       "neOtnSesThreshold": neOtnSesThreshold,
       "neTopologyType": neTopologyType,
       "neDatabaseSerialNumber": neDatabaseSerialNumber,
       "neDatabaseType": neDatabaseType,
       "neRackSize": neRackSize,
       "neDatabaseNcuType": neDatabaseNcuType,
       "neDatabaseNcuAid": neDatabaseNcuAid,
       "neModusLastRestart": neModusLastRestart,
       "neSystemIp": neSystemIp,
       "neSystemIpMask": neSystemIpMask,
       "neAreaId": neAreaId,
       "neBackupScuAvailable": neBackupScuAvailable,
       "neRouteRedistribution": neRouteRedistribution,
       "neAlarmActivationTime": neAlarmActivationTime,
       "neAlarmDeactivationTime": neAlarmDeactivationTime,
       "neTimeConfig": neTimeConfig,
       "neDate": neDate,
       "neTime": neTime,
       "neTimeZone": neTimeZone,
       "neNetworkTimeProtocol": neNetworkTimeProtocol,
       "neNtpServer1": neNtpServer1,
       "neNtpServer2": neNtpServer2,
       "neNtpServer3": neNtpServer3,
       "neNtpStatusServer1": neNtpStatusServer1,
       "neNtpStatusServer2": neNtpStatusServer2,
       "neNtpStatusServer3": neNtpStatusServer3,
       "neNtpSourceIp": neNtpSourceIp,
       "neTimeZoneOffset": neTimeZoneOffset,
       "neDaylightSavingsTimeEnabled": neDaylightSavingsTimeEnabled,
       "neNtpMode": neNtpMode,
       "neTimeChangeReason": neTimeChangeReason,
       "neDateUtc": neDateUtc,
       "neTimeUtc": neTimeUtc,
       "ntpServerTable": ntpServerTable,
       "ntpServerEntry": ntpServerEntry,
       "ntpServerIp": ntpServerIp,
       "ntpServerSourceIp": ntpServerSourceIp,
       "ntpServerTest": ntpServerTest,
       "ntpServerTestStatus": ntpServerTestStatus,
       "ntpServerSyncStatus": ntpServerSyncStatus,
       "ntpServerAdminState": ntpServerAdminState,
       "ntpServerOperState": ntpServerOperState,
       "ntpServerRowStatus": ntpServerRowStatus,
       "ntpTimeZoneCapsTable": ntpTimeZoneCapsTable,
       "ntpTimeZoneCapsEntry": ntpTimeZoneCapsEntry,
       "ntpTimeZoneCapsIndex": ntpTimeZoneCapsIndex,
       "ntpTimeZoneCapsValue": ntpTimeZoneCapsValue,
       "neTimerForceOprToRls": neTimerForceOprToRls,
       "neScuRing": neScuRing,
       "neScuRingCap": neScuRingCap,
       "neAlarmProfileApply": neAlarmProfileApply,
       "neAlarmProfileApplyCap": neAlarmProfileApplyCap,
       "neFtpServer": neFtpServer,
       "neFtpServerCap": neFtpServerCap,
       "neFtpClient": neFtpClient,
       "neSshDeamon": neSshDeamon,
       "neEqlzAdmin": neEqlzAdmin,
       "neEqlzAdminCap": neEqlzAdminCap,
       "neEqlzInterval": neEqlzInterval,
       "neEqlzIntervalCap": neEqlzIntervalCap,
       "neEqlzStartDate": neEqlzStartDate,
       "neEqlzStartTime": neEqlzStartTime,
       "neDefaultGateway": neDefaultGateway,
       "neSwType": neSwType,
       "neCpPcsPriority": neCpPcsPriority,
       "neScuAutoRestoreEnabled": neScuAutoRestoreEnabled,
       "neNodeNameSyntax": neNodeNameSyntax,
       "neAutoProvLifCp": neAutoProvLifCp,
       "authTrapSrcIp": authTrapSrcIp,
       "authTrapLctIp": authTrapLctIp,
       "authTrapStatus": authTrapStatus,
       "authTrapSessionId": authTrapSessionId,
       "authTrapProtocol": authTrapProtocol,
       "authTrapPort": authTrapPort,
       "authTrapUserName": authTrapUserName,
       "authTrapRadUserName": authTrapRadUserName,
       "authTrapSuccessfulAuthCount": authTrapSuccessfulAuthCount,
       "authTrapUnsuccessfulAuthCount": authTrapUnsuccessfulAuthCount,
       "systemBusy": systemBusy,
       "snmpAgentStartupDate": snmpAgentStartupDate,
       "lastErrorStatusCounter": lastErrorStatusCounter,
       "lastErrorStatus": lastErrorStatus,
       "startPmSnapshot": startPmSnapshot,
       "pmSnapshotStatus": pmSnapshotStatus,
       "maxBackplaneBandwidth": maxBackplaneBandwidth,
       "usedBackplaneBandwidth": usedBackplaneBandwidth,
       "neSecurityMode": neSecurityMode,
       "neSecurityModeCapability": neSecurityModeCapability,
       "neMinPasswordLength": neMinPasswordLength,
       "neFiberDetect": neFiberDetect,
       "startOpticalPmSnapshotExport": startOpticalPmSnapshotExport,
       "remoteAuthentication": remoteAuthentication,
       "bootloaderAccess": bootloaderAccess,
       "craftSessionTimeOut": craftSessionTimeOut,
       "serTelnetLogTimeOut": serTelnetLogTimeOut,
       "shhLogTimeOut": shhLogTimeOut,
       "webGuiSessionTimeOut": webGuiSessionTimeOut,
       "tl1LogTimeOut": tl1LogTimeOut,
       "snmpSessionTimeOut": snmpSessionTimeOut,
       "routingMIB": routingMIB,
       "routingIpTable": routingIpTable,
       "routingIpEntry": routingIpEntry,
       "routingIpDestination": routingIpDestination,
       "routingIpMask": routingIpMask,
       "routingIpGateway": routingIpGateway,
       "routingIpDevice": routingIpDevice,
       "routingIpRouteType": routingIpRouteType,
       "routingIpRoutingMetric": routingIpRoutingMetric,
       "routingIpRowStatus": routingIpRowStatus,
       "inactiveRoutingIpTable": inactiveRoutingIpTable,
       "inactiveRoutingIpEntry": inactiveRoutingIpEntry,
       "inactiveRoutingIpDestination": inactiveRoutingIpDestination,
       "inactiveRoutingIpMask": inactiveRoutingIpMask,
       "inactiveRoutingIpGateway": inactiveRoutingIpGateway,
       "inactiveRoutingIpDevice": inactiveRoutingIpDevice,
       "inactiveRoutingIpRouteType": inactiveRoutingIpRouteType,
       "inactiveRoutingIpRoutingMetric": inactiveRoutingIpRoutingMetric,
       "inactiveRoutingIpRowStatus": inactiveRoutingIpRowStatus,
       "knownHostTable": knownHostTable,
       "knownHostEntry": knownHostEntry,
       "knownHostIP": knownHostIP,
       "knownHostKeyEncryptAlgorithm": knownHostKeyEncryptAlgorithm,
       "knownHostRowStatus": knownHostRowStatus,
       "knownHostFingerprint": knownHostFingerprint,
       "fspUser": fspUser,
       "fspUserSpinLock": fspUserSpinLock,
       "fspUserManagementTable": fspUserManagementTable,
       "fspUserManagementEntry": fspUserManagementEntry,
       "fspUserManagementEngineID": fspUserManagementEngineID,
       "fspUserManagementName": fspUserManagementName,
       "fspUserManagementRowStatus": fspUserManagementRowStatus,
       "fspUserManagementSecurityName": fspUserManagementSecurityName,
       "fspUserManagementPrivilegeLevel": fspUserManagementPrivilegeLevel,
       "fspUserManagementSecurityLevel": fspUserManagementSecurityLevel,
       "fspUserManagementAuthPrivKey": fspUserManagementAuthPrivKey,
       "fspUserManagementInternalState": fspUserManagementInternalState,
       "fspUserManagementTl1TimeoutAvailable": fspUserManagementTl1TimeoutAvailable,
       "fspUserManagementTl1TimeoutValue": fspUserManagementTl1TimeoutValue,
       "fspUserManagementSnmpTimeoutValue": fspUserManagementSnmpTimeoutValue,
       "fspUserManagementUdpSessionStatus": fspUserManagementUdpSessionStatus,
       "fspUserManagementTcpSessionStatus": fspUserManagementTcpSessionStatus,
       "fspUserManagementAuthPrivKeyOld": fspUserManagementAuthPrivKeyOld,
       "fspUserManagementAccountFlag": fspUserManagementAccountFlag,
       "fspUserManagementCapTable": fspUserManagementCapTable,
       "fspUserManagementCapEntry": fspUserManagementCapEntry,
       "fspUserManagementCapRowStatus": fspUserManagementCapRowStatus,
       "fspUserManagementCapPrivilegeLevel": fspUserManagementCapPrivilegeLevel,
       "fspUserManagementCapSecurityLevel": fspUserManagementCapSecurityLevel,
       "fspUserManagementCapInternalState": fspUserManagementCapInternalState,
       "fspUserManagementCapTimeoutAvailable": fspUserManagementCapTimeoutAvailable,
       "fspUserManagementDefaultsTable": fspUserManagementDefaultsTable,
       "fspUserManagementDefaultsEntry": fspUserManagementDefaultsEntry,
       "fspUserManagementDefaultsPrivilegeLevel": fspUserManagementDefaultsPrivilegeLevel,
       "fspUserManagementDefaultsSecurityLevel": fspUserManagementDefaultsSecurityLevel,
       "fspUserManagementDefaultsInternalState": fspUserManagementDefaultsInternalState,
       "fspUserManagementDefaultsTimeoutAvailable": fspUserManagementDefaultsTimeoutAvailable,
       "fspUserManagementDefaultsTimeoutValue": fspUserManagementDefaultsTimeoutValue,
       "fspUserManagementDefaultsSnmpTimeoutValue": fspUserManagementDefaultsSnmpTimeoutValue,
       "srvSyslog": srvSyslog,
       "deployProvSyslogTable": deployProvSyslogTable,
       "deployProvSyslogEntry": deployProvSyslogEntry,
       "deployProvSyslogRowStatus": deployProvSyslogRowStatus,
       "deployProvSyslogStatus": deployProvSyslogStatus,
       "deployProvSyslogReportsStatus": deployProvSyslogReportsStatus,
       "deployProvSyslogSourceIp": deployProvSyslogSourceIp,
       "syslogConfigTable": syslogConfigTable,
       "syslogConfigEntry": syslogConfigEntry,
       "syslogConfigStatus": syslogConfigStatus,
       "syslogConfigReportsStatus": syslogConfigReportsStatus,
       "syslogConfigSourceIp": syslogConfigSourceIp,
       "syslogDataTable": syslogDataTable,
       "syslogDataEntry": syslogDataEntry,
       "syslogDataIp": syslogDataIp,
       "syslogDataIpAddr": syslogDataIpAddr,
       "channelTrace": channelTrace,
       "nodeChannelTraceTable": nodeChannelTraceTable,
       "nodeChannelTraceEntry": nodeChannelTraceEntry,
       "nodeChannelTraceStartAid": nodeChannelTraceStartAid,
       "nodeChannelTraceChannelNumber": nodeChannelTraceChannelNumber,
       "nodeChannelTraceRouteId": nodeChannelTraceRouteId,
       "nodeChannelTraceRouteElementId": nodeChannelTraceRouteElementId,
       "nodeChannelTraceFromAid": nodeChannelTraceFromAid,
       "nodeChannelTraceToAid": nodeChannelTraceToAid,
       "nodeChannelTraceRouteType": nodeChannelTraceRouteType,
       "nodeChannelTraceChannelRx": nodeChannelTraceChannelRx,
       "nodeChannelTraceChannelTx": nodeChannelTraceChannelTx,
       "nodeChannelTraceFromAidString": nodeChannelTraceFromAidString,
       "nodeChannelTraceToAidString": nodeChannelTraceToAidString,
       "dcnOspf": dcnOspf,
       "dcnOspfAreaTable": dcnOspfAreaTable,
       "dcnOspfAreaEntry": dcnOspfAreaEntry,
       "dcnOspfAreaId": dcnOspfAreaId,
       "dcnOspfAreaType": dcnOspfAreaType,
       "dcnOspfAreaRowStatus": dcnOspfAreaRowStatus,
       "dcnOspfAreaIfListSize": dcnOspfAreaIfListSize,
       "dcnOspfAreaStubDefaultMetric": dcnOspfAreaStubDefaultMetric,
       "dcnOspfAreaCapTable": dcnOspfAreaCapTable,
       "dcnOspfAreaCapEntry": dcnOspfAreaCapEntry,
       "dcnOspfAreaCapRowStatus": dcnOspfAreaCapRowStatus,
       "dcnOspfAreaCapStubDefaultMetric": dcnOspfAreaCapStubDefaultMetric,
       "dcnOspfAreaInterfaceTable": dcnOspfAreaInterfaceTable,
       "dcnOspfAreaInterfaceEntry": dcnOspfAreaInterfaceEntry,
       "dcnOspfAreaInterfaceIndexAid": dcnOspfAreaInterfaceIndexAid,
       "haMIB": haMIB,
       "highAvailabilityTable": highAvailabilityTable,
       "highAvailabilityEntry": highAvailabilityEntry,
       "highAvailabilityProtectionIndexAid": highAvailabilityProtectionIndexAid,
       "highAvailabilityInhSwitching": highAvailabilityInhSwitching,
       "highAvailabilitySwitchToDuplex": highAvailabilitySwitchToDuplex,
       "highAvailabilitySwitchOverCause": highAvailabilitySwitchOverCause,
       "highAvailabilitySoftwareVersion": highAvailabilitySoftwareVersion,
       "radius": radius,
       "radiusServerTable": radiusServerTable,
       "radiusServerEntry": radiusServerEntry,
       "radiusServerPriority": radiusServerPriority,
       "radiusServerIp": radiusServerIp,
       "radiusServerUdpPort": radiusServerUdpPort,
       "radiusServerRadiusTimeout": radiusServerRadiusTimeout,
       "radiusServerRadiusSecret": radiusServerRadiusSecret,
       "radiusServerOwnIp": radiusServerOwnIp,
       "radiusServerAdminState": radiusServerAdminState,
       "radiusServerRowStatus": radiusServerRowStatus,
       "snmpCommunityMIB": snmpCommunityMIB,
       "communityCmd": communityCmd,
       "communityName": communityName,
       "communitySecurityName": communitySecurityName,
       "communityIpAddr": communityIpAddr,
       "communityIpAddrMask": communityIpAddrMask,
       "snmpCommunityTable": snmpCommunityTable,
       "snmpCommunityEntry": snmpCommunityEntry,
       "snmpCommunityIndex": snmpCommunityIndex,
       "snmpCommunityName": snmpCommunityName,
       "snmpCommunitySecurityName": snmpCommunitySecurityName,
       "snmpCommunityIpAddr": snmpCommunityIpAddr,
       "snmpCommunityIpAddrMask": snmpCommunityIpAddrMask,
       "profileMIB": profileMIB,
       "profileIndexLock": profileIndexLock,
       "profileName": profileName,
       "profileForceCopyEnabled": profileForceCopyEnabled,
       "profileCmd": profileCmd,
       "configProfileTable": configProfileTable,
       "configProfileEntry": configProfileEntry,
       "configProfileId": configProfileId,
       "configProfileRowStatus": configProfileRowStatus,
       "configProfileName": configProfileName,
       "configProfileSourceEntityIndex": configProfileSourceEntityIndex,
       "configProfileSourceEntityExtIndex": configProfileSourceEntityExtIndex,
       "configProfileType": configProfileType,
       "configProfileEntityType": configProfileEntityType,
       "configProfileMaxAccessLevel": configProfileMaxAccessLevel,
       "contentProfileDataTable": contentProfileDataTable,
       "contentProfileDataEntry": contentProfileDataEntry,
       "contentProfileDataBitrate": contentProfileDataBitrate,
       "contentProfileDataFecType": contentProfileDataFecType,
       "contentProfileDataLineCoding": contentProfileDataLineCoding,
       "contentProfileDataFrameFormat": contentProfileDataFrameFormat,
       "contentProfileDataOpticalPowerTx": contentProfileDataOpticalPowerTx,
       "contentProfileDataOSNRTransmit": contentProfileDataOSNRTransmit,
       "contentProfileDataPMDTransmit": contentProfileDataPMDTransmit,
       "contentProfileDataChromaticDispersionTx": contentProfileDataChromaticDispersionTx,
       "contentProfileDataMinimumOSNRRcv": contentProfileDataMinimumOSNRRcv,
       "contentProfileDataMinimumOpticalPowerRcv": contentProfileDataMinimumOpticalPowerRcv,
       "contentProfileDataMaximumOpticalPowerRcv": contentProfileDataMaximumOpticalPowerRcv,
       "contentProfileDataMaximumPMDRcv": contentProfileDataMaximumPMDRcv,
       "contentProfileDataMinChromaticDispersionRcv": contentProfileDataMinChromaticDispersionRcv,
       "contentProfileDataMaxChromaticDispersionRcv": contentProfileDataMaxChromaticDispersionRcv,
       "contentProfileDataMaxBitErrorRate": contentProfileDataMaxBitErrorRate,
       "trapMIB": trapMIB,
       "trapMibPrefix": trapMibPrefix,
       "chassisCreation": chassisCreation,
       "chassisDeletion": chassisDeletion,
       "entityCreation": entityCreation,
       "entityDeletion": entityDeletion,
       "neTrapsinkObjectCreation": neTrapsinkObjectCreation,
       "neTrapsinkObjectDeletion": neTrapsinkObjectDeletion,
       "equipmentInserted": equipmentInserted,
       "equipmentRemoved": equipmentRemoved,
       "crossConnectionCreation": crossConnectionCreation,
       "crossConnectionDeletion": crossConnectionDeletion,
       "neStateChange": neStateChange,
       "entityStateChange": entityStateChange,
       "neSysTypeChanged": neSysTypeChanged,
       "neAttributeValueChange": neAttributeValueChange,
       "facilityAttributeValueChange": facilityAttributeValueChange,
       "loopbackChange": loopbackChange,
       "snmpAgentStateChanged": snmpAgentStateChanged,
       "snmpAgentSynchronizationStageChanged": snmpAgentSynchronizationStageChanged,
       "coldStartAgentReconfigured": coldStartAgentReconfigured,
       "dcnOspfAreaCreation": dcnOspfAreaCreation,
       "dcnOspfAreaDeletion": dcnOspfAreaDeletion,
       "dcnOspfAreaPropertiesChange": dcnOspfAreaPropertiesChange,
       "timeNtpAttributeValueChange": timeNtpAttributeValueChange,
       "ntpSrvAttributeValueChange": ntpSrvAttributeValueChange,
       "ntpSrvObjectChange": ntpSrvObjectChange,
       "ntpSrvCreation": ntpSrvCreation,
       "ntpSrvDeletion": ntpSrvDeletion,
       "knownHostCreation": knownHostCreation,
       "knownHostDeletion": knownHostDeletion,
       "radiusSrvObjectChange": radiusSrvObjectChange,
       "radiusSrvCreation": radiusSrvCreation,
       "radiusSrvDeletion": radiusSrvDeletion,
       "radiusSrvAttributeValueChange": radiusSrvAttributeValueChange,
       "ptpEntityCreation": ptpEntityCreation,
       "ptpEntityDeletion": ptpEntityDeletion,
       "entityObjectChange": entityObjectChange,
       "crsConnObjectChange": crsConnObjectChange,
       "authenticationNotification": authenticationNotification,
       "authenticationNotificationSummary": authenticationNotificationSummary,
       "wdmTunnelResultNotification": wdmTunnelResultNotification,
       "ethTunnelResultNotification": ethTunnelResultNotification,
       "ptpEntityObjectChange": ptpEntityObjectChange,
       "alarmThirdPartyPlug": alarmThirdPartyPlug,
       "alarmFacilityLoopback": alarmFacilityLoopback,
       "alarmTerminalLoopback": alarmTerminalLoopback,
       "alarmFacilityForcedOn": alarmFacilityForcedOn,
       "alarmOosDisabled": alarmOosDisabled,
       "alarmReceiverDisabled": alarmReceiverDisabled,
       "alarmTransmitterDisabledOff": alarmTransmitterDisabledOff,
       "alarmTransmittedDisabledIdle": alarmTransmittedDisabledIdle,
       "alarmTransmitterDisabledAis": alarmTransmitterDisabledAis,
       "alarmTransmitterDisabledEpc": alarmTransmitterDisabledEpc,
       "alarmOosManagement": alarmOosManagement,
       "alarmOosMaintenance": alarmOosMaintenance,
       "alarmOosAins": alarmOosAins,
       "alarmDcnCommunicationFail": alarmDcnCommunicationFail,
       "alarmRemoved": alarmRemoved,
       "alarmMismatch": alarmMismatch,
       "alarmEquipmentNotAccepted": alarmEquipmentNotAccepted,
       "alarmFacilityDataRateNotSupported": alarmFacilityDataRateNotSupported,
       "alarmEquipmentNotSupportedByPhysicalLayer": alarmEquipmentNotSupportedByPhysicalLayer,
       "alarmEquipmentNotApproved": alarmEquipmentNotApproved,
       "alarmEquipmentMismatch": alarmEquipmentMismatch,
       "alarmFuseAlarm1": alarmFuseAlarm1,
       "alarmFuseAlarm2": alarmFuseAlarm2,
       "alarmFanAlarm": alarmFanAlarm,
       "alarmFanUnitAlarm": alarmFanUnitAlarm,
       "alarmPowerMissing": alarmPowerMissing,
       "alarmPowerFailure": alarmPowerFailure,
       "alarmVoltageTooLow": alarmVoltageTooLow,
       "alarmVoltageTooHigh": alarmVoltageTooHigh,
       "alarmTemperatureTooLow": alarmTemperatureTooLow,
       "alarmTemperatureTooHigh": alarmTemperatureTooHigh,
       "alarmReceiverFailure": alarmReceiverFailure,
       "alarmOpticalInputPowerReceiverFailure": alarmOpticalInputPowerReceiverFailure,
       "alarmLossOfSignal": alarmLossOfSignal,
       "alarmIdleSignalReceived": alarmIdleSignalReceived,
       "alarmLossOfLinkPulse": alarmLossOfLinkPulse,
       "alarmLossOfReceiverClockRecovery": alarmLossOfReceiverClockRecovery,
       "alarmElasticStoreOverflowReceiver": alarmElasticStoreOverflowReceiver,
       "alarmLossOfTransmitterClockRecovery": alarmLossOfTransmitterClockRecovery,
       "alarmLaserFailure": alarmLaserFailure,
       "alarmSwitchFailed": alarmSwitchFailed,
       "alarmElasticStoreOverflowTransmitter": alarmElasticStoreOverflowTransmitter,
       "alarmAutoShutdownLaserOffDueToErrFwd": alarmAutoShutdownLaserOffDueToErrFwd,
       "alarmAutoShutdown": alarmAutoShutdown,
       "alarmAutoShutdownAls": alarmAutoShutdownAls,
       "alarmAutoShutdownSendingIdle": alarmAutoShutdownSendingIdle,
       "alarmThermoElectricCoolerEndOfLife": alarmThermoElectricCoolerEndOfLife,
       "alarmOpticalInputPwrReceivedTooLow": alarmOpticalInputPwrReceivedTooLow,
       "alarmOpticalInputPwrReceivedTooHigh": alarmOpticalInputPwrReceivedTooHigh,
       "alarmLaserTemperatureTooHigh": alarmLaserTemperatureTooHigh,
       "alarmLaserTemperatureTooLow": alarmLaserTemperatureTooLow,
       "alarmOpticalOutputPowerTransmittedTooLow": alarmOpticalOutputPowerTransmittedTooLow,
       "alarmOpticalOutputPowerTransmittedTooHigh": alarmOpticalOutputPowerTransmittedTooHigh,
       "alarmLaserBiasCurrentNormalizedtooHigh": alarmLaserBiasCurrentNormalizedtooHigh,
       "alarmLossOfSignalTransmitter": alarmLossOfSignalTransmitter,
       "alarmAttOnReceiverFiberLowerThanMonitor": alarmAttOnReceiverFiberLowerThanMonitor,
       "alarmAttOnReceiverFiberHigherThanMonitor": alarmAttOnReceiverFiberHigherThanMonitor,
       "alarmAttOnTransmitterFiberLowerThanMonitor": alarmAttOnTransmitterFiberLowerThanMonitor,
       "alarmAttOnTransmitterFiberHigherThanMonitor": alarmAttOnTransmitterFiberHigherThanMonitor,
       "alarmAutoShutdownSendingAisOtu": alarmAutoShutdownSendingAisOtu,
       "alarmLossOfFrameOtu": alarmLossOfFrameOtu,
       "alarmLossOfMultiFrameOtu": alarmLossOfMultiFrameOtu,
       "alarmAlarmIndicationSignalOtu": alarmAlarmIndicationSignalOtu,
       "alarmSignalDegradeOtu": alarmSignalDegradeOtu,
       "alarmBackwardDefectIndicationOtu": alarmBackwardDefectIndicationOtu,
       "alarmAutoShutdownSendingAisOdu": alarmAutoShutdownSendingAisOdu,
       "alarmLossOfFrameLossOfMultiFrameOdu": alarmLossOfFrameLossOfMultiFrameOdu,
       "alarmAlarmIndicationSignalOdu": alarmAlarmIndicationSignalOdu,
       "alarmOpenConnectionIndicationOdu": alarmOpenConnectionIndicationOdu,
       "alarmLockedDefectOdu": alarmLockedDefectOdu,
       "alarmSignalDegradeOdu": alarmSignalDegradeOdu,
       "alarmBackwardDefectIndicationOdu": alarmBackwardDefectIndicationOdu,
       "alarmAlarmIndicationSignalOduTcmA": alarmAlarmIndicationSignalOduTcmA,
       "alarmOpenConnectionIndicationOduTcmA": alarmOpenConnectionIndicationOduTcmA,
       "alarmLockedDefectOduTcmA": alarmLockedDefectOduTcmA,
       "alarmLossofTandemConnectionOduTcmA": alarmLossofTandemConnectionOduTcmA,
       "alarmSignalDegradeOduTcmA": alarmSignalDegradeOduTcmA,
       "alarmBackwardDefectIndicationOduTcmA": alarmBackwardDefectIndicationOduTcmA,
       "alarmPayloadMismatchOPU": alarmPayloadMismatchOPU,
       "alarmMultiplexStructureIdentifierMismatchOPU": alarmMultiplexStructureIdentifierMismatchOPU,
       "alarmLossOfFrame": alarmLossOfFrame,
       "alarmSectionSignalFailure": alarmSectionSignalFailure,
       "alarmAutoShutdownSendingAisLine": alarmAutoShutdownSendingAisLine,
       "alarmAlarmIndicationSignalLine": alarmAlarmIndicationSignalLine,
       "alarmRemoteDefectIndicationLine": alarmRemoteDefectIndicationLine,
       "alarmSignalDegradeLine": alarmSignalDegradeLine,
       "alarmAlarmIndicationSignalHigherOrderPath": alarmAlarmIndicationSignalHigherOrderPath,
       "alarmLossOfPointerHigherOrderPath": alarmLossOfPointerHigherOrderPath,
       "alarmLossofMultiframeHigherOrderPath": alarmLossofMultiframeHigherOrderPath,
       "alarmLossofSequenceHigherOrderPath": alarmLossofSequenceHigherOrderPath,
       "alarmUnequippedHigherOrderPath": alarmUnequippedHigherOrderPath,
       "alarmPayloadMismatchHigherOrderPath": alarmPayloadMismatchHigherOrderPath,
       "alarmRemoteDefectIndicationHigherOrderPath": alarmRemoteDefectIndicationHigherOrderPath,
       "alarmSignalDegradeHigherOrderPath": alarmSignalDegradeHigherOrderPath,
       "alarmAlarmIndicationSignalLowerOrderPath": alarmAlarmIndicationSignalLowerOrderPath,
       "alarmLossOfPointerLowerOrderPath": alarmLossOfPointerLowerOrderPath,
       "alarmLossofMultiframeLowerOrderPath": alarmLossofMultiframeLowerOrderPath,
       "alarmLossofSequenceLowerOrderPath": alarmLossofSequenceLowerOrderPath,
       "alarmUnequippedLowerOrderPath": alarmUnequippedLowerOrderPath,
       "alarmPayloadMismatchLowerOrderPath": alarmPayloadMismatchLowerOrderPath,
       "alarmRemoteDefectIndicationLowerOrderPath": alarmRemoteDefectIndicationLowerOrderPath,
       "alarmLossOfMultiframeVCG": alarmLossOfMultiframeVCG,
       "alarmLossOfSequenceVCG": alarmLossOfSequenceVCG,
       "alarmLossofAlignmentVCG": alarmLossofAlignmentVCG,
       "alarmAutoShutdownSendingEPC": alarmAutoShutdownSendingEPC,
       "alarmThres15MinExceededPhysConvES": alarmThres15MinExceededPhysConvES,
       "alarmThres15MinExceededPhysConvCV": alarmThres15MinExceededPhysConvCV,
       "alarmThres15MinExceededPhysConvDE": alarmThres15MinExceededPhysConvDE,
       "alarmThres15MinExceededPhysConvCVDE": alarmThres15MinExceededPhysConvCVDE,
       "alarmLossOfGfpFrame": alarmLossOfGfpFrame,
       "alarmPayloadMismatchGfp": alarmPayloadMismatchGfp,
       "alarmGfpLossOfClientSig": alarmGfpLossOfClientSig,
       "alarmLossOfCharSyncFromFarEnd": alarmLossOfCharSyncFromFarEnd,
       "alarmSwitchtoProtectionInhibited": alarmSwitchtoProtectionInhibited,
       "alarmSwitchtoWorkingInhibited": alarmSwitchtoWorkingInhibited,
       "alarmOTDRMeasuringinProgress": alarmOTDRMeasuringinProgress,
       "alarmProtectionNotAvailable": alarmProtectionNotAvailable,
       "alarmApsConfigMismatch": alarmApsConfigMismatch,
       "alarmEmbeddedOperationsChannelFailure": alarmEmbeddedOperationsChannelFailure,
       "alarmSignalDegradeSection": alarmSignalDegradeSection,
       "alarmSignalDegradationonLinkVector": alarmSignalDegradationonLinkVector,
       "alarmSignalFailureonLinkVector": alarmSignalFailureonLinkVector,
       "alarmInputVoltageFailure": alarmInputVoltageFailure,
       "alarmPowerSupplyUnitFailure": alarmPowerSupplyUnitFailure,
       "alarmCurrentTooLow": alarmCurrentTooLow,
       "alarmCurrentTooHigh": alarmCurrentTooHigh,
       "alarmMultipleFanFailure": alarmMultipleFanFailure,
       "alarmSingleFanFailure": alarmSingleFanFailure,
       "alarmLinkDown": alarmLinkDown,
       "alarmVoltageOutOfRange": alarmVoltageOutOfRange,
       "alarmPeerLink": alarmPeerLink,
       "alarmHwFailure": alarmHwFailure,
       "alarmAlarmIndicationSignalOduTcmB": alarmAlarmIndicationSignalOduTcmB,
       "alarmOpenConnectionIndicationOduTcmB": alarmOpenConnectionIndicationOduTcmB,
       "alarmLockedDefectOduTcmB": alarmLockedDefectOduTcmB,
       "alarmLossofTandemConnectionOduTcmB": alarmLossofTandemConnectionOduTcmB,
       "alarmSignalDegradeOduTcmB": alarmSignalDegradeOduTcmB,
       "alarmBackwardDefectIndicationOduTcmB": alarmBackwardDefectIndicationOduTcmB,
       "alarmApsProtocolFailure": alarmApsProtocolFailure,
       "alarmApdLowVoltage": alarmApdLowVoltage,
       "alarmApdHighVoltage": alarmApdHighVoltage,
       "alarmLinkControlProtocolFailure": alarmLinkControlProtocolFailure,
       "alarmReceiverLowTemp": alarmReceiverLowTemp,
       "alarmReceiverHighTemp": alarmReceiverHighTemp,
       "alarmThermoElectricCoolerCurrentTooLow": alarmThermoElectricCoolerCurrentTooLow,
       "alarmThermoElectricCoolerCurrentTooHigh": alarmThermoElectricCoolerCurrentTooHigh,
       "alarmSubModuleTempTooHigh": alarmSubModuleTempTooHigh,
       "alarmSignalDegradeOlm": alarmSignalDegradeOlm,
       "alarmReceiverOverloadProtection": alarmReceiverOverloadProtection,
       "alarmLossOfFrameMux": alarmLossOfFrameMux,
       "alarmLossOfFrameMuxFarEnd": alarmLossOfFrameMuxFarEnd,
       "alarmLossOfCharSync": alarmLossOfCharSync,
       "alarmThres15MinExceededFecCE": alarmThres15MinExceededFecCE,
       "alarmThres15MinExceededFecUBE": alarmThres15MinExceededFecUBE,
       "alarmThres15MinExceededFecES": alarmThres15MinExceededFecES,
       "alarmThres15MinExceededFecSES": alarmThres15MinExceededFecSES,
       "alarmThres15MinExceededMuxES": alarmThres15MinExceededMuxES,
       "alarmThres15MinExceededMuxSES": alarmThres15MinExceededMuxSES,
       "alarmThres15MinExceededGfpCHEC": alarmThres15MinExceededGfpCHEC,
       "alarmThres15MinExceededGfpTHEC": alarmThres15MinExceededGfpTHEC,
       "alarmThres15MinExceededGfpTHecDisc": alarmThres15MinExceededGfpTHecDisc,
       "alarmThres15MinExceededGfpTsuperblockDisc": alarmThres15MinExceededGfpTsuperblockDisc,
       "alarmIntrusionRx": alarmIntrusionRx,
       "alarmIntrusionTx": alarmIntrusionTx,
       "alarmAutoShutdownLaserOffDueToHighTemp": alarmAutoShutdownLaserOffDueToHighTemp,
       "alarmAutoShutdownLaserOffDueToHighTxPwr": alarmAutoShutdownLaserOffDueToHighTxPwr,
       "alarmLaserEndOfLife": alarmLaserEndOfLife,
       "alarmLaserBiasCurrAbnormal": alarmLaserBiasCurrAbnormal,
       "alarmOpticalPowerTxLOS": alarmOpticalPowerTxLOS,
       "alarmMidstageFault": alarmMidstageFault,
       "alarmFarEndIpAddressUnknown": alarmFarEndIpAddressUnknown,
       "alarmTopologyDataCalculationInProgress": alarmTopologyDataCalculationInProgress,
       "alarmNtpServer1Unreachable": alarmNtpServer1Unreachable,
       "alarmNtpServer2Unreachable": alarmNtpServer2Unreachable,
       "alarmNtpServer3Unreachable": alarmNtpServer3Unreachable,
       "alarmAutoShutdownSendingAisOpu": alarmAutoShutdownSendingAisOpu,
       "alarmAlarmIndicationSignalOpu": alarmAlarmIndicationSignalOpu,
       "alarmAlarmIndicationSignalOduTcmC": alarmAlarmIndicationSignalOduTcmC,
       "alarmBackwardDefectIndicationOduTcmC": alarmBackwardDefectIndicationOduTcmC,
       "alarmLockedDefectOduTcmC": alarmLockedDefectOduTcmC,
       "alarmLossofTandemConnectionOduTcmC": alarmLossofTandemConnectionOduTcmC,
       "alarmOpenConnectionIndicationOduTcmC": alarmOpenConnectionIndicationOduTcmC,
       "alarmSignalDegradeOduTcmC": alarmSignalDegradeOduTcmC,
       "alarmLoopbackError": alarmLoopbackError,
       "alarmSectionTraceMismatch": alarmSectionTraceMismatch,
       "alarmTraceIdentifierMismatchOtu": alarmTraceIdentifierMismatchOtu,
       "alarmTraceIdentifierMismatchOdu": alarmTraceIdentifierMismatchOdu,
       "alarmTraceIdentifierMismatchOduTcmA": alarmTraceIdentifierMismatchOduTcmA,
       "alarmTraceIdentifierMismatchOduTcmC": alarmTraceIdentifierMismatchOduTcmC,
       "alarmTraceIdentifierMismatchOduTcmB": alarmTraceIdentifierMismatchOduTcmB,
       "alarmDatabaseMismatch": alarmDatabaseMismatch,
       "alarmDatabaseNcuMismatch": alarmDatabaseNcuMismatch,
       "alarmServerSignalFailureSectionRS": alarmServerSignalFailureSectionRS,
       "alarmFwpMismatchDownloadServiceAffecting": alarmFwpMismatchDownloadServiceAffecting,
       "alarmFwpMismatchDownloadNotServiceAffecting": alarmFwpMismatchDownloadNotServiceAffecting,
       "alarmDatabaseVersionMismatch": alarmDatabaseVersionMismatch,
       "alarmClientFailForwarding": alarmClientFailForwarding,
       "alarmVirtualChannelAis": alarmVirtualChannelAis,
       "alarmServerSignalFailureVf": alarmServerSignalFailureVf,
       "alarmSignalFailureOnLink": alarmSignalFailureOnLink,
       "alarmServerSignalFailureGfp": alarmServerSignalFailureGfp,
       "alarmServerSignalFailurePath": alarmServerSignalFailurePath,
       "alarmGainTiltNotSettable": alarmGainTiltNotSettable,
       "alarmTxPowerLimited": alarmTxPowerLimited,
       "alarmEqualizationProgress": alarmEqualizationProgress,
       "alarmUPortFailure": alarmUPortFailure,
       "alarmAutoShutdownBlock": alarmAutoShutdownBlock,
       "alarmServerSignalFailTx": alarmServerSignalFailTx,
       "alarmPayloadMismatch": alarmPayloadMismatch,
       "alarmVoaControlFail": alarmVoaControlFail,
       "alarmProvisioningLocked": alarmProvisioningLocked,
       "alarmMansw": alarmMansw,
       "alarmWtrTimerRunning": alarmWtrTimerRunning,
       "alarmPcsSignalDegrade": alarmPcsSignalDegrade,
       "alarmInputTIF": alarmInputTIF,
       "alarmThres15MinExceededSonetSectES": alarmThres15MinExceededSonetSectES,
       "alarmThres15MinExceededSonetSectSES": alarmThres15MinExceededSonetSectSES,
       "alarmThres15MinExceededSonetSectSEFS": alarmThres15MinExceededSonetSectSEFS,
       "alarmThres15MinExceededSonetSectCV": alarmThres15MinExceededSonetSectCV,
       "alarmThres15MinExceededSonetLineES": alarmThres15MinExceededSonetLineES,
       "alarmThres15MinExceededSonetLineSES": alarmThres15MinExceededSonetLineSES,
       "alarmThres15MinExceededSonetLineCV": alarmThres15MinExceededSonetLineCV,
       "alarmThres15MinExceededSonetLineUAS": alarmThres15MinExceededSonetLineUAS,
       "alarmThres15MinExceededOduTcmAES": alarmThres15MinExceededOduTcmAES,
       "alarmThres15MinExceededOduTcmASES": alarmThres15MinExceededOduTcmASES,
       "alarmThres15MinExceededOduTcmAUAS": alarmThres15MinExceededOduTcmAUAS,
       "alarmThres15MinExceededOduTcmABbe": alarmThres15MinExceededOduTcmABbe,
       "alarmThres15MinExceededOduTcmBES": alarmThres15MinExceededOduTcmBES,
       "alarmThres15MinExceededOduTcmBSES": alarmThres15MinExceededOduTcmBSES,
       "alarmThres15MinExceededOduTcmBUAS": alarmThres15MinExceededOduTcmBUAS,
       "alarmThres15MinExceededOduTcmBBbe": alarmThres15MinExceededOduTcmBBbe,
       "alarmThres15MinExceededOduTcmCES": alarmThres15MinExceededOduTcmCES,
       "alarmThres15MinExceededOduTcmCSES": alarmThres15MinExceededOduTcmCSES,
       "alarmThres15MinExceededOduTcmCUAS": alarmThres15MinExceededOduTcmCUAS,
       "alarmThres15MinExceededOduTcmCBbe": alarmThres15MinExceededOduTcmCBbe,
       "alarmThres15MinExceededOtuES": alarmThres15MinExceededOtuES,
       "alarmThres15MinExceededOtuSES": alarmThres15MinExceededOtuSES,
       "alarmThres15MinExceededOtuUAS": alarmThres15MinExceededOtuUAS,
       "alarmThres15MinExceededOtuBbe": alarmThres15MinExceededOtuBbe,
       "alarmThres15MinExceededOduES": alarmThres15MinExceededOduES,
       "alarmThres15MinExceededOduSES": alarmThres15MinExceededOduSES,
       "alarmThres15MinExceededOduUAS": alarmThres15MinExceededOduUAS,
       "alarmThres15MinExceededOduBbe": alarmThres15MinExceededOduBbe,
       "alarmThresOptPowerCtrlFailureLow": alarmThresOptPowerCtrlFailureLow,
       "alarmThresOptPowerCtrlFailureHigh": alarmThresOptPowerCtrlFailureHigh,
       "alarmDcnServerSignalFailure": alarmDcnServerSignalFailure,
       "alarmMaxPowerConsEquipModulesToHigh": alarmMaxPowerConsEquipModulesToHigh,
       "alarmMaxPowerConsProvModulesToHigh": alarmMaxPowerConsProvModulesToHigh,
       "alarmEquipmentMismatchAllow": alarmEquipmentMismatchAllow,
       "alarmOosPrePostSig": alarmOosPrePostSig,
       "alarmOosPrePostSigInSetUpProcess": alarmOosPrePostSigInSetUpProcess,
       "alarmOosPrePostSigInTearDownProcess": alarmOosPrePostSigInTearDownProcess,
       "alarmCpTunnelModificationInProgess": alarmCpTunnelModificationInProgess,
       "alarmCapabilityLevelMismatch": alarmCapabilityLevelMismatch,
       "alarmOosPrePostSigEstablishFailed": alarmOosPrePostSigEstablishFailed,
       "alarmOosPrePostSigAfterPrecompFailed": alarmOosPrePostSigAfterPrecompFailed,
       "alarmCpTunnelEstablishFailed": alarmCpTunnelEstablishFailed,
       "alarmCpTunnelPrecompFailed": alarmCpTunnelPrecompFailed,
       "alarmLocalFault": alarmLocalFault,
       "alarmOscPwrTooHigh": alarmOscPwrTooHigh,
       "alarmOscPwrTooLow": alarmOscPwrTooLow,
       "alarmAseTableBuild": alarmAseTableBuild,
       "alarmAseTableNotAvailable": alarmAseTableNotAvailable,
       "alarmAutomaticPowerReduction": alarmAutomaticPowerReduction,
       "alarmHighBer": alarmHighBer,
       "alarmPumpLaser1TempTooHigh": alarmPumpLaser1TempTooHigh,
       "alarmPumpLaser1TempTooLow": alarmPumpLaser1TempTooLow,
       "alarmPumpLaser2TempTooHigh": alarmPumpLaser2TempTooHigh,
       "alarmPumpLaser2TempTooLow": alarmPumpLaser2TempTooLow,
       "alarmOspfIpServerNotAvailable": alarmOspfIpServerNotAvailable,
       "alarmLossOsc": alarmLossOsc,
       "alarmBrPwrRxTooHigh": alarmBrPwrRxTooHigh,
       "alarmAseTableGenFailSignalinput": alarmAseTableGenFailSignalinput,
       "alarmAseTableGenFailOscMissing": alarmAseTableGenFailOscMissing,
       "alarmAseTableGenFailHighBackreflection": alarmAseTableGenFailHighBackreflection,
       "alarmRamanPumpPwrTooHigh": alarmRamanPumpPwrTooHigh,
       "alarmRamanPumpPwrTooLow": alarmRamanPumpPwrTooLow,
       "alarmAutoPowerShutdown": alarmAutoPowerShutdown,
       "alarmAseTableGenFailLow": alarmAseTableGenFailLow,
       "alarmAseLow": alarmAseLow,
       "alarmConfigurableOpticalOutputPowerTransmittedTooHigh": alarmConfigurableOpticalOutputPowerTransmittedTooHigh,
       "alarmConfigurableOpticalOutputPowerTransmittedTooLow": alarmConfigurableOpticalOutputPowerTransmittedTooLow,
       "alarmLosAttProgress": alarmLosAttProgress,
       "alarmAseTableGenProgress": alarmAseTableGenProgress,
       "alarmSignalDegradeScn": alarmSignalDegradeScn,
       "alarmDispertionTunningCondition": alarmDispertionTunningCondition,
       "alarmTurnupCondition": alarmTurnupCondition,
       "alarmTurnupFailed": alarmTurnupFailed,
       "alarmFaultOnOpm": alarmFaultOnOpm,
       "alarmOptSignalFailure": alarmOptSignalFailure,
       "alarmOpmAbnormalCondition": alarmOpmAbnormalCondition,
       "alarmHwOprReachedHT": alarmHwOprReachedHT,
       "alarmDisabledChannelPowerTooHigh": alarmDisabledChannelPowerTooHigh,
       "alarmLossOfSignalCPort": alarmLossOfSignalCPort,
       "alarmLossOfSignalNPort": alarmLossOfSignalNPort,
       "alarmServerSignalFailureODU": alarmServerSignalFailureODU,
       "alarmSignalFailureOPU": alarmSignalFailureOPU,
       "alarmServerSignalFail": alarmServerSignalFail,
       "alarmServerSignalReduced": alarmServerSignalReduced,
       "alarmDispersionCompensationTooLow": alarmDispersionCompensationTooLow,
       "alarmDispersionCompensationTooHigh": alarmDispersionCompensationTooHigh,
       "alarmFarEndCommFailure": alarmFarEndCommFailure,
       "alarmLinkAttenuationTooLow": alarmLinkAttenuationTooLow,
       "alarmLinkAttenuationTooHigh": alarmLinkAttenuationTooHigh,
       "alarmEntityOutageIndication": alarmEntityOutageIndication,
       "alarmFiberConnectionMissing": alarmFiberConnectionMissing,
       "alarmFarEndInformationMismatch": alarmFarEndInformationMismatch,
       "alarmAutomaticPowerReductionForEyeSafety": alarmAutomaticPowerReductionForEyeSafety,
       "alarmLossOfPilotSignal": alarmLossOfPilotSignal,
       "alarmPumpLaser3TempTooHigh": alarmPumpLaser3TempTooHigh,
       "alarmPumpLaser3TempTooLow": alarmPumpLaser3TempTooLow,
       "alarmPilotReceiveLevelHigh": alarmPilotReceiveLevelHigh,
       "alarmAutoShutdownStbyProtection": alarmAutoShutdownStbyProtection,
       "alarmDatabaseFailure": alarmDatabaseFailure,
       "alarmLatencyTooHigh": alarmLatencyTooHigh,
       "alarmLatencyTooLow": alarmLatencyTooLow,
       "alarmThres15MinExceededFecBERCE": alarmThres15MinExceededFecBERCE,
       "alarmAutoShutdownSendingLckOdu": alarmAutoShutdownSendingLckOdu,
       "alarmNtpNotInSync": alarmNtpNotInSync,
       "alarmEncryptionModuleTamperDetected": alarmEncryptionModuleTamperDetected,
       "alarmEncryptionModuleCryPasswdMissing": alarmEncryptionModuleCryPasswdMissing,
       "alarmEncryptionModuleCryPasswdError": alarmEncryptionModuleCryPasswdError,
       "alarmEncryptionModuleFwpUpdateEnabled": alarmEncryptionModuleFwpUpdateEnabled,
       "alarmEncryptionModuleSelfTestStarted": alarmEncryptionModuleSelfTestStarted,
       "alarmEncryptionModuleSelfTestFail": alarmEncryptionModuleSelfTestFail,
       "alarmEncryptionModuleSelfTestFailCritical": alarmEncryptionModuleSelfTestFailCritical,
       "alarmEncryptionPortAuthPasswdMissing": alarmEncryptionPortAuthPasswdMissing,
       "alarmEncryptionPortMaxKeyExchgFailuresReachedIs": alarmEncryptionPortMaxKeyExchgFailuresReachedIs,
       "alarmEncryptionPortMaxKeyExchgFailuresReachedOos": alarmEncryptionPortMaxKeyExchgFailuresReachedOos,
       "alarmEncryptionPortEncryptionSwitchedOff": alarmEncryptionPortEncryptionSwitchedOff,
       "alarmEncryptionPortKeyExchangedForced": alarmEncryptionPortKeyExchangedForced,
       "alarmEncryptionPortEncryptionSwitchOffEnabled": alarmEncryptionPortEncryptionSwitchOffEnabled,
       "alarmEncryptionPortKeyInitExchgMissed": alarmEncryptionPortKeyInitExchgMissed,
       "alarmRoundTripDelayTooHigh": alarmRoundTripDelayTooHigh,
       "alarmRoundTripDelayTooLow": alarmRoundTripDelayTooLow,
       "alarmAirDustFilterClogged": alarmAirDustFilterClogged,
       "alarmNtpForSchedEqlzRequired": alarmNtpForSchedEqlzRequired,
       "alarmOscOpticalPowerControlFailHigh": alarmOscOpticalPowerControlFailHigh,
       "alarmOscOpticalPowerControlFailLow": alarmOscOpticalPowerControlFailLow,
       "alarmAmplifierAbnormal": alarmAmplifierAbnormal,
       "alarmAseTableGenFailPilot": alarmAseTableGenFailPilot,
       "alarmPumpLaser4TempTooHigh": alarmPumpLaser4TempTooHigh,
       "alarmPumpLaser4TempTooLow": alarmPumpLaser4TempTooLow,
       "alarmFwdAseTableFailPilot": alarmFwdAseTableFailPilot,
       "alarmFwdAseTableOnPilot": alarmFwdAseTableOnPilot,
       "alarmInputVoltageFailurePort1": alarmInputVoltageFailurePort1,
       "alarmInputVoltageFailurePort2": alarmInputVoltageFailurePort2,
       "alarmXfpDecisionThresSetFailed": alarmXfpDecisionThresSetFailed,
       "alarmNtpSrvOosDsbld": alarmNtpSrvOosDsbld,
       "alarmThres15MinExceededPhysConvSE": alarmThres15MinExceededPhysConvSE,
       "alarmThres15MinExceededPhysConvESTX": alarmThres15MinExceededPhysConvESTX,
       "alarmThres15MinExceededPhysConvCVTX": alarmThres15MinExceededPhysConvCVTX,
       "alarmThres15MinExceededPhysConvSETX": alarmThres15MinExceededPhysConvSETX,
       "alarmPrbsRcvActivated": alarmPrbsRcvActivated,
       "alarmPrbsTrmtActivated": alarmPrbsTrmtActivated,
       "alarmPrbsLossOfSeqSynch": alarmPrbsLossOfSeqSynch,
       "alarmOpuClientSignalFail": alarmOpuClientSignalFail,
       "alarmLossOfTestSeqSynchOpu": alarmLossOfTestSeqSynchOpu,
       "alarmAutoShutdownOpuClientSignalFail": alarmAutoShutdownOpuClientSignalFail,
       "alarmLocalOscTemperatureTooLow": alarmLocalOscTemperatureTooLow,
       "alarmLocalOscTemperatureTooHigh": alarmLocalOscTemperatureTooHigh,
       "alarmDifferentialGroupDelayTooHigh": alarmDifferentialGroupDelayTooHigh,
       "alarmChromaticDispersionTooLow": alarmChromaticDispersionTooLow,
       "alarmChromaticDispersionTooHigh": alarmChromaticDispersionTooHigh,
       "alarmSignalToNoiseRatioTooLow": alarmSignalToNoiseRatioTooLow,
       "alarmLocalOscLevelAbnormal": alarmLocalOscLevelAbnormal,
       "alarmCarrierFreqOffsetTooLow": alarmCarrierFreqOffsetTooLow,
       "alarmCarrierFreqOffsetTooHigh": alarmCarrierFreqOffsetTooHigh,
       "alarmLossOfLane": alarmLossOfLane,
       "alarmServerSignalFailureODUcrs": alarmServerSignalFailureODUcrs,
       "alarmAutoShutdownSendingOciOdu": alarmAutoShutdownSendingOciOdu,
       "alarmOduTribMsiMismatch": alarmOduTribMsiMismatch,
       "alarmChannelMismatch": alarmChannelMismatch,
       "alarmEqlzAdjust": alarmEqlzAdjust,
       "alarmHwDegrade": alarmHwDegrade,
       "alarmHwInitializing": alarmHwInitializing,
       "alarmAmpFailure": alarmAmpFailure,
       "alarmAutoAmpShutdown": alarmAutoAmpShutdown,
       "alarmFiberConnLos": alarmFiberConnLos,
       "alarmFiberConnOptFault": alarmFiberConnOptFault,
       "alarmFiberConnInvalid": alarmFiberConnInvalid,
       "alarmFiberConnMismatch": alarmFiberConnMismatch,
       "alarmFiberConnCommError": alarmFiberConnCommError,
       "alarmFiberConnProtocolFailure": alarmFiberConnProtocolFailure,
       "alarmFiberConnDataFailure": alarmFiberConnDataFailure,
       "alarmFiberAttenuationHigh": alarmFiberAttenuationHigh,
       "alarmFiberConnInvalidTx": alarmFiberConnInvalidTx,
       "alarmFiberConnMismatchTx": alarmFiberConnMismatchTx,
       "alarmFiberAttenuationHighTx": alarmFiberAttenuationHighTx,
       "alarmSwitchToDuplexInhibited": alarmSwitchToDuplexInhibited,
       "alarmMeaSwRevision": alarmMeaSwRevision,
       "alarmDbReplicationIncompleted": alarmDbReplicationIncompleted,
       "alarmBackupNotResponding": alarmBackupNotResponding,
       "alarmBackupForcedToHalt": alarmBackupForcedToHalt,
       "alarmDuplexLinkFailure": alarmDuplexLinkFailure,
       "alarmProvPayloadMismatch": alarmProvPayloadMismatch,
       "alarmAutoShutdownOpuFlxCSF": alarmAutoShutdownOpuFlxCSF,
       "alarmLogicalLanesSkewTooHigh": alarmLogicalLanesSkewTooHigh,
       "alarmFiberAttenuationCond": alarmFiberAttenuationCond,
       "alarmLaserOnDelay": alarmLaserOnDelay,
       "alarmAutoShutdownTxRxLasersDueToHighTemp": alarmAutoShutdownTxRxLasersDueToHighTemp,
       "alarmPtpEntityOosDisabled": alarmPtpEntityOosDisabled,
       "ptpEntityOosManagement": ptpEntityOosManagement,
       "ptpEntityOosMaintenance": ptpEntityOosMaintenance,
       "ptpEntityOosAins": ptpEntityOosAins,
       "alarmLossOfLaneOtu": alarmLossOfLaneOtu,
       "alarmAutoShutdownAmpAps": alarmAutoShutdownAmpAps,
       "transientThres1DayExceededPhysConvES": transientThres1DayExceededPhysConvES,
       "transientThres1DayExceededPhysConvCV": transientThres1DayExceededPhysConvCV,
       "transientThres1DayExceededPhysConvDE": transientThres1DayExceededPhysConvDE,
       "transientThres1DayExceededPhysConvCVDE": transientThres1DayExceededPhysConvCVDE,
       "transientMin15RecordsAvailable": transientMin15RecordsAvailable,
       "transientDay1RecordsAvailable": transientDay1RecordsAvailable,
       "transientWeek1RecordsAvailable": transientWeek1RecordsAvailable,
       "transientNeColdStart": transientNeColdStart,
       "transientWorkingSwitchedtoProtection": transientWorkingSwitchedtoProtection,
       "transientWorkingSwitchedBacktoWorking": transientWorkingSwitchedBacktoWorking,
       "transientManualWorkingSwitchedtoProtection": transientManualWorkingSwitchedtoProtection,
       "transientManualWorkingSwitchedBacktoWorking": transientManualWorkingSwitchedBacktoWorking,
       "transientForcedWorkingSwitchedBacktoWorking": transientForcedWorkingSwitchedBacktoWorking,
       "transientForcedWorkingSwitchedBacktoProtection": transientForcedWorkingSwitchedBacktoProtection,
       "transientThres1DayExceededBytesTx": transientThres1DayExceededBytesTx,
       "transientThres1DayExceededFecCE": transientThres1DayExceededFecCE,
       "transientThres1DayExceededFecUBE": transientThres1DayExceededFecUBE,
       "transientThres1DayExceededFecES": transientThres1DayExceededFecES,
       "transientThres1DayExceededFecSES": transientThres1DayExceededFecSES,
       "transientThres1DayExceededMuxES": transientThres1DayExceededMuxES,
       "transientThres1DayExceededMuxSES": transientThres1DayExceededMuxSES,
       "transientTopologyDataInvalid": transientTopologyDataInvalid,
       "transientCopyFileFailNotExist": transientCopyFileFailNotExist,
       "transientCopyFileConnectionFail": transientCopyFileConnectionFail,
       "transientCopyFileLoginFail": transientCopyFileLoginFail,
       "transientCopyFileSpaceFail": transientCopyFileSpaceFail,
       "transientCopyFileProtocolFail": transientCopyFileProtocolFail,
       "transientCopyFileAccessDenied": transientCopyFileAccessDenied,
       "transientCopyFileChecksumFail": transientCopyFileChecksumFail,
       "transientCopyFileTransferStart": transientCopyFileTransferStart,
       "transientCopyFileTransferInProgress": transientCopyFileTransferInProgress,
       "transientCopyFileTransferComplete": transientCopyFileTransferComplete,
       "transientLocalCopyMemFail": transientLocalCopyMemFail,
       "transientLocalCopyFileStarted": transientLocalCopyFileStarted,
       "transientLocalCopyMemComplted": transientLocalCopyMemComplted,
       "transientSoftwareActivation": transientSoftwareActivation,
       "transientSoftwareActivationFail": transientSoftwareActivationFail,
       "transientDatabaseActivationFail": transientDatabaseActivationFail,
       "transientDatabaseActivation": transientDatabaseActivation,
       "transientBootUpFailed": transientBootUpFailed,
       "transientBootUpCompleted": transientBootUpCompleted,
       "transientBootUpStarted": transientBootUpStarted,
       "transientIntrusionRx": transientIntrusionRx,
       "transientIntrusionTx": transientIntrusionTx,
       "transientDatabaseMismatch": transientDatabaseMismatch,
       "transientSwResetReload": transientSwResetReload,
       "transientInstallFwpCompleted": transientInstallFwpCompleted,
       "transientCopyFileSshHostKeyFail": transientCopyFileSshHostKeyFail,
       "transientCopyFileNoHostKeyFail": transientCopyFileNoHostKeyFail,
       "transientHardwareResetInputTIF": transientHardwareResetInputTIF,
       "transientThres1DayExceededSonetSectES": transientThres1DayExceededSonetSectES,
       "transientThres1DayExceededSonetSectSES": transientThres1DayExceededSonetSectSES,
       "transientThres1DayExceededSonetSectSEFS": transientThres1DayExceededSonetSectSEFS,
       "transientThres1DayExceededSonetSectCV": transientThres1DayExceededSonetSectCV,
       "transientThres1DayExceededSonetLineES": transientThres1DayExceededSonetLineES,
       "transientThres1DayExceededSonetLineSES": transientThres1DayExceededSonetLineSES,
       "transientThres1DayExceededSonetLineCV": transientThres1DayExceededSonetLineCV,
       "transientThres1DayExceededSonetLineUAS": transientThres1DayExceededSonetLineUAS,
       "transientThres1DayExceededOduTcmAES": transientThres1DayExceededOduTcmAES,
       "transientThres1DayExceededOduTcmASES": transientThres1DayExceededOduTcmASES,
       "transientThres1DayExceededOduTcmAUAS": transientThres1DayExceededOduTcmAUAS,
       "transientThres1DayExceededOduTcmABbe": transientThres1DayExceededOduTcmABbe,
       "transientThres1DayExceededOduTcmBES": transientThres1DayExceededOduTcmBES,
       "transientThres1DayExceededOduTcmBSES": transientThres1DayExceededOduTcmBSES,
       "transientThres1DayExceededOduTcmBUAS": transientThres1DayExceededOduTcmBUAS,
       "transientThres1DayExceededOduTcmBBbe": transientThres1DayExceededOduTcmBBbe,
       "transientThres1DayExceededOduTcmCES": transientThres1DayExceededOduTcmCES,
       "transientThres1DayExceededOduTcmCSES": transientThres1DayExceededOduTcmCSES,
       "transientThres1DayExceededOduTcmCUAS": transientThres1DayExceededOduTcmCUAS,
       "transientThres1DayExceededOduTcmCBbe": transientThres1DayExceededOduTcmCBbe,
       "transientThres1DayExceededOtuES": transientThres1DayExceededOtuES,
       "transientThres1DayExceededOtuSES": transientThres1DayExceededOtuSES,
       "transientThres1DayExceededOtuUAS": transientThres1DayExceededOtuUAS,
       "transientThres1DayExceededOtuBbe": transientThres1DayExceededOtuBbe,
       "transientThres1DayExceededOduES": transientThres1DayExceededOduES,
       "transientThres1DayExceededOduSES": transientThres1DayExceededOduSES,
       "transientThres1DayExceededOduUAS": transientThres1DayExceededOduUAS,
       "transientThres1DayExceededOduBbe": transientThres1DayExceededOduBbe,
       "transientCpConnectionEstablishmentStart": transientCpConnectionEstablishmentStart,
       "transientCpConnectionEstablishmentFail": transientCpConnectionEstablishmentFail,
       "transientCpConnectionEstablishmentCompleted": transientCpConnectionEstablishmentCompleted,
       "transientCpConnectionModificationStart": transientCpConnectionModificationStart,
       "transientCpConnectionModificationFail": transientCpConnectionModificationFail,
       "transientCpConnectionModificationCompleted": transientCpConnectionModificationCompleted,
       "transientAlarmProfileActivation": transientAlarmProfileActivation,
       "transientAlarmProfileActivationFail": transientAlarmProfileActivationFail,
       "transientCpConnectionEstablishmentAborted": transientCpConnectionEstablishmentAborted,
       "transientEqlzStart": transientEqlzStart,
       "transientEqlzFailed": transientEqlzFailed,
       "transientEqlzCompleted": transientEqlzCompleted,
       "transientEqlzRequestDenied": transientEqlzRequestDenied,
       "transientEqlzNotRequired": transientEqlzNotRequired,
       "transientEqlzProcessPassed": transientEqlzProcessPassed,
       "transientEqlzProcessWait": transientEqlzProcessWait,
       "transientDispersionCompFailed": transientDispersionCompFailed,
       "transientAlpSettingStarted": transientAlpSettingStarted,
       "transientAlpSettingFinished": transientAlpSettingFinished,
       "transientFarEndDyingGasp": transientFarEndDyingGasp,
       "transientLocalCopyMemFailDenied": transientLocalCopyMemFailDenied,
       "transientLocalCopyMemFailCrcErr": transientLocalCopyMemFailCrcErr,
       "transientAlarmProfileFactoryDefaultActivation": transientAlarmProfileFactoryDefaultActivation,
       "transientLocalCopyMemFailVersionMismatch": transientLocalCopyMemFailVersionMismatch,
       "transientLocalCopyMemFailWrongState": transientLocalCopyMemFailWrongState,
       "transientLocalCopyMemFailDamagedConfFile": transientLocalCopyMemFailDamagedConfFile,
       "transientLocalCopyMemFailFsckFailed": transientLocalCopyMemFailFsckFailed,
       "transientLocalCopyMemFailNotExist": transientLocalCopyMemFailNotExist,
       "transientLocalCopyMemFailExist": transientLocalCopyMemFailExist,
       "transientLocalCopyMemFailDisallowed": transientLocalCopyMemFailDisallowed,
       "transientLocalCopyMemFailLimitReached": transientLocalCopyMemFailLimitReached,
       "transientLocalCopyMemFailGeneration": transientLocalCopyMemFailGeneration,
       "transientCopyFileFailDisabledProtocol": transientCopyFileFailDisabledProtocol,
       "transientAutomaticBackupReport": transientAutomaticBackupReport,
       "transientRestorationStart": transientRestorationStart,
       "transientRestorationFailed": transientRestorationFailed,
       "transientRestorationCompleted": transientRestorationCompleted,
       "transientFarEndChanged": transientFarEndChanged,
       "transientBootUpRejected": transientBootUpRejected,
       "transientThres1DayExceededFecBERCE": transientThres1DayExceededFecBERCE,
       "transientPreComputationReady": transientPreComputationReady,
       "transientNeTimeChanged": transientNeTimeChanged,
       "transientNtpSrvTestSuccessed": transientNtpSrvTestSuccessed,
       "transientNtpSrvTestFailed": transientNtpSrvTestFailed,
       "transientNtpSrvSyncStarted": transientNtpSrvSyncStarted,
       "transientNtpSrvSyncFailed": transientNtpSrvSyncFailed,
       "transientNtpSrvSyncEnded": transientNtpSrvSyncEnded,
       "transientPmSnapshotStarted": transientPmSnapshotStarted,
       "transientPmSnapshotEnded": transientPmSnapshotEnded,
       "transientNtpSrvSyncChanged": transientNtpSrvSyncChanged,
       "transientThres1DayExceededPhysConvSE": transientThres1DayExceededPhysConvSE,
       "transientThres1DayExceededPhysConvESTX": transientThres1DayExceededPhysConvESTX,
       "transientThres1DayExceededPhysConvCVTX": transientThres1DayExceededPhysConvCVTX,
       "transientThres1DayExceededPhysConvSETX": transientThres1DayExceededPhysConvSETX,
       "transientCryptoRtf": transientCryptoRtf,
       "transientCryptoFwpRevChanged": transientCryptoFwpRevChanged,
       "transientCryptoPasswdChanged": transientCryptoPasswdChanged,
       "transientCryptoFwpUpdate": transientCryptoFwpUpdate,
       "transientCryptoKeyExchgFailCondClr": transientCryptoKeyExchgFailCondClr,
       "transientCryptoAuthPasswdChanged": transientCryptoAuthPasswdChanged,
       "transientCryptoSessKeyLifetimeChanged": transientCryptoSessKeyLifetimeChanged,
       "transientCryptoAuthPasswdInvalid": transientCryptoAuthPasswdInvalid,
       "transientEncryptionPortSingleKeyExchgFailed": transientEncryptionPortSingleKeyExchgFailed,
       "transientWaitToRevert": transientWaitToRevert,
       "transientReversionStarted": transientReversionStarted,
       "transientReversionFailed": transientReversionFailed,
       "transientReversionCompleted": transientReversionCompleted,
       "transientFiberConnStatChange": transientFiberConnStatChange,
       "transientProtSwToDuplexStart": transientProtSwToDuplexStart,
       "transientProtSwToDuplexCompl": transientProtSwToDuplexCompl,
       "transientProtSwToDuplexFail": transientProtSwToDuplexFail,
       "transientForcedReboot": transientForcedReboot,
       "trapVariables": trapVariables,
       "configAndStatusMIB": configAndStatusMIB,
       "commonConfigAndStatus": commonConfigAndStatus,
       "entityStateTable": entityStateTable,
       "entityStateEntry": entityStateEntry,
       "entityStateAdmin": entityStateAdmin,
       "entityStateOper": entityStateOper,
       "entityStateSecondaryStates": entityStateSecondaryStates,
       "entityStateCapTable": entityStateCapTable,
       "entityStateCapEntry": entityStateCapEntry,
       "entityStateCapAdmin": entityStateCapAdmin,
       "controlPlaneWdmEntityStateTable": controlPlaneWdmEntityStateTable,
       "controlPlaneWdmEntityStateEntry": controlPlaneWdmEntityStateEntry,
       "controlPlaneWdmEntityStateAdmin": controlPlaneWdmEntityStateAdmin,
       "controlPlaneWdmEntityStateOper": controlPlaneWdmEntityStateOper,
       "controlPlaneWdmEntityStateSecondaryStates": controlPlaneWdmEntityStateSecondaryStates,
       "controlPlaneEntityStateCapTable": controlPlaneEntityStateCapTable,
       "controlPlaneEntityStateCapEntry": controlPlaneEntityStateCapEntry,
       "controlPlaneEntityStateCapAdmin": controlPlaneEntityStateCapAdmin,
       "dependenciesTable": dependenciesTable,
       "dependenciesEntry": dependenciesEntry,
       "dependenciesIndex": dependenciesIndex,
       "dependenciesAid": dependenciesAid,
       "controlPlaneEthEntityStateTable": controlPlaneEthEntityStateTable,
       "controlPlaneEthEntityStateEntry": controlPlaneEthEntityStateEntry,
       "controlPlaneEthEntityStateAdmin": controlPlaneEthEntityStateAdmin,
       "controlPlaneEthEntityStateOper": controlPlaneEthEntityStateOper,
       "controlPlaneEthEntityStateSecondaryStates": controlPlaneEthEntityStateSecondaryStates,
       "controlPlaneEthEntityStateCapTable": controlPlaneEthEntityStateCapTable,
       "controlPlaneEthEntityStateCapEntry": controlPlaneEthEntityStateCapEntry,
       "controlPlaneEthEntityStateCapAdmin": controlPlaneEthEntityStateCapAdmin,
       "controlPlaneOtnEntityStateTable": controlPlaneOtnEntityStateTable,
       "controlPlaneOtnEntityStateEntry": controlPlaneOtnEntityStateEntry,
       "controlPlaneOtnEntityStateAdmin": controlPlaneOtnEntityStateAdmin,
       "controlPlaneOtnEntityStateOper": controlPlaneOtnEntityStateOper,
       "controlPlaneOtnEntityStateSecondaryStates": controlPlaneOtnEntityStateSecondaryStates,
       "controlPlaneOtnEntityStateCapTable": controlPlaneOtnEntityStateCapTable,
       "controlPlaneOtnEntityStateCapEntry": controlPlaneOtnEntityStateCapEntry,
       "controlPlaneOtnEntityStateCapAdmin": controlPlaneOtnEntityStateCapAdmin,
       "ptpEntityStateTable": ptpEntityStateTable,
       "ptpEntityStateEntry": ptpEntityStateEntry,
       "ptpEntityStateAdmin": ptpEntityStateAdmin,
       "ptpEntityStateOper": ptpEntityStateOper,
       "ptpEntityStateSecondaryStates": ptpEntityStateSecondaryStates,
       "ptpEntityStateCapTable": ptpEntityStateCapTable,
       "ptpEntityStateCapEntry": ptpEntityStateCapEntry,
       "ptpEntityStateCapAdmin": ptpEntityStateCapAdmin,
       "childrenTable": childrenTable,
       "childrenEntry": childrenEntry,
       "childrenId": childrenId,
       "childrenRowPointer": childrenRowPointer,
       "equipmentConfigAndStatus": equipmentConfigAndStatus,
       "moduleDiagnosticsTable": moduleDiagnosticsTable,
       "moduleDiagnosticsEntry": moduleDiagnosticsEntry,
       "moduleDiagnosticsTemp": moduleDiagnosticsTemp,
       "moduleDiagnosticsUpperTempThres": moduleDiagnosticsUpperTempThres,
       "moduleDiagnosticsLowerTempThres": moduleDiagnosticsLowerTempThres,
       "moduleDiagnosticsCapabilityLevel": moduleDiagnosticsCapabilityLevel,
       "moduleDiagnosticsCurrentLowThres": moduleDiagnosticsCurrentLowThres,
       "moduleDiagnosticsCurrentHighThres": moduleDiagnosticsCurrentHighThres,
       "moduleDiagnosticsDescription": moduleDiagnosticsDescription,
       "moduleDiagnosticsInventoryDescription": moduleDiagnosticsInventoryDescription,
       "currentDiagnosticsTable": currentDiagnosticsTable,
       "currentDiagnosticsEntry": currentDiagnosticsEntry,
       "currentDiagnosticsAmpere": currentDiagnosticsAmpere,
       "currentDiagnosticsUpperThres": currentDiagnosticsUpperThres,
       "currentDiagnosticsPsuOutputPower": currentDiagnosticsPsuOutputPower,
       "moduleConfigTable": moduleConfigTable,
       "moduleConfigEntry": moduleConfigEntry,
       "moduleConfigAlias": moduleConfigAlias,
       "moduleConfigCapabilityLevelProvision": moduleConfigCapabilityLevelProvision,
       "moduleConfigOutputReset": moduleConfigOutputReset,
       "moduleConfigScrambling": moduleConfigScrambling,
       "moduleConfigLagSysPrio": moduleConfigLagSysPrio,
       "moduleConfigEqlzAdmin": moduleConfigEqlzAdmin,
       "moduleConfigInitiateEqualization": moduleConfigInitiateEqualization,
       "moduleConfigCac": moduleConfigCac,
       "moduleConfigFiberDetect": moduleConfigFiberDetect,
       "moduleDataTable": moduleDataTable,
       "moduleDataEntry": moduleDataEntry,
       "moduleDataDeploymentScenario": moduleDataDeploymentScenario,
       "moduleDataHeight": moduleDataHeight,
       "moduleDataWidth": moduleDataWidth,
       "moduleDataNetworkPorts": moduleDataNetworkPorts,
       "moduleDataClientPorts": moduleDataClientPorts,
       "moduleDataStages": moduleDataStages,
       "moduleDataConnectionLocation": moduleDataConnectionLocation,
       "moduleDataInternalPorts": moduleDataInternalPorts,
       "moduleDataInternalPlugs": moduleDataInternalPlugs,
       "moduleDataInternalPlugRates": moduleDataInternalPlugRates,
       "moduleDataChannel": moduleDataChannel,
       "moduleDataUpgradePorts": moduleDataUpgradePorts,
       "moduleDataSerialPorts": moduleDataSerialPorts,
       "moduleDataEccPorts": moduleDataEccPorts,
       "moduleDataMaxPowerConsumption": moduleDataMaxPowerConsumption,
       "moduleDataScuRing": moduleDataScuRing,
       "moduleDataNetworkPlugs": moduleDataNetworkPlugs,
       "moduleDataMidstagePorts": moduleDataMidstagePorts,
       "moduleDataMode": moduleDataMode,
       "moduleDataRoadmNumber": moduleDataRoadmNumber,
       "moduleDataChannelsNumber": moduleDataChannelsNumber,
       "moduleDataChannelSpacing": moduleDataChannelSpacing,
       "moduleDataTransmitChannel": moduleDataTransmitChannel,
       "moduleDataCategory": moduleDataCategory,
       "moduleDataFanPorts": moduleDataFanPorts,
       "moduleDataLanPorts": moduleDataLanPorts,
       "moduleDataMapping": moduleDataMapping,
       "moduleDataBand": moduleDataBand,
       "moduleDataChannelsProvision": moduleDataChannelsProvision,
       "moduleDataType": moduleDataType,
       "moduleDataTerminationType": moduleDataTerminationType,
       "moduleDataFiberDetectStatus": moduleDataFiberDetectStatus,
       "moduleDataInternalPlugsReach": moduleDataInternalPlugsReach,
       "moduleDataSpeqAlsConf": moduleDataSpeqAlsConf,
       "moduleDataTrafficDirection": moduleDataTrafficDirection,
       "moduleDataOscUsage": moduleDataOscUsage,
       "wdmChannelModuleInventoryTable": wdmChannelModuleInventoryTable,
       "wdmChannelModuleInventoryEntry": wdmChannelModuleInventoryEntry,
       "wdmChannelModuleInventoryChannelId": wdmChannelModuleInventoryChannelId,
       "wdmChannelModuleInventoryReach": wdmChannelModuleInventoryReach,
       "wdmChannelModuleDataTable": wdmChannelModuleDataTable,
       "wdmChannelModuleDataEntry": wdmChannelModuleDataEntry,
       "wdmChannelModuleDataSuppClientPlugRates": wdmChannelModuleDataSuppClientPlugRates,
       "wdmChannelModuleDataSuppNetworkPlugRates": wdmChannelModuleDataSuppNetworkPlugRates,
       "wdmChannelModuleDataSuppClientPlugTypes": wdmChannelModuleDataSuppClientPlugTypes,
       "wdmChannelModuleDataSuppNetworkPlugTypes": wdmChannelModuleDataSuppNetworkPlugTypes,
       "plugInventoryTable": plugInventoryTable,
       "plugInventoryEntry": plugInventoryEntry,
       "plugInventoryMaxDataRate": plugInventoryMaxDataRate,
       "plugInventoryChannelId": plugInventoryChannelId,
       "plugInventoryReach": plugInventoryReach,
       "plugDataTable": plugDataTable,
       "plugDataEntry": plugDataEntry,
       "plugDataConnectorType": plugDataConnectorType,
       "plugDataFiberType": plugDataFiberType,
       "plugDataLoopbackAttenuation": plugDataLoopbackAttenuation,
       "plugDataMaxPowerConsumption": plugDataMaxPowerConsumption,
       "plugDataGenericPorts": plugDataGenericPorts,
       "apsConfigTable": apsConfigTable,
       "apsConfigEntry": apsConfigEntry,
       "apsConfigSDswitching": apsConfigSDswitching,
       "apsConfigHoldOffTime": apsConfigHoldOffTime,
       "apsConfigWaitToRestore": apsConfigWaitToRestore,
       "apsProtGroupStatusTable": apsProtGroupStatusTable,
       "apsProtGroupStatusEntry": apsProtGroupStatusEntry,
       "apsProtGroupStatusApsType": apsProtGroupStatusApsType,
       "apsProtGroupStatusDirection": apsProtGroupStatusDirection,
       "apsProtGroupStatusRevertiveMode": apsProtGroupStatusRevertiveMode,
       "apsProtGroupStatusProtectionMech": apsProtGroupStatusProtectionMech,
       "apsProtGroupStatusWorkingIndex": apsProtGroupStatusWorkingIndex,
       "apsProtGroupStatusProtectionIndex": apsProtGroupStatusProtectionIndex,
       "apsProtGroupStatusProtectionType": apsProtGroupStatusProtectionType,
       "apsProtFacilityConfigTable": apsProtFacilityConfigTable,
       "apsProtFacilityConfigEntry": apsProtFacilityConfigEntry,
       "apsProtFacilityConfigSwitchCommand": apsProtFacilityConfigSwitchCommand,
       "apsProtFacilityConfigInhibitSwitchToProt": apsProtFacilityConfigInhibitSwitchToProt,
       "apsProtFacilityConfigInhibitSwitchToWork": apsProtFacilityConfigInhibitSwitchToWork,
       "shelfDiagnosticsTable": shelfDiagnosticsTable,
       "shelfDiagnosticsEntry": shelfDiagnosticsEntry,
       "shelfDiagnosticsPowerConsumption": shelfDiagnosticsPowerConsumption,
       "shelfDiagnosticsPowerOutput": shelfDiagnosticsPowerOutput,
       "shelfDiagnosticsMaxPowerConsumption": shelfDiagnosticsMaxPowerConsumption,
       "dcnTopologyDataTable": dcnTopologyDataTable,
       "dcnTopologyDataEntry": dcnTopologyDataEntry,
       "dcnTopologyDataIndex": dcnTopologyDataIndex,
       "dcnTopologyDataNodeIpAddress": dcnTopologyDataNodeIpAddress,
       "dcnTopologyConfigTable": dcnTopologyConfigTable,
       "dcnTopologyConfigEntry": dcnTopologyConfigEntry,
       "dcnTopologyConfigActivateDetect": dcnTopologyConfigActivateDetect,
       "dcnTopologyStatusTable": dcnTopologyStatusTable,
       "dcnTopologyStatusEntry": dcnTopologyStatusEntry,
       "dcnTopologyStatusTopologyType": dcnTopologyStatusTopologyType,
       "otdrConfigTable": otdrConfigTable,
       "otdrConfigEntry": otdrConfigEntry,
       "otdrConfigTimePeriod": otdrConfigTimePeriod,
       "otdrDataTable": otdrDataTable,
       "otdrDataEntry": otdrDataEntry,
       "otdrDataRemainingTime": otdrDataRemainingTime,
       "edfaConfigTable": edfaConfigTable,
       "edfaConfigEntry": edfaConfigEntry,
       "edfaConfigTilt": edfaConfigTilt,
       "edfaConfigGain": edfaConfigGain,
       "edfaConfigVariableGain": edfaConfigVariableGain,
       "opticalAmplifierEquipmentDiagnosticsTable": opticalAmplifierEquipmentDiagnosticsTable,
       "opticalAmplifierEquipmentDiagnosticsEntry": opticalAmplifierEquipmentDiagnosticsEntry,
       "opticalAmplifierEquipmentDiagnosticsSubTemp": opticalAmplifierEquipmentDiagnosticsSubTemp,
       "opticalAmplifierEquipmentDiagnosticsUpperSubTempThres": opticalAmplifierEquipmentDiagnosticsUpperSubTempThres,
       "shelfConfigTable": shelfConfigTable,
       "shelfConfigEntry": shelfConfigEntry,
       "shelfConfigRack": shelfConfigRack,
       "shelfConfigRackNumber": shelfConfigRackNumber,
       "shelfConfigRackOrder": shelfConfigRackOrder,
       "dcnTopologyConfigCapTable": dcnTopologyConfigCapTable,
       "dcnTopologyConfigCapEntry": dcnTopologyConfigCapEntry,
       "dcnTopologyConfigCapActivateDetect": dcnTopologyConfigCapActivateDetect,
       "lanIpDataTable": lanIpDataTable,
       "lanIpDataEntry": lanIpDataEntry,
       "lanIpDataOscmMembers": lanIpDataOscmMembers,
       "eRoadmConfigTable": eRoadmConfigTable,
       "eRoadmConfigEntry": eRoadmConfigEntry,
       "eRoadmConfigOpticalSetPoint": eRoadmConfigOpticalSetPoint,
       "eRoadmConfigOffset": eRoadmConfigOffset,
       "eRoadmConfigTilt": eRoadmConfigTilt,
       "eRoadmConfigInitiateEqualization": eRoadmConfigInitiateEqualization,
       "eRoadmDataTable": eRoadmDataTable,
       "eRoadmDataEntry": eRoadmDataEntry,
       "eRoadmDataSumTransmited": eRoadmDataSumTransmited,
       "eRoadmDataSumReceived": eRoadmDataSumReceived,
       "eRoadmDataConnectionState": eRoadmDataConnectionState,
       "eRoadmInfoTable": eRoadmInfoTable,
       "eRoadmInfoEntry": eRoadmInfoEntry,
       "eRoadmInfoNetworkPorts": eRoadmInfoNetworkPorts,
       "eRoadmInfoClientPorts": eRoadmInfoClientPorts,
       "eRoadmInfoInternalPorts": eRoadmInfoInternalPorts,
       "eRoadmInfoInternalPlugs": eRoadmInfoInternalPlugs,
       "eRoadmInfoInternalPlugRates": eRoadmInfoInternalPlugRates,
       "eRoadmInfoChannel": eRoadmInfoChannel,
       "eRoadmInfoShelfHeight": eRoadmInfoShelfHeight,
       "eRoadmInfoUpgradePorts": eRoadmInfoUpgradePorts,
       "eRoadmInfoMaxPowerConsumption": eRoadmInfoMaxPowerConsumption,
       "eRoadmInfoScuRing": eRoadmInfoScuRing,
       "eRoadmInfoChannelSpacing": eRoadmInfoChannelSpacing,
       "shelfInfoTable": shelfInfoTable,
       "shelfInfoEntry": shelfInfoEntry,
       "shelfInfoStandardSlots": shelfInfoStandardSlots,
       "shelfInfoShelfHeight": shelfInfoShelfHeight,
       "shelfInfoStandardSlotHeight": shelfInfoStandardSlotHeight,
       "shelfInfoNetworkPorts": shelfInfoNetworkPorts,
       "shelfInfoClientPorts": shelfInfoClientPorts,
       "shelfInfoInternalPorts": shelfInfoInternalPorts,
       "shelfInfoUpgradePorts": shelfInfoUpgradePorts,
       "shelfInfoOscPorts": shelfInfoOscPorts,
       "shelfInfoOscChannel": shelfInfoOscChannel,
       "shelfInfoOmBand": shelfInfoOmBand,
       "shelfInfoShelfId": shelfInfoShelfId,
       "shelfInfoChannelBandwidth": shelfInfoChannelBandwidth,
       "eRoadmConfigCapTable": eRoadmConfigCapTable,
       "eRoadmConfigCapEntry": eRoadmConfigCapEntry,
       "eRoadmConfigCapOpticalSetPoint": eRoadmConfigCapOpticalSetPoint,
       "eRoadmConfigCapOffset": eRoadmConfigCapOffset,
       "eRoadmConfigCapTilt": eRoadmConfigCapTilt,
       "eRoadmConfigCapInitiateEqualization": eRoadmConfigCapInitiateEqualization,
       "capabilityDataTable": capabilityDataTable,
       "capabilityDataEntry": capabilityDataEntry,
       "capabilityDataType": capabilityDataType,
       "capabilityDataCapabilityLevel": capabilityDataCapabilityLevel,
       "capabilityDataDescription": capabilityDataDescription,
       "farEndPlugDiagnosticsTable": farEndPlugDiagnosticsTable,
       "farEndPlugDiagnosticsEntry": farEndPlugDiagnosticsEntry,
       "farEndPlugDiagnosticsTemp": farEndPlugDiagnosticsTemp,
       "farEndPlugDiagnosticsUpperTempThres": farEndPlugDiagnosticsUpperTempThres,
       "farEndPlugDiagnosticsLowerTempThres": farEndPlugDiagnosticsLowerTempThres,
       "farEndPlugConfigTable": farEndPlugConfigTable,
       "farEndPlugConfigEntry": farEndPlugConfigEntry,
       "farEndPlugConfigAlias": farEndPlugConfigAlias,
       "farEndPlugConfigMaxDataRate": farEndPlugConfigMaxDataRate,
       "farEndPlugConfigCapTable": farEndPlugConfigCapTable,
       "farEndPlugConfigCapEntry": farEndPlugConfigCapEntry,
       "farEndPlugConfigCapMaxDataRate": farEndPlugConfigCapMaxDataRate,
       "farEndPlugDataTable": farEndPlugDataTable,
       "farEndPlugDataEntry": farEndPlugDataEntry,
       "farEndPlugDataType": farEndPlugDataType,
       "farEndPlugDataMaxDataRate": farEndPlugDataMaxDataRate,
       "farEndPlugDataTransmitChannel": farEndPlugDataTransmitChannel,
       "farEndPlugDataReach": farEndPlugDataReach,
       "farEndPlugDataFiberType": farEndPlugDataFiberType,
       "farEndPlugDataConnectorType": farEndPlugDataConnectorType,
       "farEndPlugDataAdmin": farEndPlugDataAdmin,
       "moduleConfigCapTable": moduleConfigCapTable,
       "moduleConfigCapEntry": moduleConfigCapEntry,
       "moduleConfigCapEqlzAdmin": moduleConfigCapEqlzAdmin,
       "moduleConfigCapInitiateEqualization": moduleConfigCapInitiateEqualization,
       "moduleConfigCapCac": moduleConfigCapCac,
       "moduleConfigCapFiberDetect": moduleConfigCapFiberDetect,
       "interfaceConfigAndStatus": interfaceConfigAndStatus,
       "interfaceConfigTable": interfaceConfigTable,
       "interfaceConfigEntry": interfaceConfigEntry,
       "interfaceConfigIdentifier": interfaceConfigIdentifier,
       "interfaceConfigLoopConfig": interfaceConfigLoopConfig,
       "interfaceConfigDataLayerPmReset": interfaceConfigDataLayerPmReset,
       "interfaceConfigEqlzAdmin": interfaceConfigEqlzAdmin,
       "interfaceConfigDispertionConfig": interfaceConfigDispertionConfig,
       "interfaceConfigTurnupConfig": interfaceConfigTurnupConfig,
       "interfaceConfigInitiateEqualization": interfaceConfigInitiateEqualization,
       "interfaceConfigExternalVid": interfaceConfigExternalVid,
       "interfaceConfigLanAid": interfaceConfigLanAid,
       "interfaceConfigBehaviour": interfaceConfigBehaviour,
       "interfaceConfigInitiateRamanEqualization": interfaceConfigInitiateRamanEqualization,
       "interfaceConfigSigDegPcslThreshold": interfaceConfigSigDegPcslThreshold,
       "interfaceDataTable": interfaceDataTable,
       "interfaceDataEntry": interfaceDataEntry,
       "interfaceDataConnector": interfaceDataConnector,
       "interfaceDataSignalMapping": interfaceDataSignalMapping,
       "interfaceDataRate": interfaceDataRate,
       "interfaceDataBehaviour": interfaceDataBehaviour,
       "interfaceDataTermLevel": interfaceDataTermLevel,
       "interfaceDataConnectionType": interfaceDataConnectionType,
       "interfaceDataMonLevel": interfaceDataMonLevel,
       "interfaceDataValidSignalTimer": interfaceDataValidSignalTimer,
       "interfaceDataPayload": interfaceDataPayload,
       "interfaceDataParity": interfaceDataParity,
       "interfaceDataPhysIfBaseType": interfaceDataPhysIfBaseType,
       "interfaceDataLaserReleaseTimer": interfaceDataLaserReleaseTimer,
       "interfaceDataCir": interfaceDataCir,
       "interfaceDataTransmitWavelength": interfaceDataTransmitWavelength,
       "interfaceDataTransmitFrequency": interfaceDataTransmitFrequency,
       "interfaceDataTransmitChannel": interfaceDataTransmitChannel,
       "interfaceDataType": interfaceDataType,
       "interfaceDataConnectionState": interfaceDataConnectionState,
       "interfaceDataFacilityType": interfaceDataFacilityType,
       "interfaceDataProtectionRole": interfaceDataProtectionRole,
       "interfaceDataReach": interfaceDataReach,
       "interfaceDataFiberType": interfaceDataFiberType,
       "interfaceDataOdtuType": interfaceDataOdtuType,
       "interfaceDataOduTribPortNo": interfaceDataOduTribPortNo,
       "interfaceDataOduTribTimeSlottNo": interfaceDataOduTribTimeSlottNo,
       "interfaceDataRevertiveMode": interfaceDataRevertiveMode,
       "interfaceDataSignalDirection": interfaceDataSignalDirection,
       "opticalIfConfigTable": opticalIfConfigTable,
       "opticalIfConfigEntry": opticalIfConfigEntry,
       "opticalIfConfigAlsMode": opticalIfConfigAlsMode,
       "opticalIfConfigErrorForwarding": opticalIfConfigErrorForwarding,
       "opticalIfConfigFecType": opticalIfConfigFecType,
       "opticalIfConfigLaserOffDelayFunction": opticalIfConfigLaserOffDelayFunction,
       "opticalIfConfigForceLaserOn": opticalIfConfigForceLaserOn,
       "opticalIfConfigLossAttenuation": opticalIfConfigLossAttenuation,
       "opticalIfConfigAprHighThreshold": opticalIfConfigAprHighThreshold,
       "opticalIfConfigAseTabCreation": opticalIfConfigAseTabCreation,
       "opticalIfConfigWdmRxChannel": opticalIfConfigWdmRxChannel,
       "opticalIfConfigSigDegThresOtu": opticalIfConfigSigDegThresOtu,
       "opticalIfConfigSigDegPeriodOtu": opticalIfConfigSigDegPeriodOtu,
       "opticalIfConfigSigDegThresOdu": opticalIfConfigSigDegThresOdu,
       "opticalIfConfigSigDegPeriodOdu": opticalIfConfigSigDegPeriodOdu,
       "opticalIfConfigSigDegThresSonetSection": opticalIfConfigSigDegThresSonetSection,
       "opticalIfConfigSigDegThresSdhSection": opticalIfConfigSigDegThresSdhSection,
       "opticalIfConfigSigDegPeriodSdhSection": opticalIfConfigSigDegPeriodSdhSection,
       "opticalIfConfigDispersionMode": opticalIfConfigDispersionMode,
       "opticalIfConfigDispersionSetting": opticalIfConfigDispersionSetting,
       "opticalIfConfigOpticalSetPoint": opticalIfConfigOpticalSetPoint,
       "opticalIfConfigOffset": opticalIfConfigOffset,
       "opticalIfConfigTilt": opticalIfConfigTilt,
       "opticalIfConfigAreaId": opticalIfConfigAreaId,
       "opticalIfConfigAutoThresReset": opticalIfConfigAutoThresReset,
       "opticalIfConfigUtag": opticalIfConfigUtag,
       "opticalIfConfigPvid": opticalIfConfigPvid,
       "opticalIfConfigPriority": opticalIfConfigPriority,
       "opticalIfConfigStagType": opticalIfConfigStagType,
       "opticalIfConfigCac": opticalIfConfigCac,
       "opticalIfConfigMaxFrameSize": opticalIfConfigMaxFrameSize,
       "opticalIfConfigLagActivePorts": opticalIfConfigLagActivePorts,
       "opticalIfConfigLagPrio": opticalIfConfigLagPrio,
       "opticalIfConfigLagLoadBallanceSource": opticalIfConfigLagLoadBallanceSource,
       "opticalIfConfigLacpTimeout": opticalIfConfigLacpTimeout,
       "opticalIfConfigTransmitChannel": opticalIfConfigTransmitChannel,
       "opticalIfConfigFarEndCommunication": opticalIfConfigFarEndCommunication,
       "opticalIfConfigLacpMode": opticalIfConfigLacpMode,
       "opticalIfConfigTxOffDelay": opticalIfConfigTxOffDelay,
       "opticalIfConfigOpuPayloadType": opticalIfConfigOpuPayloadType,
       "opticalIfConfigOscOpticalSetpoint": opticalIfConfigOscOpticalSetpoint,
       "opticalIfConfigFiberBrand": opticalIfConfigFiberBrand,
       "opticalIfConfigTiltSet": opticalIfConfigTiltSet,
       "opticalIfConfigForceFwdAsePilotOn": opticalIfConfigForceFwdAsePilotOn,
       "opticalIfConfigXfpDecisionThres": opticalIfConfigXfpDecisionThres,
       "opticalIfConfigDisparityCorrection": opticalIfConfigDisparityCorrection,
       "opticalIfConfigPrbsPmReset": opticalIfConfigPrbsPmReset,
       "opticalIfConfigTestPrbsRcvMode": opticalIfConfigTestPrbsRcvMode,
       "opticalIfConfigTestPrbsTrmtMode": opticalIfConfigTestPrbsTrmtMode,
       "opticalIfConfigTributarySlotMethod": opticalIfConfigTributarySlotMethod,
       "opticalIfConfigLaserDelayTimer": opticalIfConfigLaserDelayTimer,
       "opticalIfConfigLaserOffTimer": opticalIfConfigLaserOffTimer,
       "opticalIfConfigLaserOnTimer": opticalIfConfigLaserOnTimer,
       "opticalIfConfigLaneChannelSetting": opticalIfConfigLaneChannelSetting,
       "opticalIfConfigBip": opticalIfConfigBip,
       "opticalIfConfigCodeGain": opticalIfConfigCodeGain,
       "opticalIfDataTable": opticalIfDataTable,
       "opticalIfDataEntry": opticalIfDataEntry,
       "opticalIfDataWdmChannel": opticalIfDataWdmChannel,
       "opticalIfDataWavelength": opticalIfDataWavelength,
       "opticalIfDataFiberType": opticalIfDataFiberType,
       "opticalIfDataLinkLength": opticalIfDataLinkLength,
       "opticalIfDataAlsHoldoff": opticalIfDataAlsHoldoff,
       "opticalIfDataLaserOffDelayTime": opticalIfDataLaserOffDelayTime,
       "opticalIfDataProtectionRole": opticalIfDataProtectionRole,
       "opticalIfDataChannelSpacing": opticalIfDataChannelSpacing,
       "opticalIfDataTunableLowestChannel": opticalIfDataTunableLowestChannel,
       "opticalIfDataTunableHighestChannel": opticalIfDataTunableHighestChannel,
       "opticalIfDataTransmitWavelength": opticalIfDataTransmitWavelength,
       "opticalIfDataFrequency": opticalIfDataFrequency,
       "opticalIfDataChannelsNumber": opticalIfDataChannelsNumber,
       "opticalIfDataFunction": opticalIfDataFunction,
       "opticalIfDataPortMode": opticalIfDataPortMode,
       "opticalIfDataPortRole": opticalIfDataPortRole,
       "opticalIfDataCirRcv": opticalIfDataCirRcv,
       "opticalIfDataCbsRcv": opticalIfDataCbsRcv,
       "opticalIfDataCirTrmt": opticalIfDataCirTrmt,
       "opticalIfDataCbsTrmt": opticalIfDataCbsTrmt,
       "opticalIfDataVethAid": opticalIfDataVethAid,
       "opticalIfDataLagPorts": opticalIfDataLagPorts,
       "opticalIfDataLagPortType": opticalIfDataLagPortType,
       "opticalIfDataLagStandby": opticalIfDataLagStandby,
       "opticalIfDataLacpMode": opticalIfDataLacpMode,
       "opticalIfDataLagKey": opticalIfDataLagKey,
       "opticalIfDataLagPortNo": opticalIfDataLagPortNo,
       "opticalIfDataLagState": opticalIfDataLagState,
       "opticalIfDataLagIdFend": opticalIfDataLagIdFend,
       "opticalIfDataLagFendState": opticalIfDataLagFendState,
       "opticalIfDataLagSysMac": opticalIfDataLagSysMac,
       "opticalIfDataLagSysIdFend": opticalIfDataLagSysIdFend,
       "opticalIfDataLagSysPrio": opticalIfDataLagSysPrio,
       "opticalIfDataBand": opticalIfDataBand,
       "opticalIfDataStuff": opticalIfDataStuff,
       "opticalIfDataChannelsProvision": opticalIfDataChannelsProvision,
       "opticalIfDataAutoPTassignment": opticalIfDataAutoPTassignment,
       "opticalIfDataTributaryFreeSlotNo": opticalIfDataTributaryFreeSlotNo,
       "opticalIfDataTributaryAssignedSlotNo": opticalIfDataTributaryAssignedSlotNo,
       "opticalIfDataOdtuType": opticalIfDataOdtuType,
       "opticalIfDataOduTribPortNo": opticalIfDataOduTribPortNo,
       "opticalIfDataOduTribTimeSlottNo": opticalIfDataOduTribTimeSlottNo,
       "opticalIfDataLaserDelayTimer": opticalIfDataLaserDelayTimer,
       "opticalIfDataLaneChannel1": opticalIfDataLaneChannel1,
       "opticalIfDataLaneChannel2": opticalIfDataLaneChannel2,
       "opticalIfDataLaneChannel3": opticalIfDataLaneChannel3,
       "opticalIfDataLaneChannel4": opticalIfDataLaneChannel4,
       "opticalIfDataReceiverWavelength": opticalIfDataReceiverWavelength,
       "opticalIfDataReceiverFrequency": opticalIfDataReceiverFrequency,
       "opticalIfDiagTable": opticalIfDiagTable,
       "opticalIfDiagEntry": opticalIfDiagEntry,
       "opticalIfDiagLaserBiasCurrentNormalized": opticalIfDiagLaserBiasCurrentNormalized,
       "opticalIfDiagLaserTemp": opticalIfDiagLaserTemp,
       "opticalIfDiagInputPower": opticalIfDiagInputPower,
       "opticalIfDiagOutputPower": opticalIfDiagOutputPower,
       "opticalIfDiagLaserBiasCurrentLevel": opticalIfDiagLaserBiasCurrentLevel,
       "opticalIfDiagPumpLaser1Temp": opticalIfDiagPumpLaser1Temp,
       "opticalIfDiagPumpLaser2Temp": opticalIfDiagPumpLaser2Temp,
       "opticalIfDiagPumpLaserBiasCurrent1": opticalIfDiagPumpLaserBiasCurrent1,
       "opticalIfDiagPumpLaserBiasCurrent2": opticalIfDiagPumpLaserBiasCurrent2,
       "opticalIfDiagAttenuationOfVoa": opticalIfDiagAttenuationOfVoa,
       "opticalIfDiagBackreflectionPowerReceived": opticalIfDiagBackreflectionPowerReceived,
       "opticalIfDiagOscGain": opticalIfDiagOscGain,
       "opticalIfDiagOscPowerReceived": opticalIfDiagOscPowerReceived,
       "opticalIfDiagRamanPumpPower": opticalIfDiagRamanPumpPower,
       "opticalIfDiagRamanEstSignalGain": opticalIfDiagRamanEstSignalGain,
       "opticalIfDiagChromaticDispersionCompensation": opticalIfDiagChromaticDispersionCompensation,
       "opticalIfDiagLinkAttenuation": opticalIfDiagLinkAttenuation,
       "opticalIfDiagPumpLaserBiasCurrent3": opticalIfDiagPumpLaserBiasCurrent3,
       "opticalIfDiagPumpLaser3Temp": opticalIfDiagPumpLaser3Temp,
       "opticalIfDiagLatency": opticalIfDiagLatency,
       "opticalIfDiagRoundTripDelay": opticalIfDiagRoundTripDelay,
       "opticalIfDiagOscOutputPower": opticalIfDiagOscOutputPower,
       "opticalIfDiagPumpLaser4Temp": opticalIfDiagPumpLaser4Temp,
       "opticalIfDiagPumpLaserBiasCurrent4": opticalIfDiagPumpLaserBiasCurrent4,
       "opticalIfDiagEstimatedChPwrRcv": opticalIfDiagEstimatedChPwrRcv,
       "opticalIfDiagLocalOscTemp": opticalIfDiagLocalOscTemp,
       "opticalIfDiagDifferentialGroupDelay": opticalIfDiagDifferentialGroupDelay,
       "opticalIfDiagChromaticDispersion": opticalIfDiagChromaticDispersion,
       "opticalIfDiagSignalToNoiseRatio": opticalIfDiagSignalToNoiseRatio,
       "opticalIfDiagCarrierFreqOffset": opticalIfDiagCarrierFreqOffset,
       "opticalIfDiagLocalOscBiasLevel": opticalIfDiagLocalOscBiasLevel,
       "opticalIfDiagPrbsElapsedTime": opticalIfDiagPrbsElapsedTime,
       "opticalIfDiagPrbsErrorFreeTime": opticalIfDiagPrbsErrorFreeTime,
       "opticalIfDiagPrbsAvgBER": opticalIfDiagPrbsAvgBER,
       "opticalIfDiagPrbsMaxBER": opticalIfDiagPrbsMaxBER,
       "opticalIfDiagLogicalLanesSkew": opticalIfDiagLogicalLanesSkew,
       "opticalIfDiagCurrentEdfaOpt": opticalIfDiagCurrentEdfaOpt,
       "opticalIfDiagTotalGainMeasurement": opticalIfDiagTotalGainMeasurement,
       "ethernetConfigTable": ethernetConfigTable,
       "ethernetConfigEntry": ethernetConfigEntry,
       "ethernetConfigAutoNegotiation": ethernetConfigAutoNegotiation,
       "ethernetConfigDuplexMode": ethernetConfigDuplexMode,
       "ethernetConfigBitrate": ethernetConfigBitrate,
       "ethernetConfigFlowControl": ethernetConfigFlowControl,
       "ethernetConfigIpType": ethernetConfigIpType,
       "ethernetConfigIpAddrMonitor": ethernetConfigIpAddrMonitor,
       "ethernetConfigIpMaskMonitor": ethernetConfigIpMaskMonitor,
       "ethernetConfigAreaId": ethernetConfigAreaId,
       "lanIpConfigTable": lanIpConfigTable,
       "lanIpConfigEntry": lanIpConfigEntry,
       "lanIpConfigIpAddr": lanIpConfigIpAddr,
       "lanIpConfigIpAddrMask": lanIpConfigIpAddrMask,
       "lanIpConfigPrio": lanIpConfigPrio,
       "lanIpConfigAuthType": lanIpConfigAuthType,
       "lanIpConfigAuthString": lanIpConfigAuthString,
       "ospfConfigTable": ospfConfigTable,
       "ospfConfigEntry": ospfConfigEntry,
       "ospfConfigOspf": ospfConfigOspf,
       "ospfConfigMetric": ospfConfigMetric,
       "ospfDataTable": ospfDataTable,
       "ospfDataEntry": ospfDataEntry,
       "ospfDataDesignatedRouter": ospfDataDesignatedRouter,
       "ospfDataBkupDesignatedRouter": ospfDataBkupDesignatedRouter,
       "pppfConfigTable": pppfConfigTable,
       "pppfConfigEntry": pppfConfigEntry,
       "pppfConfigBitrate": pppfConfigBitrate,
       "pppfConfigIpType": pppfConfigIpType,
       "pppfConfigDataLayerPmReset": pppfConfigDataLayerPmReset,
       "pppfConfigAreaId": pppfConfigAreaId,
       "pppfConfigBaud": pppfConfigBaud,
       "pppfConfigAlias": pppfConfigAlias,
       "pppfConfigAuthType": pppfConfigAuthType,
       "pppfConfigAuthString": pppfConfigAuthString,
       "pppDataTable": pppDataTable,
       "pppDataEntry": pppDataEntry,
       "pppDataNearEndIp": pppDataNearEndIp,
       "pppDataFarEndIp": pppDataFarEndIp,
       "pppDataEccInstance": pppDataEccInstance,
       "pppDataNearEndIpMonitor": pppDataNearEndIpMonitor,
       "pppDataProxyArp": pppDataProxyArp,
       "crsDcnDataTable": crsDcnDataTable,
       "crsDcnDataEntry": crsDcnDataEntry,
       "crsDcnDataPppInstance": crsDcnDataPppInstance,
       "crsDcnDataEccInstance": crsDcnDataEccInstance,
       "eocDataTable": eocDataTable,
       "eocDataEntry": eocDataEntry,
       "eocDataProtAvailability": eocDataProtAvailability,
       "eocDataIpEntity": eocDataIpEntity,
       "eocDataMaxDataRate": eocDataMaxDataRate,
       "eocDataConnectionType": eocDataConnectionType,
       "eocDataProtectionRole": eocDataProtectionRole,
       "opticalIfOlmTable": opticalIfOlmTable,
       "opticalIfOlmEntry": opticalIfOlmEntry,
       "opticalIfOlmRxLineAttenuation": opticalIfOlmRxLineAttenuation,
       "opticalIfOlmTxLineAttenuation": opticalIfOlmTxLineAttenuation,
       "opticalIfOlmFarEndSigDegThres": opticalIfOlmFarEndSigDegThres,
       "opticalAmplifierInterfaceDiagnosticsTable": opticalAmplifierInterfaceDiagnosticsTable,
       "opticalAmplifierInterfaceDiagnosticsEntry": opticalAmplifierInterfaceDiagnosticsEntry,
       "opticalAmplifierInterfaceDiagnosticsOperatingHours": opticalAmplifierInterfaceDiagnosticsOperatingHours,
       "opticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage": opticalAmplifierInterfaceDiagnosticsLaserBiasCurrentLevelAverage,
       "opticalAmplifierInterfaceDiagnosticsAttenuation": opticalAmplifierInterfaceDiagnosticsAttenuation,
       "opticalAmplifierInterfaceDiagnosticsAttenuationVoa": opticalAmplifierInterfaceDiagnosticsAttenuationVoa,
       "opticalAmplifierInterfaceDiagnosticsSubTemp": opticalAmplifierInterfaceDiagnosticsSubTemp,
       "opticalAmplifierInterfaceDiagnosticsUpperSubTempThres": opticalAmplifierInterfaceDiagnosticsUpperSubTempThres,
       "ethernetDataTable": ethernetDataTable,
       "ethernetDataEntry": ethernetDataEntry,
       "ethernetDataMonitoredDuplexMode": ethernetDataMonitoredDuplexMode,
       "ethernetDataMonitoredBitrate": ethernetDataMonitoredBitrate,
       "ethernetDataType": ethernetDataType,
       "ethernetDataValidSignalTimer": ethernetDataValidSignalTimer,
       "opticalFilterIfDataTable": opticalFilterIfDataTable,
       "opticalFilterIfDataEntry": opticalFilterIfDataEntry,
       "opticalFilterIfDataMultiplexLevel": opticalFilterIfDataMultiplexLevel,
       "apsProtFacilityConfigCapTable": apsProtFacilityConfigCapTable,
       "apsProtFacilityConfigCapEntry": apsProtFacilityConfigCapEntry,
       "apsProtFacilityConfigCapSwitchCommand": apsProtFacilityConfigCapSwitchCommand,
       "apsProtFacilityConfigCapInhibitSwitchToProt": apsProtFacilityConfigCapInhibitSwitchToProt,
       "apsProtFacilityConfigCapInhibitSwitchToWork": apsProtFacilityConfigCapInhibitSwitchToWork,
       "interfaceConfigCapTable": interfaceConfigCapTable,
       "interfaceConfigCapEntry": interfaceConfigCapEntry,
       "interfaceConfigCapLoopConfig": interfaceConfigCapLoopConfig,
       "interfaceConfigCapDataLayerPmReset": interfaceConfigCapDataLayerPmReset,
       "interfaceConfigCapEqlzAdmin": interfaceConfigCapEqlzAdmin,
       "interfaceConfigCapDispertionConfig": interfaceConfigCapDispertionConfig,
       "interfaceConfigCapTurnupConfig": interfaceConfigCapTurnupConfig,
       "interfaceConfigCapInitiateEqualization": interfaceConfigCapInitiateEqualization,
       "interfaceConfigCapBehaviour": interfaceConfigCapBehaviour,
       "interfaceConfigCapInitiateRamanEqualization": interfaceConfigCapInitiateRamanEqualization,
       "interfaceConfigCapSigDegPcslThreshold": interfaceConfigCapSigDegPcslThreshold,
       "opticalIfConfigCapTable": opticalIfConfigCapTable,
       "opticalIfConfigCapEntry": opticalIfConfigCapEntry,
       "opticalIfConfigCapForceLaserOn": opticalIfConfigCapForceLaserOn,
       "opticalIfConfigCapLossAttenuation": opticalIfConfigCapLossAttenuation,
       "opticalIfConfigCapWdmRxChannel": opticalIfConfigCapWdmRxChannel,
       "opticalIfConfigCapSigDegThresSonetSection": opticalIfConfigCapSigDegThresSonetSection,
       "opticalIfConfigCapDispersionMode": opticalIfConfigCapDispersionMode,
       "opticalIfConfigCapAutoThresReset": opticalIfConfigCapAutoThresReset,
       "opticalIfConfigCapAseTabCreation": opticalIfConfigCapAseTabCreation,
       "opticalIfConfigCapUtag": opticalIfConfigCapUtag,
       "opticalIfConfigCapCac": opticalIfConfigCapCac,
       "opticalIfConfigCapLagLoadBallanceSource": opticalIfConfigCapLagLoadBallanceSource,
       "opticalIfConfigCapLacpTimeout": opticalIfConfigCapLacpTimeout,
       "opticalIfConfigCapFarEndCommunication": opticalIfConfigCapFarEndCommunication,
       "opticalIfConfigCapLacpMode": opticalIfConfigCapLacpMode,
       "opticalIfConfigCapTxOffDelay": opticalIfConfigCapTxOffDelay,
       "opticalIfConfigCapOpuPayloadType": opticalIfConfigCapOpuPayloadType,
       "opticalIfConfigCapOpticalSetPoint": opticalIfConfigCapOpticalSetPoint,
       "opticalIfConfigCapTransmitChannel": opticalIfConfigCapTransmitChannel,
       "opticalIfConfigCapFiberBrand": opticalIfConfigCapFiberBrand,
       "opticalIfConfigCapTiltSet": opticalIfConfigCapTiltSet,
       "opticalIfConfigCapForceFwdAsePilotOn": opticalIfConfigCapForceFwdAsePilotOn,
       "opticalIfConfigCapXfpDecisionThres": opticalIfConfigCapXfpDecisionThres,
       "opticalIfConfigCapPrbsPmReset": opticalIfConfigCapPrbsPmReset,
       "opticalIfConfigCapTestPrbsRcvMode": opticalIfConfigCapTestPrbsRcvMode,
       "opticalIfConfigCapTestPrbsTrmtMode": opticalIfConfigCapTestPrbsTrmtMode,
       "opticalIfConfigCapTributarySlotMethod": opticalIfConfigCapTributarySlotMethod,
       "opticalIfConfigCapOffset": opticalIfConfigCapOffset,
       "opticalIfConfigCapTilt": opticalIfConfigCapTilt,
       "opticalIfConfigCapLaserDelayTimer": opticalIfConfigCapLaserDelayTimer,
       "opticalIfConfigCapLaserOffTimer": opticalIfConfigCapLaserOffTimer,
       "opticalIfConfigCapLaserOnTimer": opticalIfConfigCapLaserOnTimer,
       "opticalIfConfigCapLaneChannelSetting": opticalIfConfigCapLaneChannelSetting,
       "opticalIfConfigCapBip": opticalIfConfigCapBip,
       "opticalIfConfigCapCodeGain": opticalIfConfigCapCodeGain,
       "eroadmIfDiagnosticsTable": eroadmIfDiagnosticsTable,
       "eroadmIfDiagnosticsEntry": eroadmIfDiagnosticsEntry,
       "eroadmIfDiagnosticsAttenuationVoa": eroadmIfDiagnosticsAttenuationVoa,
       "eroadmIfDiagnosticsOutputPower": eroadmIfDiagnosticsOutputPower,
       "tifiConfigTable": tifiConfigTable,
       "tifiConfigEntry": tifiConfigEntry,
       "tifiConfigInvertTifInputLogic": tifiConfigInvertTifInputLogic,
       "tifiConfigTifAlarmType": tifiConfigTifAlarmType,
       "tifiConfigTifAlarmMessage": tifiConfigTifAlarmMessage,
       "tifiDataTable": tifiDataTable,
       "tifiDataEntry": tifiDataEntry,
       "tifiDataTifAlarmType": tifiDataTifAlarmType,
       "tifiDataTifAlarmMessage": tifiDataTifAlarmMessage,
       "tifoDataTable": tifoDataTable,
       "tifoDataEntry": tifoDataEntry,
       "tifoDataTelemetry": tifoDataTelemetry,
       "tifoConfigTable": tifoConfigTable,
       "tifoConfigEntry": tifoConfigEntry,
       "tifoConfigTelemetry": tifoConfigTelemetry,
       "opticalLinkConfigTable": opticalLinkConfigTable,
       "opticalLinkConfigEntry": opticalLinkConfigEntry,
       "opticalLinkConfigTxLineAttenuation": opticalLinkConfigTxLineAttenuation,
       "opticalLinkConfigRxLineAttenuation": opticalLinkConfigRxLineAttenuation,
       "opticalLinkConfigFarEndLocation": opticalLinkConfigFarEndLocation,
       "opticalLinkDataTable": opticalLinkDataTable,
       "opticalLinkDataEntry": opticalLinkDataEntry,
       "opticalLinkDataLogicalInterfaceAid": opticalLinkDataLogicalInterfaceAid,
       "virtualOpticalChannelConfigTable": virtualOpticalChannelConfigTable,
       "virtualOpticalChannelConfigEntry": virtualOpticalChannelConfigEntry,
       "virtualOpticalChannelConfigAlias": virtualOpticalChannelConfigAlias,
       "virtualOpticalChannelDataTable": virtualOpticalChannelDataTable,
       "virtualOpticalChannelDataEntry": virtualOpticalChannelDataEntry,
       "virtualOpticalChannelDataTransmitWavelength": virtualOpticalChannelDataTransmitWavelength,
       "virtualOpticalChannelDataTransmitFrequency": virtualOpticalChannelDataTransmitFrequency,
       "virtualOpticalChannelDataTransmitChannel": virtualOpticalChannelDataTransmitChannel,
       "virtualOpticalChannelDataConnectState": virtualOpticalChannelDataConnectState,
       "virtualOpticalChannelDataOwnerAid": virtualOpticalChannelDataOwnerAid,
       "logicalIfConfigTable": logicalIfConfigTable,
       "logicalIfConfigEntry": logicalIfConfigEntry,
       "logicalIfConfigAlias": logicalIfConfigAlias,
       "logicalIfConfigAreaId": logicalIfConfigAreaId,
       "logicalIfConfigMetric": logicalIfConfigMetric,
       "logicalIfConfigHelloInterval": logicalIfConfigHelloInterval,
       "logicalIfConfigDeadInterval": logicalIfConfigDeadInterval,
       "logicalIfConfigPrio": logicalIfConfigPrio,
       "logicalIfConfigRetransmitInterval": logicalIfConfigRetransmitInterval,
       "logicalIfConfigAuthType": logicalIfConfigAuthType,
       "logicalIfConfigAuthString": logicalIfConfigAuthString,
       "logicalIfConfigOspf": logicalIfConfigOspf,
       "logicalIfConfigPushedNearEndIpHeader": logicalIfConfigPushedNearEndIpHeader,
       "logicalIfConfigPushedFarEndIpHeader": logicalIfConfigPushedFarEndIpHeader,
       "logicalIfConfigTimeToLive": logicalIfConfigTimeToLive,
       "logicalIfDataTable": logicalIfDataTable,
       "logicalIfDataEntry": logicalIfDataEntry,
       "logicalIfDataFacilityType": logicalIfDataFacilityType,
       "logicalIfDataLanLinkAid": logicalIfDataLanLinkAid,
       "logicalIfDataLogicalInterfaceId": logicalIfDataLogicalInterfaceId,
       "logicalIfDataOspf": logicalIfDataOspf,
       "logicalIfDataDcnAid": logicalIfDataDcnAid,
       "logicalIfDataLanLinkAidDerived": logicalIfDataLanLinkAidDerived,
       "logicalIfDataIpType": logicalIfDataIpType,
       "logicalIfDataIpAddr": logicalIfDataIpAddr,
       "logicalIfDataIpAddrMonitor": logicalIfDataIpAddrMonitor,
       "logicalIfDataIpMask": logicalIfDataIpMask,
       "logicalIfDataIpMaskMonitor": logicalIfDataIpMaskMonitor,
       "logicalIfDataEncapsulation": logicalIfDataEncapsulation,
       "ptpEntityDataTable": ptpEntityDataTable,
       "ptpEntityDataEntry": ptpEntityDataEntry,
       "ptpEntityDataConnEqptState": ptpEntityDataConnEqptState,
       "ptpEntityDataChannelProvision": ptpEntityDataChannelProvision,
       "ptpEntityDataLambda": ptpEntityDataLambda,
       "ptpEntityDataFrequency": ptpEntityDataFrequency,
       "ptpEntityDataReach": ptpEntityDataReach,
       "ptpEntityDataBandProvision": ptpEntityDataBandProvision,
       "ptpEntityDataSubBandProvision": ptpEntityDataSubBandProvision,
       "ptpEntityDataGroupProvision": ptpEntityDataGroupProvision,
       "ptpEntityDataSfProvision": ptpEntityDataSfProvision,
       "ptpEntityDataConnector": ptpEntityDataConnector,
       "ptpEntityDataFiber": ptpEntityDataFiber,
       "ptpEntityDataDirection": ptpEntityDataDirection,
       "ptpEntityDataLevel": ptpEntityDataLevel,
       "ptpEntityDataFunction": ptpEntityDataFunction,
       "ptpEntityDataPartnerAid": ptpEntityDataPartnerAid,
       "ptpEntityDataTerminationType": ptpEntityDataTerminationType,
       "ptpEntityDataValidSignalTimer": ptpEntityDataValidSignalTimer,
       "ptpEntityDataConnectionType": ptpEntityDataConnectionType,
       "ptpEntityDataOutputPower": ptpEntityDataOutputPower,
       "ptpEntityDataInputPower": ptpEntityDataInputPower,
       "ptpEntityDataFiberConnAttenuation": ptpEntityDataFiberConnAttenuation,
       "ptpEntityDataFiberDetectStatus": ptpEntityDataFiberDetectStatus,
       "farEndIfDiagnosticsTable": farEndIfDiagnosticsTable,
       "farEndIfDiagnosticsEntry": farEndIfDiagnosticsEntry,
       "farEndIfDiagnosticsLaserBiasCurrentLevel": farEndIfDiagnosticsLaserBiasCurrentLevel,
       "farEndIfDiagnosticsInputPower": farEndIfDiagnosticsInputPower,
       "farEndIfDiagnosticsOutputPower": farEndIfDiagnosticsOutputPower,
       "farEndIfConfigTable": farEndIfConfigTable,
       "farEndIfConfigEntry": farEndIfConfigEntry,
       "farEndIfConfigAlias": farEndIfConfigAlias,
       "farEndIfConfigLoopConfig": farEndIfConfigLoopConfig,
       "farEndIfConfigCapTable": farEndIfConfigCapTable,
       "farEndIfConfigCapEntry": farEndIfConfigCapEntry,
       "farEndIfConfigCapLoopConfig": farEndIfConfigCapLoopConfig,
       "farEndIfDataTable": farEndIfDataTable,
       "farEndIfDataEntry": farEndIfDataEntry,
       "farEndIfDataType": farEndIfDataType,
       "farEndIfDataTransmitChannel": farEndIfDataTransmitChannel,
       "farEndIfDataTransmitWavelength": farEndIfDataTransmitWavelength,
       "farEndIfDataTransmitFrequency": farEndIfDataTransmitFrequency,
       "farEndIfDataReach": farEndIfDataReach,
       "farEndIfDataConnector": farEndIfDataConnector,
       "farEndIfDataFiberType": farEndIfDataFiberType,
       "farEndIfDataConnectionType": farEndIfDataConnectionType,
       "farEndIfDataAdmin": farEndIfDataAdmin,
       "interfaceConfigExternalVidCapsTable": interfaceConfigExternalVidCapsTable,
       "interfaceConfigExternalVidCapsEntry": interfaceConfigExternalVidCapsEntry,
       "interfaceConfigExternalVidCapsStringCap": interfaceConfigExternalVidCapsStringCap,
       "interfaceConfigLanAidCapsTable": interfaceConfigLanAidCapsTable,
       "interfaceConfigLanAidCapsEntry": interfaceConfigLanAidCapsEntry,
       "interfaceConfigLanAidCapsIndex": interfaceConfigLanAidCapsIndex,
       "neighborDiscoveryDataTable": neighborDiscoveryDataTable,
       "neighborDiscoveryDataEntry": neighborDiscoveryDataEntry,
       "neighborDiscoveryDataFarEndIp": neighborDiscoveryDataFarEndIp,
       "neighborDiscoveryDataFarEndPort": neighborDiscoveryDataFarEndPort,
       "neighborDiscoveryDataFarEndTid": neighborDiscoveryDataFarEndTid,
       "neighborDiscoveryDataFarEndTranLayerTermPoint": neighborDiscoveryDataFarEndTranLayerTermPoint,
       "neighborDiscoveryDataFarEndPortAid": neighborDiscoveryDataFarEndPortAid,
       "neighborDiscoveryDataFarEndTranLayerTermPointAid": neighborDiscoveryDataFarEndTranLayerTermPointAid,
       "exChannelConfigTable": exChannelConfigTable,
       "exChannelConfigEntry": exChannelConfigEntry,
       "exChannelConfigAlias": exChannelConfigAlias,
       "exChannelConfigFarEndLocation": exChannelConfigFarEndLocation,
       "exChannelConfigBitrate": exChannelConfigBitrate,
       "exChannelConfigFecType": exChannelConfigFecType,
       "exChannelConfigLineCoding": exChannelConfigLineCoding,
       "exChannelConfigFrameFormat": exChannelConfigFrameFormat,
       "exChannelConfigOpticalPowerTx": exChannelConfigOpticalPowerTx,
       "exChannelConfigOSNRTransmit": exChannelConfigOSNRTransmit,
       "exChannelConfigPMDTransmit": exChannelConfigPMDTransmit,
       "exChannelConfigChromaticDispersionTx": exChannelConfigChromaticDispersionTx,
       "exChannelConfigMinimumOSNRRcv": exChannelConfigMinimumOSNRRcv,
       "exChannelConfigMinimumOpticalPowerRcv": exChannelConfigMinimumOpticalPowerRcv,
       "exChannelConfigMaximumOpticalPowerRcv": exChannelConfigMaximumOpticalPowerRcv,
       "exChannelConfigMaximumPMDRcv": exChannelConfigMaximumPMDRcv,
       "exChannelConfigChromaticDispersionRcv": exChannelConfigChromaticDispersionRcv,
       "exChannelConfigMaxBitErrorRate": exChannelConfigMaxBitErrorRate,
       "exChannelConfigMinChromaticDispersionRcv": exChannelConfigMinChromaticDispersionRcv,
       "exChannelConfigMaxChromaticDispersionRcv": exChannelConfigMaxChromaticDispersionRcv,
       "exChannelDataTable": exChannelDataTable,
       "exChannelDataEntry": exChannelDataEntry,
       "exChannelDataType": exChannelDataType,
       "exChannelDataTransmitChannel": exChannelDataTransmitChannel,
       "exChannelDataChannelBandwidth": exChannelDataChannelBandwidth,
       "exChannelDataConnectionState": exChannelDataConnectionState,
       "vtpEntityDataTable": vtpEntityDataTable,
       "vtpEntityDataEntry": vtpEntityDataEntry,
       "vtpEntityDataConnEqptState": vtpEntityDataConnEqptState,
       "vtpEntityDataChannelProvision": vtpEntityDataChannelProvision,
       "vtpEntityDataLambda": vtpEntityDataLambda,
       "vtpEntityDataFrequency": vtpEntityDataFrequency,
       "vtpEntityDataReach": vtpEntityDataReach,
       "vtpEntityDataBandProvision": vtpEntityDataBandProvision,
       "vtpEntityDataSubBandProvision": vtpEntityDataSubBandProvision,
       "vtpEntityDataGroupProvision": vtpEntityDataGroupProvision,
       "vtpEntityDataSfProvision": vtpEntityDataSfProvision,
       "vtpEntityDataConnector": vtpEntityDataConnector,
       "vtpEntityDataFiber": vtpEntityDataFiber,
       "vtpEntityDataDirection": vtpEntityDataDirection,
       "vtpEntityDataLevel": vtpEntityDataLevel,
       "vtpEntityDataFunction": vtpEntityDataFunction,
       "ptpEntityConfigTable": ptpEntityConfigTable,
       "ptpEntityConfigEntry": ptpEntityConfigEntry,
       "ptpEntityConfigAlias": ptpEntityConfigAlias,
       "ptpEntityConfigFiberDetect": ptpEntityConfigFiberDetect,
       "ptpEntityConfigCapTable": ptpEntityConfigCapTable,
       "ptpEntityConfigCapEntry": ptpEntityConfigCapEntry,
       "ptpEntityConfigCapFiberDetect": ptpEntityConfigCapFiberDetect,
       "superChannelDataTable": superChannelDataTable,
       "superChannelDataEntry": superChannelDataEntry,
       "superChannelDataChannelSpacing": superChannelDataChannelSpacing,
       "superChannelDataChannelBandwith": superChannelDataChannelBandwith,
       "superChannelDataLaneChannel1": superChannelDataLaneChannel1,
       "superChannelDataLaneChannel2": superChannelDataLaneChannel2,
       "superChannelDataLaneChannel3": superChannelDataLaneChannel3,
       "superChannelDataLaneChannel4": superChannelDataLaneChannel4,
       "superChannelDataFacilities": superChannelDataFacilities,
       "superChannelDataConnectionState": superChannelDataConnectionState,
       "superChannelDataLanes": superChannelDataLanes,
       "superChannelDataFacilitiesIndexes": superChannelDataFacilitiesIndexes,
       "superChannelConfigTable": superChannelConfigTable,
       "superChannelConfigEntry": superChannelConfigEntry,
       "superChannelConfigEqlzAdmin": superChannelConfigEqlzAdmin,
       "superChannelConfigAlias": superChannelConfigAlias,
       "superChannelConfigInitiateEqualization": superChannelConfigInitiateEqualization,
       "superChannelConfigCapTable": superChannelConfigCapTable,
       "superChannelConfigCapEntry": superChannelConfigCapEntry,
       "superChannelConfigCapEqlzAdmin": superChannelConfigCapEqlzAdmin,
       "superChannelConfigCapInitiateEqualization": superChannelConfigCapInitiateEqualization,
       "serviceConfigAndStatus": serviceConfigAndStatus,
       "gfpServiceConfigAndStatus": gfpServiceConfigAndStatus,
       "vc4allocatedTable": vc4allocatedTable,
       "vc4allocatedEntry": vc4allocatedEntry,
       "vc4allocatedContainer": vc4allocatedContainer,
       "vc4allocatedClassInstanceNumber": vc4allocatedClassInstanceNumber,
       "vc4allocatedSequenceNumber": vc4allocatedSequenceNumber,
       "vc3allocatedTable": vc3allocatedTable,
       "vc3allocatedEntry": vc3allocatedEntry,
       "vc3allocatedContainer": vc3allocatedContainer,
       "vc3allocatedClassInstanceNumber": vc3allocatedClassInstanceNumber,
       "vc3allocatedSequenceNumber": vc3allocatedSequenceNumber,
       "sts1allocatedTable": sts1allocatedTable,
       "sts1allocatedEntry": sts1allocatedEntry,
       "sts1allocatedContainer": sts1allocatedContainer,
       "sts1allocatedClassInstanceNumber": sts1allocatedClassInstanceNumber,
       "sts1allocatedSequenceNumber": sts1allocatedSequenceNumber,
       "vchConfigTable": vchConfigTable,
       "vchConfigEntry": vchConfigEntry,
       "vchConfigBundle": vchConfigBundle,
       "vchConfigCir": vchConfigCir,
       "vchDataTable": vchDataTable,
       "vchDataEntry": vchDataEntry,
       "vchDataVcType": vchDataVcType,
       "vchDataOpuPayloadType": vchDataOpuPayloadType,
       "vchDataOwnerAid": vchDataOwnerAid,
       "gfpServiceDefTable": gfpServiceDefTable,
       "gfpServiceDefEntry": gfpServiceDefEntry,
       "gfpServiceDefBundleAllocation": gfpServiceDefBundleAllocation,
       "gfpServiceDefBandwidth": gfpServiceDefBandwidth,
       "gfpServiceDefVcType": gfpServiceDefVcType,
       "sts3callocatedTable": sts3callocatedTable,
       "sts3callocatedEntry": sts3callocatedEntry,
       "sts3callocatedContainer": sts3callocatedContainer,
       "sts3callocatedClassInstanceNumber": sts3callocatedClassInstanceNumber,
       "sts3callocatedSequenceNumber": sts3callocatedSequenceNumber,
       "vs1allocatedTable": vs1allocatedTable,
       "vs1allocatedEntry": vs1allocatedEntry,
       "vs1allocatedContainer": vs1allocatedContainer,
       "vs1allocatedClassInstanceNumber": vs1allocatedClassInstanceNumber,
       "vs1allocatedSequenceNumber": vs1allocatedSequenceNumber,
       "vs1allocatedFacilityType": vs1allocatedFacilityType,
       "sts24callocatedTable": sts24callocatedTable,
       "sts24callocatedEntry": sts24callocatedEntry,
       "sts24callocatedContainer": sts24callocatedContainer,
       "sts24callocatedClassInstanceNumber": sts24callocatedClassInstanceNumber,
       "sts24callocatedSequenceNumber": sts24callocatedSequenceNumber,
       "sts24callocatedFacilityType": sts24callocatedFacilityType,
       "sts48callocatedTable": sts48callocatedTable,
       "sts48callocatedEntry": sts48callocatedEntry,
       "sts48callocatedContainer": sts48callocatedContainer,
       "sts48callocatedClassInstanceNumber": sts48callocatedClassInstanceNumber,
       "sts48callocatedSequenceNumber": sts48callocatedSequenceNumber,
       "sts48callocatedFacilityType": sts48callocatedFacilityType,
       "vc4c8allocatedTable": vc4c8allocatedTable,
       "vc4c8allocatedEntry": vc4c8allocatedEntry,
       "vc4c8allocatedContainer": vc4c8allocatedContainer,
       "vc4c8allocatedClassInstanceNumber": vc4c8allocatedClassInstanceNumber,
       "vc4c8allocatedSequenceNumber": vc4c8allocatedSequenceNumber,
       "vc4c8allocatedFacilityType": vc4c8allocatedFacilityType,
       "vs0allocatedTable": vs0allocatedTable,
       "vs0allocatedEntry": vs0allocatedEntry,
       "vs0allocatedContainer": vs0allocatedContainer,
       "vs0allocatedClassInstanceNumber": vs0allocatedClassInstanceNumber,
       "vs0allocatedFacilityType": vs0allocatedFacilityType,
       "vc4c16allocatedTable": vc4c16allocatedTable,
       "vc4c16allocatedEntry": vc4c16allocatedEntry,
       "vc4c16allocatedContainer": vc4c16allocatedContainer,
       "vc4c16allocatedClassInstanceNumber": vc4c16allocatedClassInstanceNumber,
       "vc4c16allocatedFacilityType": vc4c16allocatedFacilityType,
       "connectionConfigAndStatus": connectionConfigAndStatus,
       "intraNeConnectionsLastChanged": intraNeConnectionsLastChanged,
       "intraNeConnectionsTable": intraNeConnectionsTable,
       "intraNeConnectionsEntry": intraNeConnectionsEntry,
       "intraNeConnectionsType": intraNeConnectionsType,
       "intraNeConnectionsEndpointA": intraNeConnectionsEndpointA,
       "intraNeConnectionsEndpointB": intraNeConnectionsEndpointB,
       "intraNeConnectionsState": intraNeConnectionsState,
       "crsConnConfigTable": crsConnConfigTable,
       "crsConnConfigEntry": crsConnConfigEntry,
       "crsConnConfigAlias": crsConnConfigAlias,
       "crsConnConfigRedLineState": crsConnConfigRedLineState,
       "crsConnConfigType": crsConnConfigType,
       "crsConnConfigPathNode": crsConnConfigPathNode,
       "crsConnConfigTunnelAid": crsConnConfigTunnelAid,
       "crsConnDataTable": crsConnDataTable,
       "crsConnDataEntry": crsConnDataEntry,
       "crsConnDataCrsType": crsConnDataCrsType,
       "crsConnDataType": crsConnDataType,
       "crsConnDataConn": crsConnDataConn,
       "crsConnDataCrsFunction": crsConnDataCrsFunction,
       "crsConnDataOper": crsConnDataOper,
       "crsConnDataEntityOutage": crsConnDataEntityOutage,
       "crsConnDataTunnelId": crsConnDataTunnelId,
       "crsConnDataTunnelAid": crsConnDataTunnelAid,
       "crsConnDataIngressTid": crsConnDataIngressTid,
       "crsConnDataIngressNodeIp": crsConnDataIngressNodeIp,
       "crsConnDataChannelSpacing": crsConnDataChannelSpacing,
       "crsConnWdmConfigTable": crsConnWdmConfigTable,
       "crsConnWdmConfigEntry": crsConnWdmConfigEntry,
       "crsConnWdmConfigAlias": crsConnWdmConfigAlias,
       "crsConnWdmConfigRedLineState": crsConnWdmConfigRedLineState,
       "crsConnWdmConfigType": crsConnWdmConfigType,
       "crsConnWdmConfigTunnelAid": crsConnWdmConfigTunnelAid,
       "crsConnWdmConfigPathNode": crsConnWdmConfigPathNode,
       "crsConnWdmDataTable": crsConnWdmDataTable,
       "crsConnWdmDataEntry": crsConnWdmDataEntry,
       "crsConnWdmDataCrsType": crsConnWdmDataCrsType,
       "crsConnWdmDataType": crsConnWdmDataType,
       "crsConnWdmDataConn": crsConnWdmDataConn,
       "crsConnWdmDataCrsFunction": crsConnWdmDataCrsFunction,
       "crsConnWdmDataOper": crsConnWdmDataOper,
       "crsConnWdmDataEntityOutage": crsConnWdmDataEntityOutage,
       "crsConnWdmDataTunnelAid": crsConnWdmDataTunnelAid,
       "crsConnWdmDataIngressTid": crsConnWdmDataIngressTid,
       "crsConnWdmDataIngressNodeIp": crsConnWdmDataIngressNodeIp,
       "crsConnWdmDataChannelSpacing": crsConnWdmDataChannelSpacing,
       "physicalTerminationPointTable": physicalTerminationPointTable,
       "physicalTerminationPointEntry": physicalTerminationPointEntry,
       "physicalTerminationPointIndex": physicalTerminationPointIndex,
       "systemConfigAndStatus": systemConfigAndStatus,
       "controlPlaneConfigAndStatus": controlPlaneConfigAndStatus,
       "controlPlaneWdmConfigTable": controlPlaneWdmConfigTable,
       "controlPlaneWdmConfigEntry": controlPlaneWdmConfigEntry,
       "controlPlaneWdmConfigCtmConfigFlag": controlPlaneWdmConfigCtmConfigFlag,
       "controlPlaneWdmConfigCtmTraceDetail": controlPlaneWdmConfigCtmTraceDetail,
       "controlPlaneWdmConfigCtmSetupTimeout": controlPlaneWdmConfigCtmSetupTimeout,
       "controlPlaneWdmConfigCtmShutdownTimeout": controlPlaneWdmConfigCtmShutdownTimeout,
       "controlPlaneWdmConfigCtmRetryWait": controlPlaneWdmConfigCtmRetryWait,
       "controlPlaneWdmConfigCtmRetryWaitMultiplier": controlPlaneWdmConfigCtmRetryWaitMultiplier,
       "controlPlaneWdmConfigCtmMaximumRetryWait": controlPlaneWdmConfigCtmMaximumRetryWait,
       "controlPlaneWdmConfigCtmMaximumRetryNumber": controlPlaneWdmConfigCtmMaximumRetryNumber,
       "controlPlaneWdmConfigRaConfigFlag": controlPlaneWdmConfigRaConfigFlag,
       "controlPlaneWdmConfigRaTraceDetail": controlPlaneWdmConfigRaTraceDetail,
       "controlPlaneWdmConfigRaAlarmActivationTime": controlPlaneWdmConfigRaAlarmActivationTime,
       "controlPlaneWdmConfigCmConfigFlag": controlPlaneWdmConfigCmConfigFlag,
       "controlPlaneWdmConfigCmTraceDetail": controlPlaneWdmConfigCmTraceDetail,
       "controlPlaneWdmConfigCmAlarmActivationTime": controlPlaneWdmConfigCmAlarmActivationTime,
       "controlPlaneWdmConfigCmFisFrsTimeout": controlPlaneWdmConfigCmFisFrsTimeout,
       "controlPlaneWdmConfigCmCrankBackTimeout": controlPlaneWdmConfigCmCrankBackTimeout,
       "controlPlaneWdmConfigCdbConfigFlag": controlPlaneWdmConfigCdbConfigFlag,
       "controlPlaneWdmConfigCdbDetail": controlPlaneWdmConfigCdbDetail,
       "controlPlaneWdmConfigCdbMaxSize": controlPlaneWdmConfigCdbMaxSize,
       "controlPlaneWdmConfigRsvpConfigFlag": controlPlaneWdmConfigRsvpConfigFlag,
       "controlPlaneWdmConfigRsvpMaxExpRestartTime": controlPlaneWdmConfigRsvpMaxExpRestartTime,
       "controlPlaneWdmConfigRsvpMaxExpRecoveryTime": controlPlaneWdmConfigRsvpMaxExpRecoveryTime,
       "controlPlaneWdmConfigTedbConfigFlag": controlPlaneWdmConfigTedbConfigFlag,
       "controlPlaneWdmConfigTedbTraceDetail": controlPlaneWdmConfigTedbTraceDetail,
       "controlPlaneWdmConfigTedbMaxSize": controlPlaneWdmConfigTedbMaxSize,
       "controlPlaneWdmConfigTedbRouterId": controlPlaneWdmConfigTedbRouterId,
       "controlPlaneWdmConfigTedbMinAdvertWait": controlPlaneWdmConfigTedbMinAdvertWait,
       "controlPlaneWdmConfigNaasConfigFlag": controlPlaneWdmConfigNaasConfigFlag,
       "controlPlaneWdmConfigNaasTraceDetail": controlPlaneWdmConfigNaasTraceDetail,
       "controlPlaneWdmConfigNaasMaxSize": controlPlaneWdmConfigNaasMaxSize,
       "controlPlaneWdmConfigNaasAdvertWait": controlPlaneWdmConfigNaasAdvertWait,
       "controlPlaneWdmConfigPcConfigFlag": controlPlaneWdmConfigPcConfigFlag,
       "controlPlaneWdmConfigPcTraceDetail": controlPlaneWdmConfigPcTraceDetail,
       "controlPlaneWdmConfigCdConfigFlag": controlPlaneWdmConfigCdConfigFlag,
       "controlPlaneWdmConfigCdTraceDetail": controlPlaneWdmConfigCdTraceDetail,
       "controlPlaneWdmConfigCdResyncTimeout": controlPlaneWdmConfigCdResyncTimeout,
       "controlPlaneWdmConfigRmConfigFlag": controlPlaneWdmConfigRmConfigFlag,
       "controlPlaneWdmConfigRmTraceDetail": controlPlaneWdmConfigRmTraceDetail,
       "controlPlaneWdmConfigRmTraceTarget": controlPlaneWdmConfigRmTraceTarget,
       "controlPlaneWdmConfigWaitToRestore": controlPlaneWdmConfigWaitToRestore,
       "controlPlaneWdmDataTable": controlPlaneWdmDataTable,
       "controlPlaneWdmDataEntry": controlPlaneWdmDataEntry,
       "controlPlaneWdmDataCtmAlias": controlPlaneWdmDataCtmAlias,
       "controlPlaneWdmDataRaAlias": controlPlaneWdmDataRaAlias,
       "controlPlaneWdmDataCmAlias": controlPlaneWdmDataCmAlias,
       "controlPlaneWdmDataCdbAlias": controlPlaneWdmDataCdbAlias,
       "controlPlaneWdmDataTedbAlias": controlPlaneWdmDataTedbAlias,
       "controlPlaneWdmDataNaasAlias": controlPlaneWdmDataNaasAlias,
       "controlPlaneWdmDataPcAlias": controlPlaneWdmDataPcAlias,
       "controlPlaneWdmDataRsvpAlias": controlPlaneWdmDataRsvpAlias,
       "controlPlaneWdmDataCdAlias": controlPlaneWdmDataCdAlias,
       "controlPlaneWdmDataRmAlias": controlPlaneWdmDataRmAlias,
       "controlPlaneWdmDataNodeNameSyntax": controlPlaneWdmDataNodeNameSyntax,
       "tunnelWdmConfigTable": tunnelWdmConfigTable,
       "tunnelWdmConfigEntry": tunnelWdmConfigEntry,
       "tunnelWdmConfigAlias": tunnelWdmConfigAlias,
       "tunnelWdmConfigFacilityType": tunnelWdmConfigFacilityType,
       "tunnelWdmConfigTerminationLevel": tunnelWdmConfigTerminationLevel,
       "tunnelWdmConfigFecType": tunnelWdmConfigFecType,
       "tunnelWdmConfigStuff": tunnelWdmConfigStuff,
       "tunnelWdmConfigProvisionedPaths": tunnelWdmConfigProvisionedPaths,
       "tunnelWdmConfigRecoveryType": tunnelWdmConfigRecoveryType,
       "tunnelWdmConfigPin": tunnelWdmConfigPin,
       "tunnelWdmConfigInitiateEqualization": tunnelWdmConfigInitiateEqualization,
       "tunnelWdmConfigAbortProcess": tunnelWdmConfigAbortProcess,
       "tunnelWdmConfigAdminModifier": tunnelWdmConfigAdminModifier,
       "tunnelWdmConfigCommand": tunnelWdmConfigCommand,
       "tunnelWdmConfigRestorationType": tunnelWdmConfigRestorationType,
       "tunnelWdmConfigSubLayer": tunnelWdmConfigSubLayer,
       "tunnelWdmConfigMonitorEntities": tunnelWdmConfigMonitorEntities,
       "tunnelWdmConfigSubLayerEncoding": tunnelWdmConfigSubLayerEncoding,
       "tunnelWdmConfigPceMode": tunnelWdmConfigPceMode,
       "tunnelWdmConfigOperateReversion": tunnelWdmConfigOperateReversion,
       "tunnelWdmConfigReversionType": tunnelWdmConfigReversionType,
       "tunnelWdmConfigRestorationMode": tunnelWdmConfigRestorationMode,
       "tunnelWdmConfigRestPathsNoProv": tunnelWdmConfigRestPathsNoProv,
       "tunnelWdmConfigRestorationPaths": tunnelWdmConfigRestorationPaths,
       "tunnelWdmConfigRestorationPathsComputed": tunnelWdmConfigRestorationPathsComputed,
       "tunnelWdmConfigResetRetainedFailureIndications": tunnelWdmConfigResetRetainedFailureIndications,
       "tunnelWdmDataTable": tunnelWdmDataTable,
       "tunnelWdmDataEntry": tunnelWdmDataEntry,
       "tunnelWdmDataTunnelId": tunnelWdmDataTunnelId,
       "tunnelWdmDataTunnelNo": tunnelWdmDataTunnelNo,
       "tunnelWdmDataTunnelType": tunnelWdmDataTunnelType,
       "tunnelWdmDataFromTid": tunnelWdmDataFromTid,
       "tunnelWdmDataFromNodeIP": tunnelWdmDataFromNodeIP,
       "tunnelWdmDataToTid": tunnelWdmDataToTid,
       "tunnelWdmDataToTidMonitor": tunnelWdmDataToTidMonitor,
       "tunnelWdmDataToNodeIp": tunnelWdmDataToNodeIp,
       "tunnelWdmDataToNodeIpMonitor": tunnelWdmDataToNodeIpMonitor,
       "tunnelWdmDataFromAid": tunnelWdmDataFromAid,
       "tunnelWdmDataToAid": tunnelWdmDataToAid,
       "tunnelWdmDataConnectionDirection": tunnelWdmDataConnectionDirection,
       "tunnelWdmDataBitrate": tunnelWdmDataBitrate,
       "tunnelWdmDataEncode": tunnelWdmDataEncode,
       "tunnelWdmDataComputedPaths": tunnelWdmDataComputedPaths,
       "tunnelWdmDataComputationState": tunnelWdmDataComputationState,
       "tunnelWdmDataErrorMessage": tunnelWdmDataErrorMessage,
       "tunnelWdmDataErrorCodeMajor": tunnelWdmDataErrorCodeMajor,
       "tunnelWdmDataErrorCodeMinor": tunnelWdmDataErrorCodeMinor,
       "tunnelWdmDataErrorIp": tunnelWdmDataErrorIp,
       "tunnelWdmDataErrorTid": tunnelWdmDataErrorTid,
       "tunnelWdmDataErrorCategory": tunnelWdmDataErrorCategory,
       "tunnelWdmDataSpecificErrorMessage": tunnelWdmDataSpecificErrorMessage,
       "tunnelWdmDataTunnelScope": tunnelWdmDataTunnelScope,
       "tunnelWdmDataLayer": tunnelWdmDataLayer,
       "tunnelWdmDataLogicalIfAid": tunnelWdmDataLogicalIfAid,
       "tunnelWdmDataOifUni": tunnelWdmDataOifUni,
       "tunnelWdmDataTunnelNumberExtension": tunnelWdmDataTunnelNumberExtension,
       "tunnelWdmDataRestorationState": tunnelWdmDataRestorationState,
       "tunnelWdmDataTunnelTemplate": tunnelWdmDataTunnelTemplate,
       "tunnelWdmDataRestPathsNoAvail": tunnelWdmDataRestPathsNoAvail,
       "tunnelWdmDataReversionState": tunnelWdmDataReversionState,
       "tunnelWdmDataMonitorEntitiesDerive": tunnelWdmDataMonitorEntitiesDerive,
       "tunnelWdmDataRfiList": tunnelWdmDataRfiList,
       "tunnelWdmDataFromAidString": tunnelWdmDataFromAidString,
       "tunnelWdmDataToAidString": tunnelWdmDataToAidString,
       "pathWdmDataTable": pathWdmDataTable,
       "pathWdmDataEntry": pathWdmDataEntry,
       "pathWdmDataPathId": pathWdmDataPathId,
       "pathWdmDataPathType": pathWdmDataPathType,
       "pathWdmDataConnectionTunnelAid": pathWdmDataConnectionTunnelAid,
       "pathWdmDataRole": pathWdmDataRole,
       "pathElementWdmDataTable": pathElementWdmDataTable,
       "pathElementWdmDataEntry": pathElementWdmDataEntry,
       "pathElementWdmDataPathId": pathElementWdmDataPathId,
       "pathElementWdmDataSequenceNumber": pathElementWdmDataSequenceNumber,
       "pathElementWdmDataPathType": pathElementWdmDataPathType,
       "pathElementWdmDataTrafficEngineeringType": pathElementWdmDataTrafficEngineeringType,
       "pathElementWdmDataLifIp": pathElementWdmDataLifIp,
       "pathElementWdmDataNodeIp": pathElementWdmDataNodeIp,
       "pathElementWdmDataNodeIpMonitor": pathElementWdmDataNodeIpMonitor,
       "pathElementWdmDataTid": pathElementWdmDataTid,
       "pathElementWdmDataTidMonitor": pathElementWdmDataTidMonitor,
       "pathElementWdmDataLogicalInterfaceId": pathElementWdmDataLogicalInterfaceId,
       "pathElementWdmDataTie": pathElementWdmDataTie,
       "pathElementWdmDataChannelUp": pathElementWdmDataChannelUp,
       "pathElementWdmDataChannelDown": pathElementWdmDataChannelDown,
       "pathElementWdmDataLine": pathElementWdmDataLine,
       "pathElementWdmDataUpstreamModuleAid": pathElementWdmDataUpstreamModuleAid,
       "pathElementWdmDataDownstreamModuleAid": pathElementWdmDataDownstreamModuleAid,
       "pathElementWdmDataComputedOnsrForward": pathElementWdmDataComputedOnsrForward,
       "pathElementWdmDataComputedOnsrReverse": pathElementWdmDataComputedOnsrReverse,
       "pathElementWdmDataComputedOptPowerForward": pathElementWdmDataComputedOptPowerForward,
       "pathElementWdmDataComputedOptPowerReverse": pathElementWdmDataComputedOptPowerReverse,
       "connectionWdmConfigTable": connectionWdmConfigTable,
       "connectionWdmConfigEntry": connectionWdmConfigEntry,
       "connectionWdmConfigCancelConnEntities": connectionWdmConfigCancelConnEntities,
       "connectionWdmConfigCancelModifier": connectionWdmConfigCancelModifier,
       "connectionWdmDataTable": connectionWdmDataTable,
       "connectionWdmDataEntry": connectionWdmDataEntry,
       "connectionWdmDataTunnelId": connectionWdmDataTunnelId,
       "connectionWdmDataTunnelNo": connectionWdmDataTunnelNo,
       "connectionWdmDataTunnelType": connectionWdmDataTunnelType,
       "connectionWdmDataFromTid": connectionWdmDataFromTid,
       "connectionWdmDataFromNodeIp": connectionWdmDataFromNodeIp,
       "connectionWdmDataToTid": connectionWdmDataToTid,
       "connectionWdmDataToNodeIp": connectionWdmDataToNodeIp,
       "connectionWdmDataFromAid": connectionWdmDataFromAid,
       "connectionWdmDataToAid": connectionWdmDataToAid,
       "connectionWdmDataConnectionDirection": connectionWdmDataConnectionDirection,
       "connectionWdmDataNetworkElementPosition": connectionWdmDataNetworkElementPosition,
       "connectionWdmDataFacilityType": connectionWdmDataFacilityType,
       "connectionWdmDataBitrate": connectionWdmDataBitrate,
       "connectionWdmDataEncode": connectionWdmDataEncode,
       "connectionWdmDataTerminationLevel": connectionWdmDataTerminationLevel,
       "connectionWdmDataFecType": connectionWdmDataFecType,
       "connectionWdmDataStuff": connectionWdmDataStuff,
       "connectionWdmDataSignalledPaths": connectionWdmDataSignalledPaths,
       "connectionWdmDataComputedPaths": connectionWdmDataComputedPaths,
       "connectionWdmDataRole": connectionWdmDataRole,
       "connectionWdmDataErrorMessage": connectionWdmDataErrorMessage,
       "connectionWdmDataActivationState": connectionWdmDataActivationState,
       "connectionWdmDataRestorable": connectionWdmDataRestorable,
       "connectionWdmDataRestorationState": connectionWdmDataRestorationState,
       "connectionWdmDataEqualizationState": connectionWdmDataEqualizationState,
       "connectionWdmDataModificationState": connectionWdmDataModificationState,
       "connectionWdmDataMonitorEntities": connectionWdmDataMonitorEntities,
       "connectionWdmDataTunnelScope": connectionWdmDataTunnelScope,
       "connectionWdmDataLayer": connectionWdmDataLayer,
       "connectionWdmDataSourceTna": connectionWdmDataSourceTna,
       "connectionWdmDataDestinationTna": connectionWdmDataDestinationTna,
       "connectionWdmDataTunnelNumberExtension": connectionWdmDataTunnelNumberExtension,
       "connectionWdmDataTunnelInstance": connectionWdmDataTunnelInstance,
       "connectionWdmDataConnectionNo": connectionWdmDataConnectionNo,
       "logicalCpIfConfigTable": logicalCpIfConfigTable,
       "logicalCpIfConfigEntry": logicalCpIfConfigEntry,
       "logicalCpIfConfigAlias": logicalCpIfConfigAlias,
       "logicalCpIfConfigOspf": logicalCpIfConfigOspf,
       "logicalCpIfConfigLayer": logicalCpIfConfigLayer,
       "logicalCpIfConfigAreaId": logicalCpIfConfigAreaId,
       "logicalCpIfConfigMetric": logicalCpIfConfigMetric,
       "logicalCpIfConfigHelloInterval": logicalCpIfConfigHelloInterval,
       "logicalCpIfConfigDeadInterval": logicalCpIfConfigDeadInterval,
       "logicalCpIfConfigPrio": logicalCpIfConfigPrio,
       "logicalCpIfConfigRetransmitInterval": logicalCpIfConfigRetransmitInterval,
       "logicalCpIfConfigAuthType": logicalCpIfConfigAuthType,
       "logicalCpIfConfigAuthString": logicalCpIfConfigAuthString,
       "logicalCpIfConfigCpType": logicalCpIfConfigCpType,
       "logicalCpIfConfigRefreshTimeout": logicalCpIfConfigRefreshTimeout,
       "logicalCpIfConfigRefreshMultiplier": logicalCpIfConfigRefreshMultiplier,
       "logicalCpIfConfigTeMetric": logicalCpIfConfigTeMetric,
       "logicalCpIfConfigTeAreaId": logicalCpIfConfigTeAreaId,
       "logicalCpIfConfigLinkColor": logicalCpIfConfigLinkColor,
       "logicalCpIfConfigPushedNearEndIpHeader": logicalCpIfConfigPushedNearEndIpHeader,
       "logicalCpIfConfigPushedFarEndIpHeader": logicalCpIfConfigPushedFarEndIpHeader,
       "logicalCpIfConfigTimeToLive": logicalCpIfConfigTimeToLive,
       "logicalCpIfDataTable": logicalCpIfDataTable,
       "logicalCpIfDataEntry": logicalCpIfDataEntry,
       "logicalCpIfDataFacilityType": logicalCpIfDataFacilityType,
       "logicalCpIfDataDcnAid": logicalCpIfDataDcnAid,
       "logicalCpIfDataLanLinkAidDerived": logicalCpIfDataLanLinkAidDerived,
       "logicalCpIfDataLogicalInterfaceId": logicalCpIfDataLogicalInterfaceId,
       "logicalCpIfDataTransport": logicalCpIfDataTransport,
       "logicalCpIfDataFarEndLifId": logicalCpIfDataFarEndLifId,
       "logicalCpIfDataFarEndNodeIp": logicalCpIfDataFarEndNodeIp,
       "logicalCpIfDataFarEndNodeIpMonitor": logicalCpIfDataFarEndNodeIpMonitor,
       "logicalCpIfDataFarEndTid": logicalCpIfDataFarEndTid,
       "logicalCpIfDataFarEndTidMonitor": logicalCpIfDataFarEndTidMonitor,
       "logicalCpIfDataIpType": logicalCpIfDataIpType,
       "logicalCpIfDataIpAddr": logicalCpIfDataIpAddr,
       "logicalCpIfDataIpAddrMonitor": logicalCpIfDataIpAddrMonitor,
       "logicalCpIfDataIpMask": logicalCpIfDataIpMask,
       "logicalCpIfDataIpMaskMonitor": logicalCpIfDataIpMaskMonitor,
       "logicalCpIfDataOspf": logicalCpIfDataOspf,
       "logicalCpIfDataEncapsulation": logicalCpIfDataEncapsulation,
       "logicalCpIfDataNendTeLinkIdNum": logicalCpIfDataNendTeLinkIdNum,
       "logicalCpIfDataFendTeLinkIdNum": logicalCpIfDataFendTeLinkIdNum,
       "logicalCpIfDataFendDataLinkId": logicalCpIfDataFendDataLinkId,
       "logicalCpIfDataNendTeLinkIdUnn": logicalCpIfDataNendTeLinkIdUnn,
       "logicalCpIfDataFendTeLinkIdUnn": logicalCpIfDataFendTeLinkIdUnn,
       "logicalCpIfDataPushedNearEndIpHeader": logicalCpIfDataPushedNearEndIpHeader,
       "logicalCpIfDataPushedFarEndIpHeader": logicalCpIfDataPushedFarEndIpHeader,
       "logicalCpIfDataEncoding": logicalCpIfDataEncoding,
       "logicalCpIfDataLayer": logicalCpIfDataLayer,
       "logicalCpIfDataNendTeLinkAid": logicalCpIfDataNendTeLinkAid,
       "logicalCpIfDataFendTeLinkAid": logicalCpIfDataFendTeLinkAid,
       "logicalCpIfDataTunnelAid": logicalCpIfDataTunnelAid,
       "logicalCpIfDataActivationState": logicalCpIfDataActivationState,
       "logicalCpIfDataExtAdvertised": logicalCpIfDataExtAdvertised,
       "logicalCpIfDataVTeType": logicalCpIfDataVTeType,
       "logicalCpIfDataVNodeIp": logicalCpIfDataVNodeIp,
       "logicalCpIfDataVNodeTltp": logicalCpIfDataVNodeTltp,
       "inventoryCpWdmDownDataTable": inventoryCpWdmDownDataTable,
       "inventoryCpWdmDownDataEntry": inventoryCpWdmDownDataEntry,
       "inventoryCpWdmDownDataNumber": inventoryCpWdmDownDataNumber,
       "inventoryCpWdmDownDataResources": inventoryCpWdmDownDataResources,
       "inventoryCpWdmDownDataFacilities": inventoryCpWdmDownDataFacilities,
       "inventoryCpWdmDownDataPhysicalTermPoints": inventoryCpWdmDownDataPhysicalTermPoints,
       "inventoryCpWdmUpDataTable": inventoryCpWdmUpDataTable,
       "inventoryCpWdmUpDataEntry": inventoryCpWdmUpDataEntry,
       "inventoryCpWdmUpDataNumber": inventoryCpWdmUpDataNumber,
       "inventoryCpWdmUpDataResources": inventoryCpWdmUpDataResources,
       "inventoryCpWdmUpDataFacilities": inventoryCpWdmUpDataFacilities,
       "inventoryCpWdmUpDataPhysicalTermPoints": inventoryCpWdmUpDataPhysicalTermPoints,
       "inventoryCpWdmCrsDownDataTable": inventoryCpWdmCrsDownDataTable,
       "inventoryCpWdmCrsDownDataEntry": inventoryCpWdmCrsDownDataEntry,
       "inventoryCpWdmCrsDownDataNumber": inventoryCpWdmCrsDownDataNumber,
       "inventoryCpWdmCrsDownDataAids": inventoryCpWdmCrsDownDataAids,
       "inventoryCpWdmCrsUpDataTable": inventoryCpWdmCrsUpDataTable,
       "inventoryCpWdmCrsUpDataEntry": inventoryCpWdmCrsUpDataEntry,
       "inventoryCpWdmCrsUpDataNumber": inventoryCpWdmCrsUpDataNumber,
       "inventoryCpWdmCrsUpDataAids": inventoryCpWdmCrsUpDataAids,
       "teRouterDataTable": teRouterDataTable,
       "teRouterDataEntry": teRouterDataEntry,
       "teRouterDataIp": teRouterDataIp,
       "teRouterDataNodeIp": teRouterDataNodeIp,
       "teRouterDataNodeTid": teRouterDataNodeTid,
       "teRouterDataInfo": teRouterDataInfo,
       "teUnnumLinkWdmDataTable": teUnnumLinkWdmDataTable,
       "teUnnumLinkWdmDataEntry": teUnnumLinkWdmDataEntry,
       "teUnnumLinkWdmDataNumber": teUnnumLinkWdmDataNumber,
       "teUnnumLinkWdmDataNodeIp": teUnnumLinkWdmDataNodeIp,
       "teUnnumLinkWdmDataNodeTid": teUnnumLinkWdmDataNodeTid,
       "teUnnumLinkWdmDataTeLinkId": teUnnumLinkWdmDataTeLinkId,
       "teUnnumLinkWdmDataPhysicalLink": teUnnumLinkWdmDataPhysicalLink,
       "teUnnumLinkWdmDataSynchronization": teUnnumLinkWdmDataSynchronization,
       "teUnnumLinkWdmDataDiscarded": teUnnumLinkWdmDataDiscarded,
       "teUnnumLinkWdmDataFendNodeIp": teUnnumLinkWdmDataFendNodeIp,
       "teUnnumLinkWdmDataFendTeLinkId": teUnnumLinkWdmDataFendTeLinkId,
       "teUnnumLinkWdmDataInfo": teUnnumLinkWdmDataInfo,
       "teNumLinkWdmDataTable": teNumLinkWdmDataTable,
       "teNumLinkWdmDataEntry": teNumLinkWdmDataEntry,
       "teNumLinkWdmDataNodeIp": teNumLinkWdmDataNodeIp,
       "teNumLinkWdmDataNodeTid": teNumLinkWdmDataNodeTid,
       "teNumLinkWdmDataTeLinkIp": teNumLinkWdmDataTeLinkIp,
       "teNumLinkWdmDataPhysicalLink": teNumLinkWdmDataPhysicalLink,
       "teNumLinkWdmDataSynchronization": teNumLinkWdmDataSynchronization,
       "teNumLinkWdmDataDiscarded": teNumLinkWdmDataDiscarded,
       "teNumLinkWdmDataFendNodeIp": teNumLinkWdmDataFendNodeIp,
       "teNumLinkWdmDataFendTeLinkIp": teNumLinkWdmDataFendTeLinkIp,
       "teNumLinkWdmDataInfo": teNumLinkWdmDataInfo,
       "tnaMapDataTable": tnaMapDataTable,
       "tnaMapDataEntry": tnaMapDataEntry,
       "tnaMapDataNodeIp": tnaMapDataNodeIp,
       "tnaMapDataRemoteTna": tnaMapDataRemoteTna,
       "tnaMapDataRemoteTnaMask": tnaMapDataRemoteTnaMask,
       "tnaMapDataLocalPort": tnaMapDataLocalPort,
       "controlPlaneEthConfigTable": controlPlaneEthConfigTable,
       "controlPlaneEthConfigEntry": controlPlaneEthConfigEntry,
       "controlPlaneEthConfigCtmConfigFlag": controlPlaneEthConfigCtmConfigFlag,
       "controlPlaneEthConfigCtmTraceDetail": controlPlaneEthConfigCtmTraceDetail,
       "controlPlaneEthConfigCtmSetupTimeout": controlPlaneEthConfigCtmSetupTimeout,
       "controlPlaneEthConfigCtmShutdownTimeout": controlPlaneEthConfigCtmShutdownTimeout,
       "controlPlaneEthConfigCtmRetryWait": controlPlaneEthConfigCtmRetryWait,
       "controlPlaneEthConfigCtmRetryWaitMultiplier": controlPlaneEthConfigCtmRetryWaitMultiplier,
       "controlPlaneEthConfigCtmMaximumRetryWait": controlPlaneEthConfigCtmMaximumRetryWait,
       "controlPlaneEthConfigCtmMaximumRetryNumber": controlPlaneEthConfigCtmMaximumRetryNumber,
       "controlPlaneEthConfigRaConfigFlag": controlPlaneEthConfigRaConfigFlag,
       "controlPlaneEthConfigRaTraceDetail": controlPlaneEthConfigRaTraceDetail,
       "controlPlaneEthConfigRaAlarmActivationTime": controlPlaneEthConfigRaAlarmActivationTime,
       "controlPlaneEthConfigCmConfigFlag": controlPlaneEthConfigCmConfigFlag,
       "controlPlaneEthConfigCmTraceDetail": controlPlaneEthConfigCmTraceDetail,
       "controlPlaneEthConfigCmAlarmActivationTime": controlPlaneEthConfigCmAlarmActivationTime,
       "controlPlaneEthConfigCmFisFrsTimeout": controlPlaneEthConfigCmFisFrsTimeout,
       "controlPlaneEthConfigCmCrankBackTimeout": controlPlaneEthConfigCmCrankBackTimeout,
       "controlPlaneEthConfigCdbConfigFlag": controlPlaneEthConfigCdbConfigFlag,
       "controlPlaneEthConfigCdbDetail": controlPlaneEthConfigCdbDetail,
       "controlPlaneEthConfigCdbMaxSize": controlPlaneEthConfigCdbMaxSize,
       "controlPlaneEthConfigRsvpConfigFlag": controlPlaneEthConfigRsvpConfigFlag,
       "controlPlaneEthConfigRsvpMaxExpRestartTime": controlPlaneEthConfigRsvpMaxExpRestartTime,
       "controlPlaneEthConfigRsvpMaxExpRecoveryTime": controlPlaneEthConfigRsvpMaxExpRecoveryTime,
       "controlPlaneEthConfigTedbConfigFlag": controlPlaneEthConfigTedbConfigFlag,
       "controlPlaneEthConfigTedbTraceDetail": controlPlaneEthConfigTedbTraceDetail,
       "controlPlaneEthConfigTedbMaxSize": controlPlaneEthConfigTedbMaxSize,
       "controlPlaneEthConfigTedbRouterId": controlPlaneEthConfigTedbRouterId,
       "controlPlaneEthConfigTedbMinAdvertWait": controlPlaneEthConfigTedbMinAdvertWait,
       "controlPlaneEthConfigNaasConfigFlag": controlPlaneEthConfigNaasConfigFlag,
       "controlPlaneEthConfigNaasTraceDetail": controlPlaneEthConfigNaasTraceDetail,
       "controlPlaneEthConfigNaasMaxSize": controlPlaneEthConfigNaasMaxSize,
       "controlPlaneEthConfigNaasAdvertWait": controlPlaneEthConfigNaasAdvertWait,
       "controlPlaneEthConfigPcConfigFlag": controlPlaneEthConfigPcConfigFlag,
       "controlPlaneEthConfigPcTraceDetail": controlPlaneEthConfigPcTraceDetail,
       "controlPlaneEthConfigCdConfigFlag": controlPlaneEthConfigCdConfigFlag,
       "controlPlaneEthConfigCdTraceDetail": controlPlaneEthConfigCdTraceDetail,
       "controlPlaneEthConfigCdResyncTimeout": controlPlaneEthConfigCdResyncTimeout,
       "controlPlaneEthConfigRmConfigFlag": controlPlaneEthConfigRmConfigFlag,
       "controlPlaneEthConfigRmTraceDetail": controlPlaneEthConfigRmTraceDetail,
       "controlPlaneEthConfigRmTraceTarget": controlPlaneEthConfigRmTraceTarget,
       "controlPlaneEthDataTable": controlPlaneEthDataTable,
       "controlPlaneEthDataEntry": controlPlaneEthDataEntry,
       "controlPlaneEthDataCtmAlias": controlPlaneEthDataCtmAlias,
       "controlPlaneEthDataRaAlias": controlPlaneEthDataRaAlias,
       "controlPlaneEthDataCmAlias": controlPlaneEthDataCmAlias,
       "controlPlaneEthDataCdbAlias": controlPlaneEthDataCdbAlias,
       "controlPlaneEthDataTedbAlias": controlPlaneEthDataTedbAlias,
       "controlPlaneEthDataNaasAlias": controlPlaneEthDataNaasAlias,
       "controlPlaneEthDataPcAlias": controlPlaneEthDataPcAlias,
       "controlPlaneEthDataRsvpAlias": controlPlaneEthDataRsvpAlias,
       "controlPlaneEthDataCdAlias": controlPlaneEthDataCdAlias,
       "controlPlaneEthDataRmAlias": controlPlaneEthDataRmAlias,
       "tunnelEthConfigTable": tunnelEthConfigTable,
       "tunnelEthConfigEntry": tunnelEthConfigEntry,
       "tunnelEthConfigAlias": tunnelEthConfigAlias,
       "tunnelEthConfigProvisionedPaths": tunnelEthConfigProvisionedPaths,
       "tunnelEthConfigPin": tunnelEthConfigPin,
       "tunnelEthConfigAbortProcess": tunnelEthConfigAbortProcess,
       "tunnelEthConfigCommand": tunnelEthConfigCommand,
       "tunnelEthConfigCirRcv": tunnelEthConfigCirRcv,
       "tunnelEthConfigCbsRcv": tunnelEthConfigCbsRcv,
       "tunnelEthConfigProtectionType": tunnelEthConfigProtectionType,
       "tunnelEthConfigRestorationType": tunnelEthConfigRestorationType,
       "tunnelEthConfigMonitorEntities": tunnelEthConfigMonitorEntities,
       "tunnelEthConfigAdminModifier": tunnelEthConfigAdminModifier,
       "tunnelEthDataTable": tunnelEthDataTable,
       "tunnelEthDataEntry": tunnelEthDataEntry,
       "tunnelEthDataTunnelId": tunnelEthDataTunnelId,
       "tunnelEthDataTunnelNo": tunnelEthDataTunnelNo,
       "tunnelEthDataTunnelType": tunnelEthDataTunnelType,
       "tunnelEthDataFromTid": tunnelEthDataFromTid,
       "tunnelEthDataFromNodeIP": tunnelEthDataFromNodeIP,
       "tunnelEthDataToTid": tunnelEthDataToTid,
       "tunnelEthDataToTidMonitor": tunnelEthDataToTidMonitor,
       "tunnelEthDataToNodeIp": tunnelEthDataToNodeIp,
       "tunnelEthDataToNodeIpMonitor": tunnelEthDataToNodeIpMonitor,
       "tunnelEthDataFromAid": tunnelEthDataFromAid,
       "tunnelEthDataToAid": tunnelEthDataToAid,
       "tunnelEthDataConnectionDirection": tunnelEthDataConnectionDirection,
       "tunnelEthDataFacilityType": tunnelEthDataFacilityType,
       "tunnelEthDataComputedPaths": tunnelEthDataComputedPaths,
       "tunnelEthDataComputationState": tunnelEthDataComputationState,
       "tunnelEthDataErrorMessage": tunnelEthDataErrorMessage,
       "tunnelEthDataCirTrmt": tunnelEthDataCirTrmt,
       "tunnelEthDataCbsTrmt": tunnelEthDataCbsTrmt,
       "tunnelEthDataErrorCodeMajor": tunnelEthDataErrorCodeMajor,
       "tunnelEthDataErrorCodeMinor": tunnelEthDataErrorCodeMinor,
       "tunnelEthDataErrorIp": tunnelEthDataErrorIp,
       "tunnelEthDataErrorTid": tunnelEthDataErrorTid,
       "tunnelEthDataErrorCategory": tunnelEthDataErrorCategory,
       "tunnelEthDataSpecificErrorMessage": tunnelEthDataSpecificErrorMessage,
       "tunnelEthDataTunnelScope": tunnelEthDataTunnelScope,
       "tunnelEthDataLayer": tunnelEthDataLayer,
       "tunnelEthDataOifUni": tunnelEthDataOifUni,
       "tunnelEthDataTunnelNumberExtension": tunnelEthDataTunnelNumberExtension,
       "tunnelEthDataFromAidString": tunnelEthDataFromAidString,
       "tunnelEthDataToAidString": tunnelEthDataToAidString,
       "connectionEthConfigTable": connectionEthConfigTable,
       "connectionEthConfigEntry": connectionEthConfigEntry,
       "connectionEthConfigCancelConnEntities": connectionEthConfigCancelConnEntities,
       "connectionEthDataTable": connectionEthDataTable,
       "connectionEthDataEntry": connectionEthDataEntry,
       "connectionEthDataTunnelId": connectionEthDataTunnelId,
       "connectionEthDataTunnelNo": connectionEthDataTunnelNo,
       "connectionEthDataTunnelType": connectionEthDataTunnelType,
       "connectionEthDataFromTid": connectionEthDataFromTid,
       "connectionEthDataFromNodeIp": connectionEthDataFromNodeIp,
       "connectionEthDataToTid": connectionEthDataToTid,
       "connectionEthDataToNodeIp": connectionEthDataToNodeIp,
       "connectionEthDataFromAid": connectionEthDataFromAid,
       "connectionEthDataToAid": connectionEthDataToAid,
       "connectionEthDataConnectionDirection": connectionEthDataConnectionDirection,
       "connectionEthDataNetworkElementPosition": connectionEthDataNetworkElementPosition,
       "connectionEthDataSignalledPaths": connectionEthDataSignalledPaths,
       "connectionEthDataComputedPaths": connectionEthDataComputedPaths,
       "connectionEthDataRole": connectionEthDataRole,
       "connectionEthDataErrorMessage": connectionEthDataErrorMessage,
       "connectionEthDataCirTrmt": connectionEthDataCirTrmt,
       "connectionEthDataCbsTrmt": connectionEthDataCbsTrmt,
       "connectionEthDataCirRcv": connectionEthDataCirRcv,
       "connectionEthDataCbsRcv": connectionEthDataCbsRcv,
       "connectionEthDataActivationState": connectionEthDataActivationState,
       "connectionEthDataRestorable": connectionEthDataRestorable,
       "connectionEthDataModificationState": connectionEthDataModificationState,
       "connectionEthDataRestorationState": connectionEthDataRestorationState,
       "connectionEthDataMonitorEntities": connectionEthDataMonitorEntities,
       "connectionEthDataTunnelScope": connectionEthDataTunnelScope,
       "connectionEthDataLayer": connectionEthDataLayer,
       "connectionEthDataSourceTna": connectionEthDataSourceTna,
       "connectionEthDataDestinationTna": connectionEthDataDestinationTna,
       "connectionEthDataTunnelNumberExtension": connectionEthDataTunnelNumberExtension,
       "connectionEthDataTunnelInstance": connectionEthDataTunnelInstance,
       "connectionEthDataConnectionNo": connectionEthDataConnectionNo,
       "pathEthDataTable": pathEthDataTable,
       "pathEthDataEntry": pathEthDataEntry,
       "pathEthDataPathId": pathEthDataPathId,
       "pathEthDataPathType": pathEthDataPathType,
       "pathEthDataConnectionTunnelAid": pathEthDataConnectionTunnelAid,
       "pathEthDataRole": pathEthDataRole,
       "pathElementEthDataTable": pathElementEthDataTable,
       "pathElementEthDataEntry": pathElementEthDataEntry,
       "pathElementEthDataPathId": pathElementEthDataPathId,
       "pathElementEthDataSequenceNumber": pathElementEthDataSequenceNumber,
       "pathElementEthDataPathType": pathElementEthDataPathType,
       "pathElementEthDataTrafficEngineeringType": pathElementEthDataTrafficEngineeringType,
       "pathElementEthDataLifIp": pathElementEthDataLifIp,
       "pathElementEthDataNodeIp": pathElementEthDataNodeIp,
       "pathElementEthDataNodeIpMonitor": pathElementEthDataNodeIpMonitor,
       "pathElementEthDataTid": pathElementEthDataTid,
       "pathElementEthDataTidMonitor": pathElementEthDataTidMonitor,
       "pathElementEthDataLogicalInterfaceId": pathElementEthDataLogicalInterfaceId,
       "pathElementEthDataTie": pathElementEthDataTie,
       "pathElementEthDataUpstreamSvid": pathElementEthDataUpstreamSvid,
       "pathElementEthDataDownstreamSvid": pathElementEthDataDownstreamSvid,
       "inventoryCpEthDownDataTable": inventoryCpEthDownDataTable,
       "inventoryCpEthDownDataEntry": inventoryCpEthDownDataEntry,
       "inventoryCpEthDownDataNumber": inventoryCpEthDownDataNumber,
       "inventoryCpEthDownDataResources": inventoryCpEthDownDataResources,
       "inventoryCpEthDownDataFacilities": inventoryCpEthDownDataFacilities,
       "inventoryCpEthUpDataTable": inventoryCpEthUpDataTable,
       "inventoryCpEthUpDataEntry": inventoryCpEthUpDataEntry,
       "inventoryCpEthUpDataNumber": inventoryCpEthUpDataNumber,
       "inventoryCpEthUpDataResources": inventoryCpEthUpDataResources,
       "inventoryCpEthUpDataFacilities": inventoryCpEthUpDataFacilities,
       "inventoryCpEthCrsDownDataTable": inventoryCpEthCrsDownDataTable,
       "inventoryCpEthCrsDownDataEntry": inventoryCpEthCrsDownDataEntry,
       "inventoryCpEthCrsDownDataNumber": inventoryCpEthCrsDownDataNumber,
       "inventoryCpEthCrsDownDataIndexEthFrom": inventoryCpEthCrsDownDataIndexEthFrom,
       "inventoryCpEthCrsDownDataIndexFlowFrom": inventoryCpEthCrsDownDataIndexFlowFrom,
       "inventoryCpEthCrsDownDataIndexEthTo": inventoryCpEthCrsDownDataIndexEthTo,
       "inventoryCpEthCrsDownDataAids": inventoryCpEthCrsDownDataAids,
       "inventoryCpEthCrsUpDataTable": inventoryCpEthCrsUpDataTable,
       "inventoryCpEthCrsUpDataEntry": inventoryCpEthCrsUpDataEntry,
       "inventoryCpEthCrsUpDataNumber": inventoryCpEthCrsUpDataNumber,
       "inventoryCpEthCrsUpDataAids": inventoryCpEthCrsUpDataAids,
       "teUnnumLinkEthDataTable": teUnnumLinkEthDataTable,
       "teUnnumLinkEthDataEntry": teUnnumLinkEthDataEntry,
       "teUnnumLinkEthDataNumber": teUnnumLinkEthDataNumber,
       "teUnnumLinkEthDataNodeIp": teUnnumLinkEthDataNodeIp,
       "teUnnumLinkEthDataNodeTid": teUnnumLinkEthDataNodeTid,
       "teUnnumLinkEthDataTeLinkId": teUnnumLinkEthDataTeLinkId,
       "teUnnumLinkEthDataPhysicalLink": teUnnumLinkEthDataPhysicalLink,
       "teUnnumLinkEthDataSynchronization": teUnnumLinkEthDataSynchronization,
       "teUnnumLinkEthDataDiscarded": teUnnumLinkEthDataDiscarded,
       "teUnnumLinkEthDataFendNodeIp": teUnnumLinkEthDataFendNodeIp,
       "teUnnumLinkEthDataFendTeLinkId": teUnnumLinkEthDataFendTeLinkId,
       "teUnnumLinkEthDataInfo": teUnnumLinkEthDataInfo,
       "teNumLinkEthDataTable": teNumLinkEthDataTable,
       "teNumLinkEthDataEntry": teNumLinkEthDataEntry,
       "teNumLinkEthDataNodeIp": teNumLinkEthDataNodeIp,
       "teNumLinkEthDataNodeTid": teNumLinkEthDataNodeTid,
       "teNumLinkEthDataTeLinkIp": teNumLinkEthDataTeLinkIp,
       "teNumLinkEthDataPhysicalLink": teNumLinkEthDataPhysicalLink,
       "teNumLinkEthDataSynchronization": teNumLinkEthDataSynchronization,
       "teNumLinkEthDataDiscarded": teNumLinkEthDataDiscarded,
       "teNumLinkEthDataFendNodeIp": teNumLinkEthDataFendNodeIp,
       "teNumLinkEthDataFendTeLinkIp": teNumLinkEthDataFendTeLinkIp,
       "teNumLinkEthDataInfo": teNumLinkEthDataInfo,
       "remoteAlarmCpDataTable": remoteAlarmCpDataTable,
       "remoteAlarmCpDataEntry": remoteAlarmCpDataEntry,
       "remoteAlarmCpDataNumber": remoteAlarmCpDataNumber,
       "remoteAlarmCpDataNodeTid": remoteAlarmCpDataNodeTid,
       "remoteAlarmCpDataNodeIp": remoteAlarmCpDataNodeIp,
       "remoteAlarmCpDataSource": remoteAlarmCpDataSource,
       "remoteAlarmCpDataType": remoteAlarmCpDataType,
       "remoteAlarmCpDataDate": remoteAlarmCpDataDate,
       "remoteAlarmCpDataTime": remoteAlarmCpDataTime,
       "remoteAlarmCpDataPath": remoteAlarmCpDataPath,
       "inventoryCpEthDownFlowDataTable": inventoryCpEthDownFlowDataTable,
       "inventoryCpEthDownFlowDataEntry": inventoryCpEthDownFlowDataEntry,
       "inventoryCpEthDownFlowDataIndexEth": inventoryCpEthDownFlowDataIndexEth,
       "inventoryCpEthDownFlowDataFacilities": inventoryCpEthDownFlowDataFacilities,
       "inventoryCpEthUpFlowDataTable": inventoryCpEthUpFlowDataTable,
       "inventoryCpEthUpFlowDataEntry": inventoryCpEthUpFlowDataEntry,
       "inventoryCpEthUpFlowDataIndexEth": inventoryCpEthUpFlowDataIndexEth,
       "inventoryCpEthUpFlowDataFacilities": inventoryCpEthUpFlowDataFacilities,
       "portBindingDataTable": portBindingDataTable,
       "portBindingDataEntry": portBindingDataEntry,
       "portBindingDataLogicalIfAid": portBindingDataLogicalIfAid,
       "portBindingDataLocalPort": portBindingDataLocalPort,
       "portBindingDataLocalTna": portBindingDataLocalTna,
       "portBindingDataRemotePort": portBindingDataRemotePort,
       "portBindingDataRemoteTna": portBindingDataRemoteTna,
       "portBindingDataRemoteTnaMask": portBindingDataRemoteTnaMask,
       "portBindingDataRemoteNodeIp": portBindingDataRemoteNodeIp,
       "portBindingDataRemoteScn": portBindingDataRemoteScn,
       "portBindingDataRemoteScPc": portBindingDataRemoteScPc,
       "portBindingDataLayer": portBindingDataLayer,
       "portBindingLifAidTable": portBindingLifAidTable,
       "portBindingLifAidEntry": portBindingLifAidEntry,
       "portBindingLifAidIndex": portBindingLifAidIndex,
       "portBindingLifAidValue": portBindingLifAidValue,
       "reservationCpDataTable": reservationCpDataTable,
       "reservationCpDataEntry": reservationCpDataEntry,
       "reservationCpDataSeqNumber": reservationCpDataSeqNumber,
       "reservationCpDataTunnelNo": reservationCpDataTunnelNo,
       "reservationCpDataTunnelInstance": reservationCpDataTunnelInstance,
       "reservationCpDataIngressTid": reservationCpDataIngressTid,
       "reservationCpDataIngressNodeIp": reservationCpDataIngressNodeIp,
       "reservationCpDataChannelUp": reservationCpDataChannelUp,
       "reservationCpDataChannelDown": reservationCpDataChannelDown,
       "controlPlaneOtnConfigTable": controlPlaneOtnConfigTable,
       "controlPlaneOtnConfigEntry": controlPlaneOtnConfigEntry,
       "controlPlaneOtnConfigCtmConfigFlag": controlPlaneOtnConfigCtmConfigFlag,
       "controlPlaneOtnConfigCtmTraceDetail": controlPlaneOtnConfigCtmTraceDetail,
       "controlPlaneOtnConfigCtmSetupTimeout": controlPlaneOtnConfigCtmSetupTimeout,
       "controlPlaneOtnConfigCtmShutdownTimeout": controlPlaneOtnConfigCtmShutdownTimeout,
       "controlPlaneOtnConfigCtmRetryWait": controlPlaneOtnConfigCtmRetryWait,
       "controlPlaneOtnConfigCtmRetryWaitMultiplier": controlPlaneOtnConfigCtmRetryWaitMultiplier,
       "controlPlaneOtnConfigCtmMaximumRetryWait": controlPlaneOtnConfigCtmMaximumRetryWait,
       "controlPlaneOtnConfigCtmMaximumRetryNumber": controlPlaneOtnConfigCtmMaximumRetryNumber,
       "controlPlaneOtnConfigRaConfigFlag": controlPlaneOtnConfigRaConfigFlag,
       "controlPlaneOtnConfigRaTraceDetail": controlPlaneOtnConfigRaTraceDetail,
       "controlPlaneOtnConfigRaAlarmActivationTime": controlPlaneOtnConfigRaAlarmActivationTime,
       "controlPlaneOtnConfigCmConfigFlag": controlPlaneOtnConfigCmConfigFlag,
       "controlPlaneOtnConfigCmTraceDetail": controlPlaneOtnConfigCmTraceDetail,
       "controlPlaneOtnConfigCmAlarmActivationTime": controlPlaneOtnConfigCmAlarmActivationTime,
       "controlPlaneOtnConfigCmFisFrsTimeout": controlPlaneOtnConfigCmFisFrsTimeout,
       "controlPlaneOtnConfigCmCrankBackTimeout": controlPlaneOtnConfigCmCrankBackTimeout,
       "controlPlaneOtnConfigCdbConfigFlag": controlPlaneOtnConfigCdbConfigFlag,
       "controlPlaneOtnConfigCdbDetail": controlPlaneOtnConfigCdbDetail,
       "controlPlaneOtnConfigCdbMaxSize": controlPlaneOtnConfigCdbMaxSize,
       "controlPlaneOtnConfigRsvpConfigFlag": controlPlaneOtnConfigRsvpConfigFlag,
       "controlPlaneOtnConfigRsvpMaxExpRestartTime": controlPlaneOtnConfigRsvpMaxExpRestartTime,
       "controlPlaneOtnConfigRsvpMaxExpRecoveryTime": controlPlaneOtnConfigRsvpMaxExpRecoveryTime,
       "controlPlaneOtnConfigTedbConfigFlag": controlPlaneOtnConfigTedbConfigFlag,
       "controlPlaneOtnConfigTedbTraceDetail": controlPlaneOtnConfigTedbTraceDetail,
       "controlPlaneOtnConfigTedbMaxSize": controlPlaneOtnConfigTedbMaxSize,
       "controlPlaneOtnConfigTedbRouterId": controlPlaneOtnConfigTedbRouterId,
       "controlPlaneOtnConfigTedbMinAdvertWait": controlPlaneOtnConfigTedbMinAdvertWait,
       "controlPlaneOtnConfigNaasConfigFlag": controlPlaneOtnConfigNaasConfigFlag,
       "controlPlaneOtnConfigNaasTraceDetail": controlPlaneOtnConfigNaasTraceDetail,
       "controlPlaneOtnConfigNaasMaxSize": controlPlaneOtnConfigNaasMaxSize,
       "controlPlaneOtnConfigNaasAdvertWait": controlPlaneOtnConfigNaasAdvertWait,
       "controlPlaneOtnConfigPcConfigFlag": controlPlaneOtnConfigPcConfigFlag,
       "controlPlaneOtnConfigPcTraceDetail": controlPlaneOtnConfigPcTraceDetail,
       "controlPlaneOtnConfigCdConfigFlag": controlPlaneOtnConfigCdConfigFlag,
       "controlPlaneOtnConfigCdTraceDetail": controlPlaneOtnConfigCdTraceDetail,
       "controlPlaneOtnConfigCdResyncTimeout": controlPlaneOtnConfigCdResyncTimeout,
       "controlPlaneOtnConfigRmConfigFlag": controlPlaneOtnConfigRmConfigFlag,
       "controlPlaneOtnConfigRmTraceDetail": controlPlaneOtnConfigRmTraceDetail,
       "controlPlaneOtnConfigRmTraceTarget": controlPlaneOtnConfigRmTraceTarget,
       "controlPlaneOtnDataTable": controlPlaneOtnDataTable,
       "controlPlaneOtnDataEntry": controlPlaneOtnDataEntry,
       "controlPlaneOtnDataCtmAlias": controlPlaneOtnDataCtmAlias,
       "controlPlaneOtnDataRaAlias": controlPlaneOtnDataRaAlias,
       "controlPlaneOtnDataCmAlias": controlPlaneOtnDataCmAlias,
       "controlPlaneOtnDataCdbAlias": controlPlaneOtnDataCdbAlias,
       "controlPlaneOtnDataTedbAlias": controlPlaneOtnDataTedbAlias,
       "controlPlaneOtnDataNaasAlias": controlPlaneOtnDataNaasAlias,
       "controlPlaneOtnDataPcAlias": controlPlaneOtnDataPcAlias,
       "controlPlaneOtnDataRsvpAlias": controlPlaneOtnDataRsvpAlias,
       "controlPlaneOtnDataCdAlias": controlPlaneOtnDataCdAlias,
       "controlPlaneOtnDataRmAlias": controlPlaneOtnDataRmAlias,
       "controlPlaneOtnDataNodeNameSyntax": controlPlaneOtnDataNodeNameSyntax,
       "tunnelOtnConfigTable": tunnelOtnConfigTable,
       "tunnelOtnConfigEntry": tunnelOtnConfigEntry,
       "tunnelOtnConfigAlias": tunnelOtnConfigAlias,
       "tunnelOtnConfigProvisionedPaths": tunnelOtnConfigProvisionedPaths,
       "tunnelOtnConfigPin": tunnelOtnConfigPin,
       "tunnelOtnConfigAbortProcess": tunnelOtnConfigAbortProcess,
       "tunnelOtnConfigCommand": tunnelOtnConfigCommand,
       "tunnelOtnConfigProtectionType": tunnelOtnConfigProtectionType,
       "tunnelOtnConfigRestorationType": tunnelOtnConfigRestorationType,
       "tunnelOtnConfigMonitorEntities": tunnelOtnConfigMonitorEntities,
       "tunnelOtnConfigAdminModifier": tunnelOtnConfigAdminModifier,
       "tunnelOtnDataTable": tunnelOtnDataTable,
       "tunnelOtnDataEntry": tunnelOtnDataEntry,
       "tunnelOtnDataTunnelId": tunnelOtnDataTunnelId,
       "tunnelOtnDataTunnelNo": tunnelOtnDataTunnelNo,
       "tunnelOtnDataTunnelType": tunnelOtnDataTunnelType,
       "tunnelOtnDataFromTid": tunnelOtnDataFromTid,
       "tunnelOtnDataFromNodeIP": tunnelOtnDataFromNodeIP,
       "tunnelOtnDataToTid": tunnelOtnDataToTid,
       "tunnelOtnDataToTidMonitor": tunnelOtnDataToTidMonitor,
       "tunnelOtnDataToNodeIp": tunnelOtnDataToNodeIp,
       "tunnelOtnDataToNodeIpMonitor": tunnelOtnDataToNodeIpMonitor,
       "tunnelOtnDataFromAid": tunnelOtnDataFromAid,
       "tunnelOtnDataToAid": tunnelOtnDataToAid,
       "tunnelOtnDataConnectionDirection": tunnelOtnDataConnectionDirection,
       "tunnelOtnDataFacilityType": tunnelOtnDataFacilityType,
       "tunnelOtnDataComputedPaths": tunnelOtnDataComputedPaths,
       "tunnelOtnDataComputationState": tunnelOtnDataComputationState,
       "tunnelOtnDataErrorMessage": tunnelOtnDataErrorMessage,
       "tunnelOtnDataCirTrmt": tunnelOtnDataCirTrmt,
       "tunnelOtnDataCbsTrmt": tunnelOtnDataCbsTrmt,
       "tunnelOtnDataErrorCodeMajor": tunnelOtnDataErrorCodeMajor,
       "tunnelOtnDataErrorCodeMinor": tunnelOtnDataErrorCodeMinor,
       "tunnelOtnDataErrorIp": tunnelOtnDataErrorIp,
       "tunnelOtnDataErrorTid": tunnelOtnDataErrorTid,
       "tunnelOtnDataErrorCategory": tunnelOtnDataErrorCategory,
       "tunnelOtnDataSpecificErrorMessage": tunnelOtnDataSpecificErrorMessage,
       "tunnelOtnDataTunnelScope": tunnelOtnDataTunnelScope,
       "tunnelOtnDataLayer": tunnelOtnDataLayer,
       "tunnelOtnDataOifUni": tunnelOtnDataOifUni,
       "tunnelOtnDataTunnelNumberExtension": tunnelOtnDataTunnelNumberExtension,
       "tunnelOtnDataMonitorEntitiesDerive": tunnelOtnDataMonitorEntitiesDerive,
       "tunnelOtnDataFromAidString": tunnelOtnDataFromAidString,
       "tunnelOtnDataToAidString": tunnelOtnDataToAidString,
       "connectionOtnConfigTable": connectionOtnConfigTable,
       "connectionOtnConfigEntry": connectionOtnConfigEntry,
       "connectionOtnConfigCancelConnEntities": connectionOtnConfigCancelConnEntities,
       "connectionOtnConfigCancelModifier": connectionOtnConfigCancelModifier,
       "connectionOtnDataTable": connectionOtnDataTable,
       "connectionOtnDataEntry": connectionOtnDataEntry,
       "connectionOtnDataTunnelId": connectionOtnDataTunnelId,
       "connectionOtnDataTunnelNo": connectionOtnDataTunnelNo,
       "connectionOtnDataTunnelType": connectionOtnDataTunnelType,
       "connectionOtnDataFromTid": connectionOtnDataFromTid,
       "connectionOtnDataFromNodeIp": connectionOtnDataFromNodeIp,
       "connectionOtnDataToTid": connectionOtnDataToTid,
       "connectionOtnDataToNodeIp": connectionOtnDataToNodeIp,
       "connectionOtnDataFromAid": connectionOtnDataFromAid,
       "connectionOtnDataToAid": connectionOtnDataToAid,
       "connectionOtnDataConnectionDirection": connectionOtnDataConnectionDirection,
       "connectionOtnDataNetworkElementPosition": connectionOtnDataNetworkElementPosition,
       "connectionOtnDataFacilityType": connectionOtnDataFacilityType,
       "connectionOtnDataBitrate": connectionOtnDataBitrate,
       "connectionOtnDataEncode": connectionOtnDataEncode,
       "connectionOtnDataTerminationLevel": connectionOtnDataTerminationLevel,
       "connectionOtnDataFecType": connectionOtnDataFecType,
       "connectionOtnDataStuff": connectionOtnDataStuff,
       "connectionOtnDataSignalledPaths": connectionOtnDataSignalledPaths,
       "connectionOtnDataComputedPaths": connectionOtnDataComputedPaths,
       "connectionOtnDataRole": connectionOtnDataRole,
       "connectionOtnDataErrorMessage": connectionOtnDataErrorMessage,
       "connectionOtnDataActivationState": connectionOtnDataActivationState,
       "connectionOtnDataRestorable": connectionOtnDataRestorable,
       "connectionOtnDataRestorationState": connectionOtnDataRestorationState,
       "connectionOtnDataEqualizationState": connectionOtnDataEqualizationState,
       "connectionOtnDataModificationState": connectionOtnDataModificationState,
       "connectionOtnDataMonitorEntities": connectionOtnDataMonitorEntities,
       "connectionOtnDataTunnelScope": connectionOtnDataTunnelScope,
       "connectionOtnDataLayer": connectionOtnDataLayer,
       "connectionOtnDataSourceTna": connectionOtnDataSourceTna,
       "connectionOtnDataDestinationTna": connectionOtnDataDestinationTna,
       "connectionOtnDataTunnelNumberExtension": connectionOtnDataTunnelNumberExtension,
       "connectionOtnDataTunnelInstance": connectionOtnDataTunnelInstance,
       "connectionOtnDataConnectionNo": connectionOtnDataConnectionNo,
       "inventoryCpOtnDownDataTable": inventoryCpOtnDownDataTable,
       "inventoryCpOtnDownDataEntry": inventoryCpOtnDownDataEntry,
       "inventoryCpOtnDownDataNumber": inventoryCpOtnDownDataNumber,
       "inventoryCpOtnDownDataResources": inventoryCpOtnDownDataResources,
       "inventoryCpOtnDownDataFacilities": inventoryCpOtnDownDataFacilities,
       "inventoryCpOtnDownDataPhysicalTermPoints": inventoryCpOtnDownDataPhysicalTermPoints,
       "inventoryCpOtnUpDataTable": inventoryCpOtnUpDataTable,
       "inventoryCpOtnUpDataEntry": inventoryCpOtnUpDataEntry,
       "inventoryCpOtnUpDataNumber": inventoryCpOtnUpDataNumber,
       "inventoryCpOtnUpDataResources": inventoryCpOtnUpDataResources,
       "inventoryCpOtnUpDataFacilities": inventoryCpOtnUpDataFacilities,
       "inventoryCpOtnUpDataPhysicalTermPoints": inventoryCpOtnUpDataPhysicalTermPoints,
       "inventoryCpOtnCrsDownDataTable": inventoryCpOtnCrsDownDataTable,
       "inventoryCpOtnCrsDownDataEntry": inventoryCpOtnCrsDownDataEntry,
       "inventoryCpOtnCrsDownDataNumber": inventoryCpOtnCrsDownDataNumber,
       "inventoryCpOtnCrsDownDataAids": inventoryCpOtnCrsDownDataAids,
       "inventoryCpOtnCrsUpDataTable": inventoryCpOtnCrsUpDataTable,
       "inventoryCpOtnCrsUpDataEntry": inventoryCpOtnCrsUpDataEntry,
       "inventoryCpOtnCrsUpDataNumber": inventoryCpOtnCrsUpDataNumber,
       "inventoryCpOtnCrsUpDataAids": inventoryCpOtnCrsUpDataAids,
       "pathOtnDataTable": pathOtnDataTable,
       "pathOtnDataEntry": pathOtnDataEntry,
       "pathOtnDataPathId": pathOtnDataPathId,
       "pathOtnDataPathType": pathOtnDataPathType,
       "pathOtnDataConnectionTunnelAid": pathOtnDataConnectionTunnelAid,
       "pathOtnDataRole": pathOtnDataRole,
       "pathElementOtnDataTable": pathElementOtnDataTable,
       "pathElementOtnDataEntry": pathElementOtnDataEntry,
       "pathElementOtnDataPathId": pathElementOtnDataPathId,
       "pathElementOtnDataSequenceNumber": pathElementOtnDataSequenceNumber,
       "pathElementOtnDataPathType": pathElementOtnDataPathType,
       "pathElementOtnDataTrafficEngineeringType": pathElementOtnDataTrafficEngineeringType,
       "pathElementOtnDataLifIp": pathElementOtnDataLifIp,
       "pathElementOtnDataNodeIp": pathElementOtnDataNodeIp,
       "pathElementOtnDataNodeIpMonitor": pathElementOtnDataNodeIpMonitor,
       "pathElementOtnDataTid": pathElementOtnDataTid,
       "pathElementOtnDataTidMonitor": pathElementOtnDataTidMonitor,
       "pathElementOtnDataLogicalInterfaceId": pathElementOtnDataLogicalInterfaceId,
       "pathElementOtnDataTie": pathElementOtnDataTie,
       "pathElementOtnDataUpTributaryODTUType": pathElementOtnDataUpTributaryODTUType,
       "pathElementOtnDataDownTributaryODTUType": pathElementOtnDataDownTributaryODTUType,
       "pathElementOtnDataUpTributaryPort": pathElementOtnDataUpTributaryPort,
       "pathElementOtnDataDownTributaryPort": pathElementOtnDataDownTributaryPort,
       "pathElementOtnDataUpTributarySlot": pathElementOtnDataUpTributarySlot,
       "pathElementOtnDataDownTributarySlot": pathElementOtnDataDownTributarySlot,
       "pathElementOtnDataUpTributaryTSMethod": pathElementOtnDataUpTributaryTSMethod,
       "pathElementOtnDataDownTributaryTSMethod": pathElementOtnDataDownTributaryTSMethod,
       "teUnnumLinkOtnDataTable": teUnnumLinkOtnDataTable,
       "teUnnumLinkOtnDataEntry": teUnnumLinkOtnDataEntry,
       "teUnnumLinkOtnDataNumber": teUnnumLinkOtnDataNumber,
       "teUnnumLinkOtnDataNodeIp": teUnnumLinkOtnDataNodeIp,
       "teUnnumLinkOtnDataNodeTid": teUnnumLinkOtnDataNodeTid,
       "teUnnumLinkOtnDataTeLinkId": teUnnumLinkOtnDataTeLinkId,
       "teUnnumLinkOtnDataPhysicalLink": teUnnumLinkOtnDataPhysicalLink,
       "teUnnumLinkOtnDataSynchronization": teUnnumLinkOtnDataSynchronization,
       "teUnnumLinkOtnDataDiscarded": teUnnumLinkOtnDataDiscarded,
       "teUnnumLinkOtnDataFendNodeIp": teUnnumLinkOtnDataFendNodeIp,
       "teUnnumLinkOtnDataFendTeLinkId": teUnnumLinkOtnDataFendTeLinkId,
       "teUnnumLinkOtnDataInfo": teUnnumLinkOtnDataInfo,
       "teNumLinkOtnDataTable": teNumLinkOtnDataTable,
       "teNumLinkOtnDataEntry": teNumLinkOtnDataEntry,
       "teNumLinkOtnDataNodeIp": teNumLinkOtnDataNodeIp,
       "teNumLinkOtnDataNodeTid": teNumLinkOtnDataNodeTid,
       "teNumLinkOtnDataTeLinkIp": teNumLinkOtnDataTeLinkIp,
       "teNumLinkOtnDataPhysicalLink": teNumLinkOtnDataPhysicalLink,
       "teNumLinkOtnDataSynchronization": teNumLinkOtnDataSynchronization,
       "teNumLinkOtnDataDiscarded": teNumLinkOtnDataDiscarded,
       "teNumLinkOtnDataFendNodeIp": teNumLinkOtnDataFendNodeIp,
       "teNumLinkOtnDataFendTeLinkIp": teNumLinkOtnDataFendTeLinkIp,
       "teNumLinkOtnDataInfo": teNumLinkOtnDataInfo,
       "inventoryCpWdmDownPointerTable": inventoryCpWdmDownPointerTable,
       "inventoryCpWdmDownPointerEntry": inventoryCpWdmDownPointerEntry,
       "inventoryCpWdmDownPointerNumber": inventoryCpWdmDownPointerNumber,
       "inventoryCpWdmDownPointerResources": inventoryCpWdmDownPointerResources,
       "inventoryCpWdmDownPointerFacilities": inventoryCpWdmDownPointerFacilities,
       "inventoryCpWdmDownPointerPhysTermPoints": inventoryCpWdmDownPointerPhysTermPoints,
       "inventoryCpWdmUpPointerTable": inventoryCpWdmUpPointerTable,
       "inventoryCpWdmUpPointerEntry": inventoryCpWdmUpPointerEntry,
       "inventoryCpWdmUpPointerNumber": inventoryCpWdmUpPointerNumber,
       "inventoryCpWdmUpPointerResources": inventoryCpWdmUpPointerResources,
       "inventoryCpWdmUpPointerFacilities": inventoryCpWdmUpPointerFacilities,
       "inventoryCpWdmUpPointerPhysTermPoints": inventoryCpWdmUpPointerPhysTermPoints,
       "inventoryCpEthDownPointerTable": inventoryCpEthDownPointerTable,
       "inventoryCpEthDownPointerEntry": inventoryCpEthDownPointerEntry,
       "inventoryCpEthDownPointerNumber": inventoryCpEthDownPointerNumber,
       "inventoryCpEthDownPointerResources": inventoryCpEthDownPointerResources,
       "inventoryCpEthDownPointerFacilities": inventoryCpEthDownPointerFacilities,
       "inventoryCpEthUpPointerTable": inventoryCpEthUpPointerTable,
       "inventoryCpEthUpPointerEntry": inventoryCpEthUpPointerEntry,
       "inventoryCpEthUpPointerNumber": inventoryCpEthUpPointerNumber,
       "inventoryCpEthUpPointerResources": inventoryCpEthUpPointerResources,
       "inventoryCpEthUpPointerFacilities": inventoryCpEthUpPointerFacilities,
       "inventoryCpOtnDownPointerTable": inventoryCpOtnDownPointerTable,
       "inventoryCpOtnDownPointerEntry": inventoryCpOtnDownPointerEntry,
       "inventoryCpOtnDownPointerNumber": inventoryCpOtnDownPointerNumber,
       "inventoryCpOtnDownPointerResources": inventoryCpOtnDownPointerResources,
       "inventoryCpOtnDownPointerFacilities": inventoryCpOtnDownPointerFacilities,
       "inventoryCpOtnDownPointerPhysTermPoints": inventoryCpOtnDownPointerPhysTermPoints,
       "inventoryCpOtnUpPointerTable": inventoryCpOtnUpPointerTable,
       "inventoryCpOtnUpPointerEntry": inventoryCpOtnUpPointerEntry,
       "inventoryCpOtnUpPointerNumber": inventoryCpOtnUpPointerNumber,
       "inventoryCpOtnUpPointerResources": inventoryCpOtnUpPointerResources,
       "inventoryCpOtnUpPointerFacilities": inventoryCpOtnUpPointerFacilities,
       "inventoryCpOtnUpPointerPhysicalTermPoints": inventoryCpOtnUpPointerPhysicalTermPoints,
       "deploymentProvisioningMIB": deploymentProvisioningMIB,
       "shelfDeployProv": shelfDeployProv,
       "deployProvShelfTable": deployProvShelfTable,
       "deployProvShelfEntry": deployProvShelfEntry,
       "deployProvShelfRowStatus": deployProvShelfRowStatus,
       "deployProvShelfForceDestroy": deployProvShelfForceDestroy,
       "deployProvShelfType": deployProvShelfType,
       "deployProvShelfAdmin": deployProvShelfAdmin,
       "deployProvShelfSupply": deployProvShelfSupply,
       "deployProvShelfBand": deployProvShelfBand,
       "deployProvShelfPsuOutputPower": deployProvShelfPsuOutputPower,
       "deployProvShelfCapTable": deployProvShelfCapTable,
       "deployProvShelfCapEntry": deployProvShelfCapEntry,
       "deployProvShelfCapRowStatus": deployProvShelfCapRowStatus,
       "deployProvShelfCapForceDestroy": deployProvShelfCapForceDestroy,
       "deployProvShelfCapType": deployProvShelfCapType,
       "deployProvShelfCapAdmin": deployProvShelfCapAdmin,
       "deployProvShelfCapSupply": deployProvShelfCapSupply,
       "deployProvShelfCapBand": deployProvShelfCapBand,
       "deployProvShelfCapPsuOutputPower": deployProvShelfCapPsuOutputPower,
       "deployProvShelfDefaultsTable": deployProvShelfDefaultsTable,
       "deployProvShelfDefaultsEntry": deployProvShelfDefaultsEntry,
       "deployProvShelfDefaultsRowStatus": deployProvShelfDefaultsRowStatus,
       "deployProvShelfDefaultsForceDestroy": deployProvShelfDefaultsForceDestroy,
       "deployProvShelfDefaultsType": deployProvShelfDefaultsType,
       "deployProvShelfDefaultsAdmin": deployProvShelfDefaultsAdmin,
       "deployProvShelfDefaultsSupply": deployProvShelfDefaultsSupply,
       "deployProvShelfDefaultsBand": deployProvShelfDefaultsBand,
       "deployProvShelfDefaultsPsuOutputPower": deployProvShelfDefaultsPsuOutputPower,
       "moduleDeployProv": moduleDeployProv,
       "deployProvModuleTable": deployProvModuleTable,
       "deployProvModuleEntry": deployProvModuleEntry,
       "deployProvModuleRowStatus": deployProvModuleRowStatus,
       "deployProvModuleForceDestroy": deployProvModuleForceDestroy,
       "deployProvModuleType": deployProvModuleType,
       "deployProvModuleMode": deployProvModuleMode,
       "deployProvModuleDeploy": deployProvModuleDeploy,
       "deployProvModuleChannel": deployProvModuleChannel,
       "deployProvModuleReach": deployProvModuleReach,
       "deployProvModuleBand": deployProvModuleBand,
       "deployProvModuleSubBand": deployProvModuleSubBand,
       "deployProvModuleGroup": deployProvModuleGroup,
       "deployProvModuleFiber": deployProvModuleFiber,
       "deployProvModuleEdfaPwrOut": deployProvModuleEdfaPwrOut,
       "deployProvModuleAdmin": deployProvModuleAdmin,
       "deployProvModuleSupply": deployProvModuleSupply,
       "deployProvModuleDispersionCompensation": deployProvModuleDispersionCompensation,
       "deployProvModuleLanAid": deployProvModuleLanAid,
       "deployProvModuleSingleFiberLocation": deployProvModuleSingleFiberLocation,
       "deployProvModulePsuOutputPower": deployProvModulePsuOutputPower,
       "deployProvModuleTilt": deployProvModuleTilt,
       "deployProvModuleGain": deployProvModuleGain,
       "deployProvModuleCapabilityLevel": deployProvModuleCapabilityLevel,
       "deployProvModuleRoadmNumber": deployProvModuleRoadmNumber,
       "deployProvModuleScrambling": deployProvModuleScrambling,
       "deployProvModuleChannelSpacing": deployProvModuleChannelSpacing,
       "deployProvModuleLagSysPrio": deployProvModuleLagSysPrio,
       "deployProvModuleGainRange": deployProvModuleGainRange,
       "deployProvModuleEqlzAdmin": deployProvModuleEqlzAdmin,
       "deployProvModuleChannelsNumber": deployProvModuleChannelsNumber,
       "deployProvModuleDCFiberType": deployProvModuleDCFiberType,
       "deployProvModuleMapping": deployProvModuleMapping,
       "deployProvModuleCac": deployProvModuleCac,
       "deployProvModuleChannelSpacingProvision": deployProvModuleChannelSpacingProvision,
       "deployProvModuleChannelsProvision": deployProvModuleChannelsProvision,
       "deployProvModuleFiberDetect": deployProvModuleFiberDetect,
       "deployProvModuleTrafficDirection": deployProvModuleTrafficDirection,
       "deployProvModuleOscUsage": deployProvModuleOscUsage,
       "deployProvModuleCapTable": deployProvModuleCapTable,
       "deployProvModuleCapEntry": deployProvModuleCapEntry,
       "deployProvModuleCapRowStatus": deployProvModuleCapRowStatus,
       "deployProvModuleCapForceDestroy": deployProvModuleCapForceDestroy,
       "deployProvModuleCapType": deployProvModuleCapType,
       "deployProvModuleCapMode": deployProvModuleCapMode,
       "deployProvModuleCapDeploy": deployProvModuleCapDeploy,
       "deployProvModuleCapChannel": deployProvModuleCapChannel,
       "deployProvModuleCapReach": deployProvModuleCapReach,
       "deployProvModuleCapBand": deployProvModuleCapBand,
       "deployProvModuleCapSubBand": deployProvModuleCapSubBand,
       "deployProvModuleCapGroup": deployProvModuleCapGroup,
       "deployProvModuleCapFiber": deployProvModuleCapFiber,
       "deployProvModuleCapEdfaPwrOut": deployProvModuleCapEdfaPwrOut,
       "deployProvModuleCapAdmin": deployProvModuleCapAdmin,
       "deployProvModuleCapSupply": deployProvModuleCapSupply,
       "deployProvModuleCapDispersionCompensation": deployProvModuleCapDispersionCompensation,
       "deployProvModuleCapLanAid": deployProvModuleCapLanAid,
       "deployProvModuleCapSingleFiberLocation": deployProvModuleCapSingleFiberLocation,
       "deployProvModuleCapPsuOutputPower": deployProvModuleCapPsuOutputPower,
       "deployProvModuleCapTilt": deployProvModuleCapTilt,
       "deployProvModuleCapGain": deployProvModuleCapGain,
       "deployProvModuleCapCapabilityLevel": deployProvModuleCapCapabilityLevel,
       "deployProvModuleCapRoadmNumber": deployProvModuleCapRoadmNumber,
       "deployProvModuleCapScrambling": deployProvModuleCapScrambling,
       "deployProvModuleCapChannelSpacing": deployProvModuleCapChannelSpacing,
       "deployProvModuleCapLagSysPrio": deployProvModuleCapLagSysPrio,
       "deployProvModuleCapGainRange": deployProvModuleCapGainRange,
       "deployProvModuleCapEqlzAdmin": deployProvModuleCapEqlzAdmin,
       "deployProvModuleCapChannelsNumber": deployProvModuleCapChannelsNumber,
       "deployProvModuleCapDCFiberType": deployProvModuleCapDCFiberType,
       "deployProvModuleCapMapping": deployProvModuleCapMapping,
       "deployProvModuleCapCac": deployProvModuleCapCac,
       "deployProvModuleCapChannelSpacingProvision": deployProvModuleCapChannelSpacingProvision,
       "deployProvModuleCapChannelsProvision": deployProvModuleCapChannelsProvision,
       "deployProvModuleCapFiberDetect": deployProvModuleCapFiberDetect,
       "deployProvModuleCapTrafficDirection": deployProvModuleCapTrafficDirection,
       "deployProvModuleCapOscUsage": deployProvModuleCapOscUsage,
       "deployProvModuleDefaultsTable": deployProvModuleDefaultsTable,
       "deployProvModuleDefaultsEntry": deployProvModuleDefaultsEntry,
       "deployProvModuleDefaultsRowStatus": deployProvModuleDefaultsRowStatus,
       "deployProvModuleDefaultsForceDestroy": deployProvModuleDefaultsForceDestroy,
       "deployProvModuleDefaultsType": deployProvModuleDefaultsType,
       "deployProvModuleDefaultsMode": deployProvModuleDefaultsMode,
       "deployProvModuleDefaultsDeploy": deployProvModuleDefaultsDeploy,
       "deployProvModuleDefaultsChannel": deployProvModuleDefaultsChannel,
       "deployProvModuleDefaultsReach": deployProvModuleDefaultsReach,
       "deployProvModuleDefaultsBand": deployProvModuleDefaultsBand,
       "deployProvModuleDefaultsSubBand": deployProvModuleDefaultsSubBand,
       "deployProvModuleDefaultsGroup": deployProvModuleDefaultsGroup,
       "deployProvModuleDefaultsFiber": deployProvModuleDefaultsFiber,
       "deployProvModuleDefaultsEdfaPwrOut": deployProvModuleDefaultsEdfaPwrOut,
       "deployProvModuleDefaultsAdmin": deployProvModuleDefaultsAdmin,
       "deployProvModuleDefaultsSupply": deployProvModuleDefaultsSupply,
       "deployProvModuleDefaultsDispersionCompensation": deployProvModuleDefaultsDispersionCompensation,
       "deployProvModuleDefaultsLanAid": deployProvModuleDefaultsLanAid,
       "deployProvModuleDefaultsSingleFiberLocation": deployProvModuleDefaultsSingleFiberLocation,
       "deployProvModuleDefaultsPsuOutputPower": deployProvModuleDefaultsPsuOutputPower,
       "deployProvModuleDefaultsTilt": deployProvModuleDefaultsTilt,
       "deployProvModuleDefaultsGain": deployProvModuleDefaultsGain,
       "deployProvModuleDefaultsCapabilityLevel": deployProvModuleDefaultsCapabilityLevel,
       "deployProvModuleDefaultsRoadmNumber": deployProvModuleDefaultsRoadmNumber,
       "deployProvModuleDefaultsScrambling": deployProvModuleDefaultsScrambling,
       "deployProvModuleDefaultsChannelSpacing": deployProvModuleDefaultsChannelSpacing,
       "deployProvModuleDefaultsLagSysPrio": deployProvModuleDefaultsLagSysPrio,
       "deployProvModuleDefaultsGainRange": deployProvModuleDefaultsGainRange,
       "deployProvModuleDefaultsEqlzAdmin": deployProvModuleDefaultsEqlzAdmin,
       "deployProvModuleDefaultsChannelsNumber": deployProvModuleDefaultsChannelsNumber,
       "deployProvModuleDefaultsDCFiberType": deployProvModuleDefaultsDCFiberType,
       "deployProvModuleDefaultsMapping": deployProvModuleDefaultsMapping,
       "deployProvModuleDefaultsCac": deployProvModuleDefaultsCac,
       "deployProvModuleDefaultsChannelSpacingProvision": deployProvModuleDefaultsChannelSpacingProvision,
       "deployProvModuleDefaultsChannelsProvision": deployProvModuleDefaultsChannelsProvision,
       "deployProvModuleDefaultsFiberDetect": deployProvModuleDefaultsFiberDetect,
       "deployProvModuleDefaultsTrafficDirection": deployProvModuleDefaultsTrafficDirection,
       "deployProvModuleDefaultsOscUsage": deployProvModuleDefaultsOscUsage,
       "plugDeployProv": plugDeployProv,
       "deployProvPlugTable": deployProvPlugTable,
       "deployProvPlugEntry": deployProvPlugEntry,
       "deployProvPlugRowStatus": deployProvPlugRowStatus,
       "deployProvPlugForceDestroy": deployProvPlugForceDestroy,
       "deployProvPlugType": deployProvPlugType,
       "deployProvPlugMaxDataRate": deployProvPlugMaxDataRate,
       "deployProvPlugChannelId": deployProvPlugChannelId,
       "deployProvPlugThirdPartyUsage": deployProvPlugThirdPartyUsage,
       "deployProvPlugReach": deployProvPlugReach,
       "deployProvPlugAdmin": deployProvPlugAdmin,
       "deployProvPlugLoopbackAttenuation": deployProvPlugLoopbackAttenuation,
       "deployProvPlugLaserDelayTimer": deployProvPlugLaserDelayTimer,
       "deployProvPlugConnector": deployProvPlugConnector,
       "deployProvPlugCapTable": deployProvPlugCapTable,
       "deployProvPlugCapEntry": deployProvPlugCapEntry,
       "deployProvPlugCapRowStatus": deployProvPlugCapRowStatus,
       "deployProvPlugCapForceDestroy": deployProvPlugCapForceDestroy,
       "deployProvPlugCapType": deployProvPlugCapType,
       "deployProvPlugCapMaxDataRate": deployProvPlugCapMaxDataRate,
       "deployProvPlugCapChannelId": deployProvPlugCapChannelId,
       "deployProvPlugCapThirdPartyUsage": deployProvPlugCapThirdPartyUsage,
       "deployProvPlugCapReach": deployProvPlugCapReach,
       "deployProvPlugCapAdmin": deployProvPlugCapAdmin,
       "deployProvPlugCapLoopbackAttenuation": deployProvPlugCapLoopbackAttenuation,
       "deployProvPlugCapLaserDelayTimer": deployProvPlugCapLaserDelayTimer,
       "deployProvPlugCapConnector": deployProvPlugCapConnector,
       "deployProvPlugDefaultsTable": deployProvPlugDefaultsTable,
       "deployProvPlugDefaultsEntry": deployProvPlugDefaultsEntry,
       "deployProvPlugDefaultsRowStatus": deployProvPlugDefaultsRowStatus,
       "deployProvPlugDefaultsForceDestroy": deployProvPlugDefaultsForceDestroy,
       "deployProvPlugDefaultsType": deployProvPlugDefaultsType,
       "deployProvPlugDefaultsMaxDataRate": deployProvPlugDefaultsMaxDataRate,
       "deployProvPlugDefaultsChannelId": deployProvPlugDefaultsChannelId,
       "deployProvPlugDefaultsThirdPartyUsage": deployProvPlugDefaultsThirdPartyUsage,
       "deployProvPlugDefaultsReach": deployProvPlugDefaultsReach,
       "deployProvPlugDefaultsAdmin": deployProvPlugDefaultsAdmin,
       "deployProvPlugDefaultsLoopbackAttenuation": deployProvPlugDefaultsLoopbackAttenuation,
       "deployProvPlugDefaultsLaserDelayTimer": deployProvPlugDefaultsLaserDelayTimer,
       "deployProvPlugDefaultsConnector": deployProvPlugDefaultsConnector,
       "facilityDeployProv": facilityDeployProv,
       "deployProvIfTable": deployProvIfTable,
       "deployProvIfEntry": deployProvIfEntry,
       "deployProvIfRowStatus": deployProvIfRowStatus,
       "deployProvIfForceDestroy": deployProvIfForceDestroy,
       "deployProvIfType": deployProvIfType,
       "deployProvIfPayload": deployProvIfPayload,
       "deployProvIfBehaviour": deployProvIfBehaviour,
       "deployProvIfTerminationLevel": deployProvIfTerminationLevel,
       "deployProvIfAlsMode": deployProvIfAlsMode,
       "deployProvIfErrorForwarding": deployProvIfErrorForwarding,
       "deployProvIfLaserOffDelayFunction": deployProvIfLaserOffDelayFunction,
       "deployProvIfFecType": deployProvIfFecType,
       "deployProvIfTimingSource": deployProvIfTimingSource,
       "deployProvIfTcmALevel": deployProvIfTcmALevel,
       "deployProvIfTcmBLevel": deployProvIfTcmBLevel,
       "deployProvIfSigDegThresSonetLine": deployProvIfSigDegThresSonetLine,
       "deployProvIfSigDegThresSdhMs": deployProvIfSigDegThresSdhMs,
       "deployProvIfSignalDegradePeriod": deployProvIfSignalDegradePeriod,
       "deployProvIfAutonegotiation": deployProvIfAutonegotiation,
       "deployProvIfBitrate": deployProvIfBitrate,
       "deployProvIfDuplex": deployProvIfDuplex,
       "deployProvIfFlowControl": deployProvIfFlowControl,
       "deployProvIfOtnStuffing": deployProvIfOtnStuffing,
       "deployProvIfSigDegThresOtu": deployProvIfSigDegThresOtu,
       "deployProvIfSigDegPeriodOtu": deployProvIfSigDegPeriodOtu,
       "deployProvIfSigDegThresOdu": deployProvIfSigDegThresOdu,
       "deployProvIfSigDegPeriodOdu": deployProvIfSigDegPeriodOdu,
       "deployProvIfSigDegThresOduTcmA": deployProvIfSigDegThresOduTcmA,
       "deployProvIfSigDegPeriodOduTcmA": deployProvIfSigDegPeriodOduTcmA,
       "deployProvIfSigDegThresOduTcmB": deployProvIfSigDegThresOduTcmB,
       "deployProvIfSigDegPeriodOduTcmB": deployProvIfSigDegPeriodOduTcmB,
       "deployProvIfTilt": deployProvIfTilt,
       "deployProvIfGain": deployProvIfGain,
       "deployProvIfAdmin": deployProvIfAdmin,
       "deployProvIfAttenuationGradient": deployProvIfAttenuationGradient,
       "deployProvIfSigDegThresReceiver": deployProvIfSigDegThresReceiver,
       "deployProvIfTcmCLevel": deployProvIfTcmCLevel,
       "deployProvIfSigDegThresOduTcmC": deployProvIfSigDegThresOduTcmC,
       "deployProvIfSigDegPeriodOduTcmC": deployProvIfSigDegPeriodOduTcmC,
       "deployProvIfDisparityCorrection": deployProvIfDisparityCorrection,
       "deployProvIfIpAddr": deployProvIfIpAddr,
       "deployProvIfIpMask": deployProvIfIpMask,
       "deployProvIfOspf": deployProvIfOspf,
       "deployProvIfMetric": deployProvIfMetric,
       "deployProvIfAreaId": deployProvIfAreaId,
       "deployProvIfTraceFormSonetSection": deployProvIfTraceFormSonetSection,
       "deployProvIfTraceExpectedSonetSection": deployProvIfTraceExpectedSonetSection,
       "deployProvIfTraceTransmitSonetSection": deployProvIfTraceTransmitSonetSection,
       "deployProvIfTimModeSonetSection": deployProvIfTimModeSonetSection,
       "deployProvIfTraceExpectedOtu": deployProvIfTraceExpectedOtu,
       "deployProvIfTraceTransmitSapiOtu": deployProvIfTraceTransmitSapiOtu,
       "deployProvIfTraceTransmitDapiOtu": deployProvIfTraceTransmitDapiOtu,
       "deployProvIfTraceTransmitOpspOtu": deployProvIfTraceTransmitOpspOtu,
       "deployProvIfTimModeOtu": deployProvIfTimModeOtu,
       "deployProvIfTraceExpectedOdu": deployProvIfTraceExpectedOdu,
       "deployProvIfTraceTransmitSapiOdu": deployProvIfTraceTransmitSapiOdu,
       "deployProvIfTraceTransmitDapiOdu": deployProvIfTraceTransmitDapiOdu,
       "deployProvIfTraceTransmitOpspOdu": deployProvIfTraceTransmitOpspOdu,
       "deployProvIfTimModeOdu": deployProvIfTimModeOdu,
       "deployProvIfTraceExpectedOduTcmA": deployProvIfTraceExpectedOduTcmA,
       "deployProvIfTraceTransmitSapiOduTcmA": deployProvIfTraceTransmitSapiOduTcmA,
       "deployProvIfTraceTransmitDapiOduTcmA": deployProvIfTraceTransmitDapiOduTcmA,
       "deployProvIfTraceTransmitOpspOduTcmA": deployProvIfTraceTransmitOpspOduTcmA,
       "deployProvIfTimModeOduTcmA": deployProvIfTimModeOduTcmA,
       "deployProvIfTraceExpectedOduTcmB": deployProvIfTraceExpectedOduTcmB,
       "deployProvIfTraceTransmitSapiOduTcmB": deployProvIfTraceTransmitSapiOduTcmB,
       "deployProvIfTraceTransmitDapiOduTcmB": deployProvIfTraceTransmitDapiOduTcmB,
       "deployProvIfTraceTransmitOpspOduTcmB": deployProvIfTraceTransmitOpspOduTcmB,
       "deployProvIfTimModeOduTcmB": deployProvIfTimModeOduTcmB,
       "deployProvIfTraceExpectedOduTcmC": deployProvIfTraceExpectedOduTcmC,
       "deployProvIfTraceTransmitSapiOduTcmC": deployProvIfTraceTransmitSapiOduTcmC,
       "deployProvIfTraceTransmitDapiOduTcmC": deployProvIfTraceTransmitDapiOduTcmC,
       "deployProvIfTraceTransmitOpspOduTcmC": deployProvIfTraceTransmitOpspOduTcmC,
       "deployProvIfTimModeOduTcmC": deployProvIfTimModeOduTcmC,
       "deployProvIfChannelProvisioning": deployProvIfChannelProvisioning,
       "deployProvIfVariableGain": deployProvIfVariableGain,
       "deployProvIfBand": deployProvIfBand,
       "deployProvIfSigDegThreshold": deployProvIfSigDegThreshold,
       "deployProvIfSigDegPeriodIntegration": deployProvIfSigDegPeriodIntegration,
       "deployProvIfVoaMode": deployProvIfVoaMode,
       "deployProvIfOpticalSetPoint": deployProvIfOpticalSetPoint,
       "deployProvIfVoaSetpoint": deployProvIfVoaSetpoint,
       "deployProvIfLanAid": deployProvIfLanAid,
       "deployProvIfAprHighThreshold": deployProvIfAprHighThreshold,
       "deployProvIfPumpPower": deployProvIfPumpPower,
       "deployProvIfIpType": deployProvIfIpType,
       "deployProvIfWdmRxChannel": deployProvIfWdmRxChannel,
       "deployProvIfSigDegThresSonetSection": deployProvIfSigDegThresSonetSection,
       "deployProvIfSigDegThresSdhSection": deployProvIfSigDegThresSdhSection,
       "deployProvIfSigDegPeriodSdhSection": deployProvIfSigDegPeriodSdhSection,
       "deployProvIfDispersionMode": deployProvIfDispersionMode,
       "deployProvIfDispersionSetting": deployProvIfDispersionSetting,
       "deployProvIfOffset": deployProvIfOffset,
       "deployProvIfFunction": deployProvIfFunction,
       "deployProvIfPortMode": deployProvIfPortMode,
       "deployProvIfPortRole": deployProvIfPortRole,
       "deployProvIfUtag": deployProvIfUtag,
       "deployProvIfPvid": deployProvIfPvid,
       "deployProvIfPriority": deployProvIfPriority,
       "deployProvIfStagType": deployProvIfStagType,
       "deployProvIfCac": deployProvIfCac,
       "deployProvIfMaxFrameSize": deployProvIfMaxFrameSize,
       "deployProvIfVethAid": deployProvIfVethAid,
       "deployProvIfLagPrio": deployProvIfLagPrio,
       "deployProvIfLagPortType": deployProvIfLagPortType,
       "deployProvIfLagActivePorts": deployProvIfLagActivePorts,
       "deployProvIfLacpMode": deployProvIfLacpMode,
       "deployProvIfLagLoadBallanceSource": deployProvIfLagLoadBallanceSource,
       "deployProvIfLacpTimeout": deployProvIfLacpTimeout,
       "deployProvIfFarEndCommunication": deployProvIfFarEndCommunication,
       "deployProvIfEqlzAdmin": deployProvIfEqlzAdmin,
       "deployProvIfTxOffDelay": deployProvIfTxOffDelay,
       "deployProvIfOpuPayloadType": deployProvIfOpuPayloadType,
       "deployProvIfOscOpticalSetpoint": deployProvIfOscOpticalSetpoint,
       "deployProvIfFiberBrand": deployProvIfFiberBrand,
       "deployProvIfTiltSet": deployProvIfTiltSet,
       "deployProvIfXfpDecisionThres": deployProvIfXfpDecisionThres,
       "deployProvIfAutoPTassignment": deployProvIfAutoPTassignment,
       "deployProvIfTributarySlotMethod": deployProvIfTributarySlotMethod,
       "deployProvIfOduTribPortNo": deployProvIfOduTribPortNo,
       "deployProvIfOduTribTimeSlottNo": deployProvIfOduTribTimeSlottNo,
       "deployProvIfRevertiveMode": deployProvIfRevertiveMode,
       "deployProvIfLaserDelayTimer": deployProvIfLaserDelayTimer,
       "deployProvIfLaserOffTimer": deployProvIfLaserOffTimer,
       "deployProvIfLaserOnTimer": deployProvIfLaserOnTimer,
       "deployProvIfLaneChannelSetting": deployProvIfLaneChannelSetting,
       "deployProvIfBip": deployProvIfBip,
       "deployProvIfCodeGain": deployProvIfCodeGain,
       "deployProvIfEdfaPwrOut": deployProvIfEdfaPwrOut,
       "deployProvIfPrio": deployProvIfPrio,
       "deployProvIfAuthType": deployProvIfAuthType,
       "deployProvIfAuthString": deployProvIfAuthString,
       "deployProvIfSigDegPcslThreshold": deployProvIfSigDegPcslThreshold,
       "deployProvIfCapTable": deployProvIfCapTable,
       "deployProvIfCapEntry": deployProvIfCapEntry,
       "deployProvIfCapRowStatus": deployProvIfCapRowStatus,
       "deployProvIfCapForceDestroy": deployProvIfCapForceDestroy,
       "deployProvIfCapType": deployProvIfCapType,
       "deployProvIfCapPayload": deployProvIfCapPayload,
       "deployProvIfCapBehaviour": deployProvIfCapBehaviour,
       "deployProvIfCapTerminationLevel": deployProvIfCapTerminationLevel,
       "deployProvIfCapAlsMode": deployProvIfCapAlsMode,
       "deployProvIfCapErrorForwarding": deployProvIfCapErrorForwarding,
       "deployProvIfCapLaserOffDelayFunction": deployProvIfCapLaserOffDelayFunction,
       "deployProvIfCapFecType": deployProvIfCapFecType,
       "deployProvIfCapTimingSource": deployProvIfCapTimingSource,
       "deployProvIfCapTcmALevel": deployProvIfCapTcmALevel,
       "deployProvIfCapTcmBLevel": deployProvIfCapTcmBLevel,
       "deployProvIfCapSigDegThresSonetLine": deployProvIfCapSigDegThresSonetLine,
       "deployProvIfCapSigDegThresSdhMs": deployProvIfCapSigDegThresSdhMs,
       "deployProvIfCapSignalDegradePeriod": deployProvIfCapSignalDegradePeriod,
       "deployProvIfCapAutonegotiation": deployProvIfCapAutonegotiation,
       "deployProvIfCapBitrate": deployProvIfCapBitrate,
       "deployProvIfCapDuplex": deployProvIfCapDuplex,
       "deployProvIfCapFlowControl": deployProvIfCapFlowControl,
       "deployProvIfCapOtnStuffing": deployProvIfCapOtnStuffing,
       "deployProvIfCapSigDegThresOtu": deployProvIfCapSigDegThresOtu,
       "deployProvIfCapSigDegPeriodOtu": deployProvIfCapSigDegPeriodOtu,
       "deployProvIfCapSigDegThresOdu": deployProvIfCapSigDegThresOdu,
       "deployProvIfCapSigDegPeriodOdu": deployProvIfCapSigDegPeriodOdu,
       "deployProvIfCapSigDegThresOduTcmA": deployProvIfCapSigDegThresOduTcmA,
       "deployProvIfCapSigDegPeriodOduTcmA": deployProvIfCapSigDegPeriodOduTcmA,
       "deployProvIfCapSigDegThresOduTcmB": deployProvIfCapSigDegThresOduTcmB,
       "deployProvIfCapSigDegPeriodOduTcmB": deployProvIfCapSigDegPeriodOduTcmB,
       "deployProvIfCapTilt": deployProvIfCapTilt,
       "deployProvIfCapGain": deployProvIfCapGain,
       "deployProvIfCapAdmin": deployProvIfCapAdmin,
       "deployProvIfCapAttenuationGradient": deployProvIfCapAttenuationGradient,
       "deployProvIfCapSigDegThresReceiver": deployProvIfCapSigDegThresReceiver,
       "deployProvIfCapTcmCLevel": deployProvIfCapTcmCLevel,
       "deployProvIfCapSigDegThresOduTcmC": deployProvIfCapSigDegThresOduTcmC,
       "deployProvIfCapSigDegPeriodOduTcmC": deployProvIfCapSigDegPeriodOduTcmC,
       "deployProvIfCapDisparityCorrection": deployProvIfCapDisparityCorrection,
       "deployProvIfCapIpAddr": deployProvIfCapIpAddr,
       "deployProvIfCapIpMask": deployProvIfCapIpMask,
       "deployProvIfCapOspf": deployProvIfCapOspf,
       "deployProvIfCapMetric": deployProvIfCapMetric,
       "deployProvIfCapAreaId": deployProvIfCapAreaId,
       "deployProvIfCapTraceFormSonetSection": deployProvIfCapTraceFormSonetSection,
       "deployProvIfCapTraceExpectedSonetSection": deployProvIfCapTraceExpectedSonetSection,
       "deployProvIfCapTraceTransmitSonetSection": deployProvIfCapTraceTransmitSonetSection,
       "deployProvIfCapTimModeSonetSection": deployProvIfCapTimModeSonetSection,
       "deployProvIfCapTraceExpectedOtu": deployProvIfCapTraceExpectedOtu,
       "deployProvIfCapTraceTransmitSapiOtu": deployProvIfCapTraceTransmitSapiOtu,
       "deployProvIfCapTraceTransmitDapiOtu": deployProvIfCapTraceTransmitDapiOtu,
       "deployProvIfCapTraceTransmitOpspOtu": deployProvIfCapTraceTransmitOpspOtu,
       "deployProvIfCapTimModeOtu": deployProvIfCapTimModeOtu,
       "deployProvIfCapTraceExpectedOdu": deployProvIfCapTraceExpectedOdu,
       "deployProvIfCapTraceTransmitSapiOdu": deployProvIfCapTraceTransmitSapiOdu,
       "deployProvIfCapTraceTransmitDapiOdu": deployProvIfCapTraceTransmitDapiOdu,
       "deployProvIfCapTraceTransmitOpspOdu": deployProvIfCapTraceTransmitOpspOdu,
       "deployProvIfCapTimModeOdu": deployProvIfCapTimModeOdu,
       "deployProvIfCapTraceExpectedOduTcmA": deployProvIfCapTraceExpectedOduTcmA,
       "deployProvIfCapTraceTransmitSapiOduTcmA": deployProvIfCapTraceTransmitSapiOduTcmA,
       "deployProvIfCapTraceTransmitDapiOduTcmA": deployProvIfCapTraceTransmitDapiOduTcmA,
       "deployProvIfCapTraceTransmitOpspOduTcmA": deployProvIfCapTraceTransmitOpspOduTcmA,
       "deployProvIfCapTimModeOduTcmA": deployProvIfCapTimModeOduTcmA,
       "deployProvIfCapTraceExpectedOduTcmB": deployProvIfCapTraceExpectedOduTcmB,
       "deployProvIfCapTraceTransmitSapiOduTcmB": deployProvIfCapTraceTransmitSapiOduTcmB,
       "deployProvIfCapTraceTransmitDapiOduTcmB": deployProvIfCapTraceTransmitDapiOduTcmB,
       "deployProvIfCapTraceTransmitOpspOduTcmB": deployProvIfCapTraceTransmitOpspOduTcmB,
       "deployProvIfCapTimModeOduTcmB": deployProvIfCapTimModeOduTcmB,
       "deployProvIfCapTraceExpectedOduTcmC": deployProvIfCapTraceExpectedOduTcmC,
       "deployProvIfCapTraceTransmitSapiOduTcmC": deployProvIfCapTraceTransmitSapiOduTcmC,
       "deployProvIfCapTraceTransmitDapiOduTcmC": deployProvIfCapTraceTransmitDapiOduTcmC,
       "deployProvIfCapTraceTransmitOpspOduTcmC": deployProvIfCapTraceTransmitOpspOduTcmC,
       "deployProvIfCapTimModeOduTcmC": deployProvIfCapTimModeOduTcmC,
       "deployProvIfCapChannelProvisioning": deployProvIfCapChannelProvisioning,
       "deployProvIfCapVariableGain": deployProvIfCapVariableGain,
       "deployProvIfCapBand": deployProvIfCapBand,
       "deployProvIfCapSigDegThreshold": deployProvIfCapSigDegThreshold,
       "deployProvIfCapSigDegPeriodIntegration": deployProvIfCapSigDegPeriodIntegration,
       "deployProvIfCapVoaMode": deployProvIfCapVoaMode,
       "deployProvIfCapOpticalSetPoint": deployProvIfCapOpticalSetPoint,
       "deployProvIfCapVoaSetpoint": deployProvIfCapVoaSetpoint,
       "deployProvIfCapLanAid": deployProvIfCapLanAid,
       "deployProvIfCapAprHighThreshold": deployProvIfCapAprHighThreshold,
       "deployProvIfCapPumpPower": deployProvIfCapPumpPower,
       "deployProvIfCapIpType": deployProvIfCapIpType,
       "deployProvIfCapWdmRxChannel": deployProvIfCapWdmRxChannel,
       "deployProvIfCapSigDegThresSonetSection": deployProvIfCapSigDegThresSonetSection,
       "deployProvIfCapSigDegThresSdhSection": deployProvIfCapSigDegThresSdhSection,
       "deployProvIfCapSigDegPeriodSdhSection": deployProvIfCapSigDegPeriodSdhSection,
       "deployProvIfCapDispersionMode": deployProvIfCapDispersionMode,
       "deployProvIfCapDispersionSetting": deployProvIfCapDispersionSetting,
       "deployProvIfCapOffset": deployProvIfCapOffset,
       "deployProvIfCapFunction": deployProvIfCapFunction,
       "deployProvIfCapPortMode": deployProvIfCapPortMode,
       "deployProvIfCapPortRole": deployProvIfCapPortRole,
       "deployProvIfCapUtag": deployProvIfCapUtag,
       "deployProvIfCapPvid": deployProvIfCapPvid,
       "deployProvIfCapPriority": deployProvIfCapPriority,
       "deployProvIfCapStagType": deployProvIfCapStagType,
       "deployProvIfCapCac": deployProvIfCapCac,
       "deployProvIfCapMaxFrameSize": deployProvIfCapMaxFrameSize,
       "deployProvIfCapVethAid": deployProvIfCapVethAid,
       "deployProvIfCapLagPrio": deployProvIfCapLagPrio,
       "deployProvIfCapLagPortType": deployProvIfCapLagPortType,
       "deployProvIfCapLagActivePorts": deployProvIfCapLagActivePorts,
       "deployProvIfCapLacpMode": deployProvIfCapLacpMode,
       "deployProvIfCapLagLoadBallanceSource": deployProvIfCapLagLoadBallanceSource,
       "deployProvIfCapLacpTimeout": deployProvIfCapLacpTimeout,
       "deployProvIfCapFarEndCommunication": deployProvIfCapFarEndCommunication,
       "deployProvIfCapEqlzAdmin": deployProvIfCapEqlzAdmin,
       "deployProvIfCapTxOffDelay": deployProvIfCapTxOffDelay,
       "deployProvIfCapOpuPayloadType": deployProvIfCapOpuPayloadType,
       "deployProvIfCapOscOpticalSetpoint": deployProvIfCapOscOpticalSetpoint,
       "deployProvIfCapFiberBrand": deployProvIfCapFiberBrand,
       "deployProvIfCapTiltSet": deployProvIfCapTiltSet,
       "deployProvIfCapXfpDecisionThres": deployProvIfCapXfpDecisionThres,
       "deployProvIfCapAutoPTassignment": deployProvIfCapAutoPTassignment,
       "deployProvIfCapTributarySlotMethod": deployProvIfCapTributarySlotMethod,
       "deployProvIfCapOduTribPortNo": deployProvIfCapOduTribPortNo,
       "deployProvIfCapOduTribTimeSlottNo": deployProvIfCapOduTribTimeSlottNo,
       "deployProvIfCapRevertiveMode": deployProvIfCapRevertiveMode,
       "deployProvIfCapLaserDelayTimer": deployProvIfCapLaserDelayTimer,
       "deployProvIfCapLaserOffTimer": deployProvIfCapLaserOffTimer,
       "deployProvIfCapLaserOnTimer": deployProvIfCapLaserOnTimer,
       "deployProvIfCapLaneChannelSetting": deployProvIfCapLaneChannelSetting,
       "deployProvIfCapBip": deployProvIfCapBip,
       "deployProvIfCapCodeGain": deployProvIfCapCodeGain,
       "deployProvIfCapEdfaPwrOut": deployProvIfCapEdfaPwrOut,
       "deployProvIfCapPrio": deployProvIfCapPrio,
       "deployProvIfCapAuthType": deployProvIfCapAuthType,
       "deployProvIfCapAuthString": deployProvIfCapAuthString,
       "deployProvIfCapSigDegPcslThreshold": deployProvIfCapSigDegPcslThreshold,
       "deployProvIfDefaultsTable": deployProvIfDefaultsTable,
       "deployProvIfDefaultsEntry": deployProvIfDefaultsEntry,
       "deployProvIfDefaultsRowStatus": deployProvIfDefaultsRowStatus,
       "deployProvIfDefaultsForceDestroy": deployProvIfDefaultsForceDestroy,
       "deployProvIfDefaultsType": deployProvIfDefaultsType,
       "deployProvIfDefaultsPayload": deployProvIfDefaultsPayload,
       "deployProvIfDefaultsBehaviour": deployProvIfDefaultsBehaviour,
       "deployProvIfDefaultsTerminationLevel": deployProvIfDefaultsTerminationLevel,
       "deployProvIfDefaultsAlsMode": deployProvIfDefaultsAlsMode,
       "deployProvIfDefaultsErrorForwarding": deployProvIfDefaultsErrorForwarding,
       "deployProvIfDefaultsLaserOffDelayFunction": deployProvIfDefaultsLaserOffDelayFunction,
       "deployProvIfDefaultsFecType": deployProvIfDefaultsFecType,
       "deployProvIfDefaultsTimingSource": deployProvIfDefaultsTimingSource,
       "deployProvIfDefaultsTcmALevel": deployProvIfDefaultsTcmALevel,
       "deployProvIfDefaultsTcmBLevel": deployProvIfDefaultsTcmBLevel,
       "deployProvIfDefaultsSigDegThresSonetLine": deployProvIfDefaultsSigDegThresSonetLine,
       "deployProvIfDefaultsSigDegThresSdhMs": deployProvIfDefaultsSigDegThresSdhMs,
       "deployProvIfDefaultsSignalDegradePeriod": deployProvIfDefaultsSignalDegradePeriod,
       "deployProvIfDefaultsAutonegotiation": deployProvIfDefaultsAutonegotiation,
       "deployProvIfDefaultsBitrate": deployProvIfDefaultsBitrate,
       "deployProvIfDefaultsDuplex": deployProvIfDefaultsDuplex,
       "deployProvIfDefaultsFlowControl": deployProvIfDefaultsFlowControl,
       "deployProvIfDefaultsOtnStuffing": deployProvIfDefaultsOtnStuffing,
       "deployProvIfDefaultsSigDegThresOtu": deployProvIfDefaultsSigDegThresOtu,
       "deployProvIfDefaultsSigDegPeriodOtu": deployProvIfDefaultsSigDegPeriodOtu,
       "deployProvIfDefaultsSigDegThresOdu": deployProvIfDefaultsSigDegThresOdu,
       "deployProvIfDefaultsSigDegPeriodOdu": deployProvIfDefaultsSigDegPeriodOdu,
       "deployProvIfDefaultsSigDegThresOduTcmA": deployProvIfDefaultsSigDegThresOduTcmA,
       "deployProvIfDefaultsSigDegPeriodOduTcmA": deployProvIfDefaultsSigDegPeriodOduTcmA,
       "deployProvIfDefaultsSigDegThresOduTcmB": deployProvIfDefaultsSigDegThresOduTcmB,
       "deployProvIfDefaultsSigDegPeriodOduTcmB": deployProvIfDefaultsSigDegPeriodOduTcmB,
       "deployProvIfDefaultsTilt": deployProvIfDefaultsTilt,
       "deployProvIfDefaultsGain": deployProvIfDefaultsGain,
       "deployProvIfDefaultsAdmin": deployProvIfDefaultsAdmin,
       "deployProvIfDefaultsAttenuationGradient": deployProvIfDefaultsAttenuationGradient,
       "deployProvIfDefaultsSigDegThresReceiver": deployProvIfDefaultsSigDegThresReceiver,
       "deployProvIfDefaultsTcmCLevel": deployProvIfDefaultsTcmCLevel,
       "deployProvIfDefaultsSigDegThresOduTcmC": deployProvIfDefaultsSigDegThresOduTcmC,
       "deployProvIfDefaultsSigDegPeriodOduTcmC": deployProvIfDefaultsSigDegPeriodOduTcmC,
       "deployProvIfDefaultsDisparityCorrection": deployProvIfDefaultsDisparityCorrection,
       "deployProvIfDefaultsIpAddr": deployProvIfDefaultsIpAddr,
       "deployProvIfDefaultsIpMask": deployProvIfDefaultsIpMask,
       "deployProvIfDefaultsOspf": deployProvIfDefaultsOspf,
       "deployProvIfDefaultsMetric": deployProvIfDefaultsMetric,
       "deployProvIfDefaultsAreaId": deployProvIfDefaultsAreaId,
       "deployProvIfDefaultsTraceFormSonetSection": deployProvIfDefaultsTraceFormSonetSection,
       "deployProvIfDefaultsTraceExpectedSonetSection": deployProvIfDefaultsTraceExpectedSonetSection,
       "deployProvIfDefaultsTraceTransmitSonetSection": deployProvIfDefaultsTraceTransmitSonetSection,
       "deployProvIfDefaultsTimModeSonetSection": deployProvIfDefaultsTimModeSonetSection,
       "deployProvIfDefaultsTraceExpectedOtu": deployProvIfDefaultsTraceExpectedOtu,
       "deployProvIfDefaultsTraceTransmitSapiOtu": deployProvIfDefaultsTraceTransmitSapiOtu,
       "deployProvIfDefaultsTraceTransmitDapiOtu": deployProvIfDefaultsTraceTransmitDapiOtu,
       "deployProvIfDefaultsTraceTransmitOpspOtu": deployProvIfDefaultsTraceTransmitOpspOtu,
       "deployProvIfDefaultsTimModeOtu": deployProvIfDefaultsTimModeOtu,
       "deployProvIfDefaultsTraceExpectedOdu": deployProvIfDefaultsTraceExpectedOdu,
       "deployProvIfDefaultsTraceTransmitSapiOdu": deployProvIfDefaultsTraceTransmitSapiOdu,
       "deployProvIfDefaultsTraceTransmitDapiOdu": deployProvIfDefaultsTraceTransmitDapiOdu,
       "deployProvIfDefaultsTraceTransmitOpspOdu": deployProvIfDefaultsTraceTransmitOpspOdu,
       "deployProvIfDefaultsTimModeOdu": deployProvIfDefaultsTimModeOdu,
       "deployProvIfDefaultsTraceExpectedOduTcmA": deployProvIfDefaultsTraceExpectedOduTcmA,
       "deployProvIfDefaultsTraceTransmitSapiOduTcmA": deployProvIfDefaultsTraceTransmitSapiOduTcmA,
       "deployProvIfDefaultsTraceTransmitDapiOduTcmA": deployProvIfDefaultsTraceTransmitDapiOduTcmA,
       "deployProvIfDefaultsTraceTransmitOpspOduTcmA": deployProvIfDefaultsTraceTransmitOpspOduTcmA,
       "deployProvIfDefaultsTimModeOduTcmA": deployProvIfDefaultsTimModeOduTcmA,
       "deployProvIfDefaultsTraceExpectedOduTcmB": deployProvIfDefaultsTraceExpectedOduTcmB,
       "deployProvIfDefaultsTraceTransmitSapiOduTcmB": deployProvIfDefaultsTraceTransmitSapiOduTcmB,
       "deployProvIfDefaultsTraceTransmitDapiOduTcmB": deployProvIfDefaultsTraceTransmitDapiOduTcmB,
       "deployProvIfDefaultsTraceTransmitOpspOduTcmB": deployProvIfDefaultsTraceTransmitOpspOduTcmB,
       "deployProvIfDefaultsTimModeOduTcmB": deployProvIfDefaultsTimModeOduTcmB,
       "deployProvIfDefaultsTraceExpectedOduTcmC": deployProvIfDefaultsTraceExpectedOduTcmC,
       "deployProvIfDefaultsTraceTransmitSapiOduTcmC": deployProvIfDefaultsTraceTransmitSapiOduTcmC,
       "deployProvIfDefaultsTraceTransmitDapiOduTcmC": deployProvIfDefaultsTraceTransmitDapiOduTcmC,
       "deployProvIfDefaultsTraceTransmitOpspOduTcmC": deployProvIfDefaultsTraceTransmitOpspOduTcmC,
       "deployProvIfDefaultsTimModeOduTcmC": deployProvIfDefaultsTimModeOduTcmC,
       "deployProvIfDefaultsChannelProvisioning": deployProvIfDefaultsChannelProvisioning,
       "deployProvIfDefaultsVariableGain": deployProvIfDefaultsVariableGain,
       "deployProvIfDefaultsBand": deployProvIfDefaultsBand,
       "deployProvIfDefaultsSigDegThreshold": deployProvIfDefaultsSigDegThreshold,
       "deployProvIfDefaultsSigDegPeriodIntegration": deployProvIfDefaultsSigDegPeriodIntegration,
       "deployProvIfDefaultsVoaMode": deployProvIfDefaultsVoaMode,
       "deployProvIfDefaultsOpticalSetPoint": deployProvIfDefaultsOpticalSetPoint,
       "deployProvIfDefaultsVoaSetpoint": deployProvIfDefaultsVoaSetpoint,
       "deployProvIfDefaultsLanAid": deployProvIfDefaultsLanAid,
       "deployProvIfDefaultsAprHighThreshold": deployProvIfDefaultsAprHighThreshold,
       "deployProvIfDefaultsPumpPower": deployProvIfDefaultsPumpPower,
       "deployProvIfDefaultsIpType": deployProvIfDefaultsIpType,
       "deployProvIfDefaultsWdmRxChannel": deployProvIfDefaultsWdmRxChannel,
       "deployProvIfDefaultsSigDegThresSonetSection": deployProvIfDefaultsSigDegThresSonetSection,
       "deployProvIfDefaultsSigDegThresSdhSection": deployProvIfDefaultsSigDegThresSdhSection,
       "deployProvIfDefaultsSigDegPeriodSdhSection": deployProvIfDefaultsSigDegPeriodSdhSection,
       "deployProvIfDefaultsDispersionMode": deployProvIfDefaultsDispersionMode,
       "deployProvIfDefaultsDispersionSetting": deployProvIfDefaultsDispersionSetting,
       "deployProvIfDefaultsOffset": deployProvIfDefaultsOffset,
       "deployProvIfDefaultsFunction": deployProvIfDefaultsFunction,
       "deployProvIfDefaultsPortMode": deployProvIfDefaultsPortMode,
       "deployProvIfDefaultsPortRole": deployProvIfDefaultsPortRole,
       "deployProvIfDefaultsUtag": deployProvIfDefaultsUtag,
       "deployProvIfDefaultsPvid": deployProvIfDefaultsPvid,
       "deployProvIfDefaultsPriority": deployProvIfDefaultsPriority,
       "deployProvIfDefaultsStagType": deployProvIfDefaultsStagType,
       "deployProvIfDefaultsCac": deployProvIfDefaultsCac,
       "deployProvIfDefaultsMaxFrameSize": deployProvIfDefaultsMaxFrameSize,
       "deployProvIfDefaultsVethAid": deployProvIfDefaultsVethAid,
       "deployProvIfDefaultsLagPrio": deployProvIfDefaultsLagPrio,
       "deployProvIfDefaultsLagPortType": deployProvIfDefaultsLagPortType,
       "deployProvIfDefaultsLagActivePorts": deployProvIfDefaultsLagActivePorts,
       "deployProvIfDefaultsLacpMode": deployProvIfDefaultsLacpMode,
       "deployProvIfDefaultsLagLoadBallanceSource": deployProvIfDefaultsLagLoadBallanceSource,
       "deployProvIfDefaultsLacpTimeout": deployProvIfDefaultsLacpTimeout,
       "deployProvIfDefaultsFarEndCommunication": deployProvIfDefaultsFarEndCommunication,
       "deployProvIfDefaultsEqlzAdmin": deployProvIfDefaultsEqlzAdmin,
       "deployProvIfDefaultsTxOffDelay": deployProvIfDefaultsTxOffDelay,
       "deployProvIfDefaultsOpuPayloadType": deployProvIfDefaultsOpuPayloadType,
       "deployProvIfDefaultsOscOpticalSetpoint": deployProvIfDefaultsOscOpticalSetpoint,
       "deployProvIfDefaultsFiberBrand": deployProvIfDefaultsFiberBrand,
       "deployProvIfDefaultsTiltSet": deployProvIfDefaultsTiltSet,
       "deployProvIfDefaultsXfpDecisionThres": deployProvIfDefaultsXfpDecisionThres,
       "deployProvIfDefaultsAutoPTassignment": deployProvIfDefaultsAutoPTassignment,
       "deployProvIfDefaultsTributarySlotMethod": deployProvIfDefaultsTributarySlotMethod,
       "deployProvIfDefaultsOduTribPortNo": deployProvIfDefaultsOduTribPortNo,
       "deployProvIfDefaultsOduTribTimeSlottNo": deployProvIfDefaultsOduTribTimeSlottNo,
       "deployProvIfDefaultsRevertiveMode": deployProvIfDefaultsRevertiveMode,
       "deployProvIfDefaultsLaserDelayTimer": deployProvIfDefaultsLaserDelayTimer,
       "deployProvIfDefaultsLaserOffTimer": deployProvIfDefaultsLaserOffTimer,
       "deployProvIfDefaultsLaserOnTimer": deployProvIfDefaultsLaserOnTimer,
       "deployProvIfDefaultsLaneChannelSetting": deployProvIfDefaultsLaneChannelSetting,
       "deployProvIfDefaultsBip": deployProvIfDefaultsBip,
       "deployProvIfDefaultsCodeGain": deployProvIfDefaultsCodeGain,
       "deployProvIfDefaultsEdfaPwrOut": deployProvIfDefaultsEdfaPwrOut,
       "deployProvIfDefaultsPrio": deployProvIfDefaultsPrio,
       "deployProvIfDefaultsAuthType": deployProvIfDefaultsAuthType,
       "deployProvIfDefaultsAuthString": deployProvIfDefaultsAuthString,
       "deployProvIfDefaultsSigDegPcslThreshold": deployProvIfDefaultsSigDegPcslThreshold,
       "deployProvVchChannelTable": deployProvVchChannelTable,
       "deployProvVchChannelEntry": deployProvVchChannelEntry,
       "deployProvVchChannelRowStatus": deployProvVchChannelRowStatus,
       "deployProvVchChannelForceDestroy": deployProvVchChannelForceDestroy,
       "deployProvVchChannelType": deployProvVchChannelType,
       "deployProvVchChannelVcgType": deployProvVchChannelVcgType,
       "deployProvVchChannelBundle": deployProvVchChannelBundle,
       "deployProvVchChannelCir": deployProvVchChannelCir,
       "deployProvVchChannelAdmin": deployProvVchChannelAdmin,
       "deployProvVchChannelSigDegThresOdu": deployProvVchChannelSigDegThresOdu,
       "deployProvVchChannelSigDegPeriodOdu": deployProvVchChannelSigDegPeriodOdu,
       "deployProvVchChannelTraceExpectedOdu": deployProvVchChannelTraceExpectedOdu,
       "deployProvVchChannelTraceTransmitSapiOdu": deployProvVchChannelTraceTransmitSapiOdu,
       "deployProvVchChannelTraceTransmitDapiOdu": deployProvVchChannelTraceTransmitDapiOdu,
       "deployProvVchChannelTraceTransmitOpspOdu": deployProvVchChannelTraceTransmitOpspOdu,
       "deployProvVchChannelTimModeOdu": deployProvVchChannelTimModeOdu,
       "deployProvVchChannelEqlzAdmin": deployProvVchChannelEqlzAdmin,
       "deployProvVchChannelCapTable": deployProvVchChannelCapTable,
       "deployProvVchChannelCapEntry": deployProvVchChannelCapEntry,
       "deployProvVchChannelCapRowStatus": deployProvVchChannelCapRowStatus,
       "deployProvVchChannelCapForceDestroy": deployProvVchChannelCapForceDestroy,
       "deployProvVchChannelCapType": deployProvVchChannelCapType,
       "deployProvVchChannelCapVcgType": deployProvVchChannelCapVcgType,
       "deployProvVchChannelCapBundle": deployProvVchChannelCapBundle,
       "deployProvVchChannelCapCir": deployProvVchChannelCapCir,
       "deployProvVchChannelCapAdmin": deployProvVchChannelCapAdmin,
       "deployProvVchChannelCapSigDegThresOdu": deployProvVchChannelCapSigDegThresOdu,
       "deployProvVchChannelCapSigDegPeriodOdu": deployProvVchChannelCapSigDegPeriodOdu,
       "deployProvVchChannelCapTraceExpectedOdu": deployProvVchChannelCapTraceExpectedOdu,
       "deployProvVchChannelCapTraceTransmitSapiOdu": deployProvVchChannelCapTraceTransmitSapiOdu,
       "deployProvVchChannelCapTraceTransmitDapiOdu": deployProvVchChannelCapTraceTransmitDapiOdu,
       "deployProvVchChannelCapTraceTransmitOpspOdu": deployProvVchChannelCapTraceTransmitOpspOdu,
       "deployProvVchChannelCapTimModeOdu": deployProvVchChannelCapTimModeOdu,
       "deployProvVchChannelCapEqlzAdmin": deployProvVchChannelCapEqlzAdmin,
       "deployProvVchChannelDefaultsTable": deployProvVchChannelDefaultsTable,
       "deployProvVchChannelDefaultsEntry": deployProvVchChannelDefaultsEntry,
       "deployProvVchChannelDefaultsRowStatus": deployProvVchChannelDefaultsRowStatus,
       "deployProvVchChannelDefaultsForceDestroy": deployProvVchChannelDefaultsForceDestroy,
       "deployProvVchChannelDefaultsType": deployProvVchChannelDefaultsType,
       "deployProvVchChannelDefaultsVcgType": deployProvVchChannelDefaultsVcgType,
       "deployProvVchChannelDefaultsBundle": deployProvVchChannelDefaultsBundle,
       "deployProvVchChannelDefaultsCir": deployProvVchChannelDefaultsCir,
       "deployProvVchChannelDefaultsAdmin": deployProvVchChannelDefaultsAdmin,
       "deployProvVchChannelDefaultsSigDegThresOdu": deployProvVchChannelDefaultsSigDegThresOdu,
       "deployProvVchChannelDefaultsSigDegPeriodOdu": deployProvVchChannelDefaultsSigDegPeriodOdu,
       "deployProvVchChannelDefaultsTraceExpectedOdu": deployProvVchChannelDefaultsTraceExpectedOdu,
       "deployProvVchChannelDefaultsTraceTransmitSapiOdu": deployProvVchChannelDefaultsTraceTransmitSapiOdu,
       "deployProvVchChannelDefaultsTraceTransmitDapiOdu": deployProvVchChannelDefaultsTraceTransmitDapiOdu,
       "deployProvVchChannelDefaultsTraceTransmitOpspOdu": deployProvVchChannelDefaultsTraceTransmitOpspOdu,
       "deployProvVchChannelDefaultsTimModeOdu": deployProvVchChannelDefaultsTimModeOdu,
       "deployProvVchChannelDefaultsEqlzAdmin": deployProvVchChannelDefaultsEqlzAdmin,
       "deployProvApsTable": deployProvApsTable,
       "deployProvApsEntry": deployProvApsEntry,
       "deployProvApsRowStatus": deployProvApsRowStatus,
       "deployProvApsForceDestroy": deployProvApsForceDestroy,
       "deployProvApsSDswitching": deployProvApsSDswitching,
       "deployProvApsHoldOffTime": deployProvApsHoldOffTime,
       "deployProvApsProtectionMech": deployProvApsProtectionMech,
       "deployProvApsWorkingAid": deployProvApsWorkingAid,
       "deployProvApsProtectionAid": deployProvApsProtectionAid,
       "deployProvApsSignalDegradeSwitching": deployProvApsSignalDegradeSwitching,
       "deployProvApsSignalFailureSwitching": deployProvApsSignalFailureSwitching,
       "deployProvApsFarEndIp": deployProvApsFarEndIp,
       "deployProvApsPeerAid": deployProvApsPeerAid,
       "deployProvApsApsType": deployProvApsApsType,
       "deployProvApsRevertMode": deployProvApsRevertMode,
       "deployProvApsWaitToRestore": deployProvApsWaitToRestore,
       "deployProvApsDirection": deployProvApsDirection,
       "deployProvApsCapTable": deployProvApsCapTable,
       "deployProvApsCapEntry": deployProvApsCapEntry,
       "deployProvApsCapRowStatus": deployProvApsCapRowStatus,
       "deployProvApsCapForceDestroy": deployProvApsCapForceDestroy,
       "deployProvApsCapSDswitching": deployProvApsCapSDswitching,
       "deployProvApsCapHoldOffTime": deployProvApsCapHoldOffTime,
       "deployProvApsCapProtectionMech": deployProvApsCapProtectionMech,
       "deployProvApsCapWorkingAid": deployProvApsCapWorkingAid,
       "deployProvApsCapProtectionAid": deployProvApsCapProtectionAid,
       "deployProvApsCapSignalDegradeSwitching": deployProvApsCapSignalDegradeSwitching,
       "deployProvApsCapSignalFailureSwitching": deployProvApsCapSignalFailureSwitching,
       "deployProvApsCapFarEndIp": deployProvApsCapFarEndIp,
       "deployProvApsCapPeerAid": deployProvApsCapPeerAid,
       "deployProvApsCapApsType": deployProvApsCapApsType,
       "deployProvApsCapRevertMode": deployProvApsCapRevertMode,
       "deployProvApsCapWaitToRestore": deployProvApsCapWaitToRestore,
       "deployProvApsCapDirection": deployProvApsCapDirection,
       "deployProvApsDefaultsTable": deployProvApsDefaultsTable,
       "deployProvApsDefaultsEntry": deployProvApsDefaultsEntry,
       "deployProvApsDefaultsRowStatus": deployProvApsDefaultsRowStatus,
       "deployProvApsDefaultsForceDestroy": deployProvApsDefaultsForceDestroy,
       "deployProvApsDefaultsSDswitching": deployProvApsDefaultsSDswitching,
       "deployProvApsDefaultsHoldOffTime": deployProvApsDefaultsHoldOffTime,
       "deployProvApsDefaultsProtectionMech": deployProvApsDefaultsProtectionMech,
       "deployProvApsDefaultsWorkingAid": deployProvApsDefaultsWorkingAid,
       "deployProvApsDefaultsProtectionAid": deployProvApsDefaultsProtectionAid,
       "deployProvApsDefaultsSignalDegradeSwitching": deployProvApsDefaultsSignalDegradeSwitching,
       "deployProvApsDefaultsSignalFailureSwitching": deployProvApsDefaultsSignalFailureSwitching,
       "deployProvApsDefaultsFarEndIp": deployProvApsDefaultsFarEndIp,
       "deployProvApsDefaultsPeerAid": deployProvApsDefaultsPeerAid,
       "deployProvApsDefaultsApsType": deployProvApsDefaultsApsType,
       "deployProvApsDefaultsRevertMode": deployProvApsDefaultsRevertMode,
       "deployProvApsDefaultsWaitToRestore": deployProvApsDefaultsWaitToRestore,
       "deployProvApsDefaultsDirection": deployProvApsDefaultsDirection,
       "deployProvApsWorkingAidCapsTable": deployProvApsWorkingAidCapsTable,
       "deployProvApsWorkingAidCapsEntry": deployProvApsWorkingAidCapsEntry,
       "deployProvApsWorkingAidCapsIndex": deployProvApsWorkingAidCapsIndex,
       "deployProvApsProtectingAidCapsTable": deployProvApsProtectingAidCapsTable,
       "deployProvApsProtectingAidCapsEntry": deployProvApsProtectingAidCapsEntry,
       "deployProvApsProtectingAidCapsIndex": deployProvApsProtectingAidCapsIndex,
       "deployProvDcnTable": deployProvDcnTable,
       "deployProvDcnEntry": deployProvDcnEntry,
       "deployProvDcnRowStatus": deployProvDcnRowStatus,
       "deployProvDcnForceDestroy": deployProvDcnForceDestroy,
       "deployProvDcnType": deployProvDcnType,
       "deployProvDcnAdmin": deployProvDcnAdmin,
       "deployProvDcnExternalVid": deployProvDcnExternalVid,
       "deployProvDcnLanAid": deployProvDcnLanAid,
       "deployProvDcnCapTable": deployProvDcnCapTable,
       "deployProvDcnCapEntry": deployProvDcnCapEntry,
       "deployProvDcnCapRowStatus": deployProvDcnCapRowStatus,
       "deployProvDcnCapForceDestroy": deployProvDcnCapForceDestroy,
       "deployProvDcnCapType": deployProvDcnCapType,
       "deployProvDcnCapAdmin": deployProvDcnCapAdmin,
       "deployProvDcnCapExternalVid": deployProvDcnCapExternalVid,
       "deployProvDcnCapLanAid": deployProvDcnCapLanAid,
       "deployProvDcnDefaultsTable": deployProvDcnDefaultsTable,
       "deployProvDcnDefaultsEntry": deployProvDcnDefaultsEntry,
       "deployProvDcnDefaultsRowStatus": deployProvDcnDefaultsRowStatus,
       "deployProvDcnDefaultsForceDestroy": deployProvDcnDefaultsForceDestroy,
       "deployProvDcnDefaultsType": deployProvDcnDefaultsType,
       "deployProvDcnDefaultsAdmin": deployProvDcnDefaultsAdmin,
       "deployProvDcnDefaultsExternalVid": deployProvDcnDefaultsExternalVid,
       "deployProvDcnDefaultsLanAid": deployProvDcnDefaultsLanAid,
       "deployProvPppIpTable": deployProvPppIpTable,
       "deployProvPppIpEntry": deployProvPppIpEntry,
       "deployProvPppIpRowStatus": deployProvPppIpRowStatus,
       "deployProvPppIpForceDestroy": deployProvPppIpForceDestroy,
       "deployProvPppIpType": deployProvPppIpType,
       "deployProvPppIpNearEndIp": deployProvPppIpNearEndIp,
       "deployProvPppIpFarEndIp": deployProvPppIpFarEndIp,
       "deployProvPppIpBitrate": deployProvPppIpBitrate,
       "deployProvPppIpOspf": deployProvPppIpOspf,
       "deployProvPppIpMetric": deployProvPppIpMetric,
       "deployProvPppIpDefaultGateway": deployProvPppIpDefaultGateway,
       "deployProvPppIpProxyArp": deployProvPppIpProxyArp,
       "deployProvPppIpAdmin": deployProvPppIpAdmin,
       "deployProvPppIpAreaId": deployProvPppIpAreaId,
       "deployProvPppIpBaud": deployProvPppIpBaud,
       "deployProvPppIpFlowControl": deployProvPppIpFlowControl,
       "deployProvPppIpIpType": deployProvPppIpIpType,
       "deployProvPppIpAuthType": deployProvPppIpAuthType,
       "deployProvPppIpAuthString": deployProvPppIpAuthString,
       "deployProvPppIpCapTable": deployProvPppIpCapTable,
       "deployProvPppIpCapEntry": deployProvPppIpCapEntry,
       "deployProvPppIpCapRowStatus": deployProvPppIpCapRowStatus,
       "deployProvPppIpCapForceDestroy": deployProvPppIpCapForceDestroy,
       "deployProvPppIpCapType": deployProvPppIpCapType,
       "deployProvPppIpCapNearEndIp": deployProvPppIpCapNearEndIp,
       "deployProvPppIpCapFarEndIp": deployProvPppIpCapFarEndIp,
       "deployProvPppIpCapBitrate": deployProvPppIpCapBitrate,
       "deployProvPppIpCapOspf": deployProvPppIpCapOspf,
       "deployProvPppIpCapMetric": deployProvPppIpCapMetric,
       "deployProvPppIpCapDefaultGateway": deployProvPppIpCapDefaultGateway,
       "deployProvPppIpCapProxyArp": deployProvPppIpCapProxyArp,
       "deployProvPppIpCapAdmin": deployProvPppIpCapAdmin,
       "deployProvPppIpCapAreaId": deployProvPppIpCapAreaId,
       "deployProvPppIpCapBaud": deployProvPppIpCapBaud,
       "deployProvPppIpCapFlowControl": deployProvPppIpCapFlowControl,
       "deployProvPppIpCapIpType": deployProvPppIpCapIpType,
       "deployProvPppIpCapAuthType": deployProvPppIpCapAuthType,
       "deployProvPppIpCapAuthString": deployProvPppIpCapAuthString,
       "deployProvPppIpDefaultsTable": deployProvPppIpDefaultsTable,
       "deployProvPppIpDefaultsEntry": deployProvPppIpDefaultsEntry,
       "deployProvPppIpDefaultsRowStatus": deployProvPppIpDefaultsRowStatus,
       "deployProvPppIpDefaultsForceDestroy": deployProvPppIpDefaultsForceDestroy,
       "deployProvPppIpDefaultsType": deployProvPppIpDefaultsType,
       "deployProvPppIpDefaultsNearEndIp": deployProvPppIpDefaultsNearEndIp,
       "deployProvPppIpDefaultsFarEndIp": deployProvPppIpDefaultsFarEndIp,
       "deployProvPppIpDefaultsBitrate": deployProvPppIpDefaultsBitrate,
       "deployProvPppIpDefaultsOspf": deployProvPppIpDefaultsOspf,
       "deployProvPppIpDefaultsMetric": deployProvPppIpDefaultsMetric,
       "deployProvPppIpDefaultsDefaultGateway": deployProvPppIpDefaultsDefaultGateway,
       "deployProvPppIpDefaultsProxyArp": deployProvPppIpDefaultsProxyArp,
       "deployProvPppIpDefaultsAdmin": deployProvPppIpDefaultsAdmin,
       "deployProvPppIpDefaultsAreaId": deployProvPppIpDefaultsAreaId,
       "deployProvPppIpDefaultsBaud": deployProvPppIpDefaultsBaud,
       "deployProvPppIpDefaultsFlowControl": deployProvPppIpDefaultsFlowControl,
       "deployProvPppIpDefaultsIpType": deployProvPppIpDefaultsIpType,
       "deployProvPppIpDefaultsAuthType": deployProvPppIpDefaultsAuthType,
       "deployProvPppIpDefaultsAuthString": deployProvPppIpDefaultsAuthString,
       "deployProvCrsDcnTable": deployProvCrsDcnTable,
       "deployProvCrsDcnEntry": deployProvCrsDcnEntry,
       "deployProvCrsDcnRowStatus": deployProvCrsDcnRowStatus,
       "deployProvCrsDcnForceDestroy": deployProvCrsDcnForceDestroy,
       "deployProvCrsDcnType": deployProvCrsDcnType,
       "deployProvCrsDcnLink": deployProvCrsDcnLink,
       "deployProvCrsDcnEcc": deployProvCrsDcnEcc,
       "deployProvCrsDcnCapTable": deployProvCrsDcnCapTable,
       "deployProvCrsDcnCapEntry": deployProvCrsDcnCapEntry,
       "deployProvCrsDcnCapRowStatus": deployProvCrsDcnCapRowStatus,
       "deployProvCrsDcnCapForceDestroy": deployProvCrsDcnCapForceDestroy,
       "deployProvCrsDcnCapType": deployProvCrsDcnCapType,
       "deployProvCrsDcnCapLink": deployProvCrsDcnCapLink,
       "deployProvCrsDcnCapEcc": deployProvCrsDcnCapEcc,
       "deployProvCrsDcnDefaultsTable": deployProvCrsDcnDefaultsTable,
       "deployProvCrsDcnDefaultsEntry": deployProvCrsDcnDefaultsEntry,
       "deployProvCrsDcnDefaultsRowStatus": deployProvCrsDcnDefaultsRowStatus,
       "deployProvCrsDcnDefaultsForceDestroy": deployProvCrsDcnDefaultsForceDestroy,
       "deployProvCrsDcnDefaultsType": deployProvCrsDcnDefaultsType,
       "deployProvCrsDcnDefaultsLink": deployProvCrsDcnDefaultsLink,
       "deployProvCrsDcnDefaultsEcc": deployProvCrsDcnDefaultsEcc,
       "deployProvCrsDcnLinkAidCapsTable": deployProvCrsDcnLinkAidCapsTable,
       "deployProvCrsDcnLinkAidCapsEntry": deployProvCrsDcnLinkAidCapsEntry,
       "deployProvCrsDcnLinkAidCapsIndex": deployProvCrsDcnLinkAidCapsIndex,
       "deployProvCrsDcnEccAidCapsTable": deployProvCrsDcnEccAidCapsTable,
       "deployProvCrsDcnEccAidCapsEntry": deployProvCrsDcnEccAidCapsEntry,
       "deployProvCrsDcnEccAidCapsIndex": deployProvCrsDcnEccAidCapsIndex,
       "deployProvApsPeerAidCapsTable": deployProvApsPeerAidCapsTable,
       "deployProvApsPeerAidCapsEntry": deployProvApsPeerAidCapsEntry,
       "deployProvApsPeerAidCapsIndex": deployProvApsPeerAidCapsIndex,
       "deployProvLanTable": deployProvLanTable,
       "deployProvLanEntry": deployProvLanEntry,
       "deployProvLanRowStatus": deployProvLanRowStatus,
       "deployProvLanForceDestroy": deployProvLanForceDestroy,
       "deployProvLanType": deployProvLanType,
       "deployProvLanOspf": deployProvLanOspf,
       "deployProvLanMetric": deployProvLanMetric,
       "deployProvLanAdmin": deployProvLanAdmin,
       "deployProvLanAreaId": deployProvLanAreaId,
       "deployProvLanIpType": deployProvLanIpType,
       "deployProvLanIpAddr": deployProvLanIpAddr,
       "deployProvLanIpMask": deployProvLanIpMask,
       "deployProvLanPrio": deployProvLanPrio,
       "deployProvLanAuthType": deployProvLanAuthType,
       "deployProvLanAuthString": deployProvLanAuthString,
       "deployProvLanCapTable": deployProvLanCapTable,
       "deployProvLanCapEntry": deployProvLanCapEntry,
       "deployProvLanCapRowStatus": deployProvLanCapRowStatus,
       "deployProvLanCapForceDestroy": deployProvLanCapForceDestroy,
       "deployProvLanCapType": deployProvLanCapType,
       "deployProvLanCapOspf": deployProvLanCapOspf,
       "deployProvLanCapMetric": deployProvLanCapMetric,
       "deployProvLanCapAdmin": deployProvLanCapAdmin,
       "deployProvLanCapAreaId": deployProvLanCapAreaId,
       "deployProvLanCapIpType": deployProvLanCapIpType,
       "deployProvLanCapIpAddr": deployProvLanCapIpAddr,
       "deployProvLanCapIpMask": deployProvLanCapIpMask,
       "deployProvLanCapPrio": deployProvLanCapPrio,
       "deployProvLanCapAuthType": deployProvLanCapAuthType,
       "deployProvLanCapAuthString": deployProvLanCapAuthString,
       "deployProvLanDefaultsTable": deployProvLanDefaultsTable,
       "deployProvLanDefaultsEntry": deployProvLanDefaultsEntry,
       "deployProvLanDefaultsRowStatus": deployProvLanDefaultsRowStatus,
       "deployProvLanDefaultsForceDestroy": deployProvLanDefaultsForceDestroy,
       "deployProvLanDefaultsType": deployProvLanDefaultsType,
       "deployProvLanDefaultsOspf": deployProvLanDefaultsOspf,
       "deployProvLanDefaultsMetric": deployProvLanDefaultsMetric,
       "deployProvLanDefaultsAdmin": deployProvLanDefaultsAdmin,
       "deployProvLanDefaultsAreaId": deployProvLanDefaultsAreaId,
       "deployProvLanDefaultsIpType": deployProvLanDefaultsIpType,
       "deployProvLanDefaultsIpAddr": deployProvLanDefaultsIpAddr,
       "deployProvLanDefaultsIpMask": deployProvLanDefaultsIpMask,
       "deployProvLanDefaultsPrio": deployProvLanDefaultsPrio,
       "deployProvLanDefaultsAuthType": deployProvLanDefaultsAuthType,
       "deployProvLanDefaultsAuthString": deployProvLanDefaultsAuthString,
       "deployProvModuleLanAidCapsTable": deployProvModuleLanAidCapsTable,
       "deployProvModuleLanAidCapsEntry": deployProvModuleLanAidCapsEntry,
       "deployProvModuleLanAidCapsIndex": deployProvModuleLanAidCapsIndex,
       "deployProvTifInputTable": deployProvTifInputTable,
       "deployProvTifInputEntry": deployProvTifInputEntry,
       "deployProvTifInputRowStatus": deployProvTifInputRowStatus,
       "deployProvTifInputForceDestroy": deployProvTifInputForceDestroy,
       "deployProvTifInputType": deployProvTifInputType,
       "deployProvTifInputTifAlarmType": deployProvTifInputTifAlarmType,
       "deployProvTifInputTifAlarmMessage": deployProvTifInputTifAlarmMessage,
       "deployProvTifInputInvertTifInputLogic": deployProvTifInputInvertTifInputLogic,
       "deployProvTifInputAdmin": deployProvTifInputAdmin,
       "deployProvTifInputCapTable": deployProvTifInputCapTable,
       "deployProvTifInputCapEntry": deployProvTifInputCapEntry,
       "deployProvTifInputCapRowStatus": deployProvTifInputCapRowStatus,
       "deployProvTifInputCapForceDestroy": deployProvTifInputCapForceDestroy,
       "deployProvTifInputCapType": deployProvTifInputCapType,
       "deployProvTifInputCapTifAlarmType": deployProvTifInputCapTifAlarmType,
       "deployProvTifInputCapTifAlarmMessage": deployProvTifInputCapTifAlarmMessage,
       "deployProvTifInputCapInvertTifInputLogic": deployProvTifInputCapInvertTifInputLogic,
       "deployProvTifInputCapAdmin": deployProvTifInputCapAdmin,
       "deployProvTifInputDefaultsTable": deployProvTifInputDefaultsTable,
       "deployProvTifInputDefaultsEntry": deployProvTifInputDefaultsEntry,
       "deployProvTifInputDefaultsRowStatus": deployProvTifInputDefaultsRowStatus,
       "deployProvTifInputDefaultsForceDestroy": deployProvTifInputDefaultsForceDestroy,
       "deployProvTifInputDefaultsType": deployProvTifInputDefaultsType,
       "deployProvTifInputDefaultsTifAlarmType": deployProvTifInputDefaultsTifAlarmType,
       "deployProvTifInputDefaultsTifAlarmMessage": deployProvTifInputDefaultsTifAlarmMessage,
       "deployProvTifInputDefaultsInvertTifInputLogic": deployProvTifInputDefaultsInvertTifInputLogic,
       "deployProvTifInputDefaultsAdmin": deployProvTifInputDefaultsAdmin,
       "deployProvTifOutputTable": deployProvTifOutputTable,
       "deployProvTifOutputEntry": deployProvTifOutputEntry,
       "deployProvTifOutputRowStatus": deployProvTifOutputRowStatus,
       "deployProvTifOutputForceDestroy": deployProvTifOutputForceDestroy,
       "deployProvTifOutputType": deployProvTifOutputType,
       "deployProvTifOutputTelemetry": deployProvTifOutputTelemetry,
       "deployProvTifOutputAdmin": deployProvTifOutputAdmin,
       "deployProvTifOutputCapTable": deployProvTifOutputCapTable,
       "deployProvTifOutputCapEntry": deployProvTifOutputCapEntry,
       "deployProvTifOutputCapRowStatus": deployProvTifOutputCapRowStatus,
       "deployProvTifOutputCapForceDestroy": deployProvTifOutputCapForceDestroy,
       "deployProvTifOutputCapType": deployProvTifOutputCapType,
       "deployProvTifOutputCapTelemetry": deployProvTifOutputCapTelemetry,
       "deployProvTifOutputCapAdmin": deployProvTifOutputCapAdmin,
       "deployProvTifOutputDefaultsTable": deployProvTifOutputDefaultsTable,
       "deployProvTifOutputDefaultsEntry": deployProvTifOutputDefaultsEntry,
       "deployProvTifOutputDefaultsRowStatus": deployProvTifOutputDefaultsRowStatus,
       "deployProvTifOutputDefaultsForceDestroy": deployProvTifOutputDefaultsForceDestroy,
       "deployProvTifOutputDefaultsType": deployProvTifOutputDefaultsType,
       "deployProvTifOutputDefaultsTelemetry": deployProvTifOutputDefaultsTelemetry,
       "deployProvTifOutputDefaultsAdmin": deployProvTifOutputDefaultsAdmin,
       "changeServiceDeployProvIfTable": changeServiceDeployProvIfTable,
       "changeServiceDeployProvIfEntry": changeServiceDeployProvIfEntry,
       "changeServiceDeployProvIfRowStatus": changeServiceDeployProvIfRowStatus,
       "changeServiceDeployProvIfForceDestroy": changeServiceDeployProvIfForceDestroy,
       "changeServiceDeployProvIfType": changeServiceDeployProvIfType,
       "changeServiceDeployProvIfPayload": changeServiceDeployProvIfPayload,
       "changeServiceDeployProvIfBehaviour": changeServiceDeployProvIfBehaviour,
       "changeServiceDeployProvIfTerminationLevel": changeServiceDeployProvIfTerminationLevel,
       "changeServiceDeployProvIfAlsMode": changeServiceDeployProvIfAlsMode,
       "changeServiceDeployProvIfErrorForwarding": changeServiceDeployProvIfErrorForwarding,
       "changeServiceDeployProvIfLaserOffDelayFunction": changeServiceDeployProvIfLaserOffDelayFunction,
       "changeServiceDeployProvIfFecType": changeServiceDeployProvIfFecType,
       "changeServiceDeployProvIfTimingSource": changeServiceDeployProvIfTimingSource,
       "changeServiceDeployProvIfTcmALevel": changeServiceDeployProvIfTcmALevel,
       "changeServiceDeployProvIfTcmBLevel": changeServiceDeployProvIfTcmBLevel,
       "changeServiceDeployProvIfSigDegThresSonetLine": changeServiceDeployProvIfSigDegThresSonetLine,
       "changeServiceDeployProvIfSigDegThresSdhMs": changeServiceDeployProvIfSigDegThresSdhMs,
       "changeServiceDeployProvIfSignalDegradePeriod": changeServiceDeployProvIfSignalDegradePeriod,
       "changeServiceDeployProvIfAutonegotiation": changeServiceDeployProvIfAutonegotiation,
       "changeServiceDeployProvIfBitrate": changeServiceDeployProvIfBitrate,
       "changeServiceDeployProvIfDuplex": changeServiceDeployProvIfDuplex,
       "changeServiceDeployProvIfFlowControl": changeServiceDeployProvIfFlowControl,
       "changeServiceDeployProvIfOtnStuffing": changeServiceDeployProvIfOtnStuffing,
       "changeServiceDeployProvIfSigDegThresOtu": changeServiceDeployProvIfSigDegThresOtu,
       "changeServiceDeployProvIfSigDegPeriodOtu": changeServiceDeployProvIfSigDegPeriodOtu,
       "changeServiceDeployProvIfSigDegThresOdu": changeServiceDeployProvIfSigDegThresOdu,
       "changeServiceDeployProvIfSigDegPeriodOdu": changeServiceDeployProvIfSigDegPeriodOdu,
       "changeServiceDeployProvIfSigDegThresOduTcmA": changeServiceDeployProvIfSigDegThresOduTcmA,
       "changeServiceDeployProvIfSigDegPeriodOduTcmA": changeServiceDeployProvIfSigDegPeriodOduTcmA,
       "changeServiceDeployProvIfSigDegThresOduTcmB": changeServiceDeployProvIfSigDegThresOduTcmB,
       "changeServiceDeployProvIfSigDegPeriodOduTcmB": changeServiceDeployProvIfSigDegPeriodOduTcmB,
       "changeServiceDeployProvIfTilt": changeServiceDeployProvIfTilt,
       "changeServiceDeployProvIfGain": changeServiceDeployProvIfGain,
       "changeServiceDeployProvIfAdmin": changeServiceDeployProvIfAdmin,
       "changeServiceDeployProvIfAttenuationGradient": changeServiceDeployProvIfAttenuationGradient,
       "changeServiceDeployProvIfSigDegThresReceiver": changeServiceDeployProvIfSigDegThresReceiver,
       "changeServiceDeployProvIfTcmCLevel": changeServiceDeployProvIfTcmCLevel,
       "changeServiceDeployProvIfSigDegThresOduTcmC": changeServiceDeployProvIfSigDegThresOduTcmC,
       "changeServiceDeployProvIfSigDegPeriodOduTcmC": changeServiceDeployProvIfSigDegPeriodOduTcmC,
       "changeServiceDeployProvIfDisparityCorrection": changeServiceDeployProvIfDisparityCorrection,
       "changeServiceDeployProvIfIpAddr": changeServiceDeployProvIfIpAddr,
       "changeServiceDeployProvIfIpMask": changeServiceDeployProvIfIpMask,
       "changeServiceDeployProvIfOspf": changeServiceDeployProvIfOspf,
       "changeServiceDeployProvIfMetric": changeServiceDeployProvIfMetric,
       "changeServiceDeployProvIfAreaId": changeServiceDeployProvIfAreaId,
       "changeServiceDeployProvIfTraceFormSonetSection": changeServiceDeployProvIfTraceFormSonetSection,
       "changeServiceDeployProvIfTraceExpectedSonetSection": changeServiceDeployProvIfTraceExpectedSonetSection,
       "changeServiceDeployProvIfTraceTransmitSonetSection": changeServiceDeployProvIfTraceTransmitSonetSection,
       "changeServiceDeployProvIfTimModeSonetSection": changeServiceDeployProvIfTimModeSonetSection,
       "changeServiceDeployProvIfTraceExpectedOtu": changeServiceDeployProvIfTraceExpectedOtu,
       "changeServiceDeployProvIfTraceTransmitSapiOtu": changeServiceDeployProvIfTraceTransmitSapiOtu,
       "changeServiceDeployProvIfTraceTransmitDapiOtu": changeServiceDeployProvIfTraceTransmitDapiOtu,
       "changeServiceDeployProvIfTraceTransmitOpspOtu": changeServiceDeployProvIfTraceTransmitOpspOtu,
       "changeServiceDeployProvIfTimModeOtu": changeServiceDeployProvIfTimModeOtu,
       "changeServiceDeployProvIfTraceExpectedOdu": changeServiceDeployProvIfTraceExpectedOdu,
       "changeServiceDeployProvIfTraceTransmitSapiOdu": changeServiceDeployProvIfTraceTransmitSapiOdu,
       "changeServiceDeployProvIfTraceTransmitDapiOdu": changeServiceDeployProvIfTraceTransmitDapiOdu,
       "changeServiceDeployProvIfTraceTransmitOpspOdu": changeServiceDeployProvIfTraceTransmitOpspOdu,
       "changeServiceDeployProvIfTimModeOdu": changeServiceDeployProvIfTimModeOdu,
       "changeServiceDeployProvIfTraceExpectedOduTcmA": changeServiceDeployProvIfTraceExpectedOduTcmA,
       "changeServiceDeployProvIfTraceTransmitSapiOduTcmA": changeServiceDeployProvIfTraceTransmitSapiOduTcmA,
       "changeServiceDeployProvIfTraceTransmitDapiOduTcmA": changeServiceDeployProvIfTraceTransmitDapiOduTcmA,
       "changeServiceDeployProvIfTraceTransmitOpspOduTcmA": changeServiceDeployProvIfTraceTransmitOpspOduTcmA,
       "changeServiceDeployProvIfTimModeOduTcmA": changeServiceDeployProvIfTimModeOduTcmA,
       "changeServiceDeployProvIfTraceExpectedOduTcmB": changeServiceDeployProvIfTraceExpectedOduTcmB,
       "changeServiceDeployProvIfTraceTransmitSapiOduTcmB": changeServiceDeployProvIfTraceTransmitSapiOduTcmB,
       "changeServiceDeployProvIfTraceTransmitDapiOduTcmB": changeServiceDeployProvIfTraceTransmitDapiOduTcmB,
       "changeServiceDeployProvIfTraceTransmitOpspOduTcmB": changeServiceDeployProvIfTraceTransmitOpspOduTcmB,
       "changeServiceDeployProvIfTimModeOduTcmB": changeServiceDeployProvIfTimModeOduTcmB,
       "changeServiceDeployProvIfTraceExpectedOduTcmC": changeServiceDeployProvIfTraceExpectedOduTcmC,
       "changeServiceDeployProvIfTraceTransmitSapiOduTcmC": changeServiceDeployProvIfTraceTransmitSapiOduTcmC,
       "changeServiceDeployProvIfTraceTransmitDapiOduTcmC": changeServiceDeployProvIfTraceTransmitDapiOduTcmC,
       "changeServiceDeployProvIfTraceTransmitOpspOduTcmC": changeServiceDeployProvIfTraceTransmitOpspOduTcmC,
       "changeServiceDeployProvIfTimModeOduTcmC": changeServiceDeployProvIfTimModeOduTcmC,
       "changeServiceDeployProvIfChannelProvisioning": changeServiceDeployProvIfChannelProvisioning,
       "changeServiceDeployProvIfVariableGain": changeServiceDeployProvIfVariableGain,
       "changeServiceDeployProvIfBand": changeServiceDeployProvIfBand,
       "changeServiceDeployProvIfSigDegThreshold": changeServiceDeployProvIfSigDegThreshold,
       "changeServiceDeployProvIfSigDegPeriodIntegration": changeServiceDeployProvIfSigDegPeriodIntegration,
       "changeServiceDeployProvIfVoaMode": changeServiceDeployProvIfVoaMode,
       "changeServiceDeployProvIfOpticalSetPoint": changeServiceDeployProvIfOpticalSetPoint,
       "changeServiceDeployProvIfVoaSetpoint": changeServiceDeployProvIfVoaSetpoint,
       "changeServiceDeployProvIfLanAid": changeServiceDeployProvIfLanAid,
       "changeServiceDeployProvIfAprHighThreshold": changeServiceDeployProvIfAprHighThreshold,
       "changeServiceDeployProvIfPumpPower": changeServiceDeployProvIfPumpPower,
       "changeServiceDeployProvIfWdmRxChannel": changeServiceDeployProvIfWdmRxChannel,
       "changeServiceDeployProvIfSigDegThresSonetSection": changeServiceDeployProvIfSigDegThresSonetSection,
       "changeServiceDeployProvIfSigDegThresSdhSection": changeServiceDeployProvIfSigDegThresSdhSection,
       "changeServiceDeployProvIfSigDegPeriodSdhSection": changeServiceDeployProvIfSigDegPeriodSdhSection,
       "changeServiceDeployProvIfDispersionMode": changeServiceDeployProvIfDispersionMode,
       "changeServiceDeployProvIfDispersionSetting": changeServiceDeployProvIfDispersionSetting,
       "changeServiceDeployProvIfIpType": changeServiceDeployProvIfIpType,
       "changeServiceDeployProvIfOffset": changeServiceDeployProvIfOffset,
       "changeServiceDeployProvIfFunction": changeServiceDeployProvIfFunction,
       "changeServiceDeployProvIfFarEndCommunication": changeServiceDeployProvIfFarEndCommunication,
       "changeServiceDeployProvIfEqlzAdmin": changeServiceDeployProvIfEqlzAdmin,
       "changeServiceDeployProvIfTxOffDelay": changeServiceDeployProvIfTxOffDelay,
       "changeServiceDeployProvIfOpuPayloadType": changeServiceDeployProvIfOpuPayloadType,
       "changeServiceDeployProvIfOscOpticalSetpoint": changeServiceDeployProvIfOscOpticalSetpoint,
       "changeServiceDeployProvIfFiberBrand": changeServiceDeployProvIfFiberBrand,
       "changeServiceDeployProvIfXfpDecisionThres": changeServiceDeployProvIfXfpDecisionThres,
       "changeServiceDeployProvIfLaserDelayTimer": changeServiceDeployProvIfLaserDelayTimer,
       "changeServiceDeployProvIfLaserOffTimer": changeServiceDeployProvIfLaserOffTimer,
       "changeServiceDeployProvIfLaserOnTimer": changeServiceDeployProvIfLaserOnTimer,
       "changeServiceDeployProvIfLaneChannelSetting": changeServiceDeployProvIfLaneChannelSetting,
       "changeServiceDeployProvIfBip": changeServiceDeployProvIfBip,
       "changeServiceDeployProvIfCodeGain": changeServiceDeployProvIfCodeGain,
       "changeServiceDeployProvIfCapTable": changeServiceDeployProvIfCapTable,
       "changeServiceDeployProvIfCapEntry": changeServiceDeployProvIfCapEntry,
       "changeServiceDeployProvIfCapRowStatus": changeServiceDeployProvIfCapRowStatus,
       "changeServiceDeployProvIfCapForceDestroy": changeServiceDeployProvIfCapForceDestroy,
       "changeServiceDeployProvIfCapType": changeServiceDeployProvIfCapType,
       "changeServiceDeployProvIfCapPayload": changeServiceDeployProvIfCapPayload,
       "changeServiceDeployProvIfCapBehaviour": changeServiceDeployProvIfCapBehaviour,
       "changeServiceDeployProvIfCapTerminationLevel": changeServiceDeployProvIfCapTerminationLevel,
       "changeServiceDeployProvIfCapAlsMode": changeServiceDeployProvIfCapAlsMode,
       "changeServiceDeployProvIfCapErrorForwarding": changeServiceDeployProvIfCapErrorForwarding,
       "changeServiceDeployProvIfCapLaserOffDelayFunction": changeServiceDeployProvIfCapLaserOffDelayFunction,
       "changeServiceDeployProvIfCapFecType": changeServiceDeployProvIfCapFecType,
       "changeServiceDeployProvIfCapTimingSource": changeServiceDeployProvIfCapTimingSource,
       "changeServiceDeployProvIfCapTcmALevel": changeServiceDeployProvIfCapTcmALevel,
       "changeServiceDeployProvIfCapTcmBLevel": changeServiceDeployProvIfCapTcmBLevel,
       "changeServiceDeployProvIfCapSigDegThresSonetLine": changeServiceDeployProvIfCapSigDegThresSonetLine,
       "changeServiceDeployProvIfCapSigDegThresSdhMs": changeServiceDeployProvIfCapSigDegThresSdhMs,
       "changeServiceDeployProvIfCapSignalDegradePeriod": changeServiceDeployProvIfCapSignalDegradePeriod,
       "changeServiceDeployProvIfCapAutonegotiation": changeServiceDeployProvIfCapAutonegotiation,
       "changeServiceDeployProvIfCapBitrate": changeServiceDeployProvIfCapBitrate,
       "changeServiceDeployProvIfCapDuplex": changeServiceDeployProvIfCapDuplex,
       "changeServiceDeployProvIfCapFlowControl": changeServiceDeployProvIfCapFlowControl,
       "changeServiceDeployProvIfCapOtnStuffing": changeServiceDeployProvIfCapOtnStuffing,
       "changeServiceDeployProvIfCapSigDegThresOtu": changeServiceDeployProvIfCapSigDegThresOtu,
       "changeServiceDeployProvIfCapSigDegPeriodOtu": changeServiceDeployProvIfCapSigDegPeriodOtu,
       "changeServiceDeployProvIfCapSigDegThresOdu": changeServiceDeployProvIfCapSigDegThresOdu,
       "changeServiceDeployProvIfCapSigDegPeriodOdu": changeServiceDeployProvIfCapSigDegPeriodOdu,
       "changeServiceDeployProvIfCapSigDegThresOduTcmA": changeServiceDeployProvIfCapSigDegThresOduTcmA,
       "changeServiceDeployProvIfCapSigDegPeriodOduTcmA": changeServiceDeployProvIfCapSigDegPeriodOduTcmA,
       "changeServiceDeployProvIfCapSigDegThresOduTcmB": changeServiceDeployProvIfCapSigDegThresOduTcmB,
       "changeServiceDeployProvIfCapSigDegPeriodOduTcmB": changeServiceDeployProvIfCapSigDegPeriodOduTcmB,
       "changeServiceDeployProvIfCapTilt": changeServiceDeployProvIfCapTilt,
       "changeServiceDeployProvIfCapGain": changeServiceDeployProvIfCapGain,
       "changeServiceDeployProvIfCapAdmin": changeServiceDeployProvIfCapAdmin,
       "changeServiceDeployProvIfCapAttenuationGradient": changeServiceDeployProvIfCapAttenuationGradient,
       "changeServiceDeployProvIfCapSigDegThresReceiver": changeServiceDeployProvIfCapSigDegThresReceiver,
       "changeServiceDeployProvIfCapTcmCLevel": changeServiceDeployProvIfCapTcmCLevel,
       "changeServiceDeployProvIfCapSigDegThresOduTcmC": changeServiceDeployProvIfCapSigDegThresOduTcmC,
       "changeServiceDeployProvIfCapSigDegPeriodOduTcmC": changeServiceDeployProvIfCapSigDegPeriodOduTcmC,
       "changeServiceDeployProvIfCapDisparityCorrection": changeServiceDeployProvIfCapDisparityCorrection,
       "changeServiceDeployProvIfCapIpAddr": changeServiceDeployProvIfCapIpAddr,
       "changeServiceDeployProvIfCapIpMask": changeServiceDeployProvIfCapIpMask,
       "changeServiceDeployProvIfCapOspf": changeServiceDeployProvIfCapOspf,
       "changeServiceDeployProvIfCapMetric": changeServiceDeployProvIfCapMetric,
       "changeServiceDeployProvIfCapAreaId": changeServiceDeployProvIfCapAreaId,
       "changeServiceDeployProvIfCapTraceFormSonetSection": changeServiceDeployProvIfCapTraceFormSonetSection,
       "changeServiceDeployProvIfCapTraceExpectedSonetSection": changeServiceDeployProvIfCapTraceExpectedSonetSection,
       "changeServiceDeployProvIfCapTraceTransmitSonetSection": changeServiceDeployProvIfCapTraceTransmitSonetSection,
       "changeServiceDeployProvIfCapTimModeSonetSection": changeServiceDeployProvIfCapTimModeSonetSection,
       "changeServiceDeployProvIfCapTraceExpectedOtu": changeServiceDeployProvIfCapTraceExpectedOtu,
       "changeServiceDeployProvIfCapTraceTransmitSapiOtu": changeServiceDeployProvIfCapTraceTransmitSapiOtu,
       "changeServiceDeployProvIfCapTraceTransmitDapiOtu": changeServiceDeployProvIfCapTraceTransmitDapiOtu,
       "changeServiceDeployProvIfCapTraceTransmitOpspOtu": changeServiceDeployProvIfCapTraceTransmitOpspOtu,
       "changeServiceDeployProvIfCapTimModeOtu": changeServiceDeployProvIfCapTimModeOtu,
       "changeServiceDeployProvIfCapTraceExpectedOdu": changeServiceDeployProvIfCapTraceExpectedOdu,
       "changeServiceDeployProvIfCapTraceTransmitSapiOdu": changeServiceDeployProvIfCapTraceTransmitSapiOdu,
       "changeServiceDeployProvIfCapTraceTransmitDapiOdu": changeServiceDeployProvIfCapTraceTransmitDapiOdu,
       "changeServiceDeployProvIfCapTraceTransmitOpspOdu": changeServiceDeployProvIfCapTraceTransmitOpspOdu,
       "changeServiceDeployProvIfCapTimModeOdu": changeServiceDeployProvIfCapTimModeOdu,
       "changeServiceDeployProvIfCapTraceExpectedOduTcmA": changeServiceDeployProvIfCapTraceExpectedOduTcmA,
       "changeServiceDeployProvIfCapTraceTransmitSapiOduTcmA": changeServiceDeployProvIfCapTraceTransmitSapiOduTcmA,
       "changeServiceDeployProvIfCapTraceTransmitDapiOduTcmA": changeServiceDeployProvIfCapTraceTransmitDapiOduTcmA,
       "changeServiceDeployProvIfCapTraceTransmitOpspOduTcmA": changeServiceDeployProvIfCapTraceTransmitOpspOduTcmA,
       "changeServiceDeployProvIfCapTimModeOduTcmA": changeServiceDeployProvIfCapTimModeOduTcmA,
       "changeServiceDeployProvIfCapTraceExpectedOduTcmB": changeServiceDeployProvIfCapTraceExpectedOduTcmB,
       "changeServiceDeployProvIfCapTraceTransmitSapiOduTcmB": changeServiceDeployProvIfCapTraceTransmitSapiOduTcmB,
       "changeServiceDeployProvIfCapTraceTransmitDapiOduTcmB": changeServiceDeployProvIfCapTraceTransmitDapiOduTcmB,
       "changeServiceDeployProvIfCapTraceTransmitOpspOduTcmB": changeServiceDeployProvIfCapTraceTransmitOpspOduTcmB,
       "changeServiceDeployProvIfCapTimModeOduTcmB": changeServiceDeployProvIfCapTimModeOduTcmB,
       "changeServiceDeployProvIfCapTraceExpectedOduTcmC": changeServiceDeployProvIfCapTraceExpectedOduTcmC,
       "changeServiceDeployProvIfCapTraceTransmitSapiOduTcmC": changeServiceDeployProvIfCapTraceTransmitSapiOduTcmC,
       "changeServiceDeployProvIfCapTraceTransmitDapiOduTcmC": changeServiceDeployProvIfCapTraceTransmitDapiOduTcmC,
       "changeServiceDeployProvIfCapTraceTransmitOpspOduTcmC": changeServiceDeployProvIfCapTraceTransmitOpspOduTcmC,
       "changeServiceDeployProvIfCapTimModeOduTcmC": changeServiceDeployProvIfCapTimModeOduTcmC,
       "changeServiceDeployProvIfCapChannelProvisioning": changeServiceDeployProvIfCapChannelProvisioning,
       "changeServiceDeployProvIfCapVariableGain": changeServiceDeployProvIfCapVariableGain,
       "changeServiceDeployProvIfCapBand": changeServiceDeployProvIfCapBand,
       "changeServiceDeployProvIfCapSigDegThreshold": changeServiceDeployProvIfCapSigDegThreshold,
       "changeServiceDeployProvIfCapSigDegPeriodIntegration": changeServiceDeployProvIfCapSigDegPeriodIntegration,
       "changeServiceDeployProvIfCapVoaMode": changeServiceDeployProvIfCapVoaMode,
       "changeServiceDeployProvIfCapOpticalSetPoint": changeServiceDeployProvIfCapOpticalSetPoint,
       "changeServiceDeployProvIfCapVoaSetpoint": changeServiceDeployProvIfCapVoaSetpoint,
       "changeServiceDeployProvIfCapLanAid": changeServiceDeployProvIfCapLanAid,
       "changeServiceDeployProvIfCapAprHighThreshold": changeServiceDeployProvIfCapAprHighThreshold,
       "changeServiceDeployProvIfCapPumpPower": changeServiceDeployProvIfCapPumpPower,
       "changeServiceDeployProvIfCapWdmRxChannel": changeServiceDeployProvIfCapWdmRxChannel,
       "changeServiceDeployProvIfCapSigDegThresSonetSection": changeServiceDeployProvIfCapSigDegThresSonetSection,
       "changeServiceDeployProvIfCapSigDegThresSdhSection": changeServiceDeployProvIfCapSigDegThresSdhSection,
       "changeServiceDeployProvIfCapSigDegPeriodSdhSection": changeServiceDeployProvIfCapSigDegPeriodSdhSection,
       "changeServiceDeployProvIfCapDispersionMode": changeServiceDeployProvIfCapDispersionMode,
       "changeServiceDeployProvIfCapDispersionSetting": changeServiceDeployProvIfCapDispersionSetting,
       "changeServiceDeployProvIfCapIpType": changeServiceDeployProvIfCapIpType,
       "changeServiceDeployProvIfCapOffset": changeServiceDeployProvIfCapOffset,
       "changeServiceDeployProvIfCapFunction": changeServiceDeployProvIfCapFunction,
       "changeServiceDeployProvIfCapFarEndCommunication": changeServiceDeployProvIfCapFarEndCommunication,
       "changeServiceDeployProvIfCapEqlzAdmin": changeServiceDeployProvIfCapEqlzAdmin,
       "changeServiceDeployProvIfCapTxOffDelay": changeServiceDeployProvIfCapTxOffDelay,
       "changeServiceDeployProvIfCapOpuPayloadType": changeServiceDeployProvIfCapOpuPayloadType,
       "changeServiceDeployProvIfCapOscOpticalSetpoint": changeServiceDeployProvIfCapOscOpticalSetpoint,
       "changeServiceDeployProvIfCapFiberBrand": changeServiceDeployProvIfCapFiberBrand,
       "changeServiceDeployProvIfCapXfpDecisionThres": changeServiceDeployProvIfCapXfpDecisionThres,
       "changeServiceDeployProvIfCapLaserDelayTimer": changeServiceDeployProvIfCapLaserDelayTimer,
       "changeServiceDeployProvIfCapLaserOffTimer": changeServiceDeployProvIfCapLaserOffTimer,
       "changeServiceDeployProvIfCapLaserOnTimer": changeServiceDeployProvIfCapLaserOnTimer,
       "changeServiceDeployProvIfCapLaneChannelSetting": changeServiceDeployProvIfCapLaneChannelSetting,
       "changeServiceDeployProvIfCapBip": changeServiceDeployProvIfCapBip,
       "changeServiceDeployProvIfCapCodeGain": changeServiceDeployProvIfCapCodeGain,
       "changeServiceDeployProvIfDefaultsTable": changeServiceDeployProvIfDefaultsTable,
       "changeServiceDeployProvIfDefaultsEntry": changeServiceDeployProvIfDefaultsEntry,
       "changeServiceDeployProvIfDefaultsRowStatus": changeServiceDeployProvIfDefaultsRowStatus,
       "changeServiceDeployProvIfDefaultsForceDestroy": changeServiceDeployProvIfDefaultsForceDestroy,
       "changeServiceDeployProvIfDefaultsType": changeServiceDeployProvIfDefaultsType,
       "changeServiceDeployProvIfDefaultsPayload": changeServiceDeployProvIfDefaultsPayload,
       "changeServiceDeployProvIfDefaultsBehaviour": changeServiceDeployProvIfDefaultsBehaviour,
       "changeServiceDeployProvIfDefaultsTerminationLevel": changeServiceDeployProvIfDefaultsTerminationLevel,
       "changeServiceDeployProvIfDefaultsAlsMode": changeServiceDeployProvIfDefaultsAlsMode,
       "changeServiceDeployProvIfDefaultsErrorForwarding": changeServiceDeployProvIfDefaultsErrorForwarding,
       "changeServiceDeployProvIfDefaultsLaserOffDelayFunction": changeServiceDeployProvIfDefaultsLaserOffDelayFunction,
       "changeServiceDeployProvIfDefaultsFecType": changeServiceDeployProvIfDefaultsFecType,
       "changeServiceDeployProvIfDefaultsTimingSource": changeServiceDeployProvIfDefaultsTimingSource,
       "changeServiceDeployProvIfDefaultsTcmALevel": changeServiceDeployProvIfDefaultsTcmALevel,
       "changeServiceDeployProvIfDefaultsTcmBLevel": changeServiceDeployProvIfDefaultsTcmBLevel,
       "changeServiceDeployProvIfDefaultsSigDegThresSonetLine": changeServiceDeployProvIfDefaultsSigDegThresSonetLine,
       "changeServiceDeployProvIfDefaultsSigDegThresSdhMs": changeServiceDeployProvIfDefaultsSigDegThresSdhMs,
       "changeServiceDeployProvIfDefaultsSignalDegradePeriod": changeServiceDeployProvIfDefaultsSignalDegradePeriod,
       "changeServiceDeployProvIfDefaultsAutonegotiation": changeServiceDeployProvIfDefaultsAutonegotiation,
       "changeServiceDeployProvIfDefaultsBitrate": changeServiceDeployProvIfDefaultsBitrate,
       "changeServiceDeployProvIfDefaultsDuplex": changeServiceDeployProvIfDefaultsDuplex,
       "changeServiceDeployProvIfDefaultsFlowControl": changeServiceDeployProvIfDefaultsFlowControl,
       "changeServiceDeployProvIfDefaultsOtnStuffing": changeServiceDeployProvIfDefaultsOtnStuffing,
       "changeServiceDeployProvIfDefaultsSigDegThresOtu": changeServiceDeployProvIfDefaultsSigDegThresOtu,
       "changeServiceDeployProvIfDefaultsSigDegPeriodOtu": changeServiceDeployProvIfDefaultsSigDegPeriodOtu,
       "changeServiceDeployProvIfDefaultsSigDegThresOdu": changeServiceDeployProvIfDefaultsSigDegThresOdu,
       "changeServiceDeployProvIfDefaultsSigDegPeriodOdu": changeServiceDeployProvIfDefaultsSigDegPeriodOdu,
       "changeServiceDeployProvIfDefaultsSigDegThresOduTcmA": changeServiceDeployProvIfDefaultsSigDegThresOduTcmA,
       "changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA": changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmA,
       "changeServiceDeployProvIfDefaultsSigDegThresOduTcmB": changeServiceDeployProvIfDefaultsSigDegThresOduTcmB,
       "changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB": changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmB,
       "changeServiceDeployProvIfDefaultsTilt": changeServiceDeployProvIfDefaultsTilt,
       "changeServiceDeployProvIfDefaultsGain": changeServiceDeployProvIfDefaultsGain,
       "changeServiceDeployProvIfDefaultsAdmin": changeServiceDeployProvIfDefaultsAdmin,
       "changeServiceDeployProvIfDefaultsAttenuationGradient": changeServiceDeployProvIfDefaultsAttenuationGradient,
       "changeServiceDeployProvIfDefaultsSigDegThresReceiver": changeServiceDeployProvIfDefaultsSigDegThresReceiver,
       "changeServiceDeployProvIfDefaultsTcmCLevel": changeServiceDeployProvIfDefaultsTcmCLevel,
       "changeServiceDeployProvIfDefaultsSigDegThresOduTcmC": changeServiceDeployProvIfDefaultsSigDegThresOduTcmC,
       "changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC": changeServiceDeployProvIfDefaultsSigDegPeriodOduTcmC,
       "changeServiceDeployProvIfDefaultsDisparityCorrection": changeServiceDeployProvIfDefaultsDisparityCorrection,
       "changeServiceDeployProvIfDefaultsIpAddr": changeServiceDeployProvIfDefaultsIpAddr,
       "changeServiceDeployProvIfDefaultsIpMask": changeServiceDeployProvIfDefaultsIpMask,
       "changeServiceDeployProvIfDefaultsOspf": changeServiceDeployProvIfDefaultsOspf,
       "changeServiceDeployProvIfDefaultsMetric": changeServiceDeployProvIfDefaultsMetric,
       "changeServiceDeployProvIfDefaultsAreaId": changeServiceDeployProvIfDefaultsAreaId,
       "changeServiceDeployProvIfDefaultsTraceFormSonetSection": changeServiceDeployProvIfDefaultsTraceFormSonetSection,
       "changeServiceDeployProvIfDefaultsTraceExpectedSonetSection": changeServiceDeployProvIfDefaultsTraceExpectedSonetSection,
       "changeServiceDeployProvIfDefaultsTraceTransmitSonetSection": changeServiceDeployProvIfDefaultsTraceTransmitSonetSection,
       "changeServiceDeployProvIfDefaultsTimModeSonetSection": changeServiceDeployProvIfDefaultsTimModeSonetSection,
       "changeServiceDeployProvIfDefaultsTraceExpectedOtu": changeServiceDeployProvIfDefaultsTraceExpectedOtu,
       "changeServiceDeployProvIfDefaultsTraceTransmitSapiOtu": changeServiceDeployProvIfDefaultsTraceTransmitSapiOtu,
       "changeServiceDeployProvIfDefaultsTraceTransmitDapiOtu": changeServiceDeployProvIfDefaultsTraceTransmitDapiOtu,
       "changeServiceDeployProvIfDefaultsTraceTransmitOpspOtu": changeServiceDeployProvIfDefaultsTraceTransmitOpspOtu,
       "changeServiceDeployProvIfDefaultsTimModeOtu": changeServiceDeployProvIfDefaultsTimModeOtu,
       "changeServiceDeployProvIfDefaultsTraceExpectedOdu": changeServiceDeployProvIfDefaultsTraceExpectedOdu,
       "changeServiceDeployProvIfDefaultsTraceTransmitSapiOdu": changeServiceDeployProvIfDefaultsTraceTransmitSapiOdu,
       "changeServiceDeployProvIfDefaultsTraceTransmitDapiOdu": changeServiceDeployProvIfDefaultsTraceTransmitDapiOdu,
       "changeServiceDeployProvIfDefaultsTraceTransmitOpspOdu": changeServiceDeployProvIfDefaultsTraceTransmitOpspOdu,
       "changeServiceDeployProvIfDefaultsTimModeOdu": changeServiceDeployProvIfDefaultsTimModeOdu,
       "changeServiceDeployProvIfDefaultsTraceExpectedOduTcmA": changeServiceDeployProvIfDefaultsTraceExpectedOduTcmA,
       "changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA": changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmA,
       "changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA": changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmA,
       "changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA": changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmA,
       "changeServiceDeployProvIfDefaultsTimModeOduTcmA": changeServiceDeployProvIfDefaultsTimModeOduTcmA,
       "changeServiceDeployProvIfDefaultsTraceExpectedOduTcmB": changeServiceDeployProvIfDefaultsTraceExpectedOduTcmB,
       "changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB": changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmB,
       "changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB": changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmB,
       "changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB": changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmB,
       "changeServiceDeployProvIfDefaultsTimModeOduTcmB": changeServiceDeployProvIfDefaultsTimModeOduTcmB,
       "changeServiceDeployProvIfDefaultsTraceExpectedOduTcmC": changeServiceDeployProvIfDefaultsTraceExpectedOduTcmC,
       "changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC": changeServiceDeployProvIfDefaultsTraceTransmitSapiOduTcmC,
       "changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC": changeServiceDeployProvIfDefaultsTraceTransmitDapiOduTcmC,
       "changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC": changeServiceDeployProvIfDefaultsTraceTransmitOpspOduTcmC,
       "changeServiceDeployProvIfDefaultsTimModeOduTcmC": changeServiceDeployProvIfDefaultsTimModeOduTcmC,
       "changeServiceDeployProvIfDefaultsChannelProvisioning": changeServiceDeployProvIfDefaultsChannelProvisioning,
       "changeServiceDeployProvIfDefaultsVariableGain": changeServiceDeployProvIfDefaultsVariableGain,
       "changeServiceDeployProvIfDefaultsBand": changeServiceDeployProvIfDefaultsBand,
       "changeServiceDeployProvIfDefaultsSigDegThreshold": changeServiceDeployProvIfDefaultsSigDegThreshold,
       "changeServiceDeployProvIfDefaultsSigDegPeriodIntegration": changeServiceDeployProvIfDefaultsSigDegPeriodIntegration,
       "changeServiceDeployProvIfDefaultsVoaMode": changeServiceDeployProvIfDefaultsVoaMode,
       "changeServiceDeployProvIfDefaultsOpticalSetPoint": changeServiceDeployProvIfDefaultsOpticalSetPoint,
       "changeServiceDeployProvIfDefaultsVoaSetpoint": changeServiceDeployProvIfDefaultsVoaSetpoint,
       "changeServiceDeployProvIfDefaultsLanAid": changeServiceDeployProvIfDefaultsLanAid,
       "changeServiceDeployProvIfDefaultsAprHighThreshold": changeServiceDeployProvIfDefaultsAprHighThreshold,
       "changeServiceDeployProvIfDefaultsPumpPower": changeServiceDeployProvIfDefaultsPumpPower,
       "changeServiceDeployProvIfDefaultsWdmRxChannel": changeServiceDeployProvIfDefaultsWdmRxChannel,
       "changeServiceDeployProvIfDefaultsSigDegThresSonetSection": changeServiceDeployProvIfDefaultsSigDegThresSonetSection,
       "changeServiceDeployProvIfDefaultsSigDegThresSdhSection": changeServiceDeployProvIfDefaultsSigDegThresSdhSection,
       "changeServiceDeployProvIfDefaultsSigDegPeriodSdhSection": changeServiceDeployProvIfDefaultsSigDegPeriodSdhSection,
       "changeServiceDeployProvIfDefaultsDispersionMode": changeServiceDeployProvIfDefaultsDispersionMode,
       "changeServiceDeployProvIfDefaultsDispersionSetting": changeServiceDeployProvIfDefaultsDispersionSetting,
       "changeServiceDeployProvIfDefaultsIpType": changeServiceDeployProvIfDefaultsIpType,
       "changeServiceDeployProvIfDefaultsOffset": changeServiceDeployProvIfDefaultsOffset,
       "changeServiceDeployProvIfDefaultsFunction": changeServiceDeployProvIfDefaultsFunction,
       "changeServiceDeployProvIfDefaultsFarEndCommunication": changeServiceDeployProvIfDefaultsFarEndCommunication,
       "changeServiceDeployProvIfDefaultsEqlzAdmin": changeServiceDeployProvIfDefaultsEqlzAdmin,
       "changeServiceDeployProvIfDefaultsTxOffDelay": changeServiceDeployProvIfDefaultsTxOffDelay,
       "changeServiceDeployProvIfDefaultsOpuPayloadType": changeServiceDeployProvIfDefaultsOpuPayloadType,
       "changeServiceDeployProvIfDefaultsOscOpticalSetpoint": changeServiceDeployProvIfDefaultsOscOpticalSetpoint,
       "changeServiceDeployProvIfDefaultsFiberBrand": changeServiceDeployProvIfDefaultsFiberBrand,
       "changeServiceDeployProvIfDefaultsXfpDecisionThres": changeServiceDeployProvIfDefaultsXfpDecisionThres,
       "changeServiceDeployProvIfDefaultsLaserDelayTimer": changeServiceDeployProvIfDefaultsLaserDelayTimer,
       "changeServiceDeployProvIfDefaultsLaserOffTimer": changeServiceDeployProvIfDefaultsLaserOffTimer,
       "changeServiceDeployProvIfDefaultsLaserOnTimer": changeServiceDeployProvIfDefaultsLaserOnTimer,
       "changeServiceDeployProvIfDefaultsLaneChannelSetting": changeServiceDeployProvIfDefaultsLaneChannelSetting,
       "changeServiceDeployProvIfDefaultsBip": changeServiceDeployProvIfDefaultsBip,
       "changeServiceDeployProvIfDefaultsCodeGain": changeServiceDeployProvIfDefaultsCodeGain,
       "deployProvOpticalLinkTable": deployProvOpticalLinkTable,
       "deployProvOpticalLinkEntry": deployProvOpticalLinkEntry,
       "deployProvOpticalLinkRowStatus": deployProvOpticalLinkRowStatus,
       "deployProvOpticalLinkTxLineAttenuation": deployProvOpticalLinkTxLineAttenuation,
       "deployProvOpticalLinkRxLineAttenuation": deployProvOpticalLinkRxLineAttenuation,
       "deployProvOpticalLinkFarEndLocation": deployProvOpticalLinkFarEndLocation,
       "deployProvOpticalLinkCapTable": deployProvOpticalLinkCapTable,
       "deployProvOpticalLinkCapEntry": deployProvOpticalLinkCapEntry,
       "deployProvOpticalLinkCapRowStatus": deployProvOpticalLinkCapRowStatus,
       "deployProvOpticalLinkCapTxLineAttenuation": deployProvOpticalLinkCapTxLineAttenuation,
       "deployProvOpticalLinkCapRxLineAttenuation": deployProvOpticalLinkCapRxLineAttenuation,
       "deployProvOpticalLinkCapFarEndLocation": deployProvOpticalLinkCapFarEndLocation,
       "deployProvOpticalLinkDefaultsTable": deployProvOpticalLinkDefaultsTable,
       "deployProvOpticalLinkDefaultsEntry": deployProvOpticalLinkDefaultsEntry,
       "deployProvOpticalLinkDefaultsRowStatus": deployProvOpticalLinkDefaultsRowStatus,
       "deployProvOpticalLinkDefaultsTxLineAttenuation": deployProvOpticalLinkDefaultsTxLineAttenuation,
       "deployProvOpticalLinkDefaultsRxLineAttenuation": deployProvOpticalLinkDefaultsRxLineAttenuation,
       "deployProvOpticalLinkDefaultsFarEndLocation": deployProvOpticalLinkDefaultsFarEndLocation,
       "deployProvVirtualOpticalChannelTable": deployProvVirtualOpticalChannelTable,
       "deployProvVirtualOpticalChannelEntry": deployProvVirtualOpticalChannelEntry,
       "deployProvVirtualOpticalChannelRowStatus": deployProvVirtualOpticalChannelRowStatus,
       "deployProvVirtualOpticalChannelAlias": deployProvVirtualOpticalChannelAlias,
       "deployProvVirtualOpticalChannelCapTable": deployProvVirtualOpticalChannelCapTable,
       "deployProvVirtualOpticalChannelCapEntry": deployProvVirtualOpticalChannelCapEntry,
       "deployProvVirtualOpticalChannelCapRowStatus": deployProvVirtualOpticalChannelCapRowStatus,
       "deployProvVirtualOpticalChannelCapAlias": deployProvVirtualOpticalChannelCapAlias,
       "deployProvVirtualOpticalChannelDefaultsTable": deployProvVirtualOpticalChannelDefaultsTable,
       "deployProvVirtualOpticalChannelDefaultsEntry": deployProvVirtualOpticalChannelDefaultsEntry,
       "deployProvVirtualOpticalChannelDefaultsRowStatus": deployProvVirtualOpticalChannelDefaultsRowStatus,
       "deployProvVirtualOpticalChannelDefaultsAlias": deployProvVirtualOpticalChannelDefaultsAlias,
       "deployProvLogicalIfTable": deployProvLogicalIfTable,
       "deployProvLogicalIfEntry": deployProvLogicalIfEntry,
       "deployProvLogicalIfRowStatus": deployProvLogicalIfRowStatus,
       "deployProvLogicalIfFacilityType": deployProvLogicalIfFacilityType,
       "deployProvLogicalIfAlias": deployProvLogicalIfAlias,
       "deployProvLogicalIfLanLinkAid": deployProvLogicalIfLanLinkAid,
       "deployProvLogicalIfAreaId": deployProvLogicalIfAreaId,
       "deployProvLogicalIfMetric": deployProvLogicalIfMetric,
       "deployProvLogicalIfHelloInterval": deployProvLogicalIfHelloInterval,
       "deployProvLogicalIfDeadInterval": deployProvLogicalIfDeadInterval,
       "deployProvLogicalIfPrio": deployProvLogicalIfPrio,
       "deployProvLogicalIfRetransmitInterval": deployProvLogicalIfRetransmitInterval,
       "deployProvLogicalIfAuthType": deployProvLogicalIfAuthType,
       "deployProvLogicalIfAuthString": deployProvLogicalIfAuthString,
       "deployProvLogicalIfIpType": deployProvLogicalIfIpType,
       "deployProvLogicalIfIpAddr": deployProvLogicalIfIpAddr,
       "deployProvLogicalIfIpAddrMask": deployProvLogicalIfIpAddrMask,
       "deployProvLogicalIfAdmin": deployProvLogicalIfAdmin,
       "deployProvLogicalIfDcnAid": deployProvLogicalIfDcnAid,
       "deployProvLogicalIfOspf": deployProvLogicalIfOspf,
       "deployProvLogicalIfEncapsulation": deployProvLogicalIfEncapsulation,
       "deployProvLogicalIfPushedNendIpHeader": deployProvLogicalIfPushedNendIpHeader,
       "deployProvLogicalIfPushedFarEndIpHeader": deployProvLogicalIfPushedFarEndIpHeader,
       "deployProvLogicalIfTimeToLive": deployProvLogicalIfTimeToLive,
       "deployProvLogicalIfCapTable": deployProvLogicalIfCapTable,
       "deployProvLogicalIfCapEntry": deployProvLogicalIfCapEntry,
       "deployProvLogicalIfCapRowStatus": deployProvLogicalIfCapRowStatus,
       "deployProvLogicalIfCapFacilityType": deployProvLogicalIfCapFacilityType,
       "deployProvLogicalIfCapAlias": deployProvLogicalIfCapAlias,
       "deployProvLogicalIfCapLanLinkAid": deployProvLogicalIfCapLanLinkAid,
       "deployProvLogicalIfCapAreaId": deployProvLogicalIfCapAreaId,
       "deployProvLogicalIfCapMetric": deployProvLogicalIfCapMetric,
       "deployProvLogicalIfCapHelloInterval": deployProvLogicalIfCapHelloInterval,
       "deployProvLogicalIfCapDeadInterval": deployProvLogicalIfCapDeadInterval,
       "deployProvLogicalIfCapPrio": deployProvLogicalIfCapPrio,
       "deployProvLogicalIfCapRetransmitInterval": deployProvLogicalIfCapRetransmitInterval,
       "deployProvLogicalIfCapAuthType": deployProvLogicalIfCapAuthType,
       "deployProvLogicalIfCapAuthString": deployProvLogicalIfCapAuthString,
       "deployProvLogicalIfCapIpType": deployProvLogicalIfCapIpType,
       "deployProvLogicalIfCapIpAddr": deployProvLogicalIfCapIpAddr,
       "deployProvLogicalIfCapIpAddrMask": deployProvLogicalIfCapIpAddrMask,
       "deployProvLogicalIfCapAdmin": deployProvLogicalIfCapAdmin,
       "deployProvLogicalIfCapDcnAid": deployProvLogicalIfCapDcnAid,
       "deployProvLogicalIfCapOspf": deployProvLogicalIfCapOspf,
       "deployProvLogicalIfCapEncapsulation": deployProvLogicalIfCapEncapsulation,
       "deployProvLogicalIfCapPushedNendIpHeader": deployProvLogicalIfCapPushedNendIpHeader,
       "deployProvLogicalIfCapPushedFarEndIpHeader": deployProvLogicalIfCapPushedFarEndIpHeader,
       "deployProvLogicalIfCapTimeToLive": deployProvLogicalIfCapTimeToLive,
       "deployProvLogicalIfDefaultsTable": deployProvLogicalIfDefaultsTable,
       "deployProvLogicalIfDefaultsEntry": deployProvLogicalIfDefaultsEntry,
       "deployProvLogicalIfDefaultsRowStatus": deployProvLogicalIfDefaultsRowStatus,
       "deployProvLogicalIfDefaultsFacilityType": deployProvLogicalIfDefaultsFacilityType,
       "deployProvLogicalIfDefaultsAlias": deployProvLogicalIfDefaultsAlias,
       "deployProvLogicalIfDefaultsLanLinkAid": deployProvLogicalIfDefaultsLanLinkAid,
       "deployProvLogicalIfDefaultsAreaId": deployProvLogicalIfDefaultsAreaId,
       "deployProvLogicalIfDefaultsMetric": deployProvLogicalIfDefaultsMetric,
       "deployProvLogicalIfDefaultsHelloInterval": deployProvLogicalIfDefaultsHelloInterval,
       "deployProvLogicalIfDefaultsDeadInterval": deployProvLogicalIfDefaultsDeadInterval,
       "deployProvLogicalIfDefaultsPrio": deployProvLogicalIfDefaultsPrio,
       "deployProvLogicalIfDefaultsRetransmitInterval": deployProvLogicalIfDefaultsRetransmitInterval,
       "deployProvLogicalIfDefaultsAuthType": deployProvLogicalIfDefaultsAuthType,
       "deployProvLogicalIfDefaultsAuthString": deployProvLogicalIfDefaultsAuthString,
       "deployProvLogicalIfDefaultsIpType": deployProvLogicalIfDefaultsIpType,
       "deployProvLogicalIfDefaultsIpAddr": deployProvLogicalIfDefaultsIpAddr,
       "deployProvLogicalIfDefaultsIpAddrMask": deployProvLogicalIfDefaultsIpAddrMask,
       "deployProvLogicalIfDefaultsAdmin": deployProvLogicalIfDefaultsAdmin,
       "deployProvLogicalIfDefaultsDcnAid": deployProvLogicalIfDefaultsDcnAid,
       "deployProvLogicalIfDefaultsOspf": deployProvLogicalIfDefaultsOspf,
       "deployProvLogicalIfDefaultsEncapsulation": deployProvLogicalIfDefaultsEncapsulation,
       "deployProvLogicalIfDefaultsPushedNendIpHeader": deployProvLogicalIfDefaultsPushedNendIpHeader,
       "deployProvLogicalIfDefaultsPushedFarEndIpHeader": deployProvLogicalIfDefaultsPushedFarEndIpHeader,
       "deployProvLogicalIfDefaultsTimeToLive": deployProvLogicalIfDefaultsTimeToLive,
       "deployProvIfLanAidCapsTable": deployProvIfLanAidCapsTable,
       "deployProvIfLanAidCapsEntry": deployProvIfLanAidCapsEntry,
       "deployProvIfLanAidCapsIndex": deployProvIfLanAidCapsIndex,
       "changeServiceDeployProvIfLanAidCapsTable": changeServiceDeployProvIfLanAidCapsTable,
       "changeServiceDeployProvIfLanAidCapsEntry": changeServiceDeployProvIfLanAidCapsEntry,
       "changeServiceDeployProvIfLanAidCapsIndex": changeServiceDeployProvIfLanAidCapsIndex,
       "deployProvIfVethAidCapsTable": deployProvIfVethAidCapsTable,
       "deployProvIfVethAidCapsEntry": deployProvIfVethAidCapsEntry,
       "deployProvIfVethAidCapsIndex": deployProvIfVethAidCapsIndex,
       "deployProvDcnExternalVidCapsTable": deployProvDcnExternalVidCapsTable,
       "deployProvDcnExternalVidCapsEntry": deployProvDcnExternalVidCapsEntry,
       "deployProvDcnExternalVidCapsIndexCap": deployProvDcnExternalVidCapsIndexCap,
       "deployProvDcnExternalVidCapsStringCap": deployProvDcnExternalVidCapsStringCap,
       "deployProvDcnLanAidCapsTable": deployProvDcnLanAidCapsTable,
       "deployProvDcnLanAidCapsEntry": deployProvDcnLanAidCapsEntry,
       "deployProvDcnLanAidCapsIndex": deployProvDcnLanAidCapsIndex,
       "deployProvExChannelTable": deployProvExChannelTable,
       "deployProvExChannelEntry": deployProvExChannelEntry,
       "deployProvExChannelRowStatus": deployProvExChannelRowStatus,
       "deployProvExChannelType": deployProvExChannelType,
       "deployProvExChannelTransmitChannel": deployProvExChannelTransmitChannel,
       "deployProvExChannelChannelBandwith": deployProvExChannelChannelBandwith,
       "deployProvExChannelAlias": deployProvExChannelAlias,
       "deployProvExChannelFarEndLocation": deployProvExChannelFarEndLocation,
       "deployProvExChannelBitrate": deployProvExChannelBitrate,
       "deployProvExChannelFecType": deployProvExChannelFecType,
       "deployProvExChannelLineCoding": deployProvExChannelLineCoding,
       "deployProvExChannelFrameFormat": deployProvExChannelFrameFormat,
       "deployProvExChannelOpticalPowerTx": deployProvExChannelOpticalPowerTx,
       "deployProvExChannelOSNRTransmit": deployProvExChannelOSNRTransmit,
       "deployProvExChannelPMDTransmit": deployProvExChannelPMDTransmit,
       "deployProvExChannelChromaticDispersionTx": deployProvExChannelChromaticDispersionTx,
       "deployProvExChannelMinimumOSNRRcv": deployProvExChannelMinimumOSNRRcv,
       "deployProvExChannelMinimumOpticalPowerRcv": deployProvExChannelMinimumOpticalPowerRcv,
       "deployProvExChannelMaximumOpticalPowerRcv": deployProvExChannelMaximumOpticalPowerRcv,
       "deployProvExChannelMaximumPMDRcv": deployProvExChannelMaximumPMDRcv,
       "deployProvExChannelChromaticDispersionRcv": deployProvExChannelChromaticDispersionRcv,
       "deployProvExChannelMaxBitErrorRate": deployProvExChannelMaxBitErrorRate,
       "deployProvExChannelMinChromaticDispersionRcv": deployProvExChannelMinChromaticDispersionRcv,
       "deployProvExChannelMaxChromaticDispersionRcv": deployProvExChannelMaxChromaticDispersionRcv,
       "deployProvExChannelSourceProfile": deployProvExChannelSourceProfile,
       "deployProvExChannelCapTable": deployProvExChannelCapTable,
       "deployProvExChannelCapEntry": deployProvExChannelCapEntry,
       "deployProvExChannelCapRowStatus": deployProvExChannelCapRowStatus,
       "deployProvExChannelCapType": deployProvExChannelCapType,
       "deployProvExChannelCapTransmitChannel": deployProvExChannelCapTransmitChannel,
       "deployProvExChannelCapChannelBandwith": deployProvExChannelCapChannelBandwith,
       "deployProvExChannelCapAlias": deployProvExChannelCapAlias,
       "deployProvExChannelCapFarEndLocation": deployProvExChannelCapFarEndLocation,
       "deployProvExChannelCapBitrate": deployProvExChannelCapBitrate,
       "deployProvExChannelCapFecType": deployProvExChannelCapFecType,
       "deployProvExChannelCapLineCoding": deployProvExChannelCapLineCoding,
       "deployProvExChannelCapFrameFormat": deployProvExChannelCapFrameFormat,
       "deployProvExChannelCapOpticalPowerTx": deployProvExChannelCapOpticalPowerTx,
       "deployProvExChannelCapOSNRTransmit": deployProvExChannelCapOSNRTransmit,
       "deployProvExChannelCapPMDTransmit": deployProvExChannelCapPMDTransmit,
       "deployProvExChannelCapChromaticDispersionTx": deployProvExChannelCapChromaticDispersionTx,
       "deployProvExChannelCapMinimumOSNRRcv": deployProvExChannelCapMinimumOSNRRcv,
       "deployProvExChannelCapMinimumOpticalPowerRcv": deployProvExChannelCapMinimumOpticalPowerRcv,
       "deployProvExChannelCapMaximumOpticalPowerRcv": deployProvExChannelCapMaximumOpticalPowerRcv,
       "deployProvExChannelCapMaximumPMDRcv": deployProvExChannelCapMaximumPMDRcv,
       "deployProvExChannelCapChromaticDispersionRcv": deployProvExChannelCapChromaticDispersionRcv,
       "deployProvExChannelCapMaxBitErrorRate": deployProvExChannelCapMaxBitErrorRate,
       "deployProvExChannelCapMinChromaticDispersionRcv": deployProvExChannelCapMinChromaticDispersionRcv,
       "deployProvExChannelCapMaxChromaticDispersionRcv": deployProvExChannelCapMaxChromaticDispersionRcv,
       "deployProvExChannelCapSourceProfile": deployProvExChannelCapSourceProfile,
       "deployProvExChannelDefaultsTable": deployProvExChannelDefaultsTable,
       "deployProvExChannelDefaultsEntry": deployProvExChannelDefaultsEntry,
       "deployProvExChannelDefaultsRowStatus": deployProvExChannelDefaultsRowStatus,
       "deployProvExChannelDefaultsType": deployProvExChannelDefaultsType,
       "deployProvExChannelDefaultsTransmitChannel": deployProvExChannelDefaultsTransmitChannel,
       "deployProvExChannelDefaultsChannelBandwith": deployProvExChannelDefaultsChannelBandwith,
       "deployProvExChannelDefaultsAlias": deployProvExChannelDefaultsAlias,
       "deployProvExChannelDefaultsFarEndLocation": deployProvExChannelDefaultsFarEndLocation,
       "deployProvExChannelDefaultsBitrate": deployProvExChannelDefaultsBitrate,
       "deployProvExChannelDefaultsFecType": deployProvExChannelDefaultsFecType,
       "deployProvExChannelDefaultsLineCoding": deployProvExChannelDefaultsLineCoding,
       "deployProvExChannelDefaultsFrameFormat": deployProvExChannelDefaultsFrameFormat,
       "deployProvExChannelDefaultsOpticalPowerTx": deployProvExChannelDefaultsOpticalPowerTx,
       "deployProvExChannelDefaultsOSNRTransmit": deployProvExChannelDefaultsOSNRTransmit,
       "deployProvExChannelDefaultsPMDTransmit": deployProvExChannelDefaultsPMDTransmit,
       "deployProvExChannelDefaultsChromaticDispersionTx": deployProvExChannelDefaultsChromaticDispersionTx,
       "deployProvExChannelDefaultsMinimumOSNRRcv": deployProvExChannelDefaultsMinimumOSNRRcv,
       "deployProvExChannelDefaultsMinimumOpticalPowerRcv": deployProvExChannelDefaultsMinimumOpticalPowerRcv,
       "deployProvExChannelDefaultsMaximumOpticalPowerRcv": deployProvExChannelDefaultsMaximumOpticalPowerRcv,
       "deployProvExChannelDefaultsMaximumPMDRcv": deployProvExChannelDefaultsMaximumPMDRcv,
       "deployProvExChannelDefaultsChromaticDispersionRcv": deployProvExChannelDefaultsChromaticDispersionRcv,
       "deployProvExChannelDefaultsMaxBitErrorRate": deployProvExChannelDefaultsMaxBitErrorRate,
       "deployProvExChannelDefaultsMinChromaticDispersionRcv": deployProvExChannelDefaultsMinChromaticDispersionRcv,
       "deployProvExChannelDefaultsMaxChromaticDispersionRcv": deployProvExChannelDefaultsMaxChromaticDispersionRcv,
       "deployProvExChannelDefaultsSourceProfile": deployProvExChannelDefaultsSourceProfile,
       "deployProvSuperChannelTable": deployProvSuperChannelTable,
       "deployProvSuperChannelEntry": deployProvSuperChannelEntry,
       "deployProvSuperChannelRowStatus": deployProvSuperChannelRowStatus,
       "deployProvSuperChannelEqlzAdmin": deployProvSuperChannelEqlzAdmin,
       "deployProvSuperChannelAlias": deployProvSuperChannelAlias,
       "deployProvSuperChannelAdmin": deployProvSuperChannelAdmin,
       "deployProvSuperChannelType": deployProvSuperChannelType,
       "deployProvSuperChannelCapTable": deployProvSuperChannelCapTable,
       "deployProvSuperChannelCapEntry": deployProvSuperChannelCapEntry,
       "deployProvSuperChannelCapRowStatus": deployProvSuperChannelCapRowStatus,
       "deployProvSuperChannelCapEqlzAdmin": deployProvSuperChannelCapEqlzAdmin,
       "deployProvSuperChannelCapAlias": deployProvSuperChannelCapAlias,
       "deployProvSuperChannelCapAdmin": deployProvSuperChannelCapAdmin,
       "deployProvSuperChannelCapType": deployProvSuperChannelCapType,
       "deployProvSuperChannelDefaultsTable": deployProvSuperChannelDefaultsTable,
       "deployProvSuperChannelDefaultsEntry": deployProvSuperChannelDefaultsEntry,
       "deployProvSuperChannelDefaultsRowStatus": deployProvSuperChannelDefaultsRowStatus,
       "deployProvSuperChannelDefaultsEqlzAdmin": deployProvSuperChannelDefaultsEqlzAdmin,
       "deployProvSuperChannelDefaultsAlias": deployProvSuperChannelDefaultsAlias,
       "deployProvSuperChannelDefaultsAdmin": deployProvSuperChannelDefaultsAdmin,
       "deployProvSuperChannelDefaultsType": deployProvSuperChannelDefaultsType,
       "connectionDeployProv": connectionDeployProv,
       "deployProvConnType": deployProvConnType,
       "deployProvConnEndpointA": deployProvConnEndpointA,
       "deployProvConnEndpointB": deployProvConnEndpointB,
       "deployProvConnCommand": deployProvConnCommand,
       "deployProvConnState": deployProvConnState,
       "deployProvConnCommandCounter": deployProvConnCommandCounter,
       "deployProvConnIndex": deployProvConnIndex,
       "deployProvConnStdCapFromTable": deployProvConnStdCapFromTable,
       "deployProvConnStdCapFromEntry": deployProvConnStdCapFromEntry,
       "deployProvConnStdCapFromEndpointA": deployProvConnStdCapFromEndpointA,
       "deployProvConnStdCapFromEndpointB": deployProvConnStdCapFromEndpointB,
       "deployProvConnStdCapFromType": deployProvConnStdCapFromType,
       "deployProvConnStdCapToTable": deployProvConnStdCapToTable,
       "deployProvConnStdCapToEntry": deployProvConnStdCapToEntry,
       "deployProvConnStdCapToEndpointB": deployProvConnStdCapToEndpointB,
       "deployProvConnStdCapToEndpointA": deployProvConnStdCapToEndpointA,
       "deployProvConnStdCapToType": deployProvConnStdCapToType,
       "deployProvConnNonStdCapFromTable": deployProvConnNonStdCapFromTable,
       "deployProvConnNonStdCapFromEntry": deployProvConnNonStdCapFromEntry,
       "deployProvConnNonStdCapFromEndpointA": deployProvConnNonStdCapFromEndpointA,
       "deployProvConnNonStdCapFromEndpointB": deployProvConnNonStdCapFromEndpointB,
       "deployProvConnNonStdCapFromType": deployProvConnNonStdCapFromType,
       "deployProvConnNonStdCapToTable": deployProvConnNonStdCapToTable,
       "deployProvConnNonStdCapToEntry": deployProvConnNonStdCapToEntry,
       "deployProvConnNonStdCapToEndpointB": deployProvConnNonStdCapToEndpointB,
       "deployProvConnNonStdCapToEndpointA": deployProvConnNonStdCapToEndpointA,
       "deployProvConnNonStdCapToType": deployProvConnNonStdCapToType,
       "crossConnectionDeployProv": crossConnectionDeployProv,
       "crsConnUnusedFromPointsTable": crsConnUnusedFromPointsTable,
       "crsConnUnusedFromPointsEntry": crsConnUnusedFromPointsEntry,
       "crsConnUnusedFromPointsAidValueFromPoint": crsConnUnusedFromPointsAidValueFromPoint,
       "crsConnPossibleToCreateTable": crsConnPossibleToCreateTable,
       "crsConnPossibleToCreateEntry": crsConnPossibleToCreateEntry,
       "crsConnPossibleToCreateAidToFromPoint": crsConnPossibleToCreateAidToFromPoint,
       "crsConnDeployProvTable": crsConnDeployProvTable,
       "crsConnDeployProvEntry": crsConnDeployProvEntry,
       "crsConnDeployProvFrom": crsConnDeployProvFrom,
       "crsConnDeployProvTo": crsConnDeployProvTo,
       "crsConnDeployProvRowStatus": crsConnDeployProvRowStatus,
       "crsConnDeployProvConn": crsConnDeployProvConn,
       "crsConnDeployProvRedLineState": crsConnDeployProvRedLineState,
       "crsConnDeployProvAdmin": crsConnDeployProvAdmin,
       "crsConnDeployProvTunnelAid": crsConnDeployProvTunnelAid,
       "crsConnDeployProvAlias": crsConnDeployProvAlias,
       "crsConnDeployProvCrossConnType": crsConnDeployProvCrossConnType,
       "crsConnDeployProvPathNode": crsConnDeployProvPathNode,
       "crsConnDeployProvType": crsConnDeployProvType,
       "crsConnDeployProvCapTable": crsConnDeployProvCapTable,
       "crsConnDeployProvCapEntry": crsConnDeployProvCapEntry,
       "crsConnDeployProvCapFrom": crsConnDeployProvCapFrom,
       "crsConnDeployProvCapTo": crsConnDeployProvCapTo,
       "crsConnDeployProvCapRowStatus": crsConnDeployProvCapRowStatus,
       "crsConnDeployProvCapConn": crsConnDeployProvCapConn,
       "crsConnDeployProvCapRedLineState": crsConnDeployProvCapRedLineState,
       "crsConnDeployProvCapAdmin": crsConnDeployProvCapAdmin,
       "crsConnDeployProvCapTunnelAid": crsConnDeployProvCapTunnelAid,
       "crsConnDeployProvCapAlias": crsConnDeployProvCapAlias,
       "crsConnDeployProvCapCrossConnType": crsConnDeployProvCapCrossConnType,
       "crsConnDeployProvCapPathNode": crsConnDeployProvCapPathNode,
       "crsConnDeployProvCapType": crsConnDeployProvCapType,
       "crsConnDeployProvDefaultsTable": crsConnDeployProvDefaultsTable,
       "crsConnDeployProvDefaultsEntry": crsConnDeployProvDefaultsEntry,
       "crsConnDeployProvDefaultsFrom": crsConnDeployProvDefaultsFrom,
       "crsConnDeployProvDefaultsTo": crsConnDeployProvDefaultsTo,
       "crsConnDeployProvDefaultsRowStatus": crsConnDeployProvDefaultsRowStatus,
       "crsConnDeployProvDefaultsConn": crsConnDeployProvDefaultsConn,
       "crsConnDeployProvDefaultsRedLineState": crsConnDeployProvDefaultsRedLineState,
       "crsConnDeployProvDefaultsAdmin": crsConnDeployProvDefaultsAdmin,
       "crsConnDeployProvDefaultsTunnelAid": crsConnDeployProvDefaultsTunnelAid,
       "crsConnDeployProvDefaultsAlias": crsConnDeployProvDefaultsAlias,
       "crsConnDeployProvDefaultsCrossConnType": crsConnDeployProvDefaultsCrossConnType,
       "crsConnDeployProvDefaultsPathNode": crsConnDeployProvDefaultsPathNode,
       "crsConnDeployProvDefaultsType": crsConnDeployProvDefaultsType,
       "crsConnWdmUnusedFromPointsTable": crsConnWdmUnusedFromPointsTable,
       "crsConnWdmUnusedFromPointsEntry": crsConnWdmUnusedFromPointsEntry,
       "crsConnWdmUnusedFromPointsAidValueFromPoint": crsConnWdmUnusedFromPointsAidValueFromPoint,
       "cloningEntitiesDeployProv": cloningEntitiesDeployProv,
       "cloningTable": cloningTable,
       "cloningEntry": cloningEntry,
       "cloningSource": cloningSource,
       "entitiesToCloningTable": entitiesToCloningTable,
       "entitiesToCloningEntry": entitiesToCloningEntry,
       "entitiesToCloningEntity": entitiesToCloningEntity,
       "forceDeployProvApsTable": forceDeployProvApsTable,
       "forceDeployProvApsEntry": forceDeployProvApsEntry,
       "forceDeployProvApsRowStatus": forceDeployProvApsRowStatus,
       "forceDeployProvApsForceDestroy": forceDeployProvApsForceDestroy,
       "forceDeployProvApsSDswitching": forceDeployProvApsSDswitching,
       "forceDeployProvApsHoldOffTime": forceDeployProvApsHoldOffTime,
       "forceDeployProvApsProtectionMech": forceDeployProvApsProtectionMech,
       "forceDeployProvApsWorkingAid": forceDeployProvApsWorkingAid,
       "forceDeployProvApsProtectionAid": forceDeployProvApsProtectionAid,
       "forceDeployProvApsSignalDegradeSwitching": forceDeployProvApsSignalDegradeSwitching,
       "forceDeployProvApsSignalFailureSwitching": forceDeployProvApsSignalFailureSwitching,
       "forceDeployProvApsFarEndIp": forceDeployProvApsFarEndIp,
       "forceDeployProvApsPeerAid": forceDeployProvApsPeerAid,
       "forceDeployProvApsApsType": forceDeployProvApsApsType,
       "forceDeployProvApsRevertMode": forceDeployProvApsRevertMode,
       "forceDeployProvApsWaitToRestore": forceDeployProvApsWaitToRestore,
       "forceDeployProvApsDirection": forceDeployProvApsDirection,
       "forceDeployProvApsCapTable": forceDeployProvApsCapTable,
       "forceDeployProvApsCapEntry": forceDeployProvApsCapEntry,
       "forceDeployProvApsCapRowStatus": forceDeployProvApsCapRowStatus,
       "forceDeployProvApsCapForceDestroy": forceDeployProvApsCapForceDestroy,
       "forceDeployProvApsCapSDswitching": forceDeployProvApsCapSDswitching,
       "forceDeployProvApsCapHoldOffTime": forceDeployProvApsCapHoldOffTime,
       "forceDeployProvApsCapProtectionMech": forceDeployProvApsCapProtectionMech,
       "forceDeployProvApsCapWorkingAid": forceDeployProvApsCapWorkingAid,
       "forceDeployProvApsCapProtectionAid": forceDeployProvApsCapProtectionAid,
       "forceDeployProvApsCapSignalDegradeSwitching": forceDeployProvApsCapSignalDegradeSwitching,
       "forceDeployProvApsCapSignalFailureSwitching": forceDeployProvApsCapSignalFailureSwitching,
       "forceDeployProvApsCapFarEndIp": forceDeployProvApsCapFarEndIp,
       "forceDeployProvApsCapPeerAid": forceDeployProvApsCapPeerAid,
       "forceDeployProvApsCapApsType": forceDeployProvApsCapApsType,
       "forceDeployProvApsCapRevertMode": forceDeployProvApsCapRevertMode,
       "forceDeployProvApsCapWaitToRestore": forceDeployProvApsCapWaitToRestore,
       "forceDeployProvApsCapDirection": forceDeployProvApsCapDirection,
       "forceDeployProvApsDefaultsTable": forceDeployProvApsDefaultsTable,
       "forceDeployProvApsDefaultsEntry": forceDeployProvApsDefaultsEntry,
       "forceDeployProvApsDefaultsRowStatus": forceDeployProvApsDefaultsRowStatus,
       "forceDeployProvApsDefaultsForceDestroy": forceDeployProvApsDefaultsForceDestroy,
       "forceDeployProvApsDefaultsSDswitching": forceDeployProvApsDefaultsSDswitching,
       "forceDeployProvApsDefaultsHoldOffTime": forceDeployProvApsDefaultsHoldOffTime,
       "forceDeployProvApsDefaultsProtectionMech": forceDeployProvApsDefaultsProtectionMech,
       "forceDeployProvApsDefaultsWorkingAid": forceDeployProvApsDefaultsWorkingAid,
       "forceDeployProvApsDefaultsProtectionAid": forceDeployProvApsDefaultsProtectionAid,
       "forceDeployProvApsDefaultsSignalDegradeSwitching": forceDeployProvApsDefaultsSignalDegradeSwitching,
       "forceDeployProvApsDefaultsSignalFailureSwitching": forceDeployProvApsDefaultsSignalFailureSwitching,
       "forceDeployProvApsDefaultsFarEndIp": forceDeployProvApsDefaultsFarEndIp,
       "forceDeployProvApsDefaultsPeerAid": forceDeployProvApsDefaultsPeerAid,
       "forceDeployProvApsDefaultsApsType": forceDeployProvApsDefaultsApsType,
       "forceDeployProvApsDefaultsRevertMode": forceDeployProvApsDefaultsRevertMode,
       "forceDeployProvApsDefaultsWaitToRestore": forceDeployProvApsDefaultsWaitToRestore,
       "forceDeployProvApsDefaultsDirection": forceDeployProvApsDefaultsDirection,
       "forceDeployProvApsWorkingAidCapsTable": forceDeployProvApsWorkingAidCapsTable,
       "forceDeployProvApsWorkingAidCapsEntry": forceDeployProvApsWorkingAidCapsEntry,
       "forceDeployProvApsWorkingAidCapsIndex": forceDeployProvApsWorkingAidCapsIndex,
       "forceDeployProvApsProtectingAidCapsTable": forceDeployProvApsProtectingAidCapsTable,
       "forceDeployProvApsProtectingAidCapsEntry": forceDeployProvApsProtectingAidCapsEntry,
       "forceDeployProvApsProtectingAidCapsIndex": forceDeployProvApsProtectingAidCapsIndex,
       "forceDeployProvApsPeerAidCapsTable": forceDeployProvApsPeerAidCapsTable,
       "forceDeployProvApsPeerAidCapsEntry": forceDeployProvApsPeerAidCapsEntry,
       "forceDeployProvApsPeerAidCapsIndex": forceDeployProvApsPeerAidCapsIndex,
       "controlPlaneDeployProv": controlPlaneDeployProv,
       "unusedWdmTunnelIndex": unusedWdmTunnelIndex,
       "unusedWdmPathIndex": unusedWdmPathIndex,
       "deployProvControlPlaneWdmTable": deployProvControlPlaneWdmTable,
       "deployProvControlPlaneWdmEntry": deployProvControlPlaneWdmEntry,
       "deployProvControlPlaneWdmRowStatus": deployProvControlPlaneWdmRowStatus,
       "deployProvControlPlaneWdmCtmConfigFlag": deployProvControlPlaneWdmCtmConfigFlag,
       "deployProvControlPlaneWdmCtmTraceDetail": deployProvControlPlaneWdmCtmTraceDetail,
       "deployProvControlPlaneWdmCtmSetupTimeout": deployProvControlPlaneWdmCtmSetupTimeout,
       "deployProvControlPlaneWdmCtmShutdownTimeout": deployProvControlPlaneWdmCtmShutdownTimeout,
       "deployProvControlPlaneWdmCtmRetryWait": deployProvControlPlaneWdmCtmRetryWait,
       "deployProvControlPlaneWdmCtmRetryWaitMultiplier": deployProvControlPlaneWdmCtmRetryWaitMultiplier,
       "deployProvControlPlaneWdmCtmMaximumRetryWait": deployProvControlPlaneWdmCtmMaximumRetryWait,
       "deployProvControlPlaneWdmCtmMaximumRetryNumber": deployProvControlPlaneWdmCtmMaximumRetryNumber,
       "deployProvControlPlaneWdmRaConfigFlag": deployProvControlPlaneWdmRaConfigFlag,
       "deployProvControlPlaneWdmRaTraceDetail": deployProvControlPlaneWdmRaTraceDetail,
       "deployProvControlPlaneWdmRaAlarmActivationTime": deployProvControlPlaneWdmRaAlarmActivationTime,
       "deployProvControlPlaneWdmCmConfigFlag": deployProvControlPlaneWdmCmConfigFlag,
       "deployProvControlPlaneWdmCmTraceDetail": deployProvControlPlaneWdmCmTraceDetail,
       "deployProvControlPlaneWdmCmAlarmActivationTime": deployProvControlPlaneWdmCmAlarmActivationTime,
       "deployProvControlPlaneWdmCmFisFrsTimeout": deployProvControlPlaneWdmCmFisFrsTimeout,
       "deployProvControlPlaneWdmCmCrankBackTimeout": deployProvControlPlaneWdmCmCrankBackTimeout,
       "deployProvControlPlaneWdmCdbConfigFlag": deployProvControlPlaneWdmCdbConfigFlag,
       "deployProvControlPlaneWdmCdbDetail": deployProvControlPlaneWdmCdbDetail,
       "deployProvControlPlaneWdmCdbMaxSize": deployProvControlPlaneWdmCdbMaxSize,
       "deployProvControlPlaneWdmRsvpMaxExpRestartTime": deployProvControlPlaneWdmRsvpMaxExpRestartTime,
       "deployProvControlPlaneWdmRsvpMaxExpRecoveryTime": deployProvControlPlaneWdmRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneWdmRsvpConfigFlag": deployProvControlPlaneWdmRsvpConfigFlag,
       "deployProvControlPlaneWdmTedbConfigFlag": deployProvControlPlaneWdmTedbConfigFlag,
       "deployProvControlPlaneWdmTedbTraceDetail": deployProvControlPlaneWdmTedbTraceDetail,
       "deployProvControlPlaneWdmTedbMaxSize": deployProvControlPlaneWdmTedbMaxSize,
       "deployProvControlPlaneWdmTedbRouterId": deployProvControlPlaneWdmTedbRouterId,
       "deployProvControlPlaneWdmTedbMinAdvertWait": deployProvControlPlaneWdmTedbMinAdvertWait,
       "deployProvControlPlaneWdmNaasConfigFlag": deployProvControlPlaneWdmNaasConfigFlag,
       "deployProvControlPlaneWdmNaasTraceDetail": deployProvControlPlaneWdmNaasTraceDetail,
       "deployProvControlPlaneWdmNaasMaxSize": deployProvControlPlaneWdmNaasMaxSize,
       "deployProvControlPlaneWdmNaasAdvertWait": deployProvControlPlaneWdmNaasAdvertWait,
       "deployProvControlPlaneWdmPcConfigFlag": deployProvControlPlaneWdmPcConfigFlag,
       "deployProvControlPlaneWdmPcTraceDetail": deployProvControlPlaneWdmPcTraceDetail,
       "deployProvControlPlaneWdmCdConfigFlag": deployProvControlPlaneWdmCdConfigFlag,
       "deployProvControlPlaneWdmCdTraceDetail": deployProvControlPlaneWdmCdTraceDetail,
       "deployProvControlPlaneWdmCdResyncTimeout": deployProvControlPlaneWdmCdResyncTimeout,
       "deployProvControlPlaneWdmRmConfigFlag": deployProvControlPlaneWdmRmConfigFlag,
       "deployProvControlPlaneWdmRmTraceDetail": deployProvControlPlaneWdmRmTraceDetail,
       "deployProvControlPlaneWdmRmTraceTarget": deployProvControlPlaneWdmRmTraceTarget,
       "deployProvControlPlaneWdmNodeNameSyntax": deployProvControlPlaneWdmNodeNameSyntax,
       "deployProvControlPlaneWdmWaitToRestore": deployProvControlPlaneWdmWaitToRestore,
       "deployProvControlPlaneWdmCapTable": deployProvControlPlaneWdmCapTable,
       "deployProvControlPlaneWdmCapEntry": deployProvControlPlaneWdmCapEntry,
       "deployProvControlPlaneWdmCapRowStatus": deployProvControlPlaneWdmCapRowStatus,
       "deployProvControlPlaneWdmCapCtmConfigFlag": deployProvControlPlaneWdmCapCtmConfigFlag,
       "deployProvControlPlaneWdmCapCtmTraceDetail": deployProvControlPlaneWdmCapCtmTraceDetail,
       "deployProvControlPlaneWdmCapCtmSetupTimeout": deployProvControlPlaneWdmCapCtmSetupTimeout,
       "deployProvControlPlaneWdmCapCtmShutdownTimeout": deployProvControlPlaneWdmCapCtmShutdownTimeout,
       "deployProvControlPlaneWdmCapCtmRetryWait": deployProvControlPlaneWdmCapCtmRetryWait,
       "deployProvControlPlaneWdmCapCtmRetryWaitMultiplier": deployProvControlPlaneWdmCapCtmRetryWaitMultiplier,
       "deployProvControlPlaneWdmCapCtmMaximumRetryWait": deployProvControlPlaneWdmCapCtmMaximumRetryWait,
       "deployProvControlPlaneWdmCapCtmMaximumRetryNumber": deployProvControlPlaneWdmCapCtmMaximumRetryNumber,
       "deployProvControlPlaneWdmCapRaConfigFlag": deployProvControlPlaneWdmCapRaConfigFlag,
       "deployProvControlPlaneWdmCapRaTraceDetail": deployProvControlPlaneWdmCapRaTraceDetail,
       "deployProvControlPlaneWdmCapRaAlarmActivationTime": deployProvControlPlaneWdmCapRaAlarmActivationTime,
       "deployProvControlPlaneWdmCapCmConfigFlag": deployProvControlPlaneWdmCapCmConfigFlag,
       "deployProvControlPlaneWdmCapCmTraceDetail": deployProvControlPlaneWdmCapCmTraceDetail,
       "deployProvControlPlaneWdmCapCmAlarmActivationTime": deployProvControlPlaneWdmCapCmAlarmActivationTime,
       "deployProvControlPlaneWdmCapCmFisFrsTimeout": deployProvControlPlaneWdmCapCmFisFrsTimeout,
       "deployProvControlPlaneWdmCapCmCrankBackTimeout": deployProvControlPlaneWdmCapCmCrankBackTimeout,
       "deployProvControlPlaneWdmCapCdbConfigFlag": deployProvControlPlaneWdmCapCdbConfigFlag,
       "deployProvControlPlaneWdmCapCdbDetail": deployProvControlPlaneWdmCapCdbDetail,
       "deployProvControlPlaneWdmCapCdbMaxSize": deployProvControlPlaneWdmCapCdbMaxSize,
       "deployProvControlPlaneWdmCapRsvpMaxExpRestartTime": deployProvControlPlaneWdmCapRsvpMaxExpRestartTime,
       "deployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime": deployProvControlPlaneWdmCapRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneWdmCapRsvpConfigFlag": deployProvControlPlaneWdmCapRsvpConfigFlag,
       "deployProvControlPlaneWdmCapTedbConfigFlag": deployProvControlPlaneWdmCapTedbConfigFlag,
       "deployProvControlPlaneWdmCapTedbTraceDetail": deployProvControlPlaneWdmCapTedbTraceDetail,
       "deployProvControlPlaneWdmCapTedbMaxSize": deployProvControlPlaneWdmCapTedbMaxSize,
       "deployProvControlPlaneWdmCapTedbRouterId": deployProvControlPlaneWdmCapTedbRouterId,
       "deployProvControlPlaneWdmCapTedbMinAdvertWait": deployProvControlPlaneWdmCapTedbMinAdvertWait,
       "deployProvControlPlaneWdmCapNaasConfigFlag": deployProvControlPlaneWdmCapNaasConfigFlag,
       "deployProvControlPlaneWdmCapNaasTraceDetail": deployProvControlPlaneWdmCapNaasTraceDetail,
       "deployProvControlPlaneWdmCapNaasMaxSize": deployProvControlPlaneWdmCapNaasMaxSize,
       "deployProvControlPlaneWdmCapNaasAdvertWait": deployProvControlPlaneWdmCapNaasAdvertWait,
       "deployProvControlPlaneWdmCapPcConfigFlag": deployProvControlPlaneWdmCapPcConfigFlag,
       "deployProvControlPlaneWdmCapPcTraceDetail": deployProvControlPlaneWdmCapPcTraceDetail,
       "deployProvControlPlaneWdmCapCdConfigFlag": deployProvControlPlaneWdmCapCdConfigFlag,
       "deployProvControlPlaneWdmCapCdTraceDetail": deployProvControlPlaneWdmCapCdTraceDetail,
       "deployProvControlPlaneWdmCapCdResyncTimeout": deployProvControlPlaneWdmCapCdResyncTimeout,
       "deployProvControlPlaneWdmCapRmConfigFlag": deployProvControlPlaneWdmCapRmConfigFlag,
       "deployProvControlPlaneWdmCapRmTraceDetail": deployProvControlPlaneWdmCapRmTraceDetail,
       "deployProvControlPlaneWdmCapRmTraceTarget": deployProvControlPlaneWdmCapRmTraceTarget,
       "deployProvControlPlaneWdmCapNodeNameSyntax": deployProvControlPlaneWdmCapNodeNameSyntax,
       "deployProvControlPlaneWdmCapWaitToRestore": deployProvControlPlaneWdmCapWaitToRestore,
       "deployProvControlPlaneWdmDefaultsTable": deployProvControlPlaneWdmDefaultsTable,
       "deployProvControlPlaneWdmDefaultsEntry": deployProvControlPlaneWdmDefaultsEntry,
       "deployProvControlPlaneWdmDefaultsRowStatus": deployProvControlPlaneWdmDefaultsRowStatus,
       "deployProvControlPlaneWdmDefaultsCtmConfigFlag": deployProvControlPlaneWdmDefaultsCtmConfigFlag,
       "deployProvControlPlaneWdmDefaultsCtmTraceDetail": deployProvControlPlaneWdmDefaultsCtmTraceDetail,
       "deployProvControlPlaneWdmDefaultsCtmSetupTimeout": deployProvControlPlaneWdmDefaultsCtmSetupTimeout,
       "deployProvControlPlaneWdmDefaultsCtmShutdownTimeout": deployProvControlPlaneWdmDefaultsCtmShutdownTimeout,
       "deployProvControlPlaneWdmDefaultsCtmRetryWait": deployProvControlPlaneWdmDefaultsCtmRetryWait,
       "deployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier": deployProvControlPlaneWdmDefaultsCtmRetryWaitMultiplier,
       "deployProvControlPlaneWdmDefaultsCtmMaximumRetryWait": deployProvControlPlaneWdmDefaultsCtmMaximumRetryWait,
       "deployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber": deployProvControlPlaneWdmDefaultsCtmMaximumRetryNumber,
       "deployProvControlPlaneWdmDefaultsRaConfigFlag": deployProvControlPlaneWdmDefaultsRaConfigFlag,
       "deployProvControlPlaneWdmDefaultsRaTraceDetail": deployProvControlPlaneWdmDefaultsRaTraceDetail,
       "deployProvControlPlaneWdmDefaultsRaAlarmActivationTime": deployProvControlPlaneWdmDefaultsRaAlarmActivationTime,
       "deployProvControlPlaneWdmDefaultsCmConfigFlag": deployProvControlPlaneWdmDefaultsCmConfigFlag,
       "deployProvControlPlaneWdmDefaultsCmTraceDetail": deployProvControlPlaneWdmDefaultsCmTraceDetail,
       "deployProvControlPlaneWdmDefaultsCmAlarmActivationTime": deployProvControlPlaneWdmDefaultsCmAlarmActivationTime,
       "deployProvControlPlaneWdmDefaultsCmFisFrsTimeout": deployProvControlPlaneWdmDefaultsCmFisFrsTimeout,
       "deployProvControlPlaneWdmDefaultsCmCrankBackTimeout": deployProvControlPlaneWdmDefaultsCmCrankBackTimeout,
       "deployProvControlPlaneWdmDefaultsCdbConfigFlag": deployProvControlPlaneWdmDefaultsCdbConfigFlag,
       "deployProvControlPlaneWdmDefaultsCdbDetail": deployProvControlPlaneWdmDefaultsCdbDetail,
       "deployProvControlPlaneWdmDefaultsCdbMaxSize": deployProvControlPlaneWdmDefaultsCdbMaxSize,
       "deployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime": deployProvControlPlaneWdmDefaultsRsvpMaxExpRestartTime,
       "deployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime": deployProvControlPlaneWdmDefaultsRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneWdmDefaultsRsvpConfigFlag": deployProvControlPlaneWdmDefaultsRsvpConfigFlag,
       "deployProvControlPlaneWdmDefaultsTedbConfigFlag": deployProvControlPlaneWdmDefaultsTedbConfigFlag,
       "deployProvControlPlaneWdmDefaultsTedbTraceDetail": deployProvControlPlaneWdmDefaultsTedbTraceDetail,
       "deployProvControlPlaneWdmDefaultsTedbMaxSize": deployProvControlPlaneWdmDefaultsTedbMaxSize,
       "deployProvControlPlaneWdmDefaultsTedbRouterId": deployProvControlPlaneWdmDefaultsTedbRouterId,
       "deployProvControlPlaneWdmDefaultsTedbMinAdvertWait": deployProvControlPlaneWdmDefaultsTedbMinAdvertWait,
       "deployProvControlPlaneWdmDefaultsNaasConfigFlag": deployProvControlPlaneWdmDefaultsNaasConfigFlag,
       "deployProvControlPlaneWdmDefaultsNaasTraceDetail": deployProvControlPlaneWdmDefaultsNaasTraceDetail,
       "deployProvControlPlaneWdmDefaultsNaasMaxSize": deployProvControlPlaneWdmDefaultsNaasMaxSize,
       "deployProvControlPlaneWdmDefaultsNaasAdvertWait": deployProvControlPlaneWdmDefaultsNaasAdvertWait,
       "deployProvControlPlaneWdmDefaultsPcConfigFlag": deployProvControlPlaneWdmDefaultsPcConfigFlag,
       "deployProvControlPlaneWdmDefaultsPcTraceDetail": deployProvControlPlaneWdmDefaultsPcTraceDetail,
       "deployProvControlPlaneWdmDefaultsCdConfigFlag": deployProvControlPlaneWdmDefaultsCdConfigFlag,
       "deployProvControlPlaneWdmDefaultsCdTraceDetail": deployProvControlPlaneWdmDefaultsCdTraceDetail,
       "deployProvControlPlaneWdmDefaultsCdResyncTimeout": deployProvControlPlaneWdmDefaultsCdResyncTimeout,
       "deployProvControlPlaneWdmDefaultsRmConfigFlag": deployProvControlPlaneWdmDefaultsRmConfigFlag,
       "deployProvControlPlaneWdmDefaultsRmTraceDetail": deployProvControlPlaneWdmDefaultsRmTraceDetail,
       "deployProvControlPlaneWdmDefaultsRmTraceTarget": deployProvControlPlaneWdmDefaultsRmTraceTarget,
       "deployProvControlPlaneWdmDefaultsNodeNameSyntax": deployProvControlPlaneWdmDefaultsNodeNameSyntax,
       "deployProvControlPlaneWdmDefaultsWaitToRestore": deployProvControlPlaneWdmDefaultsWaitToRestore,
       "deployProvTunnelWdmTable": deployProvTunnelWdmTable,
       "deployProvTunnelWdmEntry": deployProvTunnelWdmEntry,
       "deployProvTunnelWdmRowStatus": deployProvTunnelWdmRowStatus,
       "deployProvTunnelWdmTunnelId": deployProvTunnelWdmTunnelId,
       "deployProvTunnelWdmTunnelNo": deployProvTunnelWdmTunnelNo,
       "deployProvTunnelWdmAlias": deployProvTunnelWdmAlias,
       "deployProvTunnelWdmTunnelType": deployProvTunnelWdmTunnelType,
       "deployProvTunnelWdmToTid": deployProvTunnelWdmToTid,
       "deployProvTunnelWdmToNodeIp": deployProvTunnelWdmToNodeIp,
       "deployProvTunnelWdmFromAid": deployProvTunnelWdmFromAid,
       "deployProvTunnelWdmToAid": deployProvTunnelWdmToAid,
       "deployProvTunnelWdmConnectionDirection": deployProvTunnelWdmConnectionDirection,
       "deployProvTunnelWdmFacilityType": deployProvTunnelWdmFacilityType,
       "deployProvTunnelWdmTerminationLevel": deployProvTunnelWdmTerminationLevel,
       "deployProvTunnelWdmFecType": deployProvTunnelWdmFecType,
       "deployProvTunnelWdmStuff": deployProvTunnelWdmStuff,
       "deployProvTunnelWdmProvisionedPaths": deployProvTunnelWdmProvisionedPaths,
       "deployProvTunnelWdmRecoveryType": deployProvTunnelWdmRecoveryType,
       "deployProvTunnelWdmPin": deployProvTunnelWdmPin,
       "deployProvTunnelWdmRestorationType": deployProvTunnelWdmRestorationType,
       "deployProvTunnelWdmSubLayer": deployProvTunnelWdmSubLayer,
       "deployProvTunnelWdmMonitorEntities": deployProvTunnelWdmMonitorEntities,
       "deployProvTunnelWdmSubLayerEncoding": deployProvTunnelWdmSubLayerEncoding,
       "deployProvTunnelWdmPceMode": deployProvTunnelWdmPceMode,
       "deployProvTunnelWdmTunnelScope": deployProvTunnelWdmTunnelScope,
       "deployProvTunnelWdmLayer": deployProvTunnelWdmLayer,
       "deployProvTunnelWdmOifUni": deployProvTunnelWdmOifUni,
       "deployProvTunnelWdmReversionType": deployProvTunnelWdmReversionType,
       "deployProvTunnelWdmRestorationMode": deployProvTunnelWdmRestorationMode,
       "deployProvTunnelWdmRestPathsNoProv": deployProvTunnelWdmRestPathsNoProv,
       "deployProvTunnelWdmRestorationPaths": deployProvTunnelWdmRestorationPaths,
       "deployProvTunnelWdmTunnelTemplate": deployProvTunnelWdmTunnelTemplate,
       "deployProvTunnelWdmRestorationPathsComputed": deployProvTunnelWdmRestorationPathsComputed,
       "deployProvTunnelWdmFromAidString": deployProvTunnelWdmFromAidString,
       "deployProvTunnelWdmToAidString": deployProvTunnelWdmToAidString,
       "deployProvTunnelWdmCapTable": deployProvTunnelWdmCapTable,
       "deployProvTunnelWdmCapEntry": deployProvTunnelWdmCapEntry,
       "deployProvTunnelWdmCapRowStatus": deployProvTunnelWdmCapRowStatus,
       "deployProvTunnelWdmCapTunnelId": deployProvTunnelWdmCapTunnelId,
       "deployProvTunnelWdmCapTunnelNo": deployProvTunnelWdmCapTunnelNo,
       "deployProvTunnelWdmCapAlias": deployProvTunnelWdmCapAlias,
       "deployProvTunnelWdmCapTunnelType": deployProvTunnelWdmCapTunnelType,
       "deployProvTunnelWdmCapToTid": deployProvTunnelWdmCapToTid,
       "deployProvTunnelWdmCapToNodeIp": deployProvTunnelWdmCapToNodeIp,
       "deployProvTunnelWdmCapFromAid": deployProvTunnelWdmCapFromAid,
       "deployProvTunnelWdmCapToAid": deployProvTunnelWdmCapToAid,
       "deployProvTunnelWdmCapConnectionDirection": deployProvTunnelWdmCapConnectionDirection,
       "deployProvTunnelWdmCapFacilityType": deployProvTunnelWdmCapFacilityType,
       "deployProvTunnelWdmCapTerminationLevel": deployProvTunnelWdmCapTerminationLevel,
       "deployProvTunnelWdmCapFecType": deployProvTunnelWdmCapFecType,
       "deployProvTunnelWdmCapStuff": deployProvTunnelWdmCapStuff,
       "deployProvTunnelWdmCapProvisionedPaths": deployProvTunnelWdmCapProvisionedPaths,
       "deployProvTunnelWdmCapRecoveryType": deployProvTunnelWdmCapRecoveryType,
       "deployProvTunnelWdmCapPin": deployProvTunnelWdmCapPin,
       "deployProvTunnelWdmCapRestorationType": deployProvTunnelWdmCapRestorationType,
       "deployProvTunnelWdmCapSubLayer": deployProvTunnelWdmCapSubLayer,
       "deployProvTunnelWdmCapMonitorEntities": deployProvTunnelWdmCapMonitorEntities,
       "deployProvTunnelWdmCapSubLayerEncoding": deployProvTunnelWdmCapSubLayerEncoding,
       "deployProvTunnelWdmCapPceMode": deployProvTunnelWdmCapPceMode,
       "deployProvTunnelWdmCapTunnelScope": deployProvTunnelWdmCapTunnelScope,
       "deployProvTunnelWdmCapLayer": deployProvTunnelWdmCapLayer,
       "deployProvTunnelWdmCapOifUni": deployProvTunnelWdmCapOifUni,
       "deployProvTunnelWdmCapReversionType": deployProvTunnelWdmCapReversionType,
       "deployProvTunnelWdmCapRestorationMode": deployProvTunnelWdmCapRestorationMode,
       "deployProvTunnelWdmCapRestPathsNoProv": deployProvTunnelWdmCapRestPathsNoProv,
       "deployProvTunnelWdmCapRestorationPaths": deployProvTunnelWdmCapRestorationPaths,
       "deployProvTunnelWdmCapTunnelTemplate": deployProvTunnelWdmCapTunnelTemplate,
       "deployProvTunnelWdmCapRestorationPathsComputed": deployProvTunnelWdmCapRestorationPathsComputed,
       "deployProvTunnelWdmCapFromAidString": deployProvTunnelWdmCapFromAidString,
       "deployProvTunnelWdmCapToAidString": deployProvTunnelWdmCapToAidString,
       "deployProvTunnelWdmDefaultsTable": deployProvTunnelWdmDefaultsTable,
       "deployProvTunnelWdmDefaultsEntry": deployProvTunnelWdmDefaultsEntry,
       "deployProvTunnelWdmDefaultsRowStatus": deployProvTunnelWdmDefaultsRowStatus,
       "deployProvTunnelWdmDefaultsTunnelId": deployProvTunnelWdmDefaultsTunnelId,
       "deployProvTunnelWdmDefaultsTunnelNo": deployProvTunnelWdmDefaultsTunnelNo,
       "deployProvTunnelWdmDefaultsAlias": deployProvTunnelWdmDefaultsAlias,
       "deployProvTunnelWdmDefaultsTunnelType": deployProvTunnelWdmDefaultsTunnelType,
       "deployProvTunnelWdmDefaultsToTid": deployProvTunnelWdmDefaultsToTid,
       "deployProvTunnelWdmDefaultsToNodeIp": deployProvTunnelWdmDefaultsToNodeIp,
       "deployProvTunnelWdmDefaultsFromAid": deployProvTunnelWdmDefaultsFromAid,
       "deployProvTunnelWdmDefaultsToAid": deployProvTunnelWdmDefaultsToAid,
       "deployProvTunnelWdmDefaultsConnectionDirection": deployProvTunnelWdmDefaultsConnectionDirection,
       "deployProvTunnelWdmDefaultsFacilityType": deployProvTunnelWdmDefaultsFacilityType,
       "deployProvTunnelWdmDefaultsTerminationLevel": deployProvTunnelWdmDefaultsTerminationLevel,
       "deployProvTunnelWdmDefaultsFecType": deployProvTunnelWdmDefaultsFecType,
       "deployProvTunnelWdmDefaultsStuff": deployProvTunnelWdmDefaultsStuff,
       "deployProvTunnelWdmDefaultsProvisionedPaths": deployProvTunnelWdmDefaultsProvisionedPaths,
       "deployProvTunnelWdmDefaultsRecoveryType": deployProvTunnelWdmDefaultsRecoveryType,
       "deployProvTunnelWdmDefaultsPin": deployProvTunnelWdmDefaultsPin,
       "deployProvTunnelWdmDefaultsRestorationType": deployProvTunnelWdmDefaultsRestorationType,
       "deployProvTunnelWdmDefaultsSubLayer": deployProvTunnelWdmDefaultsSubLayer,
       "deployProvTunnelWdmDefaultsMonitorEntities": deployProvTunnelWdmDefaultsMonitorEntities,
       "deployProvTunnelWdmDefaultsSubLayerEncoding": deployProvTunnelWdmDefaultsSubLayerEncoding,
       "deployProvTunnelWdmDefaultsPceMode": deployProvTunnelWdmDefaultsPceMode,
       "deployProvTunnelWdmDefaultsTunnelScope": deployProvTunnelWdmDefaultsTunnelScope,
       "deployProvTunnelWdmDefaultsLayer": deployProvTunnelWdmDefaultsLayer,
       "deployProvTunnelWdmDefaultsOifUni": deployProvTunnelWdmDefaultsOifUni,
       "deployProvTunnelWdmDefaultsReversionType": deployProvTunnelWdmDefaultsReversionType,
       "deployProvTunnelWdmDefaultsRestorationMode": deployProvTunnelWdmDefaultsRestorationMode,
       "deployProvTunnelWdmDefaultsRestPathsNoProv": deployProvTunnelWdmDefaultsRestPathsNoProv,
       "deployProvTunnelWdmDefaultsRestorationPaths": deployProvTunnelWdmDefaultsRestorationPaths,
       "deployProvTunnelWdmDefaultsTunnelTemplate": deployProvTunnelWdmDefaultsTunnelTemplate,
       "deployProvTunnelWdmDefaultsRestorationPathsComputed": deployProvTunnelWdmDefaultsRestorationPathsComputed,
       "deployProvTunnelWdmDefaultsFromAidString": deployProvTunnelWdmDefaultsFromAidString,
       "deployProvTunnelWdmDefaultsToAidString": deployProvTunnelWdmDefaultsToAidString,
       "deployProvPathWdmTable": deployProvPathWdmTable,
       "deployProvPathWdmEntry": deployProvPathWdmEntry,
       "deployProvPathWdmRowStatus": deployProvPathWdmRowStatus,
       "deployProvPathWdmPathId": deployProvPathWdmPathId,
       "deployProvPathWdmCapTable": deployProvPathWdmCapTable,
       "deployProvPathWdmCapEntry": deployProvPathWdmCapEntry,
       "deployProvPathWdmCapRowStatus": deployProvPathWdmCapRowStatus,
       "deployProvPathWdmCapPathId": deployProvPathWdmCapPathId,
       "deployProvPathWdmDefaultsTable": deployProvPathWdmDefaultsTable,
       "deployProvPathWdmDefaultsEntry": deployProvPathWdmDefaultsEntry,
       "deployProvPathWdmDefaultsRowStatus": deployProvPathWdmDefaultsRowStatus,
       "deployProvPathWdmDefaultsPathId": deployProvPathWdmDefaultsPathId,
       "deployProvPathElementWdmTable": deployProvPathElementWdmTable,
       "deployProvPathElementWdmEntry": deployProvPathElementWdmEntry,
       "deployProvPathElementWdmRowStatus": deployProvPathElementWdmRowStatus,
       "deployProvPathElementWdmTrafficEngineeringType": deployProvPathElementWdmTrafficEngineeringType,
       "deployProvPathElementWdmLifIp": deployProvPathElementWdmLifIp,
       "deployProvPathElementWdmNodeIp": deployProvPathElementWdmNodeIp,
       "deployProvPathElementWdmTid": deployProvPathElementWdmTid,
       "deployProvPathElementWdmLogicalInterfaceId": deployProvPathElementWdmLogicalInterfaceId,
       "deployProvPathElementWdmTie": deployProvPathElementWdmTie,
       "deployProvPathElementWdmChannelUp": deployProvPathElementWdmChannelUp,
       "deployProvPathElementWdmChannelDown": deployProvPathElementWdmChannelDown,
       "deployProvPathElementWdmUpstreamModuleAid": deployProvPathElementWdmUpstreamModuleAid,
       "deployProvPathElementWdmDownstreamModuleAid": deployProvPathElementWdmDownstreamModuleAid,
       "deployProvPathElementWdmCapTable": deployProvPathElementWdmCapTable,
       "deployProvPathElementWdmCapEntry": deployProvPathElementWdmCapEntry,
       "deployProvPathElementWdmCapRowStatus": deployProvPathElementWdmCapRowStatus,
       "deployProvPathElementWdmCapTrafficEngineeringType": deployProvPathElementWdmCapTrafficEngineeringType,
       "deployProvPathElementWdmCapLifIp": deployProvPathElementWdmCapLifIp,
       "deployProvPathElementWdmCapNodeIp": deployProvPathElementWdmCapNodeIp,
       "deployProvPathElementWdmCapTid": deployProvPathElementWdmCapTid,
       "deployProvPathElementWdmCapLogicalInterfaceId": deployProvPathElementWdmCapLogicalInterfaceId,
       "deployProvPathElementWdmCapTie": deployProvPathElementWdmCapTie,
       "deployProvPathElementWdmCapChannelUp": deployProvPathElementWdmCapChannelUp,
       "deployProvPathElementWdmCapChannelDown": deployProvPathElementWdmCapChannelDown,
       "deployProvPathElementWdmCapUpstreamModuleAid": deployProvPathElementWdmCapUpstreamModuleAid,
       "deployProvPathElementWdmCapDownstreamModuleAid": deployProvPathElementWdmCapDownstreamModuleAid,
       "deployProvPathElementWdmDefaultsTable": deployProvPathElementWdmDefaultsTable,
       "deployProvPathElementWdmDefaultsEntry": deployProvPathElementWdmDefaultsEntry,
       "deployProvPathElementWdmDefaultsRowStatus": deployProvPathElementWdmDefaultsRowStatus,
       "deployProvPathElementWdmDefaultsTrafficEngineeringType": deployProvPathElementWdmDefaultsTrafficEngineeringType,
       "deployProvPathElementWdmDefaultsLifIp": deployProvPathElementWdmDefaultsLifIp,
       "deployProvPathElementWdmDefaultsNodeIp": deployProvPathElementWdmDefaultsNodeIp,
       "deployProvPathElementWdmDefaultsTid": deployProvPathElementWdmDefaultsTid,
       "deployProvPathElementWdmDefaultsLogicalInterfaceId": deployProvPathElementWdmDefaultsLogicalInterfaceId,
       "deployProvPathElementWdmDefaultsTie": deployProvPathElementWdmDefaultsTie,
       "deployProvPathElementWdmDefaultsChannelUp": deployProvPathElementWdmDefaultsChannelUp,
       "deployProvPathElementWdmDefaultsChannelDown": deployProvPathElementWdmDefaultsChannelDown,
       "deployProvPathElementWdmDefaultsUpstreamModuleAid": deployProvPathElementWdmDefaultsUpstreamModuleAid,
       "deployProvPathElementWdmDefaultsDownstreamModuleAid": deployProvPathElementWdmDefaultsDownstreamModuleAid,
       "deployProvCopyPathWdmTable": deployProvCopyPathWdmTable,
       "deployProvCopyPathWdmEntry": deployProvCopyPathWdmEntry,
       "deployProvCopyPathWdmRowStatus": deployProvCopyPathWdmRowStatus,
       "deployProvCopyPathWdmSourcePathIndex": deployProvCopyPathWdmSourcePathIndex,
       "deployProvCopyPathWdmPathId": deployProvCopyPathWdmPathId,
       "deployProvCopyPathWdmCapTable": deployProvCopyPathWdmCapTable,
       "deployProvCopyPathWdmCapEntry": deployProvCopyPathWdmCapEntry,
       "deployProvCopyPathWdmCapRowStatus": deployProvCopyPathWdmCapRowStatus,
       "deployProvCopyPathWdmCapSourcePathIndex": deployProvCopyPathWdmCapSourcePathIndex,
       "deployProvCopyPathWdmCapPathId": deployProvCopyPathWdmCapPathId,
       "deployProvCopyPathWdmDefaultsTable": deployProvCopyPathWdmDefaultsTable,
       "deployProvCopyPathWdmDefaultsEntry": deployProvCopyPathWdmDefaultsEntry,
       "deployProvCopyPathWdmDefaultsRowStatus": deployProvCopyPathWdmDefaultsRowStatus,
       "deployProvCopyPathWdmDefaultsSourcePathIndex": deployProvCopyPathWdmDefaultsSourcePathIndex,
       "deployProvCopyPathWdmDefaultsPathId": deployProvCopyPathWdmDefaultsPathId,
       "deployProvLogicalCpIfTable": deployProvLogicalCpIfTable,
       "deployProvLogicalCpIfEntry": deployProvLogicalCpIfEntry,
       "deployProvLogicalCpIfRowStatus": deployProvLogicalCpIfRowStatus,
       "deployProvLogicalCpIfFacilityType": deployProvLogicalCpIfFacilityType,
       "deployProvLogicalCpIfAlias": deployProvLogicalCpIfAlias,
       "deployProvLogicalCpIfDcnAid": deployProvLogicalCpIfDcnAid,
       "deployProvLogicalCpIfOspf": deployProvLogicalCpIfOspf,
       "deployProvLogicalCpIfAreaId": deployProvLogicalCpIfAreaId,
       "deployProvLogicalCpIfMetric": deployProvLogicalCpIfMetric,
       "deployProvLogicalCpIfHelloInterval": deployProvLogicalCpIfHelloInterval,
       "deployProvLogicalCpIfDeadInterval": deployProvLogicalCpIfDeadInterval,
       "deployProvLogicalCpIfPrio": deployProvLogicalCpIfPrio,
       "deployProvLogicalCpIfRetransmitInterval": deployProvLogicalCpIfRetransmitInterval,
       "deployProvLogicalCpIfAuthType": deployProvLogicalCpIfAuthType,
       "deployProvLogicalCpIfAuthString": deployProvLogicalCpIfAuthString,
       "deployProvLogicalCpIfTransport": deployProvLogicalCpIfTransport,
       "deployProvLogicalCpIfFarEndLifId": deployProvLogicalCpIfFarEndLifId,
       "deployProvLogicalCpIfFarEndNodeIp": deployProvLogicalCpIfFarEndNodeIp,
       "deployProvLogicalCpIfFarEndTid": deployProvLogicalCpIfFarEndTid,
       "deployProvLogicalCpIfLayer": deployProvLogicalCpIfLayer,
       "deployProvLogicalCpIfCpType": deployProvLogicalCpIfCpType,
       "deployProvLogicalCpIfRefreshTimeout": deployProvLogicalCpIfRefreshTimeout,
       "deployProvLogicalCpIfRefreshMultiplier": deployProvLogicalCpIfRefreshMultiplier,
       "deployProvLogicalCpIfTeMetric": deployProvLogicalCpIfTeMetric,
       "deployProvLogicalCpIfTeAreaId": deployProvLogicalCpIfTeAreaId,
       "deployProvLogicalCpIfLinkColor": deployProvLogicalCpIfLinkColor,
       "deployProvLogicalCpIfIpType": deployProvLogicalCpIfIpType,
       "deployProvLogicalCpIfIpAddr": deployProvLogicalCpIfIpAddr,
       "deployProvLogicalCpIfIpAddrMask": deployProvLogicalCpIfIpAddrMask,
       "deployProvLogicalCpIfAdmin": deployProvLogicalCpIfAdmin,
       "deployProvLogicalCpIfEncapsulation": deployProvLogicalCpIfEncapsulation,
       "deployProvLogicalCpIfPushedNendIpHeader": deployProvLogicalCpIfPushedNendIpHeader,
       "deployProvLogicalCpIfPushedFarEndIpHeader": deployProvLogicalCpIfPushedFarEndIpHeader,
       "deployProvLogicalCpIfTimeToLive": deployProvLogicalCpIfTimeToLive,
       "deployProvLogicalCpIfNendTeLinkIdNum": deployProvLogicalCpIfNendTeLinkIdNum,
       "deployProvLogicalCpIfFendTeLinkIdNum": deployProvLogicalCpIfFendTeLinkIdNum,
       "deployProvLogicalCpIfFendDataLinkId": deployProvLogicalCpIfFendDataLinkId,
       "deployProvLogicalCpIfNendTeLinkIdUnn": deployProvLogicalCpIfNendTeLinkIdUnn,
       "deployProvLogicalCpIfFendTeLinkIdUnn": deployProvLogicalCpIfFendTeLinkIdUnn,
       "deployProvLogicalCpIfEncoding": deployProvLogicalCpIfEncoding,
       "deployProvLogicalCpIfTunnelAid": deployProvLogicalCpIfTunnelAid,
       "deployProvLogicalCpIfExtAdvertised": deployProvLogicalCpIfExtAdvertised,
       "deployProvLogicalCpIfVTeType": deployProvLogicalCpIfVTeType,
       "deployProvLogicalCpIfVNodeIp": deployProvLogicalCpIfVNodeIp,
       "deployProvLogicalCpIfVNodeTltp": deployProvLogicalCpIfVNodeTltp,
       "deployProvLogicalCpIfCapTable": deployProvLogicalCpIfCapTable,
       "deployProvLogicalCpIfCapEntry": deployProvLogicalCpIfCapEntry,
       "deployProvLogicalCpIfCapRowStatus": deployProvLogicalCpIfCapRowStatus,
       "deployProvLogicalCpIfCapFacilityType": deployProvLogicalCpIfCapFacilityType,
       "deployProvLogicalCpIfCapAlias": deployProvLogicalCpIfCapAlias,
       "deployProvLogicalCpIfCapDcnAid": deployProvLogicalCpIfCapDcnAid,
       "deployProvLogicalCpIfCapOspf": deployProvLogicalCpIfCapOspf,
       "deployProvLogicalCpIfCapAreaId": deployProvLogicalCpIfCapAreaId,
       "deployProvLogicalCpIfCapMetric": deployProvLogicalCpIfCapMetric,
       "deployProvLogicalCpIfCapHelloInterval": deployProvLogicalCpIfCapHelloInterval,
       "deployProvLogicalCpIfCapDeadInterval": deployProvLogicalCpIfCapDeadInterval,
       "deployProvLogicalCpIfCapPrio": deployProvLogicalCpIfCapPrio,
       "deployProvLogicalCpIfCapRetransmitInterval": deployProvLogicalCpIfCapRetransmitInterval,
       "deployProvLogicalCpIfCapAuthType": deployProvLogicalCpIfCapAuthType,
       "deployProvLogicalCpIfCapAuthString": deployProvLogicalCpIfCapAuthString,
       "deployProvLogicalCpIfCapTransport": deployProvLogicalCpIfCapTransport,
       "deployProvLogicalCpIfCapFarEndLifId": deployProvLogicalCpIfCapFarEndLifId,
       "deployProvLogicalCpIfCapFarEndNodeIp": deployProvLogicalCpIfCapFarEndNodeIp,
       "deployProvLogicalCpIfCapFarEndTid": deployProvLogicalCpIfCapFarEndTid,
       "deployProvLogicalCpIfCapLayer": deployProvLogicalCpIfCapLayer,
       "deployProvLogicalCpIfCapCpType": deployProvLogicalCpIfCapCpType,
       "deployProvLogicalCpIfCapRefreshTimeout": deployProvLogicalCpIfCapRefreshTimeout,
       "deployProvLogicalCpIfCapRefreshMultiplier": deployProvLogicalCpIfCapRefreshMultiplier,
       "deployProvLogicalCpIfCapTeMetric": deployProvLogicalCpIfCapTeMetric,
       "deployProvLogicalCpIfCapTeAreaId": deployProvLogicalCpIfCapTeAreaId,
       "deployProvLogicalCpIfCapLinkColor": deployProvLogicalCpIfCapLinkColor,
       "deployProvLogicalCpIfCapIpType": deployProvLogicalCpIfCapIpType,
       "deployProvLogicalCpIfCapIpAddr": deployProvLogicalCpIfCapIpAddr,
       "deployProvLogicalCpIfCapIpAddrMask": deployProvLogicalCpIfCapIpAddrMask,
       "deployProvLogicalCpIfCapAdmin": deployProvLogicalCpIfCapAdmin,
       "deployProvLogicalCpIfCapEncapsulation": deployProvLogicalCpIfCapEncapsulation,
       "deployProvLogicalCpIfCapPushedNendIpHeader": deployProvLogicalCpIfCapPushedNendIpHeader,
       "deployProvLogicalCpIfCapPushedFarEndIpHeader": deployProvLogicalCpIfCapPushedFarEndIpHeader,
       "deployProvLogicalCpIfCapTimeToLive": deployProvLogicalCpIfCapTimeToLive,
       "deployProvLogicalCpIfCapNendTeLinkIdNum": deployProvLogicalCpIfCapNendTeLinkIdNum,
       "deployProvLogicalCpIfCapFendTeLinkIdNum": deployProvLogicalCpIfCapFendTeLinkIdNum,
       "deployProvLogicalCpIfCapFendDataLinkId": deployProvLogicalCpIfCapFendDataLinkId,
       "deployProvLogicalCpIfCapNendTeLinkIdUnn": deployProvLogicalCpIfCapNendTeLinkIdUnn,
       "deployProvLogicalCpIfCapFendTeLinkIdUnn": deployProvLogicalCpIfCapFendTeLinkIdUnn,
       "deployProvLogicalCpIfCapEncoding": deployProvLogicalCpIfCapEncoding,
       "deployProvLogicalCpIfCapTunnelAid": deployProvLogicalCpIfCapTunnelAid,
       "deployProvLogicalCpIfCapExtAdvertised": deployProvLogicalCpIfCapExtAdvertised,
       "deployProvLogicalCpIfCapVTeType": deployProvLogicalCpIfCapVTeType,
       "deployProvLogicalCpIfCapVNodeIp": deployProvLogicalCpIfCapVNodeIp,
       "deployProvLogicalCpIfCapVNodeTltp": deployProvLogicalCpIfCapVNodeTltp,
       "deployProvLogicalCpIfDefaultsTable": deployProvLogicalCpIfDefaultsTable,
       "deployProvLogicalCpIfDefaultsEntry": deployProvLogicalCpIfDefaultsEntry,
       "deployProvLogicalCpIfDefaultsRowStatus": deployProvLogicalCpIfDefaultsRowStatus,
       "deployProvLogicalCpIfDefaultsFacilityType": deployProvLogicalCpIfDefaultsFacilityType,
       "deployProvLogicalCpIfDefaultsAlias": deployProvLogicalCpIfDefaultsAlias,
       "deployProvLogicalCpIfDefaultsDcnAid": deployProvLogicalCpIfDefaultsDcnAid,
       "deployProvLogicalCpIfDefaultsOspf": deployProvLogicalCpIfDefaultsOspf,
       "deployProvLogicalCpIfDefaultsAreaId": deployProvLogicalCpIfDefaultsAreaId,
       "deployProvLogicalCpIfDefaultsMetric": deployProvLogicalCpIfDefaultsMetric,
       "deployProvLogicalCpIfDefaultsHelloInterval": deployProvLogicalCpIfDefaultsHelloInterval,
       "deployProvLogicalCpIfDefaultsDeadInterval": deployProvLogicalCpIfDefaultsDeadInterval,
       "deployProvLogicalCpIfDefaultsPrio": deployProvLogicalCpIfDefaultsPrio,
       "deployProvLogicalCpIfDefaultsRetransmitInterval": deployProvLogicalCpIfDefaultsRetransmitInterval,
       "deployProvLogicalCpIfDefaultsAuthType": deployProvLogicalCpIfDefaultsAuthType,
       "deployProvLogicalCpIfDefaultsAuthString": deployProvLogicalCpIfDefaultsAuthString,
       "deployProvLogicalCpIfDefaultsTransport": deployProvLogicalCpIfDefaultsTransport,
       "deployProvLogicalCpIfDefaultsFarEndLifId": deployProvLogicalCpIfDefaultsFarEndLifId,
       "deployProvLogicalCpIfDefaultsFarEndNodeIp": deployProvLogicalCpIfDefaultsFarEndNodeIp,
       "deployProvLogicalCpIfDefaultsFarEndTid": deployProvLogicalCpIfDefaultsFarEndTid,
       "deployProvLogicalCpIfDefaultsLayer": deployProvLogicalCpIfDefaultsLayer,
       "deployProvLogicalCpIfDefaultsCpType": deployProvLogicalCpIfDefaultsCpType,
       "deployProvLogicalCpIfDefaultsRefreshTimeout": deployProvLogicalCpIfDefaultsRefreshTimeout,
       "deployProvLogicalCpIfDefaultsRefreshMultiplier": deployProvLogicalCpIfDefaultsRefreshMultiplier,
       "deployProvLogicalCpIfDefaultsTeMetric": deployProvLogicalCpIfDefaultsTeMetric,
       "deployProvLogicalCpIfDefaultsTeAreaId": deployProvLogicalCpIfDefaultsTeAreaId,
       "deployProvLogicalCpIfDefaultsLinkColor": deployProvLogicalCpIfDefaultsLinkColor,
       "deployProvLogicalCpIfDefaultsIpType": deployProvLogicalCpIfDefaultsIpType,
       "deployProvLogicalCpIfDefaultsIpAddr": deployProvLogicalCpIfDefaultsIpAddr,
       "deployProvLogicalCpIfDefaultsIpAddrMask": deployProvLogicalCpIfDefaultsIpAddrMask,
       "deployProvLogicalCpIfDefaultsAdmin": deployProvLogicalCpIfDefaultsAdmin,
       "deployProvLogicalCpIfDefaultsEncapsulation": deployProvLogicalCpIfDefaultsEncapsulation,
       "deployProvLogicalCpIfDefaultsPushedNendIpHeader": deployProvLogicalCpIfDefaultsPushedNendIpHeader,
       "deployProvLogicalCpIfDefaultsPushedFarEndIpHeader": deployProvLogicalCpIfDefaultsPushedFarEndIpHeader,
       "deployProvLogicalCpIfDefaultsTimeToLive": deployProvLogicalCpIfDefaultsTimeToLive,
       "deployProvLogicalCpIfDefaultsNendTeLinkIdNum": deployProvLogicalCpIfDefaultsNendTeLinkIdNum,
       "deployProvLogicalCpIfDefaultsFendTeLinkIdNum": deployProvLogicalCpIfDefaultsFendTeLinkIdNum,
       "deployProvLogicalCpIfDefaultsFendDataLinkId": deployProvLogicalCpIfDefaultsFendDataLinkId,
       "deployProvLogicalCpIfDefaultsNendTeLinkIdUnn": deployProvLogicalCpIfDefaultsNendTeLinkIdUnn,
       "deployProvLogicalCpIfDefaultsFendTeLinkIdUnn": deployProvLogicalCpIfDefaultsFendTeLinkIdUnn,
       "deployProvLogicalCpIfDefaultsEncoding": deployProvLogicalCpIfDefaultsEncoding,
       "deployProvLogicalCpIfDefaultsTunnelAid": deployProvLogicalCpIfDefaultsTunnelAid,
       "deployProvLogicalCpIfDefaultsExtAdvertised": deployProvLogicalCpIfDefaultsExtAdvertised,
       "deployProvLogicalCpIfDefaultsVTeType": deployProvLogicalCpIfDefaultsVTeType,
       "deployProvLogicalCpIfDefaultsVNodeIp": deployProvLogicalCpIfDefaultsVNodeIp,
       "deployProvLogicalCpIfDefaultsVNodeTltp": deployProvLogicalCpIfDefaultsVNodeTltp,
       "deployProvControlPlaneEthTable": deployProvControlPlaneEthTable,
       "deployProvControlPlaneEthEntry": deployProvControlPlaneEthEntry,
       "deployProvControlPlaneEthRowStatus": deployProvControlPlaneEthRowStatus,
       "deployProvControlPlaneEthCtmConfigFlag": deployProvControlPlaneEthCtmConfigFlag,
       "deployProvControlPlaneEthCtmTraceDetail": deployProvControlPlaneEthCtmTraceDetail,
       "deployProvControlPlaneEthCtmSetupTimeout": deployProvControlPlaneEthCtmSetupTimeout,
       "deployProvControlPlaneEthCtmShutdownTimeout": deployProvControlPlaneEthCtmShutdownTimeout,
       "deployProvControlPlaneEthCtmRetryWait": deployProvControlPlaneEthCtmRetryWait,
       "deployProvControlPlaneEthCtmRetryWaitMultiplier": deployProvControlPlaneEthCtmRetryWaitMultiplier,
       "deployProvControlPlaneEthCtmMaximumRetryWait": deployProvControlPlaneEthCtmMaximumRetryWait,
       "deployProvControlPlaneEthCtmMaximumRetryNumber": deployProvControlPlaneEthCtmMaximumRetryNumber,
       "deployProvControlPlaneEthRaConfigFlag": deployProvControlPlaneEthRaConfigFlag,
       "deployProvControlPlaneEthRaTraceDetail": deployProvControlPlaneEthRaTraceDetail,
       "deployProvControlPlaneEthRaAlarmActivationTime": deployProvControlPlaneEthRaAlarmActivationTime,
       "deployProvControlPlaneEthCmConfigFlag": deployProvControlPlaneEthCmConfigFlag,
       "deployProvControlPlaneEthCmTraceDetail": deployProvControlPlaneEthCmTraceDetail,
       "deployProvControlPlaneEthCmAlarmActivationTime": deployProvControlPlaneEthCmAlarmActivationTime,
       "deployProvControlPlaneEthCmFisFrsTimeout": deployProvControlPlaneEthCmFisFrsTimeout,
       "deployProvControlPlaneEthCmCrankBackTimeout": deployProvControlPlaneEthCmCrankBackTimeout,
       "deployProvControlPlaneEthCdbConfigFlag": deployProvControlPlaneEthCdbConfigFlag,
       "deployProvControlPlaneEthCdbDetail": deployProvControlPlaneEthCdbDetail,
       "deployProvControlPlaneEthCdbMaxSize": deployProvControlPlaneEthCdbMaxSize,
       "deployProvControlPlaneEthRsvpMaxExpRestartTime": deployProvControlPlaneEthRsvpMaxExpRestartTime,
       "deployProvControlPlaneEthRsvpMaxExpRecoveryTime": deployProvControlPlaneEthRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneEthRsvpConfigFlag": deployProvControlPlaneEthRsvpConfigFlag,
       "deployProvControlPlaneEthTedbConfigFlag": deployProvControlPlaneEthTedbConfigFlag,
       "deployProvControlPlaneEthTedbTraceDetail": deployProvControlPlaneEthTedbTraceDetail,
       "deployProvControlPlaneEthTedbMaxSize": deployProvControlPlaneEthTedbMaxSize,
       "deployProvControlPlaneEthTedbRouterId": deployProvControlPlaneEthTedbRouterId,
       "deployProvControlPlaneEthTedbMinAdvertWait": deployProvControlPlaneEthTedbMinAdvertWait,
       "deployProvControlPlaneEthNaasConfigFlag": deployProvControlPlaneEthNaasConfigFlag,
       "deployProvControlPlaneEthNaasTraceDetail": deployProvControlPlaneEthNaasTraceDetail,
       "deployProvControlPlaneEthNaasMaxSize": deployProvControlPlaneEthNaasMaxSize,
       "deployProvControlPlaneEthNaasAdvertWait": deployProvControlPlaneEthNaasAdvertWait,
       "deployProvControlPlaneEthPcConfigFlag": deployProvControlPlaneEthPcConfigFlag,
       "deployProvControlPlaneEthPcTraceDetail": deployProvControlPlaneEthPcTraceDetail,
       "deployProvControlPlaneEthCdConfigFlag": deployProvControlPlaneEthCdConfigFlag,
       "deployProvControlPlaneEthCdTraceDetail": deployProvControlPlaneEthCdTraceDetail,
       "deployProvControlPlaneEthCdResyncTimeout": deployProvControlPlaneEthCdResyncTimeout,
       "deployProvControlPlaneEthRmConfigFlag": deployProvControlPlaneEthRmConfigFlag,
       "deployProvControlPlaneEthRmTraceDetail": deployProvControlPlaneEthRmTraceDetail,
       "deployProvControlPlaneEthRmTraceTarget": deployProvControlPlaneEthRmTraceTarget,
       "deployProvControlPlaneEthCapTable": deployProvControlPlaneEthCapTable,
       "deployProvControlPlaneEthCapEntry": deployProvControlPlaneEthCapEntry,
       "deployProvControlPlaneEthCapRowStatus": deployProvControlPlaneEthCapRowStatus,
       "deployProvControlPlaneEthCapCtmConfigFlag": deployProvControlPlaneEthCapCtmConfigFlag,
       "deployProvControlPlaneEthCapCtmTraceDetail": deployProvControlPlaneEthCapCtmTraceDetail,
       "deployProvControlPlaneEthCapCtmSetupTimeout": deployProvControlPlaneEthCapCtmSetupTimeout,
       "deployProvControlPlaneEthCapCtmShutdownTimeout": deployProvControlPlaneEthCapCtmShutdownTimeout,
       "deployProvControlPlaneEthCapCtmRetryWait": deployProvControlPlaneEthCapCtmRetryWait,
       "deployProvControlPlaneEthCapCtmRetryWaitMultiplier": deployProvControlPlaneEthCapCtmRetryWaitMultiplier,
       "deployProvControlPlaneEthCapCtmMaximumRetryWait": deployProvControlPlaneEthCapCtmMaximumRetryWait,
       "deployProvControlPlaneEthCapCtmMaximumRetryNumber": deployProvControlPlaneEthCapCtmMaximumRetryNumber,
       "deployProvControlPlaneEthCapRaConfigFlag": deployProvControlPlaneEthCapRaConfigFlag,
       "deployProvControlPlaneEthCapRaTraceDetail": deployProvControlPlaneEthCapRaTraceDetail,
       "deployProvControlPlaneEthCapRaAlarmActivationTime": deployProvControlPlaneEthCapRaAlarmActivationTime,
       "deployProvControlPlaneEthCapCmConfigFlag": deployProvControlPlaneEthCapCmConfigFlag,
       "deployProvControlPlaneEthCapCmTraceDetail": deployProvControlPlaneEthCapCmTraceDetail,
       "deployProvControlPlaneEthCapCmAlarmActivationTime": deployProvControlPlaneEthCapCmAlarmActivationTime,
       "deployProvControlPlaneEthCapCmFisFrsTimeout": deployProvControlPlaneEthCapCmFisFrsTimeout,
       "deployProvControlPlaneEthCapCmCrankBackTimeout": deployProvControlPlaneEthCapCmCrankBackTimeout,
       "deployProvControlPlaneEthCapCdbConfigFlag": deployProvControlPlaneEthCapCdbConfigFlag,
       "deployProvControlPlaneEthCapCdbDetail": deployProvControlPlaneEthCapCdbDetail,
       "deployProvControlPlaneEthCapCdbMaxSize": deployProvControlPlaneEthCapCdbMaxSize,
       "deployProvControlPlaneEthCapRsvpMaxExpRestartTime": deployProvControlPlaneEthCapRsvpMaxExpRestartTime,
       "deployProvControlPlaneEthCapRsvpMaxExpRecoveryTime": deployProvControlPlaneEthCapRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneEthCapRsvpConfigFlag": deployProvControlPlaneEthCapRsvpConfigFlag,
       "deployProvControlPlaneEthCapTedbConfigFlag": deployProvControlPlaneEthCapTedbConfigFlag,
       "deployProvControlPlaneEthCapTedbTraceDetail": deployProvControlPlaneEthCapTedbTraceDetail,
       "deployProvControlPlaneEthCapTedbMaxSize": deployProvControlPlaneEthCapTedbMaxSize,
       "deployProvControlPlaneEthCapTedbRouterId": deployProvControlPlaneEthCapTedbRouterId,
       "deployProvControlPlaneEthCapTedbMinAdvertWait": deployProvControlPlaneEthCapTedbMinAdvertWait,
       "deployProvControlPlaneEthCapNaasConfigFlag": deployProvControlPlaneEthCapNaasConfigFlag,
       "deployProvControlPlaneEthCapNaasTraceDetail": deployProvControlPlaneEthCapNaasTraceDetail,
       "deployProvControlPlaneEthCapNaasMaxSize": deployProvControlPlaneEthCapNaasMaxSize,
       "deployProvControlPlaneEthCapNaasAdvertWait": deployProvControlPlaneEthCapNaasAdvertWait,
       "deployProvControlPlaneEthCapPcConfigFlag": deployProvControlPlaneEthCapPcConfigFlag,
       "deployProvControlPlaneEthCapPcTraceDetail": deployProvControlPlaneEthCapPcTraceDetail,
       "deployProvControlPlaneEthCapCdConfigFlag": deployProvControlPlaneEthCapCdConfigFlag,
       "deployProvControlPlaneEthCapCdTraceDetail": deployProvControlPlaneEthCapCdTraceDetail,
       "deployProvControlPlaneEthCapCdResyncTimeout": deployProvControlPlaneEthCapCdResyncTimeout,
       "deployProvControlPlaneEthCapRmConfigFlag": deployProvControlPlaneEthCapRmConfigFlag,
       "deployProvControlPlaneEthCapRmTraceDetail": deployProvControlPlaneEthCapRmTraceDetail,
       "deployProvControlPlaneEthCapRmTraceTarget": deployProvControlPlaneEthCapRmTraceTarget,
       "deployProvControlPlaneEthDefaultsTable": deployProvControlPlaneEthDefaultsTable,
       "deployProvControlPlaneEthDefaultsEntry": deployProvControlPlaneEthDefaultsEntry,
       "deployProvControlPlaneEthDefaultsRowStatus": deployProvControlPlaneEthDefaultsRowStatus,
       "deployProvControlPlaneEthDefaultsCtmConfigFlag": deployProvControlPlaneEthDefaultsCtmConfigFlag,
       "deployProvControlPlaneEthDefaultsCtmTraceDetail": deployProvControlPlaneEthDefaultsCtmTraceDetail,
       "deployProvControlPlaneEthDefaultsCtmSetupTimeout": deployProvControlPlaneEthDefaultsCtmSetupTimeout,
       "deployProvControlPlaneEthDefaultsCtmShutdownTimeout": deployProvControlPlaneEthDefaultsCtmShutdownTimeout,
       "deployProvControlPlaneEthDefaultsCtmRetryWait": deployProvControlPlaneEthDefaultsCtmRetryWait,
       "deployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier": deployProvControlPlaneEthDefaultsCtmRetryWaitMultiplier,
       "deployProvControlPlaneEthDefaultsCtmMaximumRetryWait": deployProvControlPlaneEthDefaultsCtmMaximumRetryWait,
       "deployProvControlPlaneEthDefaultsCtmMaximumRetryNumber": deployProvControlPlaneEthDefaultsCtmMaximumRetryNumber,
       "deployProvControlPlaneEthDefaultsRaConfigFlag": deployProvControlPlaneEthDefaultsRaConfigFlag,
       "deployProvControlPlaneEthDefaultsRaTraceDetail": deployProvControlPlaneEthDefaultsRaTraceDetail,
       "deployProvControlPlaneEthDefaultsRaAlarmActivationTime": deployProvControlPlaneEthDefaultsRaAlarmActivationTime,
       "deployProvControlPlaneEthDefaultsCmConfigFlag": deployProvControlPlaneEthDefaultsCmConfigFlag,
       "deployProvControlPlaneEthDefaultsCmTraceDetail": deployProvControlPlaneEthDefaultsCmTraceDetail,
       "deployProvControlPlaneEthDefaultsCmAlarmActivationTime": deployProvControlPlaneEthDefaultsCmAlarmActivationTime,
       "deployProvControlPlaneEthDefaultsCmFisFrsTimeout": deployProvControlPlaneEthDefaultsCmFisFrsTimeout,
       "deployProvControlPlaneEthDefaultsCmCrankBackTimeout": deployProvControlPlaneEthDefaultsCmCrankBackTimeout,
       "deployProvControlPlaneEthDefaultsCdbConfigFlag": deployProvControlPlaneEthDefaultsCdbConfigFlag,
       "deployProvControlPlaneEthDefaultsCdbDetail": deployProvControlPlaneEthDefaultsCdbDetail,
       "deployProvControlPlaneEthDefaultsCdbMaxSize": deployProvControlPlaneEthDefaultsCdbMaxSize,
       "deployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime": deployProvControlPlaneEthDefaultsRsvpMaxExpRestartTime,
       "deployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime": deployProvControlPlaneEthDefaultsRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneEthDefaultsRsvpConfigFlag": deployProvControlPlaneEthDefaultsRsvpConfigFlag,
       "deployProvControlPlaneEthDefaultsTedbConfigFlag": deployProvControlPlaneEthDefaultsTedbConfigFlag,
       "deployProvControlPlaneEthDefaultsTedbTraceDetail": deployProvControlPlaneEthDefaultsTedbTraceDetail,
       "deployProvControlPlaneEthDefaultsTedbMaxSize": deployProvControlPlaneEthDefaultsTedbMaxSize,
       "deployProvControlPlaneEthDefaultsTedbRouterId": deployProvControlPlaneEthDefaultsTedbRouterId,
       "deployProvControlPlaneEthDefaultsTedbMinAdvertWait": deployProvControlPlaneEthDefaultsTedbMinAdvertWait,
       "deployProvControlPlaneEthDefaultsNaasConfigFlag": deployProvControlPlaneEthDefaultsNaasConfigFlag,
       "deployProvControlPlaneEthDefaultsNaasTraceDetail": deployProvControlPlaneEthDefaultsNaasTraceDetail,
       "deployProvControlPlaneEthDefaultsNaasMaxSize": deployProvControlPlaneEthDefaultsNaasMaxSize,
       "deployProvControlPlaneEthDefaultsNaasAdvertWait": deployProvControlPlaneEthDefaultsNaasAdvertWait,
       "deployProvControlPlaneEthDefaultsPcConfigFlag": deployProvControlPlaneEthDefaultsPcConfigFlag,
       "deployProvControlPlaneEthDefaultsPcTraceDetail": deployProvControlPlaneEthDefaultsPcTraceDetail,
       "deployProvControlPlaneEthDefaultsCdConfigFlag": deployProvControlPlaneEthDefaultsCdConfigFlag,
       "deployProvControlPlaneEthDefaultsCdTraceDetail": deployProvControlPlaneEthDefaultsCdTraceDetail,
       "deployProvControlPlaneEthDefaultsCdResyncTimeout": deployProvControlPlaneEthDefaultsCdResyncTimeout,
       "deployProvControlPlaneEthDefaultsRmConfigFlag": deployProvControlPlaneEthDefaultsRmConfigFlag,
       "deployProvControlPlaneEthDefaultsRmTraceDetail": deployProvControlPlaneEthDefaultsRmTraceDetail,
       "deployProvControlPlaneEthDefaultsRmTraceTarget": deployProvControlPlaneEthDefaultsRmTraceTarget,
       "deployProvTunnelEthTable": deployProvTunnelEthTable,
       "deployProvTunnelEthEntry": deployProvTunnelEthEntry,
       "deployProvTunnelEthRowStatus": deployProvTunnelEthRowStatus,
       "deployProvTunnelEthTunnelId": deployProvTunnelEthTunnelId,
       "deployProvTunnelEthTunnelNo": deployProvTunnelEthTunnelNo,
       "deployProvTunnelEthAlias": deployProvTunnelEthAlias,
       "deployProvTunnelEthTunnelType": deployProvTunnelEthTunnelType,
       "deployProvTunnelEthToTid": deployProvTunnelEthToTid,
       "deployProvTunnelEthToNodeIp": deployProvTunnelEthToNodeIp,
       "deployProvTunnelEthFromAid": deployProvTunnelEthFromAid,
       "deployProvTunnelEthToAid": deployProvTunnelEthToAid,
       "deployProvTunnelEthConnectionDirection": deployProvTunnelEthConnectionDirection,
       "deployProvTunnelEthFacilityType": deployProvTunnelEthFacilityType,
       "deployProvTunnelEthProvisionedPaths": deployProvTunnelEthProvisionedPaths,
       "deployProvTunnelEthPin": deployProvTunnelEthPin,
       "deployProvTunnelEthCirRcv": deployProvTunnelEthCirRcv,
       "deployProvTunnelEthCbsRcv": deployProvTunnelEthCbsRcv,
       "deployProvTunnelEthProtectionType": deployProvTunnelEthProtectionType,
       "deployProvTunnelEthRestorationType": deployProvTunnelEthRestorationType,
       "deployProvTunnelEthMonitorEntities": deployProvTunnelEthMonitorEntities,
       "deployProvTunnelEthTunnelScope": deployProvTunnelEthTunnelScope,
       "deployProvTunnelEthLayer": deployProvTunnelEthLayer,
       "deployProvTunnelEthOifUni": deployProvTunnelEthOifUni,
       "deployProvTunnelEthFromAidString": deployProvTunnelEthFromAidString,
       "deployProvTunnelEthToAidString": deployProvTunnelEthToAidString,
       "deployProvTunnelEthCapTable": deployProvTunnelEthCapTable,
       "deployProvTunnelEthCapEntry": deployProvTunnelEthCapEntry,
       "deployProvTunnelEthCapRowStatus": deployProvTunnelEthCapRowStatus,
       "deployProvTunnelEthCapTunnelId": deployProvTunnelEthCapTunnelId,
       "deployProvTunnelEthCapTunnelNo": deployProvTunnelEthCapTunnelNo,
       "deployProvTunnelEthCapAlias": deployProvTunnelEthCapAlias,
       "deployProvTunnelEthCapTunnelType": deployProvTunnelEthCapTunnelType,
       "deployProvTunnelEthCapToTid": deployProvTunnelEthCapToTid,
       "deployProvTunnelEthCapToNodeIp": deployProvTunnelEthCapToNodeIp,
       "deployProvTunnelEthCapFromAid": deployProvTunnelEthCapFromAid,
       "deployProvTunnelEthCapToAid": deployProvTunnelEthCapToAid,
       "deployProvTunnelEthCapConnectionDirection": deployProvTunnelEthCapConnectionDirection,
       "deployProvTunnelEthCapFacilityType": deployProvTunnelEthCapFacilityType,
       "deployProvTunnelEthCapProvisionedPaths": deployProvTunnelEthCapProvisionedPaths,
       "deployProvTunnelEthCapPin": deployProvTunnelEthCapPin,
       "deployProvTunnelEthCapCirRcv": deployProvTunnelEthCapCirRcv,
       "deployProvTunnelEthCapCbsRcv": deployProvTunnelEthCapCbsRcv,
       "deployProvTunnelEthCapProtectionType": deployProvTunnelEthCapProtectionType,
       "deployProvTunnelEthCapRestorationType": deployProvTunnelEthCapRestorationType,
       "deployProvTunnelEthCapMonitorEntities": deployProvTunnelEthCapMonitorEntities,
       "deployProvTunnelEthCapTunnelScope": deployProvTunnelEthCapTunnelScope,
       "deployProvTunnelEthCapLayer": deployProvTunnelEthCapLayer,
       "deployProvTunnelEthCapOifUni": deployProvTunnelEthCapOifUni,
       "deployProvTunnelEthCapFromAidString": deployProvTunnelEthCapFromAidString,
       "deployProvTunnelEthCapToAidString": deployProvTunnelEthCapToAidString,
       "deployProvTunnelEthDefaultsTable": deployProvTunnelEthDefaultsTable,
       "deployProvTunnelEthDefaultsEntry": deployProvTunnelEthDefaultsEntry,
       "deployProvTunnelEthDefaultsRowStatus": deployProvTunnelEthDefaultsRowStatus,
       "deployProvTunnelEthDefaultsTunnelId": deployProvTunnelEthDefaultsTunnelId,
       "deployProvTunnelEthDefaultsTunnelNo": deployProvTunnelEthDefaultsTunnelNo,
       "deployProvTunnelEthDefaultsAlias": deployProvTunnelEthDefaultsAlias,
       "deployProvTunnelEthDefaultsTunnelType": deployProvTunnelEthDefaultsTunnelType,
       "deployProvTunnelEthDefaultsToTid": deployProvTunnelEthDefaultsToTid,
       "deployProvTunnelEthDefaultsToNodeIp": deployProvTunnelEthDefaultsToNodeIp,
       "deployProvTunnelEthDefaultsFromAid": deployProvTunnelEthDefaultsFromAid,
       "deployProvTunnelEthDefaultsToAid": deployProvTunnelEthDefaultsToAid,
       "deployProvTunnelEthDefaultsConnectionDirection": deployProvTunnelEthDefaultsConnectionDirection,
       "deployProvTunnelEthDefaultsFacilityType": deployProvTunnelEthDefaultsFacilityType,
       "deployProvTunnelEthDefaultsProvisionedPaths": deployProvTunnelEthDefaultsProvisionedPaths,
       "deployProvTunnelEthDefaultsPin": deployProvTunnelEthDefaultsPin,
       "deployProvTunnelEthDefaultsCirRcv": deployProvTunnelEthDefaultsCirRcv,
       "deployProvTunnelEthDefaultsCbsRcv": deployProvTunnelEthDefaultsCbsRcv,
       "deployProvTunnelEthDefaultsProtectionType": deployProvTunnelEthDefaultsProtectionType,
       "deployProvTunnelEthDefaultsRestorationType": deployProvTunnelEthDefaultsRestorationType,
       "deployProvTunnelEthDefaultsMonitorEntities": deployProvTunnelEthDefaultsMonitorEntities,
       "deployProvTunnelEthDefaultsTunnelScope": deployProvTunnelEthDefaultsTunnelScope,
       "deployProvTunnelEthDefaultsLayer": deployProvTunnelEthDefaultsLayer,
       "deployProvTunnelEthDefaultsOifUni": deployProvTunnelEthDefaultsOifUni,
       "deployProvTunnelEthDefaultsFromAidString": deployProvTunnelEthDefaultsFromAidString,
       "deployProvTunnelEthDefaultsToAidString": deployProvTunnelEthDefaultsToAidString,
       "deployProvPathEthTable": deployProvPathEthTable,
       "deployProvPathEthEntry": deployProvPathEthEntry,
       "deployProvPathEthRowStatus": deployProvPathEthRowStatus,
       "deployProvPathEthPathId": deployProvPathEthPathId,
       "deployProvPathEthCapTable": deployProvPathEthCapTable,
       "deployProvPathEthCapEntry": deployProvPathEthCapEntry,
       "deployProvPathEthCapRowStatus": deployProvPathEthCapRowStatus,
       "deployProvPathEthCapPathId": deployProvPathEthCapPathId,
       "deployProvPathEthDefaultsTable": deployProvPathEthDefaultsTable,
       "deployProvPathEthDefaultsEntry": deployProvPathEthDefaultsEntry,
       "deployProvPathEthDefaultsRowStatus": deployProvPathEthDefaultsRowStatus,
       "deployProvPathEthDefaultsPathId": deployProvPathEthDefaultsPathId,
       "deployProvPathElementEthTable": deployProvPathElementEthTable,
       "deployProvPathElementEthEntry": deployProvPathElementEthEntry,
       "deployProvPathElementEthRowStatus": deployProvPathElementEthRowStatus,
       "deployProvPathElementEthTrafficEngineeringType": deployProvPathElementEthTrafficEngineeringType,
       "deployProvPathElementEthLifIp": deployProvPathElementEthLifIp,
       "deployProvPathElementEthNodeIp": deployProvPathElementEthNodeIp,
       "deployProvPathElementEthTid": deployProvPathElementEthTid,
       "deployProvPathElementEthLogicalInterfaceId": deployProvPathElementEthLogicalInterfaceId,
       "deployProvPathElementEthTie": deployProvPathElementEthTie,
       "deployProvPathElementEthUpstreamSvid": deployProvPathElementEthUpstreamSvid,
       "deployProvPathElementEthDownstreamSvid": deployProvPathElementEthDownstreamSvid,
       "deployProvPathElementEthCapTable": deployProvPathElementEthCapTable,
       "deployProvPathElementEthCapEntry": deployProvPathElementEthCapEntry,
       "deployProvPathElementEthCapRowStatus": deployProvPathElementEthCapRowStatus,
       "deployProvPathElementEthCapTrafficEngineeringType": deployProvPathElementEthCapTrafficEngineeringType,
       "deployProvPathElementEthCapLifIp": deployProvPathElementEthCapLifIp,
       "deployProvPathElementEthCapNodeIp": deployProvPathElementEthCapNodeIp,
       "deployProvPathElementEthCapTid": deployProvPathElementEthCapTid,
       "deployProvPathElementEthCapLogicalInterfaceId": deployProvPathElementEthCapLogicalInterfaceId,
       "deployProvPathElementEthCapTie": deployProvPathElementEthCapTie,
       "deployProvPathElementEthCapUpstreamSvid": deployProvPathElementEthCapUpstreamSvid,
       "deployProvPathElementEthCapDownstreamSvid": deployProvPathElementEthCapDownstreamSvid,
       "deployProvPathElementEthDefaultsTable": deployProvPathElementEthDefaultsTable,
       "deployProvPathElementEthDefaultsEntry": deployProvPathElementEthDefaultsEntry,
       "deployProvPathElementEthDefaultsRowStatus": deployProvPathElementEthDefaultsRowStatus,
       "deployProvPathElementEthDefaultsTrafficEngineeringType": deployProvPathElementEthDefaultsTrafficEngineeringType,
       "deployProvPathElementEthDefaultsLifIp": deployProvPathElementEthDefaultsLifIp,
       "deployProvPathElementEthDefaultsNodeIp": deployProvPathElementEthDefaultsNodeIp,
       "deployProvPathElementEthDefaultsTid": deployProvPathElementEthDefaultsTid,
       "deployProvPathElementEthDefaultsLogicalInterfaceId": deployProvPathElementEthDefaultsLogicalInterfaceId,
       "deployProvPathElementEthDefaultsTie": deployProvPathElementEthDefaultsTie,
       "deployProvPathElementEthDefaultsUpstreamSvid": deployProvPathElementEthDefaultsUpstreamSvid,
       "deployProvPathElementEthDefaultsDownstreamSvid": deployProvPathElementEthDefaultsDownstreamSvid,
       "deployProvCopyPathEthTable": deployProvCopyPathEthTable,
       "deployProvCopyPathEthEntry": deployProvCopyPathEthEntry,
       "deployProvCopyPathEthRowStatus": deployProvCopyPathEthRowStatus,
       "deployProvCopyPathEthSourcePathIndex": deployProvCopyPathEthSourcePathIndex,
       "deployProvCopyPathEthPathId": deployProvCopyPathEthPathId,
       "deployProvCopyPathEthCapTable": deployProvCopyPathEthCapTable,
       "deployProvCopyPathEthCapEntry": deployProvCopyPathEthCapEntry,
       "deployProvCopyPathEthCapRowStatus": deployProvCopyPathEthCapRowStatus,
       "deployProvCopyPathEthCapSourcePathIndex": deployProvCopyPathEthCapSourcePathIndex,
       "deployProvCopyPathEthCapPathId": deployProvCopyPathEthCapPathId,
       "deployProvCopyPathEthDefaultsTable": deployProvCopyPathEthDefaultsTable,
       "deployProvCopyPathEthDefaultsEntry": deployProvCopyPathEthDefaultsEntry,
       "deployProvCopyPathEthDefaultsRowStatus": deployProvCopyPathEthDefaultsRowStatus,
       "deployProvCopyPathEthDefaultsSourcePathIndex": deployProvCopyPathEthDefaultsSourcePathIndex,
       "deployProvCopyPathEthDefaultsPathId": deployProvCopyPathEthDefaultsPathId,
       "deployProvPortBindingTable": deployProvPortBindingTable,
       "deployProvPortBindingEntry": deployProvPortBindingEntry,
       "deployProvPortBindingRowStatus": deployProvPortBindingRowStatus,
       "deployProvPortBindingLogicalIfAid": deployProvPortBindingLogicalIfAid,
       "deployProvPortBindingLocalTna": deployProvPortBindingLocalTna,
       "deployProvPortBindingRemotePort": deployProvPortBindingRemotePort,
       "deployProvPortBindingRemoteTna": deployProvPortBindingRemoteTna,
       "deployProvPortBindingRemoteTnaMask": deployProvPortBindingRemoteTnaMask,
       "deployProvPortBindingRemoteNodeIp": deployProvPortBindingRemoteNodeIp,
       "deployProvPortBindingRemoteScn": deployProvPortBindingRemoteScn,
       "deployProvPortBindingRemoteScPc": deployProvPortBindingRemoteScPc,
       "deployProvPortBindingLayer": deployProvPortBindingLayer,
       "deployProvPortBindingCapTable": deployProvPortBindingCapTable,
       "deployProvPortBindingCapEntry": deployProvPortBindingCapEntry,
       "deployProvPortBindingCapRowStatus": deployProvPortBindingCapRowStatus,
       "deployProvPortBindingCapLogicalIfAid": deployProvPortBindingCapLogicalIfAid,
       "deployProvPortBindingCapLocalTna": deployProvPortBindingCapLocalTna,
       "deployProvPortBindingCapRemotePort": deployProvPortBindingCapRemotePort,
       "deployProvPortBindingCapRemoteTna": deployProvPortBindingCapRemoteTna,
       "deployProvPortBindingCapRemoteTnaMask": deployProvPortBindingCapRemoteTnaMask,
       "deployProvPortBindingCapRemoteNodeIp": deployProvPortBindingCapRemoteNodeIp,
       "deployProvPortBindingCapRemoteScn": deployProvPortBindingCapRemoteScn,
       "deployProvPortBindingCapRemoteScPc": deployProvPortBindingCapRemoteScPc,
       "deployProvPortBindingCapLayer": deployProvPortBindingCapLayer,
       "deployProvPortBindingDefaultsTable": deployProvPortBindingDefaultsTable,
       "deployProvPortBindingDefaultsEntry": deployProvPortBindingDefaultsEntry,
       "deployProvPortBindingDefaultsRowStatus": deployProvPortBindingDefaultsRowStatus,
       "deployProvPortBindingDefaultsLogicalIfAid": deployProvPortBindingDefaultsLogicalIfAid,
       "deployProvPortBindingDefaultsLocalTna": deployProvPortBindingDefaultsLocalTna,
       "deployProvPortBindingDefaultsRemotePort": deployProvPortBindingDefaultsRemotePort,
       "deployProvPortBindingDefaultsRemoteTna": deployProvPortBindingDefaultsRemoteTna,
       "deployProvPortBindingDefaultsRemoteTnaMask": deployProvPortBindingDefaultsRemoteTnaMask,
       "deployProvPortBindingDefaultsRemoteNodeIp": deployProvPortBindingDefaultsRemoteNodeIp,
       "deployProvPortBindingDefaultsRemoteScn": deployProvPortBindingDefaultsRemoteScn,
       "deployProvPortBindingDefaultsRemoteScPc": deployProvPortBindingDefaultsRemoteScPc,
       "deployProvPortBindingDefaultsLayer": deployProvPortBindingDefaultsLayer,
       "deployProvPortBindingLifAidCapsTable": deployProvPortBindingLifAidCapsTable,
       "deployProvPortBindingLifAidCapsEntry": deployProvPortBindingLifAidCapsEntry,
       "deployProvPortBindingLifAidCapsIndex": deployProvPortBindingLifAidCapsIndex,
       "unusedOtnTunnelIndex": unusedOtnTunnelIndex,
       "unusedOtnPathIndex": unusedOtnPathIndex,
       "deployProvControlPlaneOtnTable": deployProvControlPlaneOtnTable,
       "deployProvControlPlaneOtnEntry": deployProvControlPlaneOtnEntry,
       "deployProvControlPlaneOtnRowStatus": deployProvControlPlaneOtnRowStatus,
       "deployProvControlPlaneOtnCtmConfigFlag": deployProvControlPlaneOtnCtmConfigFlag,
       "deployProvControlPlaneOtnCtmTraceDetail": deployProvControlPlaneOtnCtmTraceDetail,
       "deployProvControlPlaneOtnCtmSetupTimeout": deployProvControlPlaneOtnCtmSetupTimeout,
       "deployProvControlPlaneOtnCtmShutdownTimeout": deployProvControlPlaneOtnCtmShutdownTimeout,
       "deployProvControlPlaneOtnCtmRetryWait": deployProvControlPlaneOtnCtmRetryWait,
       "deployProvControlPlaneOtnCtmRetryWaitMultiplier": deployProvControlPlaneOtnCtmRetryWaitMultiplier,
       "deployProvControlPlaneOtnCtmMaximumRetryWait": deployProvControlPlaneOtnCtmMaximumRetryWait,
       "deployProvControlPlaneOtnCtmMaximumRetryNumber": deployProvControlPlaneOtnCtmMaximumRetryNumber,
       "deployProvControlPlaneOtnRaConfigFlag": deployProvControlPlaneOtnRaConfigFlag,
       "deployProvControlPlaneOtnRaTraceDetail": deployProvControlPlaneOtnRaTraceDetail,
       "deployProvControlPlaneOtnRaAlarmActivationTime": deployProvControlPlaneOtnRaAlarmActivationTime,
       "deployProvControlPlaneOtnCmConfigFlag": deployProvControlPlaneOtnCmConfigFlag,
       "deployProvControlPlaneOtnCmTraceDetail": deployProvControlPlaneOtnCmTraceDetail,
       "deployProvControlPlaneOtnCmAlarmActivationTime": deployProvControlPlaneOtnCmAlarmActivationTime,
       "deployProvControlPlaneOtnCmFisFrsTimeout": deployProvControlPlaneOtnCmFisFrsTimeout,
       "deployProvControlPlaneOtnCmCrankBackTimeout": deployProvControlPlaneOtnCmCrankBackTimeout,
       "deployProvControlPlaneOtnCdbConfigFlag": deployProvControlPlaneOtnCdbConfigFlag,
       "deployProvControlPlaneOtnCdbDetail": deployProvControlPlaneOtnCdbDetail,
       "deployProvControlPlaneOtnCdbMaxSize": deployProvControlPlaneOtnCdbMaxSize,
       "deployProvControlPlaneOtnRsvpMaxExpRestartTime": deployProvControlPlaneOtnRsvpMaxExpRestartTime,
       "deployProvControlPlaneOtnRsvpMaxExpRecoveryTime": deployProvControlPlaneOtnRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneOtnRsvpConfigFlag": deployProvControlPlaneOtnRsvpConfigFlag,
       "deployProvControlPlaneOtnTedbConfigFlag": deployProvControlPlaneOtnTedbConfigFlag,
       "deployProvControlPlaneOtnTedbTraceDetail": deployProvControlPlaneOtnTedbTraceDetail,
       "deployProvControlPlaneOtnTedbMaxSize": deployProvControlPlaneOtnTedbMaxSize,
       "deployProvControlPlaneOtnTedbRouterId": deployProvControlPlaneOtnTedbRouterId,
       "deployProvControlPlaneOtnTedbMinAdvertWait": deployProvControlPlaneOtnTedbMinAdvertWait,
       "deployProvControlPlaneOtnNaasConfigFlag": deployProvControlPlaneOtnNaasConfigFlag,
       "deployProvControlPlaneOtnNaasTraceDetail": deployProvControlPlaneOtnNaasTraceDetail,
       "deployProvControlPlaneOtnNaasMaxSize": deployProvControlPlaneOtnNaasMaxSize,
       "deployProvControlPlaneOtnNaasAdvertWait": deployProvControlPlaneOtnNaasAdvertWait,
       "deployProvControlPlaneOtnPcConfigFlag": deployProvControlPlaneOtnPcConfigFlag,
       "deployProvControlPlaneOtnPcTraceDetail": deployProvControlPlaneOtnPcTraceDetail,
       "deployProvControlPlaneOtnCdConfigFlag": deployProvControlPlaneOtnCdConfigFlag,
       "deployProvControlPlaneOtnCdTraceDetail": deployProvControlPlaneOtnCdTraceDetail,
       "deployProvControlPlaneOtnCdResyncTimeout": deployProvControlPlaneOtnCdResyncTimeout,
       "deployProvControlPlaneOtnRmConfigFlag": deployProvControlPlaneOtnRmConfigFlag,
       "deployProvControlPlaneOtnRmTraceDetail": deployProvControlPlaneOtnRmTraceDetail,
       "deployProvControlPlaneOtnRmTraceTarget": deployProvControlPlaneOtnRmTraceTarget,
       "deployProvControlPlaneOtnNodeNameSyntax": deployProvControlPlaneOtnNodeNameSyntax,
       "deployProvControlPlaneOtnCapTable": deployProvControlPlaneOtnCapTable,
       "deployProvControlPlaneOtnCapEntry": deployProvControlPlaneOtnCapEntry,
       "deployProvControlPlaneOtnCapRowStatus": deployProvControlPlaneOtnCapRowStatus,
       "deployProvControlPlaneOtnCapCtmConfigFlag": deployProvControlPlaneOtnCapCtmConfigFlag,
       "deployProvControlPlaneOtnCapCtmTraceDetail": deployProvControlPlaneOtnCapCtmTraceDetail,
       "deployProvControlPlaneOtnCapCtmSetupTimeout": deployProvControlPlaneOtnCapCtmSetupTimeout,
       "deployProvControlPlaneOtnCapCtmShutdownTimeout": deployProvControlPlaneOtnCapCtmShutdownTimeout,
       "deployProvControlPlaneOtnCapCtmRetryWait": deployProvControlPlaneOtnCapCtmRetryWait,
       "deployProvControlPlaneOtnCapCtmRetryWaitMultiplier": deployProvControlPlaneOtnCapCtmRetryWaitMultiplier,
       "deployProvControlPlaneOtnCapCtmMaximumRetryWait": deployProvControlPlaneOtnCapCtmMaximumRetryWait,
       "deployProvControlPlaneOtnCapCtmMaximumRetryNumber": deployProvControlPlaneOtnCapCtmMaximumRetryNumber,
       "deployProvControlPlaneOtnCapRaConfigFlag": deployProvControlPlaneOtnCapRaConfigFlag,
       "deployProvControlPlaneOtnCapRaTraceDetail": deployProvControlPlaneOtnCapRaTraceDetail,
       "deployProvControlPlaneOtnCapRaAlarmActivationTime": deployProvControlPlaneOtnCapRaAlarmActivationTime,
       "deployProvControlPlaneOtnCapCmConfigFlag": deployProvControlPlaneOtnCapCmConfigFlag,
       "deployProvControlPlaneOtnCapCmTraceDetail": deployProvControlPlaneOtnCapCmTraceDetail,
       "deployProvControlPlaneOtnCapCmAlarmActivationTime": deployProvControlPlaneOtnCapCmAlarmActivationTime,
       "deployProvControlPlaneOtnCapCmFisFrsTimeout": deployProvControlPlaneOtnCapCmFisFrsTimeout,
       "deployProvControlPlaneOtnCapCmCrankBackTimeout": deployProvControlPlaneOtnCapCmCrankBackTimeout,
       "deployProvControlPlaneOtnCapCdbConfigFlag": deployProvControlPlaneOtnCapCdbConfigFlag,
       "deployProvControlPlaneOtnCapCdbDetail": deployProvControlPlaneOtnCapCdbDetail,
       "deployProvControlPlaneOtnCapCdbMaxSize": deployProvControlPlaneOtnCapCdbMaxSize,
       "deployProvControlPlaneOtnCapRsvpMaxExpRestartTime": deployProvControlPlaneOtnCapRsvpMaxExpRestartTime,
       "deployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime": deployProvControlPlaneOtnCapRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneOtnCapRsvpConfigFlag": deployProvControlPlaneOtnCapRsvpConfigFlag,
       "deployProvControlPlaneOtnCapTedbConfigFlag": deployProvControlPlaneOtnCapTedbConfigFlag,
       "deployProvControlPlaneOtnCapTedbTraceDetail": deployProvControlPlaneOtnCapTedbTraceDetail,
       "deployProvControlPlaneOtnCapTedbMaxSize": deployProvControlPlaneOtnCapTedbMaxSize,
       "deployProvControlPlaneOtnCapTedbRouterId": deployProvControlPlaneOtnCapTedbRouterId,
       "deployProvControlPlaneOtnCapTedbMinAdvertWait": deployProvControlPlaneOtnCapTedbMinAdvertWait,
       "deployProvControlPlaneOtnCapNaasConfigFlag": deployProvControlPlaneOtnCapNaasConfigFlag,
       "deployProvControlPlaneOtnCapNaasTraceDetail": deployProvControlPlaneOtnCapNaasTraceDetail,
       "deployProvControlPlaneOtnCapNaasMaxSize": deployProvControlPlaneOtnCapNaasMaxSize,
       "deployProvControlPlaneOtnCapNaasAdvertWait": deployProvControlPlaneOtnCapNaasAdvertWait,
       "deployProvControlPlaneOtnCapPcConfigFlag": deployProvControlPlaneOtnCapPcConfigFlag,
       "deployProvControlPlaneOtnCapPcTraceDetail": deployProvControlPlaneOtnCapPcTraceDetail,
       "deployProvControlPlaneOtnCapCdConfigFlag": deployProvControlPlaneOtnCapCdConfigFlag,
       "deployProvControlPlaneOtnCapCdTraceDetail": deployProvControlPlaneOtnCapCdTraceDetail,
       "deployProvControlPlaneOtnCapCdResyncTimeout": deployProvControlPlaneOtnCapCdResyncTimeout,
       "deployProvControlPlaneOtnCapRmConfigFlag": deployProvControlPlaneOtnCapRmConfigFlag,
       "deployProvControlPlaneOtnCapRmTraceDetail": deployProvControlPlaneOtnCapRmTraceDetail,
       "deployProvControlPlaneOtnCapRmTraceTarget": deployProvControlPlaneOtnCapRmTraceTarget,
       "deployProvControlPlaneOtnCapNodeNameSyntax": deployProvControlPlaneOtnCapNodeNameSyntax,
       "deployProvControlPlaneOtnDefaultsTable": deployProvControlPlaneOtnDefaultsTable,
       "deployProvControlPlaneOtnDefaultsEntry": deployProvControlPlaneOtnDefaultsEntry,
       "deployProvControlPlaneOtnDefaultsRowStatus": deployProvControlPlaneOtnDefaultsRowStatus,
       "deployProvControlPlaneOtnDefaultsCtmConfigFlag": deployProvControlPlaneOtnDefaultsCtmConfigFlag,
       "deployProvControlPlaneOtnDefaultsCtmTraceDetail": deployProvControlPlaneOtnDefaultsCtmTraceDetail,
       "deployProvControlPlaneOtnDefaultsCtmSetupTimeout": deployProvControlPlaneOtnDefaultsCtmSetupTimeout,
       "deployProvControlPlaneOtnDefaultsCtmShutdownTimeout": deployProvControlPlaneOtnDefaultsCtmShutdownTimeout,
       "deployProvControlPlaneOtnDefaultsCtmRetryWait": deployProvControlPlaneOtnDefaultsCtmRetryWait,
       "deployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier": deployProvControlPlaneOtnDefaultsCtmRetryWaitMultiplier,
       "deployProvControlPlaneOtnDefaultsCtmMaximumRetryWait": deployProvControlPlaneOtnDefaultsCtmMaximumRetryWait,
       "deployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber": deployProvControlPlaneOtnDefaultsCtmMaximumRetryNumber,
       "deployProvControlPlaneOtnDefaultsRaConfigFlag": deployProvControlPlaneOtnDefaultsRaConfigFlag,
       "deployProvControlPlaneOtnDefaultsRaTraceDetail": deployProvControlPlaneOtnDefaultsRaTraceDetail,
       "deployProvControlPlaneOtnDefaultsRaAlarmActivationTime": deployProvControlPlaneOtnDefaultsRaAlarmActivationTime,
       "deployProvControlPlaneOtnDefaultsCmConfigFlag": deployProvControlPlaneOtnDefaultsCmConfigFlag,
       "deployProvControlPlaneOtnDefaultsCmTraceDetail": deployProvControlPlaneOtnDefaultsCmTraceDetail,
       "deployProvControlPlaneOtnDefaultsCmAlarmActivationTime": deployProvControlPlaneOtnDefaultsCmAlarmActivationTime,
       "deployProvControlPlaneOtnDefaultsCmFisFrsTimeout": deployProvControlPlaneOtnDefaultsCmFisFrsTimeout,
       "deployProvControlPlaneOtnDefaultsCmCrankBackTimeout": deployProvControlPlaneOtnDefaultsCmCrankBackTimeout,
       "deployProvControlPlaneOtnDefaultsCdbConfigFlag": deployProvControlPlaneOtnDefaultsCdbConfigFlag,
       "deployProvControlPlaneOtnDefaultsCdbDetail": deployProvControlPlaneOtnDefaultsCdbDetail,
       "deployProvControlPlaneOtnDefaultsCdbMaxSize": deployProvControlPlaneOtnDefaultsCdbMaxSize,
       "deployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime": deployProvControlPlaneOtnDefaultsRsvpMaxExpRestartTime,
       "deployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime": deployProvControlPlaneOtnDefaultsRsvpMaxExpRecoveryTime,
       "deployProvControlPlaneOtnDefaultsRsvpConfigFlag": deployProvControlPlaneOtnDefaultsRsvpConfigFlag,
       "deployProvControlPlaneOtnDefaultsTedbConfigFlag": deployProvControlPlaneOtnDefaultsTedbConfigFlag,
       "deployProvControlPlaneOtnDefaultsTedbTraceDetail": deployProvControlPlaneOtnDefaultsTedbTraceDetail,
       "deployProvControlPlaneOtnDefaultsTedbMaxSize": deployProvControlPlaneOtnDefaultsTedbMaxSize,
       "deployProvControlPlaneOtnDefaultsTedbRouterId": deployProvControlPlaneOtnDefaultsTedbRouterId,
       "deployProvControlPlaneOtnDefaultsTedbMinAdvertWait": deployProvControlPlaneOtnDefaultsTedbMinAdvertWait,
       "deployProvControlPlaneOtnDefaultsNaasConfigFlag": deployProvControlPlaneOtnDefaultsNaasConfigFlag,
       "deployProvControlPlaneOtnDefaultsNaasTraceDetail": deployProvControlPlaneOtnDefaultsNaasTraceDetail,
       "deployProvControlPlaneOtnDefaultsNaasMaxSize": deployProvControlPlaneOtnDefaultsNaasMaxSize,
       "deployProvControlPlaneOtnDefaultsNaasAdvertWait": deployProvControlPlaneOtnDefaultsNaasAdvertWait,
       "deployProvControlPlaneOtnDefaultsPcConfigFlag": deployProvControlPlaneOtnDefaultsPcConfigFlag,
       "deployProvControlPlaneOtnDefaultsPcTraceDetail": deployProvControlPlaneOtnDefaultsPcTraceDetail,
       "deployProvControlPlaneOtnDefaultsCdConfigFlag": deployProvControlPlaneOtnDefaultsCdConfigFlag,
       "deployProvControlPlaneOtnDefaultsCdTraceDetail": deployProvControlPlaneOtnDefaultsCdTraceDetail,
       "deployProvControlPlaneOtnDefaultsCdResyncTimeout": deployProvControlPlaneOtnDefaultsCdResyncTimeout,
       "deployProvControlPlaneOtnDefaultsRmConfigFlag": deployProvControlPlaneOtnDefaultsRmConfigFlag,
       "deployProvControlPlaneOtnDefaultsRmTraceDetail": deployProvControlPlaneOtnDefaultsRmTraceDetail,
       "deployProvControlPlaneOtnDefaultsRmTraceTarget": deployProvControlPlaneOtnDefaultsRmTraceTarget,
       "deployProvControlPlaneOtnDefaultsNodeNameSyntax": deployProvControlPlaneOtnDefaultsNodeNameSyntax,
       "deployProvTunnelOtnTable": deployProvTunnelOtnTable,
       "deployProvTunnelOtnEntry": deployProvTunnelOtnEntry,
       "deployProvTunnelOtnRowStatus": deployProvTunnelOtnRowStatus,
       "deployProvTunnelOtnTunnelId": deployProvTunnelOtnTunnelId,
       "deployProvTunnelOtnTunnelNo": deployProvTunnelOtnTunnelNo,
       "deployProvTunnelOtnAlias": deployProvTunnelOtnAlias,
       "deployProvTunnelOtnTunnelType": deployProvTunnelOtnTunnelType,
       "deployProvTunnelOtnToTid": deployProvTunnelOtnToTid,
       "deployProvTunnelOtnToNodeIp": deployProvTunnelOtnToNodeIp,
       "deployProvTunnelOtnFromAid": deployProvTunnelOtnFromAid,
       "deployProvTunnelOtnToAid": deployProvTunnelOtnToAid,
       "deployProvTunnelOtnConnectionDirection": deployProvTunnelOtnConnectionDirection,
       "deployProvTunnelOtnFacilityType": deployProvTunnelOtnFacilityType,
       "deployProvTunnelOtnProvisionedPaths": deployProvTunnelOtnProvisionedPaths,
       "deployProvTunnelOtnProtectionType": deployProvTunnelOtnProtectionType,
       "deployProvTunnelOtnPin": deployProvTunnelOtnPin,
       "deployProvTunnelOtnRestorationType": deployProvTunnelOtnRestorationType,
       "deployProvTunnelOtnMonitorEntities": deployProvTunnelOtnMonitorEntities,
       "deployProvTunnelOtnTunnelScope": deployProvTunnelOtnTunnelScope,
       "deployProvTunnelOtnLayer": deployProvTunnelOtnLayer,
       "deployProvTunnelOtnOifUni": deployProvTunnelOtnOifUni,
       "deployProvTunnelOtnFromAidString": deployProvTunnelOtnFromAidString,
       "deployProvTunnelOtnToAidString": deployProvTunnelOtnToAidString,
       "deployProvTunnelOtnCapTable": deployProvTunnelOtnCapTable,
       "deployProvTunnelOtnCapEntry": deployProvTunnelOtnCapEntry,
       "deployProvTunnelOtnCapRowStatus": deployProvTunnelOtnCapRowStatus,
       "deployProvTunnelOtnCapTunnelId": deployProvTunnelOtnCapTunnelId,
       "deployProvTunnelOtnCapTunnelNo": deployProvTunnelOtnCapTunnelNo,
       "deployProvTunnelOtnCapAlias": deployProvTunnelOtnCapAlias,
       "deployProvTunnelOtnCapTunnelType": deployProvTunnelOtnCapTunnelType,
       "deployProvTunnelOtnCapToTid": deployProvTunnelOtnCapToTid,
       "deployProvTunnelOtnCapToNodeIp": deployProvTunnelOtnCapToNodeIp,
       "deployProvTunnelOtnCapFromAid": deployProvTunnelOtnCapFromAid,
       "deployProvTunnelOtnCapToAid": deployProvTunnelOtnCapToAid,
       "deployProvTunnelOtnCapConnectionDirection": deployProvTunnelOtnCapConnectionDirection,
       "deployProvTunnelOtnCapFacilityType": deployProvTunnelOtnCapFacilityType,
       "deployProvTunnelOtnCapProvisionedPaths": deployProvTunnelOtnCapProvisionedPaths,
       "deployProvTunnelOtnCapProtectionType": deployProvTunnelOtnCapProtectionType,
       "deployProvTunnelOtnCapPin": deployProvTunnelOtnCapPin,
       "deployProvTunnelOtnCapRestorationType": deployProvTunnelOtnCapRestorationType,
       "deployProvTunnelOtnCapMonitorEntities": deployProvTunnelOtnCapMonitorEntities,
       "deployProvTunnelOtnCapTunnelScope": deployProvTunnelOtnCapTunnelScope,
       "deployProvTunnelOtnCapLayer": deployProvTunnelOtnCapLayer,
       "deployProvTunnelOtnCapOifUni": deployProvTunnelOtnCapOifUni,
       "deployProvTunnelOtnCapFromAidString": deployProvTunnelOtnCapFromAidString,
       "deployProvTunnelOtnCapToAidString": deployProvTunnelOtnCapToAidString,
       "deployProvTunnelOtnDefaultsTable": deployProvTunnelOtnDefaultsTable,
       "deployProvTunnelOtnDefaultsEntry": deployProvTunnelOtnDefaultsEntry,
       "deployProvTunnelOtnDefaultsRowStatus": deployProvTunnelOtnDefaultsRowStatus,
       "deployProvTunnelOtnDefaultsTunnelId": deployProvTunnelOtnDefaultsTunnelId,
       "deployProvTunnelOtnDefaultsTunnelNo": deployProvTunnelOtnDefaultsTunnelNo,
       "deployProvTunnelOtnDefaultsAlias": deployProvTunnelOtnDefaultsAlias,
       "deployProvTunnelOtnDefaultsTunnelType": deployProvTunnelOtnDefaultsTunnelType,
       "deployProvTunnelOtnDefaultsToTid": deployProvTunnelOtnDefaultsToTid,
       "deployProvTunnelOtnDefaultsToNodeIp": deployProvTunnelOtnDefaultsToNodeIp,
       "deployProvTunnelOtnDefaultsFromAid": deployProvTunnelOtnDefaultsFromAid,
       "deployProvTunnelOtnDefaultsToAid": deployProvTunnelOtnDefaultsToAid,
       "deployProvTunnelOtnDefaultsConnectionDirection": deployProvTunnelOtnDefaultsConnectionDirection,
       "deployProvTunnelOtnDefaultsFacilityType": deployProvTunnelOtnDefaultsFacilityType,
       "deployProvTunnelOtnDefaultsProvisionedPaths": deployProvTunnelOtnDefaultsProvisionedPaths,
       "deployProvTunnelOtnDefaultsProtectionType": deployProvTunnelOtnDefaultsProtectionType,
       "deployProvTunnelOtnDefaultsPin": deployProvTunnelOtnDefaultsPin,
       "deployProvTunnelOtnDefaultsRestorationType": deployProvTunnelOtnDefaultsRestorationType,
       "deployProvTunnelOtnDefaultsMonitorEntities": deployProvTunnelOtnDefaultsMonitorEntities,
       "deployProvTunnelOtnDefaultsTunnelScope": deployProvTunnelOtnDefaultsTunnelScope,
       "deployProvTunnelOtnDefaultsLayer": deployProvTunnelOtnDefaultsLayer,
       "deployProvTunnelOtnDefaultsOifUni": deployProvTunnelOtnDefaultsOifUni,
       "deployProvTunnelOtnDefaultsFromAidString": deployProvTunnelOtnDefaultsFromAidString,
       "deployProvTunnelOtnDefaultsToAidString": deployProvTunnelOtnDefaultsToAidString,
       "deployProvPathOtnTable": deployProvPathOtnTable,
       "deployProvPathOtnEntry": deployProvPathOtnEntry,
       "deployProvPathOtnRowStatus": deployProvPathOtnRowStatus,
       "deployProvPathOtnPathId": deployProvPathOtnPathId,
       "deployProvPathOtnCapTable": deployProvPathOtnCapTable,
       "deployProvPathOtnCapEntry": deployProvPathOtnCapEntry,
       "deployProvPathOtnCapRowStatus": deployProvPathOtnCapRowStatus,
       "deployProvPathOtnCapPathId": deployProvPathOtnCapPathId,
       "deployProvPathOtnDefaultsTable": deployProvPathOtnDefaultsTable,
       "deployProvPathOtnDefaultsEntry": deployProvPathOtnDefaultsEntry,
       "deployProvPathOtnDefaultsRowStatus": deployProvPathOtnDefaultsRowStatus,
       "deployProvPathOtnDefaultsPathId": deployProvPathOtnDefaultsPathId,
       "deployProvPathElementOtnTable": deployProvPathElementOtnTable,
       "deployProvPathElementOtnEntry": deployProvPathElementOtnEntry,
       "deployProvPathElementOtnRowStatus": deployProvPathElementOtnRowStatus,
       "deployProvPathElementOtnTrafficEngineeringType": deployProvPathElementOtnTrafficEngineeringType,
       "deployProvPathElementOtnLifIp": deployProvPathElementOtnLifIp,
       "deployProvPathElementOtnNodeIp": deployProvPathElementOtnNodeIp,
       "deployProvPathElementOtnTid": deployProvPathElementOtnTid,
       "deployProvPathElementOtnLogicalInterfaceId": deployProvPathElementOtnLogicalInterfaceId,
       "deployProvPathElementOtnTie": deployProvPathElementOtnTie,
       "deployProvPathElementOtnUpTributaryODTUType": deployProvPathElementOtnUpTributaryODTUType,
       "deployProvPathElementOtnDownTributaryODTUType": deployProvPathElementOtnDownTributaryODTUType,
       "deployProvPathElementOtnUpTributaryPort": deployProvPathElementOtnUpTributaryPort,
       "deployProvPathElementOtnDownTributaryPort": deployProvPathElementOtnDownTributaryPort,
       "deployProvPathElementOtnUpTributarySlot": deployProvPathElementOtnUpTributarySlot,
       "deployProvPathElementOtnDownTributarySlot": deployProvPathElementOtnDownTributarySlot,
       "deployProvPathElementOtnUpTributaryTSMethod": deployProvPathElementOtnUpTributaryTSMethod,
       "deployProvPathElementOtnDownTributaryTSMethod": deployProvPathElementOtnDownTributaryTSMethod,
       "deployProvPathElementOtnCapTable": deployProvPathElementOtnCapTable,
       "deployProvPathElementOtnCapEntry": deployProvPathElementOtnCapEntry,
       "deployProvPathElementOtnCapRowStatus": deployProvPathElementOtnCapRowStatus,
       "deployProvPathElementOtnCapTrafficEngineeringType": deployProvPathElementOtnCapTrafficEngineeringType,
       "deployProvPathElementOtnCapLifIp": deployProvPathElementOtnCapLifIp,
       "deployProvPathElementOtnCapNodeIp": deployProvPathElementOtnCapNodeIp,
       "deployProvPathElementOtnCapTid": deployProvPathElementOtnCapTid,
       "deployProvPathElementOtnCapLogicalInterfaceId": deployProvPathElementOtnCapLogicalInterfaceId,
       "deployProvPathElementOtnCapTie": deployProvPathElementOtnCapTie,
       "deployProvPathElementOtnCapUpTributaryODTUType": deployProvPathElementOtnCapUpTributaryODTUType,
       "deployProvPathElementOtnCapDownTributaryODTUType": deployProvPathElementOtnCapDownTributaryODTUType,
       "deployProvPathElementOtnCapUpTributaryPort": deployProvPathElementOtnCapUpTributaryPort,
       "deployProvPathElementOtnCapDownTributaryPort": deployProvPathElementOtnCapDownTributaryPort,
       "deployProvPathElementOtnCapUpTributarySlot": deployProvPathElementOtnCapUpTributarySlot,
       "deployProvPathElementOtnCapDownTributarySlot": deployProvPathElementOtnCapDownTributarySlot,
       "deployProvPathElementOtnCapUpTributaryTSMethod": deployProvPathElementOtnCapUpTributaryTSMethod,
       "deployProvPathElementOtnCapDownTributaryTSMethod": deployProvPathElementOtnCapDownTributaryTSMethod,
       "deployProvPathElementOtnDefaultsTable": deployProvPathElementOtnDefaultsTable,
       "deployProvPathElementOtnDefaultsEntry": deployProvPathElementOtnDefaultsEntry,
       "deployProvPathElementOtnDefaultsRowStatus": deployProvPathElementOtnDefaultsRowStatus,
       "deployProvPathElementOtnDefaultsTrafficEngineeringType": deployProvPathElementOtnDefaultsTrafficEngineeringType,
       "deployProvPathElementOtnDefaultsLifIp": deployProvPathElementOtnDefaultsLifIp,
       "deployProvPathElementOtnDefaultsNodeIp": deployProvPathElementOtnDefaultsNodeIp,
       "deployProvPathElementOtnDefaultsTid": deployProvPathElementOtnDefaultsTid,
       "deployProvPathElementOtnDefaultsLogicalInterfaceId": deployProvPathElementOtnDefaultsLogicalInterfaceId,
       "deployProvPathElementOtnDefaultsTie": deployProvPathElementOtnDefaultsTie,
       "deployProvPathElementOtnDefaultsUpTributaryODTUType": deployProvPathElementOtnDefaultsUpTributaryODTUType,
       "deployProvPathElementOtnDefaultsDownTributaryODTUType": deployProvPathElementOtnDefaultsDownTributaryODTUType,
       "deployProvPathElementOtnDefaultsUpTributaryPort": deployProvPathElementOtnDefaultsUpTributaryPort,
       "deployProvPathElementOtnDefaultsDownTributaryPort": deployProvPathElementOtnDefaultsDownTributaryPort,
       "deployProvPathElementOtnDefaultsUpTributarySlot": deployProvPathElementOtnDefaultsUpTributarySlot,
       "deployProvPathElementOtnDefaultsDownTributarySlot": deployProvPathElementOtnDefaultsDownTributarySlot,
       "deployProvPathElementOtnDefaultsUpTributaryTSMethod": deployProvPathElementOtnDefaultsUpTributaryTSMethod,
       "deployProvPathElementOtnDefaultsDownTributaryTSMethod": deployProvPathElementOtnDefaultsDownTributaryTSMethod,
       "deployProvCopyPathOtnTable": deployProvCopyPathOtnTable,
       "deployProvCopyPathOtnEntry": deployProvCopyPathOtnEntry,
       "deployProvCopyPathOtnRowStatus": deployProvCopyPathOtnRowStatus,
       "deployProvCopyPathOtnSourcePathIndex": deployProvCopyPathOtnSourcePathIndex,
       "deployProvCopyPathOtnPathId": deployProvCopyPathOtnPathId,
       "deployProvCopyPathOtnCapTable": deployProvCopyPathOtnCapTable,
       "deployProvCopyPathOtnCapEntry": deployProvCopyPathOtnCapEntry,
       "deployProvCopyPathOtnCapRowStatus": deployProvCopyPathOtnCapRowStatus,
       "deployProvCopyPathOtnCapSourcePathIndex": deployProvCopyPathOtnCapSourcePathIndex,
       "deployProvCopyPathOtnCapPathId": deployProvCopyPathOtnCapPathId,
       "deployProvCopyPathOtnDefaultsTable": deployProvCopyPathOtnDefaultsTable,
       "deployProvCopyPathOtnDefaultsEntry": deployProvCopyPathOtnDefaultsEntry,
       "deployProvCopyPathOtnDefaultsRowStatus": deployProvCopyPathOtnDefaultsRowStatus,
       "deployProvCopyPathOtnDefaultsSourcePathIndex": deployProvCopyPathOtnDefaultsSourcePathIndex,
       "deployProvCopyPathOtnDefaultsPathId": deployProvCopyPathOtnDefaultsPathId,
       "parameterCapabilities": parameterCapabilities,
       "areaIdCapTable": areaIdCapTable,
       "areaIdCapEntry": areaIdCapEntry,
       "areaIdCapIndexCap": areaIdCapIndexCap,
       "areaIdCapStringCap": areaIdCapStringCap,
       "nendIpCapTable": nendIpCapTable,
       "nendIpCapEntry": nendIpCapEntry,
       "nendIpCapIndexCap": nendIpCapIndexCap,
       "nendIpCapStringCap": nendIpCapStringCap,
       "areaAidCapTable": areaAidCapTable,
       "areaAidCapEntry": areaAidCapEntry,
       "areaAidCapIndexCap": areaAidCapIndexCap,
       "areaAidCapStringCap": areaAidCapStringCap,
       "performanceMIB": performanceMIB,
       "performanceAdmin": performanceAdmin,
       "thresholdOtuTable": thresholdOtuTable,
       "thresholdOtuEntry": thresholdOtuEntry,
       "thresholdOtuESHighThres15min": thresholdOtuESHighThres15min,
       "thresholdOtuESHighThres1day": thresholdOtuESHighThres1day,
       "thresholdOtuSESHighThres15min": thresholdOtuSESHighThres15min,
       "thresholdOtuSESHighThres1day": thresholdOtuSESHighThres1day,
       "thresholdOtuBbeHighThres15min": thresholdOtuBbeHighThres15min,
       "thresholdOtuBbeHighThres1day": thresholdOtuBbeHighThres1day,
       "thresholdOtuUASHighThres15min": thresholdOtuUASHighThres15min,
       "thresholdOtuUASHighThres1day": thresholdOtuUASHighThres1day,
       "thresholdOduTable": thresholdOduTable,
       "thresholdOduEntry": thresholdOduEntry,
       "thresholdOduESHighThres15min": thresholdOduESHighThres15min,
       "thresholdOduESHighThres1day": thresholdOduESHighThres1day,
       "thresholdOduSESHighThres15min": thresholdOduSESHighThres15min,
       "thresholdOduSESHighThres1day": thresholdOduSESHighThres1day,
       "thresholdOduBbeHighThres15min": thresholdOduBbeHighThres15min,
       "thresholdOduBbeHighThres1day": thresholdOduBbeHighThres1day,
       "thresholdOduUASHighThres15min": thresholdOduUASHighThres15min,
       "thresholdOduUASHighThres1day": thresholdOduUASHighThres1day,
       "thresholdOduTcmATable": thresholdOduTcmATable,
       "thresholdOduTcmAEntry": thresholdOduTcmAEntry,
       "thresholdOduTcmAESHighThres15min": thresholdOduTcmAESHighThres15min,
       "thresholdOduTcmAESHighThres1day": thresholdOduTcmAESHighThres1day,
       "thresholdOduTcmASESHighThres15min": thresholdOduTcmASESHighThres15min,
       "thresholdOduTcmASESHighThres1day": thresholdOduTcmASESHighThres1day,
       "thresholdOduTcmABbeHighThres15min": thresholdOduTcmABbeHighThres15min,
       "thresholdOduTcmABbeHighThres1day": thresholdOduTcmABbeHighThres1day,
       "thresholdOduTcmAUASHighThres15min": thresholdOduTcmAUASHighThres15min,
       "thresholdOduTcmAUASHighThres1day": thresholdOduTcmAUASHighThres1day,
       "thresholdOduTcmBTable": thresholdOduTcmBTable,
       "thresholdOduTcmBEntry": thresholdOduTcmBEntry,
       "thresholdOduTcmBBESHighThres15min": thresholdOduTcmBBESHighThres15min,
       "thresholdOduTcmBESHighThres1day": thresholdOduTcmBESHighThres1day,
       "thresholdOduTcmBSESHighThres15min": thresholdOduTcmBSESHighThres15min,
       "thresholdOduTcmBSESHighThres1day": thresholdOduTcmBSESHighThres1day,
       "thresholdOduTcmBOduTcmBBbeHighThres15min": thresholdOduTcmBOduTcmBBbeHighThres15min,
       "thresholdOduTcmBOduTcmBBbeHighThres1day": thresholdOduTcmBOduTcmBBbeHighThres1day,
       "thresholdOduTcmBUASHighThres15min": thresholdOduTcmBUASHighThres15min,
       "thresholdOduTcmBUASHighThres1day": thresholdOduTcmBUASHighThres1day,
       "thresholdSonetSectTable": thresholdSonetSectTable,
       "thresholdSonetSectEntry": thresholdSonetSectEntry,
       "thresholdSonetSectESHighThres15min": thresholdSonetSectESHighThres15min,
       "thresholdSonetSectESHighThres1day": thresholdSonetSectESHighThres1day,
       "thresholdSonetSectSESHighThres15min": thresholdSonetSectSESHighThres15min,
       "thresholdSonetSectSESHighThres1day": thresholdSonetSectSESHighThres1day,
       "thresholdSonetSectSEFSHighThres15min": thresholdSonetSectSEFSHighThres15min,
       "thresholdSonetSectSEFSHighThres1day": thresholdSonetSectSEFSHighThres1day,
       "thresholdSonetSectCVHighThres15min": thresholdSonetSectCVHighThres15min,
       "thresholdSonetSectCVHighThres1day": thresholdSonetSectCVHighThres1day,
       "thresholdSonetLineTable": thresholdSonetLineTable,
       "thresholdSonetLineEntry": thresholdSonetLineEntry,
       "thresholdSonetLineESHighThres15min": thresholdSonetLineESHighThres15min,
       "thresholdSonetLineESHighThres1day": thresholdSonetLineESHighThres1day,
       "thresholdSonetLineSESHighThres15min": thresholdSonetLineSESHighThres15min,
       "thresholdSonetLineSESHighThres1day": thresholdSonetLineSESHighThres1day,
       "thresholdSonetLineUASHighThres15min": thresholdSonetLineUASHighThres15min,
       "thresholdSonetLineUASSHighThres1day": thresholdSonetLineUASSHighThres1day,
       "thresholdSonetLineCVHighThres15min": thresholdSonetLineCVHighThres15min,
       "thresholdSonetLineCVSHighThres1day": thresholdSonetLineCVSHighThres1day,
       "thresholdSonetLineCViolHighThres15min": thresholdSonetLineCViolHighThres15min,
       "thresholdSonetHoPathTable": thresholdSonetHoPathTable,
       "thresholdSonetHoPathEntry": thresholdSonetHoPathEntry,
       "thresholdSonetHoPathESHighThres15min": thresholdSonetHoPathESHighThres15min,
       "thresholdSonetHoPathESHighThres1day": thresholdSonetHoPathESHighThres1day,
       "thresholdSonetHoPathSESHighThres15min": thresholdSonetHoPathSESHighThres15min,
       "thresholdSonetHoPathSESHighThres1day": thresholdSonetHoPathSESHighThres1day,
       "thresholdSonetHoPathUASHighThres15min": thresholdSonetHoPathUASHighThres15min,
       "thresholdSonetHoPathUASHighThres1day": thresholdSonetHoPathUASHighThres1day,
       "thresholdSonetHoPathCVHighThres15min": thresholdSonetHoPathCVHighThres15min,
       "thresholdSonetHoPathCVHighThres1day": thresholdSonetHoPathCVHighThres1day,
       "thresholdSonetLoPathTable": thresholdSonetLoPathTable,
       "thresholdSonetLoPathEntry": thresholdSonetLoPathEntry,
       "thresholdSonetLoPathESHighThres15min": thresholdSonetLoPathESHighThres15min,
       "thresholdSonetLoPathESHighThres1day": thresholdSonetLoPathESHighThres1day,
       "thresholdSonetLoPathSESHighThres15min": thresholdSonetLoPathSESHighThres15min,
       "thresholdSonetLoPathSESHighThres1day": thresholdSonetLoPathSESHighThres1day,
       "thresholdSonetLoPathUASHighThres15min": thresholdSonetLoPathUASHighThres15min,
       "thresholdSonetLoPathUASHighThres1day": thresholdSonetLoPathUASHighThres1day,
       "thresholdSonetLoPathCVHighThres15min": thresholdSonetLoPathCVHighThres15min,
       "thresholdSonetLoPathCVHighThres1day": thresholdSonetLoPathCVHighThres1day,
       "thresholdPhysPerfTable": thresholdPhysPerfTable,
       "thresholdPhysPerfEntry": thresholdPhysPerfEntry,
       "thresholdPhysPerfOpticalInputPwrLow": thresholdPhysPerfOpticalInputPwrLow,
       "thresholdPhysPerfOpticalInputPwrHigh": thresholdPhysPerfOpticalInputPwrHigh,
       "thresholdPhysPerfOpticalOutputPwrLow": thresholdPhysPerfOpticalOutputPwrLow,
       "thresholdPhysPerfOpticalOutputPwrHigh": thresholdPhysPerfOpticalOutputPwrHigh,
       "thresholdPhysPerfLaserBiasCurrentNormalized": thresholdPhysPerfLaserBiasCurrentNormalized,
       "thresholdPhysPerfAttRxLow": thresholdPhysPerfAttRxLow,
       "thresholdPhysPerfAttRxHigh": thresholdPhysPerfAttRxHigh,
       "thresholdPhysPerfAttTxLow": thresholdPhysPerfAttTxLow,
       "thresholdPhysPerfAttTxHigh": thresholdPhysPerfAttTxHigh,
       "thresholdPhysPerfLaserTempLowThres": thresholdPhysPerfLaserTempLowThres,
       "thresholdPhysPerfLaserTempHighThres": thresholdPhysPerfLaserTempHighThres,
       "thresholdPhysPerfPumpLaser1TempHighThres": thresholdPhysPerfPumpLaser1TempHighThres,
       "thresholdPhysPerfPumpLaser1TempLowThres": thresholdPhysPerfPumpLaser1TempLowThres,
       "thresholdPhysPerfPumpLaser2TempHighThres": thresholdPhysPerfPumpLaser2TempHighThres,
       "thresholdPhysPerfPumpLaser2TempLowThres": thresholdPhysPerfPumpLaser2TempLowThres,
       "thresholdPhysPerfOscPwrRcvHighThres": thresholdPhysPerfOscPwrRcvHighThres,
       "thresholdPhysPerfOscPwrRcvLowThres": thresholdPhysPerfOscPwrRcvLowThres,
       "thresholdPhysPerfRamanPumpPwrHighThres": thresholdPhysPerfRamanPumpPwrHighThres,
       "thresholdPhysPerfRamanPumpPwrLowThres": thresholdPhysPerfRamanPumpPwrLowThres,
       "thresholdPhysPerfConfigurableOpticalOutputPwrLow": thresholdPhysPerfConfigurableOpticalOutputPwrLow,
       "thresholdPhysPerfConfigurableOpticalOutputPwrHigh": thresholdPhysPerfConfigurableOpticalOutputPwrHigh,
       "thresholdPhysPerfBrPwrReceivedHighThres": thresholdPhysPerfBrPwrReceivedHighThres,
       "thresholdPhysPerfDispersionCompensationLowThres": thresholdPhysPerfDispersionCompensationLowThres,
       "thresholdPhysPerfDispersionCompensationHighThres": thresholdPhysPerfDispersionCompensationHighThres,
       "thresholdPhysPerfLowerAtlinkThres": thresholdPhysPerfLowerAtlinkThres,
       "thresholdPhysPerfUpperAtlinkThres": thresholdPhysPerfUpperAtlinkThres,
       "thresholdPhysPerfPumpLaser3TempHighThres": thresholdPhysPerfPumpLaser3TempHighThres,
       "thresholdPhysPerfPumpLaser3TempLowThres": thresholdPhysPerfPumpLaser3TempLowThres,
       "thresholdPhysPerfLatencyHighThres": thresholdPhysPerfLatencyHighThres,
       "thresholdPhysPerfLatencyLowThres": thresholdPhysPerfLatencyLowThres,
       "thresholdPhysPerfRoundTripDelayHighThres": thresholdPhysPerfRoundTripDelayHighThres,
       "thresholdPhysPerfRoundTripDelayLowThres": thresholdPhysPerfRoundTripDelayLowThres,
       "thresholdPhysPerfPumpLaser4TempHighThres": thresholdPhysPerfPumpLaser4TempHighThres,
       "thresholdPhysPerfPumpLaser4TempLowThres": thresholdPhysPerfPumpLaser4TempLowThres,
       "thresholdPhysPerfLocalOscTempLowThres": thresholdPhysPerfLocalOscTempLowThres,
       "thresholdPhysPerfLocalOscTempHighThres": thresholdPhysPerfLocalOscTempHighThres,
       "thresholdPhysPerfDifferentialGroupDelayHigh": thresholdPhysPerfDifferentialGroupDelayHigh,
       "thresholdPhysPerfChromaticDispersionLow": thresholdPhysPerfChromaticDispersionLow,
       "thresholdPhysPerfChromaticDispersionHigh": thresholdPhysPerfChromaticDispersionHigh,
       "thresholdPhysPerfSignalToNoiseRatioLow": thresholdPhysPerfSignalToNoiseRatioLow,
       "thresholdPhysPerfCarrierFreqOffsetLow": thresholdPhysPerfCarrierFreqOffsetLow,
       "thresholdPhysPerfCarrierFreqOffsetHigh": thresholdPhysPerfCarrierFreqOffsetHigh,
       "thresholdPhysPerfLogicalLanesSkewHigh": thresholdPhysPerfLogicalLanesSkewHigh,
       "thresholdPhysConvTable": thresholdPhysConvTable,
       "thresholdPhysConvEntry": thresholdPhysConvEntry,
       "thresholdPhysConvESHighThres15min": thresholdPhysConvESHighThres15min,
       "thresholdPhysConvESHighThres1day": thresholdPhysConvESHighThres1day,
       "thresholdPhysConvDEHighThres15min": thresholdPhysConvDEHighThres15min,
       "thresholdPhysConvDEHighThres1day": thresholdPhysConvDEHighThres1day,
       "thresholdPhysConvCVHighThres15min": thresholdPhysConvCVHighThres15min,
       "thresholdPhysConvCVHighThres1day": thresholdPhysConvCVHighThres1day,
       "thresholdEthRxTable": thresholdEthRxTable,
       "thresholdEthRxEntry": thresholdEthRxEntry,
       "thresholdEthRxPauseFramesHighThres15Min": thresholdEthRxPauseFramesHighThres15Min,
       "thresholdEthRxPauseFramesHighThres1Day": thresholdEthRxPauseFramesHighThres1Day,
       "thresholdEthRxCrcFramesHighThres15Min": thresholdEthRxCrcFramesHighThres15Min,
       "thresholdEthRxCrcFramesHighThres1Day": thresholdEthRxCrcFramesHighThres1Day,
       "thresholdEthRxDiscardedFramesHighThres15Min": thresholdEthRxDiscardedFramesHighThres15Min,
       "thresholdEthRxDiscardedFramesHighThres1Day": thresholdEthRxDiscardedFramesHighThres1Day,
       "thresholdEthTxTable": thresholdEthTxTable,
       "thresholdEthTxEntry": thresholdEthTxEntry,
       "thresholdEthTxPauseFramesHighThres15Min": thresholdEthTxPauseFramesHighThres15Min,
       "thresholdEthTxPauseFramesHighThres1Day": thresholdEthTxPauseFramesHighThres1Day,
       "thresholdEthTxCrcFramesEgressHighThres15Min": thresholdEthTxCrcFramesEgressHighThres15Min,
       "thresholdEthTxCrcFramesEgressHighThres1Day": thresholdEthTxCrcFramesEgressHighThres1Day,
       "thresholdGfpTable": thresholdGfpTable,
       "thresholdGfpEntry": thresholdGfpEntry,
       "thresholdGfpCoreHecCorrectedFramesHighThres15Min": thresholdGfpCoreHecCorrectedFramesHighThres15Min,
       "thresholdGfpCoreHecCorrectedFramesHighThres1Day": thresholdGfpCoreHecCorrectedFramesHighThres1Day,
       "thresholdGfpTypeHecCorrectedFramesHighThres15Min": thresholdGfpTypeHecCorrectedFramesHighThres15Min,
       "thresholdGfpTypeHecCorrectedFramesHighThres15Day": thresholdGfpTypeHecCorrectedFramesHighThres15Day,
       "thresholdGfpTypeHecDiscardedFramesHighThres15Min": thresholdGfpTypeHecDiscardedFramesHighThres15Min,
       "thresholdGfpTypeHecDiscardedFramesHighThres1Day": thresholdGfpTypeHecDiscardedFramesHighThres1Day,
       "thresholdGfpTHecDiscardedFramesHighThres1Day": thresholdGfpTHecDiscardedFramesHighThres1Day,
       "thresholdIntrusionTable": thresholdIntrusionTable,
       "thresholdIntrusionEntry": thresholdIntrusionEntry,
       "thresholdIntrusionGradient": thresholdIntrusionGradient,
       "thresholdOtuFecTable": thresholdOtuFecTable,
       "thresholdOtuFecEntry": thresholdOtuFecEntry,
       "thresholdOtuFecESHighThres15min": thresholdOtuFecESHighThres15min,
       "thresholdOtuFecESHighThres1day": thresholdOtuFecESHighThres1day,
       "thresholdOtuFecSESHighThres15min": thresholdOtuFecSESHighThres15min,
       "thresholdOtuFecSESHighThres1day": thresholdOtuFecSESHighThres1day,
       "thresholdOtuFecCEHighThres15min": thresholdOtuFecCEHighThres15min,
       "thresholdOtuFecCEHighThres1day": thresholdOtuFecCEHighThres1day,
       "thresholdOtuFecUBEHighThres15min": thresholdOtuFecUBEHighThres15min,
       "thresholdOtuFecUBEHighThres1day": thresholdOtuFecUBEHighThres1day,
       "thresholdOtuFecCErrHighThres15min": thresholdOtuFecCErrHighThres15min,
       "thresholdOtuFecCErrHighThres1day": thresholdOtuFecCErrHighThres1day,
       "thresholdGfptTable": thresholdGfptTable,
       "thresholdGfptEntry": thresholdGfptEntry,
       "thresholdGfptDiscardedSuperblocksHighThres15Min": thresholdGfptDiscardedSuperblocksHighThres15Min,
       "thresholdGfptDiscardedSuperblocksHighThres1Day": thresholdGfptDiscardedSuperblocksHighThres1Day,
       "thresholdSubAggregateTable": thresholdSubAggregateTable,
       "thresholdSubAggregateEntry": thresholdSubAggregateEntry,
       "thresholdSubAggregateESHighThres15min": thresholdSubAggregateESHighThres15min,
       "thresholdSubAggregateESHighThres1day": thresholdSubAggregateESHighThres1day,
       "thresholdSubAggregateSESHighThres15min": thresholdSubAggregateSESHighThres15min,
       "thresholdSubAggregateSESHighThres1day": thresholdSubAggregateSESHighThres1day,
       "thresholdOduTcmCTable": thresholdOduTcmCTable,
       "thresholdOduTcmCEntry": thresholdOduTcmCEntry,
       "thresholdOduTcmCBESHighThres15min": thresholdOduTcmCBESHighThres15min,
       "thresholdOduTcmCESHighThres1day": thresholdOduTcmCESHighThres1day,
       "thresholdOduTcmCSESHighThres15min": thresholdOduTcmCSESHighThres15min,
       "thresholdOduTcmCSESHighThres1day": thresholdOduTcmCSESHighThres1day,
       "thresholdOduTcmCOduTcmCBbeHighThres15min": thresholdOduTcmCOduTcmCBbeHighThres15min,
       "thresholdOduTcmCOduTcmCBbeHighThres1day": thresholdOduTcmCOduTcmCBbeHighThres1day,
       "thresholdOduTcmCUASHighThres15min": thresholdOduTcmCUASHighThres15min,
       "thresholdOduTcmCUASHighThres1day": thresholdOduTcmCUASHighThres1day,
       "thresholdPhysConvHighSpeedTable": thresholdPhysConvHighSpeedTable,
       "thresholdPhysConvHighSpeedEntry": thresholdPhysConvHighSpeedEntry,
       "thresholdPhysConvHighSpeedESHighThres15min": thresholdPhysConvHighSpeedESHighThres15min,
       "thresholdPhysConvHighSpeedESHighThres1day": thresholdPhysConvHighSpeedESHighThres1day,
       "thresholdPhysConvHighSpeedCVHighThres15min": thresholdPhysConvHighSpeedCVHighThres15min,
       "thresholdPhysConvHighSpeedCVHighThres1day": thresholdPhysConvHighSpeedCVHighThres1day,
       "thresholdPhysConvHighSpeedSEHighThres15min": thresholdPhysConvHighSpeedSEHighThres15min,
       "thresholdPhysConvHighSpeedSEHighThres1day": thresholdPhysConvHighSpeedSEHighThres1day,
       "thresholdEthRxHighSpeedTable": thresholdEthRxHighSpeedTable,
       "thresholdEthRxHighSpeedEntry": thresholdEthRxHighSpeedEntry,
       "thresholdEthRxHighSpeedPauseFramesHighThres15Min": thresholdEthRxHighSpeedPauseFramesHighThres15Min,
       "thresholdEthRxHighSpeedPauseFramesHighThres1Day": thresholdEthRxHighSpeedPauseFramesHighThres1Day,
       "thresholdEthRxHighSpeedCrcFramesHighThres15Min": thresholdEthRxHighSpeedCrcFramesHighThres15Min,
       "thresholdEthRxHighSpeedCrcFramesHighThres1Day": thresholdEthRxHighSpeedCrcFramesHighThres1Day,
       "thresholdPhysPerfCapTable": thresholdPhysPerfCapTable,
       "thresholdPhysPerfCapEntry": thresholdPhysPerfCapEntry,
       "thresholdPhysPerfCapOpticalInputPwrLow": thresholdPhysPerfCapOpticalInputPwrLow,
       "thresholdPhysPerfCapOpticalInputPwrHigh": thresholdPhysPerfCapOpticalInputPwrHigh,
       "thresholdPhysPerfCapAttRxLow": thresholdPhysPerfCapAttRxLow,
       "thresholdPhysPerfCapAttRxHigh": thresholdPhysPerfCapAttRxHigh,
       "thresholdPhysPerfCapAttTxLow": thresholdPhysPerfCapAttTxLow,
       "thresholdPhysPerfCapAttTxHigh": thresholdPhysPerfCapAttTxHigh,
       "thresholdPhysPerfCapOscPwrRcvHighThres": thresholdPhysPerfCapOscPwrRcvHighThres,
       "thresholdPhysPerfCapOscPwrRcvLowThres": thresholdPhysPerfCapOscPwrRcvLowThres,
       "thresholdPhysPerfCapConfigurableOpticalOutputPwrLow": thresholdPhysPerfCapConfigurableOpticalOutputPwrLow,
       "thresholdPhysPerfCapConfigurableOpticalOutputPwrHigh": thresholdPhysPerfCapConfigurableOpticalOutputPwrHigh,
       "thresholdPhysPerfCapBrPwrReceivedHighThres": thresholdPhysPerfCapBrPwrReceivedHighThres,
       "thresholdPhysPerfCapDispersionCompensationLowThres": thresholdPhysPerfCapDispersionCompensationLowThres,
       "thresholdPhysPerfCapDispersionCompensationHighThres": thresholdPhysPerfCapDispersionCompensationHighThres,
       "thresholdPhysPerfCapLowerAtlinkThres": thresholdPhysPerfCapLowerAtlinkThres,
       "thresholdPhysPerfCapUpperAtlinkThres": thresholdPhysPerfCapUpperAtlinkThres,
       "thresholdPhysPerfCapLatencyLowThres": thresholdPhysPerfCapLatencyLowThres,
       "thresholdPhysPerfCapLatencyHighThres": thresholdPhysPerfCapLatencyHighThres,
       "thresholdPhysPerfCapRoundTripDelayHighThres": thresholdPhysPerfCapRoundTripDelayHighThres,
       "thresholdPhysPerfCapRoundTripDelayLowThres": thresholdPhysPerfCapRoundTripDelayLowThres,
       "thresholdPhysPerfCapDifferentialGroupDelayHigh": thresholdPhysPerfCapDifferentialGroupDelayHigh,
       "thresholdPhysPerfCapChromaticDispersionLow": thresholdPhysPerfCapChromaticDispersionLow,
       "thresholdPhysPerfCapChromaticDispersionHigh": thresholdPhysPerfCapChromaticDispersionHigh,
       "thresholdPhysPerfCapSignalToNoiseRatioLow": thresholdPhysPerfCapSignalToNoiseRatioLow,
       "thresholdPhysPerfCapCarrierFreqOffsetLow": thresholdPhysPerfCapCarrierFreqOffsetLow,
       "thresholdPhysPerfCapCarrierFreqOffsetHigh": thresholdPhysPerfCapCarrierFreqOffsetHigh,
       "thresholdPhysPerfCapLogicalLanesSkewHigh": thresholdPhysPerfCapLogicalLanesSkewHigh,
       "thresholdFarEndPhysPerfTable": thresholdFarEndPhysPerfTable,
       "thresholdFarEndPhysPerfEntry": thresholdFarEndPhysPerfEntry,
       "thresholdFarEndPhysPerfOpticalInputPwrLow": thresholdFarEndPhysPerfOpticalInputPwrLow,
       "thresholdFarEndPhysPerfOpticalInputPwrHigh": thresholdFarEndPhysPerfOpticalInputPwrHigh,
       "thresholdFarEndPhysPerfOpticalOutputPwrLow": thresholdFarEndPhysPerfOpticalOutputPwrLow,
       "thresholdFarEndPhysPerfOpticalOutputPwrHigh": thresholdFarEndPhysPerfOpticalOutputPwrHigh,
       "thresholdFarEndPhysPerfCapTable": thresholdFarEndPhysPerfCapTable,
       "thresholdFarEndPhysPerfCapEntry": thresholdFarEndPhysPerfCapEntry,
       "thresholdFarEndPhysPerfCapOpticalInputPwrLow": thresholdFarEndPhysPerfCapOpticalInputPwrLow,
       "thresholdFarEndPhysPerfCapOpticalInputPwrHigh": thresholdFarEndPhysPerfCapOpticalInputPwrHigh,
       "thresholdPhysConvTxHighSpeedTable": thresholdPhysConvTxHighSpeedTable,
       "thresholdPhysConvTxHighSpeedEntry": thresholdPhysConvTxHighSpeedEntry,
       "thresholdPhysConvTxHighSpeedESTXHighThres15min": thresholdPhysConvTxHighSpeedESTXHighThres15min,
       "thresholdPhysConvTxHighSpeedESTXHighThres1day": thresholdPhysConvTxHighSpeedESTXHighThres1day,
       "thresholdPhysConvTxHighSpeedCVTXHighThres15min": thresholdPhysConvTxHighSpeedCVTXHighThres15min,
       "thresholdPhysConvTxHighSpeedCVTXHighThres1day": thresholdPhysConvTxHighSpeedCVTXHighThres1day,
       "thresholdPhysConvTxHighSpeedSETXHighThres15min": thresholdPhysConvTxHighSpeedSETXHighThres15min,
       "thresholdPhysConvTxHighSpeedSETXHighThres1day": thresholdPhysConvTxHighSpeedSETXHighThres1day,
       "thresholdType4PhysCodingLayerTable": thresholdType4PhysCodingLayerTable,
       "thresholdType4PhysCodingLayerEntry": thresholdType4PhysCodingLayerEntry,
       "thresholdType4PhysCodingLayerESHighThres15min": thresholdType4PhysCodingLayerESHighThres15min,
       "thresholdType4PhysCodingLayerESHighThres1day": thresholdType4PhysCodingLayerESHighThres1day,
       "thresholdType4PhysCodingLayerCVHighThres15min": thresholdType4PhysCodingLayerCVHighThres15min,
       "thresholdType4PhysCodingLayerCVHighThres1day": thresholdType4PhysCodingLayerCVHighThres1day,
       "thresholdType4PhysCodingLayerBBEHighThres15min": thresholdType4PhysCodingLayerBBEHighThres15min,
       "thresholdType4PhysCodingLayerBBEHighThres1day": thresholdType4PhysCodingLayerBBEHighThres1day,
       "performanceMonitoring": performanceMonitoring,
       "currentOtu15minTable": currentOtu15minTable,
       "currentOtu15minEntry": currentOtu15minEntry,
       "currentOtu15minES": currentOtu15minES,
       "currentOtu15minSES": currentOtu15minSES,
       "currentOtu15minBbe": currentOtu15minBbe,
       "currentOtu15minUAS": currentOtu15minUAS,
       "currentOtu15minElapsedTime": currentOtu15minElapsedTime,
       "currentOtu1dayTable": currentOtu1dayTable,
       "currentOtu1dayEntry": currentOtu1dayEntry,
       "currentOtu1dayES": currentOtu1dayES,
       "currentOtu1daySES": currentOtu1daySES,
       "currentOtu1dayBbe": currentOtu1dayBbe,
       "currentOtu1dayUAS": currentOtu1dayUAS,
       "currentOtu1dayElapsedTime": currentOtu1dayElapsedTime,
       "intervalOtu15minTable": intervalOtu15minTable,
       "intervalOtu15minEntry": intervalOtu15minEntry,
       "intervalOtu15minNumber": intervalOtu15minNumber,
       "intervalOtu15minES": intervalOtu15minES,
       "intervalOtu15minSES": intervalOtu15minSES,
       "intervalOtu15minBbe": intervalOtu15minBbe,
       "intervalOtu15minUAS": intervalOtu15minUAS,
       "intervalOtu15minValidFlag": intervalOtu15minValidFlag,
       "intervalOtu15minTimeStamp": intervalOtu15minTimeStamp,
       "intervalOtu1dayTable": intervalOtu1dayTable,
       "intervalOtu1dayEntry": intervalOtu1dayEntry,
       "intervalOtu1dayNumber": intervalOtu1dayNumber,
       "intervalOtu1dayES": intervalOtu1dayES,
       "intervalOtu1daySES": intervalOtu1daySES,
       "intervalOtu1dayBbe": intervalOtu1dayBbe,
       "intervalOtu1dayUAS": intervalOtu1dayUAS,
       "intervalOtu1dayValidFlag": intervalOtu1dayValidFlag,
       "intervalOtu1dayTimeStamp": intervalOtu1dayTimeStamp,
       "currentOdu15minTable": currentOdu15minTable,
       "currentOdu15minEntry": currentOdu15minEntry,
       "currentOdu15minES": currentOdu15minES,
       "currentOdu15minSES": currentOdu15minSES,
       "currentOdu15minBbe": currentOdu15minBbe,
       "currentOdu15minUAS": currentOdu15minUAS,
       "currentOdu15minElapsedTime": currentOdu15minElapsedTime,
       "currentOdu1dayTable": currentOdu1dayTable,
       "currentOdu1dayEntry": currentOdu1dayEntry,
       "currentOdu1dayES": currentOdu1dayES,
       "currentOdu1daySES": currentOdu1daySES,
       "currentOdu1dayBbe": currentOdu1dayBbe,
       "currentOdu1dayUAS": currentOdu1dayUAS,
       "currentOdu1dayElapsedTime": currentOdu1dayElapsedTime,
       "intervalOdu15minTable": intervalOdu15minTable,
       "intervalOdu15minEntry": intervalOdu15minEntry,
       "intervalOdu15minNumber": intervalOdu15minNumber,
       "intervalOdu15minES": intervalOdu15minES,
       "intervalOdu15minSES": intervalOdu15minSES,
       "intervalOdu15minBbe": intervalOdu15minBbe,
       "intervalOdu15minUAS": intervalOdu15minUAS,
       "intervalOdu15minValidFlag": intervalOdu15minValidFlag,
       "intervalOdu15minTimeStamp": intervalOdu15minTimeStamp,
       "intervalOdu1dayTable": intervalOdu1dayTable,
       "intervalOdu1dayEntry": intervalOdu1dayEntry,
       "intervalOdu1dayNumber": intervalOdu1dayNumber,
       "intervalOdu1dayES": intervalOdu1dayES,
       "intervalOdu1daySES": intervalOdu1daySES,
       "intervalOdu1dayBbe": intervalOdu1dayBbe,
       "intervalOdu1dayUAS": intervalOdu1dayUAS,
       "intervalOdu1dayValidFlag": intervalOdu1dayValidFlag,
       "intervalOdu1dayTimeStamp": intervalOdu1dayTimeStamp,
       "currentOduTcmA15minTable": currentOduTcmA15minTable,
       "currentOduTcmA15minEntry": currentOduTcmA15minEntry,
       "currentOduTcmA15minES": currentOduTcmA15minES,
       "currentOduTcmA15minSES": currentOduTcmA15minSES,
       "currentOduTcmA15minBbe": currentOduTcmA15minBbe,
       "currentOduTcmA15minUAS": currentOduTcmA15minUAS,
       "currentOduTcmA15minElapsedTime": currentOduTcmA15minElapsedTime,
       "currentOduTcmA1dayTable": currentOduTcmA1dayTable,
       "currentOduTcmA1dayEntry": currentOduTcmA1dayEntry,
       "currentOduTcmA1dayES": currentOduTcmA1dayES,
       "currentOduTcmA1daySES": currentOduTcmA1daySES,
       "currentOduTcmA1dayBbe": currentOduTcmA1dayBbe,
       "currentOduTcmA1dayUAS": currentOduTcmA1dayUAS,
       "currentOduTcmA1dayElapsedTime": currentOduTcmA1dayElapsedTime,
       "intervalOduTcmA15minTable": intervalOduTcmA15minTable,
       "intervalOduTcmA15minEntry": intervalOduTcmA15minEntry,
       "intervalOduTcmA15minNumber": intervalOduTcmA15minNumber,
       "intervalOduTcmA15minES": intervalOduTcmA15minES,
       "intervalOduTcmA15minSES": intervalOduTcmA15minSES,
       "intervalOduTcmA15minBbe": intervalOduTcmA15minBbe,
       "intervalOduTcmA15minUAS": intervalOduTcmA15minUAS,
       "intervalOduTcmA15minValidFlag": intervalOduTcmA15minValidFlag,
       "intervalOduTcmA15minTimeStamp": intervalOduTcmA15minTimeStamp,
       "intervalOduTcmA1dayTable": intervalOduTcmA1dayTable,
       "intervalOduTcmA1dayEntry": intervalOduTcmA1dayEntry,
       "intervalOduTcmA1dayNumber": intervalOduTcmA1dayNumber,
       "intervalOduTcmA1dayES": intervalOduTcmA1dayES,
       "intervalOduTcmA1daySES": intervalOduTcmA1daySES,
       "intervalOduTcmA1dayBbe": intervalOduTcmA1dayBbe,
       "intervalOduTcmA1dayUAS": intervalOduTcmA1dayUAS,
       "intervalOduTcmA1dayValidFlag": intervalOduTcmA1dayValidFlag,
       "intervalOduTcmA1dayTimeStamp": intervalOduTcmA1dayTimeStamp,
       "currentOduTcmB15minTable": currentOduTcmB15minTable,
       "currentOduTcmB15minEntry": currentOduTcmB15minEntry,
       "currentOduTcmB15minES": currentOduTcmB15minES,
       "currentOduTcmB15minSES": currentOduTcmB15minSES,
       "currentOduTcmB15minBbe": currentOduTcmB15minBbe,
       "currentOduTcmB15minUAS": currentOduTcmB15minUAS,
       "currentOduTcmB15minElapsedTime": currentOduTcmB15minElapsedTime,
       "currentOduTcmB1dayTable": currentOduTcmB1dayTable,
       "currentOduTcmB1dayEntry": currentOduTcmB1dayEntry,
       "currentOduTcmB1dayES": currentOduTcmB1dayES,
       "currentOduTcmB1daySES": currentOduTcmB1daySES,
       "currentOduTcmB1dayBbe": currentOduTcmB1dayBbe,
       "currentOduTcmB1dayUAS": currentOduTcmB1dayUAS,
       "currentOduTcmB1dayElapsedTime": currentOduTcmB1dayElapsedTime,
       "intervalOduTcmB15minTable": intervalOduTcmB15minTable,
       "intervalOduTcmB15minEntry": intervalOduTcmB15minEntry,
       "intervalOduTcmB15minNumber": intervalOduTcmB15minNumber,
       "intervalOduTcmB15minES": intervalOduTcmB15minES,
       "intervalOduTcmB15minSES": intervalOduTcmB15minSES,
       "intervalOduTcmB15minBbe": intervalOduTcmB15minBbe,
       "intervalOduTcmB15minUAS": intervalOduTcmB15minUAS,
       "intervalOduTcmB15minValidFlag": intervalOduTcmB15minValidFlag,
       "intervalOduTcmB15minTimeStamp": intervalOduTcmB15minTimeStamp,
       "intervalOduTcmB1dayTable": intervalOduTcmB1dayTable,
       "intervalOduTcmB1dayEntry": intervalOduTcmB1dayEntry,
       "intervalOduTcmB1dayNumber": intervalOduTcmB1dayNumber,
       "intervalOduTcmB1dayES": intervalOduTcmB1dayES,
       "intervalOduTcmB1daySES": intervalOduTcmB1daySES,
       "intervalOduTcmB1dayBbe": intervalOduTcmB1dayBbe,
       "intervalOduTcmB1dayUAS": intervalOduTcmB1dayUAS,
       "intervalOduTcmB1dayValidFlag": intervalOduTcmB1dayValidFlag,
       "intervalOduTcmB1dayTimeStamp": intervalOduTcmB1dayTimeStamp,
       "currentSonetSect15minTable": currentSonetSect15minTable,
       "currentSonetSect15minEntry": currentSonetSect15minEntry,
       "currentSonetSect15minES": currentSonetSect15minES,
       "currentSonetSect15minSES": currentSonetSect15minSES,
       "currentSonetSect15minSEFS": currentSonetSect15minSEFS,
       "currentSonetSect15minCV": currentSonetSect15minCV,
       "currentSonetSect15minElapsedTime": currentSonetSect15minElapsedTime,
       "currentSonetSect1dayTable": currentSonetSect1dayTable,
       "currentSonetSect1dayEntry": currentSonetSect1dayEntry,
       "currentSonetSect1dayES": currentSonetSect1dayES,
       "currentSonetSect1daySES": currentSonetSect1daySES,
       "currentSonetSect1daySEFS": currentSonetSect1daySEFS,
       "currentSonetSect1dayCV": currentSonetSect1dayCV,
       "currentSonetSect1dayElapsedTime": currentSonetSect1dayElapsedTime,
       "intervalSonetSect15minTable": intervalSonetSect15minTable,
       "intervalSonetSect15minEntry": intervalSonetSect15minEntry,
       "intervalSonetSect15minNumber": intervalSonetSect15minNumber,
       "intervalSonetSect15minES": intervalSonetSect15minES,
       "intervalSonetSect15minSES": intervalSonetSect15minSES,
       "intervalSonetSect15minSEFS": intervalSonetSect15minSEFS,
       "intervalSonetSect15minCV": intervalSonetSect15minCV,
       "intervalSonetSect15minValidFlag": intervalSonetSect15minValidFlag,
       "intervalSonetSect15minTimeStamp": intervalSonetSect15minTimeStamp,
       "intervalSonetSect1dayTable": intervalSonetSect1dayTable,
       "intervalSonetSect1dayEntry": intervalSonetSect1dayEntry,
       "intervalSonetSect1dayNumber": intervalSonetSect1dayNumber,
       "intervalSonetSect1dayES": intervalSonetSect1dayES,
       "intervalSonetSect1daySES": intervalSonetSect1daySES,
       "intervalSonetSect1daySEFS": intervalSonetSect1daySEFS,
       "intervalSonetSect1dayCV": intervalSonetSect1dayCV,
       "intervalSonetSect1dayValidFlag": intervalSonetSect1dayValidFlag,
       "intervalSonetSect1dayTimeStamp": intervalSonetSect1dayTimeStamp,
       "currentSonetLine15minTable": currentSonetLine15minTable,
       "currentSonetLine15minEntry": currentSonetLine15minEntry,
       "currentSonetLine15minES": currentSonetLine15minES,
       "currentSonetLine15minSES": currentSonetLine15minSES,
       "currentSonetLine15minUAS": currentSonetLine15minUAS,
       "currentSonetLine15minCV": currentSonetLine15minCV,
       "currentSonetLine15minElapsedTime": currentSonetLine15minElapsedTime,
       "currentSonetLine1dayTable": currentSonetLine1dayTable,
       "currentSonetLine1dayEntry": currentSonetLine1dayEntry,
       "currentSonetLine1dayES": currentSonetLine1dayES,
       "currentSonetLine1daySES": currentSonetLine1daySES,
       "currentSonetLine1dayUAS": currentSonetLine1dayUAS,
       "currentSonetLine1dayCV": currentSonetLine1dayCV,
       "currentSonetLine1dayElapsedTime": currentSonetLine1dayElapsedTime,
       "intervalSonetLine15minTable": intervalSonetLine15minTable,
       "intervalSonetLine15minEntry": intervalSonetLine15minEntry,
       "intervalSonetLine15minNumber": intervalSonetLine15minNumber,
       "intervalSonetLine15minES": intervalSonetLine15minES,
       "intervalSonetLine15minSES": intervalSonetLine15minSES,
       "intervalSonetLine15minUAS": intervalSonetLine15minUAS,
       "intervalSonetLine15minCV": intervalSonetLine15minCV,
       "intervalSonetLine15minValidFlag": intervalSonetLine15minValidFlag,
       "intervalSonetLine15minTimeStamp": intervalSonetLine15minTimeStamp,
       "intervalSonetLine1dayTable": intervalSonetLine1dayTable,
       "intervalSonetLine1dayEntry": intervalSonetLine1dayEntry,
       "intervalSonetLine1dayNumber": intervalSonetLine1dayNumber,
       "intervalSonetLine1dayES": intervalSonetLine1dayES,
       "intervalSonetLine1daySES": intervalSonetLine1daySES,
       "intervalSonetLine1dayUAS": intervalSonetLine1dayUAS,
       "intervalSonetLine1dayCV": intervalSonetLine1dayCV,
       "intervalSonetLine1dayValidFlag": intervalSonetLine1dayValidFlag,
       "intervalSonetLine1dayTimeStamp": intervalSonetLine1dayTimeStamp,
       "currentSonetHoPath15minTable": currentSonetHoPath15minTable,
       "currentSonetHoPath15minEntry": currentSonetHoPath15minEntry,
       "currentSonetHoPath15minES": currentSonetHoPath15minES,
       "currentSonetHoPath15minSES": currentSonetHoPath15minSES,
       "currentSonetHoPath15minUAS": currentSonetHoPath15minUAS,
       "currentSonetHoPath15minCV": currentSonetHoPath15minCV,
       "currentSonetHoPath15minElapsedTime": currentSonetHoPath15minElapsedTime,
       "currentSonetHoPath1dayTable": currentSonetHoPath1dayTable,
       "currentSonetHoPath1dayEntry": currentSonetHoPath1dayEntry,
       "currentSonetHoPath1dayES": currentSonetHoPath1dayES,
       "currentSonetHoPath1daySES": currentSonetHoPath1daySES,
       "currentSonetHoPath1dayUAS": currentSonetHoPath1dayUAS,
       "currentSonetHoPath1dayCV": currentSonetHoPath1dayCV,
       "currentSonetHoPath1dayElapsedTime": currentSonetHoPath1dayElapsedTime,
       "intervalSonetHoPath15minTable": intervalSonetHoPath15minTable,
       "intervalSonetHoPath15minEntry": intervalSonetHoPath15minEntry,
       "intervalSonetHoPath15minNumber": intervalSonetHoPath15minNumber,
       "intervalSonetHoPath15minES": intervalSonetHoPath15minES,
       "intervalSonetHoPath15minSES": intervalSonetHoPath15minSES,
       "intervalSonetHoPath15minUAS": intervalSonetHoPath15minUAS,
       "intervalSonetHoPath15minCV": intervalSonetHoPath15minCV,
       "intervalSonetHoPath15minValidFlag": intervalSonetHoPath15minValidFlag,
       "intervalSonetHoPath15minTimeStamp": intervalSonetHoPath15minTimeStamp,
       "intervalSonetHoPath1dayTable": intervalSonetHoPath1dayTable,
       "intervalSonetHoPath1dayEntry": intervalSonetHoPath1dayEntry,
       "intervalSonetHoPath1dayNumber": intervalSonetHoPath1dayNumber,
       "intervalSonetHoPath1dayES": intervalSonetHoPath1dayES,
       "intervalSonetHoPath1daySES": intervalSonetHoPath1daySES,
       "intervalSonetHoPath1dayUAS": intervalSonetHoPath1dayUAS,
       "intervalSonetHoPath1dayCV": intervalSonetHoPath1dayCV,
       "intervalSonetHoPath1dayValidFlag": intervalSonetHoPath1dayValidFlag,
       "intervalSonetHoPath1dayTimeStamp": intervalSonetHoPath1dayTimeStamp,
       "currentSonetLoPath15minTable": currentSonetLoPath15minTable,
       "currentSonetLoPath15minEntry": currentSonetLoPath15minEntry,
       "currentSonetLoPath15minES": currentSonetLoPath15minES,
       "currentSonetLoPath15minSES": currentSonetLoPath15minSES,
       "currentSonetLoPath15minUAS": currentSonetLoPath15minUAS,
       "currentSonetLoPath15minCV": currentSonetLoPath15minCV,
       "currentSonetLoPath15minElapsedTime": currentSonetLoPath15minElapsedTime,
       "currentSonetLoPath1dayTable": currentSonetLoPath1dayTable,
       "currentSonetLoPath1dayEntry": currentSonetLoPath1dayEntry,
       "currentSonetLoPath1dayES": currentSonetLoPath1dayES,
       "currentSonetLoPath1daySES": currentSonetLoPath1daySES,
       "currentSonetLoPath1dayUAS": currentSonetLoPath1dayUAS,
       "currentSonetLoPath1dayCV": currentSonetLoPath1dayCV,
       "currentSonetLoPath1dayElapsedTime": currentSonetLoPath1dayElapsedTime,
       "intervalSonetLoPath15minTable": intervalSonetLoPath15minTable,
       "intervalSonetLoPath15minEntry": intervalSonetLoPath15minEntry,
       "intervalSonetLoPath15minNumber": intervalSonetLoPath15minNumber,
       "intervalSonetLoPath15minES": intervalSonetLoPath15minES,
       "intervalSonetLoPath15minSES": intervalSonetLoPath15minSES,
       "intervalSonetLoPath15minUAS": intervalSonetLoPath15minUAS,
       "intervalSonetLoPath15minCV": intervalSonetLoPath15minCV,
       "intervalSonetLoPath15minValidFlag": intervalSonetLoPath15minValidFlag,
       "intervalSonetLoPath15minTimeStamp": intervalSonetLoPath15minTimeStamp,
       "intervalSonetLoPath1dayTable": intervalSonetLoPath1dayTable,
       "intervalSonetLoPath1dayEntry": intervalSonetLoPath1dayEntry,
       "intervalSonetLoPath1dayNumber": intervalSonetLoPath1dayNumber,
       "intervalSonetLoPath1dayES": intervalSonetLoPath1dayES,
       "intervalSonetLoPath1daySES": intervalSonetLoPath1daySES,
       "intervalSonetLoPath1dayUAS": intervalSonetLoPath1dayUAS,
       "intervalSonetLoPath1dayCV": intervalSonetLoPath1dayCV,
       "intervalSonetLoPath1dayValidFlag": intervalSonetLoPath1dayValidFlag,
       "intervalSonetLoPath1dayTimeStamp": intervalSonetLoPath1dayTimeStamp,
       "intervalPhysPerfOpticalInputPwr15minTable": intervalPhysPerfOpticalInputPwr15minTable,
       "intervalPhysPerfOpticalInputPwr15minEntry": intervalPhysPerfOpticalInputPwr15minEntry,
       "intervalPhysPerfOpticalInputPwr15minNumber": intervalPhysPerfOpticalInputPwr15minNumber,
       "intervalPhysPerfOpticalInputPwr15minLow": intervalPhysPerfOpticalInputPwr15minLow,
       "intervalPhysPerfOpticalInputPwr15minMean": intervalPhysPerfOpticalInputPwr15minMean,
       "intervalPhysPerfOpticalInputPwr15minHigh": intervalPhysPerfOpticalInputPwr15minHigh,
       "intervalPhysPerfOpticalInputPwr15minValidFlag": intervalPhysPerfOpticalInputPwr15minValidFlag,
       "intervalPhysPerfOpticalInputPwr15minTimeStamp": intervalPhysPerfOpticalInputPwr15minTimeStamp,
       "intervalPhysPerfOpticalInputPwr1dayTable": intervalPhysPerfOpticalInputPwr1dayTable,
       "intervalPhysPerfOpticalInputPwr1dayEntry": intervalPhysPerfOpticalInputPwr1dayEntry,
       "intervalPhysPerfOpticalInputPwr1dayNumber": intervalPhysPerfOpticalInputPwr1dayNumber,
       "intervalPhysPerfOpticalInputPwr1dayLow": intervalPhysPerfOpticalInputPwr1dayLow,
       "intervalPhysPerfOpticalInputPwr1dayMean": intervalPhysPerfOpticalInputPwr1dayMean,
       "intervalPhysPerfOpticalInputPwr1dayHigh": intervalPhysPerfOpticalInputPwr1dayHigh,
       "intervalPhysPerfOpticalInputPwr1dayValidFlag": intervalPhysPerfOpticalInputPwr1dayValidFlag,
       "intervalPhysPerfOpticalInputPwr1dayTimeStamp": intervalPhysPerfOpticalInputPwr1dayTimeStamp,
       "intervalPhysPerfOpticalInputPwr1weekTable": intervalPhysPerfOpticalInputPwr1weekTable,
       "intervalPhysPerfOpticalInputPwr1weekEntry": intervalPhysPerfOpticalInputPwr1weekEntry,
       "intervalPhysPerfOpticalInputPwr1weekNumber": intervalPhysPerfOpticalInputPwr1weekNumber,
       "intervalPhysPerfOpticalInputPwr1weekLow": intervalPhysPerfOpticalInputPwr1weekLow,
       "intervalPhysPerfOpticalInputPwr1weekMean": intervalPhysPerfOpticalInputPwr1weekMean,
       "intervalPhysPerfOpticalInputPwr1weekHigh": intervalPhysPerfOpticalInputPwr1weekHigh,
       "intervalPhysPerfOpticalInputPwr1weekValidFlag": intervalPhysPerfOpticalInputPwr1weekValidFlag,
       "intervalPhysPerfOpticalInputPwr1weekTimeStamp": intervalPhysPerfOpticalInputPwr1weekTimeStamp,
       "intervalPhysPerfOpticalOutputPwr15minTable": intervalPhysPerfOpticalOutputPwr15minTable,
       "intervalPhysPerfOpticalOutputPwr15minEntry": intervalPhysPerfOpticalOutputPwr15minEntry,
       "intervalPhysPerfOpticalOutputPwr15minNumber": intervalPhysPerfOpticalOutputPwr15minNumber,
       "intervalPhysPerfOpticalOutputPwr15minLow": intervalPhysPerfOpticalOutputPwr15minLow,
       "intervalPhysPerfOpticalOutputPwr15minMean": intervalPhysPerfOpticalOutputPwr15minMean,
       "intervalPhysPerfOpticalOutputPwr15minHigh": intervalPhysPerfOpticalOutputPwr15minHigh,
       "intervalPhysPerfOpticalOutputPwr15minValidFlag": intervalPhysPerfOpticalOutputPwr15minValidFlag,
       "intervalPhysPerfOpticalOutputPwr15minTimeStamp": intervalPhysPerfOpticalOutputPwr15minTimeStamp,
       "intervalPhysPerfOpticalOutputPwr1dayTable": intervalPhysPerfOpticalOutputPwr1dayTable,
       "intervalPhysPerfOpticalOutputPwr1dayEntry": intervalPhysPerfOpticalOutputPwr1dayEntry,
       "intervalPhysPerfOpticalOutputPwr1dayNumber": intervalPhysPerfOpticalOutputPwr1dayNumber,
       "intervalPhysPerfOpticalOutputPwr1dayLow": intervalPhysPerfOpticalOutputPwr1dayLow,
       "intervalPhysPerfOpticalOutputPwr1dayMean": intervalPhysPerfOpticalOutputPwr1dayMean,
       "intervalPhysPerfOpticalOutputPwr1dayHigh": intervalPhysPerfOpticalOutputPwr1dayHigh,
       "intervalPhysPerfOpticalOutputPwr1dayValidFlag": intervalPhysPerfOpticalOutputPwr1dayValidFlag,
       "intervalPhysPerfOpticalOutputPwr1dayTimeStamp": intervalPhysPerfOpticalOutputPwr1dayTimeStamp,
       "intervalPhysPerfOpticalOutputPwr1weekTable": intervalPhysPerfOpticalOutputPwr1weekTable,
       "intervalPhysPerfOpticalOutputPwr1weekEntry": intervalPhysPerfOpticalOutputPwr1weekEntry,
       "intervalPhysPerfOpticalOutputPwr1weekNumber": intervalPhysPerfOpticalOutputPwr1weekNumber,
       "intervalPhysPerfOpticalOutputPwr1weekLow": intervalPhysPerfOpticalOutputPwr1weekLow,
       "intervalPhysPerfOpticalOutputPwr1weekMean": intervalPhysPerfOpticalOutputPwr1weekMean,
       "intervalPhysPerfOpticalOutputPwr1weekHigh": intervalPhysPerfOpticalOutputPwr1weekHigh,
       "intervalPhysPerfOpticalOutputPwr1weekValidFlag": intervalPhysPerfOpticalOutputPwr1weekValidFlag,
       "intervalPhysPerfOpticalOutputPwr1weekTimeStamp": intervalPhysPerfOpticalOutputPwr1weekTimeStamp,
       "intervalPhysPerfLaserBiasCurrentNormalized15minTable": intervalPhysPerfLaserBiasCurrentNormalized15minTable,
       "intervalPhysPerfLaserBiasCurrentNormalized15minEntry": intervalPhysPerfLaserBiasCurrentNormalized15minEntry,
       "intervalPhysPerfLaserBiasCurrentNormalized15minNumber": intervalPhysPerfLaserBiasCurrentNormalized15minNumber,
       "intervalPhysPerfLaserBiasCurrentNormalized15minLow": intervalPhysPerfLaserBiasCurrentNormalized15minLow,
       "intervalPhysPerfLaserBiasCurrentNormalized15minMean": intervalPhysPerfLaserBiasCurrentNormalized15minMean,
       "intervalPhysPerfLaserBiasCurrentNormalized15minHigh": intervalPhysPerfLaserBiasCurrentNormalized15minHigh,
       "intervalPhysPerfLaserBiasCurrentNormalized15minValidFlag": intervalPhysPerfLaserBiasCurrentNormalized15minValidFlag,
       "intervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp": intervalPhysPerfLaserBiasCurrentNormalized15minTimeStamp,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayTable": intervalPhysPerfLaserBiasCurrentNormalized1dayTable,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayEntry": intervalPhysPerfLaserBiasCurrentNormalized1dayEntry,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayNumber": intervalPhysPerfLaserBiasCurrentNormalized1dayNumber,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayLow": intervalPhysPerfLaserBiasCurrentNormalized1dayLow,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayMean": intervalPhysPerfLaserBiasCurrentNormalized1dayMean,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayHigh": intervalPhysPerfLaserBiasCurrentNormalized1dayHigh,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag": intervalPhysPerfLaserBiasCurrentNormalized1dayValidFlag,
       "intervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp": intervalPhysPerfLaserBiasCurrentNormalized1dayTimeStamp,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekTable": intervalPhysPerfLaserBiasCurrentNormalized1weekTable,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekEntry": intervalPhysPerfLaserBiasCurrentNormalized1weekEntry,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekNumber": intervalPhysPerfLaserBiasCurrentNormalized1weekNumber,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekLow": intervalPhysPerfLaserBiasCurrentNormalized1weekLow,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekMean": intervalPhysPerfLaserBiasCurrentNormalized1weekMean,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekHigh": intervalPhysPerfLaserBiasCurrentNormalized1weekHigh,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag": intervalPhysPerfLaserBiasCurrentNormalized1weekValidFlag,
       "intervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp": intervalPhysPerfLaserBiasCurrentNormalized1weekTimeStamp,
       "intervalPhysPerfOlmRxLineAtt15minTable": intervalPhysPerfOlmRxLineAtt15minTable,
       "intervalPhysPerfOlmRxLineAtt15minEntry": intervalPhysPerfOlmRxLineAtt15minEntry,
       "intervalPhysPerfOlmRxLineAtt15minNumber": intervalPhysPerfOlmRxLineAtt15minNumber,
       "intervalPhysPerfOlmRxLineAtt15minLow": intervalPhysPerfOlmRxLineAtt15minLow,
       "intervalPhysPerfOlmRxLineAtt15minMean": intervalPhysPerfOlmRxLineAtt15minMean,
       "intervalPhysPerfOlmRxLineAtt15minHigh": intervalPhysPerfOlmRxLineAtt15minHigh,
       "intervalPhysPerfOlmRxLineAtt15minValidFlag": intervalPhysPerfOlmRxLineAtt15minValidFlag,
       "intervalPhysPerfOlmRxLineAtt15minTimeStamp": intervalPhysPerfOlmRxLineAtt15minTimeStamp,
       "intervalPhysPerfOlmRxLineAtt1dayTable": intervalPhysPerfOlmRxLineAtt1dayTable,
       "intervalPhysPerfOlmRxLineAtt1dayEntry": intervalPhysPerfOlmRxLineAtt1dayEntry,
       "intervalPhysPerfOlmRxLineAtt1dayNumber": intervalPhysPerfOlmRxLineAtt1dayNumber,
       "intervalPhysPerfOlmRxLineAtt1dayLow": intervalPhysPerfOlmRxLineAtt1dayLow,
       "intervalPhysPerfOlmRxLineAtt1dayMean": intervalPhysPerfOlmRxLineAtt1dayMean,
       "intervalPhysPerfOlmRxLineAtt1dayHigh": intervalPhysPerfOlmRxLineAtt1dayHigh,
       "intervalPhysPerfOlmRxLineAtt1dayValidFlag": intervalPhysPerfOlmRxLineAtt1dayValidFlag,
       "intervalPhysPerfOlmRxLineAtt1dayTimeStamp": intervalPhysPerfOlmRxLineAtt1dayTimeStamp,
       "intervalPhysPerfOlmRxLineAtt1weekTable": intervalPhysPerfOlmRxLineAtt1weekTable,
       "intervalPhysPerfOlmRxLineAtt1weekEntry": intervalPhysPerfOlmRxLineAtt1weekEntry,
       "intervalPhysPerfOlmRxLineAtt1weekNumber": intervalPhysPerfOlmRxLineAtt1weekNumber,
       "intervalPhysPerfOlmRxLineAtt1weekLow": intervalPhysPerfOlmRxLineAtt1weekLow,
       "intervalPhysPerfOlmRxLineAtt1weekMean": intervalPhysPerfOlmRxLineAtt1weekMean,
       "intervalPhysPerfOlmRxLineAtt1weekHigh": intervalPhysPerfOlmRxLineAtt1weekHigh,
       "intervalPhysPerfOlmRxLineAtt1weekValidFlag": intervalPhysPerfOlmRxLineAtt1weekValidFlag,
       "intervalPhysPerfOlmRxLineAtt1weekTimeStamp": intervalPhysPerfOlmRxLineAtt1weekTimeStamp,
       "intervalPhysPerfOlmTxLineAtt15minTable": intervalPhysPerfOlmTxLineAtt15minTable,
       "intervalPhysPerfOlmTxLineAtt15minEntry": intervalPhysPerfOlmTxLineAtt15minEntry,
       "intervalPhysPerfOlmTxLineAtt15minNumber": intervalPhysPerfOlmTxLineAtt15minNumber,
       "intervalPhysPerfOlmTxLineAtt15minLow": intervalPhysPerfOlmTxLineAtt15minLow,
       "intervalPhysPerfOlmTxLineAtt15minHigh": intervalPhysPerfOlmTxLineAtt15minHigh,
       "intervalPhysPerfOlmTxLineAtt15minMean": intervalPhysPerfOlmTxLineAtt15minMean,
       "intervalPhysPerfOlmTxLineAtt15minValidFlag": intervalPhysPerfOlmTxLineAtt15minValidFlag,
       "intervalPhysPerfOlmTxLineAtt15minTimeStamp": intervalPhysPerfOlmTxLineAtt15minTimeStamp,
       "intervalPhysPerfOlmTxLineAtt1dayTable": intervalPhysPerfOlmTxLineAtt1dayTable,
       "intervalPhysPerfOlmTxLineAtt1dayEntry": intervalPhysPerfOlmTxLineAtt1dayEntry,
       "intervalPhysPerfOlmTxLineAtt1dayNumber": intervalPhysPerfOlmTxLineAtt1dayNumber,
       "intervalPhysPerfOlmTxLineAtt1dayLow": intervalPhysPerfOlmTxLineAtt1dayLow,
       "intervalPhysPerfOlmTxLineAtt1dayHigh": intervalPhysPerfOlmTxLineAtt1dayHigh,
       "intervalPhysPerfOlmTxLineAtt1dayMean": intervalPhysPerfOlmTxLineAtt1dayMean,
       "intervalPhysPerfOlmTxLineAtt1dayValidFlag": intervalPhysPerfOlmTxLineAtt1dayValidFlag,
       "intervalPhysPerfOlmTxLineAtt1dayTimeStamp": intervalPhysPerfOlmTxLineAtt1dayTimeStamp,
       "intervalPhysPerfOlmTxLineAtt1weekTable": intervalPhysPerfOlmTxLineAtt1weekTable,
       "intervalPhysPerfOlmTxLineAtt1weekEntry": intervalPhysPerfOlmTxLineAtt1weekEntry,
       "intervalPhysPerfOlmTxLineAtt1weekNumber": intervalPhysPerfOlmTxLineAtt1weekNumber,
       "intervalPhysPerfOlmTxLineAtt1weekLow": intervalPhysPerfOlmTxLineAtt1weekLow,
       "intervalPhysPerfOlmTxLineAtt1weekHigh": intervalPhysPerfOlmTxLineAtt1weekHigh,
       "intervalPhysPerfOlmTxLineAtt1weekMean": intervalPhysPerfOlmTxLineAtt1weekMean,
       "intervalPhysPerfOlmTxLineAtt1weekValidFlag": intervalPhysPerfOlmTxLineAtt1weekValidFlag,
       "intervalPhysPerfOlmTxLineAtt1weekTimeStamp": intervalPhysPerfOlmTxLineAtt1weekTimeStamp,
       "currentPhysConv15minTable": currentPhysConv15minTable,
       "currentPhysConv15minEntry": currentPhysConv15minEntry,
       "currentPhysConv15minES": currentPhysConv15minES,
       "currentPhysConv15minDE": currentPhysConv15minDE,
       "currentPhysConv15minCV": currentPhysConv15minCV,
       "currentPhysConv15minElapsedTime": currentPhysConv15minElapsedTime,
       "currentPhysConv1dayTable": currentPhysConv1dayTable,
       "currentPhysConv1dayEntry": currentPhysConv1dayEntry,
       "currentPhysConv1dayES": currentPhysConv1dayES,
       "currentPhysConv1dayDE": currentPhysConv1dayDE,
       "currentPhysConv1dayCV": currentPhysConv1dayCV,
       "currentPhysConv1dayElapsedTime": currentPhysConv1dayElapsedTime,
       "intervalPhysConv15minTable": intervalPhysConv15minTable,
       "intervalPhysConv15minEntry": intervalPhysConv15minEntry,
       "intervalPhysConv15minNumber": intervalPhysConv15minNumber,
       "intervalPhysConv15minES": intervalPhysConv15minES,
       "intervalPhysConv15minDE": intervalPhysConv15minDE,
       "intervalPhysConv15minCV": intervalPhysConv15minCV,
       "intervalPhysConv15minValidFlag": intervalPhysConv15minValidFlag,
       "intervalPhysConv15minTimeStamp": intervalPhysConv15minTimeStamp,
       "intervalPhysConv1dayTable": intervalPhysConv1dayTable,
       "intervalPhysConv1dayEntry": intervalPhysConv1dayEntry,
       "intervalPhysConv1dayNumber": intervalPhysConv1dayNumber,
       "intervalPhysConv1dayES": intervalPhysConv1dayES,
       "intervalPhysConv1dayDE": intervalPhysConv1dayDE,
       "intervalPhysConv1dayCV": intervalPhysConv1dayCV,
       "intervalPhysConv1dayValidFlag": intervalPhysConv1dayValidFlag,
       "intervalPhysConv1dayTimeStamp": intervalPhysConv1dayTimeStamp,
       "currentEthRx15minTable": currentEthRx15minTable,
       "currentEthRx15minEntry": currentEthRx15minEntry,
       "currentEthRx15minGoodFrames": currentEthRx15minGoodFrames,
       "currentEthRx15minPauseFrames": currentEthRx15minPauseFrames,
       "currentEthRx15minCrcFrames": currentEthRx15minCrcFrames,
       "currentEthRx15minDiscardedFrames": currentEthRx15minDiscardedFrames,
       "currentEthRx15minBytes": currentEthRx15minBytes,
       "currentEthRx15minElapsedTime": currentEthRx15minElapsedTime,
       "currentEthRx1dayTable": currentEthRx1dayTable,
       "currentEthRx1dayEntry": currentEthRx1dayEntry,
       "currentEthRx1dayGoodFrames": currentEthRx1dayGoodFrames,
       "currentEthRx1dayPauseFrames": currentEthRx1dayPauseFrames,
       "currentEthRx1dayCrcFrames": currentEthRx1dayCrcFrames,
       "currentEthRx1dayDiscardedFrames": currentEthRx1dayDiscardedFrames,
       "currentEthRx1dayBytes": currentEthRx1dayBytes,
       "currentEthRx1dayElapsedTime": currentEthRx1dayElapsedTime,
       "intervalEthRx15minTable": intervalEthRx15minTable,
       "intervalEthRx15minEntry": intervalEthRx15minEntry,
       "intervalEthRx15minNumber": intervalEthRx15minNumber,
       "intervalEthRx15minGoodFrames": intervalEthRx15minGoodFrames,
       "intervalEthRx15minPauseFrames": intervalEthRx15minPauseFrames,
       "intervalEthRx15minCrcFrames": intervalEthRx15minCrcFrames,
       "intervalEthRx15minDiscardedFrames": intervalEthRx15minDiscardedFrames,
       "intervalEthRx15minBytes": intervalEthRx15minBytes,
       "intervalEthRx15minValidFlag": intervalEthRx15minValidFlag,
       "intervalEthRx15minTimeStamp": intervalEthRx15minTimeStamp,
       "intervalEthRx1dayTable": intervalEthRx1dayTable,
       "intervalEthRx1dayEntry": intervalEthRx1dayEntry,
       "intervalEthRx1dayNumber": intervalEthRx1dayNumber,
       "intervalEthRx1dayGoodFrames": intervalEthRx1dayGoodFrames,
       "intervalEthRx1dayPauseFrames": intervalEthRx1dayPauseFrames,
       "intervalEthRx1dayCrcFrames": intervalEthRx1dayCrcFrames,
       "intervalEthRx1dayDiscardedFrames": intervalEthRx1dayDiscardedFrames,
       "intervalEthRx1dayBytes": intervalEthRx1dayBytes,
       "intervalEthRx1dayValidFlag": intervalEthRx1dayValidFlag,
       "intervalEthRx1dayTimeStamp": intervalEthRx1dayTimeStamp,
       "currentEthTx15minTable": currentEthTx15minTable,
       "currentEthTx15minEntry": currentEthTx15minEntry,
       "currentEthTx15minGoodFramesx": currentEthTx15minGoodFramesx,
       "currentEthTx15minPauseFrames": currentEthTx15minPauseFrames,
       "currentEthTx15minBytes": currentEthTx15minBytes,
       "currentEthTx15minCrcFramesEgress": currentEthTx15minCrcFramesEgress,
       "currentEthTx15minElapsedTime": currentEthTx15minElapsedTime,
       "currentEthTx1dayTable": currentEthTx1dayTable,
       "currentEthTx1dayEntry": currentEthTx1dayEntry,
       "currentEthTx1dayGoodFramesx": currentEthTx1dayGoodFramesx,
       "currentEthTx1dayPauseFrames": currentEthTx1dayPauseFrames,
       "currentEthTx1dayBytes": currentEthTx1dayBytes,
       "currentEthTx1dayCrcFramesEgress": currentEthTx1dayCrcFramesEgress,
       "currentEthTx1dayElapsedTime": currentEthTx1dayElapsedTime,
       "intervalEthTx15minTable": intervalEthTx15minTable,
       "intervalEthTx15minEntry": intervalEthTx15minEntry,
       "intervalEthTx15minNumber": intervalEthTx15minNumber,
       "intervalEthTx15minGoodFramesx": intervalEthTx15minGoodFramesx,
       "intervalEthTx15minPauseFrames": intervalEthTx15minPauseFrames,
       "intervalEthTx15minBytes": intervalEthTx15minBytes,
       "intervalEthTx15minCrcFramesEgress": intervalEthTx15minCrcFramesEgress,
       "intervalEthTx15minValidFlag": intervalEthTx15minValidFlag,
       "intervalEthTx15minTimeStamp": intervalEthTx15minTimeStamp,
       "intervalEthTx1dayTable": intervalEthTx1dayTable,
       "intervalEthTx1dayEntry": intervalEthTx1dayEntry,
       "intervalEthTx1dayNumber": intervalEthTx1dayNumber,
       "intervalEthTx1dayGoodFramesx": intervalEthTx1dayGoodFramesx,
       "intervalEthTx1dayPauseFrames": intervalEthTx1dayPauseFrames,
       "intervalEthTx1dayBytes": intervalEthTx1dayBytes,
       "intervalEthTx1dayCrcFramesEgress": intervalEthTx1dayCrcFramesEgress,
       "intervalEthTx1dayValidFlag": intervalEthTx1dayValidFlag,
       "intervalEthTx1dayTimeStamp": intervalEthTx1dayTimeStamp,
       "currentGfp15minTable": currentGfp15minTable,
       "currentGfp15minEntry": currentGfp15minEntry,
       "currentGfp15minCoreHecCorrectedFrames": currentGfp15minCoreHecCorrectedFrames,
       "currentGfp15minTypeHecCorrectedFrames": currentGfp15minTypeHecCorrectedFrames,
       "currentGfp15minTypeHecDiscardedFrames": currentGfp15minTypeHecDiscardedFrames,
       "currentGfp15minElapsedTime": currentGfp15minElapsedTime,
       "currentGfp1dayTable": currentGfp1dayTable,
       "currentGfp1dayEntry": currentGfp1dayEntry,
       "currentGfp1dayCoreHecCorrectedFrames": currentGfp1dayCoreHecCorrectedFrames,
       "currentGfp1dayTypeHecCorrectedFrames": currentGfp1dayTypeHecCorrectedFrames,
       "currentGfp1dayTypeHecDiscardedFrames": currentGfp1dayTypeHecDiscardedFrames,
       "currentGfp1dayElapsedTime": currentGfp1dayElapsedTime,
       "intervalGfp15minTable": intervalGfp15minTable,
       "intervalGfp15minEntry": intervalGfp15minEntry,
       "intervalGfp15minNumber": intervalGfp15minNumber,
       "intervalGfp15minCoreHecCorrectedFrames": intervalGfp15minCoreHecCorrectedFrames,
       "intervalGfp15minTypeHecCorrectedFrames": intervalGfp15minTypeHecCorrectedFrames,
       "intervalGfp15minTypeHecDiscardedFrames": intervalGfp15minTypeHecDiscardedFrames,
       "intervalGfp15minValidFlag": intervalGfp15minValidFlag,
       "intervalGfp15minTimeStamp": intervalGfp15minTimeStamp,
       "intervalGfp1dayTable": intervalGfp1dayTable,
       "intervalGfp1dayEntry": intervalGfp1dayEntry,
       "intervalGfp1dayNumber": intervalGfp1dayNumber,
       "intervalGfp1dayCoreHecCorrectedFrames": intervalGfp1dayCoreHecCorrectedFrames,
       "intervalGfp1dayTypeHecCorrectedFrames": intervalGfp1dayTypeHecCorrectedFrames,
       "intervalGfp1dayTypeHecDiscardedFrames": intervalGfp1dayTypeHecDiscardedFrames,
       "intervalGfp1dayValidFlag": intervalGfp1dayValidFlag,
       "intervalGfp1dayTimeStamp": intervalGfp1dayTimeStamp,
       "currentOtuFec15minTable": currentOtuFec15minTable,
       "currentOtuFec15minEntry": currentOtuFec15minEntry,
       "currentOtuFec15minES": currentOtuFec15minES,
       "currentOtuFec15minSES": currentOtuFec15minSES,
       "currentOtuFec15minCE": currentOtuFec15minCE,
       "currentOtuFec15minUBE": currentOtuFec15minUBE,
       "currentOtuFec15minElapsedTime": currentOtuFec15minElapsedTime,
       "currentOtuFec15minBERCE": currentOtuFec15minBERCE,
       "currentOtuFec1dayTable": currentOtuFec1dayTable,
       "currentOtuFec1dayEntry": currentOtuFec1dayEntry,
       "currentOtuFec1dayES": currentOtuFec1dayES,
       "currentOtuFec1daySES": currentOtuFec1daySES,
       "currentOtuFec1dayCE": currentOtuFec1dayCE,
       "currentOtuFec1dayUBE": currentOtuFec1dayUBE,
       "currentOtuFec1dayElapsedTime": currentOtuFec1dayElapsedTime,
       "currentOtuFec1dayBERCE": currentOtuFec1dayBERCE,
       "intervalOtuFec15minTable": intervalOtuFec15minTable,
       "intervalOtuFec15minEntry": intervalOtuFec15minEntry,
       "intervalOtuFec15minNumber": intervalOtuFec15minNumber,
       "intervalOtuFec15minES": intervalOtuFec15minES,
       "intervalOtuFec15minSES": intervalOtuFec15minSES,
       "intervalOtuFec15minCE": intervalOtuFec15minCE,
       "intervalOtuFec15minUBE": intervalOtuFec15minUBE,
       "intervalOtuFec15minValidFlag": intervalOtuFec15minValidFlag,
       "intervalOtuFec15minTimeStamp": intervalOtuFec15minTimeStamp,
       "intervalOtuFec15minBERCE": intervalOtuFec15minBERCE,
       "intervalOtuFec1dayTable": intervalOtuFec1dayTable,
       "intervalOtuFec1dayEntry": intervalOtuFec1dayEntry,
       "intervalOtuFec1dayNumber": intervalOtuFec1dayNumber,
       "intervalOtuFec1dayES": intervalOtuFec1dayES,
       "intervalOtuFec1daySES": intervalOtuFec1daySES,
       "intervalOtuFec1dayCE": intervalOtuFec1dayCE,
       "intervalOtuFec1dayUBE": intervalOtuFec1dayUBE,
       "intervalOtuFec1dayValidFlag": intervalOtuFec1dayValidFlag,
       "intervalOtuFec1dayTimeStamp": intervalOtuFec1dayTimeStamp,
       "intervalOtuFec1dayBERCE": intervalOtuFec1dayBERCE,
       "currentGfpt15minTable": currentGfpt15minTable,
       "currentGfpt15minEntry": currentGfpt15minEntry,
       "currentGfpt15minDiscardedSuperblocks": currentGfpt15minDiscardedSuperblocks,
       "currentGfpt15minElapsedTime": currentGfpt15minElapsedTime,
       "currentGfpt1dayTable": currentGfpt1dayTable,
       "currentGfpt1dayEntry": currentGfpt1dayEntry,
       "currentGfpt1dayDiscardedSuperblocks": currentGfpt1dayDiscardedSuperblocks,
       "currentGfpt1dayElapsedTime": currentGfpt1dayElapsedTime,
       "intervalGfpt15minTable": intervalGfpt15minTable,
       "intervalGfpt15minEntry": intervalGfpt15minEntry,
       "intervalGfpt15minNumber": intervalGfpt15minNumber,
       "intervalGfpt15minDiscardedSuperblocks": intervalGfpt15minDiscardedSuperblocks,
       "intervalGfpt15minValidFlag": intervalGfpt15minValidFlag,
       "intervalGfpt15minTimeStamp": intervalGfpt15minTimeStamp,
       "intervalGfpt1dayTable": intervalGfpt1dayTable,
       "intervalGfpt1dayEntry": intervalGfpt1dayEntry,
       "intervalGfpt1dayNumber": intervalGfpt1dayNumber,
       "intervalGfpt1dayDiscardedSuperblocks": intervalGfpt1dayDiscardedSuperblocks,
       "intervalGfpt1dayValidFlag": intervalGfpt1dayValidFlag,
       "intervalGfpt1dayTimeStamp": intervalGfpt1dayTimeStamp,
       "currentSubAggregate15minTable": currentSubAggregate15minTable,
       "currentSubAggregate15minEntry": currentSubAggregate15minEntry,
       "currentSubAggregate15minES": currentSubAggregate15minES,
       "currentSubAggregate15minSES": currentSubAggregate15minSES,
       "currentSubAggregate15minElapsedTime": currentSubAggregate15minElapsedTime,
       "currentSubAggregate15minCrc": currentSubAggregate15minCrc,
       "currentSubAggregate1dayTable": currentSubAggregate1dayTable,
       "currentSubAggregate1dayEntry": currentSubAggregate1dayEntry,
       "currentSubAggregate1dayES": currentSubAggregate1dayES,
       "currentSubAggregate1daySES": currentSubAggregate1daySES,
       "currentSubAggregate1dayElapsedTime": currentSubAggregate1dayElapsedTime,
       "currentSubAggregate1dayCrc": currentSubAggregate1dayCrc,
       "intervalSubAggregate15minTable": intervalSubAggregate15minTable,
       "intervalSubAggregate15minEntry": intervalSubAggregate15minEntry,
       "intervalSubAggregate15minNumber": intervalSubAggregate15minNumber,
       "intervalSubAggregate15minES": intervalSubAggregate15minES,
       "intervalSubAggregate15minSES": intervalSubAggregate15minSES,
       "intervalSubAggregate15minValidFlag": intervalSubAggregate15minValidFlag,
       "intervalSubAggregate15minTimeStamp": intervalSubAggregate15minTimeStamp,
       "intervalSubAggregate15minCrc": intervalSubAggregate15minCrc,
       "intervalSubAggregate1dayTable": intervalSubAggregate1dayTable,
       "intervalSubAggregate1dayEntry": intervalSubAggregate1dayEntry,
       "intervalSubAggregate1dayNumber": intervalSubAggregate1dayNumber,
       "intervalSubAggregate1dayES": intervalSubAggregate1dayES,
       "intervalSubAggregate1daySES": intervalSubAggregate1daySES,
       "intervalSubAggregate1dayValidFlag": intervalSubAggregate1dayValidFlag,
       "intervalSubAggregate1dayTimeStamp": intervalSubAggregate1dayTimeStamp,
       "intervalSubAggregate1dayCrc": intervalSubAggregate1dayCrc,
       "currentOduTcmC15minTable": currentOduTcmC15minTable,
       "currentOduTcmC15minEntry": currentOduTcmC15minEntry,
       "currentOduTcmC15minES": currentOduTcmC15minES,
       "currentOduTcmC15minSES": currentOduTcmC15minSES,
       "currentOduTcmC15minBbe": currentOduTcmC15minBbe,
       "currentOduTcmC15minUAS": currentOduTcmC15minUAS,
       "currentOduTcmC15minElapsedTime": currentOduTcmC15minElapsedTime,
       "currentOduTcmC1dayTable": currentOduTcmC1dayTable,
       "currentOduTcmC1dayEntry": currentOduTcmC1dayEntry,
       "currentOduTcmC1dayES": currentOduTcmC1dayES,
       "currentOduTcmC1daySES": currentOduTcmC1daySES,
       "currentOduTcmC1dayBbe": currentOduTcmC1dayBbe,
       "currentOduTcmC1dayUAS": currentOduTcmC1dayUAS,
       "currentOduTcmC1dayElapsedTime": currentOduTcmC1dayElapsedTime,
       "intervalOduTcmC15minTable": intervalOduTcmC15minTable,
       "intervalOduTcmC15minEntry": intervalOduTcmC15minEntry,
       "intervalOduTcmC15minNumber": intervalOduTcmC15minNumber,
       "intervalOduTcmC15minES": intervalOduTcmC15minES,
       "intervalOduTcmC15minSES": intervalOduTcmC15minSES,
       "intervalOduTcmC15minBbe": intervalOduTcmC15minBbe,
       "intervalOduTcmC15minUAS": intervalOduTcmC15minUAS,
       "intervalOduTcmC15minValidFlag": intervalOduTcmC15minValidFlag,
       "intervalOduTcmC15minTimeStamp": intervalOduTcmC15minTimeStamp,
       "intervalOduTcmC1dayTable": intervalOduTcmC1dayTable,
       "intervalOduTcmC1dayEntry": intervalOduTcmC1dayEntry,
       "intervalOduTcmC1dayNumber": intervalOduTcmC1dayNumber,
       "intervalOduTcmC1dayES": intervalOduTcmC1dayES,
       "intervalOduTcmC1daySES": intervalOduTcmC1daySES,
       "intervalOduTcmC1dayBbe": intervalOduTcmC1dayBbe,
       "intervalOduTcmC1dayUAS": intervalOduTcmC1dayUAS,
       "intervalOduTcmC1dayValidFlag": intervalOduTcmC1dayValidFlag,
       "intervalOduTcmC1dayTimeStamp": intervalOduTcmC1dayTimeStamp,
       "currentPhysConvHighSpeed15minTable": currentPhysConvHighSpeed15minTable,
       "currentPhysConvHighSpeed15minEntry": currentPhysConvHighSpeed15minEntry,
       "currentPhysConvHighSpeed15minES": currentPhysConvHighSpeed15minES,
       "currentPhysConvHighSpeed15minCV": currentPhysConvHighSpeed15minCV,
       "currentPhysConvHighSpeed15minSE": currentPhysConvHighSpeed15minSE,
       "currentPhysConvHighSpeed15minElapsedTime": currentPhysConvHighSpeed15minElapsedTime,
       "currentPhysConvHighSpeed1dayTable": currentPhysConvHighSpeed1dayTable,
       "currentPhysConvHighSpeed1dayEntry": currentPhysConvHighSpeed1dayEntry,
       "currentPhysConvHighSpeed1dayES": currentPhysConvHighSpeed1dayES,
       "currentPhysConvHighSpeed1dayCV": currentPhysConvHighSpeed1dayCV,
       "currentPhysConvHighSpeed1daySE": currentPhysConvHighSpeed1daySE,
       "currentPhysConvHighSpeed1dayElapsedTime": currentPhysConvHighSpeed1dayElapsedTime,
       "intervalPhysConvHighSpeed15minTable": intervalPhysConvHighSpeed15minTable,
       "intervalPhysConvHighSpeed15minEntry": intervalPhysConvHighSpeed15minEntry,
       "intervalPhysConvHighSpeed15minNumber": intervalPhysConvHighSpeed15minNumber,
       "intervalPhysConvHighSpeed15minES": intervalPhysConvHighSpeed15minES,
       "intervalPhysConvHighSpeed15minCV": intervalPhysConvHighSpeed15minCV,
       "intervalPhysConvHighSpeed15minSE": intervalPhysConvHighSpeed15minSE,
       "intervalPhysConvHighSpeed15minValidFlag": intervalPhysConvHighSpeed15minValidFlag,
       "intervalPhysConvHighSpeed15minTimeStamp": intervalPhysConvHighSpeed15minTimeStamp,
       "intervalPhysConvHighSpeed1dayTable": intervalPhysConvHighSpeed1dayTable,
       "intervalPhysConvHighSpeed1dayEntry": intervalPhysConvHighSpeed1dayEntry,
       "intervalPhysConvHighSpeed1dayNumber": intervalPhysConvHighSpeed1dayNumber,
       "intervalPhysConvHighSpeed1dayES": intervalPhysConvHighSpeed1dayES,
       "intervalPhysConvHighSpeed1dayCV": intervalPhysConvHighSpeed1dayCV,
       "intervalPhysConvHighSpeed1daySE": intervalPhysConvHighSpeed1daySE,
       "intervalPhysConvHighSpeed1dayValidFlag": intervalPhysConvHighSpeed1dayValidFlag,
       "intervalPhysConvHighSpeed1dayTimeStamp": intervalPhysConvHighSpeed1dayTimeStamp,
       "currentEthRxHighSpeed15minTable": currentEthRxHighSpeed15minTable,
       "currentEthRxHighSpeed15minEntry": currentEthRxHighSpeed15minEntry,
       "currentEthRxHighSpeed15minGoodFrames": currentEthRxHighSpeed15minGoodFrames,
       "currentEthRxHighSpeed15minPauseFrames": currentEthRxHighSpeed15minPauseFrames,
       "currentEthRxHighSpeed15minCrcFrames": currentEthRxHighSpeed15minCrcFrames,
       "currentEthRxHighSpeed15minBytes": currentEthRxHighSpeed15minBytes,
       "currentEthRxHighSpeed15minElapsedTime": currentEthRxHighSpeed15minElapsedTime,
       "currentEthRxHighSpeed1dayTable": currentEthRxHighSpeed1dayTable,
       "currentEthRxHighSpeed1dayEntry": currentEthRxHighSpeed1dayEntry,
       "currentEthRxHighSpeed1dayGoodFrames": currentEthRxHighSpeed1dayGoodFrames,
       "currentEthRxHighSpeed1dayPauseFrames": currentEthRxHighSpeed1dayPauseFrames,
       "currentEthRxHighSpeed1dayCrcFrames": currentEthRxHighSpeed1dayCrcFrames,
       "currentEthRxHighSpeed1dayBytes": currentEthRxHighSpeed1dayBytes,
       "currentEthRxHighSpeed1dayElapsedTime": currentEthRxHighSpeed1dayElapsedTime,
       "intervalEthRxHighSpeed15minTable": intervalEthRxHighSpeed15minTable,
       "intervalEthRxHighSpeed15minEntry": intervalEthRxHighSpeed15minEntry,
       "intervalEthRxHighSpeed15minNumber": intervalEthRxHighSpeed15minNumber,
       "intervalEthRxHighSpeed15minGoodFrames": intervalEthRxHighSpeed15minGoodFrames,
       "intervalEthRxHighSpeed15minPauseFrames": intervalEthRxHighSpeed15minPauseFrames,
       "intervalEthRxHighSpeed15minCrcFrames": intervalEthRxHighSpeed15minCrcFrames,
       "intervalEthRxHighSpeed15minBytes": intervalEthRxHighSpeed15minBytes,
       "intervalEthRxHighSpeed15minValidFlag": intervalEthRxHighSpeed15minValidFlag,
       "intervalEthRxHighSpeed15minTimeStamp": intervalEthRxHighSpeed15minTimeStamp,
       "intervalEthRxHighSpeed1dayTable": intervalEthRxHighSpeed1dayTable,
       "intervalEthRxHighSpeed1dayEntry": intervalEthRxHighSpeed1dayEntry,
       "intervalEthRxHighSpeed1dayNumber": intervalEthRxHighSpeed1dayNumber,
       "intervalEthRxHighSpeed1dayGoodFrames": intervalEthRxHighSpeed1dayGoodFrames,
       "intervalEthRxHighSpeed1dayPauseFrames": intervalEthRxHighSpeed1dayPauseFrames,
       "intervalEthRxHighSpeed1dayCrcFrames": intervalEthRxHighSpeed1dayCrcFrames,
       "intervalEthRxHighSpeed1dayBytes": intervalEthRxHighSpeed1dayBytes,
       "intervalEthRxHighSpeed1dayValidFlag": intervalEthRxHighSpeed1dayValidFlag,
       "intervalEthRxHighSpeed1dayTimeStamp": intervalEthRxHighSpeed1dayTimeStamp,
       "currentGfpfr15minTable": currentGfpfr15minTable,
       "currentGfpfr15minEntry": currentGfpfr15minEntry,
       "currentGfpfr15minGoodFrames": currentGfpfr15minGoodFrames,
       "currentGfpfr15minCHecDiscardedFrames": currentGfpfr15minCHecDiscardedFrames,
       "currentGfpfr15minTHecDiscardedFrames": currentGfpfr15minTHecDiscardedFrames,
       "currentGfpfr15minElapsedTime": currentGfpfr15minElapsedTime,
       "currentGfpfr1dayTable": currentGfpfr1dayTable,
       "currentGfpfr1dayEntry": currentGfpfr1dayEntry,
       "currentGfpfr1dayGoodFrames": currentGfpfr1dayGoodFrames,
       "currentGfpfr1dayCHecDiscardedFrames": currentGfpfr1dayCHecDiscardedFrames,
       "currentGfpfr1dayTHecDiscardedFrames": currentGfpfr1dayTHecDiscardedFrames,
       "currentGfpfr1dayElapsedTime": currentGfpfr1dayElapsedTime,
       "intervalGfpfr15minTable": intervalGfpfr15minTable,
       "intervalGfpfr15minEntry": intervalGfpfr15minEntry,
       "intervalGfpfr15minNumber": intervalGfpfr15minNumber,
       "intervalGfpfr15minGoodFrames": intervalGfpfr15minGoodFrames,
       "intervalGfpfr15minCHecDiscardedFrames": intervalGfpfr15minCHecDiscardedFrames,
       "intervalGfpfr15minTHecDiscardedFrames": intervalGfpfr15minTHecDiscardedFrames,
       "intervalGfpfr15minValidFlag": intervalGfpfr15minValidFlag,
       "intervalGfpfr15minTimeStamp": intervalGfpfr15minTimeStamp,
       "intervalGfpfr1dayTable": intervalGfpfr1dayTable,
       "intervalGfpfr1dayEntry": intervalGfpfr1dayEntry,
       "intervalGfpfr1dayNumber": intervalGfpfr1dayNumber,
       "intervalGfpfr1dayGoodFrames": intervalGfpfr1dayGoodFrames,
       "intervalGfpfr1dayCHecDiscardedFrames": intervalGfpfr1dayCHecDiscardedFrames,
       "intervalGfpfr1dayTHecDiscardedFrames": intervalGfpfr1dayTHecDiscardedFrames,
       "intervalGfpfr1dayValidFlag": intervalGfpfr1dayValidFlag,
       "intervalGfpfr1dayTimeStamp": intervalGfpfr1dayTimeStamp,
       "currentGfpSublayer15minTable": currentGfpSublayer15minTable,
       "currentGfpSublayer15minEntry": currentGfpSublayer15minEntry,
       "currentGfpSublayer15minCoreHecCorrectedFrames": currentGfpSublayer15minCoreHecCorrectedFrames,
       "currentGfpSublayer15minTypeHecCorrectedFrames": currentGfpSublayer15minTypeHecCorrectedFrames,
       "currentGfpSublayer15minTypeHecDiscardedFrames": currentGfpSublayer15minTypeHecDiscardedFrames,
       "currentGfpSublayer15minElapsedTime": currentGfpSublayer15minElapsedTime,
       "currentGfpSublayer1dayTable": currentGfpSublayer1dayTable,
       "currentGfpSublayer1dayEntry": currentGfpSublayer1dayEntry,
       "currentGfpSublayer1dayCoreHecCorrectedFrames": currentGfpSublayer1dayCoreHecCorrectedFrames,
       "currentGfpSublayer1dayTypeHecCorrectedFrames": currentGfpSublayer1dayTypeHecCorrectedFrames,
       "currentGfpSublayer1dayTypeHecDiscardedFrames": currentGfpSublayer1dayTypeHecDiscardedFrames,
       "currentGfpSublayer1dayElapsedTime": currentGfpSublayer1dayElapsedTime,
       "intervalGfpSublayer15minTable": intervalGfpSublayer15minTable,
       "intervalGfpSublayer15minEntry": intervalGfpSublayer15minEntry,
       "intervalGfpSublayer15minNumber": intervalGfpSublayer15minNumber,
       "intervalGfpSublayer15minCoreHecCorrectedFrames": intervalGfpSublayer15minCoreHecCorrectedFrames,
       "intervalGfpSublayer15minTypeHecCorrectedFrames": intervalGfpSublayer15minTypeHecCorrectedFrames,
       "intervalGfpSublayer15minTypeHecDiscardedFrames": intervalGfpSublayer15minTypeHecDiscardedFrames,
       "intervalGfpSublayer15minValidFlag": intervalGfpSublayer15minValidFlag,
       "intervalGfpSublayer15minTimeStamp": intervalGfpSublayer15minTimeStamp,
       "intervalGfpSublayer1dayTable": intervalGfpSublayer1dayTable,
       "intervalGfpSublayer1dayEntry": intervalGfpSublayer1dayEntry,
       "intervalGfpSublayer1dayNumber": intervalGfpSublayer1dayNumber,
       "intervalGfpSublayer1dayCoreHecCorrectedFrames": intervalGfpSublayer1dayCoreHecCorrectedFrames,
       "intervalGfpSublayer1dayTypeHecCorrectedFrames": intervalGfpSublayer1dayTypeHecCorrectedFrames,
       "intervalGfpSublayer1dayTypeHecDiscardedFrames": intervalGfpSublayer1dayTypeHecDiscardedFrames,
       "intervalGfpSublayer1dayValidFlag": intervalGfpSublayer1dayValidFlag,
       "intervalGfpSublayer1dayTimeStamp": intervalGfpSublayer1dayTimeStamp,
       "currentGfpfrSublayer15minTable": currentGfpfrSublayer15minTable,
       "currentGfpfrSublayer15minEntry": currentGfpfrSublayer15minEntry,
       "currentGfpfrSublayer15minGoodFrames": currentGfpfrSublayer15minGoodFrames,
       "currentGfpfrSublayer15minCHecDiscardedFrames": currentGfpfrSublayer15minCHecDiscardedFrames,
       "currentGfpfrSublayer15minTHecDiscardedFrames": currentGfpfrSublayer15minTHecDiscardedFrames,
       "currentGfpfrSublayer15minElapsedTime": currentGfpfrSublayer15minElapsedTime,
       "currentGfpfrSublayer1dayTable": currentGfpfrSublayer1dayTable,
       "currentGfpfrSublayer1dayEntry": currentGfpfrSublayer1dayEntry,
       "currentGfpfrSublayer1dayGoodFrames": currentGfpfrSublayer1dayGoodFrames,
       "currentGfpfrSublayer1dayCHecDiscardedFrames": currentGfpfrSublayer1dayCHecDiscardedFrames,
       "currentGfpfrSublayer1dayTHecDiscardedFrames": currentGfpfrSublayer1dayTHecDiscardedFrames,
       "currentGfpfrSublayer1dayElapsedTime": currentGfpfrSublayer1dayElapsedTime,
       "intervalGfpfrSublayer15minTable": intervalGfpfrSublayer15minTable,
       "intervalGfpfrSublayer15minEntry": intervalGfpfrSublayer15minEntry,
       "intervalGfpfrSublayer15minNumber": intervalGfpfrSublayer15minNumber,
       "intervalGfpfrSublayer15minGoodFrames": intervalGfpfrSublayer15minGoodFrames,
       "intervalGfpfrSublayer15minCHecDiscardedFrames": intervalGfpfrSublayer15minCHecDiscardedFrames,
       "intervalGfpfrSublayer15minTHecDiscardedFrames": intervalGfpfrSublayer15minTHecDiscardedFrames,
       "intervalGfpfrSublayer15minValidFlag": intervalGfpfrSublayer15minValidFlag,
       "intervalGfpfrSublayer15minTimeStamp": intervalGfpfrSublayer15minTimeStamp,
       "intervalGfpfrSublayer1dayTable": intervalGfpfrSublayer1dayTable,
       "intervalGfpfrSublayer1dayEntry": intervalGfpfrSublayer1dayEntry,
       "intervalGfpfrSublayer1dayNumber": intervalGfpfrSublayer1dayNumber,
       "intervalGfpfrSublayer1dayGoodFrames": intervalGfpfrSublayer1dayGoodFrames,
       "intervalGfpfrSublayer1dayCHecDiscardedFrames": intervalGfpfrSublayer1dayCHecDiscardedFrames,
       "intervalGfpfrSublayer1dayTHecDiscardedFrames": intervalGfpfrSublayer1dayTHecDiscardedFrames,
       "intervalGfpfrSublayer1dayValidFlag": intervalGfpfrSublayer1dayValidFlag,
       "intervalGfpfrSublayer1dayTimeStamp": intervalGfpfrSublayer1dayTimeStamp,
       "thresholdGfpSublayerTable": thresholdGfpSublayerTable,
       "thresholdGfpSublayerEntry": thresholdGfpSublayerEntry,
       "thresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min": thresholdGfpSublayerCoreHecCorrectedFramesHighThres15Min,
       "thresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day": thresholdGfpSublayerCoreHecCorrectedFramesHighThres1Day,
       "thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min": thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Min,
       "thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day": thresholdGfpSublayerTypeHecCorrectedFramesHighThres15Day,
       "thresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min": thresholdGfpSublayerTypeHecDiscardedFramesHighThres15Min,
       "thresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day": thresholdGfpSublayerTypeHecDiscardedFramesHighThres1Day,
       "thresholdPhysConvCombinedTable": thresholdPhysConvCombinedTable,
       "thresholdPhysConvCombinedEntry": thresholdPhysConvCombinedEntry,
       "thresholdPhysConvCombinedESHighThres15min": thresholdPhysConvCombinedESHighThres15min,
       "thresholdPhysConvCombinedESHighThres1day": thresholdPhysConvCombinedESHighThres1day,
       "thresholdPhysConvCombinedCVDEHighThres15min": thresholdPhysConvCombinedCVDEHighThres15min,
       "thresholdPhysConvCombinedCVDEHighThres1day": thresholdPhysConvCombinedCVDEHighThres1day,
       "currentPhysConvCombined15minTable": currentPhysConvCombined15minTable,
       "currentPhysConvCombined15minEntry": currentPhysConvCombined15minEntry,
       "currentPhysConvCombined15minES": currentPhysConvCombined15minES,
       "currentPhysConvCombined15minCVDE": currentPhysConvCombined15minCVDE,
       "currentPhysConvCombined15minElapsedTime": currentPhysConvCombined15minElapsedTime,
       "currentPhysConvCombined1dayTable": currentPhysConvCombined1dayTable,
       "currentPhysConvCombined1dayEntry": currentPhysConvCombined1dayEntry,
       "currentPhysConvCombined1dayES": currentPhysConvCombined1dayES,
       "currentPhysConvCombined1dayCVDE": currentPhysConvCombined1dayCVDE,
       "currentPhysConvCombined1dayElapsedTime": currentPhysConvCombined1dayElapsedTime,
       "intervalPhysConvCombined15minTable": intervalPhysConvCombined15minTable,
       "intervalPhysConvCombined15minEntry": intervalPhysConvCombined15minEntry,
       "intervalPhysConvCombined15minNumber": intervalPhysConvCombined15minNumber,
       "intervalPhysConvCombined15minES": intervalPhysConvCombined15minES,
       "intervalPhysConvCombined15minCVDE": intervalPhysConvCombined15minCVDE,
       "intervalPhysConvCombined15minValidFlag": intervalPhysConvCombined15minValidFlag,
       "intervalPhysConvCombined15minTimeStamp": intervalPhysConvCombined15minTimeStamp,
       "intervalPhysConvCombined1dayTable": intervalPhysConvCombined1dayTable,
       "intervalPhysConvCombined1dayEntry": intervalPhysConvCombined1dayEntry,
       "intervalPhysConvCombined1dayNumber": intervalPhysConvCombined1dayNumber,
       "intervalPhysConvCombined1dayES": intervalPhysConvCombined1dayES,
       "intervalPhysConvCombined1dayCVDE": intervalPhysConvCombined1dayCVDE,
       "intervalPhysConvCombined1dayValidFlag": intervalPhysConvCombined1dayValidFlag,
       "intervalPhysConvCombined1dayTimeStamp": intervalPhysConvCombined1dayTimeStamp,
       "thresholdOtuFecSublayerTable": thresholdOtuFecSublayerTable,
       "thresholdOtuFecSublayerEntry": thresholdOtuFecSublayerEntry,
       "thresholdOtuFecSublayerESHighThres15min": thresholdOtuFecSublayerESHighThres15min,
       "thresholdOtuFecSublayerESHighThres1day": thresholdOtuFecSublayerESHighThres1day,
       "thresholdOtuFecSublayerSESHighThres15min": thresholdOtuFecSublayerSESHighThres15min,
       "thresholdOtuFecSublayerSESHighThres1day": thresholdOtuFecSublayerSESHighThres1day,
       "thresholdOtuFecSublayerCEHighThres15min": thresholdOtuFecSublayerCEHighThres15min,
       "thresholdOtuFecSublayerCEHighThres1day": thresholdOtuFecSublayerCEHighThres1day,
       "thresholdOtuFecSublayerUBEHighThres15min": thresholdOtuFecSublayerUBEHighThres15min,
       "thresholdOtuFecSublayerUBEHighThres1day": thresholdOtuFecSublayerUBEHighThres1day,
       "thresholdOtuFecSublayerBERCEHighThres15min": thresholdOtuFecSublayerBERCEHighThres15min,
       "thresholdOtuFecSublayerBERCEHighThres1day": thresholdOtuFecSublayerBERCEHighThres1day,
       "thresholdSonetLineMsTable": thresholdSonetLineMsTable,
       "thresholdSonetLineMsEntry": thresholdSonetLineMsEntry,
       "thresholdSonetLineMsESHighThres15min": thresholdSonetLineMsESHighThres15min,
       "thresholdSonetLineMsESHighThres1day": thresholdSonetLineMsESHighThres1day,
       "thresholdSonetLineMsSESHighThres15min": thresholdSonetLineMsSESHighThres15min,
       "thresholdSonetLineMsSESHighThres1day": thresholdSonetLineMsSESHighThres1day,
       "thresholdSonetLineMsUASHighThres15min": thresholdSonetLineMsUASHighThres15min,
       "thresholdSonetLineMsUASSHighThres1day": thresholdSonetLineMsUASSHighThres1day,
       "thresholdSonetLineMsCVHighThres15min": thresholdSonetLineMsCVHighThres15min,
       "thresholdSonetLineMsCVSHighThres1day": thresholdSonetLineMsCVSHighThres1day,
       "intervalPhysPerfEstimatedSignalGain15minTable": intervalPhysPerfEstimatedSignalGain15minTable,
       "intervalPhysPerfEstimatedSignalGain15minEntry": intervalPhysPerfEstimatedSignalGain15minEntry,
       "intervalPhysPerfEstimatedSignalGain15minNumber": intervalPhysPerfEstimatedSignalGain15minNumber,
       "intervalPhysPerfEstimatedSignalGain15minLow": intervalPhysPerfEstimatedSignalGain15minLow,
       "intervalPhysPerfEstimatedSignalGain15minMean": intervalPhysPerfEstimatedSignalGain15minMean,
       "intervalPhysPerfEstimatedSignalGain15minHigh": intervalPhysPerfEstimatedSignalGain15minHigh,
       "intervalPhysPerfEstimatedSignalGain15minValidFlag": intervalPhysPerfEstimatedSignalGain15minValidFlag,
       "intervalPhysPerfEstimatedSignalGain15minTimeStamp": intervalPhysPerfEstimatedSignalGain15minTimeStamp,
       "intervalPhysPerfEstimatedSignalGain1dayTable": intervalPhysPerfEstimatedSignalGain1dayTable,
       "intervalPhysPerfEstimatedSignalGain1dayEntry": intervalPhysPerfEstimatedSignalGain1dayEntry,
       "intervalPhysPerfEstimatedSignalGain1dayNumber": intervalPhysPerfEstimatedSignalGain1dayNumber,
       "intervalPhysPerfEstimatedSignalGain1dayLow": intervalPhysPerfEstimatedSignalGain1dayLow,
       "intervalPhysPerfEstimatedSignalGain1dayMean": intervalPhysPerfEstimatedSignalGain1dayMean,
       "intervalPhysPerfEstimatedSignalGain1dayHigh": intervalPhysPerfEstimatedSignalGain1dayHigh,
       "intervalPhysPerfEstimatedSignalGain1dayValidFlag": intervalPhysPerfEstimatedSignalGain1dayValidFlag,
       "intervalPhysPerfEstimatedSignalGain1dayTimeStamp": intervalPhysPerfEstimatedSignalGain1dayTimeStamp,
       "intervalPhysPerfEstimatedSignalGain1weekTable": intervalPhysPerfEstimatedSignalGain1weekTable,
       "intervalPhysPerfEstimatedSignalGain1weekEntry": intervalPhysPerfEstimatedSignalGain1weekEntry,
       "intervalPhysPerfEstimatedSignalGain1weekNumber": intervalPhysPerfEstimatedSignalGain1weekNumber,
       "intervalPhysPerfEstimatedSignalGain1weekLow": intervalPhysPerfEstimatedSignalGain1weekLow,
       "intervalPhysPerfEstimatedSignalGain1weekMean": intervalPhysPerfEstimatedSignalGain1weekMean,
       "intervalPhysPerfEstimatedSignalGain1weekHigh": intervalPhysPerfEstimatedSignalGain1weekHigh,
       "intervalPhysPerfEstimatedSignalGain1weekValidFlag": intervalPhysPerfEstimatedSignalGain1weekValidFlag,
       "intervalPhysPerfEstimatedSignalGain1weekTimeStamp": intervalPhysPerfEstimatedSignalGain1weekTimeStamp,
       "intervalPhysPerfCurrent15minTable": intervalPhysPerfCurrent15minTable,
       "intervalPhysPerfCurrent15minEntry": intervalPhysPerfCurrent15minEntry,
       "intervalPhysPerfCurrent15minNumber": intervalPhysPerfCurrent15minNumber,
       "intervalPhysPerfCurrent15minLow": intervalPhysPerfCurrent15minLow,
       "intervalPhysPerfCurrent15minMean": intervalPhysPerfCurrent15minMean,
       "intervalPhysPerfCurrent15minHigh": intervalPhysPerfCurrent15minHigh,
       "intervalPhysPerfCurrent15minValidFlag": intervalPhysPerfCurrent15minValidFlag,
       "intervalPhysPerfCurrent15minTimeStamp": intervalPhysPerfCurrent15minTimeStamp,
       "intervalPhysPerfCurrent1dayTable": intervalPhysPerfCurrent1dayTable,
       "intervalPhysPerfCurrent1dayEntry": intervalPhysPerfCurrent1dayEntry,
       "intervalPhysPerfCurrent1dayNumber": intervalPhysPerfCurrent1dayNumber,
       "intervalPhysPerfCurrent1dayLow": intervalPhysPerfCurrent1dayLow,
       "intervalPhysPerfCurrent1dayMean": intervalPhysPerfCurrent1dayMean,
       "intervalPhysPerfCurrent1dayHigh": intervalPhysPerfCurrent1dayHigh,
       "intervalPhysPerfCurrent1dayValidFlag": intervalPhysPerfCurrent1dayValidFlag,
       "intervalPhysPerfCurrent1dayTimeStamp": intervalPhysPerfCurrent1dayTimeStamp,
       "intervalPhysPerfCurrent1weekTable": intervalPhysPerfCurrent1weekTable,
       "intervalPhysPerfCurrent1weekEntry": intervalPhysPerfCurrent1weekEntry,
       "intervalPhysPerfCurrent1weekNumber": intervalPhysPerfCurrent1weekNumber,
       "intervalPhysPerfCurrent1weekLow": intervalPhysPerfCurrent1weekLow,
       "intervalPhysPerfCurrent1weekMean": intervalPhysPerfCurrent1weekMean,
       "intervalPhysPerfCurrent1weekHigh": intervalPhysPerfCurrent1weekHigh,
       "intervalPhysPerfCurrent1weekValidFlag": intervalPhysPerfCurrent1weekValidFlag,
       "intervalPhysPerfCurrent1weekTimeStamp": intervalPhysPerfCurrent1weekTimeStamp,
       "intervalPhysPerfCurrentOscGain15minTable": intervalPhysPerfCurrentOscGain15minTable,
       "intervalPhysPerfCurrentOscGain15minEntry": intervalPhysPerfCurrentOscGain15minEntry,
       "intervalPhysPerfCurrentOscGain15minNumber": intervalPhysPerfCurrentOscGain15minNumber,
       "intervalPhysPerfCurrentOscGain15minLow": intervalPhysPerfCurrentOscGain15minLow,
       "intervalPhysPerfCurrentOscGain15minMean": intervalPhysPerfCurrentOscGain15minMean,
       "intervalPhysPerfCurrentOscGain15minHigh": intervalPhysPerfCurrentOscGain15minHigh,
       "intervalPhysPerfCurrentOscGain15minValidFlag": intervalPhysPerfCurrentOscGain15minValidFlag,
       "intervalPhysPerfCurrentOscGain15minTimeStamp": intervalPhysPerfCurrentOscGain15minTimeStamp,
       "intervalPhysPerfCurrentOscGain1dayTable": intervalPhysPerfCurrentOscGain1dayTable,
       "intervalPhysPerfCurrentOscGain1dayEntry": intervalPhysPerfCurrentOscGain1dayEntry,
       "intervalPhysPerfCurrentOscGain1dayNumber": intervalPhysPerfCurrentOscGain1dayNumber,
       "intervalPhysPerfCurrentOscGain1dayLow": intervalPhysPerfCurrentOscGain1dayLow,
       "intervalPhysPerfCurrentOscGain1dayMean": intervalPhysPerfCurrentOscGain1dayMean,
       "intervalPhysPerfCurrentOscGain1dayHigh": intervalPhysPerfCurrentOscGain1dayHigh,
       "intervalPhysPerfCurrentOscGain1dayValidFlag": intervalPhysPerfCurrentOscGain1dayValidFlag,
       "intervalPhysPerfCurrentOscGain1dayTimeStamp": intervalPhysPerfCurrentOscGain1dayTimeStamp,
       "intervalPhysPerfCurrentOscGain1weekTable": intervalPhysPerfCurrentOscGain1weekTable,
       "intervalPhysPerfCurrentOscGain1weekEntry": intervalPhysPerfCurrentOscGain1weekEntry,
       "intervalPhysPerfCurrentOscGain1weekNumber": intervalPhysPerfCurrentOscGain1weekNumber,
       "intervalPhysPerfCurrentOscGain1weekLow": intervalPhysPerfCurrentOscGain1weekLow,
       "intervalPhysPerfCurrentOscGain1weekMean": intervalPhysPerfCurrentOscGain1weekMean,
       "intervalPhysPerfCurrentOscGain1weekHigh": intervalPhysPerfCurrentOscGain1weekHigh,
       "intervalPhysPerfCurrentOscGain1weekValidFlag": intervalPhysPerfCurrentOscGain1weekValidFlag,
       "intervalPhysPerfCurrentOscGain1weekTimeStamp": intervalPhysPerfCurrentOscGain1weekTimeStamp,
       "intervalPhysPerfBackreflectionPwrRcv15minTable": intervalPhysPerfBackreflectionPwrRcv15minTable,
       "intervalPhysPerfBackreflectionPwrRcv15minEntry": intervalPhysPerfBackreflectionPwrRcv15minEntry,
       "intervalPhysPerfBackreflectionPwrRcv15minNumber": intervalPhysPerfBackreflectionPwrRcv15minNumber,
       "intervalPhysPerfBackreflectionPwrRcv15minLow": intervalPhysPerfBackreflectionPwrRcv15minLow,
       "intervalPhysPerfBackreflectionPwrRcv15minMean": intervalPhysPerfBackreflectionPwrRcv15minMean,
       "intervalPhysPerfBackreflectionPwrRcv15minHigh": intervalPhysPerfBackreflectionPwrRcv15minHigh,
       "intervalPhysPerfBackreflectionPwrRcv15minValidFlag": intervalPhysPerfBackreflectionPwrRcv15minValidFlag,
       "intervalPhysPerfBackreflectionPwrRcv15minTimeStamp": intervalPhysPerfBackreflectionPwrRcv15minTimeStamp,
       "intervalPhysPerfBackreflectionPwrRcv1dayTable": intervalPhysPerfBackreflectionPwrRcv1dayTable,
       "intervalPhysPerfBackreflectionPwrRcv1dayEntry": intervalPhysPerfBackreflectionPwrRcv1dayEntry,
       "intervalPhysPerfBackreflectionPwrRcv1dayNumber": intervalPhysPerfBackreflectionPwrRcv1dayNumber,
       "intervalPhysPerfBackreflectionPwrRcv1dayLow": intervalPhysPerfBackreflectionPwrRcv1dayLow,
       "intervalPhysPerfBackreflectionPwrRcv1dayMean": intervalPhysPerfBackreflectionPwrRcv1dayMean,
       "intervalPhysPerfBackreflectionPwrRcv1dayHigh": intervalPhysPerfBackreflectionPwrRcv1dayHigh,
       "intervalPhysPerfBackreflectionPwrRcv1dayValidFlag": intervalPhysPerfBackreflectionPwrRcv1dayValidFlag,
       "intervalPhysPerfBackreflectionPwrRcv1dayTimeStamp": intervalPhysPerfBackreflectionPwrRcv1dayTimeStamp,
       "intervalPhysPerfBackreflectionPwrRcv1weekTable": intervalPhysPerfBackreflectionPwrRcv1weekTable,
       "intervalPhysPerfBackreflectionPwrRcv1weekEntry": intervalPhysPerfBackreflectionPwrRcv1weekEntry,
       "intervalPhysPerfBackreflectionPwrRcv1weekNumber": intervalPhysPerfBackreflectionPwrRcv1weekNumber,
       "intervalPhysPerfBackreflectionPwrRcv1weekLow": intervalPhysPerfBackreflectionPwrRcv1weekLow,
       "intervalPhysPerfBackreflectionPwrRcv1weekMean": intervalPhysPerfBackreflectionPwrRcv1weekMean,
       "intervalPhysPerfBackreflectionPwrRcv1weekHigh": intervalPhysPerfBackreflectionPwrRcv1weekHigh,
       "intervalPhysPerfBackreflectionPwrRcv1weekValidFlag": intervalPhysPerfBackreflectionPwrRcv1weekValidFlag,
       "intervalPhysPerfBackreflectionPwrRcv1weekTimeStamp": intervalPhysPerfBackreflectionPwrRcv1weekTimeStamp,
       "intervalPhysPerfOscPwr15minTable": intervalPhysPerfOscPwr15minTable,
       "intervalPhysPerfOscPwr15minEntry": intervalPhysPerfOscPwr15minEntry,
       "intervalPhysPerfOscPwr15minNumber": intervalPhysPerfOscPwr15minNumber,
       "intervalPhysPerfOscPwr15minLow": intervalPhysPerfOscPwr15minLow,
       "intervalPhysPerfOscPwr15minMean": intervalPhysPerfOscPwr15minMean,
       "intervalPhysPerfOscPwr15minHigh": intervalPhysPerfOscPwr15minHigh,
       "intervalPhysPerfOscPwr15minValidFlag": intervalPhysPerfOscPwr15minValidFlag,
       "intervalPhysPerfOscPwr15minTimeStamp": intervalPhysPerfOscPwr15minTimeStamp,
       "intervalPhysPerfOscPwr1dayTable": intervalPhysPerfOscPwr1dayTable,
       "intervalPhysPerfOscPwr1dayEntry": intervalPhysPerfOscPwr1dayEntry,
       "intervalPhysPerfOscPwr1dayNumber": intervalPhysPerfOscPwr1dayNumber,
       "intervalPhysPerfOscPwr1dayLow": intervalPhysPerfOscPwr1dayLow,
       "intervalPhysPerfOscPwr1dayMean": intervalPhysPerfOscPwr1dayMean,
       "intervalPhysPerfOscPwr1dayHigh": intervalPhysPerfOscPwr1dayHigh,
       "intervalPhysPerfOscPwr1dayValidFlag": intervalPhysPerfOscPwr1dayValidFlag,
       "intervalPhysPerfOscPwr1dayTimeStamp": intervalPhysPerfOscPwr1dayTimeStamp,
       "intervalPhysPerfOscPwr1weekTable": intervalPhysPerfOscPwr1weekTable,
       "intervalPhysPerfOscPwr1weekEntry": intervalPhysPerfOscPwr1weekEntry,
       "intervalPhysPerfOscPwr1weekNumber": intervalPhysPerfOscPwr1weekNumber,
       "intervalPhysPerfOscPwr1weekLow": intervalPhysPerfOscPwr1weekLow,
       "intervalPhysPerfOscPwr1weekMean": intervalPhysPerfOscPwr1weekMean,
       "intervalPhysPerfOscPwr1weekHigh": intervalPhysPerfOscPwr1weekHigh,
       "intervalPhysPerfOscPwr1weekValidFlag": intervalPhysPerfOscPwr1weekValidFlag,
       "intervalPhysPerfOscPwr1weekTimeStamp": intervalPhysPerfOscPwr1weekTimeStamp,
       "intervalPhysPerfPumpPwr15minTable": intervalPhysPerfPumpPwr15minTable,
       "intervalPhysPerfPumpPwr15minEntry": intervalPhysPerfPumpPwr15minEntry,
       "intervalPhysPerfPumpPwr15minNumber": intervalPhysPerfPumpPwr15minNumber,
       "intervalPhysPerfPumpPwr15minLow": intervalPhysPerfPumpPwr15minLow,
       "intervalPhysPerfPumpPwr15minMean": intervalPhysPerfPumpPwr15minMean,
       "intervalPhysPerfPumpPwr15minHigh": intervalPhysPerfPumpPwr15minHigh,
       "intervalPhysPerfPumpPwr15minValidFlag": intervalPhysPerfPumpPwr15minValidFlag,
       "intervalPhysPerfPumpPwr15minTimeStamp": intervalPhysPerfPumpPwr15minTimeStamp,
       "intervalPhysPerfPumpPwr1dayTable": intervalPhysPerfPumpPwr1dayTable,
       "intervalPhysPerfPumpPwr1dayEntry": intervalPhysPerfPumpPwr1dayEntry,
       "intervalPhysPerfPumpPwr1dayNumber": intervalPhysPerfPumpPwr1dayNumber,
       "intervalPhysPerfPumpPwr1dayLow": intervalPhysPerfPumpPwr1dayLow,
       "intervalPhysPerfPumpPwr1dayMean": intervalPhysPerfPumpPwr1dayMean,
       "intervalPhysPerfPumpPwr1dayHigh": intervalPhysPerfPumpPwr1dayHigh,
       "intervalPhysPerfPumpPwr1dayValidFlag": intervalPhysPerfPumpPwr1dayValidFlag,
       "intervalPhysPerfPumpPwr1dayTimeStamp": intervalPhysPerfPumpPwr1dayTimeStamp,
       "intervalPhysPerfPumpPwr1weekTable": intervalPhysPerfPumpPwr1weekTable,
       "intervalPhysPerfPumpPwr1weekEntry": intervalPhysPerfPumpPwr1weekEntry,
       "intervalPhysPerfPumpPwr1weekNumber": intervalPhysPerfPumpPwr1weekNumber,
       "intervalPhysPerfPumpPwr1weekLow": intervalPhysPerfPumpPwr1weekLow,
       "intervalPhysPerfPumpPwr1weekMean": intervalPhysPerfPumpPwr1weekMean,
       "intervalPhysPerfPumpPwr1weekHigh": intervalPhysPerfPumpPwr1weekHigh,
       "intervalPhysPerfPumpPwr1weekValidFlag": intervalPhysPerfPumpPwr1weekValidFlag,
       "intervalPhysPerfPumpPwr1weekTimeStamp": intervalPhysPerfPumpPwr1weekTimeStamp,
       "intervalDispersionCompensation15minTable": intervalDispersionCompensation15minTable,
       "intervalDispersionCompensation15minEntry": intervalDispersionCompensation15minEntry,
       "intervalDispersionCompensation15minNumber": intervalDispersionCompensation15minNumber,
       "intervalDispersionCompensation15minLow": intervalDispersionCompensation15minLow,
       "intervalDispersionCompensation15minMean": intervalDispersionCompensation15minMean,
       "intervalDispersionCompensation15minHigh": intervalDispersionCompensation15minHigh,
       "intervalDispersionCompensation15minValidFlag": intervalDispersionCompensation15minValidFlag,
       "intervalDispersionCompensation15minTimeStamp": intervalDispersionCompensation15minTimeStamp,
       "intervalDispersionCompensation1dayTable": intervalDispersionCompensation1dayTable,
       "intervalDispersionCompensation1dayEntry": intervalDispersionCompensation1dayEntry,
       "intervalDispersionCompensation1dayNumber": intervalDispersionCompensation1dayNumber,
       "intervalDispersionCompensation1dayLow": intervalDispersionCompensation1dayLow,
       "intervalDispersionCompensation1dayMean": intervalDispersionCompensation1dayMean,
       "intervalDispersionCompensation1dayHigh": intervalDispersionCompensation1dayHigh,
       "intervalDispersionCompensation1dayValidFlag": intervalDispersionCompensation1dayValidFlag,
       "intervalDispersionCompensation1dayTimeStamp": intervalDispersionCompensation1dayTimeStamp,
       "intervalDispersionCompensation1weekTable": intervalDispersionCompensation1weekTable,
       "intervalDispersionCompensation1weekEntry": intervalDispersionCompensation1weekEntry,
       "intervalDispersionCompensation1weekNumber": intervalDispersionCompensation1weekNumber,
       "intervalDispersionCompensation1weekLow": intervalDispersionCompensation1weekLow,
       "intervalDispersionCompensation1weekMean": intervalDispersionCompensation1weekMean,
       "intervalDispersionCompensation1weekHigh": intervalDispersionCompensation1weekHigh,
       "intervalDispersionCompensation1weekValidFlag": intervalDispersionCompensation1weekValidFlag,
       "intervalDispersionCompensation1weekTimeStamp": intervalDispersionCompensation1weekTimeStamp,
       "intervalLinkAttenuation15minTable": intervalLinkAttenuation15minTable,
       "intervalLinkAttenuation15minEntry": intervalLinkAttenuation15minEntry,
       "intervalLinkAttenuation15minNumber": intervalLinkAttenuation15minNumber,
       "intervalLinkAttenuation15minLow": intervalLinkAttenuation15minLow,
       "intervalLinkAttenuation15minMean": intervalLinkAttenuation15minMean,
       "intervalLinkAttenuation15minHigh": intervalLinkAttenuation15minHigh,
       "intervalLinkAttenuation15minValidFlag": intervalLinkAttenuation15minValidFlag,
       "intervalLinkAttenuation15minTimeStamp": intervalLinkAttenuation15minTimeStamp,
       "intervalLinkAttenuation1dayTable": intervalLinkAttenuation1dayTable,
       "intervalLinkAttenuation1dayEntry": intervalLinkAttenuation1dayEntry,
       "intervalLinkAttenuation1dayNumber": intervalLinkAttenuation1dayNumber,
       "intervalLinkAttenuation1dayLow": intervalLinkAttenuation1dayLow,
       "intervalLinkAttenuation1dayMean": intervalLinkAttenuation1dayMean,
       "intervalLinkAttenuation1dayHigh": intervalLinkAttenuation1dayHigh,
       "intervalLinkAttenuation1dayValidFlag": intervalLinkAttenuation1dayValidFlag,
       "intervalLinkAttenuation1dayTimeStamp": intervalLinkAttenuation1dayTimeStamp,
       "intervalLinkAttenuation1weekTable": intervalLinkAttenuation1weekTable,
       "intervalLinkAttenuation1weekEntry": intervalLinkAttenuation1weekEntry,
       "intervalLinkAttenuation1weekNumber": intervalLinkAttenuation1weekNumber,
       "intervalLinkAttenuation1weekLow": intervalLinkAttenuation1weekLow,
       "intervalLinkAttenuation1weekMean": intervalLinkAttenuation1weekMean,
       "intervalLinkAttenuation1weekHigh": intervalLinkAttenuation1weekHigh,
       "intervalLinkAttenuation1weekValidFlag": intervalLinkAttenuation1weekValidFlag,
       "intervalLinkAttenuation1weekTimeStamp": intervalLinkAttenuation1weekTimeStamp,
       "currentL2EthRx15minTable": currentL2EthRx15minTable,
       "currentL2EthRx15minEntry": currentL2EthRx15minEntry,
       "currentL2EthRx15minFramesRcv": currentL2EthRx15minFramesRcv,
       "currentL2EthRx15minBytesRcv": currentL2EthRx15minBytesRcv,
       "currentL2EthRx15minBroadcastFramesRcv": currentL2EthRx15minBroadcastFramesRcv,
       "currentL2EthRx15minMulticastFramesRcv": currentL2EthRx15minMulticastFramesRcv,
       "currentL2EthRx15minCrcErrorsRcv": currentL2EthRx15minCrcErrorsRcv,
       "currentL2EthRx15minUndersizedFramesRcv": currentL2EthRx15minUndersizedFramesRcv,
       "currentL2EthRx15minOversizedFramesRcv": currentL2EthRx15minOversizedFramesRcv,
       "currentL2EthRx15minPauseFramesRcv": currentL2EthRx15minPauseFramesRcv,
       "currentL2EthRx15minBytesFrames64Rcv": currentL2EthRx15minBytesFrames64Rcv,
       "currentL2EthRx15minBytesFrames65Rcv": currentL2EthRx15minBytesFrames65Rcv,
       "currentL2EthRx15minBytesFrames128Rcv": currentL2EthRx15minBytesFrames128Rcv,
       "currentL2EthRx15minBytesFrames256Rcv": currentL2EthRx15minBytesFrames256Rcv,
       "currentL2EthRx15minBytesFrames512Rcv": currentL2EthRx15minBytesFrames512Rcv,
       "currentL2EthRx15minBytesFrames1024Rcv": currentL2EthRx15minBytesFrames1024Rcv,
       "currentL2EthRx15minBytesFrames1519Rcv": currentL2EthRx15minBytesFrames1519Rcv,
       "currentL2EthRx15minInterPackJunkBytesFramesRcv": currentL2EthRx15minInterPackJunkBytesFramesRcv,
       "currentL2EthRx15minElapsedTime": currentL2EthRx15minElapsedTime,
       "currentL2EthRx1dayTable": currentL2EthRx1dayTable,
       "currentL2EthRx1dayEntry": currentL2EthRx1dayEntry,
       "currentL2EthRx1dayFramesRcv": currentL2EthRx1dayFramesRcv,
       "currentL2EthRx1dayBytesRcv": currentL2EthRx1dayBytesRcv,
       "currentL2EthRx1dayBroadcastFramesRcv": currentL2EthRx1dayBroadcastFramesRcv,
       "currentL2EthRx1dayMulticastFramesRcv": currentL2EthRx1dayMulticastFramesRcv,
       "currentL2EthRx1dayCrcErrorsRcv": currentL2EthRx1dayCrcErrorsRcv,
       "currentL2EthRx1dayUndersizedFramesRcv": currentL2EthRx1dayUndersizedFramesRcv,
       "currentL2EthRx1dayOversizedFramesRcv": currentL2EthRx1dayOversizedFramesRcv,
       "currentL2EthRx1dayPauseFramesRcv": currentL2EthRx1dayPauseFramesRcv,
       "currentL2EthRx1dayBytesFrames64Rcv": currentL2EthRx1dayBytesFrames64Rcv,
       "currentL2EthRx1dayBytesFrames65Rcv": currentL2EthRx1dayBytesFrames65Rcv,
       "currentL2EthRx1dayBytesFrames128Rcv": currentL2EthRx1dayBytesFrames128Rcv,
       "currentL2EthRx1dayBytesFrames256Rcv": currentL2EthRx1dayBytesFrames256Rcv,
       "currentL2EthRx1dayBytesFrames512Rcv": currentL2EthRx1dayBytesFrames512Rcv,
       "currentL2EthRx1dayBytesFrames1024Rcv": currentL2EthRx1dayBytesFrames1024Rcv,
       "currentL2EthRx1dayBytesFrames1519Rcv": currentL2EthRx1dayBytesFrames1519Rcv,
       "currentL2EthRx1dayInterPackJunkBytesFramesRcv": currentL2EthRx1dayInterPackJunkBytesFramesRcv,
       "currentL2EthRx1dayElapsedTime": currentL2EthRx1dayElapsedTime,
       "intervalL2EthRx15minTable": intervalL2EthRx15minTable,
       "intervalL2EthRx15minEntry": intervalL2EthRx15minEntry,
       "intervalL2EthRx15minNumber": intervalL2EthRx15minNumber,
       "intervalL2EthRx15minFramesRcv": intervalL2EthRx15minFramesRcv,
       "intervalL2EthRx15minBytesRcv": intervalL2EthRx15minBytesRcv,
       "intervalL2EthRx15minBroadcastFramesRcv": intervalL2EthRx15minBroadcastFramesRcv,
       "intervalL2EthRx15minMulticastFramesRcv": intervalL2EthRx15minMulticastFramesRcv,
       "intervalL2EthRx15minCrcErrorsRcv": intervalL2EthRx15minCrcErrorsRcv,
       "intervalL2EthRx15minUndersizedFramesRcv": intervalL2EthRx15minUndersizedFramesRcv,
       "intervalL2EthRx15minOversizedFramesRcv": intervalL2EthRx15minOversizedFramesRcv,
       "intervalL2EthRx15minPauseFramesRcv": intervalL2EthRx15minPauseFramesRcv,
       "intervalL2EthRx15minBytesFrames64Rcv": intervalL2EthRx15minBytesFrames64Rcv,
       "intervalL2EthRx15minBytesFrames65Rcv": intervalL2EthRx15minBytesFrames65Rcv,
       "intervalL2EthRx15minBytesFrames128Rcv": intervalL2EthRx15minBytesFrames128Rcv,
       "intervalL2EthRx15minBytesFrames256Rcv": intervalL2EthRx15minBytesFrames256Rcv,
       "intervalL2EthRx15minBytesFrames512Rcv": intervalL2EthRx15minBytesFrames512Rcv,
       "intervalL2EthRx15minBytesFrames1024Rcv": intervalL2EthRx15minBytesFrames1024Rcv,
       "intervalL2EthRx15minBytesFrames1519Rcv": intervalL2EthRx15minBytesFrames1519Rcv,
       "intervalL2EthRx15minInterPackJunkBytesFramesRcv": intervalL2EthRx15minInterPackJunkBytesFramesRcv,
       "intervalL2EthRx15minValidFlag": intervalL2EthRx15minValidFlag,
       "intervalL2EthRx15minTimeStamp": intervalL2EthRx15minTimeStamp,
       "intervalL2EthRx1dayTable": intervalL2EthRx1dayTable,
       "intervalL2EthRx1dayEntry": intervalL2EthRx1dayEntry,
       "intervalL2EthRx1dayNumber": intervalL2EthRx1dayNumber,
       "intervalL2EthRx1dayFramesRcv": intervalL2EthRx1dayFramesRcv,
       "intervalL2EthRx1dayBytesRcv": intervalL2EthRx1dayBytesRcv,
       "intervalL2EthRx1dayBroadcastFramesRcv": intervalL2EthRx1dayBroadcastFramesRcv,
       "intervalL2EthRx1dayMulticastFramesRcv": intervalL2EthRx1dayMulticastFramesRcv,
       "intervalL2EthRx1dayCrcErrorsRcv": intervalL2EthRx1dayCrcErrorsRcv,
       "intervalL2EthRx1dayUndersizedFramesRcv": intervalL2EthRx1dayUndersizedFramesRcv,
       "intervalL2EthRx1dayOversizedFramesRcv": intervalL2EthRx1dayOversizedFramesRcv,
       "intervalL2EthRx1dayPauseFramesRcv": intervalL2EthRx1dayPauseFramesRcv,
       "intervalL2EthRx1dayBytesFrames64Rcv": intervalL2EthRx1dayBytesFrames64Rcv,
       "intervalL2EthRx1dayBytesFrames65Rcv": intervalL2EthRx1dayBytesFrames65Rcv,
       "intervalL2EthRx1dayBytesFrames128Rcv": intervalL2EthRx1dayBytesFrames128Rcv,
       "intervalL2EthRx1dayBytesFrames256Rcv": intervalL2EthRx1dayBytesFrames256Rcv,
       "intervalL2EthRx1dayBytesFrames512Rcv": intervalL2EthRx1dayBytesFrames512Rcv,
       "intervalL2EthRx1dayBytesFrames1024Rcv": intervalL2EthRx1dayBytesFrames1024Rcv,
       "intervalL2EthRx1dayBytesFrames1519Rcv": intervalL2EthRx1dayBytesFrames1519Rcv,
       "intervalL2EthRx1dayInterPackJunkBytesFramesRcv": intervalL2EthRx1dayInterPackJunkBytesFramesRcv,
       "intervalL2EthRx1dayValidFlag": intervalL2EthRx1dayValidFlag,
       "intervalL2EthRx1dayTimeStamp": intervalL2EthRx1dayTimeStamp,
       "currentL2EthTx15minTable": currentL2EthTx15minTable,
       "currentL2EthTx15minEntry": currentL2EthTx15minEntry,
       "currentL2EthTx15minFramesTrmt": currentL2EthTx15minFramesTrmt,
       "currentL2EthTx15minBytesTrmt": currentL2EthTx15minBytesTrmt,
       "currentL2EthTx15minBroadcastFramesTrmt": currentL2EthTx15minBroadcastFramesTrmt,
       "currentL2EthTx15minMulticastFramesTrmt": currentL2EthTx15minMulticastFramesTrmt,
       "currentL2EthTx15minPauseFramesTrmt": currentL2EthTx15minPauseFramesTrmt,
       "currentL2EthTx15minBytesFrames64Trmt": currentL2EthTx15minBytesFrames64Trmt,
       "currentL2EthTx15minBytesFrames65Trmt": currentL2EthTx15minBytesFrames65Trmt,
       "currentL2EthTx15minBytesFrames128Trmt": currentL2EthTx15minBytesFrames128Trmt,
       "currentL2EthTx15minBytesFrames256Trmt": currentL2EthTx15minBytesFrames256Trmt,
       "currentL2EthTx15minBytesFrames512Trmt": currentL2EthTx15minBytesFrames512Trmt,
       "currentL2EthTx15minBytesFrames1024Trmt": currentL2EthTx15minBytesFrames1024Trmt,
       "currentL2EthTx15minBytesFrames1519Trmt": currentL2EthTx15minBytesFrames1519Trmt,
       "currentL2EthTx15minElapsedTime": currentL2EthTx15minElapsedTime,
       "currentL2EthTx1dayTable": currentL2EthTx1dayTable,
       "currentL2EthTx1dayEntry": currentL2EthTx1dayEntry,
       "currentL2EthTx1dayFramesTrmt": currentL2EthTx1dayFramesTrmt,
       "currentL2EthTx1dayBytesTrmt": currentL2EthTx1dayBytesTrmt,
       "currentL2EthTx1dayBroadcastFramesTrmt": currentL2EthTx1dayBroadcastFramesTrmt,
       "currentL2EthTx1dayMulticastFramesTrmt": currentL2EthTx1dayMulticastFramesTrmt,
       "currentL2EthTx1dayPauseFramesTrmt": currentL2EthTx1dayPauseFramesTrmt,
       "currentL2EthTx1dayBytesFrames64Trmt": currentL2EthTx1dayBytesFrames64Trmt,
       "currentL2EthTx1dayBytesFrames65Trmt": currentL2EthTx1dayBytesFrames65Trmt,
       "currentL2EthTx1dayBytesFrames128Trmt": currentL2EthTx1dayBytesFrames128Trmt,
       "currentL2EthTx1dayBytesFrames256Trmt": currentL2EthTx1dayBytesFrames256Trmt,
       "currentL2EthTx1dayBytesFrames512Trmt": currentL2EthTx1dayBytesFrames512Trmt,
       "currentL2EthTx1dayBytesFrames1024Trmt": currentL2EthTx1dayBytesFrames1024Trmt,
       "currentL2EthTx1dayBytesFrames1519Trmt": currentL2EthTx1dayBytesFrames1519Trmt,
       "currentL2EthTx1dayElapsedTime": currentL2EthTx1dayElapsedTime,
       "intervalL2EthTx15minTable": intervalL2EthTx15minTable,
       "intervalL2EthTx15minEntry": intervalL2EthTx15minEntry,
       "intervalL2EthTx15minNumber": intervalL2EthTx15minNumber,
       "intervalL2EthTx15minFramesTrmt": intervalL2EthTx15minFramesTrmt,
       "intervalL2EthTx15minBytesTrmt": intervalL2EthTx15minBytesTrmt,
       "intervalL2EthTx15minBroadcastFramesTrmt": intervalL2EthTx15minBroadcastFramesTrmt,
       "intervalL2EthTx15minMulticastFramesTrmt": intervalL2EthTx15minMulticastFramesTrmt,
       "intervalL2EthTx15minPauseFramesTrmt": intervalL2EthTx15minPauseFramesTrmt,
       "intervalL2EthTx15minBytesFrames64Trmt": intervalL2EthTx15minBytesFrames64Trmt,
       "intervalL2EthTx15minBytesFrames65Trmt": intervalL2EthTx15minBytesFrames65Trmt,
       "intervalL2EthTx15minBytesFrames128Trmt": intervalL2EthTx15minBytesFrames128Trmt,
       "intervalL2EthTx15minBytesFrames256Trmt": intervalL2EthTx15minBytesFrames256Trmt,
       "intervalL2EthTx15minBytesFrames512Trmt": intervalL2EthTx15minBytesFrames512Trmt,
       "intervalL2EthTx15minBytesFrames1024Trmt": intervalL2EthTx15minBytesFrames1024Trmt,
       "intervalL2EthTx15minBytesFrames1519Trmt": intervalL2EthTx15minBytesFrames1519Trmt,
       "intervalL2EthTx15minValidFlag": intervalL2EthTx15minValidFlag,
       "intervalL2EthTx15minTimeStamp": intervalL2EthTx15minTimeStamp,
       "intervalL2EthTx1dayTable": intervalL2EthTx1dayTable,
       "intervalL2EthTx1dayEntry": intervalL2EthTx1dayEntry,
       "intervalL2EthTx1dayNumber": intervalL2EthTx1dayNumber,
       "intervalL2EthTx1dayFramesTrmt": intervalL2EthTx1dayFramesTrmt,
       "intervalL2EthTx1dayBytesTrmt": intervalL2EthTx1dayBytesTrmt,
       "intervalL2EthTx1dayBroadcastFramesTrmt": intervalL2EthTx1dayBroadcastFramesTrmt,
       "intervalL2EthTx1dayMulticastFramesTrmt": intervalL2EthTx1dayMulticastFramesTrmt,
       "intervalL2EthTx1dayPauseFramesTrmt": intervalL2EthTx1dayPauseFramesTrmt,
       "intervalL2EthTx1dayBytesFrames64Trmt": intervalL2EthTx1dayBytesFrames64Trmt,
       "intervalL2EthTx1dayBytesFrames65Trmt": intervalL2EthTx1dayBytesFrames65Trmt,
       "intervalL2EthTx1dayBytesFrames128Trmt": intervalL2EthTx1dayBytesFrames128Trmt,
       "intervalL2EthTx1dayBytesFrames256Trmt": intervalL2EthTx1dayBytesFrames256Trmt,
       "intervalL2EthTx1dayBytesFrames512Trmt": intervalL2EthTx1dayBytesFrames512Trmt,
       "intervalL2EthTx1dayBytesFrames1024Trmt": intervalL2EthTx1dayBytesFrames1024Trmt,
       "intervalL2EthTx1dayBytesFrames1519Trmt": intervalL2EthTx1dayBytesFrames1519Trmt,
       "intervalL2EthTx1dayValidFlag": intervalL2EthTx1dayValidFlag,
       "intervalL2EthTx1dayTimeStamp": intervalL2EthTx1dayTimeStamp,
       "intervalFarEndPhysPerfOpticalInputPwr15minTable": intervalFarEndPhysPerfOpticalInputPwr15minTable,
       "intervalFarEndPhysPerfOpticalInputPwr15minEntry": intervalFarEndPhysPerfOpticalInputPwr15minEntry,
       "intervalFarEndPhysPerfOpticalInputPwr15minNumber": intervalFarEndPhysPerfOpticalInputPwr15minNumber,
       "intervalFarEndPhysPerfOpticalInputPwr15minLow": intervalFarEndPhysPerfOpticalInputPwr15minLow,
       "intervalFarEndPhysPerfOpticalInputPwr15minMean": intervalFarEndPhysPerfOpticalInputPwr15minMean,
       "intervalFarEndPhysPerfOpticalInputPwr15minHigh": intervalFarEndPhysPerfOpticalInputPwr15minHigh,
       "intervalFarEndPhysPerfOpticalInputPwr15minValidFlag": intervalFarEndPhysPerfOpticalInputPwr15minValidFlag,
       "intervalFarEndPhysPerfOpticalInputPwr15minTimeStamp": intervalFarEndPhysPerfOpticalInputPwr15minTimeStamp,
       "intervalFarEndPhysPerfOpticalInputPwr1dayTable": intervalFarEndPhysPerfOpticalInputPwr1dayTable,
       "intervalFarEndPhysPerfOpticalInputPwr1dayEntry": intervalFarEndPhysPerfOpticalInputPwr1dayEntry,
       "intervalFarEndPhysPerfOpticalInputPwr1dayNumber": intervalFarEndPhysPerfOpticalInputPwr1dayNumber,
       "intervalFarEndPhysPerfOpticalInputPwr1dayLow": intervalFarEndPhysPerfOpticalInputPwr1dayLow,
       "intervalFarEndPhysPerfOpticalInputPwr1dayMean": intervalFarEndPhysPerfOpticalInputPwr1dayMean,
       "intervalFarEndPhysPerfOpticalInputPwr1dayHigh": intervalFarEndPhysPerfOpticalInputPwr1dayHigh,
       "intervalFarEndPhysPerfOpticalInputPwr1dayValidFlag": intervalFarEndPhysPerfOpticalInputPwr1dayValidFlag,
       "intervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp": intervalFarEndPhysPerfOpticalInputPwr1dayTimeStamp,
       "intervalFarEndPhysPerfOpticalInputPwr1weekTable": intervalFarEndPhysPerfOpticalInputPwr1weekTable,
       "intervalFarEndPhysPerfOpticalInputPwr1weekEntry": intervalFarEndPhysPerfOpticalInputPwr1weekEntry,
       "intervalFarEndPhysPerfOpticalInputPwr1weekNumber": intervalFarEndPhysPerfOpticalInputPwr1weekNumber,
       "intervalFarEndPhysPerfOpticalInputPwr1weekLow": intervalFarEndPhysPerfOpticalInputPwr1weekLow,
       "intervalFarEndPhysPerfOpticalInputPwr1weekMean": intervalFarEndPhysPerfOpticalInputPwr1weekMean,
       "intervalFarEndPhysPerfOpticalInputPwr1weekHigh": intervalFarEndPhysPerfOpticalInputPwr1weekHigh,
       "intervalFarEndPhysPerfOpticalInputPwr1weekValidFlag": intervalFarEndPhysPerfOpticalInputPwr1weekValidFlag,
       "intervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp": intervalFarEndPhysPerfOpticalInputPwr1weekTimeStamp,
       "intervalFarEndPhysPerfOpticalOutputPwr15minTable": intervalFarEndPhysPerfOpticalOutputPwr15minTable,
       "intervalFarEndPhysPerfOpticalOutputPwr15minEntry": intervalFarEndPhysPerfOpticalOutputPwr15minEntry,
       "intervalFarEndPhysPerfOpticalOutputPwr15minNumber": intervalFarEndPhysPerfOpticalOutputPwr15minNumber,
       "intervalFarEndPhysPerfOpticalOutputPwr15minLow": intervalFarEndPhysPerfOpticalOutputPwr15minLow,
       "intervalFarEndPhysPerfOpticalOutputPwr15minMean": intervalFarEndPhysPerfOpticalOutputPwr15minMean,
       "intervalFarEndPhysPerfOpticalOutputPwr15minHigh": intervalFarEndPhysPerfOpticalOutputPwr15minHigh,
       "intervalFarEndPhysPerfOpticalOutputPwr15minValidFlag": intervalFarEndPhysPerfOpticalOutputPwr15minValidFlag,
       "intervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp": intervalFarEndPhysPerfOpticalOutputPwr15minTimeStamp,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayTable": intervalFarEndPhysPerfOpticalOutputPwr1dayTable,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayEntry": intervalFarEndPhysPerfOpticalOutputPwr1dayEntry,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayNumber": intervalFarEndPhysPerfOpticalOutputPwr1dayNumber,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayLow": intervalFarEndPhysPerfOpticalOutputPwr1dayLow,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayMean": intervalFarEndPhysPerfOpticalOutputPwr1dayMean,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayHigh": intervalFarEndPhysPerfOpticalOutputPwr1dayHigh,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag": intervalFarEndPhysPerfOpticalOutputPwr1dayValidFlag,
       "intervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp": intervalFarEndPhysPerfOpticalOutputPwr1dayTimeStamp,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekTable": intervalFarEndPhysPerfOpticalOutputPwr1weekTable,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekEntry": intervalFarEndPhysPerfOpticalOutputPwr1weekEntry,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekNumber": intervalFarEndPhysPerfOpticalOutputPwr1weekNumber,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekLow": intervalFarEndPhysPerfOpticalOutputPwr1weekLow,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekMean": intervalFarEndPhysPerfOpticalOutputPwr1weekMean,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekHigh": intervalFarEndPhysPerfOpticalOutputPwr1weekHigh,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag": intervalFarEndPhysPerfOpticalOutputPwr1weekValidFlag,
       "intervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp": intervalFarEndPhysPerfOpticalOutputPwr1weekTimeStamp,
       "intervalLatency15minTable": intervalLatency15minTable,
       "intervalLatency15minEntry": intervalLatency15minEntry,
       "intervalLatency15minNumber": intervalLatency15minNumber,
       "intervalLatency15minLow": intervalLatency15minLow,
       "intervalLatency15minMean": intervalLatency15minMean,
       "intervalLatency15minHigh": intervalLatency15minHigh,
       "intervalLatency15minValidFlag": intervalLatency15minValidFlag,
       "intervalLatency15minTimeStamp": intervalLatency15minTimeStamp,
       "intervalLatency1dayTable": intervalLatency1dayTable,
       "intervalLatency1dayEntry": intervalLatency1dayEntry,
       "intervalLatency1dayNumber": intervalLatency1dayNumber,
       "intervalLatency1dayLow": intervalLatency1dayLow,
       "intervalLatency1dayMean": intervalLatency1dayMean,
       "intervalLatency1dayHigh": intervalLatency1dayHigh,
       "intervalLatency1dayValidFlag": intervalLatency1dayValidFlag,
       "intervalLatency1dayTimeStamp": intervalLatency1dayTimeStamp,
       "intervalLatency1weekTable": intervalLatency1weekTable,
       "intervalLatency1weekEntry": intervalLatency1weekEntry,
       "intervalLatency1weekNumber": intervalLatency1weekNumber,
       "intervalLatency1weekLow": intervalLatency1weekLow,
       "intervalLatency1weekMean": intervalLatency1weekMean,
       "intervalLatency1weekHigh": intervalLatency1weekHigh,
       "intervalLatency1weekValidFlag": intervalLatency1weekValidFlag,
       "intervalLatency1weekTimeStamp": intervalLatency1weekTimeStamp,
       "intervalRoundTripDelay15minTable": intervalRoundTripDelay15minTable,
       "intervalRoundTripDelay15minEntry": intervalRoundTripDelay15minEntry,
       "intervalRoundTripDelay15minNumber": intervalRoundTripDelay15minNumber,
       "intervalRoundTripDelay15minLow": intervalRoundTripDelay15minLow,
       "intervalRoundTripDelay15minMean": intervalRoundTripDelay15minMean,
       "intervalRoundTripDelay15minHigh": intervalRoundTripDelay15minHigh,
       "intervalRoundTripDelay15minValidFlag": intervalRoundTripDelay15minValidFlag,
       "intervalRoundTripDelay15minTimeStamp": intervalRoundTripDelay15minTimeStamp,
       "intervalRoundTripDelay1dayTable": intervalRoundTripDelay1dayTable,
       "intervalRoundTripDelay1dayEntry": intervalRoundTripDelay1dayEntry,
       "intervalRoundTripDelay1dayNumber": intervalRoundTripDelay1dayNumber,
       "intervalRoundTripDelay1dayLow": intervalRoundTripDelay1dayLow,
       "intervalRoundTripDelay1dayMean": intervalRoundTripDelay1dayMean,
       "intervalRoundTripDelay1dayHigh": intervalRoundTripDelay1dayHigh,
       "intervalRoundTripDelay1dayValidFlag": intervalRoundTripDelay1dayValidFlag,
       "intervalRoundTripDelay1dayTimeStamp": intervalRoundTripDelay1dayTimeStamp,
       "intervalRoundTripDelay1weekTable": intervalRoundTripDelay1weekTable,
       "intervalRoundTripDelay1weekEntry": intervalRoundTripDelay1weekEntry,
       "intervalRoundTripDelay1weekNumber": intervalRoundTripDelay1weekNumber,
       "intervalRoundTripDelay1weekLow": intervalRoundTripDelay1weekLow,
       "intervalRoundTripDelay1weekMean": intervalRoundTripDelay1weekMean,
       "intervalRoundTripDelay1weekHigh": intervalRoundTripDelay1weekHigh,
       "intervalRoundTripDelay1weekValidFlag": intervalRoundTripDelay1weekValidFlag,
       "intervalRoundTripDelay1weekTimeStamp": intervalRoundTripDelay1weekTimeStamp,
       "currentPmSnapshotTable": currentPmSnapshotTable,
       "currentPmSnapshotEntry": currentPmSnapshotEntry,
       "currentPmSnapshotOutputPower": currentPmSnapshotOutputPower,
       "currentPmSnapshotInputPower": currentPmSnapshotInputPower,
       "currentPmSnapshotAttenuation": currentPmSnapshotAttenuation,
       "currentPmSnapshotAttenuationOfVoa": currentPmSnapshotAttenuationOfVoa,
       "currentPmSnapshotOscGain": currentPmSnapshotOscGain,
       "currentPmSnapshotBackreflectionPowerReceived": currentPmSnapshotBackreflectionPowerReceived,
       "currentPmSnapshotRamanPumpPower": currentPmSnapshotRamanPumpPower,
       "currentPmSnapshotOscPowerReceived": currentPmSnapshotOscPowerReceived,
       "currentPmSnapshotVariableGain": currentPmSnapshotVariableGain,
       "currentPmSnapshotTxLineAttenuation": currentPmSnapshotTxLineAttenuation,
       "currentPmSnapshotRxLineAttenuation": currentPmSnapshotRxLineAttenuation,
       "intervalPmSnapshotTable": intervalPmSnapshotTable,
       "intervalPmSnapshotEntry": intervalPmSnapshotEntry,
       "intervalPmSnapshotParameter": intervalPmSnapshotParameter,
       "intervalPmSnapshotNumber": intervalPmSnapshotNumber,
       "intervalPmSnapshotValue": intervalPmSnapshotValue,
       "intervalPmSnapshotValidFlag": intervalPmSnapshotValidFlag,
       "intervalPmSnapshotTimeStamp": intervalPmSnapshotTimeStamp,
       "intervalPhysPerfOscOpticalOutputPwr15minTable": intervalPhysPerfOscOpticalOutputPwr15minTable,
       "intervalPhysPerfOscOpticalOutputPwr15minEntry": intervalPhysPerfOscOpticalOutputPwr15minEntry,
       "intervalPhysPerfOscOpticalOutputPwr15minNumber": intervalPhysPerfOscOpticalOutputPwr15minNumber,
       "intervalPhysPerfOscOpticalOutputPwr15minLow": intervalPhysPerfOscOpticalOutputPwr15minLow,
       "intervalPhysPerfOscOpticalOutputPwr15minMean": intervalPhysPerfOscOpticalOutputPwr15minMean,
       "intervalPhysPerfOscOpticalOutputPwr15minHigh": intervalPhysPerfOscOpticalOutputPwr15minHigh,
       "intervalPhysPerfOscOpticalOutputPwr15minValidFlag": intervalPhysPerfOscOpticalOutputPwr15minValidFlag,
       "intervalPhysPerfOscOpticalOutputPwr15minTimeStamp": intervalPhysPerfOscOpticalOutputPwr15minTimeStamp,
       "intervalPhysPerfOscOpticalOutputPwr1dayTable": intervalPhysPerfOscOpticalOutputPwr1dayTable,
       "intervalPhysPerfOscOpticalOutputPwr1dayEntry": intervalPhysPerfOscOpticalOutputPwr1dayEntry,
       "intervalPhysPerfOscOpticalOutputPwr1dayNumber": intervalPhysPerfOscOpticalOutputPwr1dayNumber,
       "intervalPhysPerfOscOpticalOutputPwr1dayLow": intervalPhysPerfOscOpticalOutputPwr1dayLow,
       "intervalPhysPerfOscOpticalOutputPwr1dayMean": intervalPhysPerfOscOpticalOutputPwr1dayMean,
       "intervalPhysPerfOscOpticalOutputPwr1dayHigh": intervalPhysPerfOscOpticalOutputPwr1dayHigh,
       "intervalPhysPerfOscOpticalOutputPwr1dayValidFlag": intervalPhysPerfOscOpticalOutputPwr1dayValidFlag,
       "intervalPhysPerfOscOpticalOutputPwr1dayTimeStamp": intervalPhysPerfOscOpticalOutputPwr1dayTimeStamp,
       "intervalPhysPerfOscOpticalOutputPwr1weekTable": intervalPhysPerfOscOpticalOutputPwr1weekTable,
       "intervalPhysPerfOscOpticalOutputPwr1weekEntry": intervalPhysPerfOscOpticalOutputPwr1weekEntry,
       "intervalPhysPerfOscOpticalOutputPwr1weekNumber": intervalPhysPerfOscOpticalOutputPwr1weekNumber,
       "intervalPhysPerfOscOpticalOutputPwr1weekLow": intervalPhysPerfOscOpticalOutputPwr1weekLow,
       "intervalPhysPerfOscOpticalOutputPwr1weekMean": intervalPhysPerfOscOpticalOutputPwr1weekMean,
       "intervalPhysPerfOscOpticalOutputPwr1weekHigh": intervalPhysPerfOscOpticalOutputPwr1weekHigh,
       "intervalPhysPerfOscOpticalOutputPwr1weekValidFlag": intervalPhysPerfOscOpticalOutputPwr1weekValidFlag,
       "intervalPhysPerfOscOpticalOutputPwr1weekTimeStamp": intervalPhysPerfOscOpticalOutputPwr1weekTimeStamp,
       "currentPhysConvTxHighSpeed15minTable": currentPhysConvTxHighSpeed15minTable,
       "currentPhysConvTxHighSpeed15minEntry": currentPhysConvTxHighSpeed15minEntry,
       "currentPhysConvTxHighSpeed15minESTX": currentPhysConvTxHighSpeed15minESTX,
       "currentPhysConvTxHighSpeed15minCVTX": currentPhysConvTxHighSpeed15minCVTX,
       "currentPhysConvTxHighSpeed15minSETX": currentPhysConvTxHighSpeed15minSETX,
       "currentPhysConvTxHighSpeed15minElapsedTime": currentPhysConvTxHighSpeed15minElapsedTime,
       "currentPhysConvTxHighSpeed1dayTable": currentPhysConvTxHighSpeed1dayTable,
       "currentPhysConvTxHighSpeed1dayEntry": currentPhysConvTxHighSpeed1dayEntry,
       "currentPhysConvTxHighSpeed1dayESTX": currentPhysConvTxHighSpeed1dayESTX,
       "currentPhysConvTxHighSpeed1dayCVTX": currentPhysConvTxHighSpeed1dayCVTX,
       "currentPhysConvTxHighSpeed1daySETX": currentPhysConvTxHighSpeed1daySETX,
       "currentPhysConvTxHighSpeed1dayElapsedTime": currentPhysConvTxHighSpeed1dayElapsedTime,
       "intervalPhysConvTxHighSpeed15minTable": intervalPhysConvTxHighSpeed15minTable,
       "intervalPhysConvTxHighSpeed15minEntry": intervalPhysConvTxHighSpeed15minEntry,
       "intervalPhysConvTxHighSpeed15minNumber": intervalPhysConvTxHighSpeed15minNumber,
       "intervalPhysConvTxHighSpeed15minESTX": intervalPhysConvTxHighSpeed15minESTX,
       "intervalPhysConvTxHighSpeed15minCVTX": intervalPhysConvTxHighSpeed15minCVTX,
       "intervalPhysConvTxHighSpeed15minSETX": intervalPhysConvTxHighSpeed15minSETX,
       "intervalPhysConvTxHighSpeed15minValidFlag": intervalPhysConvTxHighSpeed15minValidFlag,
       "intervalPhysConvTxHighSpeed15minTimeStamp": intervalPhysConvTxHighSpeed15minTimeStamp,
       "intervalPhysConvTxHighSpeed1dayTable": intervalPhysConvTxHighSpeed1dayTable,
       "intervalPhysConvTxHighSpeed1dayEntry": intervalPhysConvTxHighSpeed1dayEntry,
       "intervalPhysConvTxHighSpeed1dayNumber": intervalPhysConvTxHighSpeed1dayNumber,
       "intervalPhysConvTxHighSpeed1dayESTX": intervalPhysConvTxHighSpeed1dayESTX,
       "intervalPhysConvTxHighSpeed1dayCVTX": intervalPhysConvTxHighSpeed1dayCVTX,
       "intervalPhysConvTxHighSpeed1daySETX": intervalPhysConvTxHighSpeed1daySETX,
       "intervalPhysConvTxHighSpeed1dayValidFlag": intervalPhysConvTxHighSpeed1dayValidFlag,
       "intervalPhysConvTxHighSpeed1dayTimeStamp": intervalPhysConvTxHighSpeed1dayTimeStamp,
       "intervalPhysPerfDiffGrDelay15minTable": intervalPhysPerfDiffGrDelay15minTable,
       "intervalPhysPerfDiffGrDelay15minEntry": intervalPhysPerfDiffGrDelay15minEntry,
       "intervalPhysPerfDiffGrDelay15minNumber": intervalPhysPerfDiffGrDelay15minNumber,
       "intervalPhysPerfDiffGrDelay15minLow": intervalPhysPerfDiffGrDelay15minLow,
       "intervalPhysPerfDiffGrDelay15minMean": intervalPhysPerfDiffGrDelay15minMean,
       "intervalPhysPerfDiffGrDelay15minHigh": intervalPhysPerfDiffGrDelay15minHigh,
       "intervalPhysPerfDiffGrDelay15minValidFlag": intervalPhysPerfDiffGrDelay15minValidFlag,
       "intervalPhysPerfDiffGrDelay15minTimeStamp": intervalPhysPerfDiffGrDelay15minTimeStamp,
       "intervalPhysPerfDiffGrDelay1dayTable": intervalPhysPerfDiffGrDelay1dayTable,
       "intervalPhysPerfDiffGrDelay1dayEntry": intervalPhysPerfDiffGrDelay1dayEntry,
       "intervalPhysPerfDiffGrDelay1dayNumber": intervalPhysPerfDiffGrDelay1dayNumber,
       "intervalPhysPerfDiffGrDelay1dayLow": intervalPhysPerfDiffGrDelay1dayLow,
       "intervalPhysPerfDiffGrDelay1dayMean": intervalPhysPerfDiffGrDelay1dayMean,
       "intervalPhysPerfDiffGrDelay1dayHigh": intervalPhysPerfDiffGrDelay1dayHigh,
       "intervalPhysPerfDiffGrDelay1dayValidFlag": intervalPhysPerfDiffGrDelay1dayValidFlag,
       "intervalPhysPerfDiffGrDelay1dayTimeStamp": intervalPhysPerfDiffGrDelay1dayTimeStamp,
       "intervalPhysPerfDiffGrDelay1weekTable": intervalPhysPerfDiffGrDelay1weekTable,
       "intervalPhysPerfDiffGrDelay1weekEntry": intervalPhysPerfDiffGrDelay1weekEntry,
       "intervalPhysPerfDiffGrDelay1weekNumber": intervalPhysPerfDiffGrDelay1weekNumber,
       "intervalPhysPerfDiffGrDelay1weekLow": intervalPhysPerfDiffGrDelay1weekLow,
       "intervalPhysPerfDiffGrDelay1weekMean": intervalPhysPerfDiffGrDelay1weekMean,
       "intervalPhysPerfDiffGrDelay1weekHigh": intervalPhysPerfDiffGrDelay1weekHigh,
       "intervalPhysPerfDiffGrDelay1weekValidFlag": intervalPhysPerfDiffGrDelay1weekValidFlag,
       "intervalPhysPerfDiffGrDelay1weekTimeStamp": intervalPhysPerfDiffGrDelay1weekTimeStamp,
       "intervalPhysPerfChromaticDispersion15minTable": intervalPhysPerfChromaticDispersion15minTable,
       "intervalPhysPerfChromaticDispersion15minEntry": intervalPhysPerfChromaticDispersion15minEntry,
       "intervalPhysPerfChromaticDispersion15minNumber": intervalPhysPerfChromaticDispersion15minNumber,
       "intervalPhysPerfChromaticDispersion15minLow": intervalPhysPerfChromaticDispersion15minLow,
       "intervalPhysPerfChromaticDispersion15minMean": intervalPhysPerfChromaticDispersion15minMean,
       "intervalPhysPerfChromaticDispersion15minHigh": intervalPhysPerfChromaticDispersion15minHigh,
       "intervalPhysPerfChromaticDispersion15minValidFlag": intervalPhysPerfChromaticDispersion15minValidFlag,
       "intervalPhysPerfChromaticDispersion15minTimeStamp": intervalPhysPerfChromaticDispersion15minTimeStamp,
       "intervalPhysPerfChromaticDispersion1dayTable": intervalPhysPerfChromaticDispersion1dayTable,
       "intervalPhysPerfChromaticDispersion1dayEntry": intervalPhysPerfChromaticDispersion1dayEntry,
       "intervalPhysPerfChromaticDispersion1dayNumber": intervalPhysPerfChromaticDispersion1dayNumber,
       "intervalPhysPerfChromaticDispersion1dayLow": intervalPhysPerfChromaticDispersion1dayLow,
       "intervalPhysPerfChromaticDispersion1dayMean": intervalPhysPerfChromaticDispersion1dayMean,
       "intervalPhysPerfChromaticDispersion1dayHigh": intervalPhysPerfChromaticDispersion1dayHigh,
       "intervalPhysPerfChromaticDispersion1dayValidFlag": intervalPhysPerfChromaticDispersion1dayValidFlag,
       "intervalPhysPerfChromaticDispersion1dayTimeStamp": intervalPhysPerfChromaticDispersion1dayTimeStamp,
       "intervalPhysPerfChromaticDispersion1weekTable": intervalPhysPerfChromaticDispersion1weekTable,
       "intervalPhysPerfChromaticDispersion1weekEntry": intervalPhysPerfChromaticDispersion1weekEntry,
       "intervalPhysPerfChromaticDispersion1weekNumber": intervalPhysPerfChromaticDispersion1weekNumber,
       "intervalPhysPerfChromaticDispersion1weekLow": intervalPhysPerfChromaticDispersion1weekLow,
       "intervalPhysPerfChromaticDispersion1weekMean": intervalPhysPerfChromaticDispersion1weekMean,
       "intervalPhysPerfChromaticDispersion1weekHigh": intervalPhysPerfChromaticDispersion1weekHigh,
       "intervalPhysPerfChromaticDispersion1weekValidFlag": intervalPhysPerfChromaticDispersion1weekValidFlag,
       "intervalPhysPerfChromaticDispersion1weekTimeStamp": intervalPhysPerfChromaticDispersion1weekTimeStamp,
       "intervalPhysPerfSignalToNoiseRatio15minTable": intervalPhysPerfSignalToNoiseRatio15minTable,
       "intervalPhysPerfSignalToNoiseRatio15minEntry": intervalPhysPerfSignalToNoiseRatio15minEntry,
       "intervalPhysPerfSignalToNoiseRatio15minNumber": intervalPhysPerfSignalToNoiseRatio15minNumber,
       "intervalPhysPerfSignalToNoiseRatio15minLow": intervalPhysPerfSignalToNoiseRatio15minLow,
       "intervalPhysPerfSignalToNoiseRatio15minMean": intervalPhysPerfSignalToNoiseRatio15minMean,
       "intervalPhysPerfSignalToNoiseRatio15minHigh": intervalPhysPerfSignalToNoiseRatio15minHigh,
       "intervalPhysPerfSignalToNoiseRatio15minValidFlag": intervalPhysPerfSignalToNoiseRatio15minValidFlag,
       "intervalPhysPerfSignalToNoiseRatio15minTimeStamp": intervalPhysPerfSignalToNoiseRatio15minTimeStamp,
       "intervalPhysPerfSignalToNoiseRatio1dayTable": intervalPhysPerfSignalToNoiseRatio1dayTable,
       "intervalPhysPerfSignalToNoiseRatio1dayEntry": intervalPhysPerfSignalToNoiseRatio1dayEntry,
       "intervalPhysPerfSignalToNoiseRatio1dayNumber": intervalPhysPerfSignalToNoiseRatio1dayNumber,
       "intervalPhysPerfSignalToNoiseRatio1dayLow": intervalPhysPerfSignalToNoiseRatio1dayLow,
       "intervalPhysPerfSignalToNoiseRatio1dayMean": intervalPhysPerfSignalToNoiseRatio1dayMean,
       "intervalPhysPerfSignalToNoiseRatio1dayHigh": intervalPhysPerfSignalToNoiseRatio1dayHigh,
       "intervalPhysPerfSignalToNoiseRatio1dayValidFlag": intervalPhysPerfSignalToNoiseRatio1dayValidFlag,
       "intervalPhysPerfSignalToNoiseRatio1dayTimeStamp": intervalPhysPerfSignalToNoiseRatio1dayTimeStamp,
       "intervalPhysPerfSignalToNoiseRatio1weekTable": intervalPhysPerfSignalToNoiseRatio1weekTable,
       "intervalPhysPerfSignalToNoiseRatio1weekEntry": intervalPhysPerfSignalToNoiseRatio1weekEntry,
       "intervalPhysPerfSignalToNoiseRatio1weekNumber": intervalPhysPerfSignalToNoiseRatio1weekNumber,
       "intervalPhysPerfSignalToNoiseRatio1weekLow": intervalPhysPerfSignalToNoiseRatio1weekLow,
       "intervalPhysPerfSignalToNoiseRatio1weekMean": intervalPhysPerfSignalToNoiseRatio1weekMean,
       "intervalPhysPerfSignalToNoiseRatio1weekHigh": intervalPhysPerfSignalToNoiseRatio1weekHigh,
       "intervalPhysPerfSignalToNoiseRatio1weekValidFlag": intervalPhysPerfSignalToNoiseRatio1weekValidFlag,
       "intervalPhysPerfSignalToNoiseRatio1weekTimeStamp": intervalPhysPerfSignalToNoiseRatio1weekTimeStamp,
       "intervalPhysPerfCarrierFreqOffset15minTable": intervalPhysPerfCarrierFreqOffset15minTable,
       "intervalPhysPerfCarrierFreqOffset15minEntry": intervalPhysPerfCarrierFreqOffset15minEntry,
       "intervalPhysPerfCarrierFreqOffset15minNumber": intervalPhysPerfCarrierFreqOffset15minNumber,
       "intervalPhysPerfCarrierFreqOffset15minLow": intervalPhysPerfCarrierFreqOffset15minLow,
       "intervalPhysPerfCarrierFreqOffset15minMean": intervalPhysPerfCarrierFreqOffset15minMean,
       "intervalPhysPerfCarrierFreqOffset15minHigh": intervalPhysPerfCarrierFreqOffset15minHigh,
       "intervalPhysPerfCarrierFreqOffset15minValidFlag": intervalPhysPerfCarrierFreqOffset15minValidFlag,
       "intervalPhysPerfCarrierFreqOffset15minTimeStamp": intervalPhysPerfCarrierFreqOffset15minTimeStamp,
       "intervalPhysPerfCarrierFreqOffset1dayTable": intervalPhysPerfCarrierFreqOffset1dayTable,
       "intervalPhysPerfCarrierFreqOffset1dayEntry": intervalPhysPerfCarrierFreqOffset1dayEntry,
       "intervalPhysPerfCarrierFreqOffset1dayNumber": intervalPhysPerfCarrierFreqOffset1dayNumber,
       "intervalPhysPerfCarrierFreqOffset1dayLow": intervalPhysPerfCarrierFreqOffset1dayLow,
       "intervalPhysPerfCarrierFreqOffset1dayMean": intervalPhysPerfCarrierFreqOffset1dayMean,
       "intervalPhysPerfCarrierFreqOffset1dayHigh": intervalPhysPerfCarrierFreqOffset1dayHigh,
       "intervalPhysPerfCarrierFreqOffset1dayValidFlag": intervalPhysPerfCarrierFreqOffset1dayValidFlag,
       "intervalPhysPerfCarrierFreqOffset1dayTimeStamp": intervalPhysPerfCarrierFreqOffset1dayTimeStamp,
       "intervalPhysPerfCarrierFreqOffset1weekTable": intervalPhysPerfCarrierFreqOffset1weekTable,
       "intervalPhysPerfCarrierFreqOffset1weekEntry": intervalPhysPerfCarrierFreqOffset1weekEntry,
       "intervalPhysPerfCarrierFreqOffset1weekNumber": intervalPhysPerfCarrierFreqOffset1weekNumber,
       "intervalPhysPerfCarrierFreqOffset1weekLow": intervalPhysPerfCarrierFreqOffset1weekLow,
       "intervalPhysPerfCarrierFreqOffset1weekMean": intervalPhysPerfCarrierFreqOffset1weekMean,
       "intervalPhysPerfCarrierFreqOffset1weekHigh": intervalPhysPerfCarrierFreqOffset1weekHigh,
       "intervalPhysPerfCarrierFreqOffset1weekValidFlag": intervalPhysPerfCarrierFreqOffset1weekValidFlag,
       "intervalPhysPerfCarrierFreqOffset1weekTimeStamp": intervalPhysPerfCarrierFreqOffset1weekTimeStamp,
       "thresholdOtuFecSublayerExTable": thresholdOtuFecSublayerExTable,
       "thresholdOtuFecSublayerExEntry": thresholdOtuFecSublayerExEntry,
       "thresholdOtuFecSublayerExCEHighThres15min": thresholdOtuFecSublayerExCEHighThres15min,
       "thresholdOtuFecSublayerExCEHighThres1day": thresholdOtuFecSublayerExCEHighThres1day,
       "thresholdOtuFecSublayerExUBEHighThres15min": thresholdOtuFecSublayerExUBEHighThres15min,
       "thresholdOtuFecSublayerExUBEHighThres1day": thresholdOtuFecSublayerExUBEHighThres1day,
       "currentOtuFec15minExTable": currentOtuFec15minExTable,
       "currentOtuFec15minExEntry": currentOtuFec15minExEntry,
       "currentOtuFec15minExCE": currentOtuFec15minExCE,
       "currentOtuFec15minExUBE": currentOtuFec15minExUBE,
       "currentOtuFec15minExBERCE": currentOtuFec15minExBERCE,
       "currentOtuFec15minExElapsedTime": currentOtuFec15minExElapsedTime,
       "currentOtuFec1dayExTable": currentOtuFec1dayExTable,
       "currentOtuFec1dayExEntry": currentOtuFec1dayExEntry,
       "currentOtuFec1dayExCE": currentOtuFec1dayExCE,
       "currentOtuFec1dayExUBE": currentOtuFec1dayExUBE,
       "currentOtuFec1dayExBERCE": currentOtuFec1dayExBERCE,
       "currentOtuFec1dayExElapsedTime": currentOtuFec1dayExElapsedTime,
       "intervalOtuFec15minExTable": intervalOtuFec15minExTable,
       "intervalOtuFec15minExEntry": intervalOtuFec15minExEntry,
       "intervalOtuFec15minExNumber": intervalOtuFec15minExNumber,
       "intervalOtuFec15minExCE": intervalOtuFec15minExCE,
       "intervalOtuFec15minExUBE": intervalOtuFec15minExUBE,
       "intervalOtuFec15minExBERCE": intervalOtuFec15minExBERCE,
       "intervalOtuFec15minExValidFlag": intervalOtuFec15minExValidFlag,
       "intervalOtuFec15minExTimeStamp": intervalOtuFec15minExTimeStamp,
       "intervalOtuFec1dayExTable": intervalOtuFec1dayExTable,
       "intervalOtuFec1dayExEntry": intervalOtuFec1dayExEntry,
       "intervalOtuFec1dayExNumber": intervalOtuFec1dayExNumber,
       "intervalOtuFec1dayExCE": intervalOtuFec1dayExCE,
       "intervalOtuFec1dayExUBE": intervalOtuFec1dayExUBE,
       "intervalOtuFec1dayExBERCE": intervalOtuFec1dayExBERCE,
       "intervalOtuFec1dayExValidFlag": intervalOtuFec1dayExValidFlag,
       "intervalOtuFec1dayExTimeStamp": intervalOtuFec1dayExTimeStamp,
       "currentEthRx3HS15minTable": currentEthRx3HS15minTable,
       "currentEthRx3HS15minEntry": currentEthRx3HS15minEntry,
       "currentEthRx3HS15minGoodFrames": currentEthRx3HS15minGoodFrames,
       "currentEthRx3HS15minPauseFrames": currentEthRx3HS15minPauseFrames,
       "currentEthRx3HS15minCrcFrames": currentEthRx3HS15minCrcFrames,
       "currentEthRx3HS15minBytes": currentEthRx3HS15minBytes,
       "currentEthRx3HS15minBroadcastFramesRcv": currentEthRx3HS15minBroadcastFramesRcv,
       "currentEthRx3HS15minMulticastFramesRcv": currentEthRx3HS15minMulticastFramesRcv,
       "currentEthRx3HS15minUndersizedFramesRcv": currentEthRx3HS15minUndersizedFramesRcv,
       "currentEthRx3HS15minOversizedFramesRcv": currentEthRx3HS15minOversizedFramesRcv,
       "currentEthRx3HS15minFragmentFramesRcv": currentEthRx3HS15minFragmentFramesRcv,
       "currentEthRx3HS15minJabberFrameRcv": currentEthRx3HS15minJabberFrameRcv,
       "currentEthRx3HS15minControlFrameRcv": currentEthRx3HS15minControlFrameRcv,
       "currentEthRx3HS15minBytesFrames64Rcv": currentEthRx3HS15minBytesFrames64Rcv,
       "currentEthRx3HS15minBytesFrames65Rcv": currentEthRx3HS15minBytesFrames65Rcv,
       "currentEthRx3HS15minBytesFrames128Rcv": currentEthRx3HS15minBytesFrames128Rcv,
       "currentEthRx3HS15minBytesFrames256Rcv": currentEthRx3HS15minBytesFrames256Rcv,
       "currentEthRx3HS15minBytesFrames512Rcv": currentEthRx3HS15minBytesFrames512Rcv,
       "currentEthRx3HS15minBytesFrames1024Rcv": currentEthRx3HS15minBytesFrames1024Rcv,
       "currentEthRx3HS15minBytesFrames1519Rcv": currentEthRx3HS15minBytesFrames1519Rcv,
       "currentEthRx3HS15minElapsedTime": currentEthRx3HS15minElapsedTime,
       "currentEthRx3HS1dayTable": currentEthRx3HS1dayTable,
       "currentEthRx3HS1dayEntry": currentEthRx3HS1dayEntry,
       "currentEthRx3HS1dayGoodFrames": currentEthRx3HS1dayGoodFrames,
       "currentEthRx3HS1dayPauseFrames": currentEthRx3HS1dayPauseFrames,
       "currentEthRx3HS1dayCrcFrames": currentEthRx3HS1dayCrcFrames,
       "currentEthRx3HS1dayBytes": currentEthRx3HS1dayBytes,
       "currentEthRx3HS1dayBroadcastFramesRcv": currentEthRx3HS1dayBroadcastFramesRcv,
       "currentEthRx3HS1dayMulticastFramesRcv": currentEthRx3HS1dayMulticastFramesRcv,
       "currentEthRx3HS1dayUndersizedFramesRcv": currentEthRx3HS1dayUndersizedFramesRcv,
       "currentEthRx3HS1dayOversizedFramesRcv": currentEthRx3HS1dayOversizedFramesRcv,
       "currentEthRx3HS1dayFragmentFramesRcv": currentEthRx3HS1dayFragmentFramesRcv,
       "currentEthRx3HS1dayJabberFrameRcv": currentEthRx3HS1dayJabberFrameRcv,
       "currentEthRx3HS1dayControlFrameRcv": currentEthRx3HS1dayControlFrameRcv,
       "currentEthRx3HS1dayBytesFrames64Rcv": currentEthRx3HS1dayBytesFrames64Rcv,
       "currentEthRx3HS1dayBytesFrames65Rcv": currentEthRx3HS1dayBytesFrames65Rcv,
       "currentEthRx3HS1dayBytesFrames128Rcv": currentEthRx3HS1dayBytesFrames128Rcv,
       "currentEthRx3HS1dayBytesFrames256Rcv": currentEthRx3HS1dayBytesFrames256Rcv,
       "currentEthRx3HS1dayBytesFrames512Rcv": currentEthRx3HS1dayBytesFrames512Rcv,
       "currentEthRx3HS1dayBytesFrames1024Rcv": currentEthRx3HS1dayBytesFrames1024Rcv,
       "currentEthRx3HS1dayBytesFrames1519Rcv": currentEthRx3HS1dayBytesFrames1519Rcv,
       "currentEthRx3HS1dayElapsedTime": currentEthRx3HS1dayElapsedTime,
       "intervalEthRx3HS15minTable": intervalEthRx3HS15minTable,
       "intervalEthRx3HS15minEntry": intervalEthRx3HS15minEntry,
       "intervalEthRx3HS15minNumber": intervalEthRx3HS15minNumber,
       "intervalEthRx3HS15minGoodFrames": intervalEthRx3HS15minGoodFrames,
       "intervalEthRx3HS15minPauseFrames": intervalEthRx3HS15minPauseFrames,
       "intervalEthRx3HS15minCrcFrames": intervalEthRx3HS15minCrcFrames,
       "intervalEthRx3HS15minBytes": intervalEthRx3HS15minBytes,
       "intervalEthRx3HS15minBroadcastFramesRcv": intervalEthRx3HS15minBroadcastFramesRcv,
       "intervalEthRx3HS15minMulticastFramesRcv": intervalEthRx3HS15minMulticastFramesRcv,
       "intervalEthRx3HS15minUndersizedFramesRcv": intervalEthRx3HS15minUndersizedFramesRcv,
       "intervalEthRx3HS15minOversizedFramesRcv": intervalEthRx3HS15minOversizedFramesRcv,
       "intervalEthRx3HS15minFragmentFramesRcv": intervalEthRx3HS15minFragmentFramesRcv,
       "intervalEthRx3HS15minJabberFrameRcv": intervalEthRx3HS15minJabberFrameRcv,
       "intervalEthRx3HS15minControlFrameRcv": intervalEthRx3HS15minControlFrameRcv,
       "intervalEthRx3HS15minBytesFrames64Rcv": intervalEthRx3HS15minBytesFrames64Rcv,
       "intervalEthRx3HS15minBytesFrames65Rcv": intervalEthRx3HS15minBytesFrames65Rcv,
       "intervalEthRx3HS15minBytesFrames128Rcv": intervalEthRx3HS15minBytesFrames128Rcv,
       "intervalEthRx3HS15minBytesFrames256Rcv": intervalEthRx3HS15minBytesFrames256Rcv,
       "intervalEthRx3HS15minBytesFrames512Rcv": intervalEthRx3HS15minBytesFrames512Rcv,
       "intervalEthRx3HS15minBytesFrames1024Rcv": intervalEthRx3HS15minBytesFrames1024Rcv,
       "intervalEthRx3HS15minBytesFrames1519Rcv": intervalEthRx3HS15minBytesFrames1519Rcv,
       "intervalEthRx3HS15minValidFlag": intervalEthRx3HS15minValidFlag,
       "intervalEthRx3HS15minTimeStamp": intervalEthRx3HS15minTimeStamp,
       "intervalEthRx3HS1dayTable": intervalEthRx3HS1dayTable,
       "intervalEthRx3HS1dayEntry": intervalEthRx3HS1dayEntry,
       "intervalEthRx3HS1dayNumber": intervalEthRx3HS1dayNumber,
       "intervalEthRx3HS1dayGoodFrames": intervalEthRx3HS1dayGoodFrames,
       "intervalEthRx3HS1dayPauseFrames": intervalEthRx3HS1dayPauseFrames,
       "intervalEthRx3HS1dayCrcFrames": intervalEthRx3HS1dayCrcFrames,
       "intervalEthRx3HS1dayBytes": intervalEthRx3HS1dayBytes,
       "intervalEthRx3HS1dayBroadcastFramesRcv": intervalEthRx3HS1dayBroadcastFramesRcv,
       "intervalEthRx3HS1dayMulticastFramesRcv": intervalEthRx3HS1dayMulticastFramesRcv,
       "intervalEthRx3HS1dayUndersizedFramesRcv": intervalEthRx3HS1dayUndersizedFramesRcv,
       "intervalEthRx3HS1dayOversizedFramesRcv": intervalEthRx3HS1dayOversizedFramesRcv,
       "intervalEthRx3HS1dayFragmentFramesRcv": intervalEthRx3HS1dayFragmentFramesRcv,
       "intervalEthRx3HS1dayJabberFrameRcv": intervalEthRx3HS1dayJabberFrameRcv,
       "intervalEthRx3HS1dayControlFrameRcv": intervalEthRx3HS1dayControlFrameRcv,
       "intervalEthRx3HS1dayBytesFrames64Rcv": intervalEthRx3HS1dayBytesFrames64Rcv,
       "intervalEthRx3HS1dayBytesFrames65Rcv": intervalEthRx3HS1dayBytesFrames65Rcv,
       "intervalEthRx3HS1dayBytesFrames128Rcv": intervalEthRx3HS1dayBytesFrames128Rcv,
       "intervalEthRx3HS1dayBytesFrames256Rcv": intervalEthRx3HS1dayBytesFrames256Rcv,
       "intervalEthRx3HS1dayBytesFrames512Rcv": intervalEthRx3HS1dayBytesFrames512Rcv,
       "intervalEthRx3HS1dayBytesFrames1024Rcv": intervalEthRx3HS1dayBytesFrames1024Rcv,
       "intervalEthRx3HS1dayBytesFrames1519Rcv": intervalEthRx3HS1dayBytesFrames1519Rcv,
       "intervalEthRx3HS1dayValidFlag": intervalEthRx3HS1dayValidFlag,
       "intervalEthRx3HS1dayTimeStamp": intervalEthRx3HS1dayTimeStamp,
       "intervalPhysPerfSkew15minTable": intervalPhysPerfSkew15minTable,
       "intervalPhysPerfSkew15minEntry": intervalPhysPerfSkew15minEntry,
       "intervalPhysPerfSkew15minNumber": intervalPhysPerfSkew15minNumber,
       "intervalPhysPerfSkew15minLow": intervalPhysPerfSkew15minLow,
       "intervalPhysPerfSkew15minMean": intervalPhysPerfSkew15minMean,
       "intervalPhysPerfSkew15minHigh": intervalPhysPerfSkew15minHigh,
       "intervalPhysPerfSkew15minValidFlag": intervalPhysPerfSkew15minValidFlag,
       "intervalPhysPerfSkew15minTimeStamp": intervalPhysPerfSkew15minTimeStamp,
       "intervalPhysPerfSkew1dayTable": intervalPhysPerfSkew1dayTable,
       "intervalPhysPerfSkew1dayEntry": intervalPhysPerfSkew1dayEntry,
       "intervalPhysPerfSkew1dayNumber": intervalPhysPerfSkew1dayNumber,
       "intervalPhysPerfSkew1dayLow": intervalPhysPerfSkew1dayLow,
       "intervalPhysPerfSkew1dayMean": intervalPhysPerfSkew1dayMean,
       "intervalPhysPerfSkew1dayHigh": intervalPhysPerfSkew1dayHigh,
       "intervalPhysPerfSkew1dayValidFlag": intervalPhysPerfSkew1dayValidFlag,
       "intervalPhysPerfSkew1dayTimeStamp": intervalPhysPerfSkew1dayTimeStamp,
       "intervalPhysPerfSkew1weekTable": intervalPhysPerfSkew1weekTable,
       "intervalPhysPerfSkew1weekEntry": intervalPhysPerfSkew1weekEntry,
       "intervalPhysPerfSkew1weekNumber": intervalPhysPerfSkew1weekNumber,
       "intervalPhysPerfSkew1weekLow": intervalPhysPerfSkew1weekLow,
       "intervalPhysPerfSkew1weekMean": intervalPhysPerfSkew1weekMean,
       "intervalPhysPerfSkew1weekHigh": intervalPhysPerfSkew1weekHigh,
       "intervalPhysPerfSkew1weekValidFlag": intervalPhysPerfSkew1weekValidFlag,
       "intervalPhysPerfSkew1weekTimeStamp": intervalPhysPerfSkew1weekTimeStamp,
       "currentType4PhysCodingLayer15minTable": currentType4PhysCodingLayer15minTable,
       "currentType4PhysCodingLayer15minEntry": currentType4PhysCodingLayer15minEntry,
       "currentType4PhysCodingLayer15minES": currentType4PhysCodingLayer15minES,
       "currentType4PhysCodingLayer15minCV": currentType4PhysCodingLayer15minCV,
       "currentType4PhysCodingLayer15minBBE": currentType4PhysCodingLayer15minBBE,
       "currentType4PhysCodingLayer15minElapsedTime": currentType4PhysCodingLayer15minElapsedTime,
       "currentType4PhysCodingLayer1dayTable": currentType4PhysCodingLayer1dayTable,
       "currentType4PhysCodingLayer1dayEntry": currentType4PhysCodingLayer1dayEntry,
       "currentType4PhysCodingLayer1dayES": currentType4PhysCodingLayer1dayES,
       "currentType4PhysCodingLayer1dayCV": currentType4PhysCodingLayer1dayCV,
       "currentType4PhysCodingLayer1dayBBE": currentType4PhysCodingLayer1dayBBE,
       "currentType4PhysCodingLayer1dayElapsedTime": currentType4PhysCodingLayer1dayElapsedTime,
       "intervalType4PhysCodingLayer15minTable": intervalType4PhysCodingLayer15minTable,
       "intervalType4PhysCodingLayer15minEntry": intervalType4PhysCodingLayer15minEntry,
       "intervalType4PhysCodingLayer15minNumber": intervalType4PhysCodingLayer15minNumber,
       "intervalType4PhysCodingLayer15minES": intervalType4PhysCodingLayer15minES,
       "intervalType4PhysCodingLayer15minCV": intervalType4PhysCodingLayer15minCV,
       "intervalType4PhysCodingLayer15minBBE": intervalType4PhysCodingLayer15minBBE,
       "intervalType4PhysCodingLayer15minValidFlag": intervalType4PhysCodingLayer15minValidFlag,
       "intervalType4PhysCodingLayer15minTimeStamp": intervalType4PhysCodingLayer15minTimeStamp,
       "intervalType4PhysCodingLayer1dayTable": intervalType4PhysCodingLayer1dayTable,
       "intervalType4PhysCodingLayer1dayEntry": intervalType4PhysCodingLayer1dayEntry,
       "intervalType4PhysCodingLayer1dayNumber": intervalType4PhysCodingLayer1dayNumber,
       "intervalType4PhysCodingLayer1dayES": intervalType4PhysCodingLayer1dayES,
       "intervalType4PhysCodingLayer1dayCV": intervalType4PhysCodingLayer1dayCV,
       "intervalType4PhysCodingLayer1dayBBE": intervalType4PhysCodingLayer1dayBBE,
       "intervalType4PhysCodingLayer1dayValidFlag": intervalType4PhysCodingLayer1dayValidFlag,
       "intervalType4PhysCodingLayer1dayTimeStamp": intervalType4PhysCodingLayer1dayTimeStamp,
       "thresholdDefectSecondsTable": thresholdDefectSecondsTable,
       "thresholdDefectSecondsEntry": thresholdDefectSecondsEntry,
       "thresholdDefectSecondsDefectSecondsHighThres15Min": thresholdDefectSecondsDefectSecondsHighThres15Min,
       "thresholdDefectSecondsDefectSecondsHighThres1Day": thresholdDefectSecondsDefectSecondsHighThres1Day,
       "currentDefectSeconds15minTable": currentDefectSeconds15minTable,
       "currentDefectSeconds15minEntry": currentDefectSeconds15minEntry,
       "currentDefectSeconds15minDS": currentDefectSeconds15minDS,
       "currentDefectSeconds15minElapsedTime": currentDefectSeconds15minElapsedTime,
       "currentDefectSeconds1dayTable": currentDefectSeconds1dayTable,
       "currentDefectSeconds1dayEntry": currentDefectSeconds1dayEntry,
       "currentDefectSeconds1dayDS": currentDefectSeconds1dayDS,
       "currentDefectSeconds1dayElapsedTime": currentDefectSeconds1dayElapsedTime,
       "intervalDefectSeconds15minTable": intervalDefectSeconds15minTable,
       "intervalDefectSeconds15minEntry": intervalDefectSeconds15minEntry,
       "intervalDefectSeconds15minNumber": intervalDefectSeconds15minNumber,
       "intervalDefectSeconds15minDS": intervalDefectSeconds15minDS,
       "intervalDefectSeconds15minValidFlag": intervalDefectSeconds15minValidFlag,
       "intervalDefectSeconds15minTimeStamp": intervalDefectSeconds15minTimeStamp,
       "intervalDefectSeconds1dayTable": intervalDefectSeconds1dayTable,
       "intervalDefectSeconds1dayEntry": intervalDefectSeconds1dayEntry,
       "intervalDefectSeconds1dayNumber": intervalDefectSeconds1dayNumber,
       "intervalDefectSeconds1dayDS": intervalDefectSeconds1dayDS,
       "intervalDefectSeconds1dayValidFlag": intervalDefectSeconds1dayValidFlag,
       "intervalDefectSeconds1dayTimeStamp": intervalDefectSeconds1dayTimeStamp,
       "fspR7Conformance": fspR7Conformance,
       "fspR7VendorTypes": fspR7VendorTypes,
       "f7Containers": f7Containers,
       "f7ContainerFanSlot": f7ContainerFanSlot,
       "f7ContainerModuleSlot": f7ContainerModuleSlot,
       "f7ContainerSfpSlot": f7ContainerSfpSlot,
       "f7Shelfs": f7Shelfs,
       "f7FanUnits": f7FanUnits,
       "f7FanUnitsFan": f7FanUnitsFan,
       "f7Modules": f7Modules,
       "f7eqpSh1hu": f7eqpSh1hu,
       "f7eqpSh1huDc": f7eqpSh1huDc,
       "f7eqpSh3hu": f7eqpSh3hu,
       "f7eqpSh7hu": f7eqpSh7hu,
       "f7eqpUnknown": f7eqpUnknown,
       "f7eqpNcu": f7eqpNcu,
       "f7eqpNcutif": f7eqpNcutif,
       "f7eqpScu": f7eqpScu,
       "f7eqpScue": f7eqpScue,
       "f7eqpR6cu": f7eqpR6cu,
       "f7eqpPsu1huac": f7eqpPsu1huac,
       "f7eqpPsu7huac": f7eqpPsu7huac,
       "f7eqpPsu7hudc": f7eqpPsu7hudc,
       "f7eqpFcu7hu": f7eqpFcu7hu,
       "f7eqp2clsmd": f7eqp2clsmd,
       "f7eqp2absmc": f7eqp2absmc,
       "f7eqp2bsmd": f7eqp2bsmd,
       "f7eqp1Gsmud": f7eqp1Gsmud,
       "f7eqp4gsmd": f7eqp4gsmd,
       "f7eqp8gsmd": f7eqp8gsmd,
       "f7eqp1csmuc": f7eqp1csmuc,
       "f7eqp1csmuewc": f7eqp1csmuewc,
       "f7eqp4csmd": f7eqp4csmd,
       "f7eqp4csmud": f7eqp4csmud,
       "f7eqp4csmc": f7eqp4csmc,
       "f7eqpOsfm": f7eqpOsfm,
       "f7eqp1pm": f7eqp1pm,
       "f7eqp2pm": f7eqp2pm,
       "f7eqp40csmd": f7eqp40csmd,
       "f7eqpDcm": f7eqpDcm,
       "f7eqpEdfas": f7eqpEdfas,
       "f7eqpEdfasgc": f7eqpEdfasgc,
       "f7eqpEdfadgc": f7eqpEdfadgc,
       "f7eqpRaman": f7eqpRaman,
       "f7eqp4tcc2g5": f7eqp4tcc2g5,
       "f7eqp4tcc2g5d": f7eqp4tcc2g5d,
       "f7eqp4tcc10gd": f7eqp4tcc10gd,
       "f7eqp4tcc10gc": f7eqp4tcc10gc,
       "f7eqpWcc10gd": f7eqpWcc10gd,
       "f7eqpWcc10gc": f7eqpWcc10gc,
       "f7eqpWcc2g7": f7eqpWcc2g7,
       "f7eqpWcc2g7d": f7eqpWcc2g7d,
       "f7eqp2tcm2g5": f7eqp2tcm2g5,
       "f7eqp2tca2g5": f7eqp2tca2g5,
       "f7eqp8tca10gd": f7eqp8tca10gd,
       "f7eqp8tca10gc": f7eqp8tca10gc,
       "f7eqpWca10gd": f7eqpWca10gd,
       "f7eqpWca10gc": f7eqpWca10gc,
       "f7eqp4tca4gd": f7eqp4tca4gd,
       "f7eqp4tca4gc": f7eqp4tca4gc,
       "f7eqpwca2g5": f7eqpwca2g5,
       "f7eqp4tca1g3d": f7eqp4tca1g3d,
       "f7eqp4tca1g3c": f7eqp4tca1g3c,
       "f7eqp8tce2g5d": f7eqp8tce2g5d,
       "f7eqp8tce2g5c": f7eqp8tce2g5c,
       "f7eqpWcelsd": f7eqpWcelsd,
       "f7eqpWcelsc": f7eqpWcelsc,
       "f7eqpVsm": f7eqpVsm,
       "f7eqpRsmolm": f7eqpRsmolm,
       "f7eqpRsmsf": f7eqpRsmsf,
       "f7eqpOscm": f7eqpOscm,
       "f7eqp2oscm": f7eqp2oscm,
       "f7eqpDrm": f7eqpDrm,
       "f7eqpXfpG": f7eqpXfpG,
       "f7eqpsfpd": f7eqpsfpd,
       "f7eqpSfpc": f7eqpSfpc,
       "f7eqpSfpg": f7eqpSfpg,
       "f7eqpSfpe": f7eqpSfpe,
       "f7eqpSh1hudcm": f7eqpSh1hudcm,
       "f7eqpCustomc": f7eqpCustomc,
       "f7eqpCustomd": f7eqpCustomd,
       "f7eqpPsu1hudc": f7eqpPsu1hudc,
       "f7eqpWcc2g7c": f7eqpWcc2g7c,
       "f7eqp1csmuEwD": f7eqp1csmuEwD,
       "f7eqp1csmuG": f7eqp1csmuG,
       "f7eqp3BsmC": f7eqp3BsmC,
       "f7eqpF2kSh5hu": f7eqpF2kSh5hu,
       "f7eqpF2kSh6hu": f7eqpF2kSh6hu,
       "f7eqp2Tca2g5s": f7eqp2Tca2g5s,
       "f7eqp8Csmuc": f7eqp8Csmuc,
       "f7eqpEdfaDgcb": f7eqpEdfaDgcb,
       "f7eqpOscm2n": f7eqpOscm2n,
       "f7eqp4Tcc10gtd": f7eqp4Tcc10gtd,
       "f7eqp4Tca4g": f7eqp4Tca4g,
       "f7eqpDcg": f7eqpDcg,
       "f7eqp2Tcm2g5d": f7eqp2Tcm2g5d,
       "f7eqp2Tcm2g5c": f7eqp2Tcm2g5c,
       "f7eqpWcm2g5d": f7eqpWcm2g5d,
       "f7eqpWcm2g5c": f7eqpWcm2g5c,
       "f7eqpEdfmSgc": f7eqpEdfmSgc,
       "f7eqpF2kDemiV2": f7eqpF2kDemiV2,
       "f7eqpPsm955": f7eqpPsm955,
       "f7eqpNcu2e": f7eqpNcu2e,
       "f7eqp8TceGl2g5d": f7eqp8TceGl2g5d,
       "f7eqp8TceGl2g5c": f7eqp8TceGl2g5c,
       "f7Plugs": f7Plugs,
       "f7SFPCL": f7SFPCL,
       "f7SFPHS": f7SFPHS,
       "f7SFP2G1": f7SFP2G1,
       "f7SFP2G5": f7SFP2G5,
       "f7SFP4G": f7SFP4G,
       "f7XFP10G": f7XFP10G,
       "f7Ports": f7Ports,
       "f7OTU1": f7OTU1,
       "f7OTU2": f7OTU2,
       "f710GBE": f710GBE,
       "f7OC192": f7OC192,
       "f7OC48": f7OC48,
       "f7STM16": f7STM16,
       "f7STM64": f7STM64,
       "f710GFC": f710GFC,
       "f710GFP": f710GFP,
       "f7Error": f7Error}
)
