# SNMP MIB module (WING-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/rob/MIBs/extreme_1916/WING-MIB.mib
# Produced by pysmi-1.6.1 at Tue Jun  3 16:41:50 2025
# On host e-ws1-mac.muc.elastiflow.net platform Darwin version 24.3.0 by user rob
# Using Python version 3.13.3 (main, Apr  8 2025, 13:54:08) [Clang 16.0.0 (clang-1600.0.26.6)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 ConstraintsUnion,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "ConstraintsUnion",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint")

# Import SMI symbols from the MIBs this MIB depends on

(wirelessProducts,) = mibBuilder.importSymbols(
    "EXTREME-BASE-MIB",
    "wirelessProducts")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 TextualConvention,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "TextualConvention",
    "TruthValue")


# MODULE-IDENTITY

wingMIB = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50)
)
if mibBuilder.loadTexts:
    wingMIB.setRevisions(
        ("2011-09-21 16:47",
         "2011-08-23 12:24",
         "2011-07-29 17:25",
         "2011-07-29 13:40",
         "2011-07-25 16:54",
         "2011-07-25 13:12",
         "2011-07-25 11:40",
         "2011-07-19 17:36",
         "2011-07-19 14:48",
         "2011-03-21 13:57",
         "2011-02-09 15:02",
         "2010-09-27 15:13",
         "2010-08-04 15:49",
         "2010-02-03 14:04")
    )


# Types definitions



class WingIdentifier(OctetString):
    """Custom type WingIdentifier based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 96),
    )





class WingDoActionNow(Integer32):
    """Custom type WingDoActionNow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("doActionRightNow", 1),
          ("idleState", 2))
    )




# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_WingNotifications_ObjectIdentity = ObjectIdentity
wingNotifications = _WingNotifications_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0)
)
_WingTrapsAaa_ObjectIdentity = ObjectIdentity
wingTrapsAaa = _WingTrapsAaa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 2)
)
_WingTrapsAaaPrefix_ObjectIdentity = ObjectIdentity
wingTrapsAaaPrefix = _WingTrapsAaaPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 2, 0)
)
_WingTrapsAdvWips_ObjectIdentity = ObjectIdentity
wingTrapsAdvWips = _WingTrapsAdvWips_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3)
)
_WingTrapsAdvWipsPrefix_ObjectIdentity = ObjectIdentity
wingTrapsAdvWipsPrefix = _WingTrapsAdvWipsPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0)
)
_WingTrapsAp_ObjectIdentity = ObjectIdentity
wingTrapsAp = _WingTrapsAp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4)
)
_WingTrapsApPrefix_ObjectIdentity = ObjectIdentity
wingTrapsApPrefix = _WingTrapsApPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0)
)
_WingTrapsCaptivePortal_ObjectIdentity = ObjectIdentity
wingTrapsCaptivePortal = _WingTrapsCaptivePortal_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5)
)
_WingTrapsCaptivePortalPrefix_ObjectIdentity = ObjectIdentity
wingTrapsCaptivePortalPrefix = _WingTrapsCaptivePortalPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0)
)
_WingTrapsCertmgr_ObjectIdentity = ObjectIdentity
wingTrapsCertmgr = _WingTrapsCertmgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6)
)
_WingTrapsCertmgrPrefix_ObjectIdentity = ObjectIdentity
wingTrapsCertmgrPrefix = _WingTrapsCertmgrPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0)
)
_WingTrapsCfgd_ObjectIdentity = ObjectIdentity
wingTrapsCfgd = _WingTrapsCfgd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 7)
)
_WingTrapsCfgdPrefix_ObjectIdentity = ObjectIdentity
wingTrapsCfgdPrefix = _WingTrapsCfgdPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 7, 0)
)
_WingTrapsCluster_ObjectIdentity = ObjectIdentity
wingTrapsCluster = _WingTrapsCluster_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 8)
)
_WingTrapsClusterPrefix_ObjectIdentity = ObjectIdentity
wingTrapsClusterPrefix = _WingTrapsClusterPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 8, 0)
)
_WingTrapsDhcpsvr_ObjectIdentity = ObjectIdentity
wingTrapsDhcpsvr = _WingTrapsDhcpsvr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9)
)
_WingTrapsDhcpsvrPrefix_ObjectIdentity = ObjectIdentity
wingTrapsDhcpsvrPrefix = _WingTrapsDhcpsvrPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9, 0)
)
_WingTrapsDiag_ObjectIdentity = ObjectIdentity
wingTrapsDiag = _WingTrapsDiag_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10)
)
_WingTrapsDiagPrefix_ObjectIdentity = ObjectIdentity
wingTrapsDiagPrefix = _WingTrapsDiagPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0)
)
_WingTrapsDot11_ObjectIdentity = ObjectIdentity
wingTrapsDot11 = _WingTrapsDot11_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11)
)
_WingTrapsDot11Prefix_ObjectIdentity = ObjectIdentity
wingTrapsDot11Prefix = _WingTrapsDot11Prefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0)
)
_WingTrapsFwu_ObjectIdentity = ObjectIdentity
wingTrapsFwu = _WingTrapsFwu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13)
)
_WingTrapsFwuPrefix_ObjectIdentity = ObjectIdentity
wingTrapsFwuPrefix = _WingTrapsFwuPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0)
)
_WingTrapsLicmgr_ObjectIdentity = ObjectIdentity
wingTrapsLicmgr = _WingTrapsLicmgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 14)
)
_WingTrapsLicmgrPrefix_ObjectIdentity = ObjectIdentity
wingTrapsLicmgrPrefix = _WingTrapsLicmgrPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 14, 0)
)
_WingTrapsMesh_ObjectIdentity = ObjectIdentity
wingTrapsMesh = _WingTrapsMesh_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15)
)
_WingTrapsMeshPrefix_ObjectIdentity = ObjectIdentity
wingTrapsMeshPrefix = _WingTrapsMeshPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0)
)
_WingTrapsNsm_ObjectIdentity = ObjectIdentity
wingTrapsNsm = _WingTrapsNsm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16)
)
_WingTrapsNsmPrefix_ObjectIdentity = ObjectIdentity
wingTrapsNsmPrefix = _WingTrapsNsmPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0)
)
_WingTrapsPm_ObjectIdentity = ObjectIdentity
wingTrapsPm = _WingTrapsPm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17)
)
_WingTrapsPmPrefix_ObjectIdentity = ObjectIdentity
wingTrapsPmPrefix = _WingTrapsPmPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0)
)
_WingTrapsRadconf_ObjectIdentity = ObjectIdentity
wingTrapsRadconf = _WingTrapsRadconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 18)
)
_WingTrapsRadconfPrefix_ObjectIdentity = ObjectIdentity
wingTrapsRadconfPrefix = _WingTrapsRadconfPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 18, 0)
)
_WingTrapsRadio_ObjectIdentity = ObjectIdentity
wingTrapsRadio = _WingTrapsRadio_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19)
)
_WingTrapsRadioPrefix_ObjectIdentity = ObjectIdentity
wingTrapsRadioPrefix = _WingTrapsRadioPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0)
)
_WingTrapsSecuritymgr_ObjectIdentity = ObjectIdentity
wingTrapsSecuritymgr = _WingTrapsSecuritymgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 20)
)
_WingTrapsSecuritymgrPrefix_ObjectIdentity = ObjectIdentity
wingTrapsSecuritymgrPrefix = _WingTrapsSecuritymgrPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 20, 0)
)
_WingTrapsSmrt_ObjectIdentity = ObjectIdentity
wingTrapsSmrt = _WingTrapsSmrt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21)
)
_WingTrapsSmrtPrefix_ObjectIdentity = ObjectIdentity
wingTrapsSmrtPrefix = _WingTrapsSmrtPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0)
)
_WingTrapsSmtpnot_ObjectIdentity = ObjectIdentity
wingTrapsSmtpnot = _WingTrapsSmtpnot_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22)
)
_WingTrapsSmtpnotPrefix_ObjectIdentity = ObjectIdentity
wingTrapsSmtpnotPrefix = _WingTrapsSmtpnotPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0)
)
_WingTrapsSystem_ObjectIdentity = ObjectIdentity
wingTrapsSystem = _WingTrapsSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23)
)
_WingTrapsSystemPrefix_ObjectIdentity = ObjectIdentity
wingTrapsSystemPrefix = _WingTrapsSystemPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0)
)
_WingTrapsWips_ObjectIdentity = ObjectIdentity
wingTrapsWips = _WingTrapsWips_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 24)
)
_WingTrapsWipsPrefix_ObjectIdentity = ObjectIdentity
wingTrapsWipsPrefix = _WingTrapsWipsPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 24, 0)
)
_WingTrapsDot1x_ObjectIdentity = ObjectIdentity
wingTrapsDot1x = _WingTrapsDot1x_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 25)
)
_WingTrapsDot1xPrefix_ObjectIdentity = ObjectIdentity
wingTrapsDot1xPrefix = _WingTrapsDot1xPrefix_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 25, 0)
)
_WingObjects_ObjectIdentity = ObjectIdentity
wingObjects = _WingObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1)
)
_WingSysoids_ObjectIdentity = ObjectIdentity
wingSysoids = _WingSysoids_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1)
)
_WingSysoidAp4511_ObjectIdentity = ObjectIdentity
wingSysoidAp4511 = _WingSysoidAp4511_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 1)
)
if mibBuilder.loadTexts:
    wingSysoidAp4511.setStatus("current")
_WingSysoidAp4521_ObjectIdentity = ObjectIdentity
wingSysoidAp4521 = _WingSysoidAp4521_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 2)
)
if mibBuilder.loadTexts:
    wingSysoidAp4521.setStatus("current")
_WingSysoidAp4532_ObjectIdentity = ObjectIdentity
wingSysoidAp4532 = _WingSysoidAp4532_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 4)
)
if mibBuilder.loadTexts:
    wingSysoidAp4532.setStatus("current")
_WingSysoidAp4760_ObjectIdentity = ObjectIdentity
wingSysoidAp4760 = _WingSysoidAp4760_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 8)
)
if mibBuilder.loadTexts:
    wingSysoidAp4760.setStatus("current")
_WingSysoidAp4600_ObjectIdentity = ObjectIdentity
wingSysoidAp4600 = _WingSysoidAp4600_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 10)
)
if mibBuilder.loadTexts:
    wingSysoidAp4600.setStatus("current")
_WingSysoidAp4021_ObjectIdentity = ObjectIdentity
wingSysoidAp4021 = _WingSysoidAp4021_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 11)
)
if mibBuilder.loadTexts:
    wingSysoidAp4021.setStatus("current")
_WingSysoidAp4022_ObjectIdentity = ObjectIdentity
wingSysoidAp4022 = _WingSysoidAp4022_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 12)
)
if mibBuilder.loadTexts:
    wingSysoidAp4022.setStatus("current")
_WingSysoidAp4522_ObjectIdentity = ObjectIdentity
wingSysoidAp4522 = _WingSysoidAp4522_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 13)
)
if mibBuilder.loadTexts:
    wingSysoidAp4522.setStatus("current")
_WingSysoidAp4832_ObjectIdentity = ObjectIdentity
wingSysoidAp4832 = _WingSysoidAp4832_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 20)
)
if mibBuilder.loadTexts:
    wingSysoidAp4832.setStatus("current")
_WingSysoidAp6562_ObjectIdentity = ObjectIdentity
wingSysoidAp6562 = _WingSysoidAp6562_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 1, 25)
)
if mibBuilder.loadTexts:
    wingSysoidAp6562.setStatus("current")
_WingNotificationsObjects_ObjectIdentity = ObjectIdentity
wingNotificationsObjects = _WingNotificationsObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2)
)
_WingEvent_ObjectIdentity = ObjectIdentity
wingEvent = _WingEvent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2, 1)
)
_WingEventMnemonic_Type = DisplayString
_WingEventMnemonic_Object = MibScalar
wingEventMnemonic = _WingEventMnemonic_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2, 1, 1),
    _WingEventMnemonic_Type()
)
wingEventMnemonic.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    wingEventMnemonic.setStatus("current")
_WingEventModule_Type = DisplayString
_WingEventModule_Object = MibScalar
wingEventModule = _WingEventModule_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2, 1, 2),
    _WingEventModule_Type()
)
wingEventModule.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    wingEventModule.setStatus("current")


class _WingEventSeverity_Type(Integer32):
    """Custom type wingEventSeverity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("emergency", 0),
          ("alert", 1),
          ("critical", 2),
          ("error", 3),
          ("warning", 4),
          ("notice", 5),
          ("information", 6),
          ("debug", 7))
    )


_WingEventSeverity_Type.__name__ = "Integer32"
_WingEventSeverity_Object = MibScalar
wingEventSeverity = _WingEventSeverity_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2, 1, 3),
    _WingEventSeverity_Type()
)
wingEventSeverity.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    wingEventSeverity.setStatus("current")
_WingEventMsg_Type = DisplayString
_WingEventMsg_Object = MibScalar
wingEventMsg = _WingEventMsg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2, 1, 4),
    _WingEventMsg_Type()
)
wingEventMsg.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    wingEventMsg.setStatus("current")
_WingEventSourceAddr_Type = MacAddress
_WingEventSourceAddr_Object = MibScalar
wingEventSourceAddr = _WingEventSourceAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2, 1, 5),
    _WingEventSourceAddr_Type()
)
wingEventSourceAddr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    wingEventSourceAddr.setStatus("current")
_WingEventSourceHostname_Type = DisplayString
_WingEventSourceHostname_Object = MibScalar
wingEventSourceHostname = _WingEventSourceHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 2, 1, 6),
    _WingEventSourceHostname_Type()
)
wingEventSourceHostname.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    wingEventSourceHostname.setStatus("current")
_WingConfig_ObjectIdentity = ObjectIdentity
wingConfig = _WingConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3)
)
_WingCfgSys_ObjectIdentity = ObjectIdentity
wingCfgSys = _WingCfgSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 1)
)
_WingConfigSysMacAddr_Type = DisplayString
_WingConfigSysMacAddr_Object = MibScalar
wingConfigSysMacAddr = _WingConfigSysMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 1, 5),
    _WingConfigSysMacAddr_Type()
)
wingConfigSysMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingConfigSysMacAddr.setStatus("current")
_WingCfgSysCommit_ObjectIdentity = ObjectIdentity
wingCfgSysCommit = _WingCfgSysCommit_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 1, 6)
)
_WingCfgSysCommitLastError_Type = DisplayString
_WingCfgSysCommitLastError_Object = MibScalar
wingCfgSysCommitLastError = _WingCfgSysCommitLastError_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 1, 6, 1),
    _WingCfgSysCommitLastError_Type()
)
wingCfgSysCommitLastError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgSysCommitLastError.setStatus("current")
_WingCfgSysRunningConfigChecksum_Type = DisplayString
_WingCfgSysRunningConfigChecksum_Object = MibScalar
wingCfgSysRunningConfigChecksum = _WingCfgSysRunningConfigChecksum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 1, 7),
    _WingCfgSysRunningConfigChecksum_Type()
)
wingCfgSysRunningConfigChecksum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgSysRunningConfigChecksum.setStatus("current")
_WingCfgVersion_ObjectIdentity = ObjectIdentity
wingCfgVersion = _WingCfgVersion_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 2)
)
_WingCfgVersionVal_Type = DisplayString
_WingCfgVersionVal_Object = MibScalar
wingCfgVersionVal = _WingCfgVersionVal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 2, 1),
    _WingCfgVersionVal_Type()
)
wingCfgVersionVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgVersionVal.setStatus("current")
_WingCfgPasswordEnc_ObjectIdentity = ObjectIdentity
wingCfgPasswordEnc = _WingCfgPasswordEnc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 3)
)
_WingCfgPasswordEncVal_Type = OctetString
_WingCfgPasswordEncVal_Object = MibScalar
wingCfgPasswordEncVal = _WingCfgPasswordEncVal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 3, 1),
    _WingCfgPasswordEncVal_Type()
)
wingCfgPasswordEncVal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgPasswordEncVal.setStatus("current")
_WingCfgPasswordEncSet_ObjectIdentity = ObjectIdentity
wingCfgPasswordEncSet = _WingCfgPasswordEncSet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 3, 2)
)
_WingCfgPasswordEncSetOldPassphrase_Type = DisplayString
_WingCfgPasswordEncSetOldPassphrase_Object = MibScalar
wingCfgPasswordEncSetOldPassphrase = _WingCfgPasswordEncSetOldPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 3, 2, 1),
    _WingCfgPasswordEncSetOldPassphrase_Type()
)
wingCfgPasswordEncSetOldPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgPasswordEncSetOldPassphrase.setStatus("current")
_WingCfgPasswordEncSetNewPassphrase_Type = DisplayString
_WingCfgPasswordEncSetNewPassphrase_Object = MibScalar
wingCfgPasswordEncSetNewPassphrase = _WingCfgPasswordEncSetNewPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 3, 2, 2),
    _WingCfgPasswordEncSetNewPassphrase_Type()
)
wingCfgPasswordEncSetNewPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgPasswordEncSetNewPassphrase.setStatus("current")
_WingCfgWlan_ObjectIdentity = ObjectIdentity
wingCfgWlan = _WingCfgWlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4)
)
_WingCfgWlanTable_Object = MibTable
wingCfgWlanTable = _WingCfgWlanTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1)
)
if mibBuilder.loadTexts:
    wingCfgWlanTable.setStatus("current")
_WingCfgWlanEntry_Object = MibTableRow
wingCfgWlanEntry = _WingCfgWlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1)
)
wingCfgWlanEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWlanName"),
)
if mibBuilder.loadTexts:
    wingCfgWlanEntry.setStatus("current")
_WingCfgWlanName_Type = WingIdentifier
_WingCfgWlanName_Object = MibTableColumn
wingCfgWlanName = _WingCfgWlanName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 1),
    _WingCfgWlanName_Type()
)
wingCfgWlanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgWlanName.setStatus("current")


class _WingCfgWlanShutdown_Type(TruthValue):
    """Custom type wingCfgWlanShutdown based on TruthValue"""
    defaultValue = 2


_WingCfgWlanShutdown_Type.__name__ = "TruthValue"
_WingCfgWlanShutdown_Object = MibTableColumn
wingCfgWlanShutdown = _WingCfgWlanShutdown_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 3),
    _WingCfgWlanShutdown_Type()
)
wingCfgWlanShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanShutdown.setStatus("current")


class _WingCfgWlanSsid_Type(DisplayString):
    """Custom type wingCfgWlanSsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgWlanSsid_Type.__name__ = "DisplayString"
_WingCfgWlanSsid_Object = MibTableColumn
wingCfgWlanSsid = _WingCfgWlanSsid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 4),
    _WingCfgWlanSsid_Type()
)
wingCfgWlanSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanSsid.setStatus("current")


class _WingCfgWlanDescr_Type(DisplayString):
    """Custom type wingCfgWlanDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgWlanDescr_Type.__name__ = "DisplayString"
_WingCfgWlanDescr_Object = MibTableColumn
wingCfgWlanDescr = _WingCfgWlanDescr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 5),
    _WingCfgWlanDescr_Type()
)
wingCfgWlanDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanDescr.setStatus("current")


class _WingCfgWlanEncType_Type(DisplayString):
    """Custom type wingCfgWlanEncType based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgWlanEncType_Type.__name__ = "DisplayString"
_WingCfgWlanEncType_Object = MibTableColumn
wingCfgWlanEncType = _WingCfgWlanEncType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 6),
    _WingCfgWlanEncType_Type()
)
wingCfgWlanEncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanEncType.setStatus("current")


class _WingCfgWlanAuthType_Type(DisplayString):
    """Custom type wingCfgWlanAuthType based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgWlanAuthType_Type.__name__ = "DisplayString"
_WingCfgWlanAuthType_Object = MibTableColumn
wingCfgWlanAuthType = _WingCfgWlanAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 7),
    _WingCfgWlanAuthType_Type()
)
wingCfgWlanAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAuthType.setStatus("current")


class _WingCfgWlanCaptivePortalEnforcement_Type(DisplayString):
    """Custom type wingCfgWlanCaptivePortalEnforcement based on DisplayString"""
    defaultValue = OctetString("never")


_WingCfgWlanCaptivePortalEnforcement_Type.__name__ = "DisplayString"
_WingCfgWlanCaptivePortalEnforcement_Object = MibTableColumn
wingCfgWlanCaptivePortalEnforcement = _WingCfgWlanCaptivePortalEnforcement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 8),
    _WingCfgWlanCaptivePortalEnforcement_Type()
)
wingCfgWlanCaptivePortalEnforcement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanCaptivePortalEnforcement.setStatus("current")


class _WingCfgWlanClientPower_Type(Unsigned32):
    """Custom type wingCfgWlanClientPower based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_WingCfgWlanClientPower_Type.__name__ = "Unsigned32"
_WingCfgWlanClientPower_Object = MibTableColumn
wingCfgWlanClientPower = _WingCfgWlanClientPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 9),
    _WingCfgWlanClientPower_Type()
)
wingCfgWlanClientPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientPower.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanClientPower.setUnits("dBm")


class _WingCfgWlanNasId_Type(DisplayString):
    """Custom type wingCfgWlanNasId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgWlanNasId_Type.__name__ = "DisplayString"
_WingCfgWlanNasId_Object = MibTableColumn
wingCfgWlanNasId = _WingCfgWlanNasId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 10),
    _WingCfgWlanNasId_Type()
)
wingCfgWlanNasId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanNasId.setStatus("current")


class _WingCfgWlanNasPortId_Type(DisplayString):
    """Custom type wingCfgWlanNasPortId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgWlanNasPortId_Type.__name__ = "DisplayString"
_WingCfgWlanNasPortId_Object = MibTableColumn
wingCfgWlanNasPortId = _WingCfgWlanNasPortId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 11),
    _WingCfgWlanNasPortId_Type()
)
wingCfgWlanNasPortId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanNasPortId.setStatus("current")


class _WingCfgWlanBroadcastSsid_Type(TruthValue):
    """Custom type wingCfgWlanBroadcastSsid based on TruthValue"""
    defaultValue = 1


_WingCfgWlanBroadcastSsid_Type.__name__ = "TruthValue"
_WingCfgWlanBroadcastSsid_Object = MibTableColumn
wingCfgWlanBroadcastSsid = _WingCfgWlanBroadcastSsid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 12),
    _WingCfgWlanBroadcastSsid_Type()
)
wingCfgWlanBroadcastSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanBroadcastSsid.setStatus("current")


class _WingCfgWlanAnswerBroadcastProbes_Type(TruthValue):
    """Custom type wingCfgWlanAnswerBroadcastProbes based on TruthValue"""
    defaultValue = 1


_WingCfgWlanAnswerBroadcastProbes_Type.__name__ = "TruthValue"
_WingCfgWlanAnswerBroadcastProbes_Object = MibTableColumn
wingCfgWlanAnswerBroadcastProbes = _WingCfgWlanAnswerBroadcastProbes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 13),
    _WingCfgWlanAnswerBroadcastProbes_Type()
)
wingCfgWlanAnswerBroadcastProbes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAnswerBroadcastProbes.setStatus("current")


class _WingCfgWlanClientClientCommunication_Type(TruthValue):
    """Custom type wingCfgWlanClientClientCommunication based on TruthValue"""
    defaultValue = 1


_WingCfgWlanClientClientCommunication_Type.__name__ = "TruthValue"
_WingCfgWlanClientClientCommunication_Object = MibTableColumn
wingCfgWlanClientClientCommunication = _WingCfgWlanClientClientCommunication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 14),
    _WingCfgWlanClientClientCommunication_Type()
)
wingCfgWlanClientClientCommunication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientClientCommunication.setStatus("current")


class _WingCfgWlanHoldTime_Type(Unsigned32):
    """Custom type wingCfgWlanHoldTime based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_WingCfgWlanHoldTime_Type.__name__ = "Unsigned32"
_WingCfgWlanHoldTime_Object = MibTableColumn
wingCfgWlanHoldTime = _WingCfgWlanHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 15),
    _WingCfgWlanHoldTime_Type()
)
wingCfgWlanHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanHoldTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanHoldTime.setUnits("seconds")


class _WingCfgWlanInactivityTimeout_Type(Unsigned32):
    """Custom type wingCfgWlanInactivityTimeout based on Unsigned32"""
    defaultValue = 1800

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_WingCfgWlanInactivityTimeout_Type.__name__ = "Unsigned32"
_WingCfgWlanInactivityTimeout_Object = MibTableColumn
wingCfgWlanInactivityTimeout = _WingCfgWlanInactivityTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 16),
    _WingCfgWlanInactivityTimeout_Type()
)
wingCfgWlanInactivityTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanInactivityTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanInactivityTimeout.setUnits("seconds")


class _WingCfgWlanCredCacheAgeout_Type(Unsigned32):
    """Custom type wingCfgWlanCredCacheAgeout based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_WingCfgWlanCredCacheAgeout_Type.__name__ = "Unsigned32"
_WingCfgWlanCredCacheAgeout_Object = MibTableColumn
wingCfgWlanCredCacheAgeout = _WingCfgWlanCredCacheAgeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 17),
    _WingCfgWlanCredCacheAgeout_Type()
)
wingCfgWlanCredCacheAgeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanCredCacheAgeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanCredCacheAgeout.setUnits("seconds")


class _WingCfgWlanVlanCacheAgeout_Type(Unsigned32):
    """Custom type wingCfgWlanVlanCacheAgeout based on Unsigned32"""
    defaultValue = 3600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_WingCfgWlanVlanCacheAgeout_Type.__name__ = "Unsigned32"
_WingCfgWlanVlanCacheAgeout_Object = MibTableColumn
wingCfgWlanVlanCacheAgeout = _WingCfgWlanVlanCacheAgeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 18),
    _WingCfgWlanVlanCacheAgeout_Type()
)
wingCfgWlanVlanCacheAgeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanVlanCacheAgeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanVlanCacheAgeout.setUnits("seconds")


class _WingCfgWlanMaxFirewallSessions_Type(Unsigned32):
    """Custom type wingCfgWlanMaxFirewallSessions based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 10000),
    )


_WingCfgWlanMaxFirewallSessions_Type.__name__ = "Unsigned32"
_WingCfgWlanMaxFirewallSessions_Object = MibTableColumn
wingCfgWlanMaxFirewallSessions = _WingCfgWlanMaxFirewallSessions_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 19),
    _WingCfgWlanMaxFirewallSessions_Type()
)
wingCfgWlanMaxFirewallSessions.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanMaxFirewallSessions.setStatus("current")


class _WingCfgWlanReauth_Type(Unsigned32):
    """Custom type wingCfgWlanReauth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 86400),
    )


_WingCfgWlanReauth_Type.__name__ = "Unsigned32"
_WingCfgWlanReauth_Object = MibTableColumn
wingCfgWlanReauth = _WingCfgWlanReauth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 20),
    _WingCfgWlanReauth_Type()
)
wingCfgWlanReauth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanReauth.setStatus("current")


class _WingCfgWlanPmfMode_Type(DisplayString):
    """Custom type wingCfgWlanPmfMode based on DisplayString"""
    defaultValue = OctetString("disabled")


_WingCfgWlanPmfMode_Type.__name__ = "DisplayString"
_WingCfgWlanPmfMode_Object = MibTableColumn
wingCfgWlanPmfMode = _WingCfgWlanPmfMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 21),
    _WingCfgWlanPmfMode_Type()
)
wingCfgWlanPmfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanPmfMode.setStatus("current")


class _WingCfgWlanPmfSaQueryTimeout_Type(Unsigned32):
    """Custom type wingCfgWlanPmfSaQueryTimeout based on Unsigned32"""
    defaultValue = 201

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 1000),
    )


_WingCfgWlanPmfSaQueryTimeout_Type.__name__ = "Unsigned32"
_WingCfgWlanPmfSaQueryTimeout_Object = MibTableColumn
wingCfgWlanPmfSaQueryTimeout = _WingCfgWlanPmfSaQueryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 22),
    _WingCfgWlanPmfSaQueryTimeout_Type()
)
wingCfgWlanPmfSaQueryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanPmfSaQueryTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanPmfSaQueryTimeout.setUnits("milliseconds")


class _WingCfgWlanPmfSaQueryAttempts_Type(Unsigned32):
    """Custom type wingCfgWlanPmfSaQueryAttempts based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgWlanPmfSaQueryAttempts_Type.__name__ = "Unsigned32"
_WingCfgWlanPmfSaQueryAttempts_Object = MibTableColumn
wingCfgWlanPmfSaQueryAttempts = _WingCfgWlanPmfSaQueryAttempts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 23),
    _WingCfgWlanPmfSaQueryAttempts_Type()
)
wingCfgWlanPmfSaQueryAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanPmfSaQueryAttempts.setStatus("current")


class _WingCfgWlanWpaWpa2Psk_Type(DisplayString):
    """Custom type wingCfgWlanWpaWpa2Psk based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 64),
    )


_WingCfgWlanWpaWpa2Psk_Type.__name__ = "DisplayString"
_WingCfgWlanWpaWpa2Psk_Object = MibTableColumn
wingCfgWlanWpaWpa2Psk = _WingCfgWlanWpaWpa2Psk_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 24),
    _WingCfgWlanWpaWpa2Psk_Type()
)
wingCfgWlanWpaWpa2Psk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2Psk.setStatus("current")


class _WingCfgWlanWpaWpa2ExcludeWpa2Tkip_Type(TruthValue):
    """Custom type wingCfgWlanWpaWpa2ExcludeWpa2Tkip based on TruthValue"""
    defaultValue = 2


_WingCfgWlanWpaWpa2ExcludeWpa2Tkip_Type.__name__ = "TruthValue"
_WingCfgWlanWpaWpa2ExcludeWpa2Tkip_Object = MibTableColumn
wingCfgWlanWpaWpa2ExcludeWpa2Tkip = _WingCfgWlanWpaWpa2ExcludeWpa2Tkip_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 25),
    _WingCfgWlanWpaWpa2ExcludeWpa2Tkip_Type()
)
wingCfgWlanWpaWpa2ExcludeWpa2Tkip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2ExcludeWpa2Tkip.setStatus("current")


class _WingCfgWlanWpaWpa2KeyRotationUnicast_Type(Unsigned32):
    """Custom type wingCfgWlanWpaWpa2KeyRotationUnicast based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 86400),
    )


_WingCfgWlanWpaWpa2KeyRotationUnicast_Type.__name__ = "Unsigned32"
_WingCfgWlanWpaWpa2KeyRotationUnicast_Object = MibTableColumn
wingCfgWlanWpaWpa2KeyRotationUnicast = _WingCfgWlanWpaWpa2KeyRotationUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 26),
    _WingCfgWlanWpaWpa2KeyRotationUnicast_Type()
)
wingCfgWlanWpaWpa2KeyRotationUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2KeyRotationUnicast.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2KeyRotationUnicast.setUnits("seconds")


class _WingCfgWlanWpaWpa2KeyRotationBroadcast_Type(Unsigned32):
    """Custom type wingCfgWlanWpaWpa2KeyRotationBroadcast based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 86400),
    )


_WingCfgWlanWpaWpa2KeyRotationBroadcast_Type.__name__ = "Unsigned32"
_WingCfgWlanWpaWpa2KeyRotationBroadcast_Object = MibTableColumn
wingCfgWlanWpaWpa2KeyRotationBroadcast = _WingCfgWlanWpaWpa2KeyRotationBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 27),
    _WingCfgWlanWpaWpa2KeyRotationBroadcast_Type()
)
wingCfgWlanWpaWpa2KeyRotationBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2KeyRotationBroadcast.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2KeyRotationBroadcast.setUnits("seconds")


class _WingCfgWlanWpaWpa2PmkCaching_Type(TruthValue):
    """Custom type wingCfgWlanWpaWpa2PmkCaching based on TruthValue"""
    defaultValue = 1


_WingCfgWlanWpaWpa2PmkCaching_Type.__name__ = "TruthValue"
_WingCfgWlanWpaWpa2PmkCaching_Object = MibTableColumn
wingCfgWlanWpaWpa2PmkCaching = _WingCfgWlanWpaWpa2PmkCaching_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 28),
    _WingCfgWlanWpaWpa2PmkCaching_Type()
)
wingCfgWlanWpaWpa2PmkCaching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2PmkCaching.setStatus("current")


class _WingCfgWlanWpaWpa2OpmkCaching_Type(TruthValue):
    """Custom type wingCfgWlanWpaWpa2OpmkCaching based on TruthValue"""
    defaultValue = 1


_WingCfgWlanWpaWpa2OpmkCaching_Type.__name__ = "TruthValue"
_WingCfgWlanWpaWpa2OpmkCaching_Object = MibTableColumn
wingCfgWlanWpaWpa2OpmkCaching = _WingCfgWlanWpaWpa2OpmkCaching_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 29),
    _WingCfgWlanWpaWpa2OpmkCaching_Type()
)
wingCfgWlanWpaWpa2OpmkCaching.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2OpmkCaching.setStatus("current")


class _WingCfgWlanWpaWpa2Preauth_Type(TruthValue):
    """Custom type wingCfgWlanWpaWpa2Preauth based on TruthValue"""
    defaultValue = 1


_WingCfgWlanWpaWpa2Preauth_Type.__name__ = "TruthValue"
_WingCfgWlanWpaWpa2Preauth_Object = MibTableColumn
wingCfgWlanWpaWpa2Preauth = _WingCfgWlanWpaWpa2Preauth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 30),
    _WingCfgWlanWpaWpa2Preauth_Type()
)
wingCfgWlanWpaWpa2Preauth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2Preauth.setStatus("current")


class _WingCfgWlanWpaWpa2TkipCntrmeasHoldTime_Type(Unsigned32):
    """Custom type wingCfgWlanWpaWpa2TkipCntrmeasHoldTime based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgWlanWpaWpa2TkipCntrmeasHoldTime_Type.__name__ = "Unsigned32"
_WingCfgWlanWpaWpa2TkipCntrmeasHoldTime_Object = MibTableColumn
wingCfgWlanWpaWpa2TkipCntrmeasHoldTime = _WingCfgWlanWpaWpa2TkipCntrmeasHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 31),
    _WingCfgWlanWpaWpa2TkipCntrmeasHoldTime_Type()
)
wingCfgWlanWpaWpa2TkipCntrmeasHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2TkipCntrmeasHoldTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanWpaWpa2TkipCntrmeasHoldTime.setUnits("seconds")


class _WingCfgWlanWep64TransmitKey_Type(Unsigned32):
    """Custom type wingCfgWlanWep64TransmitKey based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WingCfgWlanWep64TransmitKey_Type.__name__ = "Unsigned32"
_WingCfgWlanWep64TransmitKey_Object = MibTableColumn
wingCfgWlanWep64TransmitKey = _WingCfgWlanWep64TransmitKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 32),
    _WingCfgWlanWep64TransmitKey_Type()
)
wingCfgWlanWep64TransmitKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWep64TransmitKey.setStatus("current")


class _WingCfgWlanWep128TransmitKey_Type(Unsigned32):
    """Custom type wingCfgWlanWep128TransmitKey based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WingCfgWlanWep128TransmitKey_Type.__name__ = "Unsigned32"
_WingCfgWlanWep128TransmitKey_Object = MibTableColumn
wingCfgWlanWep128TransmitKey = _WingCfgWlanWep128TransmitKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 37),
    _WingCfgWlanWep128TransmitKey_Type()
)
wingCfgWlanWep128TransmitKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanWep128TransmitKey.setStatus("current")


class _WingCfgWlanRadiusAssignedVlans_Type(TruthValue):
    """Custom type wingCfgWlanRadiusAssignedVlans based on TruthValue"""
    defaultValue = 2


_WingCfgWlanRadiusAssignedVlans_Type.__name__ = "TruthValue"
_WingCfgWlanRadiusAssignedVlans_Object = MibTableColumn
wingCfgWlanRadiusAssignedVlans = _WingCfgWlanRadiusAssignedVlans_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 42),
    _WingCfgWlanRadiusAssignedVlans_Type()
)
wingCfgWlanRadiusAssignedVlans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanRadiusAssignedVlans.setStatus("current")


class _WingCfgWlanRadiusDynamicAuthorization_Type(TruthValue):
    """Custom type wingCfgWlanRadiusDynamicAuthorization based on TruthValue"""
    defaultValue = 2


_WingCfgWlanRadiusDynamicAuthorization_Type.__name__ = "TruthValue"
_WingCfgWlanRadiusDynamicAuthorization_Object = MibTableColumn
wingCfgWlanRadiusDynamicAuthorization = _WingCfgWlanRadiusDynamicAuthorization_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 43),
    _WingCfgWlanRadiusDynamicAuthorization_Type()
)
wingCfgWlanRadiusDynamicAuthorization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanRadiusDynamicAuthorization.setStatus("current")


class _WingCfgWlanAccountingRadius_Type(TruthValue):
    """Custom type wingCfgWlanAccountingRadius based on TruthValue"""
    defaultValue = 2


_WingCfgWlanAccountingRadius_Type.__name__ = "TruthValue"
_WingCfgWlanAccountingRadius_Object = MibTableColumn
wingCfgWlanAccountingRadius = _WingCfgWlanAccountingRadius_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 44),
    _WingCfgWlanAccountingRadius_Type()
)
wingCfgWlanAccountingRadius.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAccountingRadius.setStatus("current")


class _WingCfgWlanMotoExtnMoveCmd_Type(TruthValue):
    """Custom type wingCfgWlanMotoExtnMoveCmd based on TruthValue"""
    defaultValue = 2


_WingCfgWlanMotoExtnMoveCmd_Type.__name__ = "TruthValue"
_WingCfgWlanMotoExtnMoveCmd_Object = MibTableColumn
wingCfgWlanMotoExtnMoveCmd = _WingCfgWlanMotoExtnMoveCmd_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 45),
    _WingCfgWlanMotoExtnMoveCmd_Type()
)
wingCfgWlanMotoExtnMoveCmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanMotoExtnMoveCmd.setStatus("current")


class _WingCfgWlanMotoExtnSmartScan_Type(TruthValue):
    """Custom type wingCfgWlanMotoExtnSmartScan based on TruthValue"""
    defaultValue = 2


_WingCfgWlanMotoExtnSmartScan_Type.__name__ = "TruthValue"
_WingCfgWlanMotoExtnSmartScan_Object = MibTableColumn
wingCfgWlanMotoExtnSmartScan = _WingCfgWlanMotoExtnSmartScan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 46),
    _WingCfgWlanMotoExtnSmartScan_Type()
)
wingCfgWlanMotoExtnSmartScan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanMotoExtnSmartScan.setStatus("current")


class _WingCfgWlanMotoExtnWmmLoadBalance_Type(TruthValue):
    """Custom type wingCfgWlanMotoExtnWmmLoadBalance based on TruthValue"""
    defaultValue = 2


_WingCfgWlanMotoExtnWmmLoadBalance_Type.__name__ = "TruthValue"
_WingCfgWlanMotoExtnWmmLoadBalance_Object = MibTableColumn
wingCfgWlanMotoExtnWmmLoadBalance = _WingCfgWlanMotoExtnWmmLoadBalance_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 47),
    _WingCfgWlanMotoExtnWmmLoadBalance_Type()
)
wingCfgWlanMotoExtnWmmLoadBalance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanMotoExtnWmmLoadBalance.setStatus("current")


class _WingCfgWlanMotoExtnSymbolLoadInfo_Type(TruthValue):
    """Custom type wingCfgWlanMotoExtnSymbolLoadInfo based on TruthValue"""
    defaultValue = 1


_WingCfgWlanMotoExtnSymbolLoadInfo_Type.__name__ = "TruthValue"
_WingCfgWlanMotoExtnSymbolLoadInfo_Object = MibTableColumn
wingCfgWlanMotoExtnSymbolLoadInfo = _WingCfgWlanMotoExtnSymbolLoadInfo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 48),
    _WingCfgWlanMotoExtnSymbolLoadInfo_Type()
)
wingCfgWlanMotoExtnSymbolLoadInfo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanMotoExtnSymbolLoadInfo.setStatus("current")


class _WingCfgWlanClientLoadBal_Type(TruthValue):
    """Custom type wingCfgWlanClientLoadBal based on TruthValue"""
    defaultValue = 1


_WingCfgWlanClientLoadBal_Type.__name__ = "TruthValue"
_WingCfgWlanClientLoadBal_Object = MibTableColumn
wingCfgWlanClientLoadBal = _WingCfgWlanClientLoadBal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 49),
    _WingCfgWlanClientLoadBal_Type()
)
wingCfgWlanClientLoadBal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBal.setStatus("current")


class _WingCfgWlanClientLoadBalSingleBandClients5ghz_Type(TruthValue):
    """Custom type wingCfgWlanClientLoadBalSingleBandClients5ghz based on TruthValue"""
    defaultValue = 1


_WingCfgWlanClientLoadBalSingleBandClients5ghz_Type.__name__ = "TruthValue"
_WingCfgWlanClientLoadBalSingleBandClients5ghz_Object = MibTableColumn
wingCfgWlanClientLoadBalSingleBandClients5ghz = _WingCfgWlanClientLoadBalSingleBandClients5ghz_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 50),
    _WingCfgWlanClientLoadBalSingleBandClients5ghz_Type()
)
wingCfgWlanClientLoadBalSingleBandClients5ghz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalSingleBandClients5ghz.setStatus("current")


class _WingCfgWlanClientLoadBalSingleBandClients24ghz_Type(TruthValue):
    """Custom type wingCfgWlanClientLoadBalSingleBandClients24ghz based on TruthValue"""
    defaultValue = 1


_WingCfgWlanClientLoadBalSingleBandClients24ghz_Type.__name__ = "TruthValue"
_WingCfgWlanClientLoadBalSingleBandClients24ghz_Object = MibTableColumn
wingCfgWlanClientLoadBalSingleBandClients24ghz = _WingCfgWlanClientLoadBalSingleBandClients24ghz_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 51),
    _WingCfgWlanClientLoadBalSingleBandClients24ghz_Type()
)
wingCfgWlanClientLoadBalSingleBandClients24ghz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalSingleBandClients24ghz.setStatus("current")


class _WingCfgWlanClientLoadBalMaxProbeReq24ghz_Type(Unsigned32):
    """Custom type wingCfgWlanClientLoadBalMaxProbeReq24ghz based on Unsigned32"""
    defaultValue = 48

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_WingCfgWlanClientLoadBalMaxProbeReq24ghz_Type.__name__ = "Unsigned32"
_WingCfgWlanClientLoadBalMaxProbeReq24ghz_Object = MibTableColumn
wingCfgWlanClientLoadBalMaxProbeReq24ghz = _WingCfgWlanClientLoadBalMaxProbeReq24ghz_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 52),
    _WingCfgWlanClientLoadBalMaxProbeReq24ghz_Type()
)
wingCfgWlanClientLoadBalMaxProbeReq24ghz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalMaxProbeReq24ghz.setStatus("current")


class _WingCfgWlanClientLoadBalMaxProbeReq5ghz_Type(Unsigned32):
    """Custom type wingCfgWlanClientLoadBalMaxProbeReq5ghz based on Unsigned32"""
    defaultValue = 24

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_WingCfgWlanClientLoadBalMaxProbeReq5ghz_Type.__name__ = "Unsigned32"
_WingCfgWlanClientLoadBalMaxProbeReq5ghz_Object = MibTableColumn
wingCfgWlanClientLoadBalMaxProbeReq5ghz = _WingCfgWlanClientLoadBalMaxProbeReq5ghz_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 53),
    _WingCfgWlanClientLoadBalMaxProbeReq5ghz_Type()
)
wingCfgWlanClientLoadBalMaxProbeReq5ghz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalMaxProbeReq5ghz.setStatus("current")


class _WingCfgWlanClientLoadBalProbeReqIntvl5ghz_Type(Unsigned32):
    """Custom type wingCfgWlanClientLoadBalProbeReqIntvl5ghz based on Unsigned32"""
    defaultValue = 24

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_WingCfgWlanClientLoadBalProbeReqIntvl5ghz_Type.__name__ = "Unsigned32"
_WingCfgWlanClientLoadBalProbeReqIntvl5ghz_Object = MibTableColumn
wingCfgWlanClientLoadBalProbeReqIntvl5ghz = _WingCfgWlanClientLoadBalProbeReqIntvl5ghz_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 54),
    _WingCfgWlanClientLoadBalProbeReqIntvl5ghz_Type()
)
wingCfgWlanClientLoadBalProbeReqIntvl5ghz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalProbeReqIntvl5ghz.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalProbeReqIntvl5ghz.setUnits("seconds")


class _WingCfgWlanClientLoadBalProbeReqIntvl24ghz_Type(Unsigned32):
    """Custom type wingCfgWlanClientLoadBalProbeReqIntvl24ghz based on Unsigned32"""
    defaultValue = 24

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_WingCfgWlanClientLoadBalProbeReqIntvl24ghz_Type.__name__ = "Unsigned32"
_WingCfgWlanClientLoadBalProbeReqIntvl24ghz_Object = MibTableColumn
wingCfgWlanClientLoadBalProbeReqIntvl24ghz = _WingCfgWlanClientLoadBalProbeReqIntvl24ghz_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 55),
    _WingCfgWlanClientLoadBalProbeReqIntvl24ghz_Type()
)
wingCfgWlanClientLoadBalProbeReqIntvl24ghz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalProbeReqIntvl24ghz.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalProbeReqIntvl24ghz.setUnits("seconds")


class _WingCfgWlanClientLoadBalBandDiscoveryIntvl_Type(Unsigned32):
    """Custom type wingCfgWlanClientLoadBalBandDiscoveryIntvl based on Unsigned32"""
    defaultValue = 24

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_WingCfgWlanClientLoadBalBandDiscoveryIntvl_Type.__name__ = "Unsigned32"
_WingCfgWlanClientLoadBalBandDiscoveryIntvl_Object = MibTableColumn
wingCfgWlanClientLoadBalBandDiscoveryIntvl = _WingCfgWlanClientLoadBalBandDiscoveryIntvl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 56),
    _WingCfgWlanClientLoadBalBandDiscoveryIntvl_Type()
)
wingCfgWlanClientLoadBalBandDiscoveryIntvl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalBandDiscoveryIntvl.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalBandDiscoveryIntvl.setUnits("seconds")


class _WingCfgWlanClientLoadBalCapabilityAgeoutTime_Type(Unsigned32):
    """Custom type wingCfgWlanClientLoadBalCapabilityAgeoutTime based on Unsigned32"""
    defaultValue = 24

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_WingCfgWlanClientLoadBalCapabilityAgeoutTime_Type.__name__ = "Unsigned32"
_WingCfgWlanClientLoadBalCapabilityAgeoutTime_Object = MibTableColumn
wingCfgWlanClientLoadBalCapabilityAgeoutTime = _WingCfgWlanClientLoadBalCapabilityAgeoutTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 57),
    _WingCfgWlanClientLoadBalCapabilityAgeoutTime_Type()
)
wingCfgWlanClientLoadBalCapabilityAgeoutTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalCapabilityAgeoutTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanClientLoadBalCapabilityAgeoutTime.setUnits("seconds")
_WingCfgWlanQosPolicy_Type = WingIdentifier
_WingCfgWlanQosPolicy_Object = MibTableColumn
wingCfgWlanQosPolicy = _WingCfgWlanQosPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 58),
    _WingCfgWlanQosPolicy_Type()
)
wingCfgWlanQosPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosPolicy.setStatus("current")
_WingCfgWlanAaaPolicy_Type = WingIdentifier
_WingCfgWlanAaaPolicy_Object = MibTableColumn
wingCfgWlanAaaPolicy = _WingCfgWlanAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 59),
    _WingCfgWlanAaaPolicy_Type()
)
wingCfgWlanAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAaaPolicy.setStatus("current")
_WingCfgWlanCaptivePortal_Type = WingIdentifier
_WingCfgWlanCaptivePortal_Object = MibTableColumn
wingCfgWlanCaptivePortal = _WingCfgWlanCaptivePortal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 60),
    _WingCfgWlanCaptivePortal_Type()
)
wingCfgWlanCaptivePortal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanCaptivePortal.setStatus("current")
_WingCfgWlanAssocAcl_Type = WingIdentifier
_WingCfgWlanAssocAcl_Object = MibTableColumn
wingCfgWlanAssocAcl = _WingCfgWlanAssocAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 61),
    _WingCfgWlanAssocAcl_Type()
)
wingCfgWlanAssocAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAssocAcl.setStatus("current")
_WingCfgWlanIpInAcl_Type = WingIdentifier
_WingCfgWlanIpInAcl_Object = MibTableColumn
wingCfgWlanIpInAcl = _WingCfgWlanIpInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 62),
    _WingCfgWlanIpInAcl_Type()
)
wingCfgWlanIpInAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanIpInAcl.setStatus("current")
_WingCfgWlanMacInAcl_Type = WingIdentifier
_WingCfgWlanMacInAcl_Object = MibTableColumn
wingCfgWlanMacInAcl = _WingCfgWlanMacInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 63),
    _WingCfgWlanMacInAcl_Type()
)
wingCfgWlanMacInAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanMacInAcl.setStatus("current")
_WingCfgWlanIpOutAcl_Type = WingIdentifier
_WingCfgWlanIpOutAcl_Object = MibTableColumn
wingCfgWlanIpOutAcl = _WingCfgWlanIpOutAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 64),
    _WingCfgWlanIpOutAcl_Type()
)
wingCfgWlanIpOutAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanIpOutAcl.setStatus("current")
_WingCfgWlanMacOutAcl_Type = WingIdentifier
_WingCfgWlanMacOutAcl_Object = MibTableColumn
wingCfgWlanMacOutAcl = _WingCfgWlanMacOutAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 65),
    _WingCfgWlanMacOutAcl_Type()
)
wingCfgWlanMacOutAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanMacOutAcl.setStatus("current")


class _WingCfgWlanArpTrust_Type(TruthValue):
    """Custom type wingCfgWlanArpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgWlanArpTrust_Type.__name__ = "TruthValue"
_WingCfgWlanArpTrust_Object = MibTableColumn
wingCfgWlanArpTrust = _WingCfgWlanArpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 66),
    _WingCfgWlanArpTrust_Type()
)
wingCfgWlanArpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanArpTrust.setStatus("current")


class _WingCfgWlanDhcpTrust_Type(TruthValue):
    """Custom type wingCfgWlanDhcpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgWlanDhcpTrust_Type.__name__ = "TruthValue"
_WingCfgWlanDhcpTrust_Object = MibTableColumn
wingCfgWlanDhcpTrust = _WingCfgWlanDhcpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 67),
    _WingCfgWlanDhcpTrust_Type()
)
wingCfgWlanDhcpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanDhcpTrust.setStatus("current")


class _WingCfgWlanArpHeaderMismatchValidation_Type(TruthValue):
    """Custom type wingCfgWlanArpHeaderMismatchValidation based on TruthValue"""
    defaultValue = 1


_WingCfgWlanArpHeaderMismatchValidation_Type.__name__ = "TruthValue"
_WingCfgWlanArpHeaderMismatchValidation_Object = MibTableColumn
wingCfgWlanArpHeaderMismatchValidation = _WingCfgWlanArpHeaderMismatchValidation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 68),
    _WingCfgWlanArpHeaderMismatchValidation_Type()
)
wingCfgWlanArpHeaderMismatchValidation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanArpHeaderMismatchValidation.setStatus("current")


class _WingCfgWlanServiceAllowHtOnly_Type(TruthValue):
    """Custom type wingCfgWlanServiceAllowHtOnly based on TruthValue"""
    defaultValue = 2


_WingCfgWlanServiceAllowHtOnly_Type.__name__ = "TruthValue"
_WingCfgWlanServiceAllowHtOnly_Object = MibTableColumn
wingCfgWlanServiceAllowHtOnly = _WingCfgWlanServiceAllowHtOnly_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 69),
    _WingCfgWlanServiceAllowHtOnly_Type()
)
wingCfgWlanServiceAllowHtOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanServiceAllowHtOnly.setStatus("current")


class _WingCfgWlanEnforceDhcp_Type(TruthValue):
    """Custom type wingCfgWlanEnforceDhcp based on TruthValue"""
    defaultValue = 2


_WingCfgWlanEnforceDhcp_Type.__name__ = "TruthValue"
_WingCfgWlanEnforceDhcp_Object = MibTableColumn
wingCfgWlanEnforceDhcp = _WingCfgWlanEnforceDhcp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 70),
    _WingCfgWlanEnforceDhcp_Type()
)
wingCfgWlanEnforceDhcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanEnforceDhcp.setStatus("current")


class _WingCfgWlanProxyArpMode_Type(DisplayString):
    """Custom type wingCfgWlanProxyArpMode based on DisplayString"""
    defaultValue = OctetString("dynamic")


_WingCfgWlanProxyArpMode_Type.__name__ = "DisplayString"
_WingCfgWlanProxyArpMode_Object = MibTableColumn
wingCfgWlanProxyArpMode = _WingCfgWlanProxyArpMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 71),
    _WingCfgWlanProxyArpMode_Type()
)
wingCfgWlanProxyArpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanProxyArpMode.setStatus("current")


class _WingCfgWlanBroadcastDhcpValidateOffer_Type(TruthValue):
    """Custom type wingCfgWlanBroadcastDhcpValidateOffer based on TruthValue"""
    defaultValue = 2


_WingCfgWlanBroadcastDhcpValidateOffer_Type.__name__ = "TruthValue"
_WingCfgWlanBroadcastDhcpValidateOffer_Object = MibTableColumn
wingCfgWlanBroadcastDhcpValidateOffer = _WingCfgWlanBroadcastDhcpValidateOffer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 1, 1, 72),
    _WingCfgWlanBroadcastDhcpValidateOffer_Type()
)
wingCfgWlanBroadcastDhcpValidateOffer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanBroadcastDhcpValidateOffer.setStatus("current")
_WingCfgWlanVlanTable_Object = MibTable
wingCfgWlanVlanTable = _WingCfgWlanVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 2)
)
if mibBuilder.loadTexts:
    wingCfgWlanVlanTable.setStatus("current")
_WingCfgWlanVlanEntry_Object = MibTableRow
wingCfgWlanVlanEntry = _WingCfgWlanVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 2, 1)
)
wingCfgWlanVlanEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWlanName"),
    (0, "WING-MIB", "wingCfgWlanVlanId"),
)
if mibBuilder.loadTexts:
    wingCfgWlanVlanEntry.setStatus("current")


class _WingCfgWlanVlanId_Type(Unsigned32):
    """Custom type wingCfgWlanVlanId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgWlanVlanId_Type.__name__ = "Unsigned32"
_WingCfgWlanVlanId_Object = MibTableColumn
wingCfgWlanVlanId = _WingCfgWlanVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 2, 1, 1),
    _WingCfgWlanVlanId_Type()
)
wingCfgWlanVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgWlanVlanId.setStatus("current")


class _WingCfgWlanVlanLimit_Type(Unsigned32):
    """Custom type wingCfgWlanVlanLimit based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8192),
    )


_WingCfgWlanVlanLimit_Type.__name__ = "Unsigned32"
_WingCfgWlanVlanLimit_Object = MibTableColumn
wingCfgWlanVlanLimit = _WingCfgWlanVlanLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 2, 1, 3),
    _WingCfgWlanVlanLimit_Type()
)
wingCfgWlanVlanLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanVlanLimit.setStatus("current")
_WingCfgWlanKerberosTable_Object = MibTable
wingCfgWlanKerberosTable = _WingCfgWlanKerberosTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3)
)
if mibBuilder.loadTexts:
    wingCfgWlanKerberosTable.setStatus("current")
_WingCfgWlanKerberosEntry_Object = MibTableRow
wingCfgWlanKerberosEntry = _WingCfgWlanKerberosEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1)
)
wingCfgWlanKerberosEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWlanName"),
)
if mibBuilder.loadTexts:
    wingCfgWlanKerberosEntry.setStatus("current")


class _WingCfgWlanKerberosRealm_Type(DisplayString):
    """Custom type wingCfgWlanKerberosRealm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_WingCfgWlanKerberosRealm_Type.__name__ = "DisplayString"
_WingCfgWlanKerberosRealm_Object = MibTableColumn
wingCfgWlanKerberosRealm = _WingCfgWlanKerberosRealm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1, 1),
    _WingCfgWlanKerberosRealm_Type()
)
wingCfgWlanKerberosRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosRealm.setStatus("current")


class _WingCfgWlanKerberosTimeout_Type(Unsigned32):
    """Custom type wingCfgWlanKerberosTimeout based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgWlanKerberosTimeout_Type.__name__ = "Unsigned32"
_WingCfgWlanKerberosTimeout_Object = MibTableColumn
wingCfgWlanKerberosTimeout = _WingCfgWlanKerberosTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1, 2),
    _WingCfgWlanKerberosTimeout_Type()
)
wingCfgWlanKerberosTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosTimeout.setUnits("seconds")


class _WingCfgWlanKerberosPassword_Type(DisplayString):
    """Custom type wingCfgWlanKerberosPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_WingCfgWlanKerberosPassword_Type.__name__ = "DisplayString"
_WingCfgWlanKerberosPassword_Object = MibTableColumn
wingCfgWlanKerberosPassword = _WingCfgWlanKerberosPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1, 3),
    _WingCfgWlanKerberosPassword_Type()
)
wingCfgWlanKerberosPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosPassword.setStatus("current")
_WingCfgWlanKerberosPrimaryServer_Type = DisplayString
_WingCfgWlanKerberosPrimaryServer_Object = MibTableColumn
wingCfgWlanKerberosPrimaryServer = _WingCfgWlanKerberosPrimaryServer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1, 4),
    _WingCfgWlanKerberosPrimaryServer_Type()
)
wingCfgWlanKerberosPrimaryServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosPrimaryServer.setStatus("current")


class _WingCfgWlanKerberosPrimaryServerPort_Type(Unsigned32):
    """Custom type wingCfgWlanKerberosPrimaryServerPort based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgWlanKerberosPrimaryServerPort_Type.__name__ = "Unsigned32"
_WingCfgWlanKerberosPrimaryServerPort_Object = MibTableColumn
wingCfgWlanKerberosPrimaryServerPort = _WingCfgWlanKerberosPrimaryServerPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1, 5),
    _WingCfgWlanKerberosPrimaryServerPort_Type()
)
wingCfgWlanKerberosPrimaryServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosPrimaryServerPort.setStatus("current")
_WingCfgWlanKerberosSecondaryServer_Type = DisplayString
_WingCfgWlanKerberosSecondaryServer_Object = MibTableColumn
wingCfgWlanKerberosSecondaryServer = _WingCfgWlanKerberosSecondaryServer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1, 6),
    _WingCfgWlanKerberosSecondaryServer_Type()
)
wingCfgWlanKerberosSecondaryServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosSecondaryServer.setStatus("current")


class _WingCfgWlanKerberosSecondaryServerPort_Type(Unsigned32):
    """Custom type wingCfgWlanKerberosSecondaryServerPort based on Unsigned32"""
    defaultValue = 88

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgWlanKerberosSecondaryServerPort_Type.__name__ = "Unsigned32"
_WingCfgWlanKerberosSecondaryServerPort_Object = MibTableColumn
wingCfgWlanKerberosSecondaryServerPort = _WingCfgWlanKerberosSecondaryServerPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 3, 1, 7),
    _WingCfgWlanKerberosSecondaryServerPort_Type()
)
wingCfgWlanKerberosSecondaryServerPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanKerberosSecondaryServerPort.setStatus("current")
_WingCfgWlanAcctSyslogTable_Object = MibTable
wingCfgWlanAcctSyslogTable = _WingCfgWlanAcctSyslogTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 4)
)
if mibBuilder.loadTexts:
    wingCfgWlanAcctSyslogTable.setStatus("current")
_WingCfgWlanAcctSyslogEntry_Object = MibTableRow
wingCfgWlanAcctSyslogEntry = _WingCfgWlanAcctSyslogEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 4, 1)
)
wingCfgWlanAcctSyslogEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWlanName"),
)
if mibBuilder.loadTexts:
    wingCfgWlanAcctSyslogEntry.setStatus("current")


class _WingCfgWlanAcctSyslogEnable_Type(TruthValue):
    """Custom type wingCfgWlanAcctSyslogEnable based on TruthValue"""
    defaultValue = 2


_WingCfgWlanAcctSyslogEnable_Type.__name__ = "TruthValue"
_WingCfgWlanAcctSyslogEnable_Object = MibTableColumn
wingCfgWlanAcctSyslogEnable = _WingCfgWlanAcctSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 4, 1, 1),
    _WingCfgWlanAcctSyslogEnable_Type()
)
wingCfgWlanAcctSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAcctSyslogEnable.setStatus("current")
_WingCfgWlanAcctSyslogHost_Type = DisplayString
_WingCfgWlanAcctSyslogHost_Object = MibTableColumn
wingCfgWlanAcctSyslogHost = _WingCfgWlanAcctSyslogHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 4, 1, 2),
    _WingCfgWlanAcctSyslogHost_Type()
)
wingCfgWlanAcctSyslogHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAcctSyslogHost.setStatus("current")


class _WingCfgWlanAcctSyslogPort_Type(Unsigned32):
    """Custom type wingCfgWlanAcctSyslogPort based on Unsigned32"""
    defaultValue = 514


_WingCfgWlanAcctSyslogPort_Type.__name__ = "Unsigned32"
_WingCfgWlanAcctSyslogPort_Object = MibTableColumn
wingCfgWlanAcctSyslogPort = _WingCfgWlanAcctSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 4, 1, 3),
    _WingCfgWlanAcctSyslogPort_Type()
)
wingCfgWlanAcctSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanAcctSyslogPort.setStatus("current")
_WingCfgWlanClientDenyLimitTable_Object = MibTable
wingCfgWlanClientDenyLimitTable = _WingCfgWlanClientDenyLimitTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 5)
)
if mibBuilder.loadTexts:
    wingCfgWlanClientDenyLimitTable.setStatus("current")
_WingCfgWlanClientDenyLimitEntry_Object = MibTableRow
wingCfgWlanClientDenyLimitEntry = _WingCfgWlanClientDenyLimitEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 5, 1)
)
wingCfgWlanClientDenyLimitEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWlanName"),
)
if mibBuilder.loadTexts:
    wingCfgWlanClientDenyLimitEntry.setStatus("current")


class _WingCfgWlanClientDenyLimitThresholdRate_Type(Unsigned32):
    """Custom type wingCfgWlanClientDenyLimitThresholdRate based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000000),
    )


_WingCfgWlanClientDenyLimitThresholdRate_Type.__name__ = "Unsigned32"
_WingCfgWlanClientDenyLimitThresholdRate_Object = MibTableColumn
wingCfgWlanClientDenyLimitThresholdRate = _WingCfgWlanClientDenyLimitThresholdRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 5, 1, 1),
    _WingCfgWlanClientDenyLimitThresholdRate_Type()
)
wingCfgWlanClientDenyLimitThresholdRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientDenyLimitThresholdRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanClientDenyLimitThresholdRate.setUnits("packets")


class _WingCfgWlanClientDenyLimitAction_Type(DisplayString):
    """Custom type wingCfgWlanClientDenyLimitAction based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgWlanClientDenyLimitAction_Type.__name__ = "DisplayString"
_WingCfgWlanClientDenyLimitAction_Object = MibTableColumn
wingCfgWlanClientDenyLimitAction = _WingCfgWlanClientDenyLimitAction_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 5, 1, 2),
    _WingCfgWlanClientDenyLimitAction_Type()
)
wingCfgWlanClientDenyLimitAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientDenyLimitAction.setStatus("current")


class _WingCfgWlanClientDenyLimitBlacklistAgeout_Type(Unsigned32):
    """Custom type wingCfgWlanClientDenyLimitBlacklistAgeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
    )


_WingCfgWlanClientDenyLimitBlacklistAgeout_Type.__name__ = "Unsigned32"
_WingCfgWlanClientDenyLimitBlacklistAgeout_Object = MibTableColumn
wingCfgWlanClientDenyLimitBlacklistAgeout = _WingCfgWlanClientDenyLimitBlacklistAgeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 4, 5, 1, 3),
    _WingCfgWlanClientDenyLimitBlacklistAgeout_Type()
)
wingCfgWlanClientDenyLimitBlacklistAgeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanClientDenyLimitBlacklistAgeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanClientDenyLimitBlacklistAgeout.setUnits("seconds")
_WingCfgWlanQos_ObjectIdentity = ObjectIdentity
wingCfgWlanQos = _WingCfgWlanQos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5)
)
_WingCfgWlanQosTable_Object = MibTable
wingCfgWlanQosTable = _WingCfgWlanQosTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1)
)
if mibBuilder.loadTexts:
    wingCfgWlanQosTable.setStatus("current")
_WingCfgWlanQosEntry_Object = MibTableRow
wingCfgWlanQosEntry = _WingCfgWlanQosEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1)
)
wingCfgWlanQosEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWlanQosName"),
)
if mibBuilder.loadTexts:
    wingCfgWlanQosEntry.setStatus("current")
_WingCfgWlanQosName_Type = WingIdentifier
_WingCfgWlanQosName_Object = MibTableColumn
wingCfgWlanQosName = _WingCfgWlanQosName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 1),
    _WingCfgWlanQosName_Type()
)
wingCfgWlanQosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgWlanQosName.setStatus("current")


class _WingCfgWlanQosClassification_Type(DisplayString):
    """Custom type wingCfgWlanQosClassification based on DisplayString"""
    defaultValue = OctetString("wmm")


_WingCfgWlanQosClassification_Type.__name__ = "DisplayString"
_WingCfgWlanQosClassification_Object = MibTableColumn
wingCfgWlanQosClassification = _WingCfgWlanQosClassification_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 3),
    _WingCfgWlanQosClassification_Type()
)
wingCfgWlanQosClassification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosClassification.setStatus("current")


class _WingCfgWlanQosNonWmmClassification_Type(DisplayString):
    """Custom type wingCfgWlanQosNonWmmClassification based on DisplayString"""
    defaultValue = OctetString("normal")


_WingCfgWlanQosNonWmmClassification_Type.__name__ = "DisplayString"
_WingCfgWlanQosNonWmmClassification_Object = MibTableColumn
wingCfgWlanQosNonWmmClassification = _WingCfgWlanQosNonWmmClassification_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 4),
    _WingCfgWlanQosNonWmmClassification_Type()
)
wingCfgWlanQosNonWmmClassification.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosNonWmmClassification.setStatus("current")


class _WingCfgWlanQosMulticastMaskPrimary_Type(DisplayString):
    """Custom type wingCfgWlanQosMulticastMaskPrimary based on DisplayString"""
    defaultValue = OctetString("00-00-00-00-00-00/FF-FF-FF-FF-FF-FF")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(35, 35),
    )
    fixed_length = 35


_WingCfgWlanQosMulticastMaskPrimary_Type.__name__ = "DisplayString"
_WingCfgWlanQosMulticastMaskPrimary_Object = MibTableColumn
wingCfgWlanQosMulticastMaskPrimary = _WingCfgWlanQosMulticastMaskPrimary_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 5),
    _WingCfgWlanQosMulticastMaskPrimary_Type()
)
wingCfgWlanQosMulticastMaskPrimary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMulticastMaskPrimary.setStatus("current")


class _WingCfgWlanQosMulticastMaskSecondary_Type(DisplayString):
    """Custom type wingCfgWlanQosMulticastMaskSecondary based on DisplayString"""
    defaultValue = OctetString("00-00-00-00-00-00/FF-FF-FF-FF-FF-FF")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(35, 35),
    )
    fixed_length = 35


_WingCfgWlanQosMulticastMaskSecondary_Type.__name__ = "DisplayString"
_WingCfgWlanQosMulticastMaskSecondary_Object = MibTableColumn
wingCfgWlanQosMulticastMaskSecondary = _WingCfgWlanQosMulticastMaskSecondary_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 6),
    _WingCfgWlanQosMulticastMaskSecondary_Type()
)
wingCfgWlanQosMulticastMaskSecondary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMulticastMaskSecondary.setStatus("current")


class _WingCfgWlanQosMulticastMaskAc_Type(DisplayString):
    """Custom type wingCfgWlanQosMulticastMaskAc based on DisplayString"""
    defaultValue = OctetString("normal")


_WingCfgWlanQosMulticastMaskAc_Type.__name__ = "DisplayString"
_WingCfgWlanQosMulticastMaskAc_Object = MibTableColumn
wingCfgWlanQosMulticastMaskAc = _WingCfgWlanQosMulticastMaskAc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 7),
    _WingCfgWlanQosMulticastMaskAc_Type()
)
wingCfgWlanQosMulticastMaskAc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMulticastMaskAc.setStatus("current")


class _WingCfgWlanQosVoicePrioritization_Type(TruthValue):
    """Custom type wingCfgWlanQosVoicePrioritization based on TruthValue"""
    defaultValue = 2


_WingCfgWlanQosVoicePrioritization_Type.__name__ = "TruthValue"
_WingCfgWlanQosVoicePrioritization_Object = MibTableColumn
wingCfgWlanQosVoicePrioritization = _WingCfgWlanQosVoicePrioritization_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 8),
    _WingCfgWlanQosVoicePrioritization_Type()
)
wingCfgWlanQosVoicePrioritization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosVoicePrioritization.setStatus("current")


class _WingCfgWlanQosSvpPrioritization_Type(TruthValue):
    """Custom type wingCfgWlanQosSvpPrioritization based on TruthValue"""
    defaultValue = 2


_WingCfgWlanQosSvpPrioritization_Type.__name__ = "TruthValue"
_WingCfgWlanQosSvpPrioritization_Object = MibTableColumn
wingCfgWlanQosSvpPrioritization = _WingCfgWlanQosSvpPrioritization_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 9),
    _WingCfgWlanQosSvpPrioritization_Type()
)
wingCfgWlanQosSvpPrioritization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosSvpPrioritization.setStatus("current")


class _WingCfgWlanQosWmmPowerSave_Type(TruthValue):
    """Custom type wingCfgWlanQosWmmPowerSave based on TruthValue"""
    defaultValue = 1


_WingCfgWlanQosWmmPowerSave_Type.__name__ = "TruthValue"
_WingCfgWlanQosWmmPowerSave_Object = MibTableColumn
wingCfgWlanQosWmmPowerSave = _WingCfgWlanQosWmmPowerSave_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 10),
    _WingCfgWlanQosWmmPowerSave_Type()
)
wingCfgWlanQosWmmPowerSave.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmPowerSave.setStatus("current")


class _WingCfgWlanQosWmmQbssLoadElement_Type(TruthValue):
    """Custom type wingCfgWlanQosWmmQbssLoadElement based on TruthValue"""
    defaultValue = 1


_WingCfgWlanQosWmmQbssLoadElement_Type.__name__ = "TruthValue"
_WingCfgWlanQosWmmQbssLoadElement_Object = MibTableColumn
wingCfgWlanQosWmmQbssLoadElement = _WingCfgWlanQosWmmQbssLoadElement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 11),
    _WingCfgWlanQosWmmQbssLoadElement_Type()
)
wingCfgWlanQosWmmQbssLoadElement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmQbssLoadElement.setStatus("current")


class _WingCfgWlanQosWmmBestEffortTxopLimit_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBestEffortTxopLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgWlanQosWmmBestEffortTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBestEffortTxopLimit_Object = MibTableColumn
wingCfgWlanQosWmmBestEffortTxopLimit = _WingCfgWlanQosWmmBestEffortTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 12),
    _WingCfgWlanQosWmmBestEffortTxopLimit_Type()
)
wingCfgWlanQosWmmBestEffortTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBestEffortTxopLimit.setStatus("current")


class _WingCfgWlanQosWmmBestEffortAifsn_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBestEffortAifsn based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 15),
    )


_WingCfgWlanQosWmmBestEffortAifsn_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBestEffortAifsn_Object = MibTableColumn
wingCfgWlanQosWmmBestEffortAifsn = _WingCfgWlanQosWmmBestEffortAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 13),
    _WingCfgWlanQosWmmBestEffortAifsn_Type()
)
wingCfgWlanQosWmmBestEffortAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBestEffortAifsn.setStatus("current")


class _WingCfgWlanQosWmmBestEffortCwMin_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBestEffortCwMin based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmBestEffortCwMin_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBestEffortCwMin_Object = MibTableColumn
wingCfgWlanQosWmmBestEffortCwMin = _WingCfgWlanQosWmmBestEffortCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 14),
    _WingCfgWlanQosWmmBestEffortCwMin_Type()
)
wingCfgWlanQosWmmBestEffortCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBestEffortCwMin.setStatus("current")


class _WingCfgWlanQosWmmBestEffortCwMax_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBestEffortCwMax based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmBestEffortCwMax_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBestEffortCwMax_Object = MibTableColumn
wingCfgWlanQosWmmBestEffortCwMax = _WingCfgWlanQosWmmBestEffortCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 15),
    _WingCfgWlanQosWmmBestEffortCwMax_Type()
)
wingCfgWlanQosWmmBestEffortCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBestEffortCwMax.setStatus("current")


class _WingCfgWlanQosWmmBackgroundTxopLimit_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBackgroundTxopLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgWlanQosWmmBackgroundTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBackgroundTxopLimit_Object = MibTableColumn
wingCfgWlanQosWmmBackgroundTxopLimit = _WingCfgWlanQosWmmBackgroundTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 16),
    _WingCfgWlanQosWmmBackgroundTxopLimit_Type()
)
wingCfgWlanQosWmmBackgroundTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBackgroundTxopLimit.setStatus("current")


class _WingCfgWlanQosWmmBackgroundAifsn_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBackgroundAifsn based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 15),
    )


_WingCfgWlanQosWmmBackgroundAifsn_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBackgroundAifsn_Object = MibTableColumn
wingCfgWlanQosWmmBackgroundAifsn = _WingCfgWlanQosWmmBackgroundAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 17),
    _WingCfgWlanQosWmmBackgroundAifsn_Type()
)
wingCfgWlanQosWmmBackgroundAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBackgroundAifsn.setStatus("current")


class _WingCfgWlanQosWmmBackgroundCwMin_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBackgroundCwMin based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmBackgroundCwMin_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBackgroundCwMin_Object = MibTableColumn
wingCfgWlanQosWmmBackgroundCwMin = _WingCfgWlanQosWmmBackgroundCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 18),
    _WingCfgWlanQosWmmBackgroundCwMin_Type()
)
wingCfgWlanQosWmmBackgroundCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBackgroundCwMin.setStatus("current")


class _WingCfgWlanQosWmmBackgroundCwMax_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmBackgroundCwMax based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmBackgroundCwMax_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmBackgroundCwMax_Object = MibTableColumn
wingCfgWlanQosWmmBackgroundCwMax = _WingCfgWlanQosWmmBackgroundCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 19),
    _WingCfgWlanQosWmmBackgroundCwMax_Type()
)
wingCfgWlanQosWmmBackgroundCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmBackgroundCwMax.setStatus("current")


class _WingCfgWlanQosWmmVideoTxopLimit_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVideoTxopLimit based on Unsigned32"""
    defaultValue = 94

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgWlanQosWmmVideoTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVideoTxopLimit_Object = MibTableColumn
wingCfgWlanQosWmmVideoTxopLimit = _WingCfgWlanQosWmmVideoTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 20),
    _WingCfgWlanQosWmmVideoTxopLimit_Type()
)
wingCfgWlanQosWmmVideoTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVideoTxopLimit.setStatus("current")


class _WingCfgWlanQosWmmVideoAifsn_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVideoAifsn based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 15),
    )


_WingCfgWlanQosWmmVideoAifsn_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVideoAifsn_Object = MibTableColumn
wingCfgWlanQosWmmVideoAifsn = _WingCfgWlanQosWmmVideoAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 21),
    _WingCfgWlanQosWmmVideoAifsn_Type()
)
wingCfgWlanQosWmmVideoAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVideoAifsn.setStatus("current")


class _WingCfgWlanQosWmmVideoCwMin_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVideoCwMin based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmVideoCwMin_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVideoCwMin_Object = MibTableColumn
wingCfgWlanQosWmmVideoCwMin = _WingCfgWlanQosWmmVideoCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 22),
    _WingCfgWlanQosWmmVideoCwMin_Type()
)
wingCfgWlanQosWmmVideoCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVideoCwMin.setStatus("current")


class _WingCfgWlanQosWmmVideoCwMax_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVideoCwMax based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmVideoCwMax_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVideoCwMax_Object = MibTableColumn
wingCfgWlanQosWmmVideoCwMax = _WingCfgWlanQosWmmVideoCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 23),
    _WingCfgWlanQosWmmVideoCwMax_Type()
)
wingCfgWlanQosWmmVideoCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVideoCwMax.setStatus("current")


class _WingCfgWlanQosWmmVoiceTxopLimit_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVoiceTxopLimit based on Unsigned32"""
    defaultValue = 47

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgWlanQosWmmVoiceTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVoiceTxopLimit_Object = MibTableColumn
wingCfgWlanQosWmmVoiceTxopLimit = _WingCfgWlanQosWmmVoiceTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 24),
    _WingCfgWlanQosWmmVoiceTxopLimit_Type()
)
wingCfgWlanQosWmmVoiceTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVoiceTxopLimit.setStatus("current")


class _WingCfgWlanQosWmmVoiceAifsn_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVoiceAifsn based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 15),
    )


_WingCfgWlanQosWmmVoiceAifsn_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVoiceAifsn_Object = MibTableColumn
wingCfgWlanQosWmmVoiceAifsn = _WingCfgWlanQosWmmVoiceAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 25),
    _WingCfgWlanQosWmmVoiceAifsn_Type()
)
wingCfgWlanQosWmmVoiceAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVoiceAifsn.setStatus("current")


class _WingCfgWlanQosWmmVoiceCwMin_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVoiceCwMin based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmVoiceCwMin_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVoiceCwMin_Object = MibTableColumn
wingCfgWlanQosWmmVoiceCwMin = _WingCfgWlanQosWmmVoiceCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 26),
    _WingCfgWlanQosWmmVoiceCwMin_Type()
)
wingCfgWlanQosWmmVoiceCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVoiceCwMin.setStatus("current")


class _WingCfgWlanQosWmmVoiceCwMax_Type(Unsigned32):
    """Custom type wingCfgWlanQosWmmVoiceCwMax based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgWlanQosWmmVoiceCwMax_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWmmVoiceCwMax_Object = MibTableColumn
wingCfgWlanQosWmmVoiceCwMax = _WingCfgWlanQosWmmVoiceCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 27),
    _WingCfgWlanQosWmmVoiceCwMax_Type()
)
wingCfgWlanQosWmmVoiceCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWmmVoiceCwMax.setStatus("current")


class _WingCfgWlanQosWlanRlDownEnable_Type(TruthValue):
    """Custom type wingCfgWlanQosWlanRlDownEnable based on TruthValue"""
    defaultValue = 2


_WingCfgWlanQosWlanRlDownEnable_Type.__name__ = "TruthValue"
_WingCfgWlanQosWlanRlDownEnable_Object = MibTableColumn
wingCfgWlanQosWlanRlDownEnable = _WingCfgWlanQosWlanRlDownEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 28),
    _WingCfgWlanQosWlanRlDownEnable_Type()
)
wingCfgWlanQosWlanRlDownEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownEnable.setStatus("current")


class _WingCfgWlanQosWlanRlDownRate_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlDownRate based on Unsigned32"""
    defaultValue = 5000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgWlanQosWlanRlDownRate_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlDownRate_Object = MibTableColumn
wingCfgWlanQosWlanRlDownRate = _WingCfgWlanQosWlanRlDownRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 29),
    _WingCfgWlanQosWlanRlDownRate_Type()
)
wingCfgWlanQosWlanRlDownRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownRate.setUnits("kbps")


class _WingCfgWlanQosWlanRlDownBurstSize_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlDownBurstSize based on Unsigned32"""
    defaultValue = 320

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgWlanQosWlanRlDownBurstSize_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlDownBurstSize_Object = MibTableColumn
wingCfgWlanQosWlanRlDownBurstSize = _WingCfgWlanQosWlanRlDownBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 30),
    _WingCfgWlanQosWlanRlDownBurstSize_Type()
)
wingCfgWlanQosWlanRlDownBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownBurstSize.setUnits("kbytes")


class _WingCfgWlanQosWlanRlDownThreshBackground_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlDownThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlDownThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlDownThreshBackground_Object = MibTableColumn
wingCfgWlanQosWlanRlDownThreshBackground = _WingCfgWlanQosWlanRlDownThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 31),
    _WingCfgWlanQosWlanRlDownThreshBackground_Type()
)
wingCfgWlanQosWlanRlDownThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshBackground.setUnits("%")


class _WingCfgWlanQosWlanRlDownThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlDownThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlDownThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlDownThreshBestEffort_Object = MibTableColumn
wingCfgWlanQosWlanRlDownThreshBestEffort = _WingCfgWlanQosWlanRlDownThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 32),
    _WingCfgWlanQosWlanRlDownThreshBestEffort_Type()
)
wingCfgWlanQosWlanRlDownThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshBestEffort.setUnits("%")


class _WingCfgWlanQosWlanRlDownThreshVoice_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlDownThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlDownThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlDownThreshVoice_Object = MibTableColumn
wingCfgWlanQosWlanRlDownThreshVoice = _WingCfgWlanQosWlanRlDownThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 33),
    _WingCfgWlanQosWlanRlDownThreshVoice_Type()
)
wingCfgWlanQosWlanRlDownThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshVoice.setUnits("%")


class _WingCfgWlanQosWlanRlDownThreshVideo_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlDownThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlDownThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlDownThreshVideo_Object = MibTableColumn
wingCfgWlanQosWlanRlDownThreshVideo = _WingCfgWlanQosWlanRlDownThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 34),
    _WingCfgWlanQosWlanRlDownThreshVideo_Type()
)
wingCfgWlanQosWlanRlDownThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlDownThreshVideo.setUnits("%")


class _WingCfgWlanQosWlanRlUpEnable_Type(TruthValue):
    """Custom type wingCfgWlanQosWlanRlUpEnable based on TruthValue"""
    defaultValue = 2


_WingCfgWlanQosWlanRlUpEnable_Type.__name__ = "TruthValue"
_WingCfgWlanQosWlanRlUpEnable_Object = MibTableColumn
wingCfgWlanQosWlanRlUpEnable = _WingCfgWlanQosWlanRlUpEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 35),
    _WingCfgWlanQosWlanRlUpEnable_Type()
)
wingCfgWlanQosWlanRlUpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpEnable.setStatus("current")


class _WingCfgWlanQosWlanRlUpRate_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlUpRate based on Unsigned32"""
    defaultValue = 5000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgWlanQosWlanRlUpRate_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlUpRate_Object = MibTableColumn
wingCfgWlanQosWlanRlUpRate = _WingCfgWlanQosWlanRlUpRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 36),
    _WingCfgWlanQosWlanRlUpRate_Type()
)
wingCfgWlanQosWlanRlUpRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpRate.setUnits("kbps")


class _WingCfgWlanQosWlanRlUpBurstSize_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlUpBurstSize based on Unsigned32"""
    defaultValue = 320

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgWlanQosWlanRlUpBurstSize_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlUpBurstSize_Object = MibTableColumn
wingCfgWlanQosWlanRlUpBurstSize = _WingCfgWlanQosWlanRlUpBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 37),
    _WingCfgWlanQosWlanRlUpBurstSize_Type()
)
wingCfgWlanQosWlanRlUpBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpBurstSize.setUnits("kbytes")


class _WingCfgWlanQosWlanRlUpThreshBackground_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlUpThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlUpThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlUpThreshBackground_Object = MibTableColumn
wingCfgWlanQosWlanRlUpThreshBackground = _WingCfgWlanQosWlanRlUpThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 38),
    _WingCfgWlanQosWlanRlUpThreshBackground_Type()
)
wingCfgWlanQosWlanRlUpThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshBackground.setUnits("%")


class _WingCfgWlanQosWlanRlUpThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlUpThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlUpThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlUpThreshBestEffort_Object = MibTableColumn
wingCfgWlanQosWlanRlUpThreshBestEffort = _WingCfgWlanQosWlanRlUpThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 39),
    _WingCfgWlanQosWlanRlUpThreshBestEffort_Type()
)
wingCfgWlanQosWlanRlUpThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshBestEffort.setUnits("%")


class _WingCfgWlanQosWlanRlUpThreshVoice_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlUpThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlUpThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlUpThreshVoice_Object = MibTableColumn
wingCfgWlanQosWlanRlUpThreshVoice = _WingCfgWlanQosWlanRlUpThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 40),
    _WingCfgWlanQosWlanRlUpThreshVoice_Type()
)
wingCfgWlanQosWlanRlUpThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshVoice.setUnits("%")


class _WingCfgWlanQosWlanRlUpThreshVideo_Type(Unsigned32):
    """Custom type wingCfgWlanQosWlanRlUpThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosWlanRlUpThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgWlanQosWlanRlUpThreshVideo_Object = MibTableColumn
wingCfgWlanQosWlanRlUpThreshVideo = _WingCfgWlanQosWlanRlUpThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 41),
    _WingCfgWlanQosWlanRlUpThreshVideo_Type()
)
wingCfgWlanQosWlanRlUpThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosWlanRlUpThreshVideo.setUnits("%")


class _WingCfgWlanQosMuRlDownEnable_Type(TruthValue):
    """Custom type wingCfgWlanQosMuRlDownEnable based on TruthValue"""
    defaultValue = 2


_WingCfgWlanQosMuRlDownEnable_Type.__name__ = "TruthValue"
_WingCfgWlanQosMuRlDownEnable_Object = MibTableColumn
wingCfgWlanQosMuRlDownEnable = _WingCfgWlanQosMuRlDownEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 42),
    _WingCfgWlanQosMuRlDownEnable_Type()
)
wingCfgWlanQosMuRlDownEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownEnable.setStatus("current")


class _WingCfgWlanQosMuRlDownRate_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlDownRate based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgWlanQosMuRlDownRate_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlDownRate_Object = MibTableColumn
wingCfgWlanQosMuRlDownRate = _WingCfgWlanQosMuRlDownRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 43),
    _WingCfgWlanQosMuRlDownRate_Type()
)
wingCfgWlanQosMuRlDownRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownRate.setUnits("kbps")


class _WingCfgWlanQosMuRlDownBurstSize_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlDownBurstSize based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgWlanQosMuRlDownBurstSize_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlDownBurstSize_Object = MibTableColumn
wingCfgWlanQosMuRlDownBurstSize = _WingCfgWlanQosMuRlDownBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 44),
    _WingCfgWlanQosMuRlDownBurstSize_Type()
)
wingCfgWlanQosMuRlDownBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownBurstSize.setUnits("kbytes")


class _WingCfgWlanQosMuRlDownThreshBackground_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlDownThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlDownThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlDownThreshBackground_Object = MibTableColumn
wingCfgWlanQosMuRlDownThreshBackground = _WingCfgWlanQosMuRlDownThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 45),
    _WingCfgWlanQosMuRlDownThreshBackground_Type()
)
wingCfgWlanQosMuRlDownThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshBackground.setUnits("%")


class _WingCfgWlanQosMuRlDownThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlDownThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlDownThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlDownThreshBestEffort_Object = MibTableColumn
wingCfgWlanQosMuRlDownThreshBestEffort = _WingCfgWlanQosMuRlDownThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 46),
    _WingCfgWlanQosMuRlDownThreshBestEffort_Type()
)
wingCfgWlanQosMuRlDownThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshBestEffort.setUnits("%")


class _WingCfgWlanQosMuRlDownThreshVoice_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlDownThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlDownThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlDownThreshVoice_Object = MibTableColumn
wingCfgWlanQosMuRlDownThreshVoice = _WingCfgWlanQosMuRlDownThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 47),
    _WingCfgWlanQosMuRlDownThreshVoice_Type()
)
wingCfgWlanQosMuRlDownThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshVoice.setUnits("%")


class _WingCfgWlanQosMuRlDownThreshVideo_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlDownThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlDownThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlDownThreshVideo_Object = MibTableColumn
wingCfgWlanQosMuRlDownThreshVideo = _WingCfgWlanQosMuRlDownThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 48),
    _WingCfgWlanQosMuRlDownThreshVideo_Type()
)
wingCfgWlanQosMuRlDownThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlDownThreshVideo.setUnits("%")


class _WingCfgWlanQosMuRlUpEnable_Type(TruthValue):
    """Custom type wingCfgWlanQosMuRlUpEnable based on TruthValue"""
    defaultValue = 2


_WingCfgWlanQosMuRlUpEnable_Type.__name__ = "TruthValue"
_WingCfgWlanQosMuRlUpEnable_Object = MibTableColumn
wingCfgWlanQosMuRlUpEnable = _WingCfgWlanQosMuRlUpEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 49),
    _WingCfgWlanQosMuRlUpEnable_Type()
)
wingCfgWlanQosMuRlUpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpEnable.setStatus("current")


class _WingCfgWlanQosMuRlUpRate_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlUpRate based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgWlanQosMuRlUpRate_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlUpRate_Object = MibTableColumn
wingCfgWlanQosMuRlUpRate = _WingCfgWlanQosMuRlUpRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 50),
    _WingCfgWlanQosMuRlUpRate_Type()
)
wingCfgWlanQosMuRlUpRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpRate.setUnits("kbps")


class _WingCfgWlanQosMuRlUpBurstSize_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlUpBurstSize based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgWlanQosMuRlUpBurstSize_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlUpBurstSize_Object = MibTableColumn
wingCfgWlanQosMuRlUpBurstSize = _WingCfgWlanQosMuRlUpBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 51),
    _WingCfgWlanQosMuRlUpBurstSize_Type()
)
wingCfgWlanQosMuRlUpBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpBurstSize.setUnits("kbytes")


class _WingCfgWlanQosMuRlUpThreshBackground_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlUpThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlUpThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlUpThreshBackground_Object = MibTableColumn
wingCfgWlanQosMuRlUpThreshBackground = _WingCfgWlanQosMuRlUpThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 52),
    _WingCfgWlanQosMuRlUpThreshBackground_Type()
)
wingCfgWlanQosMuRlUpThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshBackground.setUnits("%")


class _WingCfgWlanQosMuRlUpThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlUpThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlUpThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlUpThreshBestEffort_Object = MibTableColumn
wingCfgWlanQosMuRlUpThreshBestEffort = _WingCfgWlanQosMuRlUpThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 53),
    _WingCfgWlanQosMuRlUpThreshBestEffort_Type()
)
wingCfgWlanQosMuRlUpThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshBestEffort.setUnits("%")


class _WingCfgWlanQosMuRlUpThreshVoice_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlUpThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlUpThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlUpThreshVoice_Object = MibTableColumn
wingCfgWlanQosMuRlUpThreshVoice = _WingCfgWlanQosMuRlUpThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 54),
    _WingCfgWlanQosMuRlUpThreshVoice_Type()
)
wingCfgWlanQosMuRlUpThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshVoice.setUnits("%")


class _WingCfgWlanQosMuRlUpThreshVideo_Type(Unsigned32):
    """Custom type wingCfgWlanQosMuRlUpThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgWlanQosMuRlUpThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgWlanQosMuRlUpThreshVideo_Object = MibTableColumn
wingCfgWlanQosMuRlUpThreshVideo = _WingCfgWlanQosMuRlUpThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 55),
    _WingCfgWlanQosMuRlUpThreshVideo_Type()
)
wingCfgWlanQosMuRlUpThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWlanQosMuRlUpThreshVideo.setUnits("%")


class _WingCfgWlanQosQosTrustDscp_Type(TruthValue):
    """Custom type wingCfgWlanQosQosTrustDscp based on TruthValue"""
    defaultValue = 1


_WingCfgWlanQosQosTrustDscp_Type.__name__ = "TruthValue"
_WingCfgWlanQosQosTrustDscp_Object = MibTableColumn
wingCfgWlanQosQosTrustDscp = _WingCfgWlanQosQosTrustDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 56),
    _WingCfgWlanQosQosTrustDscp_Type()
)
wingCfgWlanQosQosTrustDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosQosTrustDscp.setStatus("current")


class _WingCfgWlanQosQosTrustWmm_Type(TruthValue):
    """Custom type wingCfgWlanQosQosTrustWmm based on TruthValue"""
    defaultValue = 1


_WingCfgWlanQosQosTrustWmm_Type.__name__ = "TruthValue"
_WingCfgWlanQosQosTrustWmm_Object = MibTableColumn
wingCfgWlanQosQosTrustWmm = _WingCfgWlanQosQosTrustWmm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 1, 1, 57),
    _WingCfgWlanQosQosTrustWmm_Type()
)
wingCfgWlanQosQosTrustWmm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosQosTrustWmm.setStatus("current")
_WingCfgWlanQosMcastStreamTable_Object = MibTable
wingCfgWlanQosMcastStreamTable = _WingCfgWlanQosMcastStreamTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 2)
)
if mibBuilder.loadTexts:
    wingCfgWlanQosMcastStreamTable.setStatus("current")
_WingCfgWlanQosMcastStreamEntry_Object = MibTableRow
wingCfgWlanQosMcastStreamEntry = _WingCfgWlanQosMcastStreamEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 2, 1)
)
wingCfgWlanQosMcastStreamEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWlanQosName"),
    (0, "WING-MIB", "wingCfgWlanQosMcastStreamAddr"),
)
if mibBuilder.loadTexts:
    wingCfgWlanQosMcastStreamEntry.setStatus("current")
_WingCfgWlanQosMcastStreamAddr_Type = WingIdentifier
_WingCfgWlanQosMcastStreamAddr_Object = MibTableColumn
wingCfgWlanQosMcastStreamAddr = _WingCfgWlanQosMcastStreamAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 2, 1, 1),
    _WingCfgWlanQosMcastStreamAddr_Type()
)
wingCfgWlanQosMcastStreamAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgWlanQosMcastStreamAddr.setStatus("current")


class _WingCfgWlanQosMcastStreamPriority_Type(DisplayString):
    """Custom type wingCfgWlanQosMcastStreamPriority based on DisplayString"""
    defaultValue = OctetString("trust")


_WingCfgWlanQosMcastStreamPriority_Type.__name__ = "DisplayString"
_WingCfgWlanQosMcastStreamPriority_Object = MibTableColumn
wingCfgWlanQosMcastStreamPriority = _WingCfgWlanQosMcastStreamPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 5, 2, 1, 3),
    _WingCfgWlanQosMcastStreamPriority_Type()
)
wingCfgWlanQosMcastStreamPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWlanQosMcastStreamPriority.setStatus("current")
_WingCfgRadioQos_ObjectIdentity = ObjectIdentity
wingCfgRadioQos = _WingCfgRadioQos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6)
)
_WingCfgRadioQosTable_Object = MibTable
wingCfgRadioQosTable = _WingCfgRadioQosTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1)
)
if mibBuilder.loadTexts:
    wingCfgRadioQosTable.setStatus("current")
_WingCfgRadioQosEntry_Object = MibTableRow
wingCfgRadioQosEntry = _WingCfgRadioQosEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1)
)
wingCfgRadioQosEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRadioQosName"),
)
if mibBuilder.loadTexts:
    wingCfgRadioQosEntry.setStatus("current")
_WingCfgRadioQosName_Type = WingIdentifier
_WingCfgRadioQosName_Object = MibTableColumn
wingCfgRadioQosName = _WingCfgRadioQosName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 1),
    _WingCfgRadioQosName_Type()
)
wingCfgRadioQosName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRadioQosName.setStatus("current")


class _WingCfgRadioQosWmmBestEffortTxopLimit_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBestEffortTxopLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgRadioQosWmmBestEffortTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBestEffortTxopLimit_Object = MibTableColumn
wingCfgRadioQosWmmBestEffortTxopLimit = _WingCfgRadioQosWmmBestEffortTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 3),
    _WingCfgRadioQosWmmBestEffortTxopLimit_Type()
)
wingCfgRadioQosWmmBestEffortTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBestEffortTxopLimit.setStatus("current")


class _WingCfgRadioQosWmmBestEffortAifsn_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBestEffortAifsn based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgRadioQosWmmBestEffortAifsn_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBestEffortAifsn_Object = MibTableColumn
wingCfgRadioQosWmmBestEffortAifsn = _WingCfgRadioQosWmmBestEffortAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 4),
    _WingCfgRadioQosWmmBestEffortAifsn_Type()
)
wingCfgRadioQosWmmBestEffortAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBestEffortAifsn.setStatus("current")


class _WingCfgRadioQosWmmBestEffortCwMin_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBestEffortCwMin based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmBestEffortCwMin_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBestEffortCwMin_Object = MibTableColumn
wingCfgRadioQosWmmBestEffortCwMin = _WingCfgRadioQosWmmBestEffortCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 5),
    _WingCfgRadioQosWmmBestEffortCwMin_Type()
)
wingCfgRadioQosWmmBestEffortCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBestEffortCwMin.setStatus("current")


class _WingCfgRadioQosWmmBestEffortCwMax_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBestEffortCwMax based on Unsigned32"""
    defaultValue = 6

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmBestEffortCwMax_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBestEffortCwMax_Object = MibTableColumn
wingCfgRadioQosWmmBestEffortCwMax = _WingCfgRadioQosWmmBestEffortCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 6),
    _WingCfgRadioQosWmmBestEffortCwMax_Type()
)
wingCfgRadioQosWmmBestEffortCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBestEffortCwMax.setStatus("current")


class _WingCfgRadioQosWmmBackgroundTxopLimit_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBackgroundTxopLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgRadioQosWmmBackgroundTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBackgroundTxopLimit_Object = MibTableColumn
wingCfgRadioQosWmmBackgroundTxopLimit = _WingCfgRadioQosWmmBackgroundTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 7),
    _WingCfgRadioQosWmmBackgroundTxopLimit_Type()
)
wingCfgRadioQosWmmBackgroundTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBackgroundTxopLimit.setStatus("current")


class _WingCfgRadioQosWmmBackgroundAifsn_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBackgroundAifsn based on Unsigned32"""
    defaultValue = 7

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgRadioQosWmmBackgroundAifsn_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBackgroundAifsn_Object = MibTableColumn
wingCfgRadioQosWmmBackgroundAifsn = _WingCfgRadioQosWmmBackgroundAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 8),
    _WingCfgRadioQosWmmBackgroundAifsn_Type()
)
wingCfgRadioQosWmmBackgroundAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBackgroundAifsn.setStatus("current")


class _WingCfgRadioQosWmmBackgroundCwMin_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBackgroundCwMin based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmBackgroundCwMin_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBackgroundCwMin_Object = MibTableColumn
wingCfgRadioQosWmmBackgroundCwMin = _WingCfgRadioQosWmmBackgroundCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 9),
    _WingCfgRadioQosWmmBackgroundCwMin_Type()
)
wingCfgRadioQosWmmBackgroundCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBackgroundCwMin.setStatus("current")


class _WingCfgRadioQosWmmBackgroundCwMax_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmBackgroundCwMax based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmBackgroundCwMax_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmBackgroundCwMax_Object = MibTableColumn
wingCfgRadioQosWmmBackgroundCwMax = _WingCfgRadioQosWmmBackgroundCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 10),
    _WingCfgRadioQosWmmBackgroundCwMax_Type()
)
wingCfgRadioQosWmmBackgroundCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmBackgroundCwMax.setStatus("current")


class _WingCfgRadioQosWmmVideoTxopLimit_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVideoTxopLimit based on Unsigned32"""
    defaultValue = 94

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgRadioQosWmmVideoTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVideoTxopLimit_Object = MibTableColumn
wingCfgRadioQosWmmVideoTxopLimit = _WingCfgRadioQosWmmVideoTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 11),
    _WingCfgRadioQosWmmVideoTxopLimit_Type()
)
wingCfgRadioQosWmmVideoTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVideoTxopLimit.setStatus("current")


class _WingCfgRadioQosWmmVideoAifsn_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVideoAifsn based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgRadioQosWmmVideoAifsn_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVideoAifsn_Object = MibTableColumn
wingCfgRadioQosWmmVideoAifsn = _WingCfgRadioQosWmmVideoAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 12),
    _WingCfgRadioQosWmmVideoAifsn_Type()
)
wingCfgRadioQosWmmVideoAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVideoAifsn.setStatus("current")


class _WingCfgRadioQosWmmVideoCwMin_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVideoCwMin based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmVideoCwMin_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVideoCwMin_Object = MibTableColumn
wingCfgRadioQosWmmVideoCwMin = _WingCfgRadioQosWmmVideoCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 13),
    _WingCfgRadioQosWmmVideoCwMin_Type()
)
wingCfgRadioQosWmmVideoCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVideoCwMin.setStatus("current")


class _WingCfgRadioQosWmmVideoCwMax_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVideoCwMax based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmVideoCwMax_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVideoCwMax_Object = MibTableColumn
wingCfgRadioQosWmmVideoCwMax = _WingCfgRadioQosWmmVideoCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 14),
    _WingCfgRadioQosWmmVideoCwMax_Type()
)
wingCfgRadioQosWmmVideoCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVideoCwMax.setStatus("current")


class _WingCfgRadioQosWmmVoiceTxopLimit_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVoiceTxopLimit based on Unsigned32"""
    defaultValue = 47

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgRadioQosWmmVoiceTxopLimit_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVoiceTxopLimit_Object = MibTableColumn
wingCfgRadioQosWmmVoiceTxopLimit = _WingCfgRadioQosWmmVoiceTxopLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 15),
    _WingCfgRadioQosWmmVoiceTxopLimit_Type()
)
wingCfgRadioQosWmmVoiceTxopLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVoiceTxopLimit.setStatus("current")


class _WingCfgRadioQosWmmVoiceAifsn_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVoiceAifsn based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgRadioQosWmmVoiceAifsn_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVoiceAifsn_Object = MibTableColumn
wingCfgRadioQosWmmVoiceAifsn = _WingCfgRadioQosWmmVoiceAifsn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 16),
    _WingCfgRadioQosWmmVoiceAifsn_Type()
)
wingCfgRadioQosWmmVoiceAifsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVoiceAifsn.setStatus("current")


class _WingCfgRadioQosWmmVoiceCwMin_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVoiceCwMin based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmVoiceCwMin_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVoiceCwMin_Object = MibTableColumn
wingCfgRadioQosWmmVoiceCwMin = _WingCfgRadioQosWmmVoiceCwMin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 17),
    _WingCfgRadioQosWmmVoiceCwMin_Type()
)
wingCfgRadioQosWmmVoiceCwMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVoiceCwMin.setStatus("current")


class _WingCfgRadioQosWmmVoiceCwMax_Type(Unsigned32):
    """Custom type wingCfgRadioQosWmmVoiceCwMax based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WingCfgRadioQosWmmVoiceCwMax_Type.__name__ = "Unsigned32"
_WingCfgRadioQosWmmVoiceCwMax_Object = MibTableColumn
wingCfgRadioQosWmmVoiceCwMax = _WingCfgRadioQosWmmVoiceCwMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 18),
    _WingCfgRadioQosWmmVoiceCwMax_Type()
)
wingCfgRadioQosWmmVoiceCwMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosWmmVoiceCwMax.setStatus("current")


class _WingCfgRadioQosAdmCtrlFirewallDetectedTraffic_Type(TruthValue):
    """Custom type wingCfgRadioQosAdmCtrlFirewallDetectedTraffic based on TruthValue"""
    defaultValue = 1


_WingCfgRadioQosAdmCtrlFirewallDetectedTraffic_Type.__name__ = "TruthValue"
_WingCfgRadioQosAdmCtrlFirewallDetectedTraffic_Object = MibTableColumn
wingCfgRadioQosAdmCtrlFirewallDetectedTraffic = _WingCfgRadioQosAdmCtrlFirewallDetectedTraffic_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 19),
    _WingCfgRadioQosAdmCtrlFirewallDetectedTraffic_Type()
)
wingCfgRadioQosAdmCtrlFirewallDetectedTraffic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlFirewallDetectedTraffic.setStatus("current")


class _WingCfgRadioQosAdmCtrlImplicitTspec_Type(TruthValue):
    """Custom type wingCfgRadioQosAdmCtrlImplicitTspec based on TruthValue"""
    defaultValue = 1


_WingCfgRadioQosAdmCtrlImplicitTspec_Type.__name__ = "TruthValue"
_WingCfgRadioQosAdmCtrlImplicitTspec_Object = MibTableColumn
wingCfgRadioQosAdmCtrlImplicitTspec = _WingCfgRadioQosAdmCtrlImplicitTspec_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 20),
    _WingCfgRadioQosAdmCtrlImplicitTspec_Type()
)
wingCfgRadioQosAdmCtrlImplicitTspec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlImplicitTspec.setStatus("current")


class _WingCfgRadioQosAdmCtrlVoiceEnable_Type(TruthValue):
    """Custom type wingCfgRadioQosAdmCtrlVoiceEnable based on TruthValue"""
    defaultValue = 2


_WingCfgRadioQosAdmCtrlVoiceEnable_Type.__name__ = "TruthValue"
_WingCfgRadioQosAdmCtrlVoiceEnable_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVoiceEnable = _WingCfgRadioQosAdmCtrlVoiceEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 21),
    _WingCfgRadioQosAdmCtrlVoiceEnable_Type()
)
wingCfgRadioQosAdmCtrlVoiceEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVoiceEnable.setStatus("current")


class _WingCfgRadioQosAdmCtrlVoiceMaxClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVoiceMaxClients based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlVoiceMaxClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVoiceMaxClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVoiceMaxClients = _WingCfgRadioQosAdmCtrlVoiceMaxClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 22),
    _WingCfgRadioQosAdmCtrlVoiceMaxClients_Type()
)
wingCfgRadioQosAdmCtrlVoiceMaxClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVoiceMaxClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlVoiceMaxRoamedClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVoiceMaxRoamedClients based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlVoiceMaxRoamedClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVoiceMaxRoamedClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVoiceMaxRoamedClients = _WingCfgRadioQosAdmCtrlVoiceMaxRoamedClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 23),
    _WingCfgRadioQosAdmCtrlVoiceMaxRoamedClients_Type()
)
wingCfgRadioQosAdmCtrlVoiceMaxRoamedClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVoiceMaxRoamedClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent based on Unsigned32"""
    defaultValue = 75

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent = _WingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 24),
    _WingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent_Type()
)
wingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent.setStatus("current")


class _WingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent = _WingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 25),
    _WingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent_Type()
)
wingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent.setStatus("current")


class _WingCfgRadioQosAdmCtrlVideoEnable_Type(TruthValue):
    """Custom type wingCfgRadioQosAdmCtrlVideoEnable based on TruthValue"""
    defaultValue = 2


_WingCfgRadioQosAdmCtrlVideoEnable_Type.__name__ = "TruthValue"
_WingCfgRadioQosAdmCtrlVideoEnable_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVideoEnable = _WingCfgRadioQosAdmCtrlVideoEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 26),
    _WingCfgRadioQosAdmCtrlVideoEnable_Type()
)
wingCfgRadioQosAdmCtrlVideoEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVideoEnable.setStatus("current")


class _WingCfgRadioQosAdmCtrlVideoMaxClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVideoMaxClients based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlVideoMaxClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVideoMaxClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVideoMaxClients = _WingCfgRadioQosAdmCtrlVideoMaxClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 27),
    _WingCfgRadioQosAdmCtrlVideoMaxClients_Type()
)
wingCfgRadioQosAdmCtrlVideoMaxClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVideoMaxClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlVideoMaxRoamedClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVideoMaxRoamedClients based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlVideoMaxRoamedClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVideoMaxRoamedClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVideoMaxRoamedClients = _WingCfgRadioQosAdmCtrlVideoMaxRoamedClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 28),
    _WingCfgRadioQosAdmCtrlVideoMaxRoamedClients_Type()
)
wingCfgRadioQosAdmCtrlVideoMaxRoamedClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVideoMaxRoamedClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlVideoMaxAirtimePercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVideoMaxAirtimePercent based on Unsigned32"""
    defaultValue = 75

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlVideoMaxAirtimePercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVideoMaxAirtimePercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVideoMaxAirtimePercent = _WingCfgRadioQosAdmCtrlVideoMaxAirtimePercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 29),
    _WingCfgRadioQosAdmCtrlVideoMaxAirtimePercent_Type()
)
wingCfgRadioQosAdmCtrlVideoMaxAirtimePercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVideoMaxAirtimePercent.setStatus("current")


class _WingCfgRadioQosAdmCtrlVideoReservedForRoamPercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlVideoReservedForRoamPercent based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlVideoReservedForRoamPercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlVideoReservedForRoamPercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlVideoReservedForRoamPercent = _WingCfgRadioQosAdmCtrlVideoReservedForRoamPercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 30),
    _WingCfgRadioQosAdmCtrlVideoReservedForRoamPercent_Type()
)
wingCfgRadioQosAdmCtrlVideoReservedForRoamPercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlVideoReservedForRoamPercent.setStatus("current")


class _WingCfgRadioQosAdmCtrlBestEffortEnable_Type(TruthValue):
    """Custom type wingCfgRadioQosAdmCtrlBestEffortEnable based on TruthValue"""
    defaultValue = 2


_WingCfgRadioQosAdmCtrlBestEffortEnable_Type.__name__ = "TruthValue"
_WingCfgRadioQosAdmCtrlBestEffortEnable_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBestEffortEnable = _WingCfgRadioQosAdmCtrlBestEffortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 31),
    _WingCfgRadioQosAdmCtrlBestEffortEnable_Type()
)
wingCfgRadioQosAdmCtrlBestEffortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBestEffortEnable.setStatus("current")


class _WingCfgRadioQosAdmCtrlBestEffortMaxClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBestEffortMaxClients based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlBestEffortMaxClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBestEffortMaxClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBestEffortMaxClients = _WingCfgRadioQosAdmCtrlBestEffortMaxClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 32),
    _WingCfgRadioQosAdmCtrlBestEffortMaxClients_Type()
)
wingCfgRadioQosAdmCtrlBestEffortMaxClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBestEffortMaxClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients = _WingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 33),
    _WingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients_Type()
)
wingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent based on Unsigned32"""
    defaultValue = 75

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent = _WingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 34),
    _WingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent_Type()
)
wingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent.setStatus("current")


class _WingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent = _WingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 35),
    _WingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent_Type()
)
wingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent.setStatus("current")


class _WingCfgRadioQosAdmCtrlBackgroundEnable_Type(TruthValue):
    """Custom type wingCfgRadioQosAdmCtrlBackgroundEnable based on TruthValue"""
    defaultValue = 2


_WingCfgRadioQosAdmCtrlBackgroundEnable_Type.__name__ = "TruthValue"
_WingCfgRadioQosAdmCtrlBackgroundEnable_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBackgroundEnable = _WingCfgRadioQosAdmCtrlBackgroundEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 36),
    _WingCfgRadioQosAdmCtrlBackgroundEnable_Type()
)
wingCfgRadioQosAdmCtrlBackgroundEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBackgroundEnable.setStatus("current")


class _WingCfgRadioQosAdmCtrlBackgroundMaxClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBackgroundMaxClients based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlBackgroundMaxClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBackgroundMaxClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBackgroundMaxClients = _WingCfgRadioQosAdmCtrlBackgroundMaxClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 37),
    _WingCfgRadioQosAdmCtrlBackgroundMaxClients_Type()
)
wingCfgRadioQosAdmCtrlBackgroundMaxClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBackgroundMaxClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients = _WingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 38),
    _WingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients_Type()
)
wingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients.setStatus("current")


class _WingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent based on Unsigned32"""
    defaultValue = 75

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent = _WingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 39),
    _WingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent_Type()
)
wingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent.setStatus("current")


class _WingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent_Type(Unsigned32):
    """Custom type wingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 150),
    )


_WingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent_Object = MibTableColumn
wingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent = _WingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 40),
    _WingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent_Type()
)
wingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent.setStatus("current")


class _WingCfgRadioQosAccelMcastMaxStreams_Type(Unsigned32):
    """Custom type wingCfgRadioQosAccelMcastMaxStreams based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgRadioQosAccelMcastMaxStreams_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAccelMcastMaxStreams_Object = MibTableColumn
wingCfgRadioQosAccelMcastMaxStreams = _WingCfgRadioQosAccelMcastMaxStreams_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 41),
    _WingCfgRadioQosAccelMcastMaxStreams_Type()
)
wingCfgRadioQosAccelMcastMaxStreams.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAccelMcastMaxStreams.setStatus("current")


class _WingCfgRadioQosAccelMcastOverflowPolicy_Type(DisplayString):
    """Custom type wingCfgRadioQosAccelMcastOverflowPolicy based on DisplayString"""
    defaultValue = OctetString("reject")


_WingCfgRadioQosAccelMcastOverflowPolicy_Type.__name__ = "DisplayString"
_WingCfgRadioQosAccelMcastOverflowPolicy_Object = MibTableColumn
wingCfgRadioQosAccelMcastOverflowPolicy = _WingCfgRadioQosAccelMcastOverflowPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 42),
    _WingCfgRadioQosAccelMcastOverflowPolicy_Type()
)
wingCfgRadioQosAccelMcastOverflowPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAccelMcastOverflowPolicy.setStatus("current")


class _WingCfgRadioQosAccelMcastMaxClientStreams_Type(Unsigned32):
    """Custom type wingCfgRadioQosAccelMcastMaxClientStreams based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WingCfgRadioQosAccelMcastMaxClientStreams_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAccelMcastMaxClientStreams_Object = MibTableColumn
wingCfgRadioQosAccelMcastMaxClientStreams = _WingCfgRadioQosAccelMcastMaxClientStreams_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 43),
    _WingCfgRadioQosAccelMcastMaxClientStreams_Type()
)
wingCfgRadioQosAccelMcastMaxClientStreams.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAccelMcastMaxClientStreams.setStatus("current")


class _WingCfgRadioQosAccelMcastStreamThreshold_Type(Unsigned32):
    """Custom type wingCfgRadioQosAccelMcastStreamThreshold based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 500),
    )


_WingCfgRadioQosAccelMcastStreamThreshold_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAccelMcastStreamThreshold_Object = MibTableColumn
wingCfgRadioQosAccelMcastStreamThreshold = _WingCfgRadioQosAccelMcastStreamThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 44),
    _WingCfgRadioQosAccelMcastStreamThreshold_Type()
)
wingCfgRadioQosAccelMcastStreamThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAccelMcastStreamThreshold.setStatus("current")


class _WingCfgRadioQosAccelMcastClientTimeout_Type(Unsigned32):
    """Custom type wingCfgRadioQosAccelMcastClientTimeout based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 6000),
    )


_WingCfgRadioQosAccelMcastClientTimeout_Type.__name__ = "Unsigned32"
_WingCfgRadioQosAccelMcastClientTimeout_Object = MibTableColumn
wingCfgRadioQosAccelMcastClientTimeout = _WingCfgRadioQosAccelMcastClientTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 6, 1, 1, 45),
    _WingCfgRadioQosAccelMcastClientTimeout_Type()
)
wingCfgRadioQosAccelMcastClientTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRadioQosAccelMcastClientTimeout.setStatus("current")
_WingCfgAaa_ObjectIdentity = ObjectIdentity
wingCfgAaa = _WingCfgAaa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7)
)
_WingCfgAaaTable_Object = MibTable
wingCfgAaaTable = _WingCfgAaaTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1)
)
if mibBuilder.loadTexts:
    wingCfgAaaTable.setStatus("current")
_WingCfgAaaEntry_Object = MibTableRow
wingCfgAaaEntry = _WingCfgAaaEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1)
)
wingCfgAaaEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAaaName"),
)
if mibBuilder.loadTexts:
    wingCfgAaaEntry.setStatus("current")
_WingCfgAaaName_Type = WingIdentifier
_WingCfgAaaName_Object = MibTableColumn
wingCfgAaaName = _WingCfgAaaName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 1),
    _WingCfgAaaName_Type()
)
wingCfgAaaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAaaName.setStatus("current")


class _WingCfgAaaServerPoolingMode_Type(DisplayString):
    """Custom type wingCfgAaaServerPoolingMode based on DisplayString"""
    defaultValue = OctetString("failover")


_WingCfgAaaServerPoolingMode_Type.__name__ = "DisplayString"
_WingCfgAaaServerPoolingMode_Object = MibTableColumn
wingCfgAaaServerPoolingMode = _WingCfgAaaServerPoolingMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 3),
    _WingCfgAaaServerPoolingMode_Type()
)
wingCfgAaaServerPoolingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaServerPoolingMode.setStatus("current")


class _WingCfgAaaMacAddrFormat_Type(DisplayString):
    """Custom type wingCfgAaaMacAddrFormat based on DisplayString"""
    defaultValue = OctetString("pair-hyphen")


_WingCfgAaaMacAddrFormat_Type.__name__ = "DisplayString"
_WingCfgAaaMacAddrFormat_Object = MibTableColumn
wingCfgAaaMacAddrFormat = _WingCfgAaaMacAddrFormat_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 4),
    _WingCfgAaaMacAddrFormat_Type()
)
wingCfgAaaMacAddrFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaMacAddrFormat.setStatus("current")


class _WingCfgAaaMacAddrCase_Type(DisplayString):
    """Custom type wingCfgAaaMacAddrCase based on DisplayString"""
    defaultValue = OctetString("upper")


_WingCfgAaaMacAddrCase_Type.__name__ = "DisplayString"
_WingCfgAaaMacAddrCase_Object = MibTableColumn
wingCfgAaaMacAddrCase = _WingCfgAaaMacAddrCase_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 5),
    _WingCfgAaaMacAddrCase_Type()
)
wingCfgAaaMacAddrCase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaMacAddrCase.setStatus("current")


class _WingCfgAaaMacAddrAttributes_Type(DisplayString):
    """Custom type wingCfgAaaMacAddrAttributes based on DisplayString"""
    defaultValue = OctetString("username-password")


_WingCfgAaaMacAddrAttributes_Type.__name__ = "DisplayString"
_WingCfgAaaMacAddrAttributes_Object = MibTableColumn
wingCfgAaaMacAddrAttributes = _WingCfgAaaMacAddrAttributes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 6),
    _WingCfgAaaMacAddrAttributes_Type()
)
wingCfgAaaMacAddrAttributes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaMacAddrAttributes.setStatus("current")


class _WingCfgAaaEapClientTimeout_Type(Unsigned32):
    """Custom type wingCfgAaaEapClientTimeout based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_WingCfgAaaEapClientTimeout_Type.__name__ = "Unsigned32"
_WingCfgAaaEapClientTimeout_Object = MibTableColumn
wingCfgAaaEapClientTimeout = _WingCfgAaaEapClientTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 7),
    _WingCfgAaaEapClientTimeout_Type()
)
wingCfgAaaEapClientTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaEapClientTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgAaaEapClientTimeout.setUnits("seconds")


class _WingCfgAaaEapClientAttempts_Type(Unsigned32):
    """Custom type wingCfgAaaEapClientAttempts based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgAaaEapClientAttempts_Type.__name__ = "Unsigned32"
_WingCfgAaaEapClientAttempts_Object = MibTableColumn
wingCfgAaaEapClientAttempts = _WingCfgAaaEapClientAttempts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 8),
    _WingCfgAaaEapClientAttempts_Type()
)
wingCfgAaaEapClientAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaEapClientAttempts.setStatus("current")


class _WingCfgAaaEapClientRetryFactor_Type(Unsigned32):
    """Custom type wingCfgAaaEapClientRetryFactor based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 200),
    )


_WingCfgAaaEapClientRetryFactor_Type.__name__ = "Unsigned32"
_WingCfgAaaEapClientRetryFactor_Object = MibTableColumn
wingCfgAaaEapClientRetryFactor = _WingCfgAaaEapClientRetryFactor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 9),
    _WingCfgAaaEapClientRetryFactor_Type()
)
wingCfgAaaEapClientRetryFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaEapClientRetryFactor.setStatus("current")


class _WingCfgAaaEapClientIdReqTimeout_Type(Unsigned32):
    """Custom type wingCfgAaaEapClientIdReqTimeout based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_WingCfgAaaEapClientIdReqTimeout_Type.__name__ = "Unsigned32"
_WingCfgAaaEapClientIdReqTimeout_Object = MibTableColumn
wingCfgAaaEapClientIdReqTimeout = _WingCfgAaaEapClientIdReqTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 10),
    _WingCfgAaaEapClientIdReqTimeout_Type()
)
wingCfgAaaEapClientIdReqTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaEapClientIdReqTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgAaaEapClientIdReqTimeout.setUnits("seconds")


class _WingCfgAaaAuthProtocol_Type(DisplayString):
    """Custom type wingCfgAaaAuthProtocol based on DisplayString"""
    defaultValue = OctetString("pap")


_WingCfgAaaAuthProtocol_Type.__name__ = "DisplayString"
_WingCfgAaaAuthProtocol_Object = MibTableColumn
wingCfgAaaAuthProtocol = _WingCfgAaaAuthProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 11),
    _WingCfgAaaAuthProtocol_Type()
)
wingCfgAaaAuthProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthProtocol.setStatus("current")


class _WingCfgAaaAccountingType_Type(DisplayString):
    """Custom type wingCfgAaaAccountingType based on DisplayString"""
    defaultValue = OctetString("start-stop")


_WingCfgAaaAccountingType_Type.__name__ = "DisplayString"
_WingCfgAaaAccountingType_Object = MibTableColumn
wingCfgAaaAccountingType = _WingCfgAaaAccountingType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 12),
    _WingCfgAaaAccountingType_Type()
)
wingCfgAaaAccountingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAccountingType.setStatus("current")


class _WingCfgAaaInterimAccountingInterval_Type(Unsigned32):
    """Custom type wingCfgAaaInterimAccountingInterval based on Unsigned32"""
    defaultValue = 1800

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 3600),
    )


_WingCfgAaaInterimAccountingInterval_Type.__name__ = "Unsigned32"
_WingCfgAaaInterimAccountingInterval_Object = MibTableColumn
wingCfgAaaInterimAccountingInterval = _WingCfgAaaInterimAccountingInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 13),
    _WingCfgAaaInterimAccountingInterval_Type()
)
wingCfgAaaInterimAccountingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaInterimAccountingInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgAaaInterimAccountingInterval.setUnits("seconds")
_WingCfgAaaNacList_Type = WingIdentifier
_WingCfgAaaNacList_Object = MibTableColumn
wingCfgAaaNacList = _WingCfgAaaNacList_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 1, 1, 14),
    _WingCfgAaaNacList_Type()
)
wingCfgAaaNacList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaNacList.setStatus("current")
_WingCfgAaaAuthSrvrTable_Object = MibTable
wingCfgAaaAuthSrvrTable = _WingCfgAaaAuthSrvrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2)
)
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrTable.setStatus("current")
_WingCfgAaaAuthSrvrEntry_Object = MibTableRow
wingCfgAaaAuthSrvrEntry = _WingCfgAaaAuthSrvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1)
)
wingCfgAaaAuthSrvrEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAaaName"),
    (0, "WING-MIB", "wingCfgAaaAuthSrvrIdx"),
)
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrEntry.setStatus("current")


class _WingCfgAaaAuthSrvrIdx_Type(Unsigned32):
    """Custom type wingCfgAaaAuthSrvrIdx based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WingCfgAaaAuthSrvrIdx_Type.__name__ = "Unsigned32"
_WingCfgAaaAuthSrvrIdx_Object = MibTableColumn
wingCfgAaaAuthSrvrIdx = _WingCfgAaaAuthSrvrIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 1),
    _WingCfgAaaAuthSrvrIdx_Type()
)
wingCfgAaaAuthSrvrIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrIdx.setStatus("current")


class _WingCfgAaaAuthSrvrType_Type(DisplayString):
    """Custom type wingCfgAaaAuthSrvrType based on DisplayString"""
    defaultValue = OctetString("host")


_WingCfgAaaAuthSrvrType_Type.__name__ = "DisplayString"
_WingCfgAaaAuthSrvrType_Object = MibTableColumn
wingCfgAaaAuthSrvrType = _WingCfgAaaAuthSrvrType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 3),
    _WingCfgAaaAuthSrvrType_Type()
)
wingCfgAaaAuthSrvrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrType.setStatus("current")
_WingCfgAaaAuthSrvrHost_Type = DisplayString
_WingCfgAaaAuthSrvrHost_Object = MibTableColumn
wingCfgAaaAuthSrvrHost = _WingCfgAaaAuthSrvrHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 4),
    _WingCfgAaaAuthSrvrHost_Type()
)
wingCfgAaaAuthSrvrHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrHost.setStatus("current")


class _WingCfgAaaAuthSrvrSecret_Type(DisplayString):
    """Custom type wingCfgAaaAuthSrvrSecret based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_WingCfgAaaAuthSrvrSecret_Type.__name__ = "DisplayString"
_WingCfgAaaAuthSrvrSecret_Object = MibTableColumn
wingCfgAaaAuthSrvrSecret = _WingCfgAaaAuthSrvrSecret_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 5),
    _WingCfgAaaAuthSrvrSecret_Type()
)
wingCfgAaaAuthSrvrSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrSecret.setStatus("current")


class _WingCfgAaaAuthSrvrPort_Type(Unsigned32):
    """Custom type wingCfgAaaAuthSrvrPort based on Unsigned32"""
    defaultValue = 1812

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgAaaAuthSrvrPort_Type.__name__ = "Unsigned32"
_WingCfgAaaAuthSrvrPort_Object = MibTableColumn
wingCfgAaaAuthSrvrPort = _WingCfgAaaAuthSrvrPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 6),
    _WingCfgAaaAuthSrvrPort_Type()
)
wingCfgAaaAuthSrvrPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrPort.setStatus("current")


class _WingCfgAaaAuthSrvrTimeout_Type(Unsigned32):
    """Custom type wingCfgAaaAuthSrvrTimeout based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_WingCfgAaaAuthSrvrTimeout_Type.__name__ = "Unsigned32"
_WingCfgAaaAuthSrvrTimeout_Object = MibTableColumn
wingCfgAaaAuthSrvrTimeout = _WingCfgAaaAuthSrvrTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 7),
    _WingCfgAaaAuthSrvrTimeout_Type()
)
wingCfgAaaAuthSrvrTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrTimeout.setUnits("seconds")


class _WingCfgAaaAuthSrvrAttempts_Type(Unsigned32):
    """Custom type wingCfgAaaAuthSrvrAttempts based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgAaaAuthSrvrAttempts_Type.__name__ = "Unsigned32"
_WingCfgAaaAuthSrvrAttempts_Object = MibTableColumn
wingCfgAaaAuthSrvrAttempts = _WingCfgAaaAuthSrvrAttempts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 8),
    _WingCfgAaaAuthSrvrAttempts_Type()
)
wingCfgAaaAuthSrvrAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrAttempts.setStatus("current")


class _WingCfgAaaAuthSrvrProxyMode_Type(DisplayString):
    """Custom type wingCfgAaaAuthSrvrProxyMode based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgAaaAuthSrvrProxyMode_Type.__name__ = "DisplayString"
_WingCfgAaaAuthSrvrProxyMode_Object = MibTableColumn
wingCfgAaaAuthSrvrProxyMode = _WingCfgAaaAuthSrvrProxyMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 9),
    _WingCfgAaaAuthSrvrProxyMode_Type()
)
wingCfgAaaAuthSrvrProxyMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrProxyMode.setStatus("current")


class _WingCfgAaaAuthSrvrNaiRouting_Type(TruthValue):
    """Custom type wingCfgAaaAuthSrvrNaiRouting based on TruthValue"""
    defaultValue = 2


_WingCfgAaaAuthSrvrNaiRouting_Type.__name__ = "TruthValue"
_WingCfgAaaAuthSrvrNaiRouting_Object = MibTableColumn
wingCfgAaaAuthSrvrNaiRouting = _WingCfgAaaAuthSrvrNaiRouting_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 10),
    _WingCfgAaaAuthSrvrNaiRouting_Type()
)
wingCfgAaaAuthSrvrNaiRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrNaiRouting.setStatus("current")


class _WingCfgAaaAuthSrvrRealmType_Type(DisplayString):
    """Custom type wingCfgAaaAuthSrvrRealmType based on DisplayString"""
    defaultValue = OctetString("prefix")


_WingCfgAaaAuthSrvrRealmType_Type.__name__ = "DisplayString"
_WingCfgAaaAuthSrvrRealmType_Object = MibTableColumn
wingCfgAaaAuthSrvrRealmType = _WingCfgAaaAuthSrvrRealmType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 11),
    _WingCfgAaaAuthSrvrRealmType_Type()
)
wingCfgAaaAuthSrvrRealmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrRealmType.setStatus("current")


class _WingCfgAaaAuthSrvrRealm_Type(DisplayString):
    """Custom type wingCfgAaaAuthSrvrRealm based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgAaaAuthSrvrRealm_Type.__name__ = "DisplayString"
_WingCfgAaaAuthSrvrRealm_Object = MibTableColumn
wingCfgAaaAuthSrvrRealm = _WingCfgAaaAuthSrvrRealm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 12),
    _WingCfgAaaAuthSrvrRealm_Type()
)
wingCfgAaaAuthSrvrRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrRealm.setStatus("current")


class _WingCfgAaaAuthSrvrStripRealm_Type(TruthValue):
    """Custom type wingCfgAaaAuthSrvrStripRealm based on TruthValue"""
    defaultValue = 2


_WingCfgAaaAuthSrvrStripRealm_Type.__name__ = "TruthValue"
_WingCfgAaaAuthSrvrStripRealm_Object = MibTableColumn
wingCfgAaaAuthSrvrStripRealm = _WingCfgAaaAuthSrvrStripRealm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 13),
    _WingCfgAaaAuthSrvrStripRealm_Type()
)
wingCfgAaaAuthSrvrStripRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrStripRealm.setStatus("current")


class _WingCfgAaaAuthSrvrRetryTimeoutFactor_Type(Unsigned32):
    """Custom type wingCfgAaaAuthSrvrRetryTimeoutFactor based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 200),
    )


_WingCfgAaaAuthSrvrRetryTimeoutFactor_Type.__name__ = "Unsigned32"
_WingCfgAaaAuthSrvrRetryTimeoutFactor_Object = MibTableColumn
wingCfgAaaAuthSrvrRetryTimeoutFactor = _WingCfgAaaAuthSrvrRetryTimeoutFactor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 14),
    _WingCfgAaaAuthSrvrRetryTimeoutFactor_Type()
)
wingCfgAaaAuthSrvrRetryTimeoutFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrRetryTimeoutFactor.setStatus("current")


class _WingCfgAaaAuthSrvrNacEnable_Type(TruthValue):
    """Custom type wingCfgAaaAuthSrvrNacEnable based on TruthValue"""
    defaultValue = 2


_WingCfgAaaAuthSrvrNacEnable_Type.__name__ = "TruthValue"
_WingCfgAaaAuthSrvrNacEnable_Object = MibTableColumn
wingCfgAaaAuthSrvrNacEnable = _WingCfgAaaAuthSrvrNacEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 15),
    _WingCfgAaaAuthSrvrNacEnable_Type()
)
wingCfgAaaAuthSrvrNacEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrNacEnable.setStatus("current")


class _WingCfgAaaAuthSrvrDscp_Type(Unsigned32):
    """Custom type wingCfgAaaAuthSrvrDscp based on Unsigned32"""
    defaultValue = 46

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_WingCfgAaaAuthSrvrDscp_Type.__name__ = "Unsigned32"
_WingCfgAaaAuthSrvrDscp_Object = MibTableColumn
wingCfgAaaAuthSrvrDscp = _WingCfgAaaAuthSrvrDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 2, 1, 16),
    _WingCfgAaaAuthSrvrDscp_Type()
)
wingCfgAaaAuthSrvrDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAuthSrvrDscp.setStatus("current")
_WingCfgAaaAcctSrvrTable_Object = MibTable
wingCfgAaaAcctSrvrTable = _WingCfgAaaAcctSrvrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3)
)
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrTable.setStatus("current")
_WingCfgAaaAcctSrvrEntry_Object = MibTableRow
wingCfgAaaAcctSrvrEntry = _WingCfgAaaAcctSrvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1)
)
wingCfgAaaAcctSrvrEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAaaName"),
    (0, "WING-MIB", "wingCfgAaaAcctSrvrIdx"),
)
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrEntry.setStatus("current")


class _WingCfgAaaAcctSrvrIdx_Type(Unsigned32):
    """Custom type wingCfgAaaAcctSrvrIdx based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WingCfgAaaAcctSrvrIdx_Type.__name__ = "Unsigned32"
_WingCfgAaaAcctSrvrIdx_Object = MibTableColumn
wingCfgAaaAcctSrvrIdx = _WingCfgAaaAcctSrvrIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 1),
    _WingCfgAaaAcctSrvrIdx_Type()
)
wingCfgAaaAcctSrvrIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrIdx.setStatus("current")


class _WingCfgAaaAcctSrvrType_Type(DisplayString):
    """Custom type wingCfgAaaAcctSrvrType based on DisplayString"""
    defaultValue = OctetString("host")


_WingCfgAaaAcctSrvrType_Type.__name__ = "DisplayString"
_WingCfgAaaAcctSrvrType_Object = MibTableColumn
wingCfgAaaAcctSrvrType = _WingCfgAaaAcctSrvrType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 3),
    _WingCfgAaaAcctSrvrType_Type()
)
wingCfgAaaAcctSrvrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrType.setStatus("current")
_WingCfgAaaAcctSrvrHost_Type = DisplayString
_WingCfgAaaAcctSrvrHost_Object = MibTableColumn
wingCfgAaaAcctSrvrHost = _WingCfgAaaAcctSrvrHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 4),
    _WingCfgAaaAcctSrvrHost_Type()
)
wingCfgAaaAcctSrvrHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrHost.setStatus("current")


class _WingCfgAaaAcctSrvrSecret_Type(DisplayString):
    """Custom type wingCfgAaaAcctSrvrSecret based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_WingCfgAaaAcctSrvrSecret_Type.__name__ = "DisplayString"
_WingCfgAaaAcctSrvrSecret_Object = MibTableColumn
wingCfgAaaAcctSrvrSecret = _WingCfgAaaAcctSrvrSecret_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 5),
    _WingCfgAaaAcctSrvrSecret_Type()
)
wingCfgAaaAcctSrvrSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrSecret.setStatus("current")


class _WingCfgAaaAcctSrvrPort_Type(Unsigned32):
    """Custom type wingCfgAaaAcctSrvrPort based on Unsigned32"""
    defaultValue = 1813

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgAaaAcctSrvrPort_Type.__name__ = "Unsigned32"
_WingCfgAaaAcctSrvrPort_Object = MibTableColumn
wingCfgAaaAcctSrvrPort = _WingCfgAaaAcctSrvrPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 6),
    _WingCfgAaaAcctSrvrPort_Type()
)
wingCfgAaaAcctSrvrPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrPort.setStatus("current")


class _WingCfgAaaAcctSrvrTimeout_Type(Unsigned32):
    """Custom type wingCfgAaaAcctSrvrTimeout based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_WingCfgAaaAcctSrvrTimeout_Type.__name__ = "Unsigned32"
_WingCfgAaaAcctSrvrTimeout_Object = MibTableColumn
wingCfgAaaAcctSrvrTimeout = _WingCfgAaaAcctSrvrTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 7),
    _WingCfgAaaAcctSrvrTimeout_Type()
)
wingCfgAaaAcctSrvrTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrTimeout.setUnits("seconds")


class _WingCfgAaaAcctSrvrAttempts_Type(Unsigned32):
    """Custom type wingCfgAaaAcctSrvrAttempts based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgAaaAcctSrvrAttempts_Type.__name__ = "Unsigned32"
_WingCfgAaaAcctSrvrAttempts_Object = MibTableColumn
wingCfgAaaAcctSrvrAttempts = _WingCfgAaaAcctSrvrAttempts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 8),
    _WingCfgAaaAcctSrvrAttempts_Type()
)
wingCfgAaaAcctSrvrAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrAttempts.setStatus("current")


class _WingCfgAaaAcctSrvrProxyMode_Type(DisplayString):
    """Custom type wingCfgAaaAcctSrvrProxyMode based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgAaaAcctSrvrProxyMode_Type.__name__ = "DisplayString"
_WingCfgAaaAcctSrvrProxyMode_Object = MibTableColumn
wingCfgAaaAcctSrvrProxyMode = _WingCfgAaaAcctSrvrProxyMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 9),
    _WingCfgAaaAcctSrvrProxyMode_Type()
)
wingCfgAaaAcctSrvrProxyMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrProxyMode.setStatus("current")


class _WingCfgAaaAcctSrvrNaiRouting_Type(TruthValue):
    """Custom type wingCfgAaaAcctSrvrNaiRouting based on TruthValue"""
    defaultValue = 2


_WingCfgAaaAcctSrvrNaiRouting_Type.__name__ = "TruthValue"
_WingCfgAaaAcctSrvrNaiRouting_Object = MibTableColumn
wingCfgAaaAcctSrvrNaiRouting = _WingCfgAaaAcctSrvrNaiRouting_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 10),
    _WingCfgAaaAcctSrvrNaiRouting_Type()
)
wingCfgAaaAcctSrvrNaiRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrNaiRouting.setStatus("current")


class _WingCfgAaaAcctSrvrRealmType_Type(DisplayString):
    """Custom type wingCfgAaaAcctSrvrRealmType based on DisplayString"""
    defaultValue = OctetString("prefix")


_WingCfgAaaAcctSrvrRealmType_Type.__name__ = "DisplayString"
_WingCfgAaaAcctSrvrRealmType_Object = MibTableColumn
wingCfgAaaAcctSrvrRealmType = _WingCfgAaaAcctSrvrRealmType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 11),
    _WingCfgAaaAcctSrvrRealmType_Type()
)
wingCfgAaaAcctSrvrRealmType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrRealmType.setStatus("current")


class _WingCfgAaaAcctSrvrRealm_Type(DisplayString):
    """Custom type wingCfgAaaAcctSrvrRealm based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgAaaAcctSrvrRealm_Type.__name__ = "DisplayString"
_WingCfgAaaAcctSrvrRealm_Object = MibTableColumn
wingCfgAaaAcctSrvrRealm = _WingCfgAaaAcctSrvrRealm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 12),
    _WingCfgAaaAcctSrvrRealm_Type()
)
wingCfgAaaAcctSrvrRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrRealm.setStatus("current")


class _WingCfgAaaAcctSrvrStripRealm_Type(TruthValue):
    """Custom type wingCfgAaaAcctSrvrStripRealm based on TruthValue"""
    defaultValue = 2


_WingCfgAaaAcctSrvrStripRealm_Type.__name__ = "TruthValue"
_WingCfgAaaAcctSrvrStripRealm_Object = MibTableColumn
wingCfgAaaAcctSrvrStripRealm = _WingCfgAaaAcctSrvrStripRealm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 13),
    _WingCfgAaaAcctSrvrStripRealm_Type()
)
wingCfgAaaAcctSrvrStripRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrStripRealm.setStatus("current")


class _WingCfgAaaAcctSrvrRetryTimeoutFactor_Type(Unsigned32):
    """Custom type wingCfgAaaAcctSrvrRetryTimeoutFactor based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 200),
    )


_WingCfgAaaAcctSrvrRetryTimeoutFactor_Type.__name__ = "Unsigned32"
_WingCfgAaaAcctSrvrRetryTimeoutFactor_Object = MibTableColumn
wingCfgAaaAcctSrvrRetryTimeoutFactor = _WingCfgAaaAcctSrvrRetryTimeoutFactor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 14),
    _WingCfgAaaAcctSrvrRetryTimeoutFactor_Type()
)
wingCfgAaaAcctSrvrRetryTimeoutFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrRetryTimeoutFactor.setStatus("current")


class _WingCfgAaaAcctSrvrDscp_Type(Unsigned32):
    """Custom type wingCfgAaaAcctSrvrDscp based on Unsigned32"""
    defaultValue = 34

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_WingCfgAaaAcctSrvrDscp_Type.__name__ = "Unsigned32"
_WingCfgAaaAcctSrvrDscp_Object = MibTableColumn
wingCfgAaaAcctSrvrDscp = _WingCfgAaaAcctSrvrDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 7, 3, 1, 15),
    _WingCfgAaaAcctSrvrDscp_Type()
)
wingCfgAaaAcctSrvrDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAaaAcctSrvrDscp.setStatus("current")
_WingCfgAssocAcl_ObjectIdentity = ObjectIdentity
wingCfgAssocAcl = _WingCfgAssocAcl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8)
)
_WingCfgAssocAclTable_Object = MibTable
wingCfgAssocAclTable = _WingCfgAssocAclTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 1)
)
if mibBuilder.loadTexts:
    wingCfgAssocAclTable.setStatus("current")
_WingCfgAssocAclEntry_Object = MibTableRow
wingCfgAssocAclEntry = _WingCfgAssocAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 1, 1)
)
wingCfgAssocAclEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAssocAclName"),
)
if mibBuilder.loadTexts:
    wingCfgAssocAclEntry.setStatus("current")
_WingCfgAssocAclName_Type = WingIdentifier
_WingCfgAssocAclName_Object = MibTableColumn
wingCfgAssocAclName = _WingCfgAssocAclName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 1, 1, 1),
    _WingCfgAssocAclName_Type()
)
wingCfgAssocAclName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAssocAclName.setStatus("current")
_WingCfgAssocAclRuleTable_Object = MibTable
wingCfgAssocAclRuleTable = _WingCfgAssocAclRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 2)
)
if mibBuilder.loadTexts:
    wingCfgAssocAclRuleTable.setStatus("current")
_WingCfgAssocAclRuleEntry_Object = MibTableRow
wingCfgAssocAclRuleEntry = _WingCfgAssocAclRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 2, 1)
)
wingCfgAssocAclRuleEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAssocAclName"),
    (0, "WING-MIB", "wingCfgAssocAclRulePrecedence"),
)
if mibBuilder.loadTexts:
    wingCfgAssocAclRuleEntry.setStatus("current")


class _WingCfgAssocAclRulePrecedence_Type(Unsigned32):
    """Custom type wingCfgAssocAclRulePrecedence based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_WingCfgAssocAclRulePrecedence_Type.__name__ = "Unsigned32"
_WingCfgAssocAclRulePrecedence_Object = MibTableColumn
wingCfgAssocAclRulePrecedence = _WingCfgAssocAclRulePrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 2, 1, 1),
    _WingCfgAssocAclRulePrecedence_Type()
)
wingCfgAssocAclRulePrecedence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAssocAclRulePrecedence.setStatus("current")


class _WingCfgAssocAclRulePermit_Type(TruthValue):
    """Custom type wingCfgAssocAclRulePermit based on TruthValue"""
    defaultValue = 2


_WingCfgAssocAclRulePermit_Type.__name__ = "TruthValue"
_WingCfgAssocAclRulePermit_Object = MibTableColumn
wingCfgAssocAclRulePermit = _WingCfgAssocAclRulePermit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 2, 1, 3),
    _WingCfgAssocAclRulePermit_Type()
)
wingCfgAssocAclRulePermit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAssocAclRulePermit.setStatus("current")


class _WingCfgAssocAclRuleMac0_Type(MacAddress):
    """Custom type wingCfgAssocAclRuleMac0 based on MacAddress"""
    defaultHexValue = "000000000000"


_WingCfgAssocAclRuleMac0_Type.__name__ = "MacAddress"
_WingCfgAssocAclRuleMac0_Object = MibTableColumn
wingCfgAssocAclRuleMac0 = _WingCfgAssocAclRuleMac0_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 2, 1, 4),
    _WingCfgAssocAclRuleMac0_Type()
)
wingCfgAssocAclRuleMac0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAssocAclRuleMac0.setStatus("current")


class _WingCfgAssocAclRuleMac1_Type(MacAddress):
    """Custom type wingCfgAssocAclRuleMac1 based on MacAddress"""
    defaultHexValue = "FFFFFFFFFFFF"


_WingCfgAssocAclRuleMac1_Type.__name__ = "MacAddress"
_WingCfgAssocAclRuleMac1_Object = MibTableColumn
wingCfgAssocAclRuleMac1 = _WingCfgAssocAclRuleMac1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 8, 2, 1, 5),
    _WingCfgAssocAclRuleMac1_Type()
)
wingCfgAssocAclRuleMac1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgAssocAclRuleMac1.setStatus("current")
_WingCfgSmartRf_ObjectIdentity = ObjectIdentity
wingCfgSmartRf = _WingCfgSmartRf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9)
)
_WingCfgSmartRfTable_Object = MibTable
wingCfgSmartRfTable = _WingCfgSmartRfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1)
)
if mibBuilder.loadTexts:
    wingCfgSmartRfTable.setStatus("current")
_WingCfgSmartRfEntry_Object = MibTableRow
wingCfgSmartRfEntry = _WingCfgSmartRfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1)
)
wingCfgSmartRfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgSmartRfName"),
)
if mibBuilder.loadTexts:
    wingCfgSmartRfEntry.setStatus("current")
_WingCfgSmartRfName_Type = WingIdentifier
_WingCfgSmartRfName_Object = MibTableColumn
wingCfgSmartRfName = _WingCfgSmartRfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 1),
    _WingCfgSmartRfName_Type()
)
wingCfgSmartRfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgSmartRfName.setStatus("current")


class _WingCfgSmartRfEnable_Type(TruthValue):
    """Custom type wingCfgSmartRfEnable based on TruthValue"""
    defaultValue = 2


_WingCfgSmartRfEnable_Type.__name__ = "TruthValue"
_WingCfgSmartRfEnable_Object = MibTableColumn
wingCfgSmartRfEnable = _WingCfgSmartRfEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 3),
    _WingCfgSmartRfEnable_Type()
)
wingCfgSmartRfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfEnable.setStatus("current")


class _WingCfgSmartRfSensitivity_Type(DisplayString):
    """Custom type wingCfgSmartRfSensitivity based on DisplayString"""
    defaultValue = OctetString("medium")


_WingCfgSmartRfSensitivity_Type.__name__ = "DisplayString"
_WingCfgSmartRfSensitivity_Object = MibTableColumn
wingCfgSmartRfSensitivity = _WingCfgSmartRfSensitivity_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 4),
    _WingCfgSmartRfSensitivity_Type()
)
wingCfgSmartRfSensitivity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfSensitivity.setStatus("current")


class _WingCfgSmartRfAutoAssignSensor_Type(TruthValue):
    """Custom type wingCfgSmartRfAutoAssignSensor based on TruthValue"""
    defaultValue = 2


_WingCfgSmartRfAutoAssignSensor_Type.__name__ = "TruthValue"
_WingCfgSmartRfAutoAssignSensor_Object = MibTableColumn
wingCfgSmartRfAutoAssignSensor = _WingCfgSmartRfAutoAssignSensor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 5),
    _WingCfgSmartRfAutoAssignSensor_Type()
)
wingCfgSmartRfAutoAssignSensor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfAutoAssignSensor.setStatus("current")


class _WingCfgSmartRfMinPowerA_Type(Unsigned32):
    """Custom type wingCfgSmartRfMinPowerA based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_WingCfgSmartRfMinPowerA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfMinPowerA_Object = MibTableColumn
wingCfgSmartRfMinPowerA = _WingCfgSmartRfMinPowerA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 6),
    _WingCfgSmartRfMinPowerA_Type()
)
wingCfgSmartRfMinPowerA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfMinPowerA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfMinPowerA.setUnits("dBm")


class _WingCfgSmartRfMaxPowerA_Type(Unsigned32):
    """Custom type wingCfgSmartRfMaxPowerA based on Unsigned32"""
    defaultValue = 17

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_WingCfgSmartRfMaxPowerA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfMaxPowerA_Object = MibTableColumn
wingCfgSmartRfMaxPowerA = _WingCfgSmartRfMaxPowerA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 7),
    _WingCfgSmartRfMaxPowerA_Type()
)
wingCfgSmartRfMaxPowerA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfMaxPowerA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfMaxPowerA.setUnits("dBm")


class _WingCfgSmartRfMinPowerBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfMinPowerBg based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_WingCfgSmartRfMinPowerBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfMinPowerBg_Object = MibTableColumn
wingCfgSmartRfMinPowerBg = _WingCfgSmartRfMinPowerBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 8),
    _WingCfgSmartRfMinPowerBg_Type()
)
wingCfgSmartRfMinPowerBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfMinPowerBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfMinPowerBg.setUnits("dBm")


class _WingCfgSmartRfMaxPowerBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfMaxPowerBg based on Unsigned32"""
    defaultValue = 17

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_WingCfgSmartRfMaxPowerBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfMaxPowerBg_Object = MibTableColumn
wingCfgSmartRfMaxPowerBg = _WingCfgSmartRfMaxPowerBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 9),
    _WingCfgSmartRfMaxPowerBg_Type()
)
wingCfgSmartRfMaxPowerBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfMaxPowerBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfMaxPowerBg.setUnits("dBm")


class _WingCfgSmartRfChannelWidthA_Type(DisplayString):
    """Custom type wingCfgSmartRfChannelWidthA based on DisplayString"""
    defaultValue = OctetString("40MHz")


_WingCfgSmartRfChannelWidthA_Type.__name__ = "DisplayString"
_WingCfgSmartRfChannelWidthA_Object = MibTableColumn
wingCfgSmartRfChannelWidthA = _WingCfgSmartRfChannelWidthA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 10),
    _WingCfgSmartRfChannelWidthA_Type()
)
wingCfgSmartRfChannelWidthA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChannelWidthA.setStatus("current")


class _WingCfgSmartRfChannelWidthBg_Type(DisplayString):
    """Custom type wingCfgSmartRfChannelWidthBg based on DisplayString"""
    defaultValue = OctetString("20MHz")


_WingCfgSmartRfChannelWidthBg_Type.__name__ = "DisplayString"
_WingCfgSmartRfChannelWidthBg_Object = MibTableColumn
wingCfgSmartRfChannelWidthBg = _WingCfgSmartRfChannelWidthBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 11),
    _WingCfgSmartRfChannelWidthBg_Type()
)
wingCfgSmartRfChannelWidthBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChannelWidthBg.setStatus("current")


class _WingCfgSmartRfGroupByArea_Type(TruthValue):
    """Custom type wingCfgSmartRfGroupByArea based on TruthValue"""
    defaultValue = 2


_WingCfgSmartRfGroupByArea_Type.__name__ = "TruthValue"
_WingCfgSmartRfGroupByArea_Object = MibTableColumn
wingCfgSmartRfGroupByArea = _WingCfgSmartRfGroupByArea_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 12),
    _WingCfgSmartRfGroupByArea_Type()
)
wingCfgSmartRfGroupByArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfGroupByArea.setStatus("current")


class _WingCfgSmartRfGroupByFloor_Type(TruthValue):
    """Custom type wingCfgSmartRfGroupByFloor based on TruthValue"""
    defaultValue = 2


_WingCfgSmartRfGroupByFloor_Type.__name__ = "TruthValue"
_WingCfgSmartRfGroupByFloor_Object = MibTableColumn
wingCfgSmartRfGroupByFloor = _WingCfgSmartRfGroupByFloor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 13),
    _WingCfgSmartRfGroupByFloor_Type()
)
wingCfgSmartRfGroupByFloor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfGroupByFloor.setStatus("current")


class _WingCfgSmartRfSmartOcsMonitoring_Type(TruthValue):
    """Custom type wingCfgSmartRfSmartOcsMonitoring based on TruthValue"""
    defaultValue = 1


_WingCfgSmartRfSmartOcsMonitoring_Type.__name__ = "TruthValue"
_WingCfgSmartRfSmartOcsMonitoring_Object = MibTableColumn
wingCfgSmartRfSmartOcsMonitoring = _WingCfgSmartRfSmartOcsMonitoring_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 14),
    _WingCfgSmartRfSmartOcsMonitoring_Type()
)
wingCfgSmartRfSmartOcsMonitoring.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfSmartOcsMonitoring.setStatus("current")


class _WingCfgSmartRfOcsDurationA_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsDurationA based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20, 150),
    )


_WingCfgSmartRfOcsDurationA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsDurationA_Object = MibTableColumn
wingCfgSmartRfOcsDurationA = _WingCfgSmartRfOcsDurationA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 15),
    _WingCfgSmartRfOcsDurationA_Type()
)
wingCfgSmartRfOcsDurationA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsDurationA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsDurationA.setUnits("milliseconds")


class _WingCfgSmartRfOcsDurationBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsDurationBg based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20, 150),
    )


_WingCfgSmartRfOcsDurationBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsDurationBg_Object = MibTableColumn
wingCfgSmartRfOcsDurationBg = _WingCfgSmartRfOcsDurationBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 16),
    _WingCfgSmartRfOcsDurationBg_Type()
)
wingCfgSmartRfOcsDurationBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsDurationBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsDurationBg.setUnits("milliseconds")


class _WingCfgSmartRfOcsFrequencyA_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsFrequencyA based on Unsigned32"""
    defaultValue = 6

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_WingCfgSmartRfOcsFrequencyA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsFrequencyA_Object = MibTableColumn
wingCfgSmartRfOcsFrequencyA = _WingCfgSmartRfOcsFrequencyA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 17),
    _WingCfgSmartRfOcsFrequencyA_Type()
)
wingCfgSmartRfOcsFrequencyA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsFrequencyA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsFrequencyA.setUnits("seconds")


class _WingCfgSmartRfOcsFrequencyBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsFrequencyBg based on Unsigned32"""
    defaultValue = 6

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_WingCfgSmartRfOcsFrequencyBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsFrequencyBg_Object = MibTableColumn
wingCfgSmartRfOcsFrequencyBg = _WingCfgSmartRfOcsFrequencyBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 18),
    _WingCfgSmartRfOcsFrequencyBg_Type()
)
wingCfgSmartRfOcsFrequencyBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsFrequencyBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsFrequencyBg.setUnits("seconds")


class _WingCfgSmartRfOcsSampleCountA_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsSampleCountA based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgSmartRfOcsSampleCountA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsSampleCountA_Object = MibTableColumn
wingCfgSmartRfOcsSampleCountA = _WingCfgSmartRfOcsSampleCountA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 19),
    _WingCfgSmartRfOcsSampleCountA_Type()
)
wingCfgSmartRfOcsSampleCountA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsSampleCountA.setStatus("current")


class _WingCfgSmartRfOcsSampleCountBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsSampleCountBg based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgSmartRfOcsSampleCountBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsSampleCountBg_Object = MibTableColumn
wingCfgSmartRfOcsSampleCountBg = _WingCfgSmartRfOcsSampleCountBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 20),
    _WingCfgSmartRfOcsSampleCountBg_Type()
)
wingCfgSmartRfOcsSampleCountBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsSampleCountBg.setStatus("current")


class _WingCfgSmartRfOcsExtendedScanFrequencyA_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsExtendedScanFrequencyA based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 50),
    )


_WingCfgSmartRfOcsExtendedScanFrequencyA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsExtendedScanFrequencyA_Object = MibTableColumn
wingCfgSmartRfOcsExtendedScanFrequencyA = _WingCfgSmartRfOcsExtendedScanFrequencyA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 21),
    _WingCfgSmartRfOcsExtendedScanFrequencyA_Type()
)
wingCfgSmartRfOcsExtendedScanFrequencyA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsExtendedScanFrequencyA.setStatus("current")


class _WingCfgSmartRfOcsExtendedScanFrequencyBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfOcsExtendedScanFrequencyBg based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 50),
    )


_WingCfgSmartRfOcsExtendedScanFrequencyBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfOcsExtendedScanFrequencyBg_Object = MibTableColumn
wingCfgSmartRfOcsExtendedScanFrequencyBg = _WingCfgSmartRfOcsExtendedScanFrequencyBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 22),
    _WingCfgSmartRfOcsExtendedScanFrequencyBg_Type()
)
wingCfgSmartRfOcsExtendedScanFrequencyBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsExtendedScanFrequencyBg.setStatus("current")


class _WingCfgSmartRfOcsVoiceAwareA_Type(DisplayString):
    """Custom type wingCfgSmartRfOcsVoiceAwareA based on DisplayString"""
    defaultValue = OctetString("dynamic")


_WingCfgSmartRfOcsVoiceAwareA_Type.__name__ = "DisplayString"
_WingCfgSmartRfOcsVoiceAwareA_Object = MibTableColumn
wingCfgSmartRfOcsVoiceAwareA = _WingCfgSmartRfOcsVoiceAwareA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 23),
    _WingCfgSmartRfOcsVoiceAwareA_Type()
)
wingCfgSmartRfOcsVoiceAwareA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsVoiceAwareA.setStatus("current")


class _WingCfgSmartRfOcsVoiceAwareBg_Type(DisplayString):
    """Custom type wingCfgSmartRfOcsVoiceAwareBg based on DisplayString"""
    defaultValue = OctetString("dynamic")


_WingCfgSmartRfOcsVoiceAwareBg_Type.__name__ = "DisplayString"
_WingCfgSmartRfOcsVoiceAwareBg_Object = MibTableColumn
wingCfgSmartRfOcsVoiceAwareBg = _WingCfgSmartRfOcsVoiceAwareBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 24),
    _WingCfgSmartRfOcsVoiceAwareBg_Type()
)
wingCfgSmartRfOcsVoiceAwareBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsVoiceAwareBg.setStatus("current")


class _WingCfgSmartRfOcsPspAwareA_Type(DisplayString):
    """Custom type wingCfgSmartRfOcsPspAwareA based on DisplayString"""
    defaultValue = OctetString("dynamic")


_WingCfgSmartRfOcsPspAwareA_Type.__name__ = "DisplayString"
_WingCfgSmartRfOcsPspAwareA_Object = MibTableColumn
wingCfgSmartRfOcsPspAwareA = _WingCfgSmartRfOcsPspAwareA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 25),
    _WingCfgSmartRfOcsPspAwareA_Type()
)
wingCfgSmartRfOcsPspAwareA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsPspAwareA.setStatus("current")


class _WingCfgSmartRfOcsPspAwareBg_Type(DisplayString):
    """Custom type wingCfgSmartRfOcsPspAwareBg based on DisplayString"""
    defaultValue = OctetString("dynamic")


_WingCfgSmartRfOcsPspAwareBg_Type.__name__ = "DisplayString"
_WingCfgSmartRfOcsPspAwareBg_Object = MibTableColumn
wingCfgSmartRfOcsPspAwareBg = _WingCfgSmartRfOcsPspAwareBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 26),
    _WingCfgSmartRfOcsPspAwareBg_Type()
)
wingCfgSmartRfOcsPspAwareBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsPspAwareBg.setStatus("current")


class _WingCfgSmartRfInterferenceRecovery_Type(TruthValue):
    """Custom type wingCfgSmartRfInterferenceRecovery based on TruthValue"""
    defaultValue = 1


_WingCfgSmartRfInterferenceRecovery_Type.__name__ = "TruthValue"
_WingCfgSmartRfInterferenceRecovery_Object = MibTableColumn
wingCfgSmartRfInterferenceRecovery = _WingCfgSmartRfInterferenceRecovery_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 27),
    _WingCfgSmartRfInterferenceRecovery_Type()
)
wingCfgSmartRfInterferenceRecovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfInterferenceRecovery.setStatus("current")


class _WingCfgSmartRfIrNoise_Type(TruthValue):
    """Custom type wingCfgSmartRfIrNoise based on TruthValue"""
    defaultValue = 1


_WingCfgSmartRfIrNoise_Type.__name__ = "TruthValue"
_WingCfgSmartRfIrNoise_Object = MibTableColumn
wingCfgSmartRfIrNoise = _WingCfgSmartRfIrNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 28),
    _WingCfgSmartRfIrNoise_Type()
)
wingCfgSmartRfIrNoise.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfIrNoise.setStatus("current")


class _WingCfgSmartRfIrInterference_Type(TruthValue):
    """Custom type wingCfgSmartRfIrInterference based on TruthValue"""
    defaultValue = 1


_WingCfgSmartRfIrInterference_Type.__name__ = "TruthValue"
_WingCfgSmartRfIrInterference_Object = MibTableColumn
wingCfgSmartRfIrInterference = _WingCfgSmartRfIrInterference_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 29),
    _WingCfgSmartRfIrInterference_Type()
)
wingCfgSmartRfIrInterference.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfIrInterference.setStatus("current")


class _WingCfgSmartRfIrClientThreshold_Type(Unsigned32):
    """Custom type wingCfgSmartRfIrClientThreshold based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgSmartRfIrClientThreshold_Type.__name__ = "Unsigned32"
_WingCfgSmartRfIrClientThreshold_Object = MibTableColumn
wingCfgSmartRfIrClientThreshold = _WingCfgSmartRfIrClientThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 30),
    _WingCfgSmartRfIrClientThreshold_Type()
)
wingCfgSmartRfIrClientThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfIrClientThreshold.setStatus("current")


class _WingCfgSmartRfIrChannelSwitchDeltaA_Type(Unsigned32):
    """Custom type wingCfgSmartRfIrChannelSwitchDeltaA based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 35),
    )


_WingCfgSmartRfIrChannelSwitchDeltaA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfIrChannelSwitchDeltaA_Object = MibTableColumn
wingCfgSmartRfIrChannelSwitchDeltaA = _WingCfgSmartRfIrChannelSwitchDeltaA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 31),
    _WingCfgSmartRfIrChannelSwitchDeltaA_Type()
)
wingCfgSmartRfIrChannelSwitchDeltaA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfIrChannelSwitchDeltaA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfIrChannelSwitchDeltaA.setUnits("dBm")


class _WingCfgSmartRfIrChannelSwitchDeltaBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfIrChannelSwitchDeltaBg based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 35),
    )


_WingCfgSmartRfIrChannelSwitchDeltaBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfIrChannelSwitchDeltaBg_Object = MibTableColumn
wingCfgSmartRfIrChannelSwitchDeltaBg = _WingCfgSmartRfIrChannelSwitchDeltaBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 32),
    _WingCfgSmartRfIrChannelSwitchDeltaBg_Type()
)
wingCfgSmartRfIrChannelSwitchDeltaBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfIrChannelSwitchDeltaBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfIrChannelSwitchDeltaBg.setUnits("dBm")


class _WingCfgSmartRfNeighborRecovery_Type(TruthValue):
    """Custom type wingCfgSmartRfNeighborRecovery based on TruthValue"""
    defaultValue = 1


_WingCfgSmartRfNeighborRecovery_Type.__name__ = "TruthValue"
_WingCfgSmartRfNeighborRecovery_Object = MibTableColumn
wingCfgSmartRfNeighborRecovery = _WingCfgSmartRfNeighborRecovery_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 33),
    _WingCfgSmartRfNeighborRecovery_Type()
)
wingCfgSmartRfNeighborRecovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfNeighborRecovery.setStatus("current")


class _WingCfgSmartRfNrPowerThresholdA_Type(Integer32):
    """Custom type wingCfgSmartRfNrPowerThresholdA based on Integer32"""
    defaultValue = -70

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-85, -55),
    )


_WingCfgSmartRfNrPowerThresholdA_Type.__name__ = "Integer32"
_WingCfgSmartRfNrPowerThresholdA_Object = MibTableColumn
wingCfgSmartRfNrPowerThresholdA = _WingCfgSmartRfNrPowerThresholdA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 34),
    _WingCfgSmartRfNrPowerThresholdA_Type()
)
wingCfgSmartRfNrPowerThresholdA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfNrPowerThresholdA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfNrPowerThresholdA.setUnits("dBm")


class _WingCfgSmartRfNrPowerThresholdBg_Type(Integer32):
    """Custom type wingCfgSmartRfNrPowerThresholdBg based on Integer32"""
    defaultValue = -70

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-85, -55),
    )


_WingCfgSmartRfNrPowerThresholdBg_Type.__name__ = "Integer32"
_WingCfgSmartRfNrPowerThresholdBg_Object = MibTableColumn
wingCfgSmartRfNrPowerThresholdBg = _WingCfgSmartRfNrPowerThresholdBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 35),
    _WingCfgSmartRfNrPowerThresholdBg_Type()
)
wingCfgSmartRfNrPowerThresholdBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfNrPowerThresholdBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfNrPowerThresholdBg.setUnits("dBm")


class _WingCfgSmartRfCoverageHoleRecovery_Type(TruthValue):
    """Custom type wingCfgSmartRfCoverageHoleRecovery based on TruthValue"""
    defaultValue = 1


_WingCfgSmartRfCoverageHoleRecovery_Type.__name__ = "TruthValue"
_WingCfgSmartRfCoverageHoleRecovery_Object = MibTableColumn
wingCfgSmartRfCoverageHoleRecovery = _WingCfgSmartRfCoverageHoleRecovery_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 36),
    _WingCfgSmartRfCoverageHoleRecovery_Type()
)
wingCfgSmartRfCoverageHoleRecovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfCoverageHoleRecovery.setStatus("current")


class _WingCfgSmartRfChrIntervalA_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrIntervalA based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_WingCfgSmartRfChrIntervalA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrIntervalA_Object = MibTableColumn
wingCfgSmartRfChrIntervalA = _WingCfgSmartRfChrIntervalA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 37),
    _WingCfgSmartRfChrIntervalA_Type()
)
wingCfgSmartRfChrIntervalA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrIntervalA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrIntervalA.setUnits("seconds")


class _WingCfgSmartRfChrIntervalBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrIntervalBg based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_WingCfgSmartRfChrIntervalBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrIntervalBg_Object = MibTableColumn
wingCfgSmartRfChrIntervalBg = _WingCfgSmartRfChrIntervalBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 38),
    _WingCfgSmartRfChrIntervalBg_Type()
)
wingCfgSmartRfChrIntervalBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrIntervalBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrIntervalBg.setUnits("seconds")


class _WingCfgSmartRfChrCovIntervalA_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrCovIntervalA based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_WingCfgSmartRfChrCovIntervalA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrCovIntervalA_Object = MibTableColumn
wingCfgSmartRfChrCovIntervalA = _WingCfgSmartRfChrCovIntervalA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 39),
    _WingCfgSmartRfChrCovIntervalA_Type()
)
wingCfgSmartRfChrCovIntervalA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrCovIntervalA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrCovIntervalA.setUnits("seconds")


class _WingCfgSmartRfChrCovIntervalBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrCovIntervalBg based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_WingCfgSmartRfChrCovIntervalBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrCovIntervalBg_Object = MibTableColumn
wingCfgSmartRfChrCovIntervalBg = _WingCfgSmartRfChrCovIntervalBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 40),
    _WingCfgSmartRfChrCovIntervalBg_Type()
)
wingCfgSmartRfChrCovIntervalBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrCovIntervalBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrCovIntervalBg.setUnits("seconds")


class _WingCfgSmartRfChrSnrThresholdA_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrSnrThresholdA based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 75),
    )


_WingCfgSmartRfChrSnrThresholdA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrSnrThresholdA_Object = MibTableColumn
wingCfgSmartRfChrSnrThresholdA = _WingCfgSmartRfChrSnrThresholdA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 41),
    _WingCfgSmartRfChrSnrThresholdA_Type()
)
wingCfgSmartRfChrSnrThresholdA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrSnrThresholdA.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrSnrThresholdA.setUnits("dB")


class _WingCfgSmartRfChrSnrThresholdBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrSnrThresholdBg based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 75),
    )


_WingCfgSmartRfChrSnrThresholdBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrSnrThresholdBg_Object = MibTableColumn
wingCfgSmartRfChrSnrThresholdBg = _WingCfgSmartRfChrSnrThresholdBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 42),
    _WingCfgSmartRfChrSnrThresholdBg_Type()
)
wingCfgSmartRfChrSnrThresholdBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrSnrThresholdBg.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrSnrThresholdBg.setUnits("dB")


class _WingCfgSmartRfChrClientThresholdA_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrClientThresholdA based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgSmartRfChrClientThresholdA_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrClientThresholdA_Object = MibTableColumn
wingCfgSmartRfChrClientThresholdA = _WingCfgSmartRfChrClientThresholdA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 43),
    _WingCfgSmartRfChrClientThresholdA_Type()
)
wingCfgSmartRfChrClientThresholdA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrClientThresholdA.setStatus("current")


class _WingCfgSmartRfChrClientThresholdBg_Type(Unsigned32):
    """Custom type wingCfgSmartRfChrClientThresholdBg based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgSmartRfChrClientThresholdBg_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChrClientThresholdBg_Object = MibTableColumn
wingCfgSmartRfChrClientThresholdBg = _WingCfgSmartRfChrClientThresholdBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 44),
    _WingCfgSmartRfChrClientThresholdBg_Type()
)
wingCfgSmartRfChrClientThresholdBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChrClientThresholdBg.setStatus("current")


class _WingCfgSmartRfChannelHoldTime_Type(Unsigned32):
    """Custom type wingCfgSmartRfChannelHoldTime based on Unsigned32"""
    defaultValue = 3600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 86400),
    )


_WingCfgSmartRfChannelHoldTime_Type.__name__ = "Unsigned32"
_WingCfgSmartRfChannelHoldTime_Object = MibTableColumn
wingCfgSmartRfChannelHoldTime = _WingCfgSmartRfChannelHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 45),
    _WingCfgSmartRfChannelHoldTime_Type()
)
wingCfgSmartRfChannelHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfChannelHoldTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfChannelHoldTime.setUnits("seconds")


class _WingCfgSmartRfPowerHoldTime_Type(Unsigned32):
    """Custom type wingCfgSmartRfPowerHoldTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_WingCfgSmartRfPowerHoldTime_Type.__name__ = "Unsigned32"
_WingCfgSmartRfPowerHoldTime_Object = MibTableColumn
wingCfgSmartRfPowerHoldTime = _WingCfgSmartRfPowerHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 46),
    _WingCfgSmartRfPowerHoldTime_Type()
)
wingCfgSmartRfPowerHoldTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfPowerHoldTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgSmartRfPowerHoldTime.setUnits("seconds")


class _WingCfgSmartRfOcsMeshpointA_Type(DisplayString):
    """Custom type wingCfgSmartRfOcsMeshpointA based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgSmartRfOcsMeshpointA_Type.__name__ = "DisplayString"
_WingCfgSmartRfOcsMeshpointA_Object = MibTableColumn
wingCfgSmartRfOcsMeshpointA = _WingCfgSmartRfOcsMeshpointA_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 47),
    _WingCfgSmartRfOcsMeshpointA_Type()
)
wingCfgSmartRfOcsMeshpointA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsMeshpointA.setStatus("current")


class _WingCfgSmartRfOcsMeshpointBg_Type(DisplayString):
    """Custom type wingCfgSmartRfOcsMeshpointBg based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgSmartRfOcsMeshpointBg_Type.__name__ = "DisplayString"
_WingCfgSmartRfOcsMeshpointBg_Object = MibTableColumn
wingCfgSmartRfOcsMeshpointBg = _WingCfgSmartRfOcsMeshpointBg_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 9, 1, 1, 48),
    _WingCfgSmartRfOcsMeshpointBg_Type()
)
wingCfgSmartRfOcsMeshpointBg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgSmartRfOcsMeshpointBg.setStatus("current")
_WingCfgCaptPrtl_ObjectIdentity = ObjectIdentity
wingCfgCaptPrtl = _WingCfgCaptPrtl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10)
)
_WingCfgCaptPrtlTable_Object = MibTable
wingCfgCaptPrtlTable = _WingCfgCaptPrtlTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1)
)
if mibBuilder.loadTexts:
    wingCfgCaptPrtlTable.setStatus("current")
_WingCfgCaptPrtlEntry_Object = MibTableRow
wingCfgCaptPrtlEntry = _WingCfgCaptPrtlEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1)
)
wingCfgCaptPrtlEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgCaptPrtlName"),
)
if mibBuilder.loadTexts:
    wingCfgCaptPrtlEntry.setStatus("current")
_WingCfgCaptPrtlName_Type = WingIdentifier
_WingCfgCaptPrtlName_Object = MibTableColumn
wingCfgCaptPrtlName = _WingCfgCaptPrtlName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 1),
    _WingCfgCaptPrtlName_Type()
)
wingCfgCaptPrtlName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlName.setStatus("current")


class _WingCfgCaptPrtlAccessType_Type(DisplayString):
    """Custom type wingCfgCaptPrtlAccessType based on DisplayString"""
    defaultValue = OctetString("radius")


_WingCfgCaptPrtlAccessType_Type.__name__ = "DisplayString"
_WingCfgCaptPrtlAccessType_Object = MibTableColumn
wingCfgCaptPrtlAccessType = _WingCfgCaptPrtlAccessType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 3),
    _WingCfgCaptPrtlAccessType_Type()
)
wingCfgCaptPrtlAccessType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAccessType.setStatus("current")


class _WingCfgCaptPrtlAccessTime_Type(Unsigned32):
    """Custom type wingCfgCaptPrtlAccessTime based on Unsigned32"""
    defaultValue = 1440

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 10080),
    )


_WingCfgCaptPrtlAccessTime_Type.__name__ = "Unsigned32"
_WingCfgCaptPrtlAccessTime_Object = MibTableColumn
wingCfgCaptPrtlAccessTime = _WingCfgCaptPrtlAccessTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 4),
    _WingCfgCaptPrtlAccessTime_Type()
)
wingCfgCaptPrtlAccessTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAccessTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAccessTime.setUnits("minutes")


class _WingCfgCaptPrtlCustomAuthInfo_Type(DisplayString):
    """Custom type wingCfgCaptPrtlCustomAuthInfo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingCfgCaptPrtlCustomAuthInfo_Type.__name__ = "DisplayString"
_WingCfgCaptPrtlCustomAuthInfo_Object = MibTableColumn
wingCfgCaptPrtlCustomAuthInfo = _WingCfgCaptPrtlCustomAuthInfo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 5),
    _WingCfgCaptPrtlCustomAuthInfo_Type()
)
wingCfgCaptPrtlCustomAuthInfo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlCustomAuthInfo.setStatus("current")


class _WingCfgCaptPrtlConnectionMode_Type(DisplayString):
    """Custom type wingCfgCaptPrtlConnectionMode based on DisplayString"""
    defaultValue = OctetString("http")


_WingCfgCaptPrtlConnectionMode_Type.__name__ = "DisplayString"
_WingCfgCaptPrtlConnectionMode_Object = MibTableColumn
wingCfgCaptPrtlConnectionMode = _WingCfgCaptPrtlConnectionMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 6),
    _WingCfgCaptPrtlConnectionMode_Type()
)
wingCfgCaptPrtlConnectionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlConnectionMode.setStatus("current")


class _WingCfgCaptPrtlInactivityTimeout_Type(Unsigned32):
    """Custom type wingCfgCaptPrtlInactivityTimeout based on Unsigned32"""
    defaultValue = 600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(300, 1800),
    )


_WingCfgCaptPrtlInactivityTimeout_Type.__name__ = "Unsigned32"
_WingCfgCaptPrtlInactivityTimeout_Object = MibTableColumn
wingCfgCaptPrtlInactivityTimeout = _WingCfgCaptPrtlInactivityTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 7),
    _WingCfgCaptPrtlInactivityTimeout_Type()
)
wingCfgCaptPrtlInactivityTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlInactivityTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlInactivityTimeout.setUnits("seconds")
_WingCfgCaptPrtlServer_Type = DisplayString
_WingCfgCaptPrtlServer_Object = MibTableColumn
wingCfgCaptPrtlServer = _WingCfgCaptPrtlServer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 8),
    _WingCfgCaptPrtlServer_Type()
)
wingCfgCaptPrtlServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlServer.setStatus("current")


class _WingCfgCaptPrtlServerMode_Type(DisplayString):
    """Custom type wingCfgCaptPrtlServerMode based on DisplayString"""
    defaultValue = OctetString("self")


_WingCfgCaptPrtlServerMode_Type.__name__ = "DisplayString"
_WingCfgCaptPrtlServerMode_Object = MibTableColumn
wingCfgCaptPrtlServerMode = _WingCfgCaptPrtlServerMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 9),
    _WingCfgCaptPrtlServerMode_Type()
)
wingCfgCaptPrtlServerMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlServerMode.setStatus("current")


class _WingCfgCaptPrtlSimultaneousUsers_Type(Unsigned32):
    """Custom type wingCfgCaptPrtlSimultaneousUsers based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8192),
    )


_WingCfgCaptPrtlSimultaneousUsers_Type.__name__ = "Unsigned32"
_WingCfgCaptPrtlSimultaneousUsers_Object = MibTableColumn
wingCfgCaptPrtlSimultaneousUsers = _WingCfgCaptPrtlSimultaneousUsers_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 10),
    _WingCfgCaptPrtlSimultaneousUsers_Type()
)
wingCfgCaptPrtlSimultaneousUsers.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlSimultaneousUsers.setStatus("current")


class _WingCfgCaptPrtlTermsAgreement_Type(TruthValue):
    """Custom type wingCfgCaptPrtlTermsAgreement based on TruthValue"""
    defaultValue = 2


_WingCfgCaptPrtlTermsAgreement_Type.__name__ = "TruthValue"
_WingCfgCaptPrtlTermsAgreement_Object = MibTableColumn
wingCfgCaptPrtlTermsAgreement = _WingCfgCaptPrtlTermsAgreement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 11),
    _WingCfgCaptPrtlTermsAgreement_Type()
)
wingCfgCaptPrtlTermsAgreement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlTermsAgreement.setStatus("current")


class _WingCfgCaptPrtlWebpageLocation_Type(DisplayString):
    """Custom type wingCfgCaptPrtlWebpageLocation based on DisplayString"""
    defaultValue = OctetString("internal")


_WingCfgCaptPrtlWebpageLocation_Type.__name__ = "DisplayString"
_WingCfgCaptPrtlWebpageLocation_Object = MibTableColumn
wingCfgCaptPrtlWebpageLocation = _WingCfgCaptPrtlWebpageLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 12),
    _WingCfgCaptPrtlWebpageLocation_Type()
)
wingCfgCaptPrtlWebpageLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlWebpageLocation.setStatus("current")


class _WingCfgCaptPrtlAccountingRadius_Type(TruthValue):
    """Custom type wingCfgCaptPrtlAccountingRadius based on TruthValue"""
    defaultValue = 2


_WingCfgCaptPrtlAccountingRadius_Type.__name__ = "TruthValue"
_WingCfgCaptPrtlAccountingRadius_Object = MibTableColumn
wingCfgCaptPrtlAccountingRadius = _WingCfgCaptPrtlAccountingRadius_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 13),
    _WingCfgCaptPrtlAccountingRadius_Type()
)
wingCfgCaptPrtlAccountingRadius.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAccountingRadius.setStatus("current")
_WingCfgCaptPrtlAaaPolicy_Type = WingIdentifier
_WingCfgCaptPrtlAaaPolicy_Object = MibTableColumn
wingCfgCaptPrtlAaaPolicy = _WingCfgCaptPrtlAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 14),
    _WingCfgCaptPrtlAaaPolicy_Type()
)
wingCfgCaptPrtlAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAaaPolicy.setStatus("current")
_WingCfgCaptPrtlDnsWhitelist_Type = WingIdentifier
_WingCfgCaptPrtlDnsWhitelist_Object = MibTableColumn
wingCfgCaptPrtlDnsWhitelist = _WingCfgCaptPrtlDnsWhitelist_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 1, 1, 15),
    _WingCfgCaptPrtlDnsWhitelist_Type()
)
wingCfgCaptPrtlDnsWhitelist.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlDnsWhitelist.setStatus("current")
_WingCfgCaptPrtlAcctSyslogTable_Object = MibTable
wingCfgCaptPrtlAcctSyslogTable = _WingCfgCaptPrtlAcctSyslogTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 4)
)
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAcctSyslogTable.setStatus("current")
_WingCfgCaptPrtlAcctSyslogEntry_Object = MibTableRow
wingCfgCaptPrtlAcctSyslogEntry = _WingCfgCaptPrtlAcctSyslogEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 4, 1)
)
wingCfgCaptPrtlAcctSyslogEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgCaptPrtlName"),
)
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAcctSyslogEntry.setStatus("current")


class _WingCfgCaptPrtlAcctSyslogEnable_Type(TruthValue):
    """Custom type wingCfgCaptPrtlAcctSyslogEnable based on TruthValue"""
    defaultValue = 2


_WingCfgCaptPrtlAcctSyslogEnable_Type.__name__ = "TruthValue"
_WingCfgCaptPrtlAcctSyslogEnable_Object = MibTableColumn
wingCfgCaptPrtlAcctSyslogEnable = _WingCfgCaptPrtlAcctSyslogEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 4, 1, 1),
    _WingCfgCaptPrtlAcctSyslogEnable_Type()
)
wingCfgCaptPrtlAcctSyslogEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAcctSyslogEnable.setStatus("current")
_WingCfgCaptPrtlAcctSyslogHost_Type = DisplayString
_WingCfgCaptPrtlAcctSyslogHost_Object = MibTableColumn
wingCfgCaptPrtlAcctSyslogHost = _WingCfgCaptPrtlAcctSyslogHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 4, 1, 2),
    _WingCfgCaptPrtlAcctSyslogHost_Type()
)
wingCfgCaptPrtlAcctSyslogHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAcctSyslogHost.setStatus("current")


class _WingCfgCaptPrtlAcctSyslogPort_Type(Unsigned32):
    """Custom type wingCfgCaptPrtlAcctSyslogPort based on Unsigned32"""
    defaultValue = 514

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgCaptPrtlAcctSyslogPort_Type.__name__ = "Unsigned32"
_WingCfgCaptPrtlAcctSyslogPort_Object = MibTableColumn
wingCfgCaptPrtlAcctSyslogPort = _WingCfgCaptPrtlAcctSyslogPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 10, 4, 1, 3),
    _WingCfgCaptPrtlAcctSyslogPort_Type()
)
wingCfgCaptPrtlAcctSyslogPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgCaptPrtlAcctSyslogPort.setStatus("current")
_WingCfgDnsWhitelist_ObjectIdentity = ObjectIdentity
wingCfgDnsWhitelist = _WingCfgDnsWhitelist_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11)
)
_WingCfgDnsWhitelistTable_Object = MibTable
wingCfgDnsWhitelistTable = _WingCfgDnsWhitelistTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11, 1)
)
if mibBuilder.loadTexts:
    wingCfgDnsWhitelistTable.setStatus("current")
_WingCfgDnsWhitelistEntry_Object = MibTableRow
wingCfgDnsWhitelistEntry = _WingCfgDnsWhitelistEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11, 1, 1)
)
wingCfgDnsWhitelistEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDnsWhitelistName"),
)
if mibBuilder.loadTexts:
    wingCfgDnsWhitelistEntry.setStatus("current")
_WingCfgDnsWhitelistName_Type = WingIdentifier
_WingCfgDnsWhitelistName_Object = MibTableColumn
wingCfgDnsWhitelistName = _WingCfgDnsWhitelistName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11, 1, 1, 1),
    _WingCfgDnsWhitelistName_Type()
)
wingCfgDnsWhitelistName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDnsWhitelistName.setStatus("current")
_WingCfgDnsWhitelistInstTable_Object = MibTable
wingCfgDnsWhitelistInstTable = _WingCfgDnsWhitelistInstTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11, 2)
)
if mibBuilder.loadTexts:
    wingCfgDnsWhitelistInstTable.setStatus("current")
_WingCfgDnsWhitelistInstEntry_Object = MibTableRow
wingCfgDnsWhitelistInstEntry = _WingCfgDnsWhitelistInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11, 2, 1)
)
wingCfgDnsWhitelistInstEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDnsWhitelistName"),
    (0, "WING-MIB", "wingCfgDnsWhitelistInstName"),
)
if mibBuilder.loadTexts:
    wingCfgDnsWhitelistInstEntry.setStatus("current")
_WingCfgDnsWhitelistInstName_Type = WingIdentifier
_WingCfgDnsWhitelistInstName_Object = MibTableColumn
wingCfgDnsWhitelistInstName = _WingCfgDnsWhitelistInstName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11, 2, 1, 1),
    _WingCfgDnsWhitelistInstName_Type()
)
wingCfgDnsWhitelistInstName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDnsWhitelistInstName.setStatus("current")


class _WingCfgDnsWhitelistInstSuffix_Type(TruthValue):
    """Custom type wingCfgDnsWhitelistInstSuffix based on TruthValue"""
    defaultValue = 2


_WingCfgDnsWhitelistInstSuffix_Type.__name__ = "TruthValue"
_WingCfgDnsWhitelistInstSuffix_Object = MibTableColumn
wingCfgDnsWhitelistInstSuffix = _WingCfgDnsWhitelistInstSuffix_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 11, 2, 1, 3),
    _WingCfgDnsWhitelistInstSuffix_Type()
)
wingCfgDnsWhitelistInstSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDnsWhitelistInstSuffix.setStatus("current")
_WingCfgIpAcl_ObjectIdentity = ObjectIdentity
wingCfgIpAcl = _WingCfgIpAcl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12)
)
_WingCfgIpAclTable_Object = MibTable
wingCfgIpAclTable = _WingCfgIpAclTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 1)
)
if mibBuilder.loadTexts:
    wingCfgIpAclTable.setStatus("current")
_WingCfgIpAclEntry_Object = MibTableRow
wingCfgIpAclEntry = _WingCfgIpAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 1, 1)
)
wingCfgIpAclEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgIpAclName"),
)
if mibBuilder.loadTexts:
    wingCfgIpAclEntry.setStatus("current")
_WingCfgIpAclName_Type = WingIdentifier
_WingCfgIpAclName_Object = MibTableColumn
wingCfgIpAclName = _WingCfgIpAclName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 1, 1, 1),
    _WingCfgIpAclName_Type()
)
wingCfgIpAclName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgIpAclName.setStatus("current")
_WingCfgIpAclRuleTable_Object = MibTable
wingCfgIpAclRuleTable = _WingCfgIpAclRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2)
)
if mibBuilder.loadTexts:
    wingCfgIpAclRuleTable.setStatus("current")
_WingCfgIpAclRuleEntry_Object = MibTableRow
wingCfgIpAclRuleEntry = _WingCfgIpAclRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1)
)
wingCfgIpAclRuleEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgIpAclName"),
    (0, "WING-MIB", "wingCfgIpAclRulePrecedence"),
)
if mibBuilder.loadTexts:
    wingCfgIpAclRuleEntry.setStatus("current")


class _WingCfgIpAclRulePrecedence_Type(Unsigned32):
    """Custom type wingCfgIpAclRulePrecedence based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5000),
    )


_WingCfgIpAclRulePrecedence_Type.__name__ = "Unsigned32"
_WingCfgIpAclRulePrecedence_Object = MibTableColumn
wingCfgIpAclRulePrecedence = _WingCfgIpAclRulePrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 1),
    _WingCfgIpAclRulePrecedence_Type()
)
wingCfgIpAclRulePrecedence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgIpAclRulePrecedence.setStatus("current")


class _WingCfgIpAclRuleAllow_Type(DisplayString):
    """Custom type wingCfgIpAclRuleAllow based on DisplayString"""
    defaultValue = OctetString("deny")


_WingCfgIpAclRuleAllow_Type.__name__ = "DisplayString"
_WingCfgIpAclRuleAllow_Object = MibTableColumn
wingCfgIpAclRuleAllow = _WingCfgIpAclRuleAllow_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 3),
    _WingCfgIpAclRuleAllow_Type()
)
wingCfgIpAclRuleAllow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRuleAllow.setStatus("current")


class _WingCfgIpAclRulePriorityField_Type(DisplayString):
    """Custom type wingCfgIpAclRulePriorityField based on DisplayString"""
    defaultValue = OctetString("dscp")


_WingCfgIpAclRulePriorityField_Type.__name__ = "DisplayString"
_WingCfgIpAclRulePriorityField_Object = MibTableColumn
wingCfgIpAclRulePriorityField = _WingCfgIpAclRulePriorityField_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 4),
    _WingCfgIpAclRulePriorityField_Type()
)
wingCfgIpAclRulePriorityField.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRulePriorityField.setStatus("current")


class _WingCfgIpAclRuleMarkDscp_Type(Unsigned32):
    """Custom type wingCfgIpAclRuleMarkDscp based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_WingCfgIpAclRuleMarkDscp_Type.__name__ = "Unsigned32"
_WingCfgIpAclRuleMarkDscp_Object = MibTableColumn
wingCfgIpAclRuleMarkDscp = _WingCfgIpAclRuleMarkDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 5),
    _WingCfgIpAclRuleMarkDscp_Type()
)
wingCfgIpAclRuleMarkDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRuleMarkDscp.setStatus("current")


class _WingCfgIpAclRuleMark8021p_Type(Unsigned32):
    """Custom type wingCfgIpAclRuleMark8021p based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_WingCfgIpAclRuleMark8021p_Type.__name__ = "Unsigned32"
_WingCfgIpAclRuleMark8021p_Object = MibTableColumn
wingCfgIpAclRuleMark8021p = _WingCfgIpAclRuleMark8021p_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 6),
    _WingCfgIpAclRuleMark8021p_Type()
)
wingCfgIpAclRuleMark8021p.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRuleMark8021p.setStatus("current")


class _WingCfgIpAclRuleDescription_Type(DisplayString):
    """Custom type wingCfgIpAclRuleDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_WingCfgIpAclRuleDescription_Type.__name__ = "DisplayString"
_WingCfgIpAclRuleDescription_Object = MibTableColumn
wingCfgIpAclRuleDescription = _WingCfgIpAclRuleDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 7),
    _WingCfgIpAclRuleDescription_Type()
)
wingCfgIpAclRuleDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRuleDescription.setStatus("current")


class _WingCfgIpAclRuleProtocol_Type(Unsigned32):
    """Custom type wingCfgIpAclRuleProtocol based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_WingCfgIpAclRuleProtocol_Type.__name__ = "Unsigned32"
_WingCfgIpAclRuleProtocol_Object = MibTableColumn
wingCfgIpAclRuleProtocol = _WingCfgIpAclRuleProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 8),
    _WingCfgIpAclRuleProtocol_Type()
)
wingCfgIpAclRuleProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRuleProtocol.setStatus("current")
_WingCfgIpAclRuleSip_Type = DisplayString
_WingCfgIpAclRuleSip_Object = MibTableColumn
wingCfgIpAclRuleSip = _WingCfgIpAclRuleSip_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 9),
    _WingCfgIpAclRuleSip_Type()
)
wingCfgIpAclRuleSip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRuleSip.setStatus("current")
_WingCfgIpAclRuleDip_Type = DisplayString
_WingCfgIpAclRuleDip_Object = MibTableColumn
wingCfgIpAclRuleDip = _WingCfgIpAclRuleDip_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 12, 2, 1, 10),
    _WingCfgIpAclRuleDip_Type()
)
wingCfgIpAclRuleDip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgIpAclRuleDip.setStatus("current")
_WingCfgMacAcl_ObjectIdentity = ObjectIdentity
wingCfgMacAcl = _WingCfgMacAcl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13)
)
_WingCfgMacAclTable_Object = MibTable
wingCfgMacAclTable = _WingCfgMacAclTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 1)
)
if mibBuilder.loadTexts:
    wingCfgMacAclTable.setStatus("current")
_WingCfgMacAclEntry_Object = MibTableRow
wingCfgMacAclEntry = _WingCfgMacAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 1, 1)
)
wingCfgMacAclEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMacAclName"),
)
if mibBuilder.loadTexts:
    wingCfgMacAclEntry.setStatus("current")
_WingCfgMacAclName_Type = WingIdentifier
_WingCfgMacAclName_Object = MibTableColumn
wingCfgMacAclName = _WingCfgMacAclName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 1, 1, 1),
    _WingCfgMacAclName_Type()
)
wingCfgMacAclName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMacAclName.setStatus("current")
_WingCfgMacAclRuleTable_Object = MibTable
wingCfgMacAclRuleTable = _WingCfgMacAclRuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2)
)
if mibBuilder.loadTexts:
    wingCfgMacAclRuleTable.setStatus("current")
_WingCfgMacAclRuleEntry_Object = MibTableRow
wingCfgMacAclRuleEntry = _WingCfgMacAclRuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1)
)
wingCfgMacAclRuleEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMacAclName"),
    (0, "WING-MIB", "wingCfgMacAclRulePrecedence"),
)
if mibBuilder.loadTexts:
    wingCfgMacAclRuleEntry.setStatus("current")


class _WingCfgMacAclRulePrecedence_Type(Unsigned32):
    """Custom type wingCfgMacAclRulePrecedence based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5000),
    )


_WingCfgMacAclRulePrecedence_Type.__name__ = "Unsigned32"
_WingCfgMacAclRulePrecedence_Object = MibTableColumn
wingCfgMacAclRulePrecedence = _WingCfgMacAclRulePrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 1),
    _WingCfgMacAclRulePrecedence_Type()
)
wingCfgMacAclRulePrecedence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMacAclRulePrecedence.setStatus("current")


class _WingCfgMacAclRuleAllow_Type(DisplayString):
    """Custom type wingCfgMacAclRuleAllow based on DisplayString"""
    defaultValue = OctetString("deny")


_WingCfgMacAclRuleAllow_Type.__name__ = "DisplayString"
_WingCfgMacAclRuleAllow_Object = MibTableColumn
wingCfgMacAclRuleAllow = _WingCfgMacAclRuleAllow_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 3),
    _WingCfgMacAclRuleAllow_Type()
)
wingCfgMacAclRuleAllow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleAllow.setStatus("current")


class _WingCfgMacAclRulePriorityField_Type(DisplayString):
    """Custom type wingCfgMacAclRulePriorityField based on DisplayString"""
    defaultValue = OctetString("dscp")


_WingCfgMacAclRulePriorityField_Type.__name__ = "DisplayString"
_WingCfgMacAclRulePriorityField_Object = MibTableColumn
wingCfgMacAclRulePriorityField = _WingCfgMacAclRulePriorityField_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 4),
    _WingCfgMacAclRulePriorityField_Type()
)
wingCfgMacAclRulePriorityField.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRulePriorityField.setStatus("current")


class _WingCfgMacAclRuleMarkDscp_Type(Unsigned32):
    """Custom type wingCfgMacAclRuleMarkDscp based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_WingCfgMacAclRuleMarkDscp_Type.__name__ = "Unsigned32"
_WingCfgMacAclRuleMarkDscp_Object = MibTableColumn
wingCfgMacAclRuleMarkDscp = _WingCfgMacAclRuleMarkDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 5),
    _WingCfgMacAclRuleMarkDscp_Type()
)
wingCfgMacAclRuleMarkDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleMarkDscp.setStatus("current")


class _WingCfgMacAclRuleMark8021p_Type(Unsigned32):
    """Custom type wingCfgMacAclRuleMark8021p based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_WingCfgMacAclRuleMark8021p_Type.__name__ = "Unsigned32"
_WingCfgMacAclRuleMark8021p_Object = MibTableColumn
wingCfgMacAclRuleMark8021p = _WingCfgMacAclRuleMark8021p_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 6),
    _WingCfgMacAclRuleMark8021p_Type()
)
wingCfgMacAclRuleMark8021p.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleMark8021p.setStatus("current")


class _WingCfgMacAclRuleDescription_Type(DisplayString):
    """Custom type wingCfgMacAclRuleDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_WingCfgMacAclRuleDescription_Type.__name__ = "DisplayString"
_WingCfgMacAclRuleDescription_Object = MibTableColumn
wingCfgMacAclRuleDescription = _WingCfgMacAclRuleDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 7),
    _WingCfgMacAclRuleDescription_Type()
)
wingCfgMacAclRuleDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleDescription.setStatus("current")
_WingCfgMacAclRuleSmac_Type = MacAddress
_WingCfgMacAclRuleSmac_Object = MibTableColumn
wingCfgMacAclRuleSmac = _WingCfgMacAclRuleSmac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 8),
    _WingCfgMacAclRuleSmac_Type()
)
wingCfgMacAclRuleSmac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleSmac.setStatus("current")


class _WingCfgMacAclRuleSmacMask_Type(MacAddress):
    """Custom type wingCfgMacAclRuleSmacMask based on MacAddress"""
    defaultHexValue = "FFFFFFFFFFFF"


_WingCfgMacAclRuleSmacMask_Type.__name__ = "MacAddress"
_WingCfgMacAclRuleSmacMask_Object = MibTableColumn
wingCfgMacAclRuleSmacMask = _WingCfgMacAclRuleSmacMask_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 9),
    _WingCfgMacAclRuleSmacMask_Type()
)
wingCfgMacAclRuleSmacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleSmacMask.setStatus("current")
_WingCfgMacAclRuleDmac_Type = MacAddress
_WingCfgMacAclRuleDmac_Object = MibTableColumn
wingCfgMacAclRuleDmac = _WingCfgMacAclRuleDmac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 10),
    _WingCfgMacAclRuleDmac_Type()
)
wingCfgMacAclRuleDmac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleDmac.setStatus("current")


class _WingCfgMacAclRuleDmacMask_Type(MacAddress):
    """Custom type wingCfgMacAclRuleDmacMask based on MacAddress"""
    defaultHexValue = "FFFFFFFFFFFF"


_WingCfgMacAclRuleDmacMask_Type.__name__ = "MacAddress"
_WingCfgMacAclRuleDmacMask_Object = MibTableColumn
wingCfgMacAclRuleDmacMask = _WingCfgMacAclRuleDmacMask_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 11),
    _WingCfgMacAclRuleDmacMask_Type()
)
wingCfgMacAclRuleDmacMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleDmacMask.setStatus("current")


class _WingCfgMacAclRuleMatchVlan_Type(Unsigned32):
    """Custom type wingCfgMacAclRuleMatchVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgMacAclRuleMatchVlan_Type.__name__ = "Unsigned32"
_WingCfgMacAclRuleMatchVlan_Object = MibTableColumn
wingCfgMacAclRuleMatchVlan = _WingCfgMacAclRuleMatchVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 12),
    _WingCfgMacAclRuleMatchVlan_Type()
)
wingCfgMacAclRuleMatchVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleMatchVlan.setStatus("current")


class _WingCfgMacAclRuleMatchDot1p_Type(Unsigned32):
    """Custom type wingCfgMacAclRuleMatchDot1p based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_WingCfgMacAclRuleMatchDot1p_Type.__name__ = "Unsigned32"
_WingCfgMacAclRuleMatchDot1p_Object = MibTableColumn
wingCfgMacAclRuleMatchDot1p = _WingCfgMacAclRuleMatchDot1p_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 13),
    _WingCfgMacAclRuleMatchDot1p_Type()
)
wingCfgMacAclRuleMatchDot1p.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleMatchDot1p.setStatus("current")


class _WingCfgMacAclRuleMatchType_Type(DisplayString):
    """Custom type wingCfgMacAclRuleMatchType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_WingCfgMacAclRuleMatchType_Type.__name__ = "DisplayString"
_WingCfgMacAclRuleMatchType_Object = MibTableColumn
wingCfgMacAclRuleMatchType = _WingCfgMacAclRuleMatchType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 13, 2, 1, 14),
    _WingCfgMacAclRuleMatchType_Type()
)
wingCfgMacAclRuleMatchType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMacAclRuleMatchType.setStatus("current")
_WingCfgWips_ObjectIdentity = ObjectIdentity
wingCfgWips = _WingCfgWips_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14)
)
_WingCfgWipsTable_Object = MibTable
wingCfgWipsTable = _WingCfgWipsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1)
)
if mibBuilder.loadTexts:
    wingCfgWipsTable.setStatus("current")
_WingCfgWipsEntry_Object = MibTableRow
wingCfgWipsEntry = _WingCfgWipsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1)
)
wingCfgWipsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgWipsName"),
)
if mibBuilder.loadTexts:
    wingCfgWipsEntry.setStatus("current")
_WingCfgWipsName_Type = WingIdentifier
_WingCfgWipsName_Object = MibTableColumn
wingCfgWipsName = _WingCfgWipsName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1, 1),
    _WingCfgWipsName_Type()
)
wingCfgWipsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgWipsName.setStatus("current")


class _WingCfgWipsEnable_Type(TruthValue):
    """Custom type wingCfgWipsEnable based on TruthValue"""
    defaultValue = 1


_WingCfgWipsEnable_Type.__name__ = "TruthValue"
_WingCfgWipsEnable_Object = MibTableColumn
wingCfgWipsEnable = _WingCfgWipsEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1, 3),
    _WingCfgWipsEnable_Type()
)
wingCfgWipsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWipsEnable.setStatus("current")


class _WingCfgWipsHistoryThrottleDuration_Type(Unsigned32):
    """Custom type wingCfgWipsHistoryThrottleDuration based on Unsigned32"""
    defaultValue = 120

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 86400),
    )


_WingCfgWipsHistoryThrottleDuration_Type.__name__ = "Unsigned32"
_WingCfgWipsHistoryThrottleDuration_Object = MibTableColumn
wingCfgWipsHistoryThrottleDuration = _WingCfgWipsHistoryThrottleDuration_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1, 4),
    _WingCfgWipsHistoryThrottleDuration_Type()
)
wingCfgWipsHistoryThrottleDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWipsHistoryThrottleDuration.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWipsHistoryThrottleDuration.setUnits("seconds")


class _WingCfgWipsApDetection_Type(TruthValue):
    """Custom type wingCfgWipsApDetection based on TruthValue"""
    defaultValue = 2


_WingCfgWipsApDetection_Type.__name__ = "TruthValue"
_WingCfgWipsApDetection_Object = MibTableColumn
wingCfgWipsApDetection = _WingCfgWipsApDetection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1, 5),
    _WingCfgWipsApDetection_Type()
)
wingCfgWipsApDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWipsApDetection.setStatus("current")


class _WingCfgWipsApDetectionAgeout_Type(Unsigned32):
    """Custom type wingCfgWipsApDetectionAgeout based on Unsigned32"""
    defaultValue = 300

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 86400),
    )


_WingCfgWipsApDetectionAgeout_Type.__name__ = "Unsigned32"
_WingCfgWipsApDetectionAgeout_Object = MibTableColumn
wingCfgWipsApDetectionAgeout = _WingCfgWipsApDetectionAgeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1, 6),
    _WingCfgWipsApDetectionAgeout_Type()
)
wingCfgWipsApDetectionAgeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWipsApDetectionAgeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWipsApDetectionAgeout.setUnits("seconds")


class _WingCfgWipsApDetectionWaitTime_Type(Unsigned32):
    """Custom type wingCfgWipsApDetectionWaitTime based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600),
    )


_WingCfgWipsApDetectionWaitTime_Type.__name__ = "Unsigned32"
_WingCfgWipsApDetectionWaitTime_Object = MibTableColumn
wingCfgWipsApDetectionWaitTime = _WingCfgWipsApDetectionWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1, 7),
    _WingCfgWipsApDetectionWaitTime_Type()
)
wingCfgWipsApDetectionWaitTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWipsApDetectionWaitTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgWipsApDetectionWaitTime.setUnits("seconds")
_WingCfgWipsDeviceCategorization_Type = WingIdentifier
_WingCfgWipsDeviceCategorization_Object = MibTableColumn
wingCfgWipsDeviceCategorization = _WingCfgWipsDeviceCategorization_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 14, 1, 1, 8),
    _WingCfgWipsDeviceCategorization_Type()
)
wingCfgWipsDeviceCategorization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgWipsDeviceCategorization.setStatus("current")
_WingCfgDhcpSvr_ObjectIdentity = ObjectIdentity
wingCfgDhcpSvr = _WingCfgDhcpSvr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15)
)
_WingCfgDhcpSvrTable_Object = MibTable
wingCfgDhcpSvrTable = _WingCfgDhcpSvrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 1)
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrTable.setStatus("current")
_WingCfgDhcpSvrEntry_Object = MibTableRow
wingCfgDhcpSvrEntry = _WingCfgDhcpSvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 1, 1)
)
wingCfgDhcpSvrEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDhcpSvrName"),
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrEntry.setStatus("current")
_WingCfgDhcpSvrName_Type = WingIdentifier
_WingCfgDhcpSvrName_Object = MibTableColumn
wingCfgDhcpSvrName = _WingCfgDhcpSvrName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 1, 1, 1),
    _WingCfgDhcpSvrName_Type()
)
wingCfgDhcpSvrName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrName.setStatus("current")


class _WingCfgDhcpSvrIgnoreBootp_Type(TruthValue):
    """Custom type wingCfgDhcpSvrIgnoreBootp based on TruthValue"""
    defaultValue = 2


_WingCfgDhcpSvrIgnoreBootp_Type.__name__ = "TruthValue"
_WingCfgDhcpSvrIgnoreBootp_Object = MibTableColumn
wingCfgDhcpSvrIgnoreBootp = _WingCfgDhcpSvrIgnoreBootp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 1, 1, 3),
    _WingCfgDhcpSvrIgnoreBootp_Type()
)
wingCfgDhcpSvrIgnoreBootp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrIgnoreBootp.setStatus("current")


class _WingCfgDhcpSvrPingInterval_Type(Unsigned32):
    """Custom type wingCfgDhcpSvrPingInterval based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgDhcpSvrPingInterval_Type.__name__ = "Unsigned32"
_WingCfgDhcpSvrPingInterval_Object = MibTableColumn
wingCfgDhcpSvrPingInterval = _WingCfgDhcpSvrPingInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 1, 1, 4),
    _WingCfgDhcpSvrPingInterval_Type()
)
wingCfgDhcpSvrPingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPingInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPingInterval.setUnits("seconds")
_WingCfgDhcpSvrClassTable_Object = MibTable
wingCfgDhcpSvrClassTable = _WingCfgDhcpSvrClassTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 2)
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrClassTable.setStatus("current")
_WingCfgDhcpSvrClassEntry_Object = MibTableRow
wingCfgDhcpSvrClassEntry = _WingCfgDhcpSvrClassEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 2, 1)
)
wingCfgDhcpSvrClassEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDhcpSvrName"),
    (0, "WING-MIB", "wingCfgDhcpSvrClassName"),
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrClassEntry.setStatus("current")
_WingCfgDhcpSvrClassName_Type = WingIdentifier
_WingCfgDhcpSvrClassName_Object = MibTableColumn
wingCfgDhcpSvrClassName = _WingCfgDhcpSvrClassName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 2, 1, 1),
    _WingCfgDhcpSvrClassName_Type()
)
wingCfgDhcpSvrClassName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrClassName.setStatus("current")


class _WingCfgDhcpSvrClassMultipleUserClass_Type(TruthValue):
    """Custom type wingCfgDhcpSvrClassMultipleUserClass based on TruthValue"""
    defaultValue = 2


_WingCfgDhcpSvrClassMultipleUserClass_Type.__name__ = "TruthValue"
_WingCfgDhcpSvrClassMultipleUserClass_Object = MibTableColumn
wingCfgDhcpSvrClassMultipleUserClass = _WingCfgDhcpSvrClassMultipleUserClass_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 2, 1, 3),
    _WingCfgDhcpSvrClassMultipleUserClass_Type()
)
wingCfgDhcpSvrClassMultipleUserClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrClassMultipleUserClass.setStatus("current")
_WingCfgDhcpSvrOptionTable_Object = MibTable
wingCfgDhcpSvrOptionTable = _WingCfgDhcpSvrOptionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 3)
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrOptionTable.setStatus("current")
_WingCfgDhcpSvrOptionEntry_Object = MibTableRow
wingCfgDhcpSvrOptionEntry = _WingCfgDhcpSvrOptionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 3, 1)
)
wingCfgDhcpSvrOptionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDhcpSvrName"),
    (0, "WING-MIB", "wingCfgDhcpSvrOptionName"),
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrOptionEntry.setStatus("current")
_WingCfgDhcpSvrOptionName_Type = WingIdentifier
_WingCfgDhcpSvrOptionName_Object = MibTableColumn
wingCfgDhcpSvrOptionName = _WingCfgDhcpSvrOptionName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 3, 1, 1),
    _WingCfgDhcpSvrOptionName_Type()
)
wingCfgDhcpSvrOptionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrOptionName.setStatus("current")


class _WingCfgDhcpSvrOptionCode_Type(Unsigned32):
    """Custom type wingCfgDhcpSvrOptionCode based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_WingCfgDhcpSvrOptionCode_Type.__name__ = "Unsigned32"
_WingCfgDhcpSvrOptionCode_Object = MibTableColumn
wingCfgDhcpSvrOptionCode = _WingCfgDhcpSvrOptionCode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 3, 1, 3),
    _WingCfgDhcpSvrOptionCode_Type()
)
wingCfgDhcpSvrOptionCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrOptionCode.setStatus("current")
_WingCfgDhcpSvrOptionType_Type = DisplayString
_WingCfgDhcpSvrOptionType_Object = MibTableColumn
wingCfgDhcpSvrOptionType = _WingCfgDhcpSvrOptionType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 3, 1, 4),
    _WingCfgDhcpSvrOptionType_Type()
)
wingCfgDhcpSvrOptionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrOptionType.setStatus("current")
_WingCfgDhcpSvrPoolTable_Object = MibTable
wingCfgDhcpSvrPoolTable = _WingCfgDhcpSvrPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4)
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolTable.setStatus("current")
_WingCfgDhcpSvrPoolEntry_Object = MibTableRow
wingCfgDhcpSvrPoolEntry = _WingCfgDhcpSvrPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1)
)
wingCfgDhcpSvrPoolEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDhcpSvrName"),
    (0, "WING-MIB", "wingCfgDhcpSvrPoolName"),
)
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolEntry.setStatus("current")
_WingCfgDhcpSvrPoolName_Type = WingIdentifier
_WingCfgDhcpSvrPoolName_Object = MibTableColumn
wingCfgDhcpSvrPoolName = _WingCfgDhcpSvrPoolName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 1),
    _WingCfgDhcpSvrPoolName_Type()
)
wingCfgDhcpSvrPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolName.setStatus("current")
_WingCfgDhcpSvrPoolNetwork_Type = DisplayString
_WingCfgDhcpSvrPoolNetwork_Object = MibTableColumn
wingCfgDhcpSvrPoolNetwork = _WingCfgDhcpSvrPoolNetwork_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 3),
    _WingCfgDhcpSvrPoolNetwork_Type()
)
wingCfgDhcpSvrPoolNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolNetwork.setStatus("current")


class _WingCfgDhcpSvrPoolDomainName_Type(DisplayString):
    """Custom type wingCfgDhcpSvrPoolDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_WingCfgDhcpSvrPoolDomainName_Type.__name__ = "DisplayString"
_WingCfgDhcpSvrPoolDomainName_Object = MibTableColumn
wingCfgDhcpSvrPoolDomainName = _WingCfgDhcpSvrPoolDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 4),
    _WingCfgDhcpSvrPoolDomainName_Type()
)
wingCfgDhcpSvrPoolDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolDomainName.setStatus("current")


class _WingCfgDhcpSvrPoolNetbiosNodeType_Type(DisplayString):
    """Custom type wingCfgDhcpSvrPoolNetbiosNodeType based on DisplayString"""
    defaultValue = OctetString("undefined")


_WingCfgDhcpSvrPoolNetbiosNodeType_Type.__name__ = "DisplayString"
_WingCfgDhcpSvrPoolNetbiosNodeType_Object = MibTableColumn
wingCfgDhcpSvrPoolNetbiosNodeType = _WingCfgDhcpSvrPoolNetbiosNodeType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 5),
    _WingCfgDhcpSvrPoolNetbiosNodeType_Type()
)
wingCfgDhcpSvrPoolNetbiosNodeType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolNetbiosNodeType.setStatus("current")
_WingCfgDhcpSvrPoolBootfile_Type = DisplayString
_WingCfgDhcpSvrPoolBootfile_Object = MibTableColumn
wingCfgDhcpSvrPoolBootfile = _WingCfgDhcpSvrPoolBootfile_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 6),
    _WingCfgDhcpSvrPoolBootfile_Type()
)
wingCfgDhcpSvrPoolBootfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolBootfile.setStatus("current")


class _WingCfgDhcpSvrPoolLeaseTime_Type(Unsigned32):
    """Custom type wingCfgDhcpSvrPoolLeaseTime based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31622399),
    )


_WingCfgDhcpSvrPoolLeaseTime_Type.__name__ = "Unsigned32"
_WingCfgDhcpSvrPoolLeaseTime_Object = MibTableColumn
wingCfgDhcpSvrPoolLeaseTime = _WingCfgDhcpSvrPoolLeaseTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 7),
    _WingCfgDhcpSvrPoolLeaseTime_Type()
)
wingCfgDhcpSvrPoolLeaseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolLeaseTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolLeaseTime.setUnits("seconds")
_WingCfgDhcpSvrPoolBootpNextServer_Type = DisplayString
_WingCfgDhcpSvrPoolBootpNextServer_Object = MibTableColumn
wingCfgDhcpSvrPoolBootpNextServer = _WingCfgDhcpSvrPoolBootpNextServer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 8),
    _WingCfgDhcpSvrPoolBootpNextServer_Type()
)
wingCfgDhcpSvrPoolBootpNextServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolBootpNextServer.setStatus("current")


class _WingCfgDhcpSvrPoolUpdateDns_Type(DisplayString):
    """Custom type wingCfgDhcpSvrPoolUpdateDns based on DisplayString"""
    defaultValue = OctetString("noUpdate")


_WingCfgDhcpSvrPoolUpdateDns_Type.__name__ = "DisplayString"
_WingCfgDhcpSvrPoolUpdateDns_Object = MibTableColumn
wingCfgDhcpSvrPoolUpdateDns = _WingCfgDhcpSvrPoolUpdateDns_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 9),
    _WingCfgDhcpSvrPoolUpdateDns_Type()
)
wingCfgDhcpSvrPoolUpdateDns.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolUpdateDns.setStatus("current")
_WingCfgDhcpSvrPoolDdnsDomainName_Type = DisplayString
_WingCfgDhcpSvrPoolDdnsDomainName_Object = MibTableColumn
wingCfgDhcpSvrPoolDdnsDomainName = _WingCfgDhcpSvrPoolDdnsDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 10),
    _WingCfgDhcpSvrPoolDdnsDomainName_Type()
)
wingCfgDhcpSvrPoolDdnsDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolDdnsDomainName.setStatus("current")


class _WingCfgDhcpSvrPoolDdnsTtl_Type(Unsigned32):
    """Custom type wingCfgDhcpSvrPoolDdnsTtl based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 864000),
    )


_WingCfgDhcpSvrPoolDdnsTtl_Type.__name__ = "Unsigned32"
_WingCfgDhcpSvrPoolDdnsTtl_Object = MibTableColumn
wingCfgDhcpSvrPoolDdnsTtl = _WingCfgDhcpSvrPoolDdnsTtl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 11),
    _WingCfgDhcpSvrPoolDdnsTtl_Type()
)
wingCfgDhcpSvrPoolDdnsTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolDdnsTtl.setStatus("current")


class _WingCfgDhcpSvrPoolDdnsMultiUserClass_Type(TruthValue):
    """Custom type wingCfgDhcpSvrPoolDdnsMultiUserClass based on TruthValue"""
    defaultValue = 2


_WingCfgDhcpSvrPoolDdnsMultiUserClass_Type.__name__ = "TruthValue"
_WingCfgDhcpSvrPoolDdnsMultiUserClass_Object = MibTableColumn
wingCfgDhcpSvrPoolDdnsMultiUserClass = _WingCfgDhcpSvrPoolDdnsMultiUserClass_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 12),
    _WingCfgDhcpSvrPoolDdnsMultiUserClass_Type()
)
wingCfgDhcpSvrPoolDdnsMultiUserClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolDdnsMultiUserClass.setStatus("current")


class _WingCfgDhcpSvrPoolUnicastEnable_Type(TruthValue):
    """Custom type wingCfgDhcpSvrPoolUnicastEnable based on TruthValue"""
    defaultValue = 2


_WingCfgDhcpSvrPoolUnicastEnable_Type.__name__ = "TruthValue"
_WingCfgDhcpSvrPoolUnicastEnable_Object = MibTableColumn
wingCfgDhcpSvrPoolUnicastEnable = _WingCfgDhcpSvrPoolUnicastEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 15, 4, 1, 13),
    _WingCfgDhcpSvrPoolUnicastEnable_Type()
)
wingCfgDhcpSvrPoolUnicastEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDhcpSvrPoolUnicastEnable.setStatus("current")
_WingCfgProf_ObjectIdentity = ObjectIdentity
wingCfgProf = _WingCfgProf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16)
)
_WingCfgProfTable_Object = MibTable
wingCfgProfTable = _WingCfgProfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfTable.setStatus("current")
_WingCfgProfEntry_Object = MibTableRow
wingCfgProfEntry = _WingCfgProfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1)
)
wingCfgProfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfEntry.setStatus("current")
_WingCfgProfName_Type = WingIdentifier
_WingCfgProfName_Object = MibTableColumn
wingCfgProfName = _WingCfgProfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 1),
    _WingCfgProfName_Type()
)
wingCfgProfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfName.setStatus("current")
_WingCfgProfType_Type = DisplayString
_WingCfgProfType_Object = MibTableColumn
wingCfgProfType = _WingCfgProfType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 3),
    _WingCfgProfType_Type()
)
wingCfgProfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfType.setStatus("current")


class _WingCfgProfDomainLookup_Type(TruthValue):
    """Custom type wingCfgProfDomainLookup based on TruthValue"""
    defaultValue = 1


_WingCfgProfDomainLookup_Type.__name__ = "TruthValue"
_WingCfgProfDomainLookup_Object = MibTableColumn
wingCfgProfDomainLookup = _WingCfgProfDomainLookup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 4),
    _WingCfgProfDomainLookup_Type()
)
wingCfgProfDomainLookup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDomainLookup.setStatus("current")


class _WingCfgProfDomainName_Type(DisplayString):
    """Custom type wingCfgProfDomainName based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgProfDomainName_Type.__name__ = "DisplayString"
_WingCfgProfDomainName_Object = MibTableColumn
wingCfgProfDomainName = _WingCfgProfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 5),
    _WingCfgProfDomainName_Type()
)
wingCfgProfDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDomainName.setStatus("current")


class _WingCfgProfArpTimeout_Type(Unsigned32):
    """Custom type wingCfgProfArpTimeout based on Unsigned32"""
    defaultValue = 3600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(15, 86400),
    )


_WingCfgProfArpTimeout_Type.__name__ = "Unsigned32"
_WingCfgProfArpTimeout_Object = MibTableColumn
wingCfgProfArpTimeout = _WingCfgProfArpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 6),
    _WingCfgProfArpTimeout_Type()
)
wingCfgProfArpTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfArpTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfArpTimeout.setUnits("seconds")
_WingCfgProfApIpAddr_Type = DisplayString
_WingCfgProfApIpAddr_Object = MibTableColumn
wingCfgProfApIpAddr = _WingCfgProfApIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 7),
    _WingCfgProfApIpAddr_Type()
)
wingCfgProfApIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfApIpAddr.setStatus("current")


class _WingCfgProfAutoConfUpdate_Type(TruthValue):
    """Custom type wingCfgProfAutoConfUpdate based on TruthValue"""
    defaultValue = 2


_WingCfgProfAutoConfUpdate_Type.__name__ = "TruthValue"
_WingCfgProfAutoConfUpdate_Object = MibTableColumn
wingCfgProfAutoConfUpdate = _WingCfgProfAutoConfUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 8),
    _WingCfgProfAutoConfUpdate_Type()
)
wingCfgProfAutoConfUpdate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfAutoConfUpdate.setStatus("current")


class _WingCfgProfAutoFwUpdate_Type(TruthValue):
    """Custom type wingCfgProfAutoFwUpdate based on TruthValue"""
    defaultValue = 2


_WingCfgProfAutoFwUpdate_Type.__name__ = "TruthValue"
_WingCfgProfAutoFwUpdate_Object = MibTableColumn
wingCfgProfAutoFwUpdate = _WingCfgProfAutoFwUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 9),
    _WingCfgProfAutoFwUpdate_Type()
)
wingCfgProfAutoFwUpdate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfAutoFwUpdate.setStatus("current")


class _WingCfgProfAutoupgradeCount_Type(Unsigned32):
    """Custom type wingCfgProfAutoupgradeCount based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_WingCfgProfAutoupgradeCount_Type.__name__ = "Unsigned32"
_WingCfgProfAutoupgradeCount_Object = MibTableColumn
wingCfgProfAutoupgradeCount = _WingCfgProfAutoupgradeCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 11),
    _WingCfgProfAutoupgradeCount_Type()
)
wingCfgProfAutoupgradeCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfAutoupgradeCount.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfAutoupgradeCount.setUnits("APs")


class _WingCfgProfServiceWatchdog_Type(TruthValue):
    """Custom type wingCfgProfServiceWatchdog based on TruthValue"""
    defaultValue = 1


_WingCfgProfServiceWatchdog_Type.__name__ = "TruthValue"
_WingCfgProfServiceWatchdog_Object = MibTableColumn
wingCfgProfServiceWatchdog = _WingCfgProfServiceWatchdog_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 12),
    _WingCfgProfServiceWatchdog_Type()
)
wingCfgProfServiceWatchdog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfServiceWatchdog.setStatus("current")
_WingCfgProfRadiusServerPolicy_Type = WingIdentifier
_WingCfgProfRadiusServerPolicy_Object = MibTableColumn
wingCfgProfRadiusServerPolicy = _WingCfgProfRadiusServerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 13),
    _WingCfgProfRadiusServerPolicy_Type()
)
wingCfgProfRadiusServerPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfRadiusServerPolicy.setStatus("current")
_WingCfgProfDhcpServerPolicy_Type = WingIdentifier
_WingCfgProfDhcpServerPolicy_Object = MibTableColumn
wingCfgProfDhcpServerPolicy = _WingCfgProfDhcpServerPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 14),
    _WingCfgProfDhcpServerPolicy_Type()
)
wingCfgProfDhcpServerPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDhcpServerPolicy.setStatus("current")
_WingCfgProfManagementPolicy_Type = WingIdentifier
_WingCfgProfManagementPolicy_Object = MibTableColumn
wingCfgProfManagementPolicy = _WingCfgProfManagementPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 15),
    _WingCfgProfManagementPolicy_Type()
)
wingCfgProfManagementPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfManagementPolicy.setStatus("current")
_WingCfgProfFirewallPolicy_Type = WingIdentifier
_WingCfgProfFirewallPolicy_Object = MibTableColumn
wingCfgProfFirewallPolicy = _WingCfgProfFirewallPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 16),
    _WingCfgProfFirewallPolicy_Type()
)
wingCfgProfFirewallPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfFirewallPolicy.setStatus("current")
_WingCfgProfAdvancedWipsPolicy_Type = WingIdentifier
_WingCfgProfAdvancedWipsPolicy_Object = MibTableColumn
wingCfgProfAdvancedWipsPolicy = _WingCfgProfAdvancedWipsPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 17),
    _WingCfgProfAdvancedWipsPolicy_Type()
)
wingCfgProfAdvancedWipsPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfAdvancedWipsPolicy.setStatus("current")
_WingCfgProfRolePolicy_Type = WingIdentifier
_WingCfgProfRolePolicy_Object = MibTableColumn
wingCfgProfRolePolicy = _WingCfgProfRolePolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 18),
    _WingCfgProfRolePolicy_Type()
)
wingCfgProfRolePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfRolePolicy.setStatus("current")
_WingCfgProfAdoptionPolicy_Type = WingIdentifier
_WingCfgProfAdoptionPolicy_Object = MibTableColumn
wingCfgProfAdoptionPolicy = _WingCfgProfAdoptionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 19),
    _WingCfgProfAdoptionPolicy_Type()
)
wingCfgProfAdoptionPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfAdoptionPolicy.setStatus("current")
_WingCfgProfBridgingPolicy_Type = WingIdentifier
_WingCfgProfBridgingPolicy_Object = MibTableColumn
wingCfgProfBridgingPolicy = _WingCfgProfBridgingPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 20),
    _WingCfgProfBridgingPolicy_Type()
)
wingCfgProfBridgingPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgingPolicy.setStatus("current")
_WingCfgProfEventSystemPolicy_Type = WingIdentifier
_WingCfgProfEventSystemPolicy_Object = MibTableColumn
wingCfgProfEventSystemPolicy = _WingCfgProfEventSystemPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 21),
    _WingCfgProfEventSystemPolicy_Type()
)
wingCfgProfEventSystemPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfEventSystemPolicy.setStatus("current")
_WingCfgProfRoutingPolicy_Type = WingIdentifier
_WingCfgProfRoutingPolicy_Object = MibTableColumn
wingCfgProfRoutingPolicy = _WingCfgProfRoutingPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 22),
    _WingCfgProfRoutingPolicy_Type()
)
wingCfgProfRoutingPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfRoutingPolicy.setStatus("current")


class _WingCfgProfRfDomainMgrCapable_Type(TruthValue):
    """Custom type wingCfgProfRfDomainMgrCapable based on TruthValue"""
    defaultValue = 1


_WingCfgProfRfDomainMgrCapable_Type.__name__ = "TruthValue"
_WingCfgProfRfDomainMgrCapable_Object = MibTableColumn
wingCfgProfRfDomainMgrCapable = _WingCfgProfRfDomainMgrCapable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 23),
    _WingCfgProfRfDomainMgrCapable_Type()
)
wingCfgProfRfDomainMgrCapable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfRfDomainMgrCapable.setStatus("current")


class _WingCfgProfRfDomainMgrPriority_Type(Unsigned32):
    """Custom type wingCfgProfRfDomainMgrPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgProfRfDomainMgrPriority_Type.__name__ = "Unsigned32"
_WingCfgProfRfDomainMgrPriority_Object = MibTableColumn
wingCfgProfRfDomainMgrPriority = _WingCfgProfRfDomainMgrPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 24),
    _WingCfgProfRfDomainMgrPriority_Type()
)
wingCfgProfRfDomainMgrPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfRfDomainMgrPriority.setStatus("current")


class _WingCfgProfDhcpcSendHostname_Type(TruthValue):
    """Custom type wingCfgProfDhcpcSendHostname based on TruthValue"""
    defaultValue = 1


_WingCfgProfDhcpcSendHostname_Type.__name__ = "TruthValue"
_WingCfgProfDhcpcSendHostname_Object = MibTableColumn
wingCfgProfDhcpcSendHostname = _WingCfgProfDhcpcSendHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 25),
    _WingCfgProfDhcpcSendHostname_Type()
)
wingCfgProfDhcpcSendHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDhcpcSendHostname.setStatus("current")


class _WingCfgProfDhcpcPersistentLease_Type(TruthValue):
    """Custom type wingCfgProfDhcpcPersistentLease based on TruthValue"""
    defaultValue = 1


_WingCfgProfDhcpcPersistentLease_Type.__name__ = "TruthValue"
_WingCfgProfDhcpcPersistentLease_Object = MibTableColumn
wingCfgProfDhcpcPersistentLease = _WingCfgProfDhcpcPersistentLease_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 26),
    _WingCfgProfDhcpcPersistentLease_Type()
)
wingCfgProfDhcpcPersistentLease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDhcpcPersistentLease.setStatus("current")


class _WingCfgProfDnsServerForward_Type(TruthValue):
    """Custom type wingCfgProfDnsServerForward based on TruthValue"""
    defaultValue = 2


_WingCfgProfDnsServerForward_Type.__name__ = "TruthValue"
_WingCfgProfDnsServerForward_Object = MibTableColumn
wingCfgProfDnsServerForward = _WingCfgProfDnsServerForward_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 27),
    _WingCfgProfDnsServerForward_Type()
)
wingCfgProfDnsServerForward.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDnsServerForward.setStatus("current")


class _WingCfgProfBridgeAgingTime_Type(Unsigned32):
    """Custom type wingCfgProfBridgeAgingTime based on Unsigned32"""
    defaultValue = 300

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(10, 1000000),
    )


_WingCfgProfBridgeAgingTime_Type.__name__ = "Unsigned32"
_WingCfgProfBridgeAgingTime_Object = MibTableColumn
wingCfgProfBridgeAgingTime = _WingCfgProfBridgeAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 28),
    _WingCfgProfBridgeAgingTime_Type()
)
wingCfgProfBridgeAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeAgingTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfBridgeAgingTime.setUnits("seconds")


class _WingCfgProfLogging_Type(TruthValue):
    """Custom type wingCfgProfLogging based on TruthValue"""
    defaultValue = 2


_WingCfgProfLogging_Type.__name__ = "TruthValue"
_WingCfgProfLogging_Object = MibTableColumn
wingCfgProfLogging = _WingCfgProfLogging_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 29),
    _WingCfgProfLogging_Type()
)
wingCfgProfLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfLogging.setStatus("current")


class _WingCfgProfAggregationTime_Type(Unsigned32):
    """Custom type wingCfgProfAggregationTime based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_WingCfgProfAggregationTime_Type.__name__ = "Unsigned32"
_WingCfgProfAggregationTime_Object = MibTableColumn
wingCfgProfAggregationTime = _WingCfgProfAggregationTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 30),
    _WingCfgProfAggregationTime_Type()
)
wingCfgProfAggregationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfAggregationTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfAggregationTime.setUnits("seconds")


class _WingCfgProfConsole_Type(DisplayString):
    """Custom type wingCfgProfConsole based on DisplayString"""
    defaultValue = OctetString("warnings")


_WingCfgProfConsole_Type.__name__ = "DisplayString"
_WingCfgProfConsole_Object = MibTableColumn
wingCfgProfConsole = _WingCfgProfConsole_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 31),
    _WingCfgProfConsole_Type()
)
wingCfgProfConsole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfConsole.setStatus("current")


class _WingCfgProfBuffered_Type(DisplayString):
    """Custom type wingCfgProfBuffered based on DisplayString"""
    defaultValue = OctetString("warnings")


_WingCfgProfBuffered_Type.__name__ = "DisplayString"
_WingCfgProfBuffered_Object = MibTableColumn
wingCfgProfBuffered = _WingCfgProfBuffered_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 32),
    _WingCfgProfBuffered_Type()
)
wingCfgProfBuffered.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBuffered.setStatus("current")


class _WingCfgProfSyslog_Type(DisplayString):
    """Custom type wingCfgProfSyslog based on DisplayString"""
    defaultValue = OctetString("warnings")


_WingCfgProfSyslog_Type.__name__ = "DisplayString"
_WingCfgProfSyslog_Object = MibTableColumn
wingCfgProfSyslog = _WingCfgProfSyslog_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 33),
    _WingCfgProfSyslog_Type()
)
wingCfgProfSyslog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfSyslog.setStatus("current")


class _WingCfgProfFacility_Type(DisplayString):
    """Custom type wingCfgProfFacility based on DisplayString"""
    defaultValue = OctetString("local7")


_WingCfgProfFacility_Type.__name__ = "DisplayString"
_WingCfgProfFacility_Object = MibTableColumn
wingCfgProfFacility = _WingCfgProfFacility_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 34),
    _WingCfgProfFacility_Type()
)
wingCfgProfFacility.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfFacility.setStatus("current")


class _WingCfgProfEvents_Type(TruthValue):
    """Custom type wingCfgProfEvents based on TruthValue"""
    defaultValue = 1


_WingCfgProfEvents_Type.__name__ = "TruthValue"
_WingCfgProfEvents_Object = MibTableColumn
wingCfgProfEvents = _WingCfgProfEvents_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 35),
    _WingCfgProfEvents_Type()
)
wingCfgProfEvents.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfEvents.setStatus("current")


class _WingCfgProfEventsForward_Type(TruthValue):
    """Custom type wingCfgProfEventsForward based on TruthValue"""
    defaultValue = 1


_WingCfgProfEventsForward_Type.__name__ = "TruthValue"
_WingCfgProfEventsForward_Object = MibTableColumn
wingCfgProfEventsForward = _WingCfgProfEventsForward_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 36),
    _WingCfgProfEventsForward_Type()
)
wingCfgProfEventsForward.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfEventsForward.setStatus("current")


class _WingCfgProfLed_Type(TruthValue):
    """Custom type wingCfgProfLed based on TruthValue"""
    defaultValue = 1


_WingCfgProfLed_Type.__name__ = "TruthValue"
_WingCfgProfLed_Object = MibTableColumn
wingCfgProfLed = _WingCfgProfLed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 37),
    _WingCfgProfLed_Type()
)
wingCfgProfLed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfLed.setStatus("current")


class _WingCfgProfRemoteLogging_Type(DisplayString):
    """Custom type wingCfgProfRemoteLogging based on DisplayString"""
    defaultValue = OctetString("errors")


_WingCfgProfRemoteLogging_Type.__name__ = "DisplayString"
_WingCfgProfRemoteLogging_Object = MibTableColumn
wingCfgProfRemoteLogging = _WingCfgProfRemoteLogging_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 38),
    _WingCfgProfRemoteLogging_Type()
)
wingCfgProfRemoteLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfRemoteLogging.setStatus("current")


class _WingCfgProfPowerConfig3afOption_Type(DisplayString):
    """Custom type wingCfgProfPowerConfig3afOption based on DisplayString"""
    defaultValue = OctetString("throughput")


_WingCfgProfPowerConfig3afOption_Type.__name__ = "DisplayString"
_WingCfgProfPowerConfig3afOption_Object = MibTableColumn
wingCfgProfPowerConfig3afOption = _WingCfgProfPowerConfig3afOption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 39),
    _WingCfgProfPowerConfig3afOption_Type()
)
wingCfgProfPowerConfig3afOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfPowerConfig3afOption.setStatus("current")


class _WingCfgProfPowerConfig3atOption_Type(DisplayString):
    """Custom type wingCfgProfPowerConfig3atOption based on DisplayString"""
    defaultValue = OctetString("throughput")


_WingCfgProfPowerConfig3atOption_Type.__name__ = "DisplayString"
_WingCfgProfPowerConfig3atOption_Object = MibTableColumn
wingCfgProfPowerConfig3atOption = _WingCfgProfPowerConfig3atOption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 40),
    _WingCfgProfPowerConfig3atOption_Type()
)
wingCfgProfPowerConfig3atOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfPowerConfig3atOption.setStatus("current")


class _WingCfgProfPowerConfigMode_Type(DisplayString):
    """Custom type wingCfgProfPowerConfigMode based on DisplayString"""
    defaultValue = OctetString("auto")


_WingCfgProfPowerConfigMode_Type.__name__ = "DisplayString"
_WingCfgProfPowerConfigMode_Object = MibTableColumn
wingCfgProfPowerConfigMode = _WingCfgProfPowerConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 41),
    _WingCfgProfPowerConfigMode_Type()
)
wingCfgProfPowerConfigMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfPowerConfigMode.setStatus("current")
_WingCfgProfCriticalResourcePolicy_Type = WingIdentifier
_WingCfgProfCriticalResourcePolicy_Object = MibTableColumn
wingCfgProfCriticalResourcePolicy = _WingCfgProfCriticalResourcePolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 42),
    _WingCfgProfCriticalResourcePolicy_Type()
)
wingCfgProfCriticalResourcePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResourcePolicy.setStatus("current")


class _WingCfgProfControllerAp_Type(TruthValue):
    """Custom type wingCfgProfControllerAp based on TruthValue"""
    defaultValue = 2


_WingCfgProfControllerAp_Type.__name__ = "TruthValue"
_WingCfgProfControllerAp_Object = MibTableColumn
wingCfgProfControllerAp = _WingCfgProfControllerAp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 44),
    _WingCfgProfControllerAp_Type()
)
wingCfgProfControllerAp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfControllerAp.setStatus("current")


class _WingCfgProfControllerVlan_Type(Unsigned32):
    """Custom type wingCfgProfControllerVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgProfControllerVlan_Type.__name__ = "Unsigned32"
_WingCfgProfControllerVlan_Object = MibTableColumn
wingCfgProfControllerVlan = _WingCfgProfControllerVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 45),
    _WingCfgProfControllerVlan_Type()
)
wingCfgProfControllerVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfControllerVlan.setStatus("current")


class _WingCfgProfControllerGroup_Type(DisplayString):
    """Custom type wingCfgProfControllerGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgProfControllerGroup_Type.__name__ = "DisplayString"
_WingCfgProfControllerGroup_Object = MibTableColumn
wingCfgProfControllerGroup = _WingCfgProfControllerGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 46),
    _WingCfgProfControllerGroup_Type()
)
wingCfgProfControllerGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfControllerGroup.setStatus("current")


class _WingCfgProfPreferredControllerGroup_Type(DisplayString):
    """Custom type wingCfgProfPreferredControllerGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgProfPreferredControllerGroup_Type.__name__ = "DisplayString"
_WingCfgProfPreferredControllerGroup_Object = MibTableColumn
wingCfgProfPreferredControllerGroup = _WingCfgProfPreferredControllerGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 47),
    _WingCfgProfPreferredControllerGroup_Type()
)
wingCfgProfPreferredControllerGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfPreferredControllerGroup.setStatus("current")


class _WingCfgProfIpRouting_Type(TruthValue):
    """Custom type wingCfgProfIpRouting based on TruthValue"""
    defaultValue = 1


_WingCfgProfIpRouting_Type.__name__ = "TruthValue"
_WingCfgProfIpRouting_Object = MibTableColumn
wingCfgProfIpRouting = _WingCfgProfIpRouting_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 48),
    _WingCfgProfIpRouting_Type()
)
wingCfgProfIpRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIpRouting.setStatus("current")


class _WingCfgProfLearnStagingConfig_Type(TruthValue):
    """Custom type wingCfgProfLearnStagingConfig based on TruthValue"""
    defaultValue = 1


_WingCfgProfLearnStagingConfig_Type.__name__ = "TruthValue"
_WingCfgProfLearnStagingConfig_Object = MibTableColumn
wingCfgProfLearnStagingConfig = _WingCfgProfLearnStagingConfig_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 49),
    _WingCfgProfLearnStagingConfig_Type()
)
wingCfgProfLearnStagingConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfLearnStagingConfig.setStatus("current")
_WingCfgProfTunnelController_Type = DisplayString
_WingCfgProfTunnelController_Object = MibTableColumn
wingCfgProfTunnelController = _WingCfgProfTunnelController_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 50),
    _WingCfgProfTunnelController_Type()
)
wingCfgProfTunnelController.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfTunnelController.setStatus("current")
_WingCfgProfPreferredTunnelController_Type = DisplayString
_WingCfgProfPreferredTunnelController_Object = MibTableColumn
wingCfgProfPreferredTunnelController = _WingCfgProfPreferredTunnelController_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 51),
    _WingCfgProfPreferredTunnelController_Type()
)
wingCfgProfPreferredTunnelController.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfPreferredTunnelController.setStatus("current")


class _WingCfgProfDot1xSysAuthCtrl_Type(TruthValue):
    """Custom type wingCfgProfDot1xSysAuthCtrl based on TruthValue"""
    defaultValue = 2


_WingCfgProfDot1xSysAuthCtrl_Type.__name__ = "TruthValue"
_WingCfgProfDot1xSysAuthCtrl_Object = MibTableColumn
wingCfgProfDot1xSysAuthCtrl = _WingCfgProfDot1xSysAuthCtrl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 52),
    _WingCfgProfDot1xSysAuthCtrl_Type()
)
wingCfgProfDot1xSysAuthCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot1xSysAuthCtrl.setStatus("current")


class _WingCfgProfDot1xGuestVlanCtrl_Type(TruthValue):
    """Custom type wingCfgProfDot1xGuestVlanCtrl based on TruthValue"""
    defaultValue = 2


_WingCfgProfDot1xGuestVlanCtrl_Type.__name__ = "TruthValue"
_WingCfgProfDot1xGuestVlanCtrl_Object = MibTableColumn
wingCfgProfDot1xGuestVlanCtrl = _WingCfgProfDot1xGuestVlanCtrl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 53),
    _WingCfgProfDot1xGuestVlanCtrl_Type()
)
wingCfgProfDot1xGuestVlanCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot1xGuestVlanCtrl.setStatus("current")
_WingCfgProfDot1xAaaPolicy_Type = WingIdentifier
_WingCfgProfDot1xAaaPolicy_Object = MibTableColumn
wingCfgProfDot1xAaaPolicy = _WingCfgProfDot1xAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 1, 1, 54),
    _WingCfgProfDot1xAaaPolicy_Type()
)
wingCfgProfDot1xAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot1xAaaPolicy.setStatus("current")
_WingCfgProfIf_ObjectIdentity = ObjectIdentity
wingCfgProfIf = _WingCfgProfIf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2)
)
_WingCfgProfIfTable_Object = MibTable
wingCfgProfIfTable = _WingCfgProfIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfIfTable.setStatus("current")
_WingCfgProfIfEntry_Object = MibTableRow
wingCfgProfIfEntry = _WingCfgProfIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1, 1)
)
wingCfgProfIfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfEntry.setStatus("current")
_WingCfgProfIfName_Type = WingIdentifier
_WingCfgProfIfName_Object = MibTableColumn
wingCfgProfIfName = _WingCfgProfIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1, 1, 1),
    _WingCfgProfIfName_Type()
)
wingCfgProfIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfIfName.setStatus("current")
_WingCfgProfIfDescription_Type = DisplayString
_WingCfgProfIfDescription_Object = MibTableColumn
wingCfgProfIfDescription = _WingCfgProfIfDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1, 1, 3),
    _WingCfgProfIfDescription_Type()
)
wingCfgProfIfDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDescription.setStatus("current")
_WingCfgProfIfType_Type = DisplayString
_WingCfgProfIfType_Object = MibTableColumn
wingCfgProfIfType = _WingCfgProfIfType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1, 1, 4),
    _WingCfgProfIfType_Type()
)
wingCfgProfIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfType.setStatus("current")


class _WingCfgProfIfShutdown_Type(TruthValue):
    """Custom type wingCfgProfIfShutdown based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfShutdown_Type.__name__ = "TruthValue"
_WingCfgProfIfShutdown_Object = MibTableColumn
wingCfgProfIfShutdown = _WingCfgProfIfShutdown_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1, 1, 5),
    _WingCfgProfIfShutdown_Type()
)
wingCfgProfIfShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfShutdown.setStatus("current")
_WingCfgProfIfIpInAcl_Type = WingIdentifier
_WingCfgProfIfIpInAcl_Object = MibTableColumn
wingCfgProfIfIpInAcl = _WingCfgProfIfIpInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1, 1, 6),
    _WingCfgProfIfIpInAcl_Type()
)
wingCfgProfIfIpInAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfIpInAcl.setStatus("current")
_WingCfgProfIfMacInAcl_Type = WingIdentifier
_WingCfgProfIfMacInAcl_Object = MibTableColumn
wingCfgProfIfMacInAcl = _WingCfgProfIfMacInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 1, 1, 7),
    _WingCfgProfIfMacInAcl_Type()
)
wingCfgProfIfMacInAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfMacInAcl.setStatus("current")
_WingCfgProfIfEthTable_Object = MibTable
wingCfgProfIfEthTable = _WingCfgProfIfEthTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfIfEthTable.setStatus("current")
_WingCfgProfIfEthEntry_Object = MibTableRow
wingCfgProfIfEthEntry = _WingCfgProfIfEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1)
)
wingCfgProfIfEthEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfEthEntry.setStatus("current")


class _WingCfgProfIfEthSpeed_Type(DisplayString):
    """Custom type wingCfgProfIfEthSpeed based on DisplayString"""
    defaultValue = OctetString("auto")


_WingCfgProfIfEthSpeed_Type.__name__ = "DisplayString"
_WingCfgProfIfEthSpeed_Object = MibTableColumn
wingCfgProfIfEthSpeed = _WingCfgProfIfEthSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 1),
    _WingCfgProfIfEthSpeed_Type()
)
wingCfgProfIfEthSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthSpeed.setStatus("current")


class _WingCfgProfIfEthDuplex_Type(DisplayString):
    """Custom type wingCfgProfIfEthDuplex based on DisplayString"""
    defaultValue = OctetString("auto")


_WingCfgProfIfEthDuplex_Type.__name__ = "DisplayString"
_WingCfgProfIfEthDuplex_Object = MibTableColumn
wingCfgProfIfEthDuplex = _WingCfgProfIfEthDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 2),
    _WingCfgProfIfEthDuplex_Type()
)
wingCfgProfIfEthDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthDuplex.setStatus("current")


class _WingCfgProfIfEthSwitchportMode_Type(DisplayString):
    """Custom type wingCfgProfIfEthSwitchportMode based on DisplayString"""
    defaultValue = OctetString("access")


_WingCfgProfIfEthSwitchportMode_Type.__name__ = "DisplayString"
_WingCfgProfIfEthSwitchportMode_Object = MibTableColumn
wingCfgProfIfEthSwitchportMode = _WingCfgProfIfEthSwitchportMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 3),
    _WingCfgProfIfEthSwitchportMode_Type()
)
wingCfgProfIfEthSwitchportMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthSwitchportMode.setStatus("current")


class _WingCfgProfIfEthSwitchportNativeVlan_Type(Unsigned32):
    """Custom type wingCfgProfIfEthSwitchportNativeVlan based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgProfIfEthSwitchportNativeVlan_Type.__name__ = "Unsigned32"
_WingCfgProfIfEthSwitchportNativeVlan_Object = MibTableColumn
wingCfgProfIfEthSwitchportNativeVlan = _WingCfgProfIfEthSwitchportNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 4),
    _WingCfgProfIfEthSwitchportNativeVlan_Type()
)
wingCfgProfIfEthSwitchportNativeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthSwitchportNativeVlan.setStatus("current")


class _WingCfgProfIfEthSwitchportNativeVlanTagged_Type(TruthValue):
    """Custom type wingCfgProfIfEthSwitchportNativeVlanTagged based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfEthSwitchportNativeVlanTagged_Type.__name__ = "TruthValue"
_WingCfgProfIfEthSwitchportNativeVlanTagged_Object = MibTableColumn
wingCfgProfIfEthSwitchportNativeVlanTagged = _WingCfgProfIfEthSwitchportNativeVlanTagged_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 5),
    _WingCfgProfIfEthSwitchportNativeVlanTagged_Type()
)
wingCfgProfIfEthSwitchportNativeVlanTagged.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthSwitchportNativeVlanTagged.setStatus("current")


class _WingCfgProfIfEthArpTrust_Type(TruthValue):
    """Custom type wingCfgProfIfEthArpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfEthArpTrust_Type.__name__ = "TruthValue"
_WingCfgProfIfEthArpTrust_Object = MibTableColumn
wingCfgProfIfEthArpTrust = _WingCfgProfIfEthArpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 6),
    _WingCfgProfIfEthArpTrust_Type()
)
wingCfgProfIfEthArpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthArpTrust.setStatus("current")


class _WingCfgProfIfEthDhcpTrust_Type(TruthValue):
    """Custom type wingCfgProfIfEthDhcpTrust based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthDhcpTrust_Type.__name__ = "TruthValue"
_WingCfgProfIfEthDhcpTrust_Object = MibTableColumn
wingCfgProfIfEthDhcpTrust = _WingCfgProfIfEthDhcpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 7),
    _WingCfgProfIfEthDhcpTrust_Type()
)
wingCfgProfIfEthDhcpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthDhcpTrust.setStatus("current")


class _WingCfgProfIfEthArpHeaderMismatchValidation_Type(TruthValue):
    """Custom type wingCfgProfIfEthArpHeaderMismatchValidation based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfEthArpHeaderMismatchValidation_Type.__name__ = "TruthValue"
_WingCfgProfIfEthArpHeaderMismatchValidation_Object = MibTableColumn
wingCfgProfIfEthArpHeaderMismatchValidation = _WingCfgProfIfEthArpHeaderMismatchValidation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 8),
    _WingCfgProfIfEthArpHeaderMismatchValidation_Type()
)
wingCfgProfIfEthArpHeaderMismatchValidation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthArpHeaderMismatchValidation.setStatus("current")


class _WingCfgProfIfEthQosTrustDscp_Type(TruthValue):
    """Custom type wingCfgProfIfEthQosTrustDscp based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthQosTrustDscp_Type.__name__ = "TruthValue"
_WingCfgProfIfEthQosTrustDscp_Object = MibTableColumn
wingCfgProfIfEthQosTrustDscp = _WingCfgProfIfEthQosTrustDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 9),
    _WingCfgProfIfEthQosTrustDscp_Type()
)
wingCfgProfIfEthQosTrustDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthQosTrustDscp.setStatus("current")


class _WingCfgProfIfEthQosTrust802dot1p_Type(TruthValue):
    """Custom type wingCfgProfIfEthQosTrust802dot1p based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthQosTrust802dot1p_Type.__name__ = "TruthValue"
_WingCfgProfIfEthQosTrust802dot1p_Object = MibTableColumn
wingCfgProfIfEthQosTrust802dot1p = _WingCfgProfIfEthQosTrust802dot1p_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 10),
    _WingCfgProfIfEthQosTrust802dot1p_Type()
)
wingCfgProfIfEthQosTrust802dot1p.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthQosTrust802dot1p.setStatus("current")


class _WingCfgProfIfEthStaticChannelGroup_Type(Unsigned32):
    """Custom type wingCfgProfIfEthStaticChannelGroup based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WingCfgProfIfEthStaticChannelGroup_Type.__name__ = "Unsigned32"
_WingCfgProfIfEthStaticChannelGroup_Object = MibTableColumn
wingCfgProfIfEthStaticChannelGroup = _WingCfgProfIfEthStaticChannelGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 11),
    _WingCfgProfIfEthStaticChannelGroup_Type()
)
wingCfgProfIfEthStaticChannelGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthStaticChannelGroup.setStatus("current")


class _WingCfgProfIfEthPoeSupported_Type(TruthValue):
    """Custom type wingCfgProfIfEthPoeSupported based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfEthPoeSupported_Type.__name__ = "TruthValue"
_WingCfgProfIfEthPoeSupported_Object = MibTableColumn
wingCfgProfIfEthPoeSupported = _WingCfgProfIfEthPoeSupported_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 12),
    _WingCfgProfIfEthPoeSupported_Type()
)
wingCfgProfIfEthPoeSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthPoeSupported.setStatus("current")


class _WingCfgProfIfEthPoePower_Type(TruthValue):
    """Custom type wingCfgProfIfEthPoePower based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthPoePower_Type.__name__ = "TruthValue"
_WingCfgProfIfEthPoePower_Object = MibTableColumn
wingCfgProfIfEthPoePower = _WingCfgProfIfEthPoePower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 13),
    _WingCfgProfIfEthPoePower_Type()
)
wingCfgProfIfEthPoePower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthPoePower.setStatus("current")


class _WingCfgProfIfEthPoeLimit_Type(Unsigned32):
    """Custom type wingCfgProfIfEthPoeLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 40),
    )


_WingCfgProfIfEthPoeLimit_Type.__name__ = "Unsigned32"
_WingCfgProfIfEthPoeLimit_Object = MibTableColumn
wingCfgProfIfEthPoeLimit = _WingCfgProfIfEthPoeLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 14),
    _WingCfgProfIfEthPoeLimit_Type()
)
wingCfgProfIfEthPoeLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthPoeLimit.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfEthPoeLimit.setUnits("watts")


class _WingCfgProfIfEthPoePriority_Type(DisplayString):
    """Custom type wingCfgProfIfEthPoePriority based on DisplayString"""
    defaultValue = OctetString("low")


_WingCfgProfIfEthPoePriority_Type.__name__ = "DisplayString"
_WingCfgProfIfEthPoePriority_Object = MibTableColumn
wingCfgProfIfEthPoePriority = _WingCfgProfIfEthPoePriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 15),
    _WingCfgProfIfEthPoePriority_Type()
)
wingCfgProfIfEthPoePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthPoePriority.setStatus("current")


class _WingCfgProfIfEthDot1xSupported_Type(TruthValue):
    """Custom type wingCfgProfIfEthDot1xSupported based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfEthDot1xSupported_Type.__name__ = "TruthValue"
_WingCfgProfIfEthDot1xSupported_Object = MibTableColumn
wingCfgProfIfEthDot1xSupported = _WingCfgProfIfEthDot1xSupported_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 16),
    _WingCfgProfIfEthDot1xSupported_Type()
)
wingCfgProfIfEthDot1xSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthDot1xSupported.setStatus("current")


class _WingCfgProfIfEthDot1xEnable_Type(TruthValue):
    """Custom type wingCfgProfIfEthDot1xEnable based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfEthDot1xEnable_Type.__name__ = "TruthValue"
_WingCfgProfIfEthDot1xEnable_Object = MibTableColumn
wingCfgProfIfEthDot1xEnable = _WingCfgProfIfEthDot1xEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 17),
    _WingCfgProfIfEthDot1xEnable_Type()
)
wingCfgProfIfEthDot1xEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthDot1xEnable.setStatus("current")


class _WingCfgProfIfEthDot1xUsername_Type(DisplayString):
    """Custom type wingCfgProfIfEthDot1xUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgProfIfEthDot1xUsername_Type.__name__ = "DisplayString"
_WingCfgProfIfEthDot1xUsername_Object = MibTableColumn
wingCfgProfIfEthDot1xUsername = _WingCfgProfIfEthDot1xUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 18),
    _WingCfgProfIfEthDot1xUsername_Type()
)
wingCfgProfIfEthDot1xUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthDot1xUsername.setStatus("current")
_WingCfgProfIfEthDot1xPassword_Type = DisplayString
_WingCfgProfIfEthDot1xPassword_Object = MibTableColumn
wingCfgProfIfEthDot1xPassword = _WingCfgProfIfEthDot1xPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 19),
    _WingCfgProfIfEthDot1xPassword_Type()
)
wingCfgProfIfEthDot1xPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthDot1xPassword.setStatus("current")


class _WingCfgProfIfEthCdpReceive_Type(TruthValue):
    """Custom type wingCfgProfIfEthCdpReceive based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthCdpReceive_Type.__name__ = "TruthValue"
_WingCfgProfIfEthCdpReceive_Object = MibTableColumn
wingCfgProfIfEthCdpReceive = _WingCfgProfIfEthCdpReceive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 20),
    _WingCfgProfIfEthCdpReceive_Type()
)
wingCfgProfIfEthCdpReceive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthCdpReceive.setStatus("current")


class _WingCfgProfIfEthCdpTransmit_Type(TruthValue):
    """Custom type wingCfgProfIfEthCdpTransmit based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthCdpTransmit_Type.__name__ = "TruthValue"
_WingCfgProfIfEthCdpTransmit_Object = MibTableColumn
wingCfgProfIfEthCdpTransmit = _WingCfgProfIfEthCdpTransmit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 21),
    _WingCfgProfIfEthCdpTransmit_Type()
)
wingCfgProfIfEthCdpTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthCdpTransmit.setStatus("current")


class _WingCfgProfIfEthLldpReceive_Type(TruthValue):
    """Custom type wingCfgProfIfEthLldpReceive based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthLldpReceive_Type.__name__ = "TruthValue"
_WingCfgProfIfEthLldpReceive_Object = MibTableColumn
wingCfgProfIfEthLldpReceive = _WingCfgProfIfEthLldpReceive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 22),
    _WingCfgProfIfEthLldpReceive_Type()
)
wingCfgProfIfEthLldpReceive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthLldpReceive.setStatus("current")


class _WingCfgProfIfEthLldpTransmit_Type(TruthValue):
    """Custom type wingCfgProfIfEthLldpTransmit based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfEthLldpTransmit_Type.__name__ = "TruthValue"
_WingCfgProfIfEthLldpTransmit_Object = MibTableColumn
wingCfgProfIfEthLldpTransmit = _WingCfgProfIfEthLldpTransmit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 23),
    _WingCfgProfIfEthLldpTransmit_Type()
)
wingCfgProfIfEthLldpTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthLldpTransmit.setStatus("current")


class _WingCfgProfIfEthPortChannelLoadBalance_Type(DisplayString):
    """Custom type wingCfgProfIfEthPortChannelLoadBalance based on DisplayString"""
    defaultValue = OctetString("src-dst-ip")


_WingCfgProfIfEthPortChannelLoadBalance_Type.__name__ = "DisplayString"
_WingCfgProfIfEthPortChannelLoadBalance_Object = MibTableColumn
wingCfgProfIfEthPortChannelLoadBalance = _WingCfgProfIfEthPortChannelLoadBalance_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 2, 1, 24),
    _WingCfgProfIfEthPortChannelLoadBalance_Type()
)
wingCfgProfIfEthPortChannelLoadBalance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfEthPortChannelLoadBalance.setStatus("current")
_WingCfgProfIfVlanTable_Object = MibTable
wingCfgProfIfVlanTable = _WingCfgProfIfVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3)
)
if mibBuilder.loadTexts:
    wingCfgProfIfVlanTable.setStatus("current")
_WingCfgProfIfVlanEntry_Object = MibTableRow
wingCfgProfIfVlanEntry = _WingCfgProfIfVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1)
)
wingCfgProfIfVlanEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfVlanEntry.setStatus("current")


class _WingCfgProfIfVlanVlan_Type(Unsigned32):
    """Custom type wingCfgProfIfVlanVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgProfIfVlanVlan_Type.__name__ = "Unsigned32"
_WingCfgProfIfVlanVlan_Object = MibTableColumn
wingCfgProfIfVlanVlan = _WingCfgProfIfVlanVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 1),
    _WingCfgProfIfVlanVlan_Type()
)
wingCfgProfIfVlanVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanVlan.setStatus("current")


class _WingCfgProfIfVlanDhcpcOptAll_Type(TruthValue):
    """Custom type wingCfgProfIfVlanDhcpcOptAll based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfVlanDhcpcOptAll_Type.__name__ = "TruthValue"
_WingCfgProfIfVlanDhcpcOptAll_Object = MibTableColumn
wingCfgProfIfVlanDhcpcOptAll = _WingCfgProfIfVlanDhcpcOptAll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 2),
    _WingCfgProfIfVlanDhcpcOptAll_Type()
)
wingCfgProfIfVlanDhcpcOptAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanDhcpcOptAll.setStatus("current")


class _WingCfgProfIfVlanNatDirection_Type(DisplayString):
    """Custom type wingCfgProfIfVlanNatDirection based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfVlanNatDirection_Type.__name__ = "DisplayString"
_WingCfgProfIfVlanNatDirection_Object = MibTableColumn
wingCfgProfIfVlanNatDirection = _WingCfgProfIfVlanNatDirection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 3),
    _WingCfgProfIfVlanNatDirection_Type()
)
wingCfgProfIfVlanNatDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanNatDirection.setStatus("current")
_WingCfgProfIfVlanCryptoMap_Type = WingIdentifier
_WingCfgProfIfVlanCryptoMap_Object = MibTableColumn
wingCfgProfIfVlanCryptoMap = _WingCfgProfIfVlanCryptoMap_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 4),
    _WingCfgProfIfVlanCryptoMap_Type()
)
wingCfgProfIfVlanCryptoMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanCryptoMap.setStatus("current")


class _WingCfgProfIfVlanDhcpRelayIncoming_Type(TruthValue):
    """Custom type wingCfgProfIfVlanDhcpRelayIncoming based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfVlanDhcpRelayIncoming_Type.__name__ = "TruthValue"
_WingCfgProfIfVlanDhcpRelayIncoming_Object = MibTableColumn
wingCfgProfIfVlanDhcpRelayIncoming = _WingCfgProfIfVlanDhcpRelayIncoming_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 5),
    _WingCfgProfIfVlanDhcpRelayIncoming_Type()
)
wingCfgProfIfVlanDhcpRelayIncoming.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanDhcpRelayIncoming.setStatus("current")


class _WingCfgProfIfVlanOspfAuth_Type(DisplayString):
    """Custom type wingCfgProfIfVlanOspfAuth based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfVlanOspfAuth_Type.__name__ = "DisplayString"
_WingCfgProfIfVlanOspfAuth_Object = MibTableColumn
wingCfgProfIfVlanOspfAuth = _WingCfgProfIfVlanOspfAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 6),
    _WingCfgProfIfVlanOspfAuth_Type()
)
wingCfgProfIfVlanOspfAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfAuth.setStatus("current")
_WingCfgProfIfVlanOspfAuthKey_Type = DisplayString
_WingCfgProfIfVlanOspfAuthKey_Object = MibTableColumn
wingCfgProfIfVlanOspfAuthKey = _WingCfgProfIfVlanOspfAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 7),
    _WingCfgProfIfVlanOspfAuthKey_Type()
)
wingCfgProfIfVlanOspfAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfAuthKey.setStatus("current")


class _WingCfgProfIfVlanOspfNetworkType_Type(DisplayString):
    """Custom type wingCfgProfIfVlanOspfNetworkType based on DisplayString"""
    defaultValue = OctetString("broadcast")


_WingCfgProfIfVlanOspfNetworkType_Type.__name__ = "DisplayString"
_WingCfgProfIfVlanOspfNetworkType_Object = MibTableColumn
wingCfgProfIfVlanOspfNetworkType = _WingCfgProfIfVlanOspfNetworkType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 8),
    _WingCfgProfIfVlanOspfNetworkType_Type()
)
wingCfgProfIfVlanOspfNetworkType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfNetworkType.setStatus("current")


class _WingCfgProfIfVlanOspfPriority_Type(Unsigned32):
    """Custom type wingCfgProfIfVlanOspfPriority based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_WingCfgProfIfVlanOspfPriority_Type.__name__ = "Unsigned32"
_WingCfgProfIfVlanOspfPriority_Object = MibTableColumn
wingCfgProfIfVlanOspfPriority = _WingCfgProfIfVlanOspfPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 3, 1, 9),
    _WingCfgProfIfVlanOspfPriority_Type()
)
wingCfgProfIfVlanOspfPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfPriority.setStatus("current")
_WingCfgProfIfRadioTable_Object = MibTable
wingCfgProfIfRadioTable = _WingCfgProfIfRadioTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6)
)
if mibBuilder.loadTexts:
    wingCfgProfIfRadioTable.setStatus("current")
_WingCfgProfIfRadioEntry_Object = MibTableRow
wingCfgProfIfRadioEntry = _WingCfgProfIfRadioEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1)
)
wingCfgProfIfRadioEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfRadioEntry.setStatus("current")
_WingCfgProfIfRadioRfMode_Type = DisplayString
_WingCfgProfIfRadioRfMode_Object = MibTableColumn
wingCfgProfIfRadioRfMode = _WingCfgProfIfRadioRfMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 1),
    _WingCfgProfIfRadioRfMode_Type()
)
wingCfgProfIfRadioRfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioRfMode.setStatus("current")


class _WingCfgProfIfRadioChannel_Type(DisplayString):
    """Custom type wingCfgProfIfRadioChannel based on DisplayString"""
    defaultValue = OctetString("smart")


_WingCfgProfIfRadioChannel_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioChannel_Object = MibTableColumn
wingCfgProfIfRadioChannel = _WingCfgProfIfRadioChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 2),
    _WingCfgProfIfRadioChannel_Type()
)
wingCfgProfIfRadioChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioChannel.setStatus("current")


class _WingCfgProfIfRadioPower_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioPower based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 27),
    )


_WingCfgProfIfRadioPower_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioPower_Object = MibTableColumn
wingCfgProfIfRadioPower = _WingCfgProfIfRadioPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 3),
    _WingCfgProfIfRadioPower_Type()
)
wingCfgProfIfRadioPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioPower.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioPower.setUnits("dBm")


class _WingCfgProfIfRadioPlacement_Type(DisplayString):
    """Custom type wingCfgProfIfRadioPlacement based on DisplayString"""
    defaultValue = OctetString("indoor")


_WingCfgProfIfRadioPlacement_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioPlacement_Object = MibTableColumn
wingCfgProfIfRadioPlacement = _WingCfgProfIfRadioPlacement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 4),
    _WingCfgProfIfRadioPlacement_Type()
)
wingCfgProfIfRadioPlacement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioPlacement.setStatus("current")


class _WingCfgProfIfRadioBeaconInterval_Type(DisplayString):
    """Custom type wingCfgProfIfRadioBeaconInterval based on DisplayString"""
    defaultValue = OctetString("100")


_WingCfgProfIfRadioBeaconInterval_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioBeaconInterval_Object = MibTableColumn
wingCfgProfIfRadioBeaconInterval = _WingCfgProfIfRadioBeaconInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 5),
    _WingCfgProfIfRadioBeaconInterval_Type()
)
wingCfgProfIfRadioBeaconInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioBeaconInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioBeaconInterval.setUnits("milliseconds")


class _WingCfgProfIfRadioRtsThreshold_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioRtsThreshold based on Unsigned32"""
    defaultValue = 2347

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2347),
    )


_WingCfgProfIfRadioRtsThreshold_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioRtsThreshold_Object = MibTableColumn
wingCfgProfIfRadioRtsThreshold = _WingCfgProfIfRadioRtsThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 6),
    _WingCfgProfIfRadioRtsThreshold_Type()
)
wingCfgProfIfRadioRtsThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioRtsThreshold.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioRtsThreshold.setUnits("bytes")


class _WingCfgProfIfRadioOffChannelScan_Type(TruthValue):
    """Custom type wingCfgProfIfRadioOffChannelScan based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfRadioOffChannelScan_Type.__name__ = "TruthValue"
_WingCfgProfIfRadioOffChannelScan_Object = MibTableColumn
wingCfgProfIfRadioOffChannelScan = _WingCfgProfIfRadioOffChannelScan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 7),
    _WingCfgProfIfRadioOffChannelScan_Type()
)
wingCfgProfIfRadioOffChannelScan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioOffChannelScan.setStatus("current")


class _WingCfgProfIfRadioPreambleShort_Type(TruthValue):
    """Custom type wingCfgProfIfRadioPreambleShort based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfRadioPreambleShort_Type.__name__ = "TruthValue"
_WingCfgProfIfRadioPreambleShort_Object = MibTableColumn
wingCfgProfIfRadioPreambleShort = _WingCfgProfIfRadioPreambleShort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 8),
    _WingCfgProfIfRadioPreambleShort_Type()
)
wingCfgProfIfRadioPreambleShort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioPreambleShort.setStatus("current")


class _WingCfgProfIfRadioGuardInterval_Type(DisplayString):
    """Custom type wingCfgProfIfRadioGuardInterval based on DisplayString"""
    defaultValue = OctetString("any")


_WingCfgProfIfRadioGuardInterval_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioGuardInterval_Object = MibTableColumn
wingCfgProfIfRadioGuardInterval = _WingCfgProfIfRadioGuardInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 9),
    _WingCfgProfIfRadioGuardInterval_Type()
)
wingCfgProfIfRadioGuardInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioGuardInterval.setStatus("current")


class _WingCfgProfIfRadioAmpduMode_Type(DisplayString):
    """Custom type wingCfgProfIfRadioAmpduMode based on DisplayString"""
    defaultValue = OctetString("tx-rx")


_WingCfgProfIfRadioAmpduMode_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioAmpduMode_Object = MibTableColumn
wingCfgProfIfRadioAmpduMode = _WingCfgProfIfRadioAmpduMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 10),
    _WingCfgProfIfRadioAmpduMode_Type()
)
wingCfgProfIfRadioAmpduMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmpduMode.setStatus("current")


class _WingCfgProfIfRadioAmsduMode_Type(DisplayString):
    """Custom type wingCfgProfIfRadioAmsduMode based on DisplayString"""
    defaultValue = OctetString("rx-only")


_WingCfgProfIfRadioAmsduMode_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioAmsduMode_Object = MibTableColumn
wingCfgProfIfRadioAmsduMode = _WingCfgProfIfRadioAmsduMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 11),
    _WingCfgProfIfRadioAmsduMode_Type()
)
wingCfgProfIfRadioAmsduMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmsduMode.setStatus("current")


class _WingCfgProfIfRadioRifsMode_Type(DisplayString):
    """Custom type wingCfgProfIfRadioRifsMode based on DisplayString"""
    defaultValue = OctetString("tx-rx")


_WingCfgProfIfRadioRifsMode_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioRifsMode_Object = MibTableColumn
wingCfgProfIfRadioRifsMode = _WingCfgProfIfRadioRifsMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 12),
    _WingCfgProfIfRadioRifsMode_Type()
)
wingCfgProfIfRadioRifsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioRifsMode.setStatus("current")


class _WingCfgProfIfRadioAmpduMaxAggrSizeRx_Type(DisplayString):
    """Custom type wingCfgProfIfRadioAmpduMaxAggrSizeRx based on DisplayString"""
    defaultValue = OctetString("65535")


_WingCfgProfIfRadioAmpduMaxAggrSizeRx_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioAmpduMaxAggrSizeRx_Object = MibTableColumn
wingCfgProfIfRadioAmpduMaxAggrSizeRx = _WingCfgProfIfRadioAmpduMaxAggrSizeRx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 13),
    _WingCfgProfIfRadioAmpduMaxAggrSizeRx_Type()
)
wingCfgProfIfRadioAmpduMaxAggrSizeRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmpduMaxAggrSizeRx.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmpduMaxAggrSizeRx.setUnits("bytes")


class _WingCfgProfIfRadioAmpduMaxAggrSizeTx_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioAmpduMaxAggrSizeTx based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgProfIfRadioAmpduMaxAggrSizeTx_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioAmpduMaxAggrSizeTx_Object = MibTableColumn
wingCfgProfIfRadioAmpduMaxAggrSizeTx = _WingCfgProfIfRadioAmpduMaxAggrSizeTx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 14),
    _WingCfgProfIfRadioAmpduMaxAggrSizeTx_Type()
)
wingCfgProfIfRadioAmpduMaxAggrSizeTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmpduMaxAggrSizeTx.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmpduMaxAggrSizeTx.setUnits("bytes")


class _WingCfgProfIfRadioAmpduMinSpacing_Type(DisplayString):
    """Custom type wingCfgProfIfRadioAmpduMinSpacing based on DisplayString"""
    defaultValue = OctetString("4")


_WingCfgProfIfRadioAmpduMinSpacing_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioAmpduMinSpacing_Object = MibTableColumn
wingCfgProfIfRadioAmpduMinSpacing = _WingCfgProfIfRadioAmpduMinSpacing_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 15),
    _WingCfgProfIfRadioAmpduMinSpacing_Type()
)
wingCfgProfIfRadioAmpduMinSpacing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmpduMinSpacing.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAmpduMinSpacing.setUnits("microseconds")


class _WingCfgProfIfRadioAntennaMode_Type(DisplayString):
    """Custom type wingCfgProfIfRadioAntennaMode based on DisplayString"""
    defaultValue = OctetString("default")


_WingCfgProfIfRadioAntennaMode_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioAntennaMode_Object = MibTableColumn
wingCfgProfIfRadioAntennaMode = _WingCfgProfIfRadioAntennaMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 16),
    _WingCfgProfIfRadioAntennaMode_Type()
)
wingCfgProfIfRadioAntennaMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAntennaMode.setStatus("current")


class _WingCfgProfIfRadioNonUnicastForwarding_Type(DisplayString):
    """Custom type wingCfgProfIfRadioNonUnicastForwarding based on DisplayString"""
    defaultValue = OctetString("follow-dtim")


_WingCfgProfIfRadioNonUnicastForwarding_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioNonUnicastForwarding_Object = MibTableColumn
wingCfgProfIfRadioNonUnicastForwarding = _WingCfgProfIfRadioNonUnicastForwarding_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 17),
    _WingCfgProfIfRadioNonUnicastForwarding_Type()
)
wingCfgProfIfRadioNonUnicastForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioNonUnicastForwarding.setStatus("current")


class _WingCfgProfIfRadioDynamicChainSelection_Type(TruthValue):
    """Custom type wingCfgProfIfRadioDynamicChainSelection based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfRadioDynamicChainSelection_Type.__name__ = "TruthValue"
_WingCfgProfIfRadioDynamicChainSelection_Object = MibTableColumn
wingCfgProfIfRadioDynamicChainSelection = _WingCfgProfIfRadioDynamicChainSelection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 18),
    _WingCfgProfIfRadioDynamicChainSelection_Type()
)
wingCfgProfIfRadioDynamicChainSelection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioDynamicChainSelection.setStatus("current")


class _WingCfgProfIfRadioLockRfMode_Type(TruthValue):
    """Custom type wingCfgProfIfRadioLockRfMode based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfRadioLockRfMode_Type.__name__ = "TruthValue"
_WingCfgProfIfRadioLockRfMode_Object = MibTableColumn
wingCfgProfIfRadioLockRfMode = _WingCfgProfIfRadioLockRfMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 19),
    _WingCfgProfIfRadioLockRfMode_Type()
)
wingCfgProfIfRadioLockRfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioLockRfMode.setStatus("current")
_WingCfgProfIfRadioSnifferRedirHost_Type = DisplayString
_WingCfgProfIfRadioSnifferRedirHost_Object = MibTableColumn
wingCfgProfIfRadioSnifferRedirHost = _WingCfgProfIfRadioSnifferRedirHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 20),
    _WingCfgProfIfRadioSnifferRedirHost_Type()
)
wingCfgProfIfRadioSnifferRedirHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioSnifferRedirHost.setStatus("current")


class _WingCfgProfIfRadioSnifferRedirChannel_Type(DisplayString):
    """Custom type wingCfgProfIfRadioSnifferRedirChannel based on DisplayString"""
    defaultValue = OctetString("1")


_WingCfgProfIfRadioSnifferRedirChannel_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioSnifferRedirChannel_Object = MibTableColumn
wingCfgProfIfRadioSnifferRedirChannel = _WingCfgProfIfRadioSnifferRedirChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 21),
    _WingCfgProfIfRadioSnifferRedirChannel_Type()
)
wingCfgProfIfRadioSnifferRedirChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioSnifferRedirChannel.setStatus("current")


class _WingCfgProfIfRadioMesh_Type(DisplayString):
    """Custom type wingCfgProfIfRadioMesh based on DisplayString"""
    defaultValue = OctetString("disabled")


_WingCfgProfIfRadioMesh_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioMesh_Object = MibTableColumn
wingCfgProfIfRadioMesh = _WingCfgProfIfRadioMesh_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 22),
    _WingCfgProfIfRadioMesh_Type()
)
wingCfgProfIfRadioMesh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioMesh.setStatus("current")


class _WingCfgProfIfRadioMeshLinks_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioMeshLinks based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WingCfgProfIfRadioMeshLinks_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioMeshLinks_Object = MibTableColumn
wingCfgProfIfRadioMeshLinks = _WingCfgProfIfRadioMeshLinks_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 23),
    _WingCfgProfIfRadioMeshLinks_Type()
)
wingCfgProfIfRadioMeshLinks.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioMeshLinks.setStatus("current")


class _WingCfgProfIfRadioProbeResponseRetry_Type(TruthValue):
    """Custom type wingCfgProfIfRadioProbeResponseRetry based on TruthValue"""
    defaultValue = 1


_WingCfgProfIfRadioProbeResponseRetry_Type.__name__ = "TruthValue"
_WingCfgProfIfRadioProbeResponseRetry_Object = MibTableColumn
wingCfgProfIfRadioProbeResponseRetry = _WingCfgProfIfRadioProbeResponseRetry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 24),
    _WingCfgProfIfRadioProbeResponseRetry_Type()
)
wingCfgProfIfRadioProbeResponseRetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioProbeResponseRetry.setStatus("current")


class _WingCfgProfIfRadioProbeResponseRate_Type(DisplayString):
    """Custom type wingCfgProfIfRadioProbeResponseRate based on DisplayString"""
    defaultValue = OctetString("follow-probe-request")


_WingCfgProfIfRadioProbeResponseRate_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioProbeResponseRate_Object = MibTableColumn
wingCfgProfIfRadioProbeResponseRate = _WingCfgProfIfRadioProbeResponseRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 25),
    _WingCfgProfIfRadioProbeResponseRate_Type()
)
wingCfgProfIfRadioProbeResponseRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioProbeResponseRate.setStatus("current")


class _WingCfgProfIfRadioMaxClients_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioMaxClients based on Unsigned32"""
    defaultValue = 256

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgProfIfRadioMaxClients_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioMaxClients_Object = MibTableColumn
wingCfgProfIfRadioMaxClients = _WingCfgProfIfRadioMaxClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 26),
    _WingCfgProfIfRadioMaxClients_Type()
)
wingCfgProfIfRadioMaxClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioMaxClients.setStatus("current")


class _WingCfgProfIfRadioRadioTapMode_Type(DisplayString):
    """Custom type wingCfgProfIfRadioRadioTapMode based on DisplayString"""
    defaultValue = OctetString("off")


_WingCfgProfIfRadioRadioTapMode_Type.__name__ = "DisplayString"
_WingCfgProfIfRadioRadioTapMode_Object = MibTableColumn
wingCfgProfIfRadioRadioTapMode = _WingCfgProfIfRadioRadioTapMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 27),
    _WingCfgProfIfRadioRadioTapMode_Type()
)
wingCfgProfIfRadioRadioTapMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioRadioTapMode.setStatus("current")


class _WingCfgProfIfRadioWirelessClientPower_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioWirelessClientPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_WingCfgProfIfRadioWirelessClientPower_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioWirelessClientPower_Object = MibTableColumn
wingCfgProfIfRadioWirelessClientPower = _WingCfgProfIfRadioWirelessClientPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 28),
    _WingCfgProfIfRadioWirelessClientPower_Type()
)
wingCfgProfIfRadioWirelessClientPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioWirelessClientPower.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioWirelessClientPower.setUnits("dBm")


class _WingCfgProfIfRadioLoadBalLfCount_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioLoadBalLfCount based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_WingCfgProfIfRadioLoadBalLfCount_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioLoadBalLfCount_Object = MibTableColumn
wingCfgProfIfRadioLoadBalLfCount = _WingCfgProfIfRadioLoadBalLfCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 29),
    _WingCfgProfIfRadioLoadBalLfCount_Type()
)
wingCfgProfIfRadioLoadBalLfCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioLoadBalLfCount.setStatus("current")


class _WingCfgProfIfRadioLoadBalLfThroughput_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioLoadBalLfThroughput based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_WingCfgProfIfRadioLoadBalLfThroughput_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioLoadBalLfThroughput_Object = MibTableColumn
wingCfgProfIfRadioLoadBalLfThroughput = _WingCfgProfIfRadioLoadBalLfThroughput_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 30),
    _WingCfgProfIfRadioLoadBalLfThroughput_Type()
)
wingCfgProfIfRadioLoadBalLfThroughput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioLoadBalLfThroughput.setStatus("current")


class _WingCfgProfIfRadioLoadBalWmCount_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioLoadBalWmCount based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgProfIfRadioLoadBalWmCount_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioLoadBalWmCount_Object = MibTableColumn
wingCfgProfIfRadioLoadBalWmCount = _WingCfgProfIfRadioLoadBalWmCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 31),
    _WingCfgProfIfRadioLoadBalWmCount_Type()
)
wingCfgProfIfRadioLoadBalWmCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioLoadBalWmCount.setStatus("current")


class _WingCfgProfIfRadioLoadBalWmTput_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioLoadBalWmTput based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_WingCfgProfIfRadioLoadBalWmTput_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioLoadBalWmTput_Object = MibTableColumn
wingCfgProfIfRadioLoadBalWmTput = _WingCfgProfIfRadioLoadBalWmTput_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 32),
    _WingCfgProfIfRadioLoadBalWmTput_Type()
)
wingCfgProfIfRadioLoadBalWmTput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioLoadBalWmTput.setStatus("current")
_WingCfgProfIfRadioAssocAcl_Type = WingIdentifier
_WingCfgProfIfRadioAssocAcl_Object = MibTableColumn
wingCfgProfIfRadioAssocAcl = _WingCfgProfIfRadioAssocAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 33),
    _WingCfgProfIfRadioAssocAcl_Type()
)
wingCfgProfIfRadioAssocAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAssocAcl.setStatus("current")
_WingCfgProfIfRadioQosPolicy_Type = WingIdentifier
_WingCfgProfIfRadioQosPolicy_Object = MibTableColumn
wingCfgProfIfRadioQosPolicy = _WingCfgProfIfRadioQosPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 34),
    _WingCfgProfIfRadioQosPolicy_Type()
)
wingCfgProfIfRadioQosPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioQosPolicy.setStatus("current")


class _WingCfgProfIfRadioAntennaDowntilt_Type(TruthValue):
    """Custom type wingCfgProfIfRadioAntennaDowntilt based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfRadioAntennaDowntilt_Type.__name__ = "TruthValue"
_WingCfgProfIfRadioAntennaDowntilt_Object = MibTableColumn
wingCfgProfIfRadioAntennaDowntilt = _WingCfgProfIfRadioAntennaDowntilt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 35),
    _WingCfgProfIfRadioAntennaDowntilt_Type()
)
wingCfgProfIfRadioAntennaDowntilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioAntennaDowntilt.setStatus("current")
_WingCfgProfIfRadioExtendedRange_Type = Unsigned32
_WingCfgProfIfRadioExtendedRange_Object = MibTableColumn
wingCfgProfIfRadioExtendedRange = _WingCfgProfIfRadioExtendedRange_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 6, 1, 36),
    _WingCfgProfIfRadioExtendedRange_Type()
)
wingCfgProfIfRadioExtendedRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioExtendedRange.setStatus("current")
_WingCfgProfIfRadioBssmapTable_Object = MibTable
wingCfgProfIfRadioBssmapTable = _WingCfgProfIfRadioBssmapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 7)
)
if mibBuilder.loadTexts:
    wingCfgProfIfRadioBssmapTable.setStatus("current")
_WingCfgProfIfRadioBssmapEntry_Object = MibTableRow
wingCfgProfIfRadioBssmapEntry = _WingCfgProfIfRadioBssmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 7, 1)
)
wingCfgProfIfRadioBssmapEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
    (0, "WING-MIB", "wingCfgProfIfRadioBssmapWlan"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfRadioBssmapEntry.setStatus("current")
_WingCfgProfIfRadioBssmapWlan_Type = WingIdentifier
_WingCfgProfIfRadioBssmapWlan_Object = MibTableColumn
wingCfgProfIfRadioBssmapWlan = _WingCfgProfIfRadioBssmapWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 7, 1, 1),
    _WingCfgProfIfRadioBssmapWlan_Type()
)
wingCfgProfIfRadioBssmapWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioBssmapWlan.setStatus("current")


class _WingCfgProfIfRadioBssmapBss_Type(Unsigned32):
    """Custom type wingCfgProfIfRadioBssmapBss based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_WingCfgProfIfRadioBssmapBss_Type.__name__ = "Unsigned32"
_WingCfgProfIfRadioBssmapBss_Object = MibTableColumn
wingCfgProfIfRadioBssmapBss = _WingCfgProfIfRadioBssmapBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 7, 1, 3),
    _WingCfgProfIfRadioBssmapBss_Type()
)
wingCfgProfIfRadioBssmapBss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioBssmapBss.setStatus("current")
_WingCfgProfIfRadioBssmapPrimary_Type = TruthValue
_WingCfgProfIfRadioBssmapPrimary_Object = MibTableColumn
wingCfgProfIfRadioBssmapPrimary = _WingCfgProfIfRadioBssmapPrimary_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 7, 1, 4),
    _WingCfgProfIfRadioBssmapPrimary_Type()
)
wingCfgProfIfRadioBssmapPrimary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfRadioBssmapPrimary.setStatus("current")
_WingCfgProfIfSpanTreeTable_Object = MibTable
wingCfgProfIfSpanTreeTable = _WingCfgProfIfSpanTreeTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9)
)
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeTable.setStatus("current")
_WingCfgProfIfSpanTreeEntry_Object = MibTableRow
wingCfgProfIfSpanTreeEntry = _WingCfgProfIfSpanTreeEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1)
)
wingCfgProfIfSpanTreeEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeEntry.setStatus("current")


class _WingCfgProfIfSpanTreeLinkType_Type(DisplayString):
    """Custom type wingCfgProfIfSpanTreeLinkType based on DisplayString"""
    defaultValue = OctetString("point-to-point")


_WingCfgProfIfSpanTreeLinkType_Type.__name__ = "DisplayString"
_WingCfgProfIfSpanTreeLinkType_Object = MibTableColumn
wingCfgProfIfSpanTreeLinkType = _WingCfgProfIfSpanTreeLinkType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 1),
    _WingCfgProfIfSpanTreeLinkType_Type()
)
wingCfgProfIfSpanTreeLinkType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeLinkType.setStatus("current")


class _WingCfgProfIfSpanTreePortfast_Type(TruthValue):
    """Custom type wingCfgProfIfSpanTreePortfast based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfSpanTreePortfast_Type.__name__ = "TruthValue"
_WingCfgProfIfSpanTreePortfast_Object = MibTableColumn
wingCfgProfIfSpanTreePortfast = _WingCfgProfIfSpanTreePortfast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 2),
    _WingCfgProfIfSpanTreePortfast_Type()
)
wingCfgProfIfSpanTreePortfast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreePortfast.setStatus("current")


class _WingCfgProfIfSpanTreeEdgeport_Type(TruthValue):
    """Custom type wingCfgProfIfSpanTreeEdgeport based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfSpanTreeEdgeport_Type.__name__ = "TruthValue"
_WingCfgProfIfSpanTreeEdgeport_Object = MibTableColumn
wingCfgProfIfSpanTreeEdgeport = _WingCfgProfIfSpanTreeEdgeport_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 3),
    _WingCfgProfIfSpanTreeEdgeport_Type()
)
wingCfgProfIfSpanTreeEdgeport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeEdgeport.setStatus("current")


class _WingCfgProfIfSpanTreeBpduguard_Type(DisplayString):
    """Custom type wingCfgProfIfSpanTreeBpduguard based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfSpanTreeBpduguard_Type.__name__ = "DisplayString"
_WingCfgProfIfSpanTreeBpduguard_Object = MibTableColumn
wingCfgProfIfSpanTreeBpduguard = _WingCfgProfIfSpanTreeBpduguard_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 4),
    _WingCfgProfIfSpanTreeBpduguard_Type()
)
wingCfgProfIfSpanTreeBpduguard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeBpduguard.setStatus("current")


class _WingCfgProfIfSpanTreeBpdufilter_Type(DisplayString):
    """Custom type wingCfgProfIfSpanTreeBpdufilter based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfSpanTreeBpdufilter_Type.__name__ = "DisplayString"
_WingCfgProfIfSpanTreeBpdufilter_Object = MibTableColumn
wingCfgProfIfSpanTreeBpdufilter = _WingCfgProfIfSpanTreeBpdufilter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 5),
    _WingCfgProfIfSpanTreeBpdufilter_Type()
)
wingCfgProfIfSpanTreeBpdufilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeBpdufilter.setStatus("current")


class _WingCfgProfIfSpanTreePortCiscoInterop_Type(DisplayString):
    """Custom type wingCfgProfIfSpanTreePortCiscoInterop based on DisplayString"""
    defaultValue = OctetString("disable")


_WingCfgProfIfSpanTreePortCiscoInterop_Type.__name__ = "DisplayString"
_WingCfgProfIfSpanTreePortCiscoInterop_Object = MibTableColumn
wingCfgProfIfSpanTreePortCiscoInterop = _WingCfgProfIfSpanTreePortCiscoInterop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 6),
    _WingCfgProfIfSpanTreePortCiscoInterop_Type()
)
wingCfgProfIfSpanTreePortCiscoInterop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreePortCiscoInterop.setStatus("current")


class _WingCfgProfIfSpanTreeForceVersion_Type(Unsigned32):
    """Custom type wingCfgProfIfSpanTreeForceVersion based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_WingCfgProfIfSpanTreeForceVersion_Type.__name__ = "Unsigned32"
_WingCfgProfIfSpanTreeForceVersion_Object = MibTableColumn
wingCfgProfIfSpanTreeForceVersion = _WingCfgProfIfSpanTreeForceVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 7),
    _WingCfgProfIfSpanTreeForceVersion_Type()
)
wingCfgProfIfSpanTreeForceVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeForceVersion.setStatus("current")


class _WingCfgProfIfSpanTreeGuard_Type(DisplayString):
    """Custom type wingCfgProfIfSpanTreeGuard based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfSpanTreeGuard_Type.__name__ = "DisplayString"
_WingCfgProfIfSpanTreeGuard_Object = MibTableColumn
wingCfgProfIfSpanTreeGuard = _WingCfgProfIfSpanTreeGuard_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 9, 1, 8),
    _WingCfgProfIfSpanTreeGuard_Type()
)
wingCfgProfIfSpanTreeGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSpanTreeGuard.setStatus("current")
_WingCfgProfIfWwanTable_Object = MibTable
wingCfgProfIfWwanTable = _WingCfgProfIfWwanTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12)
)
if mibBuilder.loadTexts:
    wingCfgProfIfWwanTable.setStatus("current")
_WingCfgProfIfWwanEntry_Object = MibTableRow
wingCfgProfIfWwanEntry = _WingCfgProfIfWwanEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12, 1)
)
wingCfgProfIfWwanEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfWwanEntry.setStatus("current")


class _WingCfgProfIfWwanApn_Type(DisplayString):
    """Custom type wingCfgProfIfWwanApn based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_WingCfgProfIfWwanApn_Type.__name__ = "DisplayString"
_WingCfgProfIfWwanApn_Object = MibTableColumn
wingCfgProfIfWwanApn = _WingCfgProfIfWwanApn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12, 1, 2),
    _WingCfgProfIfWwanApn_Type()
)
wingCfgProfIfWwanApn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfWwanApn.setStatus("current")


class _WingCfgProfIfWwanAuth_Type(DisplayString):
    """Custom type wingCfgProfIfWwanAuth based on DisplayString"""
    defaultValue = OctetString("chap")


_WingCfgProfIfWwanAuth_Type.__name__ = "DisplayString"
_WingCfgProfIfWwanAuth_Object = MibTableColumn
wingCfgProfIfWwanAuth = _WingCfgProfIfWwanAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12, 1, 3),
    _WingCfgProfIfWwanAuth_Type()
)
wingCfgProfIfWwanAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfWwanAuth.setStatus("current")


class _WingCfgProfIfWwanUser_Type(DisplayString):
    """Custom type wingCfgProfIfWwanUser based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingCfgProfIfWwanUser_Type.__name__ = "DisplayString"
_WingCfgProfIfWwanUser_Object = MibTableColumn
wingCfgProfIfWwanUser = _WingCfgProfIfWwanUser_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12, 1, 4),
    _WingCfgProfIfWwanUser_Type()
)
wingCfgProfIfWwanUser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfWwanUser.setStatus("current")


class _WingCfgProfIfWwanPwd_Type(DisplayString):
    """Custom type wingCfgProfIfWwanPwd based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_WingCfgProfIfWwanPwd_Type.__name__ = "DisplayString"
_WingCfgProfIfWwanPwd_Object = MibTableColumn
wingCfgProfIfWwanPwd = _WingCfgProfIfWwanPwd_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12, 1, 5),
    _WingCfgProfIfWwanPwd_Type()
)
wingCfgProfIfWwanPwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfWwanPwd.setStatus("current")
_WingCfgProfIfWwanCryptomap_Type = WingIdentifier
_WingCfgProfIfWwanCryptomap_Object = MibTableColumn
wingCfgProfIfWwanCryptomap = _WingCfgProfIfWwanCryptomap_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12, 1, 6),
    _WingCfgProfIfWwanCryptomap_Type()
)
wingCfgProfIfWwanCryptomap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfWwanCryptomap.setStatus("current")


class _WingCfgProfIfWwanNatDirection_Type(DisplayString):
    """Custom type wingCfgProfIfWwanNatDirection based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfWwanNatDirection_Type.__name__ = "DisplayString"
_WingCfgProfIfWwanNatDirection_Object = MibTableColumn
wingCfgProfIfWwanNatDirection = _WingCfgProfIfWwanNatDirection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 12, 1, 7),
    _WingCfgProfIfWwanNatDirection_Type()
)
wingCfgProfIfWwanNatDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfWwanNatDirection.setStatus("current")
_WingCfgProfIfVlanOspfTable_Object = MibTable
wingCfgProfIfVlanOspfTable = _WingCfgProfIfVlanOspfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 13)
)
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfTable.setStatus("current")
_WingCfgProfIfVlanOspfEntry_Object = MibTableRow
wingCfgProfIfVlanOspfEntry = _WingCfgProfIfVlanOspfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 13, 1)
)
wingCfgProfIfVlanOspfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfEntry.setStatus("current")


class _WingCfgProfIfVlanOspfOspfAuthentication_Type(DisplayString):
    """Custom type wingCfgProfIfVlanOspfOspfAuthentication based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfVlanOspfOspfAuthentication_Type.__name__ = "DisplayString"
_WingCfgProfIfVlanOspfOspfAuthentication_Object = MibTableColumn
wingCfgProfIfVlanOspfOspfAuthentication = _WingCfgProfIfVlanOspfOspfAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 13, 1, 1),
    _WingCfgProfIfVlanOspfOspfAuthentication_Type()
)
wingCfgProfIfVlanOspfOspfAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfOspfAuthentication.setStatus("current")
_WingCfgProfIfVlanOspfOspfAuthKey_Type = DisplayString
_WingCfgProfIfVlanOspfOspfAuthKey_Object = MibTableColumn
wingCfgProfIfVlanOspfOspfAuthKey = _WingCfgProfIfVlanOspfOspfAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 13, 1, 2),
    _WingCfgProfIfVlanOspfOspfAuthKey_Type()
)
wingCfgProfIfVlanOspfOspfAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfOspfAuthKey.setStatus("current")


class _WingCfgProfIfVlanOspfOspfPriority_Type(Unsigned32):
    """Custom type wingCfgProfIfVlanOspfOspfPriority based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_WingCfgProfIfVlanOspfOspfPriority_Type.__name__ = "Unsigned32"
_WingCfgProfIfVlanOspfOspfPriority_Object = MibTableColumn
wingCfgProfIfVlanOspfOspfPriority = _WingCfgProfIfVlanOspfOspfPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 13, 1, 3),
    _WingCfgProfIfVlanOspfOspfPriority_Type()
)
wingCfgProfIfVlanOspfOspfPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfOspfPriority.setStatus("current")


class _WingCfgProfIfVlanOspfOspfCost_Type(Unsigned32):
    """Custom type wingCfgProfIfVlanOspfOspfCost based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgProfIfVlanOspfOspfCost_Type.__name__ = "Unsigned32"
_WingCfgProfIfVlanOspfOspfCost_Object = MibTableColumn
wingCfgProfIfVlanOspfOspfCost = _WingCfgProfIfVlanOspfOspfCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 13, 1, 4),
    _WingCfgProfIfVlanOspfOspfCost_Type()
)
wingCfgProfIfVlanOspfOspfCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfOspfCost.setStatus("current")


class _WingCfgProfIfVlanOspfOspfBandWidth_Type(Unsigned32):
    """Custom type wingCfgProfIfVlanOspfOspfBandWidth based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000000),
    )


_WingCfgProfIfVlanOspfOspfBandWidth_Type.__name__ = "Unsigned32"
_WingCfgProfIfVlanOspfOspfBandWidth_Object = MibTableColumn
wingCfgProfIfVlanOspfOspfBandWidth = _WingCfgProfIfVlanOspfOspfBandWidth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 13, 1, 5),
    _WingCfgProfIfVlanOspfOspfBandWidth_Type()
)
wingCfgProfIfVlanOspfOspfBandWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfOspfBandWidth.setStatus("current")
_WingCfgProfIfVlanOspfMsgDigestTable_Object = MibTable
wingCfgProfIfVlanOspfMsgDigestTable = _WingCfgProfIfVlanOspfMsgDigestTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 14)
)
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfMsgDigestTable.setStatus("current")
_WingCfgProfIfVlanOspfMsgDigestEntry_Object = MibTableRow
wingCfgProfIfVlanOspfMsgDigestEntry = _WingCfgProfIfVlanOspfMsgDigestEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 14, 1)
)
wingCfgProfIfVlanOspfMsgDigestEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
    (0, "WING-MIB", "wingCfgProfIfVlanOspfMsgDigestKeyId"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfMsgDigestEntry.setStatus("current")


class _WingCfgProfIfVlanOspfMsgDigestKeyId_Type(Unsigned32):
    """Custom type wingCfgProfIfVlanOspfMsgDigestKeyId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgProfIfVlanOspfMsgDigestKeyId_Type.__name__ = "Unsigned32"
_WingCfgProfIfVlanOspfMsgDigestKeyId_Object = MibTableColumn
wingCfgProfIfVlanOspfMsgDigestKeyId = _WingCfgProfIfVlanOspfMsgDigestKeyId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 14, 1, 1),
    _WingCfgProfIfVlanOspfMsgDigestKeyId_Type()
)
wingCfgProfIfVlanOspfMsgDigestKeyId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfMsgDigestKeyId.setStatus("current")
_WingCfgProfIfVlanOspfMsgDigestMessageDigest_Type = DisplayString
_WingCfgProfIfVlanOspfMsgDigestMessageDigest_Object = MibTableColumn
wingCfgProfIfVlanOspfMsgDigestMessageDigest = _WingCfgProfIfVlanOspfMsgDigestMessageDigest_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 14, 1, 3),
    _WingCfgProfIfVlanOspfMsgDigestMessageDigest_Type()
)
wingCfgProfIfVlanOspfMsgDigestMessageDigest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfVlanOspfMsgDigestMessageDigest.setStatus("current")
_WingCfgProfIfPppoeTable_Object = MibTable
wingCfgProfIfPppoeTable = _WingCfgProfIfPppoeTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15)
)
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeTable.setStatus("current")
_WingCfgProfIfPppoeEntry_Object = MibTableRow
wingCfgProfIfPppoeEntry = _WingCfgProfIfPppoeEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1)
)
wingCfgProfIfPppoeEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeEntry.setStatus("current")


class _WingCfgProfIfPppoeAuthType_Type(DisplayString):
    """Custom type wingCfgProfIfPppoeAuthType based on DisplayString"""
    defaultValue = OctetString("pap")


_WingCfgProfIfPppoeAuthType_Type.__name__ = "DisplayString"
_WingCfgProfIfPppoeAuthType_Object = MibTableColumn
wingCfgProfIfPppoeAuthType = _WingCfgProfIfPppoeAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 1),
    _WingCfgProfIfPppoeAuthType_Type()
)
wingCfgProfIfPppoeAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeAuthType.setStatus("current")


class _WingCfgProfIfPppoeIdleTime_Type(Unsigned32):
    """Custom type wingCfgProfIfPppoeIdleTime based on Unsigned32"""
    defaultValue = 600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgProfIfPppoeIdleTime_Type.__name__ = "Unsigned32"
_WingCfgProfIfPppoeIdleTime_Object = MibTableColumn
wingCfgProfIfPppoeIdleTime = _WingCfgProfIfPppoeIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 2),
    _WingCfgProfIfPppoeIdleTime_Type()
)
wingCfgProfIfPppoeIdleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeIdleTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeIdleTime.setUnits("seconds")


class _WingCfgProfIfPppoeKeepalive_Type(TruthValue):
    """Custom type wingCfgProfIfPppoeKeepalive based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfPppoeKeepalive_Type.__name__ = "TruthValue"
_WingCfgProfIfPppoeKeepalive_Object = MibTableColumn
wingCfgProfIfPppoeKeepalive = _WingCfgProfIfPppoeKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 3),
    _WingCfgProfIfPppoeKeepalive_Type()
)
wingCfgProfIfPppoeKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeKeepalive.setStatus("current")


class _WingCfgProfIfPppoeUsername_Type(DisplayString):
    """Custom type wingCfgProfIfPppoeUsername based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgProfIfPppoeUsername_Type.__name__ = "DisplayString"
_WingCfgProfIfPppoeUsername_Object = MibTableColumn
wingCfgProfIfPppoeUsername = _WingCfgProfIfPppoeUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 4),
    _WingCfgProfIfPppoeUsername_Type()
)
wingCfgProfIfPppoeUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeUsername.setStatus("current")


class _WingCfgProfIfPppoePassword_Type(DisplayString):
    """Custom type wingCfgProfIfPppoePassword based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgProfIfPppoePassword_Type.__name__ = "DisplayString"
_WingCfgProfIfPppoePassword_Object = MibTableColumn
wingCfgProfIfPppoePassword = _WingCfgProfIfPppoePassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 5),
    _WingCfgProfIfPppoePassword_Type()
)
wingCfgProfIfPppoePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoePassword.setStatus("current")


class _WingCfgProfIfPppoeService_Type(DisplayString):
    """Custom type wingCfgProfIfPppoeService based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_WingCfgProfIfPppoeService_Type.__name__ = "DisplayString"
_WingCfgProfIfPppoeService_Object = MibTableColumn
wingCfgProfIfPppoeService = _WingCfgProfIfPppoeService_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 6),
    _WingCfgProfIfPppoeService_Type()
)
wingCfgProfIfPppoeService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeService.setStatus("current")


class _WingCfgProfIfPppoeLocalnetVlan_Type(Unsigned32):
    """Custom type wingCfgProfIfPppoeLocalnetVlan based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgProfIfPppoeLocalnetVlan_Type.__name__ = "Unsigned32"
_WingCfgProfIfPppoeLocalnetVlan_Object = MibTableColumn
wingCfgProfIfPppoeLocalnetVlan = _WingCfgProfIfPppoeLocalnetVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 7),
    _WingCfgProfIfPppoeLocalnetVlan_Type()
)
wingCfgProfIfPppoeLocalnetVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeLocalnetVlan.setStatus("current")


class _WingCfgProfIfPppoeMtu_Type(Unsigned32):
    """Custom type wingCfgProfIfPppoeMtu based on Unsigned32"""
    defaultValue = 1492

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(500, 1492),
    )


_WingCfgProfIfPppoeMtu_Type.__name__ = "Unsigned32"
_WingCfgProfIfPppoeMtu_Object = MibTableColumn
wingCfgProfIfPppoeMtu = _WingCfgProfIfPppoeMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 8),
    _WingCfgProfIfPppoeMtu_Type()
)
wingCfgProfIfPppoeMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeMtu.setStatus("current")


class _WingCfgProfIfPppoeDefaultRoutePriority_Type(Unsigned32):
    """Custom type wingCfgProfIfPppoeDefaultRoutePriority based on Unsigned32"""
    defaultValue = 2000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8000),
    )


_WingCfgProfIfPppoeDefaultRoutePriority_Type.__name__ = "Unsigned32"
_WingCfgProfIfPppoeDefaultRoutePriority_Object = MibTableColumn
wingCfgProfIfPppoeDefaultRoutePriority = _WingCfgProfIfPppoeDefaultRoutePriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 9),
    _WingCfgProfIfPppoeDefaultRoutePriority_Type()
)
wingCfgProfIfPppoeDefaultRoutePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeDefaultRoutePriority.setStatus("current")


class _WingCfgProfIfPppoeIp_Type(DisplayString):
    """Custom type wingCfgProfIfPppoeIp based on DisplayString"""
    defaultValue = OctetString("0.0.0.0")


_WingCfgProfIfPppoeIp_Type.__name__ = "DisplayString"
_WingCfgProfIfPppoeIp_Object = MibTableColumn
wingCfgProfIfPppoeIp = _WingCfgProfIfPppoeIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 15, 1, 10),
    _WingCfgProfIfPppoeIp_Type()
)
wingCfgProfIfPppoeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfPppoeIp.setStatus("current")
_WingCfgProfIfT1E1Table_Object = MibTable
wingCfgProfIfT1E1Table = _WingCfgProfIfT1E1Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16)
)
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1Table.setStatus("current")
_WingCfgProfIfT1E1Entry_Object = MibTableRow
wingCfgProfIfT1E1Entry = _WingCfgProfIfT1E1Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16, 1)
)
wingCfgProfIfT1E1Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1Entry.setStatus("current")


class _WingCfgProfIfT1E1Media_Type(DisplayString):
    """Custom type wingCfgProfIfT1E1Media based on DisplayString"""
    defaultValue = OctetString("t1")


_WingCfgProfIfT1E1Media_Type.__name__ = "DisplayString"
_WingCfgProfIfT1E1Media_Object = MibTableColumn
wingCfgProfIfT1E1Media = _WingCfgProfIfT1E1Media_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16, 1, 1),
    _WingCfgProfIfT1E1Media_Type()
)
wingCfgProfIfT1E1Media.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1Media.setStatus("current")


class _WingCfgProfIfT1E1ClockMode_Type(DisplayString):
    """Custom type wingCfgProfIfT1E1ClockMode based on DisplayString"""
    defaultValue = OctetString("normal")


_WingCfgProfIfT1E1ClockMode_Type.__name__ = "DisplayString"
_WingCfgProfIfT1E1ClockMode_Object = MibTableColumn
wingCfgProfIfT1E1ClockMode = _WingCfgProfIfT1E1ClockMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16, 1, 2),
    _WingCfgProfIfT1E1ClockMode_Type()
)
wingCfgProfIfT1E1ClockMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1ClockMode.setStatus("current")


class _WingCfgProfIfT1E1HighImpedance_Type(DisplayString):
    """Custom type wingCfgProfIfT1E1HighImpedance based on DisplayString"""
    defaultValue = OctetString("disable")


_WingCfgProfIfT1E1HighImpedance_Type.__name__ = "DisplayString"
_WingCfgProfIfT1E1HighImpedance_Object = MibTableColumn
wingCfgProfIfT1E1HighImpedance = _WingCfgProfIfT1E1HighImpedance_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16, 1, 3),
    _WingCfgProfIfT1E1HighImpedance_Type()
)
wingCfgProfIfT1E1HighImpedance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1HighImpedance.setStatus("current")


class _WingCfgProfIfT1E1LineBuildOut_Type(DisplayString):
    """Custom type wingCfgProfIfT1E1LineBuildOut based on DisplayString"""
    defaultValue = OctetString("0dB")


_WingCfgProfIfT1E1LineBuildOut_Type.__name__ = "DisplayString"
_WingCfgProfIfT1E1LineBuildOut_Object = MibTableColumn
wingCfgProfIfT1E1LineBuildOut = _WingCfgProfIfT1E1LineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16, 1, 4),
    _WingCfgProfIfT1E1LineBuildOut_Type()
)
wingCfgProfIfT1E1LineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1LineBuildOut.setStatus("current")


class _WingCfgProfIfT1E1LineEncoding_Type(DisplayString):
    """Custom type wingCfgProfIfT1E1LineEncoding based on DisplayString"""
    defaultValue = OctetString("b8zs")


_WingCfgProfIfT1E1LineEncoding_Type.__name__ = "DisplayString"
_WingCfgProfIfT1E1LineEncoding_Object = MibTableColumn
wingCfgProfIfT1E1LineEncoding = _WingCfgProfIfT1E1LineEncoding_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16, 1, 5),
    _WingCfgProfIfT1E1LineEncoding_Type()
)
wingCfgProfIfT1E1LineEncoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1LineEncoding.setStatus("current")


class _WingCfgProfIfT1E1RxSensitivityLevel_Type(DisplayString):
    """Custom type wingCfgProfIfT1E1RxSensitivityLevel based on DisplayString"""
    defaultValue = OctetString("36dB")


_WingCfgProfIfT1E1RxSensitivityLevel_Type.__name__ = "DisplayString"
_WingCfgProfIfT1E1RxSensitivityLevel_Object = MibTableColumn
wingCfgProfIfT1E1RxSensitivityLevel = _WingCfgProfIfT1E1RxSensitivityLevel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 16, 1, 6),
    _WingCfgProfIfT1E1RxSensitivityLevel_Type()
)
wingCfgProfIfT1E1RxSensitivityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfT1E1RxSensitivityLevel.setStatus("current")
_WingCfgProfIfSerialTable_Object = MibTable
wingCfgProfIfSerialTable = _WingCfgProfIfSerialTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17)
)
if mibBuilder.loadTexts:
    wingCfgProfIfSerialTable.setStatus("current")
_WingCfgProfIfSerialEntry_Object = MibTableRow
wingCfgProfIfSerialEntry = _WingCfgProfIfSerialEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17, 1)
)
wingCfgProfIfSerialEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfSerialEntry.setStatus("current")


class _WingCfgProfIfSerialAuthentication_Type(DisplayString):
    """Custom type wingCfgProfIfSerialAuthentication based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfIfSerialAuthentication_Type.__name__ = "DisplayString"
_WingCfgProfIfSerialAuthentication_Object = MibTableColumn
wingCfgProfIfSerialAuthentication = _WingCfgProfIfSerialAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17, 1, 1),
    _WingCfgProfIfSerialAuthentication_Type()
)
wingCfgProfIfSerialAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSerialAuthentication.setStatus("current")


class _WingCfgProfIfSerialEncapsulation_Type(DisplayString):
    """Custom type wingCfgProfIfSerialEncapsulation based on DisplayString"""
    defaultValue = OctetString("ppp")


_WingCfgProfIfSerialEncapsulation_Type.__name__ = "DisplayString"
_WingCfgProfIfSerialEncapsulation_Object = MibTableColumn
wingCfgProfIfSerialEncapsulation = _WingCfgProfIfSerialEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17, 1, 2),
    _WingCfgProfIfSerialEncapsulation_Type()
)
wingCfgProfIfSerialEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSerialEncapsulation.setStatus("current")


class _WingCfgProfIfSerialLocalIpAddress_Type(DisplayString):
    """Custom type wingCfgProfIfSerialLocalIpAddress based on DisplayString"""
    defaultValue = OctetString("")


_WingCfgProfIfSerialLocalIpAddress_Type.__name__ = "DisplayString"
_WingCfgProfIfSerialLocalIpAddress_Object = MibTableColumn
wingCfgProfIfSerialLocalIpAddress = _WingCfgProfIfSerialLocalIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17, 1, 3),
    _WingCfgProfIfSerialLocalIpAddress_Type()
)
wingCfgProfIfSerialLocalIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSerialLocalIpAddress.setStatus("current")


class _WingCfgProfIfSerialUsername_Type(DisplayString):
    """Custom type wingCfgProfIfSerialUsername based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingCfgProfIfSerialUsername_Type.__name__ = "DisplayString"
_WingCfgProfIfSerialUsername_Object = MibTableColumn
wingCfgProfIfSerialUsername = _WingCfgProfIfSerialUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17, 1, 4),
    _WingCfgProfIfSerialUsername_Type()
)
wingCfgProfIfSerialUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSerialUsername.setStatus("current")


class _WingCfgProfIfSerialPassword_Type(DisplayString):
    """Custom type wingCfgProfIfSerialPassword based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingCfgProfIfSerialPassword_Type.__name__ = "DisplayString"
_WingCfgProfIfSerialPassword_Object = MibTableColumn
wingCfgProfIfSerialPassword = _WingCfgProfIfSerialPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17, 1, 5),
    _WingCfgProfIfSerialPassword_Type()
)
wingCfgProfIfSerialPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSerialPassword.setStatus("current")


class _WingCfgProfIfSerialRemoteIpSubnet_Type(DisplayString):
    """Custom type wingCfgProfIfSerialRemoteIpSubnet based on DisplayString"""
    defaultValue = OctetString("")


_WingCfgProfIfSerialRemoteIpSubnet_Type.__name__ = "DisplayString"
_WingCfgProfIfSerialRemoteIpSubnet_Object = MibTableColumn
wingCfgProfIfSerialRemoteIpSubnet = _WingCfgProfIfSerialRemoteIpSubnet_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 17, 1, 6),
    _WingCfgProfIfSerialRemoteIpSubnet_Type()
)
wingCfgProfIfSerialRemoteIpSubnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfSerialRemoteIpSubnet.setStatus("current")
_WingCfgProfIfDot1xAuthTable_Object = MibTable
wingCfgProfIfDot1xAuthTable = _WingCfgProfIfDot1xAuthTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18)
)
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthTable.setStatus("current")
_WingCfgProfIfDot1xAuthEntry_Object = MibTableRow
wingCfgProfIfDot1xAuthEntry = _WingCfgProfIfDot1xAuthEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1)
)
wingCfgProfIfDot1xAuthEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthEntry.setStatus("current")


class _WingCfgProfIfDot1xAuthHostMode_Type(DisplayString):
    """Custom type wingCfgProfIfDot1xAuthHostMode based on DisplayString"""
    defaultValue = OctetString("single-host")


_WingCfgProfIfDot1xAuthHostMode_Type.__name__ = "DisplayString"
_WingCfgProfIfDot1xAuthHostMode_Object = MibTableColumn
wingCfgProfIfDot1xAuthHostMode = _WingCfgProfIfDot1xAuthHostMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 1),
    _WingCfgProfIfDot1xAuthHostMode_Type()
)
wingCfgProfIfDot1xAuthHostMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthHostMode.setStatus("current")


class _WingCfgProfIfDot1xAuthGuestVlan_Type(Unsigned32):
    """Custom type wingCfgProfIfDot1xAuthGuestVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgProfIfDot1xAuthGuestVlan_Type.__name__ = "Unsigned32"
_WingCfgProfIfDot1xAuthGuestVlan_Object = MibTableColumn
wingCfgProfIfDot1xAuthGuestVlan = _WingCfgProfIfDot1xAuthGuestVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 2),
    _WingCfgProfIfDot1xAuthGuestVlan_Type()
)
wingCfgProfIfDot1xAuthGuestVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthGuestVlan.setStatus("current")


class _WingCfgProfIfDot1xAuthPortControl_Type(DisplayString):
    """Custom type wingCfgProfIfDot1xAuthPortControl based on DisplayString"""
    defaultValue = OctetString("force-authorized")


_WingCfgProfIfDot1xAuthPortControl_Type.__name__ = "DisplayString"
_WingCfgProfIfDot1xAuthPortControl_Object = MibTableColumn
wingCfgProfIfDot1xAuthPortControl = _WingCfgProfIfDot1xAuthPortControl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 3),
    _WingCfgProfIfDot1xAuthPortControl_Type()
)
wingCfgProfIfDot1xAuthPortControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthPortControl.setStatus("current")


class _WingCfgProfIfDot1xAuthReauthenticate_Type(TruthValue):
    """Custom type wingCfgProfIfDot1xAuthReauthenticate based on TruthValue"""
    defaultValue = 2


_WingCfgProfIfDot1xAuthReauthenticate_Type.__name__ = "TruthValue"
_WingCfgProfIfDot1xAuthReauthenticate_Object = MibTableColumn
wingCfgProfIfDot1xAuthReauthenticate = _WingCfgProfIfDot1xAuthReauthenticate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 4),
    _WingCfgProfIfDot1xAuthReauthenticate_Type()
)
wingCfgProfIfDot1xAuthReauthenticate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthReauthenticate.setStatus("current")


class _WingCfgProfIfDot1xAuthMaxReauthCount_Type(Unsigned32):
    """Custom type wingCfgProfIfDot1xAuthMaxReauthCount based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgProfIfDot1xAuthMaxReauthCount_Type.__name__ = "Unsigned32"
_WingCfgProfIfDot1xAuthMaxReauthCount_Object = MibTableColumn
wingCfgProfIfDot1xAuthMaxReauthCount = _WingCfgProfIfDot1xAuthMaxReauthCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 5),
    _WingCfgProfIfDot1xAuthMaxReauthCount_Type()
)
wingCfgProfIfDot1xAuthMaxReauthCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthMaxReauthCount.setStatus("current")


class _WingCfgProfIfDot1xAuthMaxReq_Type(Unsigned32):
    """Custom type wingCfgProfIfDot1xAuthMaxReq based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgProfIfDot1xAuthMaxReq_Type.__name__ = "Unsigned32"
_WingCfgProfIfDot1xAuthMaxReq_Object = MibTableColumn
wingCfgProfIfDot1xAuthMaxReq = _WingCfgProfIfDot1xAuthMaxReq_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 6),
    _WingCfgProfIfDot1xAuthMaxReq_Type()
)
wingCfgProfIfDot1xAuthMaxReq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthMaxReq.setStatus("current")


class _WingCfgProfIfDot1xAuthQuietPeriod_Type(Unsigned32):
    """Custom type wingCfgProfIfDot1xAuthQuietPeriod based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgProfIfDot1xAuthQuietPeriod_Type.__name__ = "Unsigned32"
_WingCfgProfIfDot1xAuthQuietPeriod_Object = MibTableColumn
wingCfgProfIfDot1xAuthQuietPeriod = _WingCfgProfIfDot1xAuthQuietPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 7),
    _WingCfgProfIfDot1xAuthQuietPeriod_Type()
)
wingCfgProfIfDot1xAuthQuietPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthQuietPeriod.setStatus("current")


class _WingCfgProfIfDot1xAuthReauthPeriod_Type(Unsigned32):
    """Custom type wingCfgProfIfDot1xAuthReauthPeriod based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgProfIfDot1xAuthReauthPeriod_Type.__name__ = "Unsigned32"
_WingCfgProfIfDot1xAuthReauthPeriod_Object = MibTableColumn
wingCfgProfIfDot1xAuthReauthPeriod = _WingCfgProfIfDot1xAuthReauthPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 18, 1, 8),
    _WingCfgProfIfDot1xAuthReauthPeriod_Type()
)
wingCfgProfIfDot1xAuthReauthPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfDot1xAuthReauthPeriod.setStatus("current")
_WingCfgProfIfMeshpointBssmapTable_Object = MibTable
wingCfgProfIfMeshpointBssmapTable = _WingCfgProfIfMeshpointBssmapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 19)
)
if mibBuilder.loadTexts:
    wingCfgProfIfMeshpointBssmapTable.setStatus("current")
_WingCfgProfIfMeshpointBssmapEntry_Object = MibTableRow
wingCfgProfIfMeshpointBssmapEntry = _WingCfgProfIfMeshpointBssmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 19, 1)
)
wingCfgProfIfMeshpointBssmapEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfIfName"),
    (0, "WING-MIB", "wingCfgProfIfMeshpointBssmapMeshpoint"),
)
if mibBuilder.loadTexts:
    wingCfgProfIfMeshpointBssmapEntry.setStatus("current")
_WingCfgProfIfMeshpointBssmapMeshpoint_Type = WingIdentifier
_WingCfgProfIfMeshpointBssmapMeshpoint_Object = MibTableColumn
wingCfgProfIfMeshpointBssmapMeshpoint = _WingCfgProfIfMeshpointBssmapMeshpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 19, 1, 1),
    _WingCfgProfIfMeshpointBssmapMeshpoint_Type()
)
wingCfgProfIfMeshpointBssmapMeshpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfMeshpointBssmapMeshpoint.setStatus("current")


class _WingCfgProfIfMeshpointBssmapBss_Type(Unsigned32):
    """Custom type wingCfgProfIfMeshpointBssmapBss based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_WingCfgProfIfMeshpointBssmapBss_Type.__name__ = "Unsigned32"
_WingCfgProfIfMeshpointBssmapBss_Object = MibTableColumn
wingCfgProfIfMeshpointBssmapBss = _WingCfgProfIfMeshpointBssmapBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 2, 19, 1, 3),
    _WingCfgProfIfMeshpointBssmapBss_Type()
)
wingCfgProfIfMeshpointBssmapBss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIfMeshpointBssmapBss.setStatus("current")
_WingCfgProfRoute_ObjectIdentity = ObjectIdentity
wingCfgProfRoute = _WingCfgProfRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 5)
)
_WingCfgProfRouteTable_Object = MibTable
wingCfgProfRouteTable = _WingCfgProfRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 5, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfRouteTable.setStatus("current")
_WingCfgProfRouteEntry_Object = MibTableRow
wingCfgProfRouteEntry = _WingCfgProfRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 5, 1, 1)
)
wingCfgProfRouteEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfRouteNetwork"),
)
if mibBuilder.loadTexts:
    wingCfgProfRouteEntry.setStatus("current")
_WingCfgProfRouteNetwork_Type = WingIdentifier
_WingCfgProfRouteNetwork_Object = MibTableColumn
wingCfgProfRouteNetwork = _WingCfgProfRouteNetwork_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 5, 1, 1, 1),
    _WingCfgProfRouteNetwork_Type()
)
wingCfgProfRouteNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfRouteNetwork.setStatus("current")
_WingCfgProfRouteGateway_Type = WingIdentifier
_WingCfgProfRouteGateway_Object = MibTableColumn
wingCfgProfRouteGateway = _WingCfgProfRouteGateway_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 5, 1, 1, 3),
    _WingCfgProfRouteGateway_Type()
)
wingCfgProfRouteGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfRouteGateway.setStatus("current")
_WingCfgProfNtpSvr_ObjectIdentity = ObjectIdentity
wingCfgProfNtpSvr = _WingCfgProfNtpSvr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6)
)
_WingCfgProfNtpSvrTable_Object = MibTable
wingCfgProfNtpSvrTable = _WingCfgProfNtpSvrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrTable.setStatus("current")
_WingCfgProfNtpSvrEntry_Object = MibTableRow
wingCfgProfNtpSvrEntry = _WingCfgProfNtpSvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1, 1)
)
wingCfgProfNtpSvrEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfNtpSvrServerIp"),
)
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrEntry.setStatus("current")
_WingCfgProfNtpSvrServerIp_Type = WingIdentifier
_WingCfgProfNtpSvrServerIp_Object = MibTableColumn
wingCfgProfNtpSvrServerIp = _WingCfgProfNtpSvrServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1, 1, 1),
    _WingCfgProfNtpSvrServerIp_Type()
)
wingCfgProfNtpSvrServerIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrServerIp.setStatus("current")


class _WingCfgProfNtpSvrAuthenkey_Type(Unsigned32):
    """Custom type wingCfgProfNtpSvrAuthenkey based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65534),
    )


_WingCfgProfNtpSvrAuthenkey_Type.__name__ = "Unsigned32"
_WingCfgProfNtpSvrAuthenkey_Object = MibTableColumn
wingCfgProfNtpSvrAuthenkey = _WingCfgProfNtpSvrAuthenkey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1, 1, 3),
    _WingCfgProfNtpSvrAuthenkey_Type()
)
wingCfgProfNtpSvrAuthenkey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrAuthenkey.setStatus("current")


class _WingCfgProfNtpSvrAutokey_Type(TruthValue):
    """Custom type wingCfgProfNtpSvrAutokey based on TruthValue"""
    defaultValue = 2


_WingCfgProfNtpSvrAutokey_Type.__name__ = "TruthValue"
_WingCfgProfNtpSvrAutokey_Object = MibTableColumn
wingCfgProfNtpSvrAutokey = _WingCfgProfNtpSvrAutokey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1, 1, 4),
    _WingCfgProfNtpSvrAutokey_Type()
)
wingCfgProfNtpSvrAutokey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrAutokey.setStatus("current")


class _WingCfgProfNtpSvrKeyStr_Type(DisplayString):
    """Custom type wingCfgProfNtpSvrKeyStr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgProfNtpSvrKeyStr_Type.__name__ = "DisplayString"
_WingCfgProfNtpSvrKeyStr_Object = MibTableColumn
wingCfgProfNtpSvrKeyStr = _WingCfgProfNtpSvrKeyStr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1, 1, 5),
    _WingCfgProfNtpSvrKeyStr_Type()
)
wingCfgProfNtpSvrKeyStr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrKeyStr.setStatus("current")


class _WingCfgProfNtpSvrPrefer_Type(TruthValue):
    """Custom type wingCfgProfNtpSvrPrefer based on TruthValue"""
    defaultValue = 2


_WingCfgProfNtpSvrPrefer_Type.__name__ = "TruthValue"
_WingCfgProfNtpSvrPrefer_Object = MibTableColumn
wingCfgProfNtpSvrPrefer = _WingCfgProfNtpSvrPrefer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1, 1, 6),
    _WingCfgProfNtpSvrPrefer_Type()
)
wingCfgProfNtpSvrPrefer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrPrefer.setStatus("current")


class _WingCfgProfNtpSvrVersion_Type(Unsigned32):
    """Custom type wingCfgProfNtpSvrVersion based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_WingCfgProfNtpSvrVersion_Type.__name__ = "Unsigned32"
_WingCfgProfNtpSvrVersion_Object = MibTableColumn
wingCfgProfNtpSvrVersion = _WingCfgProfNtpSvrVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 6, 1, 1, 7),
    _WingCfgProfNtpSvrVersion_Type()
)
wingCfgProfNtpSvrVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNtpSvrVersion.setStatus("current")
_WingCfgProfBridgeVlan_ObjectIdentity = ObjectIdentity
wingCfgProfBridgeVlan = _WingCfgProfBridgeVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7)
)
_WingCfgProfBridgeVlanTable_Object = MibTable
wingCfgProfBridgeVlanTable = _WingCfgProfBridgeVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanTable.setStatus("current")
_WingCfgProfBridgeVlanEntry_Object = MibTableRow
wingCfgProfBridgeVlanEntry = _WingCfgProfBridgeVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1)
)
wingCfgProfBridgeVlanEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfBridgeVlanId"),
)
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanEntry.setStatus("current")


class _WingCfgProfBridgeVlanId_Type(Unsigned32):
    """Custom type wingCfgProfBridgeVlanId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_WingCfgProfBridgeVlanId_Type.__name__ = "Unsigned32"
_WingCfgProfBridgeVlanId_Object = MibTableColumn
wingCfgProfBridgeVlanId = _WingCfgProfBridgeVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 1),
    _WingCfgProfBridgeVlanId_Type()
)
wingCfgProfBridgeVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanId.setStatus("current")


class _WingCfgProfBridgeVlanDesc_Type(DisplayString):
    """Custom type wingCfgProfBridgeVlanDesc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgProfBridgeVlanDesc_Type.__name__ = "DisplayString"
_WingCfgProfBridgeVlanDesc_Object = MibTableColumn
wingCfgProfBridgeVlanDesc = _WingCfgProfBridgeVlanDesc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 3),
    _WingCfgProfBridgeVlanDesc_Type()
)
wingCfgProfBridgeVlanDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanDesc.setStatus("current")


class _WingCfgProfBridgeVlanEdgeVlan_Type(TruthValue):
    """Custom type wingCfgProfBridgeVlanEdgeVlan based on TruthValue"""
    defaultValue = 1


_WingCfgProfBridgeVlanEdgeVlan_Type.__name__ = "TruthValue"
_WingCfgProfBridgeVlanEdgeVlan_Object = MibTableColumn
wingCfgProfBridgeVlanEdgeVlan = _WingCfgProfBridgeVlanEdgeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 4),
    _WingCfgProfBridgeVlanEdgeVlan_Type()
)
wingCfgProfBridgeVlanEdgeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanEdgeVlan.setStatus("current")


class _WingCfgProfBridgeVlanBridgingMode_Type(DisplayString):
    """Custom type wingCfgProfBridgeVlanBridgingMode based on DisplayString"""
    defaultValue = OctetString("auto")


_WingCfgProfBridgeVlanBridgingMode_Type.__name__ = "DisplayString"
_WingCfgProfBridgeVlanBridgingMode_Object = MibTableColumn
wingCfgProfBridgeVlanBridgingMode = _WingCfgProfBridgeVlanBridgingMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 5),
    _WingCfgProfBridgeVlanBridgingMode_Type()
)
wingCfgProfBridgeVlanBridgingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanBridgingMode.setStatus("current")


class _WingCfgProfBridgeVlanIpArpTrust_Type(TruthValue):
    """Custom type wingCfgProfBridgeVlanIpArpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgProfBridgeVlanIpArpTrust_Type.__name__ = "TruthValue"
_WingCfgProfBridgeVlanIpArpTrust_Object = MibTableColumn
wingCfgProfBridgeVlanIpArpTrust = _WingCfgProfBridgeVlanIpArpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 6),
    _WingCfgProfBridgeVlanIpArpTrust_Type()
)
wingCfgProfBridgeVlanIpArpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIpArpTrust.setStatus("current")


class _WingCfgProfBridgeVlanIpDhcpTrust_Type(TruthValue):
    """Custom type wingCfgProfBridgeVlanIpDhcpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgProfBridgeVlanIpDhcpTrust_Type.__name__ = "TruthValue"
_WingCfgProfBridgeVlanIpDhcpTrust_Object = MibTableColumn
wingCfgProfBridgeVlanIpDhcpTrust = _WingCfgProfBridgeVlanIpDhcpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 7),
    _WingCfgProfBridgeVlanIpDhcpTrust_Type()
)
wingCfgProfBridgeVlanIpDhcpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIpDhcpTrust.setStatus("current")
_WingCfgProfBridgeVlanTunnelMacOutAcl_Type = WingIdentifier
_WingCfgProfBridgeVlanTunnelMacOutAcl_Object = MibTableColumn
wingCfgProfBridgeVlanTunnelMacOutAcl = _WingCfgProfBridgeVlanTunnelMacOutAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 8),
    _WingCfgProfBridgeVlanTunnelMacOutAcl_Type()
)
wingCfgProfBridgeVlanTunnelMacOutAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanTunnelMacOutAcl.setStatus("current")
_WingCfgProfBridgeVlanTunnelIpOutAcl_Type = WingIdentifier
_WingCfgProfBridgeVlanTunnelIpOutAcl_Object = MibTableColumn
wingCfgProfBridgeVlanTunnelIpOutAcl = _WingCfgProfBridgeVlanTunnelIpOutAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 1, 1, 9),
    _WingCfgProfBridgeVlanTunnelIpOutAcl_Type()
)
wingCfgProfBridgeVlanTunnelIpOutAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanTunnelIpOutAcl.setStatus("current")
_WingCfgProfBridgeVlanIgsTable_Object = MibTable
wingCfgProfBridgeVlanIgsTable = _WingCfgProfBridgeVlanIgsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsTable.setStatus("current")
_WingCfgProfBridgeVlanIgsEntry_Object = MibTableRow
wingCfgProfBridgeVlanIgsEntry = _WingCfgProfBridgeVlanIgsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1)
)
wingCfgProfBridgeVlanIgsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfBridgeVlanId"),
)
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsEntry.setStatus("current")


class _WingCfgProfBridgeVlanIgsIpIgs_Type(TruthValue):
    """Custom type wingCfgProfBridgeVlanIgsIpIgs based on TruthValue"""
    defaultValue = 1


_WingCfgProfBridgeVlanIgsIpIgs_Type.__name__ = "TruthValue"
_WingCfgProfBridgeVlanIgsIpIgs_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgs = _WingCfgProfBridgeVlanIgsIpIgs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 1),
    _WingCfgProfBridgeVlanIgsIpIgs_Type()
)
wingCfgProfBridgeVlanIgsIpIgs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgs.setStatus("current")


class _WingCfgProfBridgeVlanIgsIpIgsQuerier_Type(TruthValue):
    """Custom type wingCfgProfBridgeVlanIgsIpIgsQuerier based on TruthValue"""
    defaultValue = 2


_WingCfgProfBridgeVlanIgsIpIgsQuerier_Type.__name__ = "TruthValue"
_WingCfgProfBridgeVlanIgsIpIgsQuerier_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgsQuerier = _WingCfgProfBridgeVlanIgsIpIgsQuerier_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 2),
    _WingCfgProfBridgeVlanIgsIpIgsQuerier_Type()
)
wingCfgProfBridgeVlanIgsIpIgsQuerier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsQuerier.setStatus("current")


class _WingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime_Type(Unsigned32):
    """Custom type wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_WingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime_Type.__name__ = "Unsigned32"
_WingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime = _WingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 3),
    _WingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime_Type()
)
wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime.setUnits("seconds")


class _WingCfgProfBridgeVlanIgsIpIgsQuerierVersion_Type(Unsigned32):
    """Custom type wingCfgProfBridgeVlanIgsIpIgsQuerierVersion based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WingCfgProfBridgeVlanIgsIpIgsQuerierVersion_Type.__name__ = "Unsigned32"
_WingCfgProfBridgeVlanIgsIpIgsQuerierVersion_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgsQuerierVersion = _WingCfgProfBridgeVlanIgsIpIgsQuerierVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 4),
    _WingCfgProfBridgeVlanIgsIpIgsQuerierVersion_Type()
)
wingCfgProfBridgeVlanIgsIpIgsQuerierVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsQuerierVersion.setStatus("current")
_WingCfgProfBridgeVlanIgsIpIgsQuerierAddress_Type = DisplayString
_WingCfgProfBridgeVlanIgsIpIgsQuerierAddress_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgsQuerierAddress = _WingCfgProfBridgeVlanIgsIpIgsQuerierAddress_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 5),
    _WingCfgProfBridgeVlanIgsIpIgsQuerierAddress_Type()
)
wingCfgProfBridgeVlanIgsIpIgsQuerierAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsQuerierAddress.setStatus("current")


class _WingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Type(Unsigned32):
    """Custom type wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_WingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Type.__name__ = "Unsigned32"
_WingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry = _WingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 6),
    _WingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Type()
)
wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry.setUnits("seconds")


class _WingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast_Type(TruthValue):
    """Custom type wingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast based on TruthValue"""
    defaultValue = 2


_WingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast_Type.__name__ = "TruthValue"
_WingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast = _WingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 7),
    _WingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast_Type()
)
wingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast.setStatus("current")


class _WingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Type(DisplayString):
    """Custom type wingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp based on DisplayString"""
    defaultValue = OctetString("pim-dvmrp")


_WingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Type.__name__ = "DisplayString"
_WingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Object = MibTableColumn
wingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp = _WingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 7, 2, 1, 8),
    _WingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Type()
)
wingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp.setStatus("current")
_WingCfgProfClst_ObjectIdentity = ObjectIdentity
wingCfgProfClst = _WingCfgProfClst_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8)
)
_WingCfgProfClstTable_Object = MibTable
wingCfgProfClstTable = _WingCfgProfClstTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfClstTable.setStatus("current")
_WingCfgProfClstEntry_Object = MibTableRow
wingCfgProfClstEntry = _WingCfgProfClstEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1)
)
wingCfgProfClstEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfClstEntry.setStatus("current")
_WingCfgProfClstClstName_Type = WingIdentifier
_WingCfgProfClstClstName_Object = MibTableColumn
wingCfgProfClstClstName = _WingCfgProfClstClstName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1, 2),
    _WingCfgProfClstClstName_Type()
)
wingCfgProfClstClstName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfClstClstName.setStatus("current")


class _WingCfgProfClstClstMemberVlan_Type(Unsigned32):
    """Custom type wingCfgProfClstClstMemberVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgProfClstClstMemberVlan_Type.__name__ = "Unsigned32"
_WingCfgProfClstClstMemberVlan_Object = MibTableColumn
wingCfgProfClstClstMemberVlan = _WingCfgProfClstClstMemberVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1, 3),
    _WingCfgProfClstClstMemberVlan_Type()
)
wingCfgProfClstClstMemberVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfClstClstMemberVlan.setStatus("current")


class _WingCfgProfClstClstMode_Type(DisplayString):
    """Custom type wingCfgProfClstClstMode based on DisplayString"""
    defaultValue = OctetString("active")


_WingCfgProfClstClstMode_Type.__name__ = "DisplayString"
_WingCfgProfClstClstMode_Object = MibTableColumn
wingCfgProfClstClstMode = _WingCfgProfClstClstMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1, 4),
    _WingCfgProfClstClstMode_Type()
)
wingCfgProfClstClstMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfClstClstMode.setStatus("current")


class _WingCfgProfClstClstMasterPriority_Type(Unsigned32):
    """Custom type wingCfgProfClstClstMasterPriority based on Unsigned32"""
    defaultValue = 128

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgProfClstClstMasterPriority_Type.__name__ = "Unsigned32"
_WingCfgProfClstClstMasterPriority_Object = MibTableColumn
wingCfgProfClstClstMasterPriority = _WingCfgProfClstClstMasterPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1, 5),
    _WingCfgProfClstClstMasterPriority_Type()
)
wingCfgProfClstClstMasterPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfClstClstMasterPriority.setStatus("current")


class _WingCfgProfClstHandleStp_Type(TruthValue):
    """Custom type wingCfgProfClstHandleStp based on TruthValue"""
    defaultValue = 2


_WingCfgProfClstHandleStp_Type.__name__ = "TruthValue"
_WingCfgProfClstHandleStp_Object = MibTableColumn
wingCfgProfClstHandleStp = _WingCfgProfClstHandleStp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1, 6),
    _WingCfgProfClstHandleStp_Type()
)
wingCfgProfClstHandleStp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfClstHandleStp.setStatus("current")


class _WingCfgProfClstAutoRevert_Type(TruthValue):
    """Custom type wingCfgProfClstAutoRevert based on TruthValue"""
    defaultValue = 2


_WingCfgProfClstAutoRevert_Type.__name__ = "TruthValue"
_WingCfgProfClstAutoRevert_Object = MibTableColumn
wingCfgProfClstAutoRevert = _WingCfgProfClstAutoRevert_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1, 7),
    _WingCfgProfClstAutoRevert_Type()
)
wingCfgProfClstAutoRevert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfClstAutoRevert.setStatus("current")


class _WingCfgProfClstAutoRevertDelay_Type(Unsigned32):
    """Custom type wingCfgProfClstAutoRevertDelay based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1800),
    )


_WingCfgProfClstAutoRevertDelay_Type.__name__ = "Unsigned32"
_WingCfgProfClstAutoRevertDelay_Object = MibTableColumn
wingCfgProfClstAutoRevertDelay = _WingCfgProfClstAutoRevertDelay_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 8, 1, 1, 8),
    _WingCfgProfClstAutoRevertDelay_Type()
)
wingCfgProfClstAutoRevertDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfClstAutoRevertDelay.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfClstAutoRevertDelay.setUnits("minutes")
_WingCfgProfMint_ObjectIdentity = ObjectIdentity
wingCfgProfMint = _WingCfgProfMint_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9)
)
_WingCfgProfMintTable_Object = MibTable
wingCfgProfMintTable = _WingCfgProfMintTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfMintTable.setStatus("current")
_WingCfgProfMintEntry_Object = MibTableRow
wingCfgProfMintEntry = _WingCfgProfMintEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1, 1)
)
wingCfgProfMintEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfMintEntry.setStatus("current")
_WingCfgProfMintLevel1AreaId_Type = DisplayString
_WingCfgProfMintLevel1AreaId_Object = MibTableColumn
wingCfgProfMintLevel1AreaId = _WingCfgProfMintLevel1AreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1, 1, 1),
    _WingCfgProfMintLevel1AreaId_Type()
)
wingCfgProfMintLevel1AreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMintLevel1AreaId.setStatus("current")


class _WingCfgProfMintSpfLatency_Type(Unsigned32):
    """Custom type wingCfgProfMintSpfLatency based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_WingCfgProfMintSpfLatency_Type.__name__ = "Unsigned32"
_WingCfgProfMintSpfLatency_Object = MibTableColumn
wingCfgProfMintSpfLatency = _WingCfgProfMintSpfLatency_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1, 1, 2),
    _WingCfgProfMintSpfLatency_Type()
)
wingCfgProfMintSpfLatency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMintSpfLatency.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfMintSpfLatency.setUnits("seconds")


class _WingCfgProfMintDisPriorityAdjustment_Type(Integer32):
    """Custom type wingCfgProfMintDisPriorityAdjustment based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-255, 255),
    )


_WingCfgProfMintDisPriorityAdjustment_Type.__name__ = "Integer32"
_WingCfgProfMintDisPriorityAdjustment_Object = MibTableColumn
wingCfgProfMintDisPriorityAdjustment = _WingCfgProfMintDisPriorityAdjustment_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1, 1, 3),
    _WingCfgProfMintDisPriorityAdjustment_Type()
)
wingCfgProfMintDisPriorityAdjustment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMintDisPriorityAdjustment.setStatus("current")


class _WingCfgProfMintMlcpVlan_Type(TruthValue):
    """Custom type wingCfgProfMintMlcpVlan based on TruthValue"""
    defaultValue = 1


_WingCfgProfMintMlcpVlan_Type.__name__ = "TruthValue"
_WingCfgProfMintMlcpVlan_Object = MibTableColumn
wingCfgProfMintMlcpVlan = _WingCfgProfMintMlcpVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1, 1, 4),
    _WingCfgProfMintMlcpVlan_Type()
)
wingCfgProfMintMlcpVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMintMlcpVlan.setStatus("current")


class _WingCfgProfMintMlcpIp_Type(TruthValue):
    """Custom type wingCfgProfMintMlcpIp based on TruthValue"""
    defaultValue = 1


_WingCfgProfMintMlcpIp_Type.__name__ = "TruthValue"
_WingCfgProfMintMlcpIp_Object = MibTableColumn
wingCfgProfMintMlcpIp = _WingCfgProfMintMlcpIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1, 1, 5),
    _WingCfgProfMintMlcpIp_Type()
)
wingCfgProfMintMlcpIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMintMlcpIp.setStatus("current")
_WingCfgProfMintTunnelControllerLoadBalancingLevel1_Type = TruthValue
_WingCfgProfMintTunnelControllerLoadBalancingLevel1_Object = MibTableColumn
wingCfgProfMintTunnelControllerLoadBalancingLevel1 = _WingCfgProfMintTunnelControllerLoadBalancingLevel1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 9, 1, 1, 6),
    _WingCfgProfMintTunnelControllerLoadBalancingLevel1_Type()
)
wingCfgProfMintTunnelControllerLoadBalancingLevel1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMintTunnelControllerLoadBalancingLevel1.setStatus("current")
_WingCfgProfDot11_ObjectIdentity = ObjectIdentity
wingCfgProfDot11 = _WingCfgProfDot11_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10)
)
_WingCfgProfDot11Table_Object = MibTable
wingCfgProfDot11Table = _WingCfgProfDot11Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfDot11Table.setStatus("current")
_WingCfgProfDot11Entry_Object = MibTableRow
wingCfgProfDot11Entry = _WingCfgProfDot11Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1, 1)
)
wingCfgProfDot11Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfDot11Entry.setStatus("current")


class _WingCfgProfDot11WepSharedKeyAuth_Type(TruthValue):
    """Custom type wingCfgProfDot11WepSharedKeyAuth based on TruthValue"""
    defaultValue = 2


_WingCfgProfDot11WepSharedKeyAuth_Type.__name__ = "TruthValue"
_WingCfgProfDot11WepSharedKeyAuth_Object = MibTableColumn
wingCfgProfDot11WepSharedKeyAuth = _WingCfgProfDot11WepSharedKeyAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1, 1, 1),
    _WingCfgProfDot11WepSharedKeyAuth_Type()
)
wingCfgProfDot11WepSharedKeyAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot11WepSharedKeyAuth.setStatus("current")


class _WingCfgProfDot11LegacyAutoUpdate_Type(TruthValue):
    """Custom type wingCfgProfDot11LegacyAutoUpdate based on TruthValue"""
    defaultValue = 1


_WingCfgProfDot11LegacyAutoUpdate_Type.__name__ = "TruthValue"
_WingCfgProfDot11LegacyAutoUpdate_Object = MibTableColumn
wingCfgProfDot11LegacyAutoUpdate = _WingCfgProfDot11LegacyAutoUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1, 1, 2),
    _WingCfgProfDot11LegacyAutoUpdate_Type()
)
wingCfgProfDot11LegacyAutoUpdate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot11LegacyAutoUpdate.setStatus("current")


class _WingCfgProfDot11LegacyAutoUpdateImgAp7131_Type(DisplayString):
    """Custom type wingCfgProfDot11LegacyAutoUpdateImgAp7131 based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgProfDot11LegacyAutoUpdateImgAp7131_Type.__name__ = "DisplayString"
_WingCfgProfDot11LegacyAutoUpdateImgAp7131_Object = MibTableColumn
wingCfgProfDot11LegacyAutoUpdateImgAp7131 = _WingCfgProfDot11LegacyAutoUpdateImgAp7131_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1, 1, 3),
    _WingCfgProfDot11LegacyAutoUpdateImgAp7131_Type()
)
wingCfgProfDot11LegacyAutoUpdateImgAp7131.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot11LegacyAutoUpdateImgAp7131.setStatus("current")


class _WingCfgProfDot11LegacyAutoDowngrade_Type(TruthValue):
    """Custom type wingCfgProfDot11LegacyAutoDowngrade based on TruthValue"""
    defaultValue = 1


_WingCfgProfDot11LegacyAutoDowngrade_Type.__name__ = "TruthValue"
_WingCfgProfDot11LegacyAutoDowngrade_Object = MibTableColumn
wingCfgProfDot11LegacyAutoDowngrade = _WingCfgProfDot11LegacyAutoDowngrade_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1, 1, 4),
    _WingCfgProfDot11LegacyAutoDowngrade_Type()
)
wingCfgProfDot11LegacyAutoDowngrade.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot11LegacyAutoDowngrade.setStatus("current")


class _WingCfgProfDot11NasIdentifier_Type(DisplayString):
    """Custom type wingCfgProfDot11NasIdentifier based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgProfDot11NasIdentifier_Type.__name__ = "DisplayString"
_WingCfgProfDot11NasIdentifier_Object = MibTableColumn
wingCfgProfDot11NasIdentifier = _WingCfgProfDot11NasIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1, 1, 5),
    _WingCfgProfDot11NasIdentifier_Type()
)
wingCfgProfDot11NasIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot11NasIdentifier.setStatus("current")


class _WingCfgProfDot11NasPortId_Type(DisplayString):
    """Custom type wingCfgProfDot11NasPortId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgProfDot11NasPortId_Type.__name__ = "DisplayString"
_WingCfgProfDot11NasPortId_Object = MibTableColumn
wingCfgProfDot11NasPortId = _WingCfgProfDot11NasPortId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 10, 1, 1, 6),
    _WingCfgProfDot11NasPortId_Type()
)
wingCfgProfDot11NasPortId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDot11NasPortId.setStatus("current")
_WingCfgProfCrlUpdate_ObjectIdentity = ObjectIdentity
wingCfgProfCrlUpdate = _WingCfgProfCrlUpdate_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 14)
)
_WingCfgProfCrlUpdateTable_Object = MibTable
wingCfgProfCrlUpdateTable = _WingCfgProfCrlUpdateTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 14, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfCrlUpdateTable.setStatus("current")
_WingCfgProfCrlUpdateEntry_Object = MibTableRow
wingCfgProfCrlUpdateEntry = _WingCfgProfCrlUpdateEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 14, 1, 1)
)
wingCfgProfCrlUpdateEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfCrlUpdateTrustpoint"),
)
if mibBuilder.loadTexts:
    wingCfgProfCrlUpdateEntry.setStatus("current")
_WingCfgProfCrlUpdateTrustpoint_Type = WingIdentifier
_WingCfgProfCrlUpdateTrustpoint_Object = MibTableColumn
wingCfgProfCrlUpdateTrustpoint = _WingCfgProfCrlUpdateTrustpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 14, 1, 1, 1),
    _WingCfgProfCrlUpdateTrustpoint_Type()
)
wingCfgProfCrlUpdateTrustpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfCrlUpdateTrustpoint.setStatus("current")
_WingCfgProfCrlUpdateUrl_Type = DisplayString
_WingCfgProfCrlUpdateUrl_Object = MibTableColumn
wingCfgProfCrlUpdateUrl = _WingCfgProfCrlUpdateUrl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 14, 1, 1, 3),
    _WingCfgProfCrlUpdateUrl_Type()
)
wingCfgProfCrlUpdateUrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCrlUpdateUrl.setStatus("current")


class _WingCfgProfCrlUpdateInterval_Type(Unsigned32):
    """Custom type wingCfgProfCrlUpdateInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 168),
    )


_WingCfgProfCrlUpdateInterval_Type.__name__ = "Unsigned32"
_WingCfgProfCrlUpdateInterval_Object = MibTableColumn
wingCfgProfCrlUpdateInterval = _WingCfgProfCrlUpdateInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 14, 1, 1, 4),
    _WingCfgProfCrlUpdateInterval_Type()
)
wingCfgProfCrlUpdateInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCrlUpdateInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfCrlUpdateInterval.setUnits("hour")
_WingCfgProfNat_ObjectIdentity = ObjectIdentity
wingCfgProfNat = _WingCfgProfNat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15)
)
_WingCfgProfNatPoolTable_Object = MibTable
wingCfgProfNatPoolTable = _WingCfgProfNatPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfNatPoolTable.setStatus("current")
_WingCfgProfNatPoolEntry_Object = MibTableRow
wingCfgProfNatPoolEntry = _WingCfgProfNatPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 1, 1)
)
wingCfgProfNatPoolEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfNatPoolName"),
)
if mibBuilder.loadTexts:
    wingCfgProfNatPoolEntry.setStatus("current")
_WingCfgProfNatPoolName_Type = WingIdentifier
_WingCfgProfNatPoolName_Object = MibTableColumn
wingCfgProfNatPoolName = _WingCfgProfNatPoolName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 1, 1, 1),
    _WingCfgProfNatPoolName_Type()
)
wingCfgProfNatPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfNatPoolName.setStatus("current")
_WingCfgProfNatPoolAddrTable_Object = MibTable
wingCfgProfNatPoolAddrTable = _WingCfgProfNatPoolAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfNatPoolAddrTable.setStatus("current")
_WingCfgProfNatPoolAddrEntry_Object = MibTableRow
wingCfgProfNatPoolAddrEntry = _WingCfgProfNatPoolAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 2, 1)
)
wingCfgProfNatPoolAddrEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfNatPoolName"),
    (0, "WING-MIB", "wingCfgProfNatPoolAddrStartIp"),
)
if mibBuilder.loadTexts:
    wingCfgProfNatPoolAddrEntry.setStatus("current")
_WingCfgProfNatPoolAddrStartIp_Type = WingIdentifier
_WingCfgProfNatPoolAddrStartIp_Object = MibTableColumn
wingCfgProfNatPoolAddrStartIp = _WingCfgProfNatPoolAddrStartIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 2, 1, 1),
    _WingCfgProfNatPoolAddrStartIp_Type()
)
wingCfgProfNatPoolAddrStartIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfNatPoolAddrStartIp.setStatus("current")
_WingCfgProfNatPoolAddrEndIp_Type = DisplayString
_WingCfgProfNatPoolAddrEndIp_Object = MibTableColumn
wingCfgProfNatPoolAddrEndIp = _WingCfgProfNatPoolAddrEndIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 2, 1, 3),
    _WingCfgProfNatPoolAddrEndIp_Type()
)
wingCfgProfNatPoolAddrEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNatPoolAddrEndIp.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicTable_Object = MibTable
wingCfgProfNatBridgeSrcDynamicTable = _WingCfgProfNatBridgeSrcDynamicTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 7)
)
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicTable.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicEntry_Object = MibTableRow
wingCfgProfNatBridgeSrcDynamicEntry = _WingCfgProfNatBridgeSrcDynamicEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 7, 1)
)
wingCfgProfNatBridgeSrcDynamicEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfNatBridgeSrcDynamicAcl"),
)
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicEntry.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicAcl_Type = WingIdentifier
_WingCfgProfNatBridgeSrcDynamicAcl_Object = MibTableColumn
wingCfgProfNatBridgeSrcDynamicAcl = _WingCfgProfNatBridgeSrcDynamicAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 7, 1, 1),
    _WingCfgProfNatBridgeSrcDynamicAcl_Type()
)
wingCfgProfNatBridgeSrcDynamicAcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicAcl.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicIfTable_Object = MibTable
wingCfgProfNatBridgeSrcDynamicIfTable = _WingCfgProfNatBridgeSrcDynamicIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 8)
)
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicIfTable.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicIfEntry_Object = MibTableRow
wingCfgProfNatBridgeSrcDynamicIfEntry = _WingCfgProfNatBridgeSrcDynamicIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 8, 1)
)
wingCfgProfNatBridgeSrcDynamicIfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfNatBridgeSrcDynamicAcl"),
    (0, "WING-MIB", "wingCfgProfNatBridgeSrcDynamicIfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicIfEntry.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicIfName_Type = WingIdentifier
_WingCfgProfNatBridgeSrcDynamicIfName_Object = MibTableColumn
wingCfgProfNatBridgeSrcDynamicIfName = _WingCfgProfNatBridgeSrcDynamicIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 8, 1, 1),
    _WingCfgProfNatBridgeSrcDynamicIfName_Type()
)
wingCfgProfNatBridgeSrcDynamicIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicIfName.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicIfOverloadType_Type = DisplayString
_WingCfgProfNatBridgeSrcDynamicIfOverloadType_Object = MibTableColumn
wingCfgProfNatBridgeSrcDynamicIfOverloadType = _WingCfgProfNatBridgeSrcDynamicIfOverloadType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 8, 1, 3),
    _WingCfgProfNatBridgeSrcDynamicIfOverloadType_Type()
)
wingCfgProfNatBridgeSrcDynamicIfOverloadType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicIfOverloadType.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicIfOverloadIp_Type = DisplayString
_WingCfgProfNatBridgeSrcDynamicIfOverloadIp_Object = MibTableColumn
wingCfgProfNatBridgeSrcDynamicIfOverloadIp = _WingCfgProfNatBridgeSrcDynamicIfOverloadIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 8, 1, 4),
    _WingCfgProfNatBridgeSrcDynamicIfOverloadIp_Type()
)
wingCfgProfNatBridgeSrcDynamicIfOverloadIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicIfOverloadIp.setStatus("current")
_WingCfgProfNatBridgeSrcDynamicIfNatPool_Type = DisplayString
_WingCfgProfNatBridgeSrcDynamicIfNatPool_Object = MibTableColumn
wingCfgProfNatBridgeSrcDynamicIfNatPool = _WingCfgProfNatBridgeSrcDynamicIfNatPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 15, 8, 1, 5),
    _WingCfgProfNatBridgeSrcDynamicIfNatPool_Type()
)
wingCfgProfNatBridgeSrcDynamicIfNatPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfNatBridgeSrcDynamicIfNatPool.setStatus("current")
_WingCfgProfVpn_ObjectIdentity = ObjectIdentity
wingCfgProfVpn = _WingCfgProfVpn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18)
)
_WingCfgProfVpnTable_Object = MibTable
wingCfgProfVpnTable = _WingCfgProfVpnTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnTable.setStatus("current")
_WingCfgProfVpnEntry_Object = MibTableRow
wingCfgProfVpnEntry = _WingCfgProfVpnEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1)
)
wingCfgProfVpnEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnEntry.setStatus("current")


class _WingCfgProfVpnLifetimeSeconds_Type(Unsigned32):
    """Custom type wingCfgProfVpnLifetimeSeconds based on Unsigned32"""
    defaultValue = 3600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(120, 2147483646),
    )


_WingCfgProfVpnLifetimeSeconds_Type.__name__ = "Unsigned32"
_WingCfgProfVpnLifetimeSeconds_Object = MibTableColumn
wingCfgProfVpnLifetimeSeconds = _WingCfgProfVpnLifetimeSeconds_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 1),
    _WingCfgProfVpnLifetimeSeconds_Type()
)
wingCfgProfVpnLifetimeSeconds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnLifetimeSeconds.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnLifetimeSeconds.setUnits("seconds")


class _WingCfgProfVpnLifetimeKb_Type(Unsigned32):
    """Custom type wingCfgProfVpnLifetimeKb based on Unsigned32"""
    defaultValue = 4608000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(500, 2147483646),
    )


_WingCfgProfVpnLifetimeKb_Type.__name__ = "Unsigned32"
_WingCfgProfVpnLifetimeKb_Object = MibTableColumn
wingCfgProfVpnLifetimeKb = _WingCfgProfVpnLifetimeKb_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 2),
    _WingCfgProfVpnLifetimeKb_Type()
)
wingCfgProfVpnLifetimeKb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnLifetimeKb.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnLifetimeKb.setUnits("kilobytes")


class _WingCfgProfVpnIkev1GlobalDpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev1GlobalDpdKeepalive based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgProfVpnIkev1GlobalDpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev1GlobalDpdKeepalive_Object = MibTableColumn
wingCfgProfVpnIkev1GlobalDpdKeepalive = _WingCfgProfVpnIkev1GlobalDpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 3),
    _WingCfgProfVpnIkev1GlobalDpdKeepalive_Type()
)
wingCfgProfVpnIkev1GlobalDpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1GlobalDpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1GlobalDpdKeepalive.setUnits("seconds")


class _WingCfgProfVpnIkev1GlobalDpdRetries_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev1GlobalDpdRetries based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgProfVpnIkev1GlobalDpdRetries_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev1GlobalDpdRetries_Object = MibTableColumn
wingCfgProfVpnIkev1GlobalDpdRetries = _WingCfgProfVpnIkev1GlobalDpdRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 4),
    _WingCfgProfVpnIkev1GlobalDpdRetries_Type()
)
wingCfgProfVpnIkev1GlobalDpdRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1GlobalDpdRetries.setStatus("current")


class _WingCfgProfVpnIkev1GlobalNatKeepalive_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev1GlobalNatKeepalive based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgProfVpnIkev1GlobalNatKeepalive_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev1GlobalNatKeepalive_Object = MibTableColumn
wingCfgProfVpnIkev1GlobalNatKeepalive = _WingCfgProfVpnIkev1GlobalNatKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 5),
    _WingCfgProfVpnIkev1GlobalNatKeepalive_Type()
)
wingCfgProfVpnIkev1GlobalNatKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1GlobalNatKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1GlobalNatKeepalive.setUnits("seconds")


class _WingCfgProfVpnIkev2GlobalDpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev2GlobalDpdKeepalive based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgProfVpnIkev2GlobalDpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev2GlobalDpdKeepalive_Object = MibTableColumn
wingCfgProfVpnIkev2GlobalDpdKeepalive = _WingCfgProfVpnIkev2GlobalDpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 6),
    _WingCfgProfVpnIkev2GlobalDpdKeepalive_Type()
)
wingCfgProfVpnIkev2GlobalDpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2GlobalDpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2GlobalDpdKeepalive.setUnits("seconds")


class _WingCfgProfVpnIkev2GlobalDpdRetries_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev2GlobalDpdRetries based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgProfVpnIkev2GlobalDpdRetries_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev2GlobalDpdRetries_Object = MibTableColumn
wingCfgProfVpnIkev2GlobalDpdRetries = _WingCfgProfVpnIkev2GlobalDpdRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 7),
    _WingCfgProfVpnIkev2GlobalDpdRetries_Type()
)
wingCfgProfVpnIkev2GlobalDpdRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2GlobalDpdRetries.setStatus("current")


class _WingCfgProfVpnIkev2GlobalNatKeepalive_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev2GlobalNatKeepalive based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgProfVpnIkev2GlobalNatKeepalive_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev2GlobalNatKeepalive_Object = MibTableColumn
wingCfgProfVpnIkev2GlobalNatKeepalive = _WingCfgProfVpnIkev2GlobalNatKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 8),
    _WingCfgProfVpnIkev2GlobalNatKeepalive_Type()
)
wingCfgProfVpnIkev2GlobalNatKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2GlobalNatKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2GlobalNatKeepalive.setUnits("seconds")


class _WingCfgProfVpnCookieChallengeThreshold_Type(Unsigned32):
    """Custom type wingCfgProfVpnCookieChallengeThreshold based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgProfVpnCookieChallengeThreshold_Type.__name__ = "Unsigned32"
_WingCfgProfVpnCookieChallengeThreshold_Object = MibTableColumn
wingCfgProfVpnCookieChallengeThreshold = _WingCfgProfVpnCookieChallengeThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 9),
    _WingCfgProfVpnCookieChallengeThreshold_Type()
)
wingCfgProfVpnCookieChallengeThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCookieChallengeThreshold.setStatus("current")


class _WingCfgProfVpnMaxInNegotiationSa_Type(Unsigned32):
    """Custom type wingCfgProfVpnMaxInNegotiationSa based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgProfVpnMaxInNegotiationSa_Type.__name__ = "Unsigned32"
_WingCfgProfVpnMaxInNegotiationSa_Object = MibTableColumn
wingCfgProfVpnMaxInNegotiationSa = _WingCfgProfVpnMaxInNegotiationSa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 10),
    _WingCfgProfVpnMaxInNegotiationSa_Type()
)
wingCfgProfVpnMaxInNegotiationSa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnMaxInNegotiationSa.setStatus("current")


class _WingCfgProfVpnDfBit_Type(DisplayString):
    """Custom type wingCfgProfVpnDfBit based on DisplayString"""
    defaultValue = OctetString("copy")


_WingCfgProfVpnDfBit_Type.__name__ = "DisplayString"
_WingCfgProfVpnDfBit_Object = MibTableColumn
wingCfgProfVpnDfBit = _WingCfgProfVpnDfBit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 1, 1, 11),
    _WingCfgProfVpnDfBit_Type()
)
wingCfgProfVpnDfBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnDfBit.setStatus("current")
_WingCfgProfVpnIkev1Table_Object = MibTable
wingCfgProfVpnIkev1Table = _WingCfgProfVpnIkev1Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1Table.setStatus("current")
_WingCfgProfVpnIkev1Entry_Object = MibTableRow
wingCfgProfVpnIkev1Entry = _WingCfgProfVpnIkev1Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 2, 1)
)
wingCfgProfVpnIkev1Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev1Name"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1Entry.setStatus("current")
_WingCfgProfVpnIkev1Name_Type = WingIdentifier
_WingCfgProfVpnIkev1Name_Object = MibTableColumn
wingCfgProfVpnIkev1Name = _WingCfgProfVpnIkev1Name_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 2, 1, 1),
    _WingCfgProfVpnIkev1Name_Type()
)
wingCfgProfVpnIkev1Name.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1Name.setStatus("current")


class _WingCfgProfVpnIkev1Mode_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1Mode based on DisplayString"""
    defaultValue = OctetString("main")


_WingCfgProfVpnIkev1Mode_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1Mode_Object = MibTableColumn
wingCfgProfVpnIkev1Mode = _WingCfgProfVpnIkev1Mode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 2, 1, 3),
    _WingCfgProfVpnIkev1Mode_Type()
)
wingCfgProfVpnIkev1Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1Mode.setStatus("current")


class _WingCfgProfVpnIkev1IsakmpLifetime_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev1IsakmpLifetime based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(600, 2147483646),
    )


_WingCfgProfVpnIkev1IsakmpLifetime_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev1IsakmpLifetime_Object = MibTableColumn
wingCfgProfVpnIkev1IsakmpLifetime = _WingCfgProfVpnIkev1IsakmpLifetime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 2, 1, 4),
    _WingCfgProfVpnIkev1IsakmpLifetime_Type()
)
wingCfgProfVpnIkev1IsakmpLifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpLifetime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpLifetime.setUnits("seconds")


class _WingCfgProfVpnIkev1DpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev1DpdKeepalive based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgProfVpnIkev1DpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev1DpdKeepalive_Object = MibTableColumn
wingCfgProfVpnIkev1DpdKeepalive = _WingCfgProfVpnIkev1DpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 2, 1, 5),
    _WingCfgProfVpnIkev1DpdKeepalive_Type()
)
wingCfgProfVpnIkev1DpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1DpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1DpdKeepalive.setUnits("seconds")


class _WingCfgProfVpnIkev1DpdRetries_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev1DpdRetries based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgProfVpnIkev1DpdRetries_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev1DpdRetries_Object = MibTableColumn
wingCfgProfVpnIkev1DpdRetries = _WingCfgProfVpnIkev1DpdRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 2, 1, 6),
    _WingCfgProfVpnIkev1DpdRetries_Type()
)
wingCfgProfVpnIkev1DpdRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1DpdRetries.setStatus("current")
_WingCfgProfVpnIkev1IsakmpTable_Object = MibTable
wingCfgProfVpnIkev1IsakmpTable = _WingCfgProfVpnIkev1IsakmpTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 3)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpTable.setStatus("current")
_WingCfgProfVpnIkev1IsakmpEntry_Object = MibTableRow
wingCfgProfVpnIkev1IsakmpEntry = _WingCfgProfVpnIkev1IsakmpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 3, 1)
)
wingCfgProfVpnIkev1IsakmpEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev1Name"),
    (0, "WING-MIB", "wingCfgProfVpnIkev1IsakmpName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpEntry.setStatus("current")
_WingCfgProfVpnIkev1IsakmpName_Type = WingIdentifier
_WingCfgProfVpnIkev1IsakmpName_Object = MibTableColumn
wingCfgProfVpnIkev1IsakmpName = _WingCfgProfVpnIkev1IsakmpName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 3, 1, 1),
    _WingCfgProfVpnIkev1IsakmpName_Type()
)
wingCfgProfVpnIkev1IsakmpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpName.setStatus("current")


class _WingCfgProfVpnIkev1IsakmpEncryption_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1IsakmpEncryption based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgProfVpnIkev1IsakmpEncryption_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1IsakmpEncryption_Object = MibTableColumn
wingCfgProfVpnIkev1IsakmpEncryption = _WingCfgProfVpnIkev1IsakmpEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 3, 1, 3),
    _WingCfgProfVpnIkev1IsakmpEncryption_Type()
)
wingCfgProfVpnIkev1IsakmpEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpEncryption.setStatus("current")


class _WingCfgProfVpnIkev1IsakmpGroup_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1IsakmpGroup based on DisplayString"""
    defaultValue = OctetString("2")


_WingCfgProfVpnIkev1IsakmpGroup_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1IsakmpGroup_Object = MibTableColumn
wingCfgProfVpnIkev1IsakmpGroup = _WingCfgProfVpnIkev1IsakmpGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 3, 1, 4),
    _WingCfgProfVpnIkev1IsakmpGroup_Type()
)
wingCfgProfVpnIkev1IsakmpGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpGroup.setStatus("current")


class _WingCfgProfVpnIkev1IsakmpHash_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1IsakmpHash based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgProfVpnIkev1IsakmpHash_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1IsakmpHash_Object = MibTableColumn
wingCfgProfVpnIkev1IsakmpHash = _WingCfgProfVpnIkev1IsakmpHash_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 3, 1, 5),
    _WingCfgProfVpnIkev1IsakmpHash_Type()
)
wingCfgProfVpnIkev1IsakmpHash.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1IsakmpHash.setStatus("current")
_WingCfgProfVpnIkev2Table_Object = MibTable
wingCfgProfVpnIkev2Table = _WingCfgProfVpnIkev2Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 4)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2Table.setStatus("current")
_WingCfgProfVpnIkev2Entry_Object = MibTableRow
wingCfgProfVpnIkev2Entry = _WingCfgProfVpnIkev2Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 4, 1)
)
wingCfgProfVpnIkev2Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev2Name"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2Entry.setStatus("current")
_WingCfgProfVpnIkev2Name_Type = WingIdentifier
_WingCfgProfVpnIkev2Name_Object = MibTableColumn
wingCfgProfVpnIkev2Name = _WingCfgProfVpnIkev2Name_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 4, 1, 1),
    _WingCfgProfVpnIkev2Name_Type()
)
wingCfgProfVpnIkev2Name.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2Name.setStatus("current")


class _WingCfgProfVpnIkev2IsakmpLifetime_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev2IsakmpLifetime based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(600, 2147483646),
    )


_WingCfgProfVpnIkev2IsakmpLifetime_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev2IsakmpLifetime_Object = MibTableColumn
wingCfgProfVpnIkev2IsakmpLifetime = _WingCfgProfVpnIkev2IsakmpLifetime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 4, 1, 3),
    _WingCfgProfVpnIkev2IsakmpLifetime_Type()
)
wingCfgProfVpnIkev2IsakmpLifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpLifetime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpLifetime.setUnits("seconds")


class _WingCfgProfVpnIkev2DpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgProfVpnIkev2DpdKeepalive based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgProfVpnIkev2DpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgProfVpnIkev2DpdKeepalive_Object = MibTableColumn
wingCfgProfVpnIkev2DpdKeepalive = _WingCfgProfVpnIkev2DpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 4, 1, 4),
    _WingCfgProfVpnIkev2DpdKeepalive_Type()
)
wingCfgProfVpnIkev2DpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2DpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2DpdKeepalive.setUnits("seconds")
_WingCfgProfVpnIkev2IsakmpTable_Object = MibTable
wingCfgProfVpnIkev2IsakmpTable = _WingCfgProfVpnIkev2IsakmpTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 5)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpTable.setStatus("current")
_WingCfgProfVpnIkev2IsakmpEntry_Object = MibTableRow
wingCfgProfVpnIkev2IsakmpEntry = _WingCfgProfVpnIkev2IsakmpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 5, 1)
)
wingCfgProfVpnIkev2IsakmpEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev2Name"),
    (0, "WING-MIB", "wingCfgProfVpnIkev2IsakmpName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpEntry.setStatus("current")
_WingCfgProfVpnIkev2IsakmpName_Type = WingIdentifier
_WingCfgProfVpnIkev2IsakmpName_Object = MibTableColumn
wingCfgProfVpnIkev2IsakmpName = _WingCfgProfVpnIkev2IsakmpName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 5, 1, 1),
    _WingCfgProfVpnIkev2IsakmpName_Type()
)
wingCfgProfVpnIkev2IsakmpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpName.setStatus("current")


class _WingCfgProfVpnIkev2IsakmpEncryption_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2IsakmpEncryption based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgProfVpnIkev2IsakmpEncryption_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2IsakmpEncryption_Object = MibTableColumn
wingCfgProfVpnIkev2IsakmpEncryption = _WingCfgProfVpnIkev2IsakmpEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 5, 1, 3),
    _WingCfgProfVpnIkev2IsakmpEncryption_Type()
)
wingCfgProfVpnIkev2IsakmpEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpEncryption.setStatus("current")


class _WingCfgProfVpnIkev2IsakmpGroup_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2IsakmpGroup based on DisplayString"""
    defaultValue = OctetString("2")


_WingCfgProfVpnIkev2IsakmpGroup_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2IsakmpGroup_Object = MibTableColumn
wingCfgProfVpnIkev2IsakmpGroup = _WingCfgProfVpnIkev2IsakmpGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 5, 1, 4),
    _WingCfgProfVpnIkev2IsakmpGroup_Type()
)
wingCfgProfVpnIkev2IsakmpGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpGroup.setStatus("current")


class _WingCfgProfVpnIkev2IsakmpHash_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2IsakmpHash based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgProfVpnIkev2IsakmpHash_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2IsakmpHash_Object = MibTableColumn
wingCfgProfVpnIkev2IsakmpHash = _WingCfgProfVpnIkev2IsakmpHash_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 5, 1, 5),
    _WingCfgProfVpnIkev2IsakmpHash_Type()
)
wingCfgProfVpnIkev2IsakmpHash.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2IsakmpHash.setStatus("current")
_WingCfgProfVpnIkev1PeerTable_Object = MibTable
wingCfgProfVpnIkev1PeerTable = _WingCfgProfVpnIkev1PeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerTable.setStatus("current")
_WingCfgProfVpnIkev1PeerEntry_Object = MibTableRow
wingCfgProfVpnIkev1PeerEntry = _WingCfgProfVpnIkev1PeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1)
)
wingCfgProfVpnIkev1PeerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev1PeerName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerEntry.setStatus("current")
_WingCfgProfVpnIkev1PeerName_Type = WingIdentifier
_WingCfgProfVpnIkev1PeerName_Object = MibTableColumn
wingCfgProfVpnIkev1PeerName = _WingCfgProfVpnIkev1PeerName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 1),
    _WingCfgProfVpnIkev1PeerName_Type()
)
wingCfgProfVpnIkev1PeerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerName.setStatus("current")


class _WingCfgProfVpnIkev1PeerIpType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerIpType based on DisplayString"""
    defaultValue = OctetString("address")


_WingCfgProfVpnIkev1PeerIpType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerIpType_Object = MibTableColumn
wingCfgProfVpnIkev1PeerIpType = _WingCfgProfVpnIkev1PeerIpType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 3),
    _WingCfgProfVpnIkev1PeerIpType_Type()
)
wingCfgProfVpnIkev1PeerIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerIpType.setStatus("current")


class _WingCfgProfVpnIkev1PeerIpValue_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerIpValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgProfVpnIkev1PeerIpValue_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerIpValue_Object = MibTableColumn
wingCfgProfVpnIkev1PeerIpValue = _WingCfgProfVpnIkev1PeerIpValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 4),
    _WingCfgProfVpnIkev1PeerIpValue_Type()
)
wingCfgProfVpnIkev1PeerIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerIpValue.setStatus("current")


class _WingCfgProfVpnIkev1PeerAuthType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerAuthType based on DisplayString"""
    defaultValue = OctetString("rsa")


_WingCfgProfVpnIkev1PeerAuthType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerAuthType_Object = MibTableColumn
wingCfgProfVpnIkev1PeerAuthType = _WingCfgProfVpnIkev1PeerAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 5),
    _WingCfgProfVpnIkev1PeerAuthType_Type()
)
wingCfgProfVpnIkev1PeerAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerAuthType.setStatus("current")


class _WingCfgProfVpnIkev1PeerAuthKey_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgProfVpnIkev1PeerAuthKey_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerAuthKey_Object = MibTableColumn
wingCfgProfVpnIkev1PeerAuthKey = _WingCfgProfVpnIkev1PeerAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 6),
    _WingCfgProfVpnIkev1PeerAuthKey_Type()
)
wingCfgProfVpnIkev1PeerAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerAuthKey.setStatus("current")


class _WingCfgProfVpnIkev1PeerLocalidType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerLocalidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgProfVpnIkev1PeerLocalidType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerLocalidType_Object = MibTableColumn
wingCfgProfVpnIkev1PeerLocalidType = _WingCfgProfVpnIkev1PeerLocalidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 7),
    _WingCfgProfVpnIkev1PeerLocalidType_Type()
)
wingCfgProfVpnIkev1PeerLocalidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerLocalidType.setStatus("current")


class _WingCfgProfVpnIkev1PeerLocalidValue_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerLocalidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgProfVpnIkev1PeerLocalidValue_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerLocalidValue_Object = MibTableColumn
wingCfgProfVpnIkev1PeerLocalidValue = _WingCfgProfVpnIkev1PeerLocalidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 8),
    _WingCfgProfVpnIkev1PeerLocalidValue_Type()
)
wingCfgProfVpnIkev1PeerLocalidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerLocalidValue.setStatus("current")


class _WingCfgProfVpnIkev1PeerRemoteidType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerRemoteidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgProfVpnIkev1PeerRemoteidType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerRemoteidType_Object = MibTableColumn
wingCfgProfVpnIkev1PeerRemoteidType = _WingCfgProfVpnIkev1PeerRemoteidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 9),
    _WingCfgProfVpnIkev1PeerRemoteidType_Type()
)
wingCfgProfVpnIkev1PeerRemoteidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerRemoteidType.setStatus("current")


class _WingCfgProfVpnIkev1PeerRemoteidValue_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1PeerRemoteidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgProfVpnIkev1PeerRemoteidValue_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1PeerRemoteidValue_Object = MibTableColumn
wingCfgProfVpnIkev1PeerRemoteidValue = _WingCfgProfVpnIkev1PeerRemoteidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 10),
    _WingCfgProfVpnIkev1PeerRemoteidValue_Type()
)
wingCfgProfVpnIkev1PeerRemoteidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerRemoteidValue.setStatus("current")
_WingCfgProfVpnIkev1PeerIkev1Policy_Type = WingIdentifier
_WingCfgProfVpnIkev1PeerIkev1Policy_Object = MibTableColumn
wingCfgProfVpnIkev1PeerIkev1Policy = _WingCfgProfVpnIkev1PeerIkev1Policy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 6, 1, 11),
    _WingCfgProfVpnIkev1PeerIkev1Policy_Type()
)
wingCfgProfVpnIkev1PeerIkev1Policy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1PeerIkev1Policy.setStatus("current")
_WingCfgProfVpnIkev2PeerTable_Object = MibTable
wingCfgProfVpnIkev2PeerTable = _WingCfgProfVpnIkev2PeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerTable.setStatus("current")
_WingCfgProfVpnIkev2PeerEntry_Object = MibTableRow
wingCfgProfVpnIkev2PeerEntry = _WingCfgProfVpnIkev2PeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1)
)
wingCfgProfVpnIkev2PeerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev2PeerName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerEntry.setStatus("current")
_WingCfgProfVpnIkev2PeerName_Type = WingIdentifier
_WingCfgProfVpnIkev2PeerName_Object = MibTableColumn
wingCfgProfVpnIkev2PeerName = _WingCfgProfVpnIkev2PeerName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 1),
    _WingCfgProfVpnIkev2PeerName_Type()
)
wingCfgProfVpnIkev2PeerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerName.setStatus("current")


class _WingCfgProfVpnIkev2PeerIpType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerIpType based on DisplayString"""
    defaultValue = OctetString("address")


_WingCfgProfVpnIkev2PeerIpType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerIpType_Object = MibTableColumn
wingCfgProfVpnIkev2PeerIpType = _WingCfgProfVpnIkev2PeerIpType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 3),
    _WingCfgProfVpnIkev2PeerIpType_Type()
)
wingCfgProfVpnIkev2PeerIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerIpType.setStatus("current")


class _WingCfgProfVpnIkev2PeerIpValue_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerIpValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgProfVpnIkev2PeerIpValue_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerIpValue_Object = MibTableColumn
wingCfgProfVpnIkev2PeerIpValue = _WingCfgProfVpnIkev2PeerIpValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 4),
    _WingCfgProfVpnIkev2PeerIpValue_Type()
)
wingCfgProfVpnIkev2PeerIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerIpValue.setStatus("current")


class _WingCfgProfVpnIkev2PeerLocalAuthType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerLocalAuthType based on DisplayString"""
    defaultValue = OctetString("rsa")


_WingCfgProfVpnIkev2PeerLocalAuthType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerLocalAuthType_Object = MibTableColumn
wingCfgProfVpnIkev2PeerLocalAuthType = _WingCfgProfVpnIkev2PeerLocalAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 5),
    _WingCfgProfVpnIkev2PeerLocalAuthType_Type()
)
wingCfgProfVpnIkev2PeerLocalAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerLocalAuthType.setStatus("current")


class _WingCfgProfVpnIkev2PeerLocalAuthKey_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerLocalAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgProfVpnIkev2PeerLocalAuthKey_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerLocalAuthKey_Object = MibTableColumn
wingCfgProfVpnIkev2PeerLocalAuthKey = _WingCfgProfVpnIkev2PeerLocalAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 6),
    _WingCfgProfVpnIkev2PeerLocalAuthKey_Type()
)
wingCfgProfVpnIkev2PeerLocalAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerLocalAuthKey.setStatus("current")


class _WingCfgProfVpnIkev2PeerRemoteAuthType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerRemoteAuthType based on DisplayString"""
    defaultValue = OctetString("rsa")


_WingCfgProfVpnIkev2PeerRemoteAuthType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerRemoteAuthType_Object = MibTableColumn
wingCfgProfVpnIkev2PeerRemoteAuthType = _WingCfgProfVpnIkev2PeerRemoteAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 7),
    _WingCfgProfVpnIkev2PeerRemoteAuthType_Type()
)
wingCfgProfVpnIkev2PeerRemoteAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerRemoteAuthType.setStatus("current")


class _WingCfgProfVpnIkev2PeerRemoteAuthKey_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerRemoteAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgProfVpnIkev2PeerRemoteAuthKey_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerRemoteAuthKey_Object = MibTableColumn
wingCfgProfVpnIkev2PeerRemoteAuthKey = _WingCfgProfVpnIkev2PeerRemoteAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 8),
    _WingCfgProfVpnIkev2PeerRemoteAuthKey_Type()
)
wingCfgProfVpnIkev2PeerRemoteAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerRemoteAuthKey.setStatus("current")


class _WingCfgProfVpnIkev2PeerLocalidType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerLocalidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgProfVpnIkev2PeerLocalidType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerLocalidType_Object = MibTableColumn
wingCfgProfVpnIkev2PeerLocalidType = _WingCfgProfVpnIkev2PeerLocalidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 9),
    _WingCfgProfVpnIkev2PeerLocalidType_Type()
)
wingCfgProfVpnIkev2PeerLocalidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerLocalidType.setStatus("current")


class _WingCfgProfVpnIkev2PeerLocalidValue_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerLocalidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgProfVpnIkev2PeerLocalidValue_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerLocalidValue_Object = MibTableColumn
wingCfgProfVpnIkev2PeerLocalidValue = _WingCfgProfVpnIkev2PeerLocalidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 10),
    _WingCfgProfVpnIkev2PeerLocalidValue_Type()
)
wingCfgProfVpnIkev2PeerLocalidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerLocalidValue.setStatus("current")


class _WingCfgProfVpnIkev2PeerRemoteidType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerRemoteidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgProfVpnIkev2PeerRemoteidType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerRemoteidType_Object = MibTableColumn
wingCfgProfVpnIkev2PeerRemoteidType = _WingCfgProfVpnIkev2PeerRemoteidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 11),
    _WingCfgProfVpnIkev2PeerRemoteidType_Type()
)
wingCfgProfVpnIkev2PeerRemoteidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerRemoteidType.setStatus("current")


class _WingCfgProfVpnIkev2PeerRemoteidValue_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2PeerRemoteidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgProfVpnIkev2PeerRemoteidValue_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2PeerRemoteidValue_Object = MibTableColumn
wingCfgProfVpnIkev2PeerRemoteidValue = _WingCfgProfVpnIkev2PeerRemoteidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 12),
    _WingCfgProfVpnIkev2PeerRemoteidValue_Type()
)
wingCfgProfVpnIkev2PeerRemoteidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerRemoteidValue.setStatus("current")
_WingCfgProfVpnIkev2PeerIkev2Policy_Type = WingIdentifier
_WingCfgProfVpnIkev2PeerIkev2Policy_Object = MibTableColumn
wingCfgProfVpnIkev2PeerIkev2Policy = _WingCfgProfVpnIkev2PeerIkev2Policy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 7, 1, 13),
    _WingCfgProfVpnIkev2PeerIkev2Policy_Type()
)
wingCfgProfVpnIkev2PeerIkev2Policy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2PeerIkev2Policy.setStatus("current")
_WingCfgProfVpnTransformTable_Object = MibTable
wingCfgProfVpnTransformTable = _WingCfgProfVpnTransformTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 8)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnTransformTable.setStatus("current")
_WingCfgProfVpnTransformEntry_Object = MibTableRow
wingCfgProfVpnTransformEntry = _WingCfgProfVpnTransformEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 8, 1)
)
wingCfgProfVpnTransformEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnTransformName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnTransformEntry.setStatus("current")
_WingCfgProfVpnTransformName_Type = WingIdentifier
_WingCfgProfVpnTransformName_Object = MibTableColumn
wingCfgProfVpnTransformName = _WingCfgProfVpnTransformName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 8, 1, 1),
    _WingCfgProfVpnTransformName_Type()
)
wingCfgProfVpnTransformName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnTransformName.setStatus("current")


class _WingCfgProfVpnTransformCipherAlgo_Type(DisplayString):
    """Custom type wingCfgProfVpnTransformCipherAlgo based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgProfVpnTransformCipherAlgo_Type.__name__ = "DisplayString"
_WingCfgProfVpnTransformCipherAlgo_Object = MibTableColumn
wingCfgProfVpnTransformCipherAlgo = _WingCfgProfVpnTransformCipherAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 8, 1, 3),
    _WingCfgProfVpnTransformCipherAlgo_Type()
)
wingCfgProfVpnTransformCipherAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnTransformCipherAlgo.setStatus("current")


class _WingCfgProfVpnTransformAuthAlgo_Type(DisplayString):
    """Custom type wingCfgProfVpnTransformAuthAlgo based on DisplayString"""
    defaultValue = OctetString("sha-hmac")


_WingCfgProfVpnTransformAuthAlgo_Type.__name__ = "DisplayString"
_WingCfgProfVpnTransformAuthAlgo_Object = MibTableColumn
wingCfgProfVpnTransformAuthAlgo = _WingCfgProfVpnTransformAuthAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 8, 1, 4),
    _WingCfgProfVpnTransformAuthAlgo_Type()
)
wingCfgProfVpnTransformAuthAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnTransformAuthAlgo.setStatus("current")


class _WingCfgProfVpnTransformMode_Type(DisplayString):
    """Custom type wingCfgProfVpnTransformMode based on DisplayString"""
    defaultValue = OctetString("tunnel")


_WingCfgProfVpnTransformMode_Type.__name__ = "DisplayString"
_WingCfgProfVpnTransformMode_Object = MibTableColumn
wingCfgProfVpnTransformMode = _WingCfgProfVpnTransformMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 8, 1, 5),
    _WingCfgProfVpnTransformMode_Type()
)
wingCfgProfVpnTransformMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnTransformMode.setStatus("current")
_WingCfgProfVpnCryptoTable_Object = MibTable
wingCfgProfVpnCryptoTable = _WingCfgProfVpnCryptoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 9)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoTable.setStatus("current")
_WingCfgProfVpnCryptoEntry_Object = MibTableRow
wingCfgProfVpnCryptoEntry = _WingCfgProfVpnCryptoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 9, 1)
)
wingCfgProfVpnCryptoEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoEntry.setStatus("current")
_WingCfgProfVpnCryptoName_Type = WingIdentifier
_WingCfgProfVpnCryptoName_Object = MibTableColumn
wingCfgProfVpnCryptoName = _WingCfgProfVpnCryptoName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 9, 1, 1),
    _WingCfgProfVpnCryptoName_Type()
)
wingCfgProfVpnCryptoName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoName.setStatus("current")
_WingCfgProfVpnCryptoInstTable_Object = MibTable
wingCfgProfVpnCryptoInstTable = _WingCfgProfVpnCryptoInstTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstTable.setStatus("current")
_WingCfgProfVpnCryptoInstEntry_Object = MibTableRow
wingCfgProfVpnCryptoInstEntry = _WingCfgProfVpnCryptoInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1)
)
wingCfgProfVpnCryptoInstEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoInstSequence"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEntry.setStatus("current")


class _WingCfgProfVpnCryptoInstSequence_Type(Unsigned32):
    """Custom type wingCfgProfVpnCryptoInstSequence based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_WingCfgProfVpnCryptoInstSequence_Type.__name__ = "Unsigned32"
_WingCfgProfVpnCryptoInstSequence_Object = MibTableColumn
wingCfgProfVpnCryptoInstSequence = _WingCfgProfVpnCryptoInstSequence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 1),
    _WingCfgProfVpnCryptoInstSequence_Type()
)
wingCfgProfVpnCryptoInstSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstSequence.setStatus("current")


class _WingCfgProfVpnCryptoInstType_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstType based on DisplayString"""
    defaultValue = OctetString("site-to-site-auto")


_WingCfgProfVpnCryptoInstType_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstType_Object = MibTableColumn
wingCfgProfVpnCryptoInstType = _WingCfgProfVpnCryptoInstType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 3),
    _WingCfgProfVpnCryptoInstType_Type()
)
wingCfgProfVpnCryptoInstType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstType.setStatus("current")
_WingCfgProfVpnCryptoInstIpAcl_Type = WingIdentifier
_WingCfgProfVpnCryptoInstIpAcl_Object = MibTableColumn
wingCfgProfVpnCryptoInstIpAcl = _WingCfgProfVpnCryptoInstIpAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 4),
    _WingCfgProfVpnCryptoInstIpAcl_Type()
)
wingCfgProfVpnCryptoInstIpAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstIpAcl.setStatus("current")
_WingCfgProfVpnCryptoInstTransformSet_Type = WingIdentifier
_WingCfgProfVpnCryptoInstTransformSet_Object = MibTableColumn
wingCfgProfVpnCryptoInstTransformSet = _WingCfgProfVpnCryptoInstTransformSet_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 5),
    _WingCfgProfVpnCryptoInstTransformSet_Type()
)
wingCfgProfVpnCryptoInstTransformSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstTransformSet.setStatus("current")
_WingCfgProfVpnCryptoInstLocalip_Type = DisplayString
_WingCfgProfVpnCryptoInstLocalip_Object = MibTableColumn
wingCfgProfVpnCryptoInstLocalip = _WingCfgProfVpnCryptoInstLocalip_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 6),
    _WingCfgProfVpnCryptoInstLocalip_Type()
)
wingCfgProfVpnCryptoInstLocalip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstLocalip.setStatus("current")


class _WingCfgProfVpnCryptoInstPfs_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstPfs based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfVpnCryptoInstPfs_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstPfs_Object = MibTableColumn
wingCfgProfVpnCryptoInstPfs = _WingCfgProfVpnCryptoInstPfs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 7),
    _WingCfgProfVpnCryptoInstPfs_Type()
)
wingCfgProfVpnCryptoInstPfs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPfs.setStatus("current")


class _WingCfgProfVpnCryptoInstLifetimeSeconds_Type(Unsigned32):
    """Custom type wingCfgProfVpnCryptoInstLifetimeSeconds based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(120, 2147483646),
    )


_WingCfgProfVpnCryptoInstLifetimeSeconds_Type.__name__ = "Unsigned32"
_WingCfgProfVpnCryptoInstLifetimeSeconds_Object = MibTableColumn
wingCfgProfVpnCryptoInstLifetimeSeconds = _WingCfgProfVpnCryptoInstLifetimeSeconds_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 8),
    _WingCfgProfVpnCryptoInstLifetimeSeconds_Type()
)
wingCfgProfVpnCryptoInstLifetimeSeconds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstLifetimeSeconds.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstLifetimeSeconds.setUnits("seconds")


class _WingCfgProfVpnCryptoInstLifetimeKb_Type(Unsigned32):
    """Custom type wingCfgProfVpnCryptoInstLifetimeKb based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(500, 2147483646),
    )


_WingCfgProfVpnCryptoInstLifetimeKb_Type.__name__ = "Unsigned32"
_WingCfgProfVpnCryptoInstLifetimeKb_Object = MibTableColumn
wingCfgProfVpnCryptoInstLifetimeKb = _WingCfgProfVpnCryptoInstLifetimeKb_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 9),
    _WingCfgProfVpnCryptoInstLifetimeKb_Type()
)
wingCfgProfVpnCryptoInstLifetimeKb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstLifetimeKb.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstLifetimeKb.setUnits("kilobytes")


class _WingCfgProfVpnCryptoInstRemoteType_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstRemoteType based on DisplayString"""
    defaultValue = OctetString("xauth")


_WingCfgProfVpnCryptoInstRemoteType_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstRemoteType_Object = MibTableColumn
wingCfgProfVpnCryptoInstRemoteType = _WingCfgProfVpnCryptoInstRemoteType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 10),
    _WingCfgProfVpnCryptoInstRemoteType_Type()
)
wingCfgProfVpnCryptoInstRemoteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstRemoteType.setStatus("current")


class _WingCfgProfVpnCryptoInstModeconfig_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstModeconfig based on DisplayString"""
    defaultValue = OctetString("push")


_WingCfgProfVpnCryptoInstModeconfig_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstModeconfig_Object = MibTableColumn
wingCfgProfVpnCryptoInstModeconfig = _WingCfgProfVpnCryptoInstModeconfig_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 11),
    _WingCfgProfVpnCryptoInstModeconfig_Type()
)
wingCfgProfVpnCryptoInstModeconfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstModeconfig.setStatus("current")
_WingCfgProfVpnCryptoInstPeer_Type = DisplayString
_WingCfgProfVpnCryptoInstPeer_Object = MibTableColumn
wingCfgProfVpnCryptoInstPeer = _WingCfgProfVpnCryptoInstPeer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 12),
    _WingCfgProfVpnCryptoInstPeer_Type()
)
wingCfgProfVpnCryptoInstPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPeer.setStatus("current")


class _WingCfgProfVpnCryptoInstProtocol_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstProtocol based on DisplayString"""
    defaultValue = OctetString("ESP")


_WingCfgProfVpnCryptoInstProtocol_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstProtocol_Object = MibTableColumn
wingCfgProfVpnCryptoInstProtocol = _WingCfgProfVpnCryptoInstProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 13),
    _WingCfgProfVpnCryptoInstProtocol_Type()
)
wingCfgProfVpnCryptoInstProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstProtocol.setStatus("current")


class _WingCfgProfVpnCryptoInstMode_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstMode based on DisplayString"""
    defaultValue = OctetString("tunnel")


_WingCfgProfVpnCryptoInstMode_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstMode_Object = MibTableColumn
wingCfgProfVpnCryptoInstMode = _WingCfgProfVpnCryptoInstMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 10, 1, 14),
    _WingCfgProfVpnCryptoInstMode_Type()
)
wingCfgProfVpnCryptoInstMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstMode.setStatus("current")
_WingCfgProfVpnCryptoInstPeerListTable_Object = MibTable
wingCfgProfVpnCryptoInstPeerListTable = _WingCfgProfVpnCryptoInstPeerListTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 11)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPeerListTable.setStatus("current")
_WingCfgProfVpnCryptoInstPeerListEntry_Object = MibTableRow
wingCfgProfVpnCryptoInstPeerListEntry = _WingCfgProfVpnCryptoInstPeerListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 11, 1)
)
wingCfgProfVpnCryptoInstPeerListEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoInstSequence"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoInstPeerListPriority"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPeerListEntry.setStatus("current")


class _WingCfgProfVpnCryptoInstPeerListPriority_Type(Unsigned32):
    """Custom type wingCfgProfVpnCryptoInstPeerListPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WingCfgProfVpnCryptoInstPeerListPriority_Type.__name__ = "Unsigned32"
_WingCfgProfVpnCryptoInstPeerListPriority_Object = MibTableColumn
wingCfgProfVpnCryptoInstPeerListPriority = _WingCfgProfVpnCryptoInstPeerListPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 11, 1, 1),
    _WingCfgProfVpnCryptoInstPeerListPriority_Type()
)
wingCfgProfVpnCryptoInstPeerListPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPeerListPriority.setStatus("current")
_WingCfgProfVpnCryptoInstPeerListType_Type = DisplayString
_WingCfgProfVpnCryptoInstPeerListType_Object = MibTableColumn
wingCfgProfVpnCryptoInstPeerListType = _WingCfgProfVpnCryptoInstPeerListType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 11, 1, 3),
    _WingCfgProfVpnCryptoInstPeerListType_Type()
)
wingCfgProfVpnCryptoInstPeerListType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPeerListType.setStatus("current")
_WingCfgProfVpnCryptoInstPeerListIkev1Peer_Type = WingIdentifier
_WingCfgProfVpnCryptoInstPeerListIkev1Peer_Object = MibTableColumn
wingCfgProfVpnCryptoInstPeerListIkev1Peer = _WingCfgProfVpnCryptoInstPeerListIkev1Peer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 11, 1, 4),
    _WingCfgProfVpnCryptoInstPeerListIkev1Peer_Type()
)
wingCfgProfVpnCryptoInstPeerListIkev1Peer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPeerListIkev1Peer.setStatus("current")
_WingCfgProfVpnCryptoInstPeerListIkev2Peer_Type = WingIdentifier
_WingCfgProfVpnCryptoInstPeerListIkev2Peer_Object = MibTableColumn
wingCfgProfVpnCryptoInstPeerListIkev2Peer = _WingCfgProfVpnCryptoInstPeerListIkev2Peer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 11, 1, 5),
    _WingCfgProfVpnCryptoInstPeerListIkev2Peer_Type()
)
wingCfgProfVpnCryptoInstPeerListIkev2Peer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstPeerListIkev2Peer.setStatus("current")
_WingCfgProfVpnCryptoInstAhSessionTable_Object = MibTable
wingCfgProfVpnCryptoInstAhSessionTable = _WingCfgProfVpnCryptoInstAhSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 12)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstAhSessionTable.setStatus("current")
_WingCfgProfVpnCryptoInstAhSessionEntry_Object = MibTableRow
wingCfgProfVpnCryptoInstAhSessionEntry = _WingCfgProfVpnCryptoInstAhSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 12, 1)
)
wingCfgProfVpnCryptoInstAhSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoInstSequence"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoInstAhSessionDirection"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstAhSessionEntry.setStatus("current")
_WingCfgProfVpnCryptoInstAhSessionDirection_Type = WingIdentifier
_WingCfgProfVpnCryptoInstAhSessionDirection_Object = MibTableColumn
wingCfgProfVpnCryptoInstAhSessionDirection = _WingCfgProfVpnCryptoInstAhSessionDirection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 12, 1, 1),
    _WingCfgProfVpnCryptoInstAhSessionDirection_Type()
)
wingCfgProfVpnCryptoInstAhSessionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstAhSessionDirection.setStatus("current")


class _WingCfgProfVpnCryptoInstAhSessionSpi_Type(Unsigned32):
    """Custom type wingCfgProfVpnCryptoInstAhSessionSpi based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 4294967295),
    )


_WingCfgProfVpnCryptoInstAhSessionSpi_Type.__name__ = "Unsigned32"
_WingCfgProfVpnCryptoInstAhSessionSpi_Object = MibTableColumn
wingCfgProfVpnCryptoInstAhSessionSpi = _WingCfgProfVpnCryptoInstAhSessionSpi_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 12, 1, 3),
    _WingCfgProfVpnCryptoInstAhSessionSpi_Type()
)
wingCfgProfVpnCryptoInstAhSessionSpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstAhSessionSpi.setStatus("current")


class _WingCfgProfVpnCryptoInstAhSessionAuth_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstAhSessionAuth based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgProfVpnCryptoInstAhSessionAuth_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstAhSessionAuth_Object = MibTableColumn
wingCfgProfVpnCryptoInstAhSessionAuth = _WingCfgProfVpnCryptoInstAhSessionAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 12, 1, 4),
    _WingCfgProfVpnCryptoInstAhSessionAuth_Type()
)
wingCfgProfVpnCryptoInstAhSessionAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstAhSessionAuth.setStatus("current")


class _WingCfgProfVpnCryptoInstAhSessionKey_Type(OctetString):
    """Custom type wingCfgProfVpnCryptoInstAhSessionKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 512),
    )


_WingCfgProfVpnCryptoInstAhSessionKey_Type.__name__ = "OctetString"
_WingCfgProfVpnCryptoInstAhSessionKey_Object = MibTableColumn
wingCfgProfVpnCryptoInstAhSessionKey = _WingCfgProfVpnCryptoInstAhSessionKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 12, 1, 5),
    _WingCfgProfVpnCryptoInstAhSessionKey_Type()
)
wingCfgProfVpnCryptoInstAhSessionKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstAhSessionKey.setStatus("current")
_WingCfgProfVpnCryptoInstEspSessionTable_Object = MibTable
wingCfgProfVpnCryptoInstEspSessionTable = _WingCfgProfVpnCryptoInstEspSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionTable.setStatus("current")
_WingCfgProfVpnCryptoInstEspSessionEntry_Object = MibTableRow
wingCfgProfVpnCryptoInstEspSessionEntry = _WingCfgProfVpnCryptoInstEspSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13, 1)
)
wingCfgProfVpnCryptoInstEspSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoName"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoInstSequence"),
    (0, "WING-MIB", "wingCfgProfVpnCryptoInstEspSessionDirection"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionEntry.setStatus("current")
_WingCfgProfVpnCryptoInstEspSessionDirection_Type = WingIdentifier
_WingCfgProfVpnCryptoInstEspSessionDirection_Object = MibTableColumn
wingCfgProfVpnCryptoInstEspSessionDirection = _WingCfgProfVpnCryptoInstEspSessionDirection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13, 1, 1),
    _WingCfgProfVpnCryptoInstEspSessionDirection_Type()
)
wingCfgProfVpnCryptoInstEspSessionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionDirection.setStatus("current")


class _WingCfgProfVpnCryptoInstEspSessionSpi_Type(Unsigned32):
    """Custom type wingCfgProfVpnCryptoInstEspSessionSpi based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 4294967295),
    )


_WingCfgProfVpnCryptoInstEspSessionSpi_Type.__name__ = "Unsigned32"
_WingCfgProfVpnCryptoInstEspSessionSpi_Object = MibTableColumn
wingCfgProfVpnCryptoInstEspSessionSpi = _WingCfgProfVpnCryptoInstEspSessionSpi_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13, 1, 3),
    _WingCfgProfVpnCryptoInstEspSessionSpi_Type()
)
wingCfgProfVpnCryptoInstEspSessionSpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionSpi.setStatus("current")


class _WingCfgProfVpnCryptoInstEspSessionCipherAlgo_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstEspSessionCipherAlgo based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgProfVpnCryptoInstEspSessionCipherAlgo_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstEspSessionCipherAlgo_Object = MibTableColumn
wingCfgProfVpnCryptoInstEspSessionCipherAlgo = _WingCfgProfVpnCryptoInstEspSessionCipherAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13, 1, 4),
    _WingCfgProfVpnCryptoInstEspSessionCipherAlgo_Type()
)
wingCfgProfVpnCryptoInstEspSessionCipherAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionCipherAlgo.setStatus("current")


class _WingCfgProfVpnCryptoInstEspSessionCipherKey_Type(OctetString):
    """Custom type wingCfgProfVpnCryptoInstEspSessionCipherKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 512),
    )


_WingCfgProfVpnCryptoInstEspSessionCipherKey_Type.__name__ = "OctetString"
_WingCfgProfVpnCryptoInstEspSessionCipherKey_Object = MibTableColumn
wingCfgProfVpnCryptoInstEspSessionCipherKey = _WingCfgProfVpnCryptoInstEspSessionCipherKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13, 1, 5),
    _WingCfgProfVpnCryptoInstEspSessionCipherKey_Type()
)
wingCfgProfVpnCryptoInstEspSessionCipherKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionCipherKey.setStatus("current")


class _WingCfgProfVpnCryptoInstEspSessionAuthAlgo_Type(DisplayString):
    """Custom type wingCfgProfVpnCryptoInstEspSessionAuthAlgo based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgProfVpnCryptoInstEspSessionAuthAlgo_Type.__name__ = "DisplayString"
_WingCfgProfVpnCryptoInstEspSessionAuthAlgo_Object = MibTableColumn
wingCfgProfVpnCryptoInstEspSessionAuthAlgo = _WingCfgProfVpnCryptoInstEspSessionAuthAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13, 1, 6),
    _WingCfgProfVpnCryptoInstEspSessionAuthAlgo_Type()
)
wingCfgProfVpnCryptoInstEspSessionAuthAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionAuthAlgo.setStatus("current")


class _WingCfgProfVpnCryptoInstEspSessionAuthKey_Type(OctetString):
    """Custom type wingCfgProfVpnCryptoInstEspSessionAuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 512),
    )


_WingCfgProfVpnCryptoInstEspSessionAuthKey_Type.__name__ = "OctetString"
_WingCfgProfVpnCryptoInstEspSessionAuthKey_Object = MibTableColumn
wingCfgProfVpnCryptoInstEspSessionAuthKey = _WingCfgProfVpnCryptoInstEspSessionAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 13, 1, 7),
    _WingCfgProfVpnCryptoInstEspSessionAuthKey_Type()
)
wingCfgProfVpnCryptoInstEspSessionAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnCryptoInstEspSessionAuthKey.setStatus("current")
_WingCfgProfVpnIkev1RemoteTable_Object = MibTable
wingCfgProfVpnIkev1RemoteTable = _WingCfgProfVpnIkev1RemoteTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 14)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteTable.setStatus("current")
_WingCfgProfVpnIkev1RemoteEntry_Object = MibTableRow
wingCfgProfVpnIkev1RemoteEntry = _WingCfgProfVpnIkev1RemoteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 14, 1)
)
wingCfgProfVpnIkev1RemoteEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteEntry.setStatus("current")


class _WingCfgProfVpnIkev1RemoteAuthMethod_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1RemoteAuthMethod based on DisplayString"""
    defaultValue = OctetString("local")


_WingCfgProfVpnIkev1RemoteAuthMethod_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1RemoteAuthMethod_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteAuthMethod = _WingCfgProfVpnIkev1RemoteAuthMethod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 14, 1, 1),
    _WingCfgProfVpnIkev1RemoteAuthMethod_Type()
)
wingCfgProfVpnIkev1RemoteAuthMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteAuthMethod.setStatus("current")
_WingCfgProfVpnIkev1RemoteAaaPolicy_Type = WingIdentifier
_WingCfgProfVpnIkev1RemoteAaaPolicy_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteAaaPolicy = _WingCfgProfVpnIkev1RemoteAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 14, 1, 2),
    _WingCfgProfVpnIkev1RemoteAaaPolicy_Type()
)
wingCfgProfVpnIkev1RemoteAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteAaaPolicy.setStatus("current")
_WingCfgProfVpnIkev1RemoteIpLocalPool_Type = DisplayString
_WingCfgProfVpnIkev1RemoteIpLocalPool_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteIpLocalPool = _WingCfgProfVpnIkev1RemoteIpLocalPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 14, 1, 3),
    _WingCfgProfVpnIkev1RemoteIpLocalPool_Type()
)
wingCfgProfVpnIkev1RemoteIpLocalPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteIpLocalPool.setStatus("current")
_WingCfgProfVpnIkev1RemoteLocalUsersTable_Object = MibTable
wingCfgProfVpnIkev1RemoteLocalUsersTable = _WingCfgProfVpnIkev1RemoteLocalUsersTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 15)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteLocalUsersTable.setStatus("current")
_WingCfgProfVpnIkev1RemoteLocalUsersEntry_Object = MibTableRow
wingCfgProfVpnIkev1RemoteLocalUsersEntry = _WingCfgProfVpnIkev1RemoteLocalUsersEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 15, 1)
)
wingCfgProfVpnIkev1RemoteLocalUsersEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev1RemoteLocalUsersName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteLocalUsersEntry.setStatus("current")
_WingCfgProfVpnIkev1RemoteLocalUsersName_Type = WingIdentifier
_WingCfgProfVpnIkev1RemoteLocalUsersName_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteLocalUsersName = _WingCfgProfVpnIkev1RemoteLocalUsersName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 15, 1, 1),
    _WingCfgProfVpnIkev1RemoteLocalUsersName_Type()
)
wingCfgProfVpnIkev1RemoteLocalUsersName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteLocalUsersName.setStatus("current")


class _WingCfgProfVpnIkev1RemoteLocalUsersPassword_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev1RemoteLocalUsersPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgProfVpnIkev1RemoteLocalUsersPassword_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev1RemoteLocalUsersPassword_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteLocalUsersPassword = _WingCfgProfVpnIkev1RemoteLocalUsersPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 15, 1, 3),
    _WingCfgProfVpnIkev1RemoteLocalUsersPassword_Type()
)
wingCfgProfVpnIkev1RemoteLocalUsersPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteLocalUsersPassword.setStatus("current")
_WingCfgProfVpnIkev1RemoteWinsTable_Object = MibTable
wingCfgProfVpnIkev1RemoteWinsTable = _WingCfgProfVpnIkev1RemoteWinsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 16)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteWinsTable.setStatus("current")
_WingCfgProfVpnIkev1RemoteWinsEntry_Object = MibTableRow
wingCfgProfVpnIkev1RemoteWinsEntry = _WingCfgProfVpnIkev1RemoteWinsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 16, 1)
)
wingCfgProfVpnIkev1RemoteWinsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev1RemoteWinsServerType"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteWinsEntry.setStatus("current")
_WingCfgProfVpnIkev1RemoteWinsServerType_Type = WingIdentifier
_WingCfgProfVpnIkev1RemoteWinsServerType_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteWinsServerType = _WingCfgProfVpnIkev1RemoteWinsServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 16, 1, 1),
    _WingCfgProfVpnIkev1RemoteWinsServerType_Type()
)
wingCfgProfVpnIkev1RemoteWinsServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteWinsServerType.setStatus("current")
_WingCfgProfVpnIkev1RemoteWinsServerIp_Type = DisplayString
_WingCfgProfVpnIkev1RemoteWinsServerIp_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteWinsServerIp = _WingCfgProfVpnIkev1RemoteWinsServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 16, 1, 3),
    _WingCfgProfVpnIkev1RemoteWinsServerIp_Type()
)
wingCfgProfVpnIkev1RemoteWinsServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteWinsServerIp.setStatus("current")
_WingCfgProfVpnIkev1RemoteNameServerTable_Object = MibTable
wingCfgProfVpnIkev1RemoteNameServerTable = _WingCfgProfVpnIkev1RemoteNameServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 17)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteNameServerTable.setStatus("current")
_WingCfgProfVpnIkev1RemoteNameServerEntry_Object = MibTableRow
wingCfgProfVpnIkev1RemoteNameServerEntry = _WingCfgProfVpnIkev1RemoteNameServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 17, 1)
)
wingCfgProfVpnIkev1RemoteNameServerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev1RemoteNameServerType"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteNameServerEntry.setStatus("current")
_WingCfgProfVpnIkev1RemoteNameServerType_Type = WingIdentifier
_WingCfgProfVpnIkev1RemoteNameServerType_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteNameServerType = _WingCfgProfVpnIkev1RemoteNameServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 17, 1, 1),
    _WingCfgProfVpnIkev1RemoteNameServerType_Type()
)
wingCfgProfVpnIkev1RemoteNameServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteNameServerType.setStatus("current")
_WingCfgProfVpnIkev1RemoteNameServerIp_Type = DisplayString
_WingCfgProfVpnIkev1RemoteNameServerIp_Object = MibTableColumn
wingCfgProfVpnIkev1RemoteNameServerIp = _WingCfgProfVpnIkev1RemoteNameServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 17, 1, 3),
    _WingCfgProfVpnIkev1RemoteNameServerIp_Type()
)
wingCfgProfVpnIkev1RemoteNameServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev1RemoteNameServerIp.setStatus("current")
_WingCfgProfVpnIkev2RemoteTable_Object = MibTable
wingCfgProfVpnIkev2RemoteTable = _WingCfgProfVpnIkev2RemoteTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteTable.setStatus("current")
_WingCfgProfVpnIkev2RemoteEntry_Object = MibTableRow
wingCfgProfVpnIkev2RemoteEntry = _WingCfgProfVpnIkev2RemoteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1)
)
wingCfgProfVpnIkev2RemoteEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteEntry.setStatus("current")


class _WingCfgProfVpnIkev2RemoteAuthMethod_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2RemoteAuthMethod based on DisplayString"""
    defaultValue = OctetString("local")


_WingCfgProfVpnIkev2RemoteAuthMethod_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2RemoteAuthMethod_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteAuthMethod = _WingCfgProfVpnIkev2RemoteAuthMethod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1, 1),
    _WingCfgProfVpnIkev2RemoteAuthMethod_Type()
)
wingCfgProfVpnIkev2RemoteAuthMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteAuthMethod.setStatus("current")
_WingCfgProfVpnIkev2RemoteAaaPolicy_Type = WingIdentifier
_WingCfgProfVpnIkev2RemoteAaaPolicy_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteAaaPolicy = _WingCfgProfVpnIkev2RemoteAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1, 2),
    _WingCfgProfVpnIkev2RemoteAaaPolicy_Type()
)
wingCfgProfVpnIkev2RemoteAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteAaaPolicy.setStatus("current")
_WingCfgProfVpnIkev2RemoteIpLocalPool_Type = DisplayString
_WingCfgProfVpnIkev2RemoteIpLocalPool_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteIpLocalPool = _WingCfgProfVpnIkev2RemoteIpLocalPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1, 3),
    _WingCfgProfVpnIkev2RemoteIpLocalPool_Type()
)
wingCfgProfVpnIkev2RemoteIpLocalPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteIpLocalPool.setStatus("current")


class _WingCfgProfVpnIkev2RemoteDhcpServerType_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2RemoteDhcpServerType based on DisplayString"""
    defaultValue = OctetString("'none'")


_WingCfgProfVpnIkev2RemoteDhcpServerType_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2RemoteDhcpServerType_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteDhcpServerType = _WingCfgProfVpnIkev2RemoteDhcpServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1, 4),
    _WingCfgProfVpnIkev2RemoteDhcpServerType_Type()
)
wingCfgProfVpnIkev2RemoteDhcpServerType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteDhcpServerType.setStatus("current")


class _WingCfgProfVpnIkev2RemoteDhcpServer_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2RemoteDhcpServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgProfVpnIkev2RemoteDhcpServer_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2RemoteDhcpServer_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteDhcpServer = _WingCfgProfVpnIkev2RemoteDhcpServer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1, 5),
    _WingCfgProfVpnIkev2RemoteDhcpServer_Type()
)
wingCfgProfVpnIkev2RemoteDhcpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteDhcpServer.setStatus("current")
_WingCfgProfVpnIkev2RemoteDhcpServerGiaddr_Type = DisplayString
_WingCfgProfVpnIkev2RemoteDhcpServerGiaddr_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteDhcpServerGiaddr = _WingCfgProfVpnIkev2RemoteDhcpServerGiaddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1, 6),
    _WingCfgProfVpnIkev2RemoteDhcpServerGiaddr_Type()
)
wingCfgProfVpnIkev2RemoteDhcpServerGiaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteDhcpServerGiaddr.setStatus("current")
_WingCfgProfVpnIkev2RemoteNetmask_Type = DisplayString
_WingCfgProfVpnIkev2RemoteNetmask_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteNetmask = _WingCfgProfVpnIkev2RemoteNetmask_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 18, 1, 7),
    _WingCfgProfVpnIkev2RemoteNetmask_Type()
)
wingCfgProfVpnIkev2RemoteNetmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteNetmask.setStatus("current")
_WingCfgProfVpnIkev2RemoteLocalUsersTable_Object = MibTable
wingCfgProfVpnIkev2RemoteLocalUsersTable = _WingCfgProfVpnIkev2RemoteLocalUsersTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 19)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteLocalUsersTable.setStatus("current")
_WingCfgProfVpnIkev2RemoteLocalUsersEntry_Object = MibTableRow
wingCfgProfVpnIkev2RemoteLocalUsersEntry = _WingCfgProfVpnIkev2RemoteLocalUsersEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 19, 1)
)
wingCfgProfVpnIkev2RemoteLocalUsersEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev2RemoteLocalUsersName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteLocalUsersEntry.setStatus("current")
_WingCfgProfVpnIkev2RemoteLocalUsersName_Type = WingIdentifier
_WingCfgProfVpnIkev2RemoteLocalUsersName_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteLocalUsersName = _WingCfgProfVpnIkev2RemoteLocalUsersName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 19, 1, 1),
    _WingCfgProfVpnIkev2RemoteLocalUsersName_Type()
)
wingCfgProfVpnIkev2RemoteLocalUsersName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteLocalUsersName.setStatus("current")


class _WingCfgProfVpnIkev2RemoteLocalUsersPassword_Type(DisplayString):
    """Custom type wingCfgProfVpnIkev2RemoteLocalUsersPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgProfVpnIkev2RemoteLocalUsersPassword_Type.__name__ = "DisplayString"
_WingCfgProfVpnIkev2RemoteLocalUsersPassword_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteLocalUsersPassword = _WingCfgProfVpnIkev2RemoteLocalUsersPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 19, 1, 3),
    _WingCfgProfVpnIkev2RemoteLocalUsersPassword_Type()
)
wingCfgProfVpnIkev2RemoteLocalUsersPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteLocalUsersPassword.setStatus("current")
_WingCfgProfVpnIkev2RemoteWinsTable_Object = MibTable
wingCfgProfVpnIkev2RemoteWinsTable = _WingCfgProfVpnIkev2RemoteWinsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 20)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteWinsTable.setStatus("current")
_WingCfgProfVpnIkev2RemoteWinsEntry_Object = MibTableRow
wingCfgProfVpnIkev2RemoteWinsEntry = _WingCfgProfVpnIkev2RemoteWinsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 20, 1)
)
wingCfgProfVpnIkev2RemoteWinsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev2RemoteWinsServerType"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteWinsEntry.setStatus("current")
_WingCfgProfVpnIkev2RemoteWinsServerType_Type = WingIdentifier
_WingCfgProfVpnIkev2RemoteWinsServerType_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteWinsServerType = _WingCfgProfVpnIkev2RemoteWinsServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 20, 1, 1),
    _WingCfgProfVpnIkev2RemoteWinsServerType_Type()
)
wingCfgProfVpnIkev2RemoteWinsServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteWinsServerType.setStatus("current")
_WingCfgProfVpnIkev2RemoteWinsServerIp_Type = DisplayString
_WingCfgProfVpnIkev2RemoteWinsServerIp_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteWinsServerIp = _WingCfgProfVpnIkev2RemoteWinsServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 20, 1, 3),
    _WingCfgProfVpnIkev2RemoteWinsServerIp_Type()
)
wingCfgProfVpnIkev2RemoteWinsServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteWinsServerIp.setStatus("current")
_WingCfgProfVpnIkev2RemoteNameServerTable_Object = MibTable
wingCfgProfVpnIkev2RemoteNameServerTable = _WingCfgProfVpnIkev2RemoteNameServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 21)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteNameServerTable.setStatus("current")
_WingCfgProfVpnIkev2RemoteNameServerEntry_Object = MibTableRow
wingCfgProfVpnIkev2RemoteNameServerEntry = _WingCfgProfVpnIkev2RemoteNameServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 21, 1)
)
wingCfgProfVpnIkev2RemoteNameServerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVpnIkev2RemoteNameServerType"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteNameServerEntry.setStatus("current")
_WingCfgProfVpnIkev2RemoteNameServerType_Type = WingIdentifier
_WingCfgProfVpnIkev2RemoteNameServerType_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteNameServerType = _WingCfgProfVpnIkev2RemoteNameServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 21, 1, 1),
    _WingCfgProfVpnIkev2RemoteNameServerType_Type()
)
wingCfgProfVpnIkev2RemoteNameServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteNameServerType.setStatus("current")
_WingCfgProfVpnIkev2RemoteNameServerIp_Type = DisplayString
_WingCfgProfVpnIkev2RemoteNameServerIp_Object = MibTableColumn
wingCfgProfVpnIkev2RemoteNameServerIp = _WingCfgProfVpnIkev2RemoteNameServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 21, 1, 3),
    _WingCfgProfVpnIkev2RemoteNameServerIp_Type()
)
wingCfgProfVpnIkev2RemoteNameServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnIkev2RemoteNameServerIp.setStatus("current")
_WingCfgProfVpnAutoIPSecSecureTable_Object = MibTable
wingCfgProfVpnAutoIPSecSecureTable = _WingCfgProfVpnAutoIPSecSecureTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 22)
)
if mibBuilder.loadTexts:
    wingCfgProfVpnAutoIPSecSecureTable.setStatus("current")
_WingCfgProfVpnAutoIPSecSecureEntry_Object = MibTableRow
wingCfgProfVpnAutoIPSecSecureEntry = _WingCfgProfVpnAutoIPSecSecureEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 22, 1)
)
wingCfgProfVpnAutoIPSecSecureEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVpnAutoIPSecSecureEntry.setStatus("current")


class _WingCfgProfVpnAutoIPSecSecureGroupId_Type(OctetString):
    """Custom type wingCfgProfVpnAutoIPSecSecureGroupId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgProfVpnAutoIPSecSecureGroupId_Type.__name__ = "OctetString"
_WingCfgProfVpnAutoIPSecSecureGroupId_Object = MibTableColumn
wingCfgProfVpnAutoIPSecSecureGroupId = _WingCfgProfVpnAutoIPSecSecureGroupId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 22, 1, 1),
    _WingCfgProfVpnAutoIPSecSecureGroupId_Type()
)
wingCfgProfVpnAutoIPSecSecureGroupId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnAutoIPSecSecureGroupId.setStatus("current")
_WingCfgProfVpnAutoIPSecSecureGroupIdAuthType_Type = DisplayString
_WingCfgProfVpnAutoIPSecSecureGroupIdAuthType_Object = MibTableColumn
wingCfgProfVpnAutoIPSecSecureGroupIdAuthType = _WingCfgProfVpnAutoIPSecSecureGroupIdAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 22, 1, 2),
    _WingCfgProfVpnAutoIPSecSecureGroupIdAuthType_Type()
)
wingCfgProfVpnAutoIPSecSecureGroupIdAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnAutoIPSecSecureGroupIdAuthType.setStatus("current")


class _WingCfgProfVpnAutoIPSecSecureGroupIdAuthKey_Type(DisplayString):
    """Custom type wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgProfVpnAutoIPSecSecureGroupIdAuthKey_Type.__name__ = "DisplayString"
_WingCfgProfVpnAutoIPSecSecureGroupIdAuthKey_Object = MibTableColumn
wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey = _WingCfgProfVpnAutoIPSecSecureGroupIdAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 22, 1, 3),
    _WingCfgProfVpnAutoIPSecSecureGroupIdAuthKey_Type()
)
wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey.setStatus("current")
_WingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion_Type = DisplayString
_WingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion_Object = MibTableColumn
wingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion = _WingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 18, 22, 1, 4),
    _WingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion_Type()
)
wingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion.setStatus("current")
_WingCfgProfControllerHost_ObjectIdentity = ObjectIdentity
wingCfgProfControllerHost = _WingCfgProfControllerHost_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19)
)
_WingCfgProfControllerHostTable_Object = MibTable
wingCfgProfControllerHostTable = _WingCfgProfControllerHostTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfControllerHostTable.setStatus("current")
_WingCfgProfControllerHostEntry_Object = MibTableRow
wingCfgProfControllerHostEntry = _WingCfgProfControllerHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19, 1, 1)
)
wingCfgProfControllerHostEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfControllerHostIndex"),
)
if mibBuilder.loadTexts:
    wingCfgProfControllerHostEntry.setStatus("current")
_WingCfgProfControllerHostIndex_Type = WingIdentifier
_WingCfgProfControllerHostIndex_Object = MibTableColumn
wingCfgProfControllerHostIndex = _WingCfgProfControllerHostIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19, 1, 1, 1),
    _WingCfgProfControllerHostIndex_Type()
)
wingCfgProfControllerHostIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wingCfgProfControllerHostIndex.setStatus("current")


class _WingCfgProfControllerHostRowStatus_Type(RowStatus):
    """Custom type wingCfgProfControllerHostRowStatus based on RowStatus"""
    subtypeSpec = RowStatus.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("createAndGo", 4),
          ("destroy", 6))
    )


_WingCfgProfControllerHostRowStatus_Type.__name__ = "RowStatus"
_WingCfgProfControllerHostRowStatus_Object = MibTableColumn
wingCfgProfControllerHostRowStatus = _WingCfgProfControllerHostRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19, 1, 1, 2),
    _WingCfgProfControllerHostRowStatus_Type()
)
wingCfgProfControllerHostRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wingCfgProfControllerHostRowStatus.setStatus("current")
_WingCfgProfControllerHostHost_Type = DisplayString
_WingCfgProfControllerHostHost_Object = MibTableColumn
wingCfgProfControllerHostHost = _WingCfgProfControllerHostHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19, 1, 1, 3),
    _WingCfgProfControllerHostHost_Type()
)
wingCfgProfControllerHostHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfControllerHostHost.setStatus("current")


class _WingCfgProfControllerHostPool_Type(Unsigned32):
    """Custom type wingCfgProfControllerHostPool based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgProfControllerHostPool_Type.__name__ = "Unsigned32"
_WingCfgProfControllerHostPool_Object = MibTableColumn
wingCfgProfControllerHostPool = _WingCfgProfControllerHostPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19, 1, 1, 4),
    _WingCfgProfControllerHostPool_Type()
)
wingCfgProfControllerHostPool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfControllerHostPool.setStatus("current")


class _WingCfgProfControllerHostLevel_Type(Unsigned32):
    """Custom type wingCfgProfControllerHostLevel based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgProfControllerHostLevel_Type.__name__ = "Unsigned32"
_WingCfgProfControllerHostLevel_Object = MibTableColumn
wingCfgProfControllerHostLevel = _WingCfgProfControllerHostLevel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 19, 1, 1, 5),
    _WingCfgProfControllerHostLevel_Type()
)
wingCfgProfControllerHostLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfControllerHostLevel.setStatus("current")
_WingCfgProfDynRoute_ObjectIdentity = ObjectIdentity
wingCfgProfDynRoute = _WingCfgProfDynRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20)
)
_WingCfgProfDynRouteOspfTable_Object = MibTable
wingCfgProfDynRouteOspfTable = _WingCfgProfDynRouteOspfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfTable.setStatus("current")
_WingCfgProfDynRouteOspfEntry_Object = MibTableRow
wingCfgProfDynRouteOspfEntry = _WingCfgProfDynRouteOspfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1)
)
wingCfgProfDynRouteOspfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfEntry.setStatus("current")


class _WingCfgProfDynRouteOspfEnabled_Type(TruthValue):
    """Custom type wingCfgProfDynRouteOspfEnabled based on TruthValue"""
    defaultValue = 2


_WingCfgProfDynRouteOspfEnabled_Type.__name__ = "TruthValue"
_WingCfgProfDynRouteOspfEnabled_Object = MibTableColumn
wingCfgProfDynRouteOspfEnabled = _WingCfgProfDynRouteOspfEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 1),
    _WingCfgProfDynRouteOspfEnabled_Type()
)
wingCfgProfDynRouteOspfEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfEnabled.setStatus("current")
_WingCfgProfDynRouteOspfRouterId_Type = OctetString
_WingCfgProfDynRouteOspfRouterId_Object = MibTableColumn
wingCfgProfDynRouteOspfRouterId = _WingCfgProfDynRouteOspfRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 2),
    _WingCfgProfDynRouteOspfRouterId_Type()
)
wingCfgProfDynRouteOspfRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfRouterId.setStatus("current")


class _WingCfgProfDynRouteOspfAutoCost_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteOspfAutoCost based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967),
    )


_WingCfgProfDynRouteOspfAutoCost_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteOspfAutoCost_Object = MibTableColumn
wingCfgProfDynRouteOspfAutoCost = _WingCfgProfDynRouteOspfAutoCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 3),
    _WingCfgProfDynRouteOspfAutoCost_Type()
)
wingCfgProfDynRouteOspfAutoCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAutoCost.setStatus("current")


class _WingCfgProfDynRouteOspfPassiveAll_Type(TruthValue):
    """Custom type wingCfgProfDynRouteOspfPassiveAll based on TruthValue"""
    defaultValue = 2


_WingCfgProfDynRouteOspfPassiveAll_Type.__name__ = "TruthValue"
_WingCfgProfDynRouteOspfPassiveAll_Object = MibTableColumn
wingCfgProfDynRouteOspfPassiveAll = _WingCfgProfDynRouteOspfPassiveAll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 4),
    _WingCfgProfDynRouteOspfPassiveAll_Type()
)
wingCfgProfDynRouteOspfPassiveAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfPassiveAll.setStatus("current")
_WingCfgProfDynRouteOspfPassive_Type = DisplayString
_WingCfgProfDynRouteOspfPassive_Object = MibTableColumn
wingCfgProfDynRouteOspfPassive = _WingCfgProfDynRouteOspfPassive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 5),
    _WingCfgProfDynRouteOspfPassive_Type()
)
wingCfgProfDynRouteOspfPassive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfPassive.setStatus("current")
_WingCfgProfDynRouteOspfPassiveRemoved_Type = DisplayString
_WingCfgProfDynRouteOspfPassiveRemoved_Object = MibTableColumn
wingCfgProfDynRouteOspfPassiveRemoved = _WingCfgProfDynRouteOspfPassiveRemoved_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 6),
    _WingCfgProfDynRouteOspfPassiveRemoved_Type()
)
wingCfgProfDynRouteOspfPassiveRemoved.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfPassiveRemoved.setStatus("current")
_WingCfgProfDynRouteOspfVrrpStateCheck_Type = TruthValue
_WingCfgProfDynRouteOspfVrrpStateCheck_Object = MibTableColumn
wingCfgProfDynRouteOspfVrrpStateCheck = _WingCfgProfDynRouteOspfVrrpStateCheck_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 7),
    _WingCfgProfDynRouteOspfVrrpStateCheck_Type()
)
wingCfgProfDynRouteOspfVrrpStateCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfVrrpStateCheck.setStatus("current")


class _WingCfgProfDynRouteOspfDefaultRoutePriority_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteOspfDefaultRoutePriority based on Unsigned32"""
    defaultValue = 7000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8000),
    )


_WingCfgProfDynRouteOspfDefaultRoutePriority_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteOspfDefaultRoutePriority_Object = MibTableColumn
wingCfgProfDynRouteOspfDefaultRoutePriority = _WingCfgProfDynRouteOspfDefaultRoutePriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 8),
    _WingCfgProfDynRouteOspfDefaultRoutePriority_Type()
)
wingCfgProfDynRouteOspfDefaultRoutePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfDefaultRoutePriority.setStatus("current")


class _WingCfgProfDynRouteOspfNumRoutes_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteOspfNumRoutes based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingCfgProfDynRouteOspfNumRoutes_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteOspfNumRoutes_Object = MibTableColumn
wingCfgProfDynRouteOspfNumRoutes = _WingCfgProfDynRouteOspfNumRoutes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 9),
    _WingCfgProfDynRouteOspfNumRoutes_Type()
)
wingCfgProfDynRouteOspfNumRoutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfNumRoutes.setStatus("current")


class _WingCfgProfDynRouteOspfRetryCount_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteOspfRetryCount based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_WingCfgProfDynRouteOspfRetryCount_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteOspfRetryCount_Object = MibTableColumn
wingCfgProfDynRouteOspfRetryCount = _WingCfgProfDynRouteOspfRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 10),
    _WingCfgProfDynRouteOspfRetryCount_Type()
)
wingCfgProfDynRouteOspfRetryCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfRetryCount.setStatus("current")


class _WingCfgProfDynRouteOspfRetryTimeout_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteOspfRetryTimeout based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_WingCfgProfDynRouteOspfRetryTimeout_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteOspfRetryTimeout_Object = MibTableColumn
wingCfgProfDynRouteOspfRetryTimeout = _WingCfgProfDynRouteOspfRetryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 11),
    _WingCfgProfDynRouteOspfRetryTimeout_Type()
)
wingCfgProfDynRouteOspfRetryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfRetryTimeout.setStatus("current")


class _WingCfgProfDynRouteOspfResetTime_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteOspfResetTime based on Unsigned32"""
    defaultValue = 360

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 86400),
    )


_WingCfgProfDynRouteOspfResetTime_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteOspfResetTime_Object = MibTableColumn
wingCfgProfDynRouteOspfResetTime = _WingCfgProfDynRouteOspfResetTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 1, 1, 12),
    _WingCfgProfDynRouteOspfResetTime_Type()
)
wingCfgProfDynRouteOspfResetTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfResetTime.setStatus("current")
_WingCfgProfDynRouteOspfNetworkTable_Object = MibTable
wingCfgProfDynRouteOspfNetworkTable = _WingCfgProfDynRouteOspfNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfNetworkTable.setStatus("current")
_WingCfgProfDynRouteOspfNetworkEntry_Object = MibTableRow
wingCfgProfDynRouteOspfNetworkEntry = _WingCfgProfDynRouteOspfNetworkEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 2, 1)
)
wingCfgProfDynRouteOspfNetworkEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfDynRouteOspfNetwork"),
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfNetworkEntry.setStatus("current")
_WingCfgProfDynRouteOspfNetwork_Type = WingIdentifier
_WingCfgProfDynRouteOspfNetwork_Object = MibTableColumn
wingCfgProfDynRouteOspfNetwork = _WingCfgProfDynRouteOspfNetwork_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 2, 1, 1),
    _WingCfgProfDynRouteOspfNetwork_Type()
)
wingCfgProfDynRouteOspfNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfNetwork.setStatus("current")
_WingCfgProfDynRouteOspfNetworkAreaId_Type = DisplayString
_WingCfgProfDynRouteOspfNetworkAreaId_Object = MibTableColumn
wingCfgProfDynRouteOspfNetworkAreaId = _WingCfgProfDynRouteOspfNetworkAreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 2, 1, 3),
    _WingCfgProfDynRouteOspfNetworkAreaId_Type()
)
wingCfgProfDynRouteOspfNetworkAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfNetworkAreaId.setStatus("current")
_WingCfgProfDynRouteOspfAreaTable_Object = MibTable
wingCfgProfDynRouteOspfAreaTable = _WingCfgProfDynRouteOspfAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3)
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaTable.setStatus("current")
_WingCfgProfDynRouteOspfAreaEntry_Object = MibTableRow
wingCfgProfDynRouteOspfAreaEntry = _WingCfgProfDynRouteOspfAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3, 1)
)
wingCfgProfDynRouteOspfAreaEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfDynRouteOspfAreaId"),
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaEntry.setStatus("current")
_WingCfgProfDynRouteOspfAreaId_Type = WingIdentifier
_WingCfgProfDynRouteOspfAreaId_Object = MibTableColumn
wingCfgProfDynRouteOspfAreaId = _WingCfgProfDynRouteOspfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3, 1, 1),
    _WingCfgProfDynRouteOspfAreaId_Type()
)
wingCfgProfDynRouteOspfAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaId.setStatus("current")


class _WingCfgProfDynRouteOspfAreaAuthentication_Type(DisplayString):
    """Custom type wingCfgProfDynRouteOspfAreaAuthentication based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfDynRouteOspfAreaAuthentication_Type.__name__ = "DisplayString"
_WingCfgProfDynRouteOspfAreaAuthentication_Object = MibTableColumn
wingCfgProfDynRouteOspfAreaAuthentication = _WingCfgProfDynRouteOspfAreaAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3, 1, 3),
    _WingCfgProfDynRouteOspfAreaAuthentication_Type()
)
wingCfgProfDynRouteOspfAreaAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaAuthentication.setStatus("current")
_WingCfgProfDynRouteOspfAreaRange_Type = DisplayString
_WingCfgProfDynRouteOspfAreaRange_Object = MibTableColumn
wingCfgProfDynRouteOspfAreaRange = _WingCfgProfDynRouteOspfAreaRange_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3, 1, 4),
    _WingCfgProfDynRouteOspfAreaRange_Type()
)
wingCfgProfDynRouteOspfAreaRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaRange.setStatus("current")


class _WingCfgProfDynRouteOspfAreaType_Type(DisplayString):
    """Custom type wingCfgProfDynRouteOspfAreaType based on DisplayString"""
    defaultValue = OctetString("non-stub")


_WingCfgProfDynRouteOspfAreaType_Type.__name__ = "DisplayString"
_WingCfgProfDynRouteOspfAreaType_Object = MibTableColumn
wingCfgProfDynRouteOspfAreaType = _WingCfgProfDynRouteOspfAreaType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3, 1, 5),
    _WingCfgProfDynRouteOspfAreaType_Type()
)
wingCfgProfDynRouteOspfAreaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaType.setStatus("current")


class _WingCfgProfDynRouteOspfAreaDefaultCost_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteOspfAreaDefaultCost based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_WingCfgProfDynRouteOspfAreaDefaultCost_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteOspfAreaDefaultCost_Object = MibTableColumn
wingCfgProfDynRouteOspfAreaDefaultCost = _WingCfgProfDynRouteOspfAreaDefaultCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3, 1, 6),
    _WingCfgProfDynRouteOspfAreaDefaultCost_Type()
)
wingCfgProfDynRouteOspfAreaDefaultCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaDefaultCost.setStatus("current")
_WingCfgProfDynRouteOspfAreaTranslateType_Type = DisplayString
_WingCfgProfDynRouteOspfAreaTranslateType_Object = MibTableColumn
wingCfgProfDynRouteOspfAreaTranslateType = _WingCfgProfDynRouteOspfAreaTranslateType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 3, 1, 7),
    _WingCfgProfDynRouteOspfAreaTranslateType_Type()
)
wingCfgProfDynRouteOspfAreaTranslateType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteOspfAreaTranslateType.setStatus("current")
_WingCfgProfDynRouteDefaultInfoTable_Object = MibTable
wingCfgProfDynRouteDefaultInfoTable = _WingCfgProfDynRouteDefaultInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 4)
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteDefaultInfoTable.setStatus("current")
_WingCfgProfDynRouteDefaultInfoEntry_Object = MibTableRow
wingCfgProfDynRouteDefaultInfoEntry = _WingCfgProfDynRouteDefaultInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 4, 1)
)
wingCfgProfDynRouteDefaultInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteDefaultInfoEntry.setStatus("current")
_WingCfgProfDynRouteDefaultInfoOriginate_Type = TruthValue
_WingCfgProfDynRouteDefaultInfoOriginate_Object = MibTableColumn
wingCfgProfDynRouteDefaultInfoOriginate = _WingCfgProfDynRouteDefaultInfoOriginate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 4, 1, 1),
    _WingCfgProfDynRouteDefaultInfoOriginate_Type()
)
wingCfgProfDynRouteDefaultInfoOriginate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteDefaultInfoOriginate.setStatus("current")
_WingCfgProfDynRouteDefaultInfoAlways_Type = TruthValue
_WingCfgProfDynRouteDefaultInfoAlways_Object = MibTableColumn
wingCfgProfDynRouteDefaultInfoAlways = _WingCfgProfDynRouteDefaultInfoAlways_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 4, 1, 2),
    _WingCfgProfDynRouteDefaultInfoAlways_Type()
)
wingCfgProfDynRouteDefaultInfoAlways.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteDefaultInfoAlways.setStatus("current")


class _WingCfgProfDynRouteDefaultInfoRtMetric_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteDefaultInfoRtMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777214),
    )


_WingCfgProfDynRouteDefaultInfoRtMetric_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteDefaultInfoRtMetric_Object = MibTableColumn
wingCfgProfDynRouteDefaultInfoRtMetric = _WingCfgProfDynRouteDefaultInfoRtMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 4, 1, 3),
    _WingCfgProfDynRouteDefaultInfoRtMetric_Type()
)
wingCfgProfDynRouteDefaultInfoRtMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteDefaultInfoRtMetric.setStatus("current")
_WingCfgProfDynRouteDefaultInfoRtMetricType_Type = DisplayString
_WingCfgProfDynRouteDefaultInfoRtMetricType_Object = MibTableColumn
wingCfgProfDynRouteDefaultInfoRtMetricType = _WingCfgProfDynRouteDefaultInfoRtMetricType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 4, 1, 4),
    _WingCfgProfDynRouteDefaultInfoRtMetricType_Type()
)
wingCfgProfDynRouteDefaultInfoRtMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteDefaultInfoRtMetricType.setStatus("current")
_WingCfgProfDynRouteRedistributeTable_Object = MibTable
wingCfgProfDynRouteRedistributeTable = _WingCfgProfDynRouteRedistributeTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 5)
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteRedistributeTable.setStatus("current")
_WingCfgProfDynRouteRedistributeEntry_Object = MibTableRow
wingCfgProfDynRouteRedistributeEntry = _WingCfgProfDynRouteRedistributeEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 5, 1)
)
wingCfgProfDynRouteRedistributeEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfDynRouteRedistributeRouteType"),
)
if mibBuilder.loadTexts:
    wingCfgProfDynRouteRedistributeEntry.setStatus("current")
_WingCfgProfDynRouteRedistributeRouteType_Type = WingIdentifier
_WingCfgProfDynRouteRedistributeRouteType_Object = MibTableColumn
wingCfgProfDynRouteRedistributeRouteType = _WingCfgProfDynRouteRedistributeRouteType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 5, 1, 1),
    _WingCfgProfDynRouteRedistributeRouteType_Type()
)
wingCfgProfDynRouteRedistributeRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteRedistributeRouteType.setStatus("current")


class _WingCfgProfDynRouteRedistributeMetric_Type(Unsigned32):
    """Custom type wingCfgProfDynRouteRedistributeMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777214),
    )


_WingCfgProfDynRouteRedistributeMetric_Type.__name__ = "Unsigned32"
_WingCfgProfDynRouteRedistributeMetric_Object = MibTableColumn
wingCfgProfDynRouteRedistributeMetric = _WingCfgProfDynRouteRedistributeMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 5, 1, 3),
    _WingCfgProfDynRouteRedistributeMetric_Type()
)
wingCfgProfDynRouteRedistributeMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteRedistributeMetric.setStatus("current")
_WingCfgProfDynRouteRedistributeMetricType_Type = DisplayString
_WingCfgProfDynRouteRedistributeMetricType_Object = MibTableColumn
wingCfgProfDynRouteRedistributeMetricType = _WingCfgProfDynRouteRedistributeMetricType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 20, 5, 1, 4),
    _WingCfgProfDynRouteRedistributeMetricType_Type()
)
wingCfgProfDynRouteRedistributeMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfDynRouteRedistributeMetricType.setStatus("current")
_WingCfgProfVrrp_ObjectIdentity = ObjectIdentity
wingCfgProfVrrp = _WingCfgProfVrrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21)
)
_WingCfgProfVrrpTable_Object = MibTable
wingCfgProfVrrpTable = _WingCfgProfVrrpTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfVrrpTable.setStatus("current")
_WingCfgProfVrrpEntry_Object = MibTableRow
wingCfgProfVrrpEntry = _WingCfgProfVrrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 1, 1)
)
wingCfgProfVrrpEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfVrrpEntry.setStatus("current")


class _WingCfgProfVrrpVersion_Type(DisplayString):
    """Custom type wingCfgProfVrrpVersion based on DisplayString"""
    defaultValue = OctetString("2")


_WingCfgProfVrrpVersion_Type.__name__ = "DisplayString"
_WingCfgProfVrrpVersion_Object = MibTableColumn
wingCfgProfVrrpVersion = _WingCfgProfVrrpVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 1, 1, 1),
    _WingCfgProfVrrpVersion_Type()
)
wingCfgProfVrrpVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpVersion.setStatus("current")
_WingCfgProfVrrpGroupTable_Object = MibTable
wingCfgProfVrrpGroupTable = _WingCfgProfVrrpGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupTable.setStatus("current")
_WingCfgProfVrrpGroupEntry_Object = MibTableRow
wingCfgProfVrrpGroupEntry = _WingCfgProfVrrpGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1)
)
wingCfgProfVrrpGroupEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfVrrpGroupVirtualRouterId"),
)
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupEntry.setStatus("current")


class _WingCfgProfVrrpGroupVirtualRouterId_Type(Unsigned32):
    """Custom type wingCfgProfVrrpGroupVirtualRouterId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgProfVrrpGroupVirtualRouterId_Type.__name__ = "Unsigned32"
_WingCfgProfVrrpGroupVirtualRouterId_Object = MibTableColumn
wingCfgProfVrrpGroupVirtualRouterId = _WingCfgProfVrrpGroupVirtualRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 1),
    _WingCfgProfVrrpGroupVirtualRouterId_Type()
)
wingCfgProfVrrpGroupVirtualRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupVirtualRouterId.setStatus("current")


class _WingCfgProfVrrpGroupDescription_Type(DisplayString):
    """Custom type wingCfgProfVrrpGroupDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgProfVrrpGroupDescription_Type.__name__ = "DisplayString"
_WingCfgProfVrrpGroupDescription_Object = MibTableColumn
wingCfgProfVrrpGroupDescription = _WingCfgProfVrrpGroupDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 3),
    _WingCfgProfVrrpGroupDescription_Type()
)
wingCfgProfVrrpGroupDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupDescription.setStatus("current")


class _WingCfgProfVrrpGroupPriority_Type(Unsigned32):
    """Custom type wingCfgProfVrrpGroupPriority based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 254),
    )


_WingCfgProfVrrpGroupPriority_Type.__name__ = "Unsigned32"
_WingCfgProfVrrpGroupPriority_Object = MibTableColumn
wingCfgProfVrrpGroupPriority = _WingCfgProfVrrpGroupPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 4),
    _WingCfgProfVrrpGroupPriority_Type()
)
wingCfgProfVrrpGroupPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupPriority.setStatus("current")


class _WingCfgProfVrrpGroupAdvertisementUnit_Type(DisplayString):
    """Custom type wingCfgProfVrrpGroupAdvertisementUnit based on DisplayString"""
    defaultValue = OctetString("seconds")


_WingCfgProfVrrpGroupAdvertisementUnit_Type.__name__ = "DisplayString"
_WingCfgProfVrrpGroupAdvertisementUnit_Object = MibTableColumn
wingCfgProfVrrpGroupAdvertisementUnit = _WingCfgProfVrrpGroupAdvertisementUnit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 5),
    _WingCfgProfVrrpGroupAdvertisementUnit_Type()
)
wingCfgProfVrrpGroupAdvertisementUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupAdvertisementUnit.setStatus("current")


class _WingCfgProfVrrpGroupAdvertisementIntervalV2_Type(Unsigned32):
    """Custom type wingCfgProfVrrpGroupAdvertisementIntervalV2 based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgProfVrrpGroupAdvertisementIntervalV2_Type.__name__ = "Unsigned32"
_WingCfgProfVrrpGroupAdvertisementIntervalV2_Object = MibTableColumn
wingCfgProfVrrpGroupAdvertisementIntervalV2 = _WingCfgProfVrrpGroupAdvertisementIntervalV2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 6),
    _WingCfgProfVrrpGroupAdvertisementIntervalV2_Type()
)
wingCfgProfVrrpGroupAdvertisementIntervalV2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupAdvertisementIntervalV2.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupAdvertisementIntervalV2.setUnits("seconds")


class _WingCfgProfVrrpGroupAdvertisementIntervalV2Msec_Type(Unsigned32):
    """Custom type wingCfgProfVrrpGroupAdvertisementIntervalV2Msec based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 999),
    )


_WingCfgProfVrrpGroupAdvertisementIntervalV2Msec_Type.__name__ = "Unsigned32"
_WingCfgProfVrrpGroupAdvertisementIntervalV2Msec_Object = MibTableColumn
wingCfgProfVrrpGroupAdvertisementIntervalV2Msec = _WingCfgProfVrrpGroupAdvertisementIntervalV2Msec_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 7),
    _WingCfgProfVrrpGroupAdvertisementIntervalV2Msec_Type()
)
wingCfgProfVrrpGroupAdvertisementIntervalV2Msec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupAdvertisementIntervalV2Msec.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupAdvertisementIntervalV2Msec.setUnits("milliseconds")


class _WingCfgProfVrrpGroupAdvertisementIntervalV3_Type(Unsigned32):
    """Custom type wingCfgProfVrrpGroupAdvertisementIntervalV3 based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_WingCfgProfVrrpGroupAdvertisementIntervalV3_Type.__name__ = "Unsigned32"
_WingCfgProfVrrpGroupAdvertisementIntervalV3_Object = MibTableColumn
wingCfgProfVrrpGroupAdvertisementIntervalV3 = _WingCfgProfVrrpGroupAdvertisementIntervalV3_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 8),
    _WingCfgProfVrrpGroupAdvertisementIntervalV3_Type()
)
wingCfgProfVrrpGroupAdvertisementIntervalV3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupAdvertisementIntervalV3.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupAdvertisementIntervalV3.setUnits("centiseconds")


class _WingCfgProfVrrpGroupPreempt_Type(TruthValue):
    """Custom type wingCfgProfVrrpGroupPreempt based on TruthValue"""
    defaultValue = 1


_WingCfgProfVrrpGroupPreempt_Type.__name__ = "TruthValue"
_WingCfgProfVrrpGroupPreempt_Object = MibTableColumn
wingCfgProfVrrpGroupPreempt = _WingCfgProfVrrpGroupPreempt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 9),
    _WingCfgProfVrrpGroupPreempt_Type()
)
wingCfgProfVrrpGroupPreempt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupPreempt.setStatus("current")


class _WingCfgProfVrrpGroupPreemptDelay_Type(Unsigned32):
    """Custom type wingCfgProfVrrpGroupPreemptDelay based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgProfVrrpGroupPreemptDelay_Type.__name__ = "Unsigned32"
_WingCfgProfVrrpGroupPreemptDelay_Object = MibTableColumn
wingCfgProfVrrpGroupPreemptDelay = _WingCfgProfVrrpGroupPreemptDelay_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 10),
    _WingCfgProfVrrpGroupPreemptDelay_Type()
)
wingCfgProfVrrpGroupPreemptDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupPreemptDelay.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupPreemptDelay.setUnits("seconds")


class _WingCfgProfVrrpGroupCrmAction_Type(DisplayString):
    """Custom type wingCfgProfVrrpGroupCrmAction based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfVrrpGroupCrmAction_Type.__name__ = "DisplayString"
_WingCfgProfVrrpGroupCrmAction_Object = MibTableColumn
wingCfgProfVrrpGroupCrmAction = _WingCfgProfVrrpGroupCrmAction_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 11),
    _WingCfgProfVrrpGroupCrmAction_Type()
)
wingCfgProfVrrpGroupCrmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupCrmAction.setStatus("current")


class _WingCfgProfVrrpGroupDeltaPriority_Type(Unsigned32):
    """Custom type wingCfgProfVrrpGroupDeltaPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 253),
    )


_WingCfgProfVrrpGroupDeltaPriority_Type.__name__ = "Unsigned32"
_WingCfgProfVrrpGroupDeltaPriority_Object = MibTableColumn
wingCfgProfVrrpGroupDeltaPriority = _WingCfgProfVrrpGroupDeltaPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 12),
    _WingCfgProfVrrpGroupDeltaPriority_Type()
)
wingCfgProfVrrpGroupDeltaPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupDeltaPriority.setStatus("current")
_WingCfgProfVrrpGroupInterface_Type = DisplayString
_WingCfgProfVrrpGroupInterface_Object = MibTableColumn
wingCfgProfVrrpGroupInterface = _WingCfgProfVrrpGroupInterface_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 13),
    _WingCfgProfVrrpGroupInterface_Type()
)
wingCfgProfVrrpGroupInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupInterface.setStatus("current")


class _WingCfgProfVrrpGroupSyncGroup_Type(TruthValue):
    """Custom type wingCfgProfVrrpGroupSyncGroup based on TruthValue"""
    defaultValue = 2


_WingCfgProfVrrpGroupSyncGroup_Type.__name__ = "TruthValue"
_WingCfgProfVrrpGroupSyncGroup_Object = MibTableColumn
wingCfgProfVrrpGroupSyncGroup = _WingCfgProfVrrpGroupSyncGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 21, 2, 1, 14),
    _WingCfgProfVrrpGroupSyncGroup_Type()
)
wingCfgProfVrrpGroupSyncGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfVrrpGroupSyncGroup.setStatus("current")
_WingCfgProfIgs_ObjectIdentity = ObjectIdentity
wingCfgProfIgs = _WingCfgProfIgs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22)
)
_WingCfgProfIgsTable_Object = MibTable
wingCfgProfIgsTable = _WingCfgProfIgsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfIgsTable.setStatus("current")
_WingCfgProfIgsEntry_Object = MibTableRow
wingCfgProfIgsEntry = _WingCfgProfIgsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1)
)
wingCfgProfIgsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfIgsEntry.setStatus("current")


class _WingCfgProfIgsIpIgmpSnooping_Type(TruthValue):
    """Custom type wingCfgProfIgsIpIgmpSnooping based on TruthValue"""
    defaultValue = 1


_WingCfgProfIgsIpIgmpSnooping_Type.__name__ = "TruthValue"
_WingCfgProfIgsIpIgmpSnooping_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnooping = _WingCfgProfIgsIpIgmpSnooping_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 1),
    _WingCfgProfIgsIpIgmpSnooping_Type()
)
wingCfgProfIgsIpIgmpSnooping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnooping.setStatus("current")


class _WingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast_Type(TruthValue):
    """Custom type wingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast based on TruthValue"""
    defaultValue = 2


_WingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast_Type.__name__ = "TruthValue"
_WingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast = _WingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 2),
    _WingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast_Type()
)
wingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast.setStatus("current")


class _WingCfgProfIgsIpIgmpSnoopingQuerier_Type(TruthValue):
    """Custom type wingCfgProfIgsIpIgmpSnoopingQuerier based on TruthValue"""
    defaultValue = 2


_WingCfgProfIgsIpIgmpSnoopingQuerier_Type.__name__ = "TruthValue"
_WingCfgProfIgsIpIgmpSnoopingQuerier_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingQuerier = _WingCfgProfIgsIpIgmpSnoopingQuerier_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 3),
    _WingCfgProfIgsIpIgmpSnoopingQuerier_Type()
)
wingCfgProfIgsIpIgmpSnoopingQuerier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerier.setStatus("current")


class _WingCfgProfIgsIpIgmpSnoopingQuerierAddress_Type(DisplayString):
    """Custom type wingCfgProfIgsIpIgmpSnoopingQuerierAddress based on DisplayString"""
    defaultValue = OctetString("0.0.0.0")


_WingCfgProfIgsIpIgmpSnoopingQuerierAddress_Type.__name__ = "DisplayString"
_WingCfgProfIgsIpIgmpSnoopingQuerierAddress_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingQuerierAddress = _WingCfgProfIgsIpIgmpSnoopingQuerierAddress_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 4),
    _WingCfgProfIgsIpIgmpSnoopingQuerierAddress_Type()
)
wingCfgProfIgsIpIgmpSnoopingQuerierAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierAddress.setStatus("current")


class _WingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime_Type(Unsigned32):
    """Custom type wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_WingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime_Type.__name__ = "Unsigned32"
_WingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime = _WingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 5),
    _WingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime_Type()
)
wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime.setUnits("seconds")


class _WingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Type(Unsigned32):
    """Custom type wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_WingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Type.__name__ = "Unsigned32"
_WingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry = _WingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 6),
    _WingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Type()
)
wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry.setUnits("seconds")


class _WingCfgProfIgsIpIgmpSnoopingQuerierVersion_Type(Unsigned32):
    """Custom type wingCfgProfIgsIpIgmpSnoopingQuerierVersion based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WingCfgProfIgsIpIgmpSnoopingQuerierVersion_Type.__name__ = "Unsigned32"
_WingCfgProfIgsIpIgmpSnoopingQuerierVersion_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingQuerierVersion = _WingCfgProfIgsIpIgmpSnoopingQuerierVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 7),
    _WingCfgProfIgsIpIgmpSnoopingQuerierVersion_Type()
)
wingCfgProfIgsIpIgmpSnoopingQuerierVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierVersion.setStatus("current")


class _WingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval_Type(Unsigned32):
    """Custom type wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 18000),
    )


_WingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval_Type.__name__ = "Unsigned32"
_WingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval = _WingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 8),
    _WingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval_Type()
)
wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval.setUnits("seconds")


class _WingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable_Type(Unsigned32):
    """Custom type wingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_WingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable_Type.__name__ = "Unsigned32"
_WingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable_Object = MibTableColumn
wingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable = _WingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 22, 1, 1, 9),
    _WingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable_Type()
)
wingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable.setStatus("current")
_WingCfgProfCriticalRes_ObjectIdentity = ObjectIdentity
wingCfgProfCriticalRes = _WingCfgProfCriticalRes_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23)
)
_WingCfgProfCriticalResMonitorTable_Object = MibTable
wingCfgProfCriticalResMonitorTable = _WingCfgProfCriticalResMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfCriticalResMonitorTable.setStatus("current")
_WingCfgProfCriticalResMonitorEntry_Object = MibTableRow
wingCfgProfCriticalResMonitorEntry = _WingCfgProfCriticalResMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 1, 1)
)
wingCfgProfCriticalResMonitorEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfCriticalResMonitorEntry.setStatus("current")


class _WingCfgProfCriticalResMonitorInt_Type(Unsigned32):
    """Custom type wingCfgProfCriticalResMonitorInt based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 86400),
    )


_WingCfgProfCriticalResMonitorInt_Type.__name__ = "Unsigned32"
_WingCfgProfCriticalResMonitorInt_Object = MibTableColumn
wingCfgProfCriticalResMonitorInt = _WingCfgProfCriticalResMonitorInt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 1, 1, 1),
    _WingCfgProfCriticalResMonitorInt_Type()
)
wingCfgProfCriticalResMonitorInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResMonitorInt.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResMonitorInt.setUnits("seconds")
_WingCfgProfCriticalResPolicyTable_Object = MibTable
wingCfgProfCriticalResPolicyTable = _WingCfgProfCriticalResPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfCriticalResPolicyTable.setStatus("current")
_WingCfgProfCriticalResPolicyEntry_Object = MibTableRow
wingCfgProfCriticalResPolicyEntry = _WingCfgProfCriticalResPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 2, 1)
)
wingCfgProfCriticalResPolicyEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfCriticalResPolicyVia"),
)
if mibBuilder.loadTexts:
    wingCfgProfCriticalResPolicyEntry.setStatus("current")
_WingCfgProfCriticalResPolicyVia_Type = WingIdentifier
_WingCfgProfCriticalResPolicyVia_Object = MibTableColumn
wingCfgProfCriticalResPolicyVia = _WingCfgProfCriticalResPolicyVia_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 2, 1, 1),
    _WingCfgProfCriticalResPolicyVia_Type()
)
wingCfgProfCriticalResPolicyVia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResPolicyVia.setStatus("current")


class _WingCfgProfCriticalResPolicyAnyAll_Type(DisplayString):
    """Custom type wingCfgProfCriticalResPolicyAnyAll based on DisplayString"""
    defaultValue = OctetString("any")


_WingCfgProfCriticalResPolicyAnyAll_Type.__name__ = "DisplayString"
_WingCfgProfCriticalResPolicyAnyAll_Object = MibTableColumn
wingCfgProfCriticalResPolicyAnyAll = _WingCfgProfCriticalResPolicyAnyAll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 2, 1, 3),
    _WingCfgProfCriticalResPolicyAnyAll_Type()
)
wingCfgProfCriticalResPolicyAnyAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResPolicyAnyAll.setStatus("current")
_WingCfgProfCriticalResourcesTable_Object = MibTable
wingCfgProfCriticalResourcesTable = _WingCfgProfCriticalResourcesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 3)
)
if mibBuilder.loadTexts:
    wingCfgProfCriticalResourcesTable.setStatus("current")
_WingCfgProfCriticalResourcesEntry_Object = MibTableRow
wingCfgProfCriticalResourcesEntry = _WingCfgProfCriticalResourcesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 3, 1)
)
wingCfgProfCriticalResourcesEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfCriticalResPolicyVia"),
    (0, "WING-MIB", "wingCfgProfCriticalResourcesAddr"),
)
if mibBuilder.loadTexts:
    wingCfgProfCriticalResourcesEntry.setStatus("current")
_WingCfgProfCriticalResourcesAddr_Type = WingIdentifier
_WingCfgProfCriticalResourcesAddr_Object = MibTableColumn
wingCfgProfCriticalResourcesAddr = _WingCfgProfCriticalResourcesAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 3, 1, 1),
    _WingCfgProfCriticalResourcesAddr_Type()
)
wingCfgProfCriticalResourcesAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResourcesAddr.setStatus("current")


class _WingCfgProfCriticalResourcesMonitorType_Type(DisplayString):
    """Custom type wingCfgProfCriticalResourcesMonitorType based on DisplayString"""
    defaultValue = OctetString("arp-and-ping")


_WingCfgProfCriticalResourcesMonitorType_Type.__name__ = "DisplayString"
_WingCfgProfCriticalResourcesMonitorType_Object = MibTableColumn
wingCfgProfCriticalResourcesMonitorType = _WingCfgProfCriticalResourcesMonitorType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 3, 1, 3),
    _WingCfgProfCriticalResourcesMonitorType_Type()
)
wingCfgProfCriticalResourcesMonitorType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResourcesMonitorType.setStatus("current")


class _WingCfgProfCriticalResourcesVlan_Type(Unsigned32):
    """Custom type wingCfgProfCriticalResourcesVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgProfCriticalResourcesVlan_Type.__name__ = "Unsigned32"
_WingCfgProfCriticalResourcesVlan_Object = MibTableColumn
wingCfgProfCriticalResourcesVlan = _WingCfgProfCriticalResourcesVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 3, 1, 4),
    _WingCfgProfCriticalResourcesVlan_Type()
)
wingCfgProfCriticalResourcesVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResourcesVlan.setStatus("current")
_WingCfgProfCriticalResourcesPort_Type = DisplayString
_WingCfgProfCriticalResourcesPort_Object = MibTableColumn
wingCfgProfCriticalResourcesPort = _WingCfgProfCriticalResourcesPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 23, 3, 1, 5),
    _WingCfgProfCriticalResourcesPort_Type()
)
wingCfgProfCriticalResourcesPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfCriticalResourcesPort.setStatus("current")
_WingCfgProfl2tpv3_ObjectIdentity = ObjectIdentity
wingCfgProfl2tpv3 = _WingCfgProfl2tpv3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24)
)
_WingCfgProfl2tpv3Table_Object = MibTable
wingCfgProfl2tpv3Table = _WingCfgProfl2tpv3Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3Table.setStatus("current")
_WingCfgProfl2tpv3Entry_Object = MibTableRow
wingCfgProfl2tpv3Entry = _WingCfgProfl2tpv3Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 1, 1)
)
wingCfgProfl2tpv3Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3Entry.setStatus("current")
_WingCfgProfl2tpv3lUdpListenPort_Type = Unsigned32
_WingCfgProfl2tpv3lUdpListenPort_Object = MibTableColumn
wingCfgProfl2tpv3lUdpListenPort = _WingCfgProfl2tpv3lUdpListenPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 1, 1, 1),
    _WingCfgProfl2tpv3lUdpListenPort_Type()
)
wingCfgProfl2tpv3lUdpListenPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3lUdpListenPort.setStatus("current")
_WingCfgProfl2tpv3RouterId_Type = DisplayString
_WingCfgProfl2tpv3RouterId_Object = MibTableColumn
wingCfgProfl2tpv3RouterId = _WingCfgProfl2tpv3RouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 1, 1, 2),
    _WingCfgProfl2tpv3RouterId_Type()
)
wingCfgProfl2tpv3RouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3RouterId.setStatus("current")
_WingCfgProfl2tpv3HostName_Type = DisplayString
_WingCfgProfl2tpv3HostName_Object = MibTableColumn
wingCfgProfl2tpv3HostName = _WingCfgProfl2tpv3HostName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 1, 1, 3),
    _WingCfgProfl2tpv3HostName_Type()
)
wingCfgProfl2tpv3HostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3HostName.setStatus("current")
_WingCfgProfl2tpv3InterTunnelBridging_Type = TruthValue
_WingCfgProfl2tpv3InterTunnelBridging_Object = MibTableColumn
wingCfgProfl2tpv3InterTunnelBridging = _WingCfgProfl2tpv3InterTunnelBridging_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 1, 1, 4),
    _WingCfgProfl2tpv3InterTunnelBridging_Type()
)
wingCfgProfl2tpv3InterTunnelBridging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3InterTunnelBridging.setStatus("current")
_WingCfgProfl2tpv3TunnelTable_Object = MibTable
wingCfgProfl2tpv3TunnelTable = _WingCfgProfl2tpv3TunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2)
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelTable.setStatus("current")
_WingCfgProfl2tpv3TunnelEntry_Object = MibTableRow
wingCfgProfl2tpv3TunnelEntry = _WingCfgProfl2tpv3TunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2, 1)
)
wingCfgProfl2tpv3TunnelEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3TunnelName"),
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelEntry.setStatus("current")
_WingCfgProfl2tpv3TunnelName_Type = WingIdentifier
_WingCfgProfl2tpv3TunnelName_Object = MibTableColumn
wingCfgProfl2tpv3TunnelName = _WingCfgProfl2tpv3TunnelName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2, 1, 1),
    _WingCfgProfl2tpv3TunnelName_Type()
)
wingCfgProfl2tpv3TunnelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelName.setStatus("current")
_WingCfgProfl2tpv3TunnelLocalIpAddrss_Type = DisplayString
_WingCfgProfl2tpv3TunnelLocalIpAddrss_Object = MibTableColumn
wingCfgProfl2tpv3TunnelLocalIpAddrss = _WingCfgProfl2tpv3TunnelLocalIpAddrss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2, 1, 3),
    _WingCfgProfl2tpv3TunnelLocalIpAddrss_Type()
)
wingCfgProfl2tpv3TunnelLocalIpAddrss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelLocalIpAddrss.setStatus("current")
_WingCfgProfl2tpv3TunnelMtu_Type = Unsigned32
_WingCfgProfl2tpv3TunnelMtu_Object = MibTableColumn
wingCfgProfl2tpv3TunnelMtu = _WingCfgProfl2tpv3TunnelMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2, 1, 4),
    _WingCfgProfl2tpv3TunnelMtu_Type()
)
wingCfgProfl2tpv3TunnelMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelMtu.setStatus("current")
_WingCfgProfl2tpv3TunnelUseTunnelPolicy_Type = DisplayString
_WingCfgProfl2tpv3TunnelUseTunnelPolicy_Object = MibTableColumn
wingCfgProfl2tpv3TunnelUseTunnelPolicy = _WingCfgProfl2tpv3TunnelUseTunnelPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2, 1, 5),
    _WingCfgProfl2tpv3TunnelUseTunnelPolicy_Type()
)
wingCfgProfl2tpv3TunnelUseTunnelPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelUseTunnelPolicy.setStatus("current")
_WingCfgProfl2tpv3TunnelHostname_Type = DisplayString
_WingCfgProfl2tpv3TunnelHostname_Object = MibTableColumn
wingCfgProfl2tpv3TunnelHostname = _WingCfgProfl2tpv3TunnelHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2, 1, 6),
    _WingCfgProfl2tpv3TunnelHostname_Type()
)
wingCfgProfl2tpv3TunnelHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelHostname.setStatus("current")
_WingCfgProfl2tpv3TunnelRouterId_Type = DisplayString
_WingCfgProfl2tpv3TunnelRouterId_Object = MibTableColumn
wingCfgProfl2tpv3TunnelRouterId = _WingCfgProfl2tpv3TunnelRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 2, 1, 7),
    _WingCfgProfl2tpv3TunnelRouterId_Type()
)
wingCfgProfl2tpv3TunnelRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelRouterId.setStatus("current")
_WingCfgProfl2tpv3TunnelPeerTable_Object = MibTable
wingCfgProfl2tpv3TunnelPeerTable = _WingCfgProfl2tpv3TunnelPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3)
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerTable.setStatus("current")
_WingCfgProfl2tpv3TunnelPeerEntry_Object = MibTableRow
wingCfgProfl2tpv3TunnelPeerEntry = _WingCfgProfl2tpv3TunnelPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3, 1)
)
wingCfgProfl2tpv3TunnelPeerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3TunnelName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3TunnelPeerId"),
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerEntry.setStatus("current")


class _WingCfgProfl2tpv3TunnelPeerId_Type(Unsigned32):
    """Custom type wingCfgProfl2tpv3TunnelPeerId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgProfl2tpv3TunnelPeerId_Type.__name__ = "Unsigned32"
_WingCfgProfl2tpv3TunnelPeerId_Object = MibTableColumn
wingCfgProfl2tpv3TunnelPeerId = _WingCfgProfl2tpv3TunnelPeerId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3, 1, 1),
    _WingCfgProfl2tpv3TunnelPeerId_Type()
)
wingCfgProfl2tpv3TunnelPeerId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerId.setStatus("current")
_WingCfgProfl2tpv3TunnelPeerIp_Type = DisplayString
_WingCfgProfl2tpv3TunnelPeerIp_Object = MibTableColumn
wingCfgProfl2tpv3TunnelPeerIp = _WingCfgProfl2tpv3TunnelPeerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3, 1, 3),
    _WingCfgProfl2tpv3TunnelPeerIp_Type()
)
wingCfgProfl2tpv3TunnelPeerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerIp.setStatus("current")
_WingCfgProfl2tpv3TunnelPeerHostName_Type = DisplayString
_WingCfgProfl2tpv3TunnelPeerHostName_Object = MibTableColumn
wingCfgProfl2tpv3TunnelPeerHostName = _WingCfgProfl2tpv3TunnelPeerHostName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3, 1, 4),
    _WingCfgProfl2tpv3TunnelPeerHostName_Type()
)
wingCfgProfl2tpv3TunnelPeerHostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerHostName.setStatus("current")
_WingCfgProfl2tpv3TunnelPeerRouterId_Type = DisplayString
_WingCfgProfl2tpv3TunnelPeerRouterId_Object = MibTableColumn
wingCfgProfl2tpv3TunnelPeerRouterId = _WingCfgProfl2tpv3TunnelPeerRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3, 1, 5),
    _WingCfgProfl2tpv3TunnelPeerRouterId_Type()
)
wingCfgProfl2tpv3TunnelPeerRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerRouterId.setStatus("current")
_WingCfgProfl2tpv3TunnelPeerEncapsulation_Type = DisplayString
_WingCfgProfl2tpv3TunnelPeerEncapsulation_Object = MibTableColumn
wingCfgProfl2tpv3TunnelPeerEncapsulation = _WingCfgProfl2tpv3TunnelPeerEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3, 1, 6),
    _WingCfgProfl2tpv3TunnelPeerEncapsulation_Type()
)
wingCfgProfl2tpv3TunnelPeerEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerEncapsulation.setStatus("current")
_WingCfgProfl2tpv3TunnelPeerUDPPort_Type = Unsigned32
_WingCfgProfl2tpv3TunnelPeerUDPPort_Object = MibTableColumn
wingCfgProfl2tpv3TunnelPeerUDPPort = _WingCfgProfl2tpv3TunnelPeerUDPPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 3, 1, 7),
    _WingCfgProfl2tpv3TunnelPeerUDPPort_Type()
)
wingCfgProfl2tpv3TunnelPeerUDPPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelPeerUDPPort.setStatus("current")
_WingCfgProfl2tpv3TunnelSessionTable_Object = MibTable
wingCfgProfl2tpv3TunnelSessionTable = _WingCfgProfl2tpv3TunnelSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 4)
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelSessionTable.setStatus("current")
_WingCfgProfl2tpv3TunnelSessionEntry_Object = MibTableRow
wingCfgProfl2tpv3TunnelSessionEntry = _WingCfgProfl2tpv3TunnelSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 4, 1)
)
wingCfgProfl2tpv3TunnelSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3TunnelName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3TunnelSessionName"),
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelSessionEntry.setStatus("current")
_WingCfgProfl2tpv3TunnelSessionName_Type = WingIdentifier
_WingCfgProfl2tpv3TunnelSessionName_Object = MibTableColumn
wingCfgProfl2tpv3TunnelSessionName = _WingCfgProfl2tpv3TunnelSessionName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 4, 1, 1),
    _WingCfgProfl2tpv3TunnelSessionName_Type()
)
wingCfgProfl2tpv3TunnelSessionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelSessionName.setStatus("current")
_WingCfgProfl2tpv3TunnelSessionPseudoWireId_Type = Unsigned32
_WingCfgProfl2tpv3TunnelSessionPseudoWireId_Object = MibTableColumn
wingCfgProfl2tpv3TunnelSessionPseudoWireId = _WingCfgProfl2tpv3TunnelSessionPseudoWireId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 4, 1, 3),
    _WingCfgProfl2tpv3TunnelSessionPseudoWireId_Type()
)
wingCfgProfl2tpv3TunnelSessionPseudoWireId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelSessionPseudoWireId.setStatus("current")
_WingCfgProfl2tpv3TunnelSessionTrafficSourceType_Type = DisplayString
_WingCfgProfl2tpv3TunnelSessionTrafficSourceType_Object = MibTableColumn
wingCfgProfl2tpv3TunnelSessionTrafficSourceType = _WingCfgProfl2tpv3TunnelSessionTrafficSourceType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 4, 1, 4),
    _WingCfgProfl2tpv3TunnelSessionTrafficSourceType_Type()
)
wingCfgProfl2tpv3TunnelSessionTrafficSourceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelSessionTrafficSourceType.setStatus("current")
_WingCfgProfl2tpv3TunnelSessionTrafficSourceValue_Type = Unsigned32
_WingCfgProfl2tpv3TunnelSessionTrafficSourceValue_Object = MibTableColumn
wingCfgProfl2tpv3TunnelSessionTrafficSourceValue = _WingCfgProfl2tpv3TunnelSessionTrafficSourceValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 4, 1, 5),
    _WingCfgProfl2tpv3TunnelSessionTrafficSourceValue_Type()
)
wingCfgProfl2tpv3TunnelSessionTrafficSourceValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelSessionTrafficSourceValue.setStatus("current")
_WingCfgProfl2tpv3TunnelSessionNativeVlan_Type = DisplayString
_WingCfgProfl2tpv3TunnelSessionNativeVlan_Object = MibTableColumn
wingCfgProfl2tpv3TunnelSessionNativeVlan = _WingCfgProfl2tpv3TunnelSessionNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 4, 1, 6),
    _WingCfgProfl2tpv3TunnelSessionNativeVlan_Type()
)
wingCfgProfl2tpv3TunnelSessionNativeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3TunnelSessionNativeVlan.setStatus("current")
_WingCfgProfl2tpv3ManualSessionTable_Object = MibTable
wingCfgProfl2tpv3ManualSessionTable = _WingCfgProfl2tpv3ManualSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5)
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionTable.setStatus("current")
_WingCfgProfl2tpv3ManualSessionEntry_Object = MibTableRow
wingCfgProfl2tpv3ManualSessionEntry = _WingCfgProfl2tpv3ManualSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1)
)
wingCfgProfl2tpv3ManualSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3ManualSessionName"),
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionEntry.setStatus("current")
_WingCfgProfl2tpv3ManualSessionName_Type = WingIdentifier
_WingCfgProfl2tpv3ManualSessionName_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionName = _WingCfgProfl2tpv3ManualSessionName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 1),
    _WingCfgProfl2tpv3ManualSessionName_Type()
)
wingCfgProfl2tpv3ManualSessionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionName.setStatus("current")
_WingCfgProfl2tpv3ManualSessionLocalIpAddr_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionLocalIpAddr_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionLocalIpAddr = _WingCfgProfl2tpv3ManualSessionLocalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 3),
    _WingCfgProfl2tpv3ManualSessionLocalIpAddr_Type()
)
wingCfgProfl2tpv3ManualSessionLocalIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionLocalIpAddr.setStatus("current")
_WingCfgProfl2tpv3ManualSessionPeerIp_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionPeerIp_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionPeerIp = _WingCfgProfl2tpv3ManualSessionPeerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 4),
    _WingCfgProfl2tpv3ManualSessionPeerIp_Type()
)
wingCfgProfl2tpv3ManualSessionPeerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionPeerIp.setStatus("current")
_WingCfgProfl2tpv3ManualSessionPeerEncapsulation_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionPeerEncapsulation_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionPeerEncapsulation = _WingCfgProfl2tpv3ManualSessionPeerEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 5),
    _WingCfgProfl2tpv3ManualSessionPeerEncapsulation_Type()
)
wingCfgProfl2tpv3ManualSessionPeerEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionPeerEncapsulation.setStatus("current")
_WingCfgProfl2tpv3ManualSessionPeerUDPPort_Type = Unsigned32
_WingCfgProfl2tpv3ManualSessionPeerUDPPort_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionPeerUDPPort = _WingCfgProfl2tpv3ManualSessionPeerUDPPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 6),
    _WingCfgProfl2tpv3ManualSessionPeerUDPPort_Type()
)
wingCfgProfl2tpv3ManualSessionPeerUDPPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionPeerUDPPort.setStatus("current")
_WingCfgProfl2tpv3ManualSessionMtu_Type = Unsigned32
_WingCfgProfl2tpv3ManualSessionMtu_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionMtu = _WingCfgProfl2tpv3ManualSessionMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 7),
    _WingCfgProfl2tpv3ManualSessionMtu_Type()
)
wingCfgProfl2tpv3ManualSessionMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionMtu.setStatus("current")
_WingCfgProfl2tpv3ManualSessionTrafficSource_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionTrafficSource_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionTrafficSource = _WingCfgProfl2tpv3ManualSessionTrafficSource_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 8),
    _WingCfgProfl2tpv3ManualSessionTrafficSource_Type()
)
wingCfgProfl2tpv3ManualSessionTrafficSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionTrafficSource.setStatus("current")
_WingCfgProfl2tpv3ManualSessionTrafficSourceValue_Type = Unsigned32
_WingCfgProfl2tpv3ManualSessionTrafficSourceValue_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionTrafficSourceValue = _WingCfgProfl2tpv3ManualSessionTrafficSourceValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 9),
    _WingCfgProfl2tpv3ManualSessionTrafficSourceValue_Type()
)
wingCfgProfl2tpv3ManualSessionTrafficSourceValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionTrafficSourceValue.setStatus("current")
_WingCfgProfl2tpv3ManualSessionNativeVlan_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionNativeVlan_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionNativeVlan = _WingCfgProfl2tpv3ManualSessionNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 10),
    _WingCfgProfl2tpv3ManualSessionNativeVlan_Type()
)
wingCfgProfl2tpv3ManualSessionNativeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionNativeVlan.setStatus("current")
_WingCfgProfl2tpv3ManualSessionLocalSessionId_Type = Unsigned32
_WingCfgProfl2tpv3ManualSessionLocalSessionId_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionLocalSessionId = _WingCfgProfl2tpv3ManualSessionLocalSessionId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 11),
    _WingCfgProfl2tpv3ManualSessionLocalSessionId_Type()
)
wingCfgProfl2tpv3ManualSessionLocalSessionId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionLocalSessionId.setStatus("current")
_WingCfgProfl2tpv3ManualSessionRemoteSessionId_Type = Unsigned32
_WingCfgProfl2tpv3ManualSessionRemoteSessionId_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionRemoteSessionId = _WingCfgProfl2tpv3ManualSessionRemoteSessionId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 5, 1, 12),
    _WingCfgProfl2tpv3ManualSessionRemoteSessionId_Type()
)
wingCfgProfl2tpv3ManualSessionRemoteSessionId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionRemoteSessionId.setStatus("current")
_WingCfgProfl2tpv3ManualSessionCookieTable_Object = MibTable
wingCfgProfl2tpv3ManualSessionCookieTable = _WingCfgProfl2tpv3ManualSessionCookieTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 6)
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionCookieTable.setStatus("current")
_WingCfgProfl2tpv3ManualSessionCookieEntry_Object = MibTableRow
wingCfgProfl2tpv3ManualSessionCookieEntry = _WingCfgProfl2tpv3ManualSessionCookieEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 6, 1)
)
wingCfgProfl2tpv3ManualSessionCookieEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3ManualSessionName"),
    (0, "WING-MIB", "wingCfgProfl2tpv3ManualSessionCookieEndpoint"),
)
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionCookieEntry.setStatus("current")
_WingCfgProfl2tpv3ManualSessionCookieEndpoint_Type = WingIdentifier
_WingCfgProfl2tpv3ManualSessionCookieEndpoint_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionCookieEndpoint = _WingCfgProfl2tpv3ManualSessionCookieEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 6, 1, 1),
    _WingCfgProfl2tpv3ManualSessionCookieEndpoint_Type()
)
wingCfgProfl2tpv3ManualSessionCookieEndpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionCookieEndpoint.setStatus("current")
_WingCfgProfl2tpv3ManualSessionCookieSize_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionCookieSize_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionCookieSize = _WingCfgProfl2tpv3ManualSessionCookieSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 6, 1, 3),
    _WingCfgProfl2tpv3ManualSessionCookieSize_Type()
)
wingCfgProfl2tpv3ManualSessionCookieSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionCookieSize.setStatus("current")
_WingCfgProfl2tpv3ManualSessionCookieVal1_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionCookieVal1_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionCookieVal1 = _WingCfgProfl2tpv3ManualSessionCookieVal1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 6, 1, 4),
    _WingCfgProfl2tpv3ManualSessionCookieVal1_Type()
)
wingCfgProfl2tpv3ManualSessionCookieVal1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionCookieVal1.setStatus("current")
_WingCfgProfl2tpv3ManualSessionCookieVal2_Type = DisplayString
_WingCfgProfl2tpv3ManualSessionCookieVal2_Object = MibTableColumn
wingCfgProfl2tpv3ManualSessionCookieVal2 = _WingCfgProfl2tpv3ManualSessionCookieVal2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 24, 6, 1, 5),
    _WingCfgProfl2tpv3ManualSessionCookieVal2_Type()
)
wingCfgProfl2tpv3ManualSessionCookieVal2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfl2tpv3ManualSessionCookieVal2.setStatus("current")
_WingCfgProfMcx_ObjectIdentity = ObjectIdentity
wingCfgProfMcx = _WingCfgProfMcx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25)
)
_WingCfgProfMeshpointDevTable_Object = MibTable
wingCfgProfMeshpointDevTable = _WingCfgProfMeshpointDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1)
)
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevTable.setStatus("current")
_WingCfgProfMeshpointDevEntry_Object = MibTableRow
wingCfgProfMeshpointDevEntry = _WingCfgProfMeshpointDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1, 1)
)
wingCfgProfMeshpointDevEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgProfName"),
    (0, "WING-MIB", "wingCfgProfMeshpointDevName"),
)
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevEntry.setStatus("current")
_WingCfgProfMeshpointDevName_Type = WingIdentifier
_WingCfgProfMeshpointDevName_Object = MibTableColumn
wingCfgProfMeshpointDevName = _WingCfgProfMeshpointDevName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1, 1, 1),
    _WingCfgProfMeshpointDevName_Type()
)
wingCfgProfMeshpointDevName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevName.setStatus("current")


class _WingCfgProfMeshpointDevIsRootDev_Type(DisplayString):
    """Custom type wingCfgProfMeshpointDevIsRootDev based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfMeshpointDevIsRootDev_Type.__name__ = "DisplayString"
_WingCfgProfMeshpointDevIsRootDev_Object = MibTableColumn
wingCfgProfMeshpointDevIsRootDev = _WingCfgProfMeshpointDevIsRootDev_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1, 1, 3),
    _WingCfgProfMeshpointDevIsRootDev_Type()
)
wingCfgProfMeshpointDevIsRootDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevIsRootDev.setStatus("current")
_WingCfgProfMeshpointDevPreferredRoot_Type = DisplayString
_WingCfgProfMeshpointDevPreferredRoot_Object = MibTableColumn
wingCfgProfMeshpointDevPreferredRoot = _WingCfgProfMeshpointDevPreferredRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1, 1, 4),
    _WingCfgProfMeshpointDevPreferredRoot_Type()
)
wingCfgProfMeshpointDevPreferredRoot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevPreferredRoot.setStatus("current")
_WingCfgProfMeshpointDevPreferredNeighbor_Type = MacAddress
_WingCfgProfMeshpointDevPreferredNeighbor_Object = MibTableColumn
wingCfgProfMeshpointDevPreferredNeighbor = _WingCfgProfMeshpointDevPreferredNeighbor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1, 1, 5),
    _WingCfgProfMeshpointDevPreferredNeighbor_Type()
)
wingCfgProfMeshpointDevPreferredNeighbor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevPreferredNeighbor.setStatus("current")


class _WingCfgProfMeshpointDevPreferredIf_Type(DisplayString):
    """Custom type wingCfgProfMeshpointDevPreferredIf based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfMeshpointDevPreferredIf_Type.__name__ = "DisplayString"
_WingCfgProfMeshpointDevPreferredIf_Object = MibTableColumn
wingCfgProfMeshpointDevPreferredIf = _WingCfgProfMeshpointDevPreferredIf_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1, 1, 6),
    _WingCfgProfMeshpointDevPreferredIf_Type()
)
wingCfgProfMeshpointDevPreferredIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevPreferredIf.setStatus("current")


class _WingCfgProfMeshpointDevPathMethod_Type(DisplayString):
    """Custom type wingCfgProfMeshpointDevPathMethod based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgProfMeshpointDevPathMethod_Type.__name__ = "DisplayString"
_WingCfgProfMeshpointDevPathMethod_Object = MibTableColumn
wingCfgProfMeshpointDevPathMethod = _WingCfgProfMeshpointDevPathMethod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 16, 25, 1, 1, 7),
    _WingCfgProfMeshpointDevPathMethod_Type()
)
wingCfgProfMeshpointDevPathMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgProfMeshpointDevPathMethod.setStatus("current")
_WingCfgRfd_ObjectIdentity = ObjectIdentity
wingCfgRfd = _WingCfgRfd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17)
)
_WingCfgRfdTable_Object = MibTable
wingCfgRfdTable = _WingCfgRfdTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1)
)
if mibBuilder.loadTexts:
    wingCfgRfdTable.setStatus("current")
_WingCfgRfdEntry_Object = MibTableRow
wingCfgRfdEntry = _WingCfgRfdEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1)
)
wingCfgRfdEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRfdName"),
)
if mibBuilder.loadTexts:
    wingCfgRfdEntry.setStatus("current")
_WingCfgRfdName_Type = WingIdentifier
_WingCfgRfdName_Object = MibTableColumn
wingCfgRfdName = _WingCfgRfdName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 1),
    _WingCfgRfdName_Type()
)
wingCfgRfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRfdName.setStatus("current")


class _WingCfgRfdLocation_Type(DisplayString):
    """Custom type wingCfgRfdLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgRfdLocation_Type.__name__ = "DisplayString"
_WingCfgRfdLocation_Object = MibTableColumn
wingCfgRfdLocation = _WingCfgRfdLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 3),
    _WingCfgRfdLocation_Type()
)
wingCfgRfdLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdLocation.setStatus("current")


class _WingCfgRfdContact_Type(DisplayString):
    """Custom type wingCfgRfdContact based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgRfdContact_Type.__name__ = "DisplayString"
_WingCfgRfdContact_Object = MibTableColumn
wingCfgRfdContact = _WingCfgRfdContact_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 4),
    _WingCfgRfdContact_Type()
)
wingCfgRfdContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdContact.setStatus("current")
_WingCfgRfdTimezone_Type = DisplayString
_WingCfgRfdTimezone_Object = MibTableColumn
wingCfgRfdTimezone = _WingCfgRfdTimezone_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 5),
    _WingCfgRfdTimezone_Type()
)
wingCfgRfdTimezone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdTimezone.setStatus("current")
_WingCfgRfdCountryCode_Type = DisplayString
_WingCfgRfdCountryCode_Object = MibTableColumn
wingCfgRfdCountryCode = _WingCfgRfdCountryCode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 6),
    _WingCfgRfdCountryCode_Type()
)
wingCfgRfdCountryCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdCountryCode.setStatus("current")
_WingCfgRfdSmartRfPolicy_Type = WingIdentifier
_WingCfgRfdSmartRfPolicy_Object = MibTableColumn
wingCfgRfdSmartRfPolicy = _WingCfgRfdSmartRfPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 7),
    _WingCfgRfdSmartRfPolicy_Type()
)
wingCfgRfdSmartRfPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdSmartRfPolicy.setStatus("current")
_WingCfgRfdWipsPolicyName_Type = WingIdentifier
_WingCfgRfdWipsPolicyName_Object = MibTableColumn
wingCfgRfdWipsPolicyName = _WingCfgRfdWipsPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 8),
    _WingCfgRfdWipsPolicyName_Type()
)
wingCfgRfdWipsPolicyName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdWipsPolicyName.setStatus("current")


class _WingCfgRfdNocUpdateInterval_Type(Unsigned32):
    """Custom type wingCfgRfdNocUpdateInterval based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 3600),
    )


_WingCfgRfdNocUpdateInterval_Type.__name__ = "Unsigned32"
_WingCfgRfdNocUpdateInterval_Object = MibTableColumn
wingCfgRfdNocUpdateInterval = _WingCfgRfdNocUpdateInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 9),
    _WingCfgRfdNocUpdateInterval_Type()
)
wingCfgRfdNocUpdateInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdNocUpdateInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgRfdNocUpdateInterval.setUnits("seconds")


class _WingCfgRfdControlVlan_Type(Unsigned32):
    """Custom type wingCfgRfdControlVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgRfdControlVlan_Type.__name__ = "Unsigned32"
_WingCfgRfdControlVlan_Object = MibTableColumn
wingCfgRfdControlVlan = _WingCfgRfdControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 10),
    _WingCfgRfdControlVlan_Type()
)
wingCfgRfdControlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdControlVlan.setStatus("current")


class _WingCfgRfdSmartscanChanlistDynamic_Type(TruthValue):
    """Custom type wingCfgRfdSmartscanChanlistDynamic based on TruthValue"""
    defaultValue = 2


_WingCfgRfdSmartscanChanlistDynamic_Type.__name__ = "TruthValue"
_WingCfgRfdSmartscanChanlistDynamic_Object = MibTableColumn
wingCfgRfdSmartscanChanlistDynamic = _WingCfgRfdSmartscanChanlistDynamic_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 11),
    _WingCfgRfdSmartscanChanlistDynamic_Type()
)
wingCfgRfdSmartscanChanlistDynamic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdSmartscanChanlistDynamic.setStatus("current")


class _WingCfgRfdStatsUpdateInterval_Type(Unsigned32):
    """Custom type wingCfgRfdStatsUpdateInterval based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(5, 300),
    )


_WingCfgRfdStatsUpdateInterval_Type.__name__ = "Unsigned32"
_WingCfgRfdStatsUpdateInterval_Object = MibTableColumn
wingCfgRfdStatsUpdateInterval = _WingCfgRfdStatsUpdateInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 1, 1, 12),
    _WingCfgRfdStatsUpdateInterval_Type()
)
wingCfgRfdStatsUpdateInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdStatsUpdateInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgRfdStatsUpdateInterval.setUnits("seconds")
_WingCfgRfdSensorSvrTable_Object = MibTable
wingCfgRfdSensorSvrTable = _WingCfgRfdSensorSvrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 2)
)
if mibBuilder.loadTexts:
    wingCfgRfdSensorSvrTable.setStatus("current")
_WingCfgRfdSensorSvrEntry_Object = MibTableRow
wingCfgRfdSensorSvrEntry = _WingCfgRfdSensorSvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 2, 1)
)
wingCfgRfdSensorSvrEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRfdName"),
    (0, "WING-MIB", "wingCfgRfdSensorSvrIdx"),
)
if mibBuilder.loadTexts:
    wingCfgRfdSensorSvrEntry.setStatus("current")


class _WingCfgRfdSensorSvrIdx_Type(Unsigned32):
    """Custom type wingCfgRfdSensorSvrIdx based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WingCfgRfdSensorSvrIdx_Type.__name__ = "Unsigned32"
_WingCfgRfdSensorSvrIdx_Object = MibTableColumn
wingCfgRfdSensorSvrIdx = _WingCfgRfdSensorSvrIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 2, 1, 1),
    _WingCfgRfdSensorSvrIdx_Type()
)
wingCfgRfdSensorSvrIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRfdSensorSvrIdx.setStatus("current")
_WingCfgRfdSensorSvrIp_Type = DisplayString
_WingCfgRfdSensorSvrIp_Object = MibTableColumn
wingCfgRfdSensorSvrIp = _WingCfgRfdSensorSvrIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 2, 1, 3),
    _WingCfgRfdSensorSvrIp_Type()
)
wingCfgRfdSensorSvrIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdSensorSvrIp.setStatus("current")


class _WingCfgRfdSensorSvrPort_Type(Unsigned32):
    """Custom type wingCfgRfdSensorSvrPort based on Unsigned32"""
    defaultValue = 443

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgRfdSensorSvrPort_Type.__name__ = "Unsigned32"
_WingCfgRfdSensorSvrPort_Object = MibTableColumn
wingCfgRfdSensorSvrPort = _WingCfgRfdSensorSvrPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 2, 1, 4),
    _WingCfgRfdSensorSvrPort_Type()
)
wingCfgRfdSensorSvrPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdSensorSvrPort.setStatus("current")
_WingCfgRfdWlan_ObjectIdentity = ObjectIdentity
wingCfgRfdWlan = _WingCfgRfdWlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3)
)
_WingCfgRfdWlanSsidOverrideTable_Object = MibTable
wingCfgRfdWlanSsidOverrideTable = _WingCfgRfdWlanSsidOverrideTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 1)
)
if mibBuilder.loadTexts:
    wingCfgRfdWlanSsidOverrideTable.setStatus("current")
_WingCfgRfdWlanSsidOverrideEntry_Object = MibTableRow
wingCfgRfdWlanSsidOverrideEntry = _WingCfgRfdWlanSsidOverrideEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 1, 1)
)
wingCfgRfdWlanSsidOverrideEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRfdName"),
    (0, "WING-MIB", "wingCfgRfdWlanSsidOverrideWlan"),
)
if mibBuilder.loadTexts:
    wingCfgRfdWlanSsidOverrideEntry.setStatus("current")
_WingCfgRfdWlanSsidOverrideWlan_Type = WingIdentifier
_WingCfgRfdWlanSsidOverrideWlan_Object = MibTableColumn
wingCfgRfdWlanSsidOverrideWlan = _WingCfgRfdWlanSsidOverrideWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 1, 1, 1),
    _WingCfgRfdWlanSsidOverrideWlan_Type()
)
wingCfgRfdWlanSsidOverrideWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRfdWlanSsidOverrideWlan.setStatus("current")


class _WingCfgRfdWlanSsidOverrideSsid_Type(DisplayString):
    """Custom type wingCfgRfdWlanSsidOverrideSsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgRfdWlanSsidOverrideSsid_Type.__name__ = "DisplayString"
_WingCfgRfdWlanSsidOverrideSsid_Object = MibTableColumn
wingCfgRfdWlanSsidOverrideSsid = _WingCfgRfdWlanSsidOverrideSsid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 1, 1, 3),
    _WingCfgRfdWlanSsidOverrideSsid_Type()
)
wingCfgRfdWlanSsidOverrideSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdWlanSsidOverrideSsid.setStatus("current")
_WingCfgRfdWlanVlanOverrideTable_Object = MibTable
wingCfgRfdWlanVlanOverrideTable = _WingCfgRfdWlanVlanOverrideTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 2)
)
if mibBuilder.loadTexts:
    wingCfgRfdWlanVlanOverrideTable.setStatus("current")
_WingCfgRfdWlanVlanOverrideEntry_Object = MibTableRow
wingCfgRfdWlanVlanOverrideEntry = _WingCfgRfdWlanVlanOverrideEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 2, 1)
)
wingCfgRfdWlanVlanOverrideEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRfdName"),
    (0, "WING-MIB", "wingCfgRfdWlanVlanOverrideWlan"),
)
if mibBuilder.loadTexts:
    wingCfgRfdWlanVlanOverrideEntry.setStatus("current")
_WingCfgRfdWlanVlanOverrideWlan_Type = WingIdentifier
_WingCfgRfdWlanVlanOverrideWlan_Object = MibTableColumn
wingCfgRfdWlanVlanOverrideWlan = _WingCfgRfdWlanVlanOverrideWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 2, 1, 1),
    _WingCfgRfdWlanVlanOverrideWlan_Type()
)
wingCfgRfdWlanVlanOverrideWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRfdWlanVlanOverrideWlan.setStatus("current")
_WingCfgRfdWlanVlanOverrideInstTable_Object = MibTable
wingCfgRfdWlanVlanOverrideInstTable = _WingCfgRfdWlanVlanOverrideInstTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 3)
)
if mibBuilder.loadTexts:
    wingCfgRfdWlanVlanOverrideInstTable.setStatus("current")
_WingCfgRfdWlanVlanOverrideInstEntry_Object = MibTableRow
wingCfgRfdWlanVlanOverrideInstEntry = _WingCfgRfdWlanVlanOverrideInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 3, 1)
)
wingCfgRfdWlanVlanOverrideInstEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRfdName"),
    (0, "WING-MIB", "wingCfgRfdWlanVlanOverrideWlan"),
    (0, "WING-MIB", "wingCfgRfdWlanVlanOverrideInstVlan"),
)
if mibBuilder.loadTexts:
    wingCfgRfdWlanVlanOverrideInstEntry.setStatus("current")


class _WingCfgRfdWlanVlanOverrideInstVlan_Type(Unsigned32):
    """Custom type wingCfgRfdWlanVlanOverrideInstVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgRfdWlanVlanOverrideInstVlan_Type.__name__ = "Unsigned32"
_WingCfgRfdWlanVlanOverrideInstVlan_Object = MibTableColumn
wingCfgRfdWlanVlanOverrideInstVlan = _WingCfgRfdWlanVlanOverrideInstVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 3, 1, 1),
    _WingCfgRfdWlanVlanOverrideInstVlan_Type()
)
wingCfgRfdWlanVlanOverrideInstVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRfdWlanVlanOverrideInstVlan.setStatus("current")


class _WingCfgRfdWlanVlanOverrideInstLimit_Type(Unsigned32):
    """Custom type wingCfgRfdWlanVlanOverrideInstLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8192),
    )


_WingCfgRfdWlanVlanOverrideInstLimit_Type.__name__ = "Unsigned32"
_WingCfgRfdWlanVlanOverrideInstLimit_Object = MibTableColumn
wingCfgRfdWlanVlanOverrideInstLimit = _WingCfgRfdWlanVlanOverrideInstLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 3, 3, 1, 3),
    _WingCfgRfdWlanVlanOverrideInstLimit_Type()
)
wingCfgRfdWlanVlanOverrideInstLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdWlanVlanOverrideInstLimit.setStatus("current")
_WingCfgRfdStatsWindowTable_Object = MibTable
wingCfgRfdStatsWindowTable = _WingCfgRfdStatsWindowTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 4)
)
if mibBuilder.loadTexts:
    wingCfgRfdStatsWindowTable.setStatus("current")
_WingCfgRfdStatsWindowEntry_Object = MibTableRow
wingCfgRfdStatsWindowEntry = _WingCfgRfdStatsWindowEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 4, 1)
)
wingCfgRfdStatsWindowEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRfdName"),
    (0, "WING-MIB", "wingCfgRfdStatsWindowIdx"),
)
if mibBuilder.loadTexts:
    wingCfgRfdStatsWindowEntry.setStatus("current")


class _WingCfgRfdStatsWindowIdx_Type(Unsigned32):
    """Custom type wingCfgRfdStatsWindowIdx based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgRfdStatsWindowIdx_Type.__name__ = "Unsigned32"
_WingCfgRfdStatsWindowIdx_Object = MibTableColumn
wingCfgRfdStatsWindowIdx = _WingCfgRfdStatsWindowIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 4, 1, 1),
    _WingCfgRfdStatsWindowIdx_Type()
)
wingCfgRfdStatsWindowIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRfdStatsWindowIdx.setStatus("current")


class _WingCfgRfdStatsWindowSampleInterval_Type(Unsigned32):
    """Custom type wingCfgRfdStatsWindowSampleInterval based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 86640),
    )


_WingCfgRfdStatsWindowSampleInterval_Type.__name__ = "Unsigned32"
_WingCfgRfdStatsWindowSampleInterval_Object = MibTableColumn
wingCfgRfdStatsWindowSampleInterval = _WingCfgRfdStatsWindowSampleInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 4, 1, 3),
    _WingCfgRfdStatsWindowSampleInterval_Type()
)
wingCfgRfdStatsWindowSampleInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdStatsWindowSampleInterval.setStatus("current")


class _WingCfgRfdStatsWindowWindowSize_Type(Unsigned32):
    """Custom type wingCfgRfdStatsWindowWindowSize based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 100),
    )


_WingCfgRfdStatsWindowWindowSize_Type.__name__ = "Unsigned32"
_WingCfgRfdStatsWindowWindowSize_Object = MibTableColumn
wingCfgRfdStatsWindowWindowSize = _WingCfgRfdStatsWindowWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 17, 4, 1, 4),
    _WingCfgRfdStatsWindowWindowSize_Type()
)
wingCfgRfdStatsWindowWindowSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRfdStatsWindowWindowSize.setStatus("current")
_WingCfgDev_ObjectIdentity = ObjectIdentity
wingCfgDev = _WingCfgDev_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18)
)
_WingCfgDevTable_Object = MibTable
wingCfgDevTable = _WingCfgDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevTable.setStatus("current")
_WingCfgDevEntry_Object = MibTableRow
wingCfgDevEntry = _WingCfgDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1)
)
wingCfgDevEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevEntry.setStatus("current")
_WingCfgDevMac_Type = MacAddress
_WingCfgDevMac_Object = MibTableColumn
wingCfgDevMac = _WingCfgDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 1),
    _WingCfgDevMac_Type()
)
wingCfgDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevMac.setStatus("current")


class _WingCfgDevHostname_Type(DisplayString):
    """Custom type wingCfgDevHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgDevHostname_Type.__name__ = "DisplayString"
_WingCfgDevHostname_Object = MibTableColumn
wingCfgDevHostname = _WingCfgDevHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 3),
    _WingCfgDevHostname_Type()
)
wingCfgDevHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevHostname.setStatus("current")


class _WingCfgDevBuilding_Type(DisplayString):
    """Custom type wingCfgDevBuilding based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgDevBuilding_Type.__name__ = "DisplayString"
_WingCfgDevBuilding_Object = MibTableColumn
wingCfgDevBuilding = _WingCfgDevBuilding_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 4),
    _WingCfgDevBuilding_Type()
)
wingCfgDevBuilding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBuilding.setStatus("current")


class _WingCfgDevFloor_Type(DisplayString):
    """Custom type wingCfgDevFloor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingCfgDevFloor_Type.__name__ = "DisplayString"
_WingCfgDevFloor_Object = MibTableColumn
wingCfgDevFloor = _WingCfgDevFloor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 5),
    _WingCfgDevFloor_Type()
)
wingCfgDevFloor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevFloor.setStatus("current")


class _WingCfgDevNumRadios_Type(Unsigned32):
    """Custom type wingCfgDevNumRadios based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_WingCfgDevNumRadios_Type.__name__ = "Unsigned32"
_WingCfgDevNumRadios_Object = MibTableColumn
wingCfgDevNumRadios = _WingCfgDevNumRadios_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 6),
    _WingCfgDevNumRadios_Type()
)
wingCfgDevNumRadios.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevNumRadios.setStatus("current")
_WingCfgDevProfileName_Type = WingIdentifier
_WingCfgDevProfileName_Object = MibTableColumn
wingCfgDevProfileName = _WingCfgDevProfileName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 7),
    _WingCfgDevProfileName_Type()
)
wingCfgDevProfileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevProfileName.setStatus("current")
_WingCfgDevRfDomainName_Type = WingIdentifier
_WingCfgDevRfDomainName_Object = MibTableColumn
wingCfgDevRfDomainName = _WingCfgDevRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 8),
    _WingCfgDevRfDomainName_Type()
)
wingCfgDevRfDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevRfDomainName.setStatus("current")


class _WingCfgDevHttpsTrustpoint_Type(DisplayString):
    """Custom type wingCfgDevHttpsTrustpoint based on DisplayString"""
    defaultValue = OctetString("default-trustpoint")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgDevHttpsTrustpoint_Type.__name__ = "DisplayString"
_WingCfgDevHttpsTrustpoint_Object = MibTableColumn
wingCfgDevHttpsTrustpoint = _WingCfgDevHttpsTrustpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 9),
    _WingCfgDevHttpsTrustpoint_Type()
)
wingCfgDevHttpsTrustpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevHttpsTrustpoint.setStatus("current")


class _WingCfgDevRadiusCaTrustpoint_Type(DisplayString):
    """Custom type wingCfgDevRadiusCaTrustpoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgDevRadiusCaTrustpoint_Type.__name__ = "DisplayString"
_WingCfgDevRadiusCaTrustpoint_Object = MibTableColumn
wingCfgDevRadiusCaTrustpoint = _WingCfgDevRadiusCaTrustpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 10),
    _WingCfgDevRadiusCaTrustpoint_Type()
)
wingCfgDevRadiusCaTrustpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevRadiusCaTrustpoint.setStatus("current")


class _WingCfgDevRadiusServerTrustpoint_Type(DisplayString):
    """Custom type wingCfgDevRadiusServerTrustpoint based on DisplayString"""
    defaultValue = OctetString("default-trustpoint")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgDevRadiusServerTrustpoint_Type.__name__ = "DisplayString"
_WingCfgDevRadiusServerTrustpoint_Object = MibTableColumn
wingCfgDevRadiusServerTrustpoint = _WingCfgDevRadiusServerTrustpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 11),
    _WingCfgDevRadiusServerTrustpoint_Type()
)
wingCfgDevRadiusServerTrustpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevRadiusServerTrustpoint.setStatus("current")


class _WingCfgDevSshRsaKey_Type(WingIdentifier):
    """Custom type wingCfgDevSshRsaKey based on WingIdentifier"""
    defaultValue = OctetString("default_rsa_key")


_WingCfgDevSshRsaKey_Type.__name__ = "WingIdentifier"
_WingCfgDevSshRsaKey_Object = MibTableColumn
wingCfgDevSshRsaKey = _WingCfgDevSshRsaKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 12),
    _WingCfgDevSshRsaKey_Type()
)
wingCfgDevSshRsaKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevSshRsaKey.setStatus("current")


class _WingCfgDevHasOverrides_Type(TruthValue):
    """Custom type wingCfgDevHasOverrides based on TruthValue"""
    defaultValue = 2


_WingCfgDevHasOverrides_Type.__name__ = "TruthValue"
_WingCfgDevHasOverrides_Object = MibTableColumn
wingCfgDevHasOverrides = _WingCfgDevHasOverrides_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 13),
    _WingCfgDevHasOverrides_Type()
)
wingCfgDevHasOverrides.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevHasOverrides.setStatus("current")
_WingCfgDevTunnelController_Type = DisplayString
_WingCfgDevTunnelController_Object = MibTableColumn
wingCfgDevTunnelController = _WingCfgDevTunnelController_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 14),
    _WingCfgDevTunnelController_Type()
)
wingCfgDevTunnelController.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevTunnelController.setStatus("current")
_WingCfgDevPreferredTunnelController_Type = DisplayString
_WingCfgDevPreferredTunnelController_Object = MibTableColumn
wingCfgDevPreferredTunnelController = _WingCfgDevPreferredTunnelController_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 15),
    _WingCfgDevPreferredTunnelController_Type()
)
wingCfgDevPreferredTunnelController.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevPreferredTunnelController.setStatus("current")


class _WingCfgDevDot1xSysAuthCtrl_Type(TruthValue):
    """Custom type wingCfgDevDot1xSysAuthCtrl based on TruthValue"""
    defaultValue = 2


_WingCfgDevDot1xSysAuthCtrl_Type.__name__ = "TruthValue"
_WingCfgDevDot1xSysAuthCtrl_Object = MibTableColumn
wingCfgDevDot1xSysAuthCtrl = _WingCfgDevDot1xSysAuthCtrl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 16),
    _WingCfgDevDot1xSysAuthCtrl_Type()
)
wingCfgDevDot1xSysAuthCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot1xSysAuthCtrl.setStatus("current")


class _WingCfgDevDot1xGuestVlanCtrl_Type(TruthValue):
    """Custom type wingCfgDevDot1xGuestVlanCtrl based on TruthValue"""
    defaultValue = 2


_WingCfgDevDot1xGuestVlanCtrl_Type.__name__ = "TruthValue"
_WingCfgDevDot1xGuestVlanCtrl_Object = MibTableColumn
wingCfgDevDot1xGuestVlanCtrl = _WingCfgDevDot1xGuestVlanCtrl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 17),
    _WingCfgDevDot1xGuestVlanCtrl_Type()
)
wingCfgDevDot1xGuestVlanCtrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot1xGuestVlanCtrl.setStatus("current")
_WingCfgDevDot1xAaaPolicy_Type = WingIdentifier
_WingCfgDevDot1xAaaPolicy_Object = MibTableColumn
wingCfgDevDot1xAaaPolicy = _WingCfgDevDot1xAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 1, 1, 18),
    _WingCfgDevDot1xAaaPolicy_Type()
)
wingCfgDevDot1xAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot1xAaaPolicy.setStatus("current")
_WingCfgDevIf_ObjectIdentity = ObjectIdentity
wingCfgDevIf = _WingCfgDevIf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3)
)
_WingCfgDevIfTable_Object = MibTable
wingCfgDevIfTable = _WingCfgDevIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevIfTable.setStatus("current")
_WingCfgDevIfEntry_Object = MibTableRow
wingCfgDevIfEntry = _WingCfgDevIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1, 1)
)
wingCfgDevIfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfEntry.setStatus("current")
_WingCfgDevIfName_Type = WingIdentifier
_WingCfgDevIfName_Object = MibTableColumn
wingCfgDevIfName = _WingCfgDevIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1, 1, 1),
    _WingCfgDevIfName_Type()
)
wingCfgDevIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevIfName.setStatus("current")
_WingCfgDevIfDescription_Type = DisplayString
_WingCfgDevIfDescription_Object = MibTableColumn
wingCfgDevIfDescription = _WingCfgDevIfDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1, 1, 3),
    _WingCfgDevIfDescription_Type()
)
wingCfgDevIfDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDescription.setStatus("current")
_WingCfgDevIfType_Type = DisplayString
_WingCfgDevIfType_Object = MibTableColumn
wingCfgDevIfType = _WingCfgDevIfType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1, 1, 4),
    _WingCfgDevIfType_Type()
)
wingCfgDevIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfType.setStatus("current")


class _WingCfgDevIfShutdown_Type(TruthValue):
    """Custom type wingCfgDevIfShutdown based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfShutdown_Type.__name__ = "TruthValue"
_WingCfgDevIfShutdown_Object = MibTableColumn
wingCfgDevIfShutdown = _WingCfgDevIfShutdown_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1, 1, 5),
    _WingCfgDevIfShutdown_Type()
)
wingCfgDevIfShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfShutdown.setStatus("current")
_WingCfgDevIfIpInAcl_Type = WingIdentifier
_WingCfgDevIfIpInAcl_Object = MibTableColumn
wingCfgDevIfIpInAcl = _WingCfgDevIfIpInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1, 1, 6),
    _WingCfgDevIfIpInAcl_Type()
)
wingCfgDevIfIpInAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfIpInAcl.setStatus("current")
_WingCfgDevIfMacInAcl_Type = WingIdentifier
_WingCfgDevIfMacInAcl_Object = MibTableColumn
wingCfgDevIfMacInAcl = _WingCfgDevIfMacInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 1, 1, 7),
    _WingCfgDevIfMacInAcl_Type()
)
wingCfgDevIfMacInAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfMacInAcl.setStatus("current")
_WingCfgDevIfEthTable_Object = MibTable
wingCfgDevIfEthTable = _WingCfgDevIfEthTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevIfEthTable.setStatus("current")
_WingCfgDevIfEthEntry_Object = MibTableRow
wingCfgDevIfEthEntry = _WingCfgDevIfEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1)
)
wingCfgDevIfEthEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfEthEntry.setStatus("current")


class _WingCfgDevIfEthSpeed_Type(DisplayString):
    """Custom type wingCfgDevIfEthSpeed based on DisplayString"""
    defaultValue = OctetString("auto")


_WingCfgDevIfEthSpeed_Type.__name__ = "DisplayString"
_WingCfgDevIfEthSpeed_Object = MibTableColumn
wingCfgDevIfEthSpeed = _WingCfgDevIfEthSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 1),
    _WingCfgDevIfEthSpeed_Type()
)
wingCfgDevIfEthSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthSpeed.setStatus("current")


class _WingCfgDevIfEthDuplex_Type(DisplayString):
    """Custom type wingCfgDevIfEthDuplex based on DisplayString"""
    defaultValue = OctetString("auto")


_WingCfgDevIfEthDuplex_Type.__name__ = "DisplayString"
_WingCfgDevIfEthDuplex_Object = MibTableColumn
wingCfgDevIfEthDuplex = _WingCfgDevIfEthDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 2),
    _WingCfgDevIfEthDuplex_Type()
)
wingCfgDevIfEthDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthDuplex.setStatus("current")


class _WingCfgDevIfEthSwitchportMode_Type(DisplayString):
    """Custom type wingCfgDevIfEthSwitchportMode based on DisplayString"""
    defaultValue = OctetString("access")


_WingCfgDevIfEthSwitchportMode_Type.__name__ = "DisplayString"
_WingCfgDevIfEthSwitchportMode_Object = MibTableColumn
wingCfgDevIfEthSwitchportMode = _WingCfgDevIfEthSwitchportMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 3),
    _WingCfgDevIfEthSwitchportMode_Type()
)
wingCfgDevIfEthSwitchportMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthSwitchportMode.setStatus("current")


class _WingCfgDevIfEthSwitchportNativeVlan_Type(Unsigned32):
    """Custom type wingCfgDevIfEthSwitchportNativeVlan based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgDevIfEthSwitchportNativeVlan_Type.__name__ = "Unsigned32"
_WingCfgDevIfEthSwitchportNativeVlan_Object = MibTableColumn
wingCfgDevIfEthSwitchportNativeVlan = _WingCfgDevIfEthSwitchportNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 4),
    _WingCfgDevIfEthSwitchportNativeVlan_Type()
)
wingCfgDevIfEthSwitchportNativeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthSwitchportNativeVlan.setStatus("current")


class _WingCfgDevIfEthSwitchportNativeVlanTagged_Type(TruthValue):
    """Custom type wingCfgDevIfEthSwitchportNativeVlanTagged based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthSwitchportNativeVlanTagged_Type.__name__ = "TruthValue"
_WingCfgDevIfEthSwitchportNativeVlanTagged_Object = MibTableColumn
wingCfgDevIfEthSwitchportNativeVlanTagged = _WingCfgDevIfEthSwitchportNativeVlanTagged_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 5),
    _WingCfgDevIfEthSwitchportNativeVlanTagged_Type()
)
wingCfgDevIfEthSwitchportNativeVlanTagged.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthSwitchportNativeVlanTagged.setStatus("current")


class _WingCfgDevIfEthArpTrust_Type(TruthValue):
    """Custom type wingCfgDevIfEthArpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthArpTrust_Type.__name__ = "TruthValue"
_WingCfgDevIfEthArpTrust_Object = MibTableColumn
wingCfgDevIfEthArpTrust = _WingCfgDevIfEthArpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 6),
    _WingCfgDevIfEthArpTrust_Type()
)
wingCfgDevIfEthArpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthArpTrust.setStatus("current")


class _WingCfgDevIfEthDhcpTrust_Type(TruthValue):
    """Custom type wingCfgDevIfEthDhcpTrust based on TruthValue"""
    defaultValue = 1


_WingCfgDevIfEthDhcpTrust_Type.__name__ = "TruthValue"
_WingCfgDevIfEthDhcpTrust_Object = MibTableColumn
wingCfgDevIfEthDhcpTrust = _WingCfgDevIfEthDhcpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 7),
    _WingCfgDevIfEthDhcpTrust_Type()
)
wingCfgDevIfEthDhcpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthDhcpTrust.setStatus("current")


class _WingCfgDevIfEthArpHeaderMismatchValidation_Type(TruthValue):
    """Custom type wingCfgDevIfEthArpHeaderMismatchValidation based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthArpHeaderMismatchValidation_Type.__name__ = "TruthValue"
_WingCfgDevIfEthArpHeaderMismatchValidation_Object = MibTableColumn
wingCfgDevIfEthArpHeaderMismatchValidation = _WingCfgDevIfEthArpHeaderMismatchValidation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 8),
    _WingCfgDevIfEthArpHeaderMismatchValidation_Type()
)
wingCfgDevIfEthArpHeaderMismatchValidation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthArpHeaderMismatchValidation.setStatus("current")


class _WingCfgDevIfEthQosTrustDscp_Type(TruthValue):
    """Custom type wingCfgDevIfEthQosTrustDscp based on TruthValue"""
    defaultValue = 1


_WingCfgDevIfEthQosTrustDscp_Type.__name__ = "TruthValue"
_WingCfgDevIfEthQosTrustDscp_Object = MibTableColumn
wingCfgDevIfEthQosTrustDscp = _WingCfgDevIfEthQosTrustDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 9),
    _WingCfgDevIfEthQosTrustDscp_Type()
)
wingCfgDevIfEthQosTrustDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthQosTrustDscp.setStatus("current")


class _WingCfgDevIfEthQosTrust802dot1p_Type(TruthValue):
    """Custom type wingCfgDevIfEthQosTrust802dot1p based on TruthValue"""
    defaultValue = 1


_WingCfgDevIfEthQosTrust802dot1p_Type.__name__ = "TruthValue"
_WingCfgDevIfEthQosTrust802dot1p_Object = MibTableColumn
wingCfgDevIfEthQosTrust802dot1p = _WingCfgDevIfEthQosTrust802dot1p_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 10),
    _WingCfgDevIfEthQosTrust802dot1p_Type()
)
wingCfgDevIfEthQosTrust802dot1p.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthQosTrust802dot1p.setStatus("current")


class _WingCfgDevIfEthStaticChannelGroup_Type(Unsigned32):
    """Custom type wingCfgDevIfEthStaticChannelGroup based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_WingCfgDevIfEthStaticChannelGroup_Type.__name__ = "Unsigned32"
_WingCfgDevIfEthStaticChannelGroup_Object = MibTableColumn
wingCfgDevIfEthStaticChannelGroup = _WingCfgDevIfEthStaticChannelGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 11),
    _WingCfgDevIfEthStaticChannelGroup_Type()
)
wingCfgDevIfEthStaticChannelGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthStaticChannelGroup.setStatus("current")


class _WingCfgDevIfEthPoeSupported_Type(TruthValue):
    """Custom type wingCfgDevIfEthPoeSupported based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthPoeSupported_Type.__name__ = "TruthValue"
_WingCfgDevIfEthPoeSupported_Object = MibTableColumn
wingCfgDevIfEthPoeSupported = _WingCfgDevIfEthPoeSupported_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 12),
    _WingCfgDevIfEthPoeSupported_Type()
)
wingCfgDevIfEthPoeSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthPoeSupported.setStatus("current")


class _WingCfgDevIfEthPoePower_Type(TruthValue):
    """Custom type wingCfgDevIfEthPoePower based on TruthValue"""
    defaultValue = 1


_WingCfgDevIfEthPoePower_Type.__name__ = "TruthValue"
_WingCfgDevIfEthPoePower_Object = MibTableColumn
wingCfgDevIfEthPoePower = _WingCfgDevIfEthPoePower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 13),
    _WingCfgDevIfEthPoePower_Type()
)
wingCfgDevIfEthPoePower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthPoePower.setStatus("current")


class _WingCfgDevIfEthPoeLimit_Type(Unsigned32):
    """Custom type wingCfgDevIfEthPoeLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 40),
    )


_WingCfgDevIfEthPoeLimit_Type.__name__ = "Unsigned32"
_WingCfgDevIfEthPoeLimit_Object = MibTableColumn
wingCfgDevIfEthPoeLimit = _WingCfgDevIfEthPoeLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 14),
    _WingCfgDevIfEthPoeLimit_Type()
)
wingCfgDevIfEthPoeLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthPoeLimit.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfEthPoeLimit.setUnits("watts")


class _WingCfgDevIfEthPoePriority_Type(DisplayString):
    """Custom type wingCfgDevIfEthPoePriority based on DisplayString"""
    defaultValue = OctetString("low")


_WingCfgDevIfEthPoePriority_Type.__name__ = "DisplayString"
_WingCfgDevIfEthPoePriority_Object = MibTableColumn
wingCfgDevIfEthPoePriority = _WingCfgDevIfEthPoePriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 15),
    _WingCfgDevIfEthPoePriority_Type()
)
wingCfgDevIfEthPoePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthPoePriority.setStatus("current")


class _WingCfgDevIfEthDot1xSupported_Type(TruthValue):
    """Custom type wingCfgDevIfEthDot1xSupported based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthDot1xSupported_Type.__name__ = "TruthValue"
_WingCfgDevIfEthDot1xSupported_Object = MibTableColumn
wingCfgDevIfEthDot1xSupported = _WingCfgDevIfEthDot1xSupported_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 16),
    _WingCfgDevIfEthDot1xSupported_Type()
)
wingCfgDevIfEthDot1xSupported.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthDot1xSupported.setStatus("current")


class _WingCfgDevIfEthDot1xEnable_Type(TruthValue):
    """Custom type wingCfgDevIfEthDot1xEnable based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthDot1xEnable_Type.__name__ = "TruthValue"
_WingCfgDevIfEthDot1xEnable_Object = MibTableColumn
wingCfgDevIfEthDot1xEnable = _WingCfgDevIfEthDot1xEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 17),
    _WingCfgDevIfEthDot1xEnable_Type()
)
wingCfgDevIfEthDot1xEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthDot1xEnable.setStatus("current")


class _WingCfgDevIfEthDot1xUsername_Type(DisplayString):
    """Custom type wingCfgDevIfEthDot1xUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgDevIfEthDot1xUsername_Type.__name__ = "DisplayString"
_WingCfgDevIfEthDot1xUsername_Object = MibTableColumn
wingCfgDevIfEthDot1xUsername = _WingCfgDevIfEthDot1xUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 18),
    _WingCfgDevIfEthDot1xUsername_Type()
)
wingCfgDevIfEthDot1xUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthDot1xUsername.setStatus("current")
_WingCfgDevIfEthDot1xPassword_Type = DisplayString
_WingCfgDevIfEthDot1xPassword_Object = MibTableColumn
wingCfgDevIfEthDot1xPassword = _WingCfgDevIfEthDot1xPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 19),
    _WingCfgDevIfEthDot1xPassword_Type()
)
wingCfgDevIfEthDot1xPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthDot1xPassword.setStatus("current")


class _WingCfgDevIfEthCdpReceive_Type(TruthValue):
    """Custom type wingCfgDevIfEthCdpReceive based on TruthValue"""
    defaultValue = 1


_WingCfgDevIfEthCdpReceive_Type.__name__ = "TruthValue"
_WingCfgDevIfEthCdpReceive_Object = MibTableColumn
wingCfgDevIfEthCdpReceive = _WingCfgDevIfEthCdpReceive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 20),
    _WingCfgDevIfEthCdpReceive_Type()
)
wingCfgDevIfEthCdpReceive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthCdpReceive.setStatus("current")


class _WingCfgDevIfEthCdpTransmit_Type(TruthValue):
    """Custom type wingCfgDevIfEthCdpTransmit based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthCdpTransmit_Type.__name__ = "TruthValue"
_WingCfgDevIfEthCdpTransmit_Object = MibTableColumn
wingCfgDevIfEthCdpTransmit = _WingCfgDevIfEthCdpTransmit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 21),
    _WingCfgDevIfEthCdpTransmit_Type()
)
wingCfgDevIfEthCdpTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthCdpTransmit.setStatus("current")


class _WingCfgDevIfEthLldpReceive_Type(TruthValue):
    """Custom type wingCfgDevIfEthLldpReceive based on TruthValue"""
    defaultValue = 1


_WingCfgDevIfEthLldpReceive_Type.__name__ = "TruthValue"
_WingCfgDevIfEthLldpReceive_Object = MibTableColumn
wingCfgDevIfEthLldpReceive = _WingCfgDevIfEthLldpReceive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 22),
    _WingCfgDevIfEthLldpReceive_Type()
)
wingCfgDevIfEthLldpReceive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthLldpReceive.setStatus("current")


class _WingCfgDevIfEthLldpTransmit_Type(TruthValue):
    """Custom type wingCfgDevIfEthLldpTransmit based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfEthLldpTransmit_Type.__name__ = "TruthValue"
_WingCfgDevIfEthLldpTransmit_Object = MibTableColumn
wingCfgDevIfEthLldpTransmit = _WingCfgDevIfEthLldpTransmit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 23),
    _WingCfgDevIfEthLldpTransmit_Type()
)
wingCfgDevIfEthLldpTransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthLldpTransmit.setStatus("current")


class _WingCfgDevIfEthPortChannelLoadBalance_Type(DisplayString):
    """Custom type wingCfgDevIfEthPortChannelLoadBalance based on DisplayString"""
    defaultValue = OctetString("src-dst-ip")


_WingCfgDevIfEthPortChannelLoadBalance_Type.__name__ = "DisplayString"
_WingCfgDevIfEthPortChannelLoadBalance_Object = MibTableColumn
wingCfgDevIfEthPortChannelLoadBalance = _WingCfgDevIfEthPortChannelLoadBalance_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 2, 1, 24),
    _WingCfgDevIfEthPortChannelLoadBalance_Type()
)
wingCfgDevIfEthPortChannelLoadBalance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfEthPortChannelLoadBalance.setStatus("current")
_WingCfgDevIfVlanTable_Object = MibTable
wingCfgDevIfVlanTable = _WingCfgDevIfVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 3)
)
if mibBuilder.loadTexts:
    wingCfgDevIfVlanTable.setStatus("current")
_WingCfgDevIfVlanEntry_Object = MibTableRow
wingCfgDevIfVlanEntry = _WingCfgDevIfVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 3, 1)
)
wingCfgDevIfVlanEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfVlanEntry.setStatus("current")


class _WingCfgDevIfVlanVlan_Type(Unsigned32):
    """Custom type wingCfgDevIfVlanVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgDevIfVlanVlan_Type.__name__ = "Unsigned32"
_WingCfgDevIfVlanVlan_Object = MibTableColumn
wingCfgDevIfVlanVlan = _WingCfgDevIfVlanVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 3, 1, 1),
    _WingCfgDevIfVlanVlan_Type()
)
wingCfgDevIfVlanVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanVlan.setStatus("current")


class _WingCfgDevIfVlanDhcpcOptAll_Type(TruthValue):
    """Custom type wingCfgDevIfVlanDhcpcOptAll based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfVlanDhcpcOptAll_Type.__name__ = "TruthValue"
_WingCfgDevIfVlanDhcpcOptAll_Object = MibTableColumn
wingCfgDevIfVlanDhcpcOptAll = _WingCfgDevIfVlanDhcpcOptAll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 3, 1, 2),
    _WingCfgDevIfVlanDhcpcOptAll_Type()
)
wingCfgDevIfVlanDhcpcOptAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanDhcpcOptAll.setStatus("current")


class _WingCfgDevIfVlanNatDirection_Type(DisplayString):
    """Custom type wingCfgDevIfVlanNatDirection based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevIfVlanNatDirection_Type.__name__ = "DisplayString"
_WingCfgDevIfVlanNatDirection_Object = MibTableColumn
wingCfgDevIfVlanNatDirection = _WingCfgDevIfVlanNatDirection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 3, 1, 3),
    _WingCfgDevIfVlanNatDirection_Type()
)
wingCfgDevIfVlanNatDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanNatDirection.setStatus("current")
_WingCfgDevIfVlanCryptoMap_Type = WingIdentifier
_WingCfgDevIfVlanCryptoMap_Object = MibTableColumn
wingCfgDevIfVlanCryptoMap = _WingCfgDevIfVlanCryptoMap_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 3, 1, 4),
    _WingCfgDevIfVlanCryptoMap_Type()
)
wingCfgDevIfVlanCryptoMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanCryptoMap.setStatus("current")


class _WingCfgDevIfVlanDhcpRelayIncoming_Type(TruthValue):
    """Custom type wingCfgDevIfVlanDhcpRelayIncoming based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfVlanDhcpRelayIncoming_Type.__name__ = "TruthValue"
_WingCfgDevIfVlanDhcpRelayIncoming_Object = MibTableColumn
wingCfgDevIfVlanDhcpRelayIncoming = _WingCfgDevIfVlanDhcpRelayIncoming_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 3, 1, 5),
    _WingCfgDevIfVlanDhcpRelayIncoming_Type()
)
wingCfgDevIfVlanDhcpRelayIncoming.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanDhcpRelayIncoming.setStatus("current")
_WingCfgDevIfRadioTable_Object = MibTable
wingCfgDevIfRadioTable = _WingCfgDevIfRadioTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5)
)
if mibBuilder.loadTexts:
    wingCfgDevIfRadioTable.setStatus("current")
_WingCfgDevIfRadioEntry_Object = MibTableRow
wingCfgDevIfRadioEntry = _WingCfgDevIfRadioEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1)
)
wingCfgDevIfRadioEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfRadioEntry.setStatus("current")
_WingCfgDevIfRadioRfMode_Type = DisplayString
_WingCfgDevIfRadioRfMode_Object = MibTableColumn
wingCfgDevIfRadioRfMode = _WingCfgDevIfRadioRfMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 1),
    _WingCfgDevIfRadioRfMode_Type()
)
wingCfgDevIfRadioRfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioRfMode.setStatus("current")


class _WingCfgDevIfRadioChannel_Type(DisplayString):
    """Custom type wingCfgDevIfRadioChannel based on DisplayString"""
    defaultValue = OctetString("smart")


_WingCfgDevIfRadioChannel_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioChannel_Object = MibTableColumn
wingCfgDevIfRadioChannel = _WingCfgDevIfRadioChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 2),
    _WingCfgDevIfRadioChannel_Type()
)
wingCfgDevIfRadioChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioChannel.setStatus("current")


class _WingCfgDevIfRadioPower_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioPower based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 27),
    )


_WingCfgDevIfRadioPower_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioPower_Object = MibTableColumn
wingCfgDevIfRadioPower = _WingCfgDevIfRadioPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 3),
    _WingCfgDevIfRadioPower_Type()
)
wingCfgDevIfRadioPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioPower.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioPower.setUnits("dBm")


class _WingCfgDevIfRadioPlacement_Type(DisplayString):
    """Custom type wingCfgDevIfRadioPlacement based on DisplayString"""
    defaultValue = OctetString("indoor")


_WingCfgDevIfRadioPlacement_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioPlacement_Object = MibTableColumn
wingCfgDevIfRadioPlacement = _WingCfgDevIfRadioPlacement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 4),
    _WingCfgDevIfRadioPlacement_Type()
)
wingCfgDevIfRadioPlacement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioPlacement.setStatus("current")


class _WingCfgDevIfRadioBeaconInterval_Type(DisplayString):
    """Custom type wingCfgDevIfRadioBeaconInterval based on DisplayString"""
    defaultValue = OctetString("100")


_WingCfgDevIfRadioBeaconInterval_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioBeaconInterval_Object = MibTableColumn
wingCfgDevIfRadioBeaconInterval = _WingCfgDevIfRadioBeaconInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 5),
    _WingCfgDevIfRadioBeaconInterval_Type()
)
wingCfgDevIfRadioBeaconInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioBeaconInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioBeaconInterval.setUnits("milliseconds")


class _WingCfgDevIfRadioRtsThreshold_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioRtsThreshold based on Unsigned32"""
    defaultValue = 2347

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2347),
    )


_WingCfgDevIfRadioRtsThreshold_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioRtsThreshold_Object = MibTableColumn
wingCfgDevIfRadioRtsThreshold = _WingCfgDevIfRadioRtsThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 6),
    _WingCfgDevIfRadioRtsThreshold_Type()
)
wingCfgDevIfRadioRtsThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioRtsThreshold.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioRtsThreshold.setUnits("bytes")


class _WingCfgDevIfRadioOffChannelScan_Type(TruthValue):
    """Custom type wingCfgDevIfRadioOffChannelScan based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfRadioOffChannelScan_Type.__name__ = "TruthValue"
_WingCfgDevIfRadioOffChannelScan_Object = MibTableColumn
wingCfgDevIfRadioOffChannelScan = _WingCfgDevIfRadioOffChannelScan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 7),
    _WingCfgDevIfRadioOffChannelScan_Type()
)
wingCfgDevIfRadioOffChannelScan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioOffChannelScan.setStatus("current")


class _WingCfgDevIfRadioPreambleShort_Type(TruthValue):
    """Custom type wingCfgDevIfRadioPreambleShort based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfRadioPreambleShort_Type.__name__ = "TruthValue"
_WingCfgDevIfRadioPreambleShort_Object = MibTableColumn
wingCfgDevIfRadioPreambleShort = _WingCfgDevIfRadioPreambleShort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 8),
    _WingCfgDevIfRadioPreambleShort_Type()
)
wingCfgDevIfRadioPreambleShort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioPreambleShort.setStatus("current")


class _WingCfgDevIfRadioGuardInterval_Type(DisplayString):
    """Custom type wingCfgDevIfRadioGuardInterval based on DisplayString"""
    defaultValue = OctetString("any")


_WingCfgDevIfRadioGuardInterval_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioGuardInterval_Object = MibTableColumn
wingCfgDevIfRadioGuardInterval = _WingCfgDevIfRadioGuardInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 9),
    _WingCfgDevIfRadioGuardInterval_Type()
)
wingCfgDevIfRadioGuardInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioGuardInterval.setStatus("current")


class _WingCfgDevIfRadioAmpduMode_Type(DisplayString):
    """Custom type wingCfgDevIfRadioAmpduMode based on DisplayString"""
    defaultValue = OctetString("tx-rx")


_WingCfgDevIfRadioAmpduMode_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioAmpduMode_Object = MibTableColumn
wingCfgDevIfRadioAmpduMode = _WingCfgDevIfRadioAmpduMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 10),
    _WingCfgDevIfRadioAmpduMode_Type()
)
wingCfgDevIfRadioAmpduMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmpduMode.setStatus("current")


class _WingCfgDevIfRadioAmsduMode_Type(DisplayString):
    """Custom type wingCfgDevIfRadioAmsduMode based on DisplayString"""
    defaultValue = OctetString("rx-only")


_WingCfgDevIfRadioAmsduMode_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioAmsduMode_Object = MibTableColumn
wingCfgDevIfRadioAmsduMode = _WingCfgDevIfRadioAmsduMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 11),
    _WingCfgDevIfRadioAmsduMode_Type()
)
wingCfgDevIfRadioAmsduMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmsduMode.setStatus("current")


class _WingCfgDevIfRadioRifsMode_Type(DisplayString):
    """Custom type wingCfgDevIfRadioRifsMode based on DisplayString"""
    defaultValue = OctetString("tx-rx")


_WingCfgDevIfRadioRifsMode_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioRifsMode_Object = MibTableColumn
wingCfgDevIfRadioRifsMode = _WingCfgDevIfRadioRifsMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 12),
    _WingCfgDevIfRadioRifsMode_Type()
)
wingCfgDevIfRadioRifsMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioRifsMode.setStatus("current")


class _WingCfgDevIfRadioAmpduMaxAggrSizeRx_Type(DisplayString):
    """Custom type wingCfgDevIfRadioAmpduMaxAggrSizeRx based on DisplayString"""
    defaultValue = OctetString("65535")


_WingCfgDevIfRadioAmpduMaxAggrSizeRx_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioAmpduMaxAggrSizeRx_Object = MibTableColumn
wingCfgDevIfRadioAmpduMaxAggrSizeRx = _WingCfgDevIfRadioAmpduMaxAggrSizeRx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 13),
    _WingCfgDevIfRadioAmpduMaxAggrSizeRx_Type()
)
wingCfgDevIfRadioAmpduMaxAggrSizeRx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmpduMaxAggrSizeRx.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmpduMaxAggrSizeRx.setUnits("bytes")


class _WingCfgDevIfRadioAmpduMaxAggrSizeTx_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioAmpduMaxAggrSizeTx based on Unsigned32"""
    defaultValue = 65535

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingCfgDevIfRadioAmpduMaxAggrSizeTx_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioAmpduMaxAggrSizeTx_Object = MibTableColumn
wingCfgDevIfRadioAmpduMaxAggrSizeTx = _WingCfgDevIfRadioAmpduMaxAggrSizeTx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 14),
    _WingCfgDevIfRadioAmpduMaxAggrSizeTx_Type()
)
wingCfgDevIfRadioAmpduMaxAggrSizeTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmpduMaxAggrSizeTx.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmpduMaxAggrSizeTx.setUnits("bytes")


class _WingCfgDevIfRadioAmpduMinSpacing_Type(DisplayString):
    """Custom type wingCfgDevIfRadioAmpduMinSpacing based on DisplayString"""
    defaultValue = OctetString("4")


_WingCfgDevIfRadioAmpduMinSpacing_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioAmpduMinSpacing_Object = MibTableColumn
wingCfgDevIfRadioAmpduMinSpacing = _WingCfgDevIfRadioAmpduMinSpacing_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 15),
    _WingCfgDevIfRadioAmpduMinSpacing_Type()
)
wingCfgDevIfRadioAmpduMinSpacing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmpduMinSpacing.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAmpduMinSpacing.setUnits("microseconds")


class _WingCfgDevIfRadioAntennaMode_Type(DisplayString):
    """Custom type wingCfgDevIfRadioAntennaMode based on DisplayString"""
    defaultValue = OctetString("default")


_WingCfgDevIfRadioAntennaMode_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioAntennaMode_Object = MibTableColumn
wingCfgDevIfRadioAntennaMode = _WingCfgDevIfRadioAntennaMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 16),
    _WingCfgDevIfRadioAntennaMode_Type()
)
wingCfgDevIfRadioAntennaMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAntennaMode.setStatus("current")


class _WingCfgDevIfRadioNonUnicastForwarding_Type(DisplayString):
    """Custom type wingCfgDevIfRadioNonUnicastForwarding based on DisplayString"""
    defaultValue = OctetString("follow-dtim")


_WingCfgDevIfRadioNonUnicastForwarding_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioNonUnicastForwarding_Object = MibTableColumn
wingCfgDevIfRadioNonUnicastForwarding = _WingCfgDevIfRadioNonUnicastForwarding_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 17),
    _WingCfgDevIfRadioNonUnicastForwarding_Type()
)
wingCfgDevIfRadioNonUnicastForwarding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioNonUnicastForwarding.setStatus("current")


class _WingCfgDevIfRadioDynamicChainSelection_Type(TruthValue):
    """Custom type wingCfgDevIfRadioDynamicChainSelection based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfRadioDynamicChainSelection_Type.__name__ = "TruthValue"
_WingCfgDevIfRadioDynamicChainSelection_Object = MibTableColumn
wingCfgDevIfRadioDynamicChainSelection = _WingCfgDevIfRadioDynamicChainSelection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 18),
    _WingCfgDevIfRadioDynamicChainSelection_Type()
)
wingCfgDevIfRadioDynamicChainSelection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioDynamicChainSelection.setStatus("current")


class _WingCfgDevIfRadioLockRfMode_Type(TruthValue):
    """Custom type wingCfgDevIfRadioLockRfMode based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfRadioLockRfMode_Type.__name__ = "TruthValue"
_WingCfgDevIfRadioLockRfMode_Object = MibTableColumn
wingCfgDevIfRadioLockRfMode = _WingCfgDevIfRadioLockRfMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 19),
    _WingCfgDevIfRadioLockRfMode_Type()
)
wingCfgDevIfRadioLockRfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioLockRfMode.setStatus("current")
_WingCfgDevIfRadioSnifferRedirHost_Type = DisplayString
_WingCfgDevIfRadioSnifferRedirHost_Object = MibTableColumn
wingCfgDevIfRadioSnifferRedirHost = _WingCfgDevIfRadioSnifferRedirHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 20),
    _WingCfgDevIfRadioSnifferRedirHost_Type()
)
wingCfgDevIfRadioSnifferRedirHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioSnifferRedirHost.setStatus("current")


class _WingCfgDevIfRadioSnifferRedirChannel_Type(DisplayString):
    """Custom type wingCfgDevIfRadioSnifferRedirChannel based on DisplayString"""
    defaultValue = OctetString("1")


_WingCfgDevIfRadioSnifferRedirChannel_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioSnifferRedirChannel_Object = MibTableColumn
wingCfgDevIfRadioSnifferRedirChannel = _WingCfgDevIfRadioSnifferRedirChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 21),
    _WingCfgDevIfRadioSnifferRedirChannel_Type()
)
wingCfgDevIfRadioSnifferRedirChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioSnifferRedirChannel.setStatus("current")


class _WingCfgDevIfRadioMesh_Type(DisplayString):
    """Custom type wingCfgDevIfRadioMesh based on DisplayString"""
    defaultValue = OctetString("disabled")


_WingCfgDevIfRadioMesh_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioMesh_Object = MibTableColumn
wingCfgDevIfRadioMesh = _WingCfgDevIfRadioMesh_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 22),
    _WingCfgDevIfRadioMesh_Type()
)
wingCfgDevIfRadioMesh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioMesh.setStatus("current")


class _WingCfgDevIfRadioMeshLinks_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioMeshLinks based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_WingCfgDevIfRadioMeshLinks_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioMeshLinks_Object = MibTableColumn
wingCfgDevIfRadioMeshLinks = _WingCfgDevIfRadioMeshLinks_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 23),
    _WingCfgDevIfRadioMeshLinks_Type()
)
wingCfgDevIfRadioMeshLinks.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioMeshLinks.setStatus("current")


class _WingCfgDevIfRadioProbeResponseRetry_Type(TruthValue):
    """Custom type wingCfgDevIfRadioProbeResponseRetry based on TruthValue"""
    defaultValue = 1


_WingCfgDevIfRadioProbeResponseRetry_Type.__name__ = "TruthValue"
_WingCfgDevIfRadioProbeResponseRetry_Object = MibTableColumn
wingCfgDevIfRadioProbeResponseRetry = _WingCfgDevIfRadioProbeResponseRetry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 24),
    _WingCfgDevIfRadioProbeResponseRetry_Type()
)
wingCfgDevIfRadioProbeResponseRetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioProbeResponseRetry.setStatus("current")


class _WingCfgDevIfRadioProbeResponseRate_Type(DisplayString):
    """Custom type wingCfgDevIfRadioProbeResponseRate based on DisplayString"""
    defaultValue = OctetString("follow-probe-request")


_WingCfgDevIfRadioProbeResponseRate_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioProbeResponseRate_Object = MibTableColumn
wingCfgDevIfRadioProbeResponseRate = _WingCfgDevIfRadioProbeResponseRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 25),
    _WingCfgDevIfRadioProbeResponseRate_Type()
)
wingCfgDevIfRadioProbeResponseRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioProbeResponseRate.setStatus("current")


class _WingCfgDevIfRadioMaxClients_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioMaxClients based on Unsigned32"""
    defaultValue = 256

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgDevIfRadioMaxClients_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioMaxClients_Object = MibTableColumn
wingCfgDevIfRadioMaxClients = _WingCfgDevIfRadioMaxClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 26),
    _WingCfgDevIfRadioMaxClients_Type()
)
wingCfgDevIfRadioMaxClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioMaxClients.setStatus("current")


class _WingCfgDevIfRadioRadioTapMode_Type(DisplayString):
    """Custom type wingCfgDevIfRadioRadioTapMode based on DisplayString"""
    defaultValue = OctetString("off")


_WingCfgDevIfRadioRadioTapMode_Type.__name__ = "DisplayString"
_WingCfgDevIfRadioRadioTapMode_Object = MibTableColumn
wingCfgDevIfRadioRadioTapMode = _WingCfgDevIfRadioRadioTapMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 27),
    _WingCfgDevIfRadioRadioTapMode_Type()
)
wingCfgDevIfRadioRadioTapMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioRadioTapMode.setStatus("current")


class _WingCfgDevIfRadioWirelessClientPower_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioWirelessClientPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_WingCfgDevIfRadioWirelessClientPower_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioWirelessClientPower_Object = MibTableColumn
wingCfgDevIfRadioWirelessClientPower = _WingCfgDevIfRadioWirelessClientPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 28),
    _WingCfgDevIfRadioWirelessClientPower_Type()
)
wingCfgDevIfRadioWirelessClientPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioWirelessClientPower.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioWirelessClientPower.setUnits("dBm")


class _WingCfgDevIfRadioLoadBalLfCount_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioLoadBalLfCount based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_WingCfgDevIfRadioLoadBalLfCount_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioLoadBalLfCount_Object = MibTableColumn
wingCfgDevIfRadioLoadBalLfCount = _WingCfgDevIfRadioLoadBalLfCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 29),
    _WingCfgDevIfRadioLoadBalLfCount_Type()
)
wingCfgDevIfRadioLoadBalLfCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioLoadBalLfCount.setStatus("current")


class _WingCfgDevIfRadioLoadBalLfThroughput_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioLoadBalLfThroughput based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_WingCfgDevIfRadioLoadBalLfThroughput_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioLoadBalLfThroughput_Object = MibTableColumn
wingCfgDevIfRadioLoadBalLfThroughput = _WingCfgDevIfRadioLoadBalLfThroughput_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 30),
    _WingCfgDevIfRadioLoadBalLfThroughput_Type()
)
wingCfgDevIfRadioLoadBalLfThroughput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioLoadBalLfThroughput.setStatus("current")


class _WingCfgDevIfRadioLoadBalWmCount_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioLoadBalWmCount based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgDevIfRadioLoadBalWmCount_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioLoadBalWmCount_Object = MibTableColumn
wingCfgDevIfRadioLoadBalWmCount = _WingCfgDevIfRadioLoadBalWmCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 31),
    _WingCfgDevIfRadioLoadBalWmCount_Type()
)
wingCfgDevIfRadioLoadBalWmCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioLoadBalWmCount.setStatus("current")


class _WingCfgDevIfRadioLoadBalWmTput_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioLoadBalWmTput based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_WingCfgDevIfRadioLoadBalWmTput_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioLoadBalWmTput_Object = MibTableColumn
wingCfgDevIfRadioLoadBalWmTput = _WingCfgDevIfRadioLoadBalWmTput_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 32),
    _WingCfgDevIfRadioLoadBalWmTput_Type()
)
wingCfgDevIfRadioLoadBalWmTput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioLoadBalWmTput.setStatus("current")
_WingCfgDevIfRadioAssocAcl_Type = WingIdentifier
_WingCfgDevIfRadioAssocAcl_Object = MibTableColumn
wingCfgDevIfRadioAssocAcl = _WingCfgDevIfRadioAssocAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 33),
    _WingCfgDevIfRadioAssocAcl_Type()
)
wingCfgDevIfRadioAssocAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAssocAcl.setStatus("current")
_WingCfgDevIfRadioQosPolicy_Type = WingIdentifier
_WingCfgDevIfRadioQosPolicy_Object = MibTableColumn
wingCfgDevIfRadioQosPolicy = _WingCfgDevIfRadioQosPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 34),
    _WingCfgDevIfRadioQosPolicy_Type()
)
wingCfgDevIfRadioQosPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioQosPolicy.setStatus("current")


class _WingCfgDevIfRadioAntennaDowntilt_Type(TruthValue):
    """Custom type wingCfgDevIfRadioAntennaDowntilt based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfRadioAntennaDowntilt_Type.__name__ = "TruthValue"
_WingCfgDevIfRadioAntennaDowntilt_Object = MibTableColumn
wingCfgDevIfRadioAntennaDowntilt = _WingCfgDevIfRadioAntennaDowntilt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 35),
    _WingCfgDevIfRadioAntennaDowntilt_Type()
)
wingCfgDevIfRadioAntennaDowntilt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioAntennaDowntilt.setStatus("current")
_WingCfgDevIfRadioExtendedRange_Type = Unsigned32
_WingCfgDevIfRadioExtendedRange_Object = MibTableColumn
wingCfgDevIfRadioExtendedRange = _WingCfgDevIfRadioExtendedRange_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 5, 1, 36),
    _WingCfgDevIfRadioExtendedRange_Type()
)
wingCfgDevIfRadioExtendedRange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioExtendedRange.setStatus("current")
_WingCfgDevIfRadioBssmapTable_Object = MibTable
wingCfgDevIfRadioBssmapTable = _WingCfgDevIfRadioBssmapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 6)
)
if mibBuilder.loadTexts:
    wingCfgDevIfRadioBssmapTable.setStatus("current")
_WingCfgDevIfRadioBssmapEntry_Object = MibTableRow
wingCfgDevIfRadioBssmapEntry = _WingCfgDevIfRadioBssmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 6, 1)
)
wingCfgDevIfRadioBssmapEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
    (0, "WING-MIB", "wingCfgDevIfRadioBssmapWlan"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfRadioBssmapEntry.setStatus("current")
_WingCfgDevIfRadioBssmapWlan_Type = WingIdentifier
_WingCfgDevIfRadioBssmapWlan_Object = MibTableColumn
wingCfgDevIfRadioBssmapWlan = _WingCfgDevIfRadioBssmapWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 6, 1, 1),
    _WingCfgDevIfRadioBssmapWlan_Type()
)
wingCfgDevIfRadioBssmapWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioBssmapWlan.setStatus("current")


class _WingCfgDevIfRadioBssmapBss_Type(Unsigned32):
    """Custom type wingCfgDevIfRadioBssmapBss based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_WingCfgDevIfRadioBssmapBss_Type.__name__ = "Unsigned32"
_WingCfgDevIfRadioBssmapBss_Object = MibTableColumn
wingCfgDevIfRadioBssmapBss = _WingCfgDevIfRadioBssmapBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 6, 1, 3),
    _WingCfgDevIfRadioBssmapBss_Type()
)
wingCfgDevIfRadioBssmapBss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioBssmapBss.setStatus("current")
_WingCfgDevIfRadioBssmapPrimary_Type = TruthValue
_WingCfgDevIfRadioBssmapPrimary_Object = MibTableColumn
wingCfgDevIfRadioBssmapPrimary = _WingCfgDevIfRadioBssmapPrimary_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 6, 1, 4),
    _WingCfgDevIfRadioBssmapPrimary_Type()
)
wingCfgDevIfRadioBssmapPrimary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfRadioBssmapPrimary.setStatus("current")
_WingCfgDevIfSpanTreeTable_Object = MibTable
wingCfgDevIfSpanTreeTable = _WingCfgDevIfSpanTreeTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8)
)
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeTable.setStatus("current")
_WingCfgDevIfSpanTreeEntry_Object = MibTableRow
wingCfgDevIfSpanTreeEntry = _WingCfgDevIfSpanTreeEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1)
)
wingCfgDevIfSpanTreeEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeEntry.setStatus("current")


class _WingCfgDevIfSpanTreeLinkType_Type(DisplayString):
    """Custom type wingCfgDevIfSpanTreeLinkType based on DisplayString"""
    defaultValue = OctetString("point-to-point")


_WingCfgDevIfSpanTreeLinkType_Type.__name__ = "DisplayString"
_WingCfgDevIfSpanTreeLinkType_Object = MibTableColumn
wingCfgDevIfSpanTreeLinkType = _WingCfgDevIfSpanTreeLinkType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 1),
    _WingCfgDevIfSpanTreeLinkType_Type()
)
wingCfgDevIfSpanTreeLinkType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeLinkType.setStatus("current")


class _WingCfgDevIfSpanTreePortfast_Type(TruthValue):
    """Custom type wingCfgDevIfSpanTreePortfast based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfSpanTreePortfast_Type.__name__ = "TruthValue"
_WingCfgDevIfSpanTreePortfast_Object = MibTableColumn
wingCfgDevIfSpanTreePortfast = _WingCfgDevIfSpanTreePortfast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 2),
    _WingCfgDevIfSpanTreePortfast_Type()
)
wingCfgDevIfSpanTreePortfast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreePortfast.setStatus("current")


class _WingCfgDevIfSpanTreeEdgeport_Type(TruthValue):
    """Custom type wingCfgDevIfSpanTreeEdgeport based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfSpanTreeEdgeport_Type.__name__ = "TruthValue"
_WingCfgDevIfSpanTreeEdgeport_Object = MibTableColumn
wingCfgDevIfSpanTreeEdgeport = _WingCfgDevIfSpanTreeEdgeport_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 3),
    _WingCfgDevIfSpanTreeEdgeport_Type()
)
wingCfgDevIfSpanTreeEdgeport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeEdgeport.setStatus("current")


class _WingCfgDevIfSpanTreeBpduguard_Type(DisplayString):
    """Custom type wingCfgDevIfSpanTreeBpduguard based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevIfSpanTreeBpduguard_Type.__name__ = "DisplayString"
_WingCfgDevIfSpanTreeBpduguard_Object = MibTableColumn
wingCfgDevIfSpanTreeBpduguard = _WingCfgDevIfSpanTreeBpduguard_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 4),
    _WingCfgDevIfSpanTreeBpduguard_Type()
)
wingCfgDevIfSpanTreeBpduguard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeBpduguard.setStatus("current")


class _WingCfgDevIfSpanTreeBpdufilter_Type(DisplayString):
    """Custom type wingCfgDevIfSpanTreeBpdufilter based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevIfSpanTreeBpdufilter_Type.__name__ = "DisplayString"
_WingCfgDevIfSpanTreeBpdufilter_Object = MibTableColumn
wingCfgDevIfSpanTreeBpdufilter = _WingCfgDevIfSpanTreeBpdufilter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 5),
    _WingCfgDevIfSpanTreeBpdufilter_Type()
)
wingCfgDevIfSpanTreeBpdufilter.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeBpdufilter.setStatus("current")


class _WingCfgDevIfSpanTreePortCiscoInterop_Type(DisplayString):
    """Custom type wingCfgDevIfSpanTreePortCiscoInterop based on DisplayString"""
    defaultValue = OctetString("disable")


_WingCfgDevIfSpanTreePortCiscoInterop_Type.__name__ = "DisplayString"
_WingCfgDevIfSpanTreePortCiscoInterop_Object = MibTableColumn
wingCfgDevIfSpanTreePortCiscoInterop = _WingCfgDevIfSpanTreePortCiscoInterop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 6),
    _WingCfgDevIfSpanTreePortCiscoInterop_Type()
)
wingCfgDevIfSpanTreePortCiscoInterop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreePortCiscoInterop.setStatus("current")


class _WingCfgDevIfSpanTreeForceVersion_Type(Unsigned32):
    """Custom type wingCfgDevIfSpanTreeForceVersion based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_WingCfgDevIfSpanTreeForceVersion_Type.__name__ = "Unsigned32"
_WingCfgDevIfSpanTreeForceVersion_Object = MibTableColumn
wingCfgDevIfSpanTreeForceVersion = _WingCfgDevIfSpanTreeForceVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 7),
    _WingCfgDevIfSpanTreeForceVersion_Type()
)
wingCfgDevIfSpanTreeForceVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeForceVersion.setStatus("current")


class _WingCfgDevIfSpanTreeGuard_Type(DisplayString):
    """Custom type wingCfgDevIfSpanTreeGuard based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevIfSpanTreeGuard_Type.__name__ = "DisplayString"
_WingCfgDevIfSpanTreeGuard_Object = MibTableColumn
wingCfgDevIfSpanTreeGuard = _WingCfgDevIfSpanTreeGuard_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 8, 1, 8),
    _WingCfgDevIfSpanTreeGuard_Type()
)
wingCfgDevIfSpanTreeGuard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSpanTreeGuard.setStatus("current")
_WingCfgDevIfVlanOspfTable_Object = MibTable
wingCfgDevIfVlanOspfTable = _WingCfgDevIfVlanOspfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 11)
)
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfTable.setStatus("current")
_WingCfgDevIfVlanOspfEntry_Object = MibTableRow
wingCfgDevIfVlanOspfEntry = _WingCfgDevIfVlanOspfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 11, 1)
)
wingCfgDevIfVlanOspfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfEntry.setStatus("current")


class _WingCfgDevIfVlanOspfOspfAuthentication_Type(DisplayString):
    """Custom type wingCfgDevIfVlanOspfOspfAuthentication based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevIfVlanOspfOspfAuthentication_Type.__name__ = "DisplayString"
_WingCfgDevIfVlanOspfOspfAuthentication_Object = MibTableColumn
wingCfgDevIfVlanOspfOspfAuthentication = _WingCfgDevIfVlanOspfOspfAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 11, 1, 1),
    _WingCfgDevIfVlanOspfOspfAuthentication_Type()
)
wingCfgDevIfVlanOspfOspfAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfOspfAuthentication.setStatus("current")


class _WingCfgDevIfVlanOspfOspfAuthKey_Type(DisplayString):
    """Custom type wingCfgDevIfVlanOspfOspfAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 8),
    )


_WingCfgDevIfVlanOspfOspfAuthKey_Type.__name__ = "DisplayString"
_WingCfgDevIfVlanOspfOspfAuthKey_Object = MibTableColumn
wingCfgDevIfVlanOspfOspfAuthKey = _WingCfgDevIfVlanOspfOspfAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 11, 1, 2),
    _WingCfgDevIfVlanOspfOspfAuthKey_Type()
)
wingCfgDevIfVlanOspfOspfAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfOspfAuthKey.setStatus("current")


class _WingCfgDevIfVlanOspfOspfPriority_Type(Unsigned32):
    """Custom type wingCfgDevIfVlanOspfOspfPriority based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_WingCfgDevIfVlanOspfOspfPriority_Type.__name__ = "Unsigned32"
_WingCfgDevIfVlanOspfOspfPriority_Object = MibTableColumn
wingCfgDevIfVlanOspfOspfPriority = _WingCfgDevIfVlanOspfOspfPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 11, 1, 3),
    _WingCfgDevIfVlanOspfOspfPriority_Type()
)
wingCfgDevIfVlanOspfOspfPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfOspfPriority.setStatus("current")


class _WingCfgDevIfVlanOspfOspfCost_Type(Unsigned32):
    """Custom type wingCfgDevIfVlanOspfOspfCost based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgDevIfVlanOspfOspfCost_Type.__name__ = "Unsigned32"
_WingCfgDevIfVlanOspfOspfCost_Object = MibTableColumn
wingCfgDevIfVlanOspfOspfCost = _WingCfgDevIfVlanOspfOspfCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 11, 1, 4),
    _WingCfgDevIfVlanOspfOspfCost_Type()
)
wingCfgDevIfVlanOspfOspfCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfOspfCost.setStatus("current")
_WingCfgDevIfVlanOspfOspfBandWidth_Type = Unsigned32
_WingCfgDevIfVlanOspfOspfBandWidth_Object = MibTableColumn
wingCfgDevIfVlanOspfOspfBandWidth = _WingCfgDevIfVlanOspfOspfBandWidth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 11, 1, 5),
    _WingCfgDevIfVlanOspfOspfBandWidth_Type()
)
wingCfgDevIfVlanOspfOspfBandWidth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfOspfBandWidth.setStatus("current")
_WingCfgDevIfVlanOspfMsgDigestTable_Object = MibTable
wingCfgDevIfVlanOspfMsgDigestTable = _WingCfgDevIfVlanOspfMsgDigestTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 12)
)
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfMsgDigestTable.setStatus("current")
_WingCfgDevIfVlanOspfMsgDigestEntry_Object = MibTableRow
wingCfgDevIfVlanOspfMsgDigestEntry = _WingCfgDevIfVlanOspfMsgDigestEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 12, 1)
)
wingCfgDevIfVlanOspfMsgDigestEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
    (0, "WING-MIB", "wingCfgDevIfVlanOspfMsgDigestKeyId"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfMsgDigestEntry.setStatus("current")


class _WingCfgDevIfVlanOspfMsgDigestKeyId_Type(Unsigned32):
    """Custom type wingCfgDevIfVlanOspfMsgDigestKeyId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgDevIfVlanOspfMsgDigestKeyId_Type.__name__ = "Unsigned32"
_WingCfgDevIfVlanOspfMsgDigestKeyId_Object = MibTableColumn
wingCfgDevIfVlanOspfMsgDigestKeyId = _WingCfgDevIfVlanOspfMsgDigestKeyId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 12, 1, 1),
    _WingCfgDevIfVlanOspfMsgDigestKeyId_Type()
)
wingCfgDevIfVlanOspfMsgDigestKeyId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfMsgDigestKeyId.setStatus("current")
_WingCfgDevIfVlanOspfMsgDigestMessageDigest_Type = DisplayString
_WingCfgDevIfVlanOspfMsgDigestMessageDigest_Object = MibTableColumn
wingCfgDevIfVlanOspfMsgDigestMessageDigest = _WingCfgDevIfVlanOspfMsgDigestMessageDigest_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 12, 1, 3),
    _WingCfgDevIfVlanOspfMsgDigestMessageDigest_Type()
)
wingCfgDevIfVlanOspfMsgDigestMessageDigest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfVlanOspfMsgDigestMessageDigest.setStatus("current")
_WingCfgDevIfPppoeTable_Object = MibTable
wingCfgDevIfPppoeTable = _WingCfgDevIfPppoeTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13)
)
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeTable.setStatus("current")
_WingCfgDevIfPppoeEntry_Object = MibTableRow
wingCfgDevIfPppoeEntry = _WingCfgDevIfPppoeEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1)
)
wingCfgDevIfPppoeEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeEntry.setStatus("current")


class _WingCfgDevIfPppoeAuthType_Type(DisplayString):
    """Custom type wingCfgDevIfPppoeAuthType based on DisplayString"""
    defaultValue = OctetString("pap")


_WingCfgDevIfPppoeAuthType_Type.__name__ = "DisplayString"
_WingCfgDevIfPppoeAuthType_Object = MibTableColumn
wingCfgDevIfPppoeAuthType = _WingCfgDevIfPppoeAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 1),
    _WingCfgDevIfPppoeAuthType_Type()
)
wingCfgDevIfPppoeAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeAuthType.setStatus("current")


class _WingCfgDevIfPppoeIdleTime_Type(Unsigned32):
    """Custom type wingCfgDevIfPppoeIdleTime based on Unsigned32"""
    defaultValue = 600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgDevIfPppoeIdleTime_Type.__name__ = "Unsigned32"
_WingCfgDevIfPppoeIdleTime_Object = MibTableColumn
wingCfgDevIfPppoeIdleTime = _WingCfgDevIfPppoeIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 2),
    _WingCfgDevIfPppoeIdleTime_Type()
)
wingCfgDevIfPppoeIdleTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeIdleTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeIdleTime.setUnits("seconds")


class _WingCfgDevIfPppoeKeepalive_Type(TruthValue):
    """Custom type wingCfgDevIfPppoeKeepalive based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfPppoeKeepalive_Type.__name__ = "TruthValue"
_WingCfgDevIfPppoeKeepalive_Object = MibTableColumn
wingCfgDevIfPppoeKeepalive = _WingCfgDevIfPppoeKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 3),
    _WingCfgDevIfPppoeKeepalive_Type()
)
wingCfgDevIfPppoeKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeKeepalive.setStatus("current")


class _WingCfgDevIfPppoeUsername_Type(DisplayString):
    """Custom type wingCfgDevIfPppoeUsername based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgDevIfPppoeUsername_Type.__name__ = "DisplayString"
_WingCfgDevIfPppoeUsername_Object = MibTableColumn
wingCfgDevIfPppoeUsername = _WingCfgDevIfPppoeUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 4),
    _WingCfgDevIfPppoeUsername_Type()
)
wingCfgDevIfPppoeUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeUsername.setStatus("current")


class _WingCfgDevIfPppoePassword_Type(DisplayString):
    """Custom type wingCfgDevIfPppoePassword based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgDevIfPppoePassword_Type.__name__ = "DisplayString"
_WingCfgDevIfPppoePassword_Object = MibTableColumn
wingCfgDevIfPppoePassword = _WingCfgDevIfPppoePassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 5),
    _WingCfgDevIfPppoePassword_Type()
)
wingCfgDevIfPppoePassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoePassword.setStatus("current")


class _WingCfgDevIfPppoeService_Type(DisplayString):
    """Custom type wingCfgDevIfPppoeService based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_WingCfgDevIfPppoeService_Type.__name__ = "DisplayString"
_WingCfgDevIfPppoeService_Object = MibTableColumn
wingCfgDevIfPppoeService = _WingCfgDevIfPppoeService_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 6),
    _WingCfgDevIfPppoeService_Type()
)
wingCfgDevIfPppoeService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeService.setStatus("current")


class _WingCfgDevIfPppoeLocalnetVlan_Type(Unsigned32):
    """Custom type wingCfgDevIfPppoeLocalnetVlan based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgDevIfPppoeLocalnetVlan_Type.__name__ = "Unsigned32"
_WingCfgDevIfPppoeLocalnetVlan_Object = MibTableColumn
wingCfgDevIfPppoeLocalnetVlan = _WingCfgDevIfPppoeLocalnetVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 7),
    _WingCfgDevIfPppoeLocalnetVlan_Type()
)
wingCfgDevIfPppoeLocalnetVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeLocalnetVlan.setStatus("current")


class _WingCfgDevIfPppoeMtu_Type(Unsigned32):
    """Custom type wingCfgDevIfPppoeMtu based on Unsigned32"""
    defaultValue = 1492

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(500, 1492),
    )


_WingCfgDevIfPppoeMtu_Type.__name__ = "Unsigned32"
_WingCfgDevIfPppoeMtu_Object = MibTableColumn
wingCfgDevIfPppoeMtu = _WingCfgDevIfPppoeMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 8),
    _WingCfgDevIfPppoeMtu_Type()
)
wingCfgDevIfPppoeMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeMtu.setStatus("current")


class _WingCfgDevIfPppoeDefaultRoutePriority_Type(Unsigned32):
    """Custom type wingCfgDevIfPppoeDefaultRoutePriority based on Unsigned32"""
    defaultValue = 2000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8000),
    )


_WingCfgDevIfPppoeDefaultRoutePriority_Type.__name__ = "Unsigned32"
_WingCfgDevIfPppoeDefaultRoutePriority_Object = MibTableColumn
wingCfgDevIfPppoeDefaultRoutePriority = _WingCfgDevIfPppoeDefaultRoutePriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 9),
    _WingCfgDevIfPppoeDefaultRoutePriority_Type()
)
wingCfgDevIfPppoeDefaultRoutePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeDefaultRoutePriority.setStatus("current")


class _WingCfgDevIfPppoeIp_Type(DisplayString):
    """Custom type wingCfgDevIfPppoeIp based on DisplayString"""
    defaultValue = OctetString("0.0.0.0")


_WingCfgDevIfPppoeIp_Type.__name__ = "DisplayString"
_WingCfgDevIfPppoeIp_Object = MibTableColumn
wingCfgDevIfPppoeIp = _WingCfgDevIfPppoeIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 13, 1, 10),
    _WingCfgDevIfPppoeIp_Type()
)
wingCfgDevIfPppoeIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfPppoeIp.setStatus("current")
_WingCfgDevIfT1E1Table_Object = MibTable
wingCfgDevIfT1E1Table = _WingCfgDevIfT1E1Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14)
)
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1Table.setStatus("current")
_WingCfgDevIfT1E1Entry_Object = MibTableRow
wingCfgDevIfT1E1Entry = _WingCfgDevIfT1E1Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14, 1)
)
wingCfgDevIfT1E1Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1Entry.setStatus("current")


class _WingCfgDevIfT1E1Media_Type(DisplayString):
    """Custom type wingCfgDevIfT1E1Media based on DisplayString"""
    defaultValue = OctetString("t1")


_WingCfgDevIfT1E1Media_Type.__name__ = "DisplayString"
_WingCfgDevIfT1E1Media_Object = MibTableColumn
wingCfgDevIfT1E1Media = _WingCfgDevIfT1E1Media_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14, 1, 1),
    _WingCfgDevIfT1E1Media_Type()
)
wingCfgDevIfT1E1Media.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1Media.setStatus("current")


class _WingCfgDevIfT1E1ClockMode_Type(DisplayString):
    """Custom type wingCfgDevIfT1E1ClockMode based on DisplayString"""
    defaultValue = OctetString("normal")


_WingCfgDevIfT1E1ClockMode_Type.__name__ = "DisplayString"
_WingCfgDevIfT1E1ClockMode_Object = MibTableColumn
wingCfgDevIfT1E1ClockMode = _WingCfgDevIfT1E1ClockMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14, 1, 2),
    _WingCfgDevIfT1E1ClockMode_Type()
)
wingCfgDevIfT1E1ClockMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1ClockMode.setStatus("current")


class _WingCfgDevIfT1E1HighImpedance_Type(DisplayString):
    """Custom type wingCfgDevIfT1E1HighImpedance based on DisplayString"""
    defaultValue = OctetString("disable")


_WingCfgDevIfT1E1HighImpedance_Type.__name__ = "DisplayString"
_WingCfgDevIfT1E1HighImpedance_Object = MibTableColumn
wingCfgDevIfT1E1HighImpedance = _WingCfgDevIfT1E1HighImpedance_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14, 1, 3),
    _WingCfgDevIfT1E1HighImpedance_Type()
)
wingCfgDevIfT1E1HighImpedance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1HighImpedance.setStatus("current")


class _WingCfgDevIfT1E1LineBuildOut_Type(DisplayString):
    """Custom type wingCfgDevIfT1E1LineBuildOut based on DisplayString"""
    defaultValue = OctetString("0dB")


_WingCfgDevIfT1E1LineBuildOut_Type.__name__ = "DisplayString"
_WingCfgDevIfT1E1LineBuildOut_Object = MibTableColumn
wingCfgDevIfT1E1LineBuildOut = _WingCfgDevIfT1E1LineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14, 1, 4),
    _WingCfgDevIfT1E1LineBuildOut_Type()
)
wingCfgDevIfT1E1LineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1LineBuildOut.setStatus("current")


class _WingCfgDevIfT1E1LineEncoding_Type(DisplayString):
    """Custom type wingCfgDevIfT1E1LineEncoding based on DisplayString"""
    defaultValue = OctetString("b8zs")


_WingCfgDevIfT1E1LineEncoding_Type.__name__ = "DisplayString"
_WingCfgDevIfT1E1LineEncoding_Object = MibTableColumn
wingCfgDevIfT1E1LineEncoding = _WingCfgDevIfT1E1LineEncoding_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14, 1, 5),
    _WingCfgDevIfT1E1LineEncoding_Type()
)
wingCfgDevIfT1E1LineEncoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1LineEncoding.setStatus("current")


class _WingCfgDevIfT1E1RxSensitivityLevel_Type(DisplayString):
    """Custom type wingCfgDevIfT1E1RxSensitivityLevel based on DisplayString"""
    defaultValue = OctetString("36dB")


_WingCfgDevIfT1E1RxSensitivityLevel_Type.__name__ = "DisplayString"
_WingCfgDevIfT1E1RxSensitivityLevel_Object = MibTableColumn
wingCfgDevIfT1E1RxSensitivityLevel = _WingCfgDevIfT1E1RxSensitivityLevel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 14, 1, 6),
    _WingCfgDevIfT1E1RxSensitivityLevel_Type()
)
wingCfgDevIfT1E1RxSensitivityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfT1E1RxSensitivityLevel.setStatus("current")
_WingCfgDevIfSerialTable_Object = MibTable
wingCfgDevIfSerialTable = _WingCfgDevIfSerialTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15)
)
if mibBuilder.loadTexts:
    wingCfgDevIfSerialTable.setStatus("current")
_WingCfgDevIfSerialEntry_Object = MibTableRow
wingCfgDevIfSerialEntry = _WingCfgDevIfSerialEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15, 1)
)
wingCfgDevIfSerialEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfSerialEntry.setStatus("current")


class _WingCfgDevIfSerialAuthentication_Type(DisplayString):
    """Custom type wingCfgDevIfSerialAuthentication based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevIfSerialAuthentication_Type.__name__ = "DisplayString"
_WingCfgDevIfSerialAuthentication_Object = MibTableColumn
wingCfgDevIfSerialAuthentication = _WingCfgDevIfSerialAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15, 1, 1),
    _WingCfgDevIfSerialAuthentication_Type()
)
wingCfgDevIfSerialAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSerialAuthentication.setStatus("current")


class _WingCfgDevIfSerialEncapsulation_Type(DisplayString):
    """Custom type wingCfgDevIfSerialEncapsulation based on DisplayString"""
    defaultValue = OctetString("ppp")


_WingCfgDevIfSerialEncapsulation_Type.__name__ = "DisplayString"
_WingCfgDevIfSerialEncapsulation_Object = MibTableColumn
wingCfgDevIfSerialEncapsulation = _WingCfgDevIfSerialEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15, 1, 2),
    _WingCfgDevIfSerialEncapsulation_Type()
)
wingCfgDevIfSerialEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSerialEncapsulation.setStatus("current")


class _WingCfgDevIfSerialLocalIpAddress_Type(DisplayString):
    """Custom type wingCfgDevIfSerialLocalIpAddress based on DisplayString"""
    defaultValue = OctetString("")


_WingCfgDevIfSerialLocalIpAddress_Type.__name__ = "DisplayString"
_WingCfgDevIfSerialLocalIpAddress_Object = MibTableColumn
wingCfgDevIfSerialLocalIpAddress = _WingCfgDevIfSerialLocalIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15, 1, 3),
    _WingCfgDevIfSerialLocalIpAddress_Type()
)
wingCfgDevIfSerialLocalIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSerialLocalIpAddress.setStatus("current")


class _WingCfgDevIfSerialUsername_Type(DisplayString):
    """Custom type wingCfgDevIfSerialUsername based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingCfgDevIfSerialUsername_Type.__name__ = "DisplayString"
_WingCfgDevIfSerialUsername_Object = MibTableColumn
wingCfgDevIfSerialUsername = _WingCfgDevIfSerialUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15, 1, 4),
    _WingCfgDevIfSerialUsername_Type()
)
wingCfgDevIfSerialUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSerialUsername.setStatus("current")


class _WingCfgDevIfSerialPassword_Type(DisplayString):
    """Custom type wingCfgDevIfSerialPassword based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingCfgDevIfSerialPassword_Type.__name__ = "DisplayString"
_WingCfgDevIfSerialPassword_Object = MibTableColumn
wingCfgDevIfSerialPassword = _WingCfgDevIfSerialPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15, 1, 5),
    _WingCfgDevIfSerialPassword_Type()
)
wingCfgDevIfSerialPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSerialPassword.setStatus("current")


class _WingCfgDevIfSerialRemoteIpSubnet_Type(DisplayString):
    """Custom type wingCfgDevIfSerialRemoteIpSubnet based on DisplayString"""
    defaultValue = OctetString("")


_WingCfgDevIfSerialRemoteIpSubnet_Type.__name__ = "DisplayString"
_WingCfgDevIfSerialRemoteIpSubnet_Object = MibTableColumn
wingCfgDevIfSerialRemoteIpSubnet = _WingCfgDevIfSerialRemoteIpSubnet_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 15, 1, 6),
    _WingCfgDevIfSerialRemoteIpSubnet_Type()
)
wingCfgDevIfSerialRemoteIpSubnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfSerialRemoteIpSubnet.setStatus("current")
_WingCfgDevIfDot1xAuthTable_Object = MibTable
wingCfgDevIfDot1xAuthTable = _WingCfgDevIfDot1xAuthTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16)
)
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthTable.setStatus("current")
_WingCfgDevIfDot1xAuthEntry_Object = MibTableRow
wingCfgDevIfDot1xAuthEntry = _WingCfgDevIfDot1xAuthEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1)
)
wingCfgDevIfDot1xAuthEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthEntry.setStatus("current")


class _WingCfgDevIfDot1xAuthHostMode_Type(DisplayString):
    """Custom type wingCfgDevIfDot1xAuthHostMode based on DisplayString"""
    defaultValue = OctetString("single-host")


_WingCfgDevIfDot1xAuthHostMode_Type.__name__ = "DisplayString"
_WingCfgDevIfDot1xAuthHostMode_Object = MibTableColumn
wingCfgDevIfDot1xAuthHostMode = _WingCfgDevIfDot1xAuthHostMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 1),
    _WingCfgDevIfDot1xAuthHostMode_Type()
)
wingCfgDevIfDot1xAuthHostMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthHostMode.setStatus("current")


class _WingCfgDevIfDot1xAuthGuestVlan_Type(Unsigned32):
    """Custom type wingCfgDevIfDot1xAuthGuestVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgDevIfDot1xAuthGuestVlan_Type.__name__ = "Unsigned32"
_WingCfgDevIfDot1xAuthGuestVlan_Object = MibTableColumn
wingCfgDevIfDot1xAuthGuestVlan = _WingCfgDevIfDot1xAuthGuestVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 2),
    _WingCfgDevIfDot1xAuthGuestVlan_Type()
)
wingCfgDevIfDot1xAuthGuestVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthGuestVlan.setStatus("current")


class _WingCfgDevIfDot1xAuthPortControl_Type(DisplayString):
    """Custom type wingCfgDevIfDot1xAuthPortControl based on DisplayString"""
    defaultValue = OctetString("force-authorized")


_WingCfgDevIfDot1xAuthPortControl_Type.__name__ = "DisplayString"
_WingCfgDevIfDot1xAuthPortControl_Object = MibTableColumn
wingCfgDevIfDot1xAuthPortControl = _WingCfgDevIfDot1xAuthPortControl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 3),
    _WingCfgDevIfDot1xAuthPortControl_Type()
)
wingCfgDevIfDot1xAuthPortControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthPortControl.setStatus("current")


class _WingCfgDevIfDot1xAuthReauthenticate_Type(TruthValue):
    """Custom type wingCfgDevIfDot1xAuthReauthenticate based on TruthValue"""
    defaultValue = 2


_WingCfgDevIfDot1xAuthReauthenticate_Type.__name__ = "TruthValue"
_WingCfgDevIfDot1xAuthReauthenticate_Object = MibTableColumn
wingCfgDevIfDot1xAuthReauthenticate = _WingCfgDevIfDot1xAuthReauthenticate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 4),
    _WingCfgDevIfDot1xAuthReauthenticate_Type()
)
wingCfgDevIfDot1xAuthReauthenticate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthReauthenticate.setStatus("current")


class _WingCfgDevIfDot1xAuthMaxReauthCount_Type(Unsigned32):
    """Custom type wingCfgDevIfDot1xAuthMaxReauthCount based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgDevIfDot1xAuthMaxReauthCount_Type.__name__ = "Unsigned32"
_WingCfgDevIfDot1xAuthMaxReauthCount_Object = MibTableColumn
wingCfgDevIfDot1xAuthMaxReauthCount = _WingCfgDevIfDot1xAuthMaxReauthCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 5),
    _WingCfgDevIfDot1xAuthMaxReauthCount_Type()
)
wingCfgDevIfDot1xAuthMaxReauthCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthMaxReauthCount.setStatus("current")


class _WingCfgDevIfDot1xAuthMaxReq_Type(Unsigned32):
    """Custom type wingCfgDevIfDot1xAuthMaxReq based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgDevIfDot1xAuthMaxReq_Type.__name__ = "Unsigned32"
_WingCfgDevIfDot1xAuthMaxReq_Object = MibTableColumn
wingCfgDevIfDot1xAuthMaxReq = _WingCfgDevIfDot1xAuthMaxReq_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 6),
    _WingCfgDevIfDot1xAuthMaxReq_Type()
)
wingCfgDevIfDot1xAuthMaxReq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthMaxReq.setStatus("current")


class _WingCfgDevIfDot1xAuthQuietPeriod_Type(Unsigned32):
    """Custom type wingCfgDevIfDot1xAuthQuietPeriod based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgDevIfDot1xAuthQuietPeriod_Type.__name__ = "Unsigned32"
_WingCfgDevIfDot1xAuthQuietPeriod_Object = MibTableColumn
wingCfgDevIfDot1xAuthQuietPeriod = _WingCfgDevIfDot1xAuthQuietPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 7),
    _WingCfgDevIfDot1xAuthQuietPeriod_Type()
)
wingCfgDevIfDot1xAuthQuietPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthQuietPeriod.setStatus("current")


class _WingCfgDevIfDot1xAuthReauthPeriod_Type(Unsigned32):
    """Custom type wingCfgDevIfDot1xAuthReauthPeriod based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgDevIfDot1xAuthReauthPeriod_Type.__name__ = "Unsigned32"
_WingCfgDevIfDot1xAuthReauthPeriod_Object = MibTableColumn
wingCfgDevIfDot1xAuthReauthPeriod = _WingCfgDevIfDot1xAuthReauthPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 16, 1, 8),
    _WingCfgDevIfDot1xAuthReauthPeriod_Type()
)
wingCfgDevIfDot1xAuthReauthPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfDot1xAuthReauthPeriod.setStatus("current")
_WingCfgDevIfMeshpointBssmapTable_Object = MibTable
wingCfgDevIfMeshpointBssmapTable = _WingCfgDevIfMeshpointBssmapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 17)
)
if mibBuilder.loadTexts:
    wingCfgDevIfMeshpointBssmapTable.setStatus("current")
_WingCfgDevIfMeshpointBssmapEntry_Object = MibTableRow
wingCfgDevIfMeshpointBssmapEntry = _WingCfgDevIfMeshpointBssmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 17, 1)
)
wingCfgDevIfMeshpointBssmapEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevIfName"),
    (0, "WING-MIB", "wingCfgDevIfMeshpointBssmapMeshpoint"),
)
if mibBuilder.loadTexts:
    wingCfgDevIfMeshpointBssmapEntry.setStatus("current")
_WingCfgDevIfMeshpointBssmapMeshpoint_Type = WingIdentifier
_WingCfgDevIfMeshpointBssmapMeshpoint_Object = MibTableColumn
wingCfgDevIfMeshpointBssmapMeshpoint = _WingCfgDevIfMeshpointBssmapMeshpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 17, 1, 1),
    _WingCfgDevIfMeshpointBssmapMeshpoint_Type()
)
wingCfgDevIfMeshpointBssmapMeshpoint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfMeshpointBssmapMeshpoint.setStatus("current")


class _WingCfgDevIfMeshpointBssmapBss_Type(Unsigned32):
    """Custom type wingCfgDevIfMeshpointBssmapBss based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_WingCfgDevIfMeshpointBssmapBss_Type.__name__ = "Unsigned32"
_WingCfgDevIfMeshpointBssmapBss_Object = MibTableColumn
wingCfgDevIfMeshpointBssmapBss = _WingCfgDevIfMeshpointBssmapBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 3, 17, 1, 3),
    _WingCfgDevIfMeshpointBssmapBss_Type()
)
wingCfgDevIfMeshpointBssmapBss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIfMeshpointBssmapBss.setStatus("current")
_WingCfgDevBridgeVlan_ObjectIdentity = ObjectIdentity
wingCfgDevBridgeVlan = _WingCfgDevBridgeVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8)
)
_WingCfgDevBridgeVlanTable_Object = MibTable
wingCfgDevBridgeVlanTable = _WingCfgDevBridgeVlanTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanTable.setStatus("current")
_WingCfgDevBridgeVlanEntry_Object = MibTableRow
wingCfgDevBridgeVlanEntry = _WingCfgDevBridgeVlanEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1)
)
wingCfgDevBridgeVlanEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevBridgeVlanId"),
)
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanEntry.setStatus("current")


class _WingCfgDevBridgeVlanId_Type(Unsigned32):
    """Custom type wingCfgDevBridgeVlanId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_WingCfgDevBridgeVlanId_Type.__name__ = "Unsigned32"
_WingCfgDevBridgeVlanId_Object = MibTableColumn
wingCfgDevBridgeVlanId = _WingCfgDevBridgeVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 1),
    _WingCfgDevBridgeVlanId_Type()
)
wingCfgDevBridgeVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanId.setStatus("current")


class _WingCfgDevBridgeVlanDescription_Type(DisplayString):
    """Custom type wingCfgDevBridgeVlanDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgDevBridgeVlanDescription_Type.__name__ = "DisplayString"
_WingCfgDevBridgeVlanDescription_Object = MibTableColumn
wingCfgDevBridgeVlanDescription = _WingCfgDevBridgeVlanDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 3),
    _WingCfgDevBridgeVlanDescription_Type()
)
wingCfgDevBridgeVlanDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanDescription.setStatus("current")


class _WingCfgDevBridgeVlanEdgeVlan_Type(TruthValue):
    """Custom type wingCfgDevBridgeVlanEdgeVlan based on TruthValue"""
    defaultValue = 1


_WingCfgDevBridgeVlanEdgeVlan_Type.__name__ = "TruthValue"
_WingCfgDevBridgeVlanEdgeVlan_Object = MibTableColumn
wingCfgDevBridgeVlanEdgeVlan = _WingCfgDevBridgeVlanEdgeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 4),
    _WingCfgDevBridgeVlanEdgeVlan_Type()
)
wingCfgDevBridgeVlanEdgeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanEdgeVlan.setStatus("current")


class _WingCfgDevBridgeVlanBridgingMode_Type(DisplayString):
    """Custom type wingCfgDevBridgeVlanBridgingMode based on DisplayString"""
    defaultValue = OctetString("auto")


_WingCfgDevBridgeVlanBridgingMode_Type.__name__ = "DisplayString"
_WingCfgDevBridgeVlanBridgingMode_Object = MibTableColumn
wingCfgDevBridgeVlanBridgingMode = _WingCfgDevBridgeVlanBridgingMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 5),
    _WingCfgDevBridgeVlanBridgingMode_Type()
)
wingCfgDevBridgeVlanBridgingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanBridgingMode.setStatus("current")


class _WingCfgDevBridgeVlanIpArpTrust_Type(TruthValue):
    """Custom type wingCfgDevBridgeVlanIpArpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgDevBridgeVlanIpArpTrust_Type.__name__ = "TruthValue"
_WingCfgDevBridgeVlanIpArpTrust_Object = MibTableColumn
wingCfgDevBridgeVlanIpArpTrust = _WingCfgDevBridgeVlanIpArpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 6),
    _WingCfgDevBridgeVlanIpArpTrust_Type()
)
wingCfgDevBridgeVlanIpArpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIpArpTrust.setStatus("current")


class _WingCfgDevBridgeVlanIpDhcpTrust_Type(TruthValue):
    """Custom type wingCfgDevBridgeVlanIpDhcpTrust based on TruthValue"""
    defaultValue = 2


_WingCfgDevBridgeVlanIpDhcpTrust_Type.__name__ = "TruthValue"
_WingCfgDevBridgeVlanIpDhcpTrust_Object = MibTableColumn
wingCfgDevBridgeVlanIpDhcpTrust = _WingCfgDevBridgeVlanIpDhcpTrust_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 7),
    _WingCfgDevBridgeVlanIpDhcpTrust_Type()
)
wingCfgDevBridgeVlanIpDhcpTrust.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIpDhcpTrust.setStatus("current")
_WingCfgDevBridgeVlanTunnelMacOutAcl_Type = WingIdentifier
_WingCfgDevBridgeVlanTunnelMacOutAcl_Object = MibTableColumn
wingCfgDevBridgeVlanTunnelMacOutAcl = _WingCfgDevBridgeVlanTunnelMacOutAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 8),
    _WingCfgDevBridgeVlanTunnelMacOutAcl_Type()
)
wingCfgDevBridgeVlanTunnelMacOutAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanTunnelMacOutAcl.setStatus("current")
_WingCfgDevBridgeVlanTunnelIpOutAcl_Type = WingIdentifier
_WingCfgDevBridgeVlanTunnelIpOutAcl_Object = MibTableColumn
wingCfgDevBridgeVlanTunnelIpOutAcl = _WingCfgDevBridgeVlanTunnelIpOutAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 1, 1, 9),
    _WingCfgDevBridgeVlanTunnelIpOutAcl_Type()
)
wingCfgDevBridgeVlanTunnelIpOutAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanTunnelIpOutAcl.setStatus("current")
_WingCfgDevBridgeVlanIgsTable_Object = MibTable
wingCfgDevBridgeVlanIgsTable = _WingCfgDevBridgeVlanIgsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsTable.setStatus("current")
_WingCfgDevBridgeVlanIgsEntry_Object = MibTableRow
wingCfgDevBridgeVlanIgsEntry = _WingCfgDevBridgeVlanIgsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1)
)
wingCfgDevBridgeVlanIgsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevBridgeVlanId"),
)
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsEntry.setStatus("current")


class _WingCfgDevBridgeVlanIgsIpIgs_Type(TruthValue):
    """Custom type wingCfgDevBridgeVlanIgsIpIgs based on TruthValue"""
    defaultValue = 1


_WingCfgDevBridgeVlanIgsIpIgs_Type.__name__ = "TruthValue"
_WingCfgDevBridgeVlanIgsIpIgs_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgs = _WingCfgDevBridgeVlanIgsIpIgs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 1),
    _WingCfgDevBridgeVlanIgsIpIgs_Type()
)
wingCfgDevBridgeVlanIgsIpIgs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgs.setStatus("current")


class _WingCfgDevBridgeVlanIgsIpIgsQuerier_Type(TruthValue):
    """Custom type wingCfgDevBridgeVlanIgsIpIgsQuerier based on TruthValue"""
    defaultValue = 2


_WingCfgDevBridgeVlanIgsIpIgsQuerier_Type.__name__ = "TruthValue"
_WingCfgDevBridgeVlanIgsIpIgsQuerier_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgsQuerier = _WingCfgDevBridgeVlanIgsIpIgsQuerier_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 2),
    _WingCfgDevBridgeVlanIgsIpIgsQuerier_Type()
)
wingCfgDevBridgeVlanIgsIpIgsQuerier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsQuerier.setStatus("current")


class _WingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime_Type(Unsigned32):
    """Custom type wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_WingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime_Type.__name__ = "Unsigned32"
_WingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime = _WingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 3),
    _WingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime_Type()
)
wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime.setUnits("seconds")


class _WingCfgDevBridgeVlanIgsIpIgsQuerierVersion_Type(Unsigned32):
    """Custom type wingCfgDevBridgeVlanIgsIpIgsQuerierVersion based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WingCfgDevBridgeVlanIgsIpIgsQuerierVersion_Type.__name__ = "Unsigned32"
_WingCfgDevBridgeVlanIgsIpIgsQuerierVersion_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgsQuerierVersion = _WingCfgDevBridgeVlanIgsIpIgsQuerierVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 4),
    _WingCfgDevBridgeVlanIgsIpIgsQuerierVersion_Type()
)
wingCfgDevBridgeVlanIgsIpIgsQuerierVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsQuerierVersion.setStatus("current")
_WingCfgDevBridgeVlanIgsIpIgsQuerierAddress_Type = DisplayString
_WingCfgDevBridgeVlanIgsIpIgsQuerierAddress_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgsQuerierAddress = _WingCfgDevBridgeVlanIgsIpIgsQuerierAddress_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 5),
    _WingCfgDevBridgeVlanIgsIpIgsQuerierAddress_Type()
)
wingCfgDevBridgeVlanIgsIpIgsQuerierAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsQuerierAddress.setStatus("current")


class _WingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Type(Unsigned32):
    """Custom type wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_WingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Type.__name__ = "Unsigned32"
_WingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry = _WingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 6),
    _WingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry_Type()
)
wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry.setUnits("seconds")


class _WingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast_Type(TruthValue):
    """Custom type wingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast based on TruthValue"""
    defaultValue = 2


_WingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast_Type.__name__ = "TruthValue"
_WingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast = _WingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 7),
    _WingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast_Type()
)
wingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast.setStatus("current")


class _WingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Type(DisplayString):
    """Custom type wingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp based on DisplayString"""
    defaultValue = OctetString("pim-dvmrp")


_WingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Type.__name__ = "DisplayString"
_WingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Object = MibTableColumn
wingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp = _WingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 8, 2, 1, 8),
    _WingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp_Type()
)
wingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp.setStatus("current")
_WingCfgDevMint_ObjectIdentity = ObjectIdentity
wingCfgDevMint = _WingCfgDevMint_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10)
)
_WingCfgDevMintTable_Object = MibTable
wingCfgDevMintTable = _WingCfgDevMintTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevMintTable.setStatus("current")
_WingCfgDevMintEntry_Object = MibTableRow
wingCfgDevMintEntry = _WingCfgDevMintEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1, 1)
)
wingCfgDevMintEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevMintEntry.setStatus("current")
_WingCfgDevMintLevel1AreaId_Type = DisplayString
_WingCfgDevMintLevel1AreaId_Object = MibTableColumn
wingCfgDevMintLevel1AreaId = _WingCfgDevMintLevel1AreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1, 1, 1),
    _WingCfgDevMintLevel1AreaId_Type()
)
wingCfgDevMintLevel1AreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMintLevel1AreaId.setStatus("current")
_WingCfgDevMintSpfLatency_Type = DisplayString
_WingCfgDevMintSpfLatency_Object = MibTableColumn
wingCfgDevMintSpfLatency = _WingCfgDevMintSpfLatency_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1, 1, 2),
    _WingCfgDevMintSpfLatency_Type()
)
wingCfgDevMintSpfLatency.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMintSpfLatency.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevMintSpfLatency.setUnits("seconds")


class _WingCfgDevMintDisPriorityAdjustment_Type(Integer32):
    """Custom type wingCfgDevMintDisPriorityAdjustment based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-255, 255),
    )


_WingCfgDevMintDisPriorityAdjustment_Type.__name__ = "Integer32"
_WingCfgDevMintDisPriorityAdjustment_Object = MibTableColumn
wingCfgDevMintDisPriorityAdjustment = _WingCfgDevMintDisPriorityAdjustment_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1, 1, 3),
    _WingCfgDevMintDisPriorityAdjustment_Type()
)
wingCfgDevMintDisPriorityAdjustment.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMintDisPriorityAdjustment.setStatus("current")


class _WingCfgDevMintMlcpVlan_Type(TruthValue):
    """Custom type wingCfgDevMintMlcpVlan based on TruthValue"""
    defaultValue = 1


_WingCfgDevMintMlcpVlan_Type.__name__ = "TruthValue"
_WingCfgDevMintMlcpVlan_Object = MibTableColumn
wingCfgDevMintMlcpVlan = _WingCfgDevMintMlcpVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1, 1, 4),
    _WingCfgDevMintMlcpVlan_Type()
)
wingCfgDevMintMlcpVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMintMlcpVlan.setStatus("current")


class _WingCfgDevMintMlcpIp_Type(TruthValue):
    """Custom type wingCfgDevMintMlcpIp based on TruthValue"""
    defaultValue = 1


_WingCfgDevMintMlcpIp_Type.__name__ = "TruthValue"
_WingCfgDevMintMlcpIp_Object = MibTableColumn
wingCfgDevMintMlcpIp = _WingCfgDevMintMlcpIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1, 1, 5),
    _WingCfgDevMintMlcpIp_Type()
)
wingCfgDevMintMlcpIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMintMlcpIp.setStatus("current")
_WingCfgDevMintTunnelControllerLoadBalancingLevel1_Type = TruthValue
_WingCfgDevMintTunnelControllerLoadBalancingLevel1_Object = MibTableColumn
wingCfgDevMintTunnelControllerLoadBalancingLevel1 = _WingCfgDevMintTunnelControllerLoadBalancingLevel1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 10, 1, 1, 6),
    _WingCfgDevMintTunnelControllerLoadBalancingLevel1_Type()
)
wingCfgDevMintTunnelControllerLoadBalancingLevel1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMintTunnelControllerLoadBalancingLevel1.setStatus("current")
_WingCfgDevDot11_ObjectIdentity = ObjectIdentity
wingCfgDevDot11 = _WingCfgDevDot11_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11)
)
_WingCfgDevDot11Table_Object = MibTable
wingCfgDevDot11Table = _WingCfgDevDot11Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevDot11Table.setStatus("current")
_WingCfgDevDot11Entry_Object = MibTableRow
wingCfgDevDot11Entry = _WingCfgDevDot11Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1, 1)
)
wingCfgDevDot11Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevDot11Entry.setStatus("current")


class _WingCfgDevDot11WepSharedKeyAuth_Type(TruthValue):
    """Custom type wingCfgDevDot11WepSharedKeyAuth based on TruthValue"""
    defaultValue = 2


_WingCfgDevDot11WepSharedKeyAuth_Type.__name__ = "TruthValue"
_WingCfgDevDot11WepSharedKeyAuth_Object = MibTableColumn
wingCfgDevDot11WepSharedKeyAuth = _WingCfgDevDot11WepSharedKeyAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1, 1, 1),
    _WingCfgDevDot11WepSharedKeyAuth_Type()
)
wingCfgDevDot11WepSharedKeyAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot11WepSharedKeyAuth.setStatus("current")


class _WingCfgDevDot11LegacyAutoUpdate_Type(TruthValue):
    """Custom type wingCfgDevDot11LegacyAutoUpdate based on TruthValue"""
    defaultValue = 1


_WingCfgDevDot11LegacyAutoUpdate_Type.__name__ = "TruthValue"
_WingCfgDevDot11LegacyAutoUpdate_Object = MibTableColumn
wingCfgDevDot11LegacyAutoUpdate = _WingCfgDevDot11LegacyAutoUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1, 1, 2),
    _WingCfgDevDot11LegacyAutoUpdate_Type()
)
wingCfgDevDot11LegacyAutoUpdate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot11LegacyAutoUpdate.setStatus("current")


class _WingCfgDevDot11LegacyAutoUpdateImgAp7131_Type(DisplayString):
    """Custom type wingCfgDevDot11LegacyAutoUpdateImgAp7131 based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgDevDot11LegacyAutoUpdateImgAp7131_Type.__name__ = "DisplayString"
_WingCfgDevDot11LegacyAutoUpdateImgAp7131_Object = MibTableColumn
wingCfgDevDot11LegacyAutoUpdateImgAp7131 = _WingCfgDevDot11LegacyAutoUpdateImgAp7131_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1, 1, 3),
    _WingCfgDevDot11LegacyAutoUpdateImgAp7131_Type()
)
wingCfgDevDot11LegacyAutoUpdateImgAp7131.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot11LegacyAutoUpdateImgAp7131.setStatus("current")


class _WingCfgDevDot11LegacyAutoDowngrade_Type(TruthValue):
    """Custom type wingCfgDevDot11LegacyAutoDowngrade based on TruthValue"""
    defaultValue = 1


_WingCfgDevDot11LegacyAutoDowngrade_Type.__name__ = "TruthValue"
_WingCfgDevDot11LegacyAutoDowngrade_Object = MibTableColumn
wingCfgDevDot11LegacyAutoDowngrade = _WingCfgDevDot11LegacyAutoDowngrade_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1, 1, 4),
    _WingCfgDevDot11LegacyAutoDowngrade_Type()
)
wingCfgDevDot11LegacyAutoDowngrade.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot11LegacyAutoDowngrade.setStatus("current")


class _WingCfgDevDot11NasIdentifier_Type(DisplayString):
    """Custom type wingCfgDevDot11NasIdentifier based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgDevDot11NasIdentifier_Type.__name__ = "DisplayString"
_WingCfgDevDot11NasIdentifier_Object = MibTableColumn
wingCfgDevDot11NasIdentifier = _WingCfgDevDot11NasIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1, 1, 5),
    _WingCfgDevDot11NasIdentifier_Type()
)
wingCfgDevDot11NasIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot11NasIdentifier.setStatus("current")


class _WingCfgDevDot11NasPortId_Type(DisplayString):
    """Custom type wingCfgDevDot11NasPortId based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 253),
    )


_WingCfgDevDot11NasPortId_Type.__name__ = "DisplayString"
_WingCfgDevDot11NasPortId_Object = MibTableColumn
wingCfgDevDot11NasPortId = _WingCfgDevDot11NasPortId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 11, 1, 1, 6),
    _WingCfgDevDot11NasPortId_Type()
)
wingCfgDevDot11NasPortId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDot11NasPortId.setStatus("current")
_WingCfgDevNat_ObjectIdentity = ObjectIdentity
wingCfgDevNat = _WingCfgDevNat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16)
)
_WingCfgDevNatPoolTable_Object = MibTable
wingCfgDevNatPoolTable = _WingCfgDevNatPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevNatPoolTable.setStatus("current")
_WingCfgDevNatPoolEntry_Object = MibTableRow
wingCfgDevNatPoolEntry = _WingCfgDevNatPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 1, 1)
)
wingCfgDevNatPoolEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevNatPoolName"),
)
if mibBuilder.loadTexts:
    wingCfgDevNatPoolEntry.setStatus("current")
_WingCfgDevNatPoolName_Type = WingIdentifier
_WingCfgDevNatPoolName_Object = MibTableColumn
wingCfgDevNatPoolName = _WingCfgDevNatPoolName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 1, 1, 1),
    _WingCfgDevNatPoolName_Type()
)
wingCfgDevNatPoolName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevNatPoolName.setStatus("current")
_WingCfgDevNatPoolAddrTable_Object = MibTable
wingCfgDevNatPoolAddrTable = _WingCfgDevNatPoolAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevNatPoolAddrTable.setStatus("current")
_WingCfgDevNatPoolAddrEntry_Object = MibTableRow
wingCfgDevNatPoolAddrEntry = _WingCfgDevNatPoolAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 2, 1)
)
wingCfgDevNatPoolAddrEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevNatPoolName"),
    (0, "WING-MIB", "wingCfgDevNatPoolAddrStartIp"),
)
if mibBuilder.loadTexts:
    wingCfgDevNatPoolAddrEntry.setStatus("current")
_WingCfgDevNatPoolAddrStartIp_Type = WingIdentifier
_WingCfgDevNatPoolAddrStartIp_Object = MibTableColumn
wingCfgDevNatPoolAddrStartIp = _WingCfgDevNatPoolAddrStartIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 2, 1, 1),
    _WingCfgDevNatPoolAddrStartIp_Type()
)
wingCfgDevNatPoolAddrStartIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevNatPoolAddrStartIp.setStatus("current")
_WingCfgDevNatPoolAddrEndIp_Type = DisplayString
_WingCfgDevNatPoolAddrEndIp_Object = MibTableColumn
wingCfgDevNatPoolAddrEndIp = _WingCfgDevNatPoolAddrEndIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 2, 1, 3),
    _WingCfgDevNatPoolAddrEndIp_Type()
)
wingCfgDevNatPoolAddrEndIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevNatPoolAddrEndIp.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicTable_Object = MibTable
wingCfgDevNatBridgeSrcDynamicTable = _WingCfgDevNatBridgeSrcDynamicTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 7)
)
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicTable.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicEntry_Object = MibTableRow
wingCfgDevNatBridgeSrcDynamicEntry = _WingCfgDevNatBridgeSrcDynamicEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 7, 1)
)
wingCfgDevNatBridgeSrcDynamicEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevNatBridgeSrcDynamicAcl"),
)
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicEntry.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicAcl_Type = WingIdentifier
_WingCfgDevNatBridgeSrcDynamicAcl_Object = MibTableColumn
wingCfgDevNatBridgeSrcDynamicAcl = _WingCfgDevNatBridgeSrcDynamicAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 7, 1, 1),
    _WingCfgDevNatBridgeSrcDynamicAcl_Type()
)
wingCfgDevNatBridgeSrcDynamicAcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicAcl.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicIfTable_Object = MibTable
wingCfgDevNatBridgeSrcDynamicIfTable = _WingCfgDevNatBridgeSrcDynamicIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 8)
)
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicIfTable.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicIfEntry_Object = MibTableRow
wingCfgDevNatBridgeSrcDynamicIfEntry = _WingCfgDevNatBridgeSrcDynamicIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 8, 1)
)
wingCfgDevNatBridgeSrcDynamicIfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevNatBridgeSrcDynamicAcl"),
    (0, "WING-MIB", "wingCfgDevNatBridgeSrcDynamicIfName"),
)
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicIfEntry.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicIfName_Type = WingIdentifier
_WingCfgDevNatBridgeSrcDynamicIfName_Object = MibTableColumn
wingCfgDevNatBridgeSrcDynamicIfName = _WingCfgDevNatBridgeSrcDynamicIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 8, 1, 1),
    _WingCfgDevNatBridgeSrcDynamicIfName_Type()
)
wingCfgDevNatBridgeSrcDynamicIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicIfName.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicIfOverloadType_Type = DisplayString
_WingCfgDevNatBridgeSrcDynamicIfOverloadType_Object = MibTableColumn
wingCfgDevNatBridgeSrcDynamicIfOverloadType = _WingCfgDevNatBridgeSrcDynamicIfOverloadType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 8, 1, 3),
    _WingCfgDevNatBridgeSrcDynamicIfOverloadType_Type()
)
wingCfgDevNatBridgeSrcDynamicIfOverloadType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicIfOverloadType.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicIfOverloadIp_Type = DisplayString
_WingCfgDevNatBridgeSrcDynamicIfOverloadIp_Object = MibTableColumn
wingCfgDevNatBridgeSrcDynamicIfOverloadIp = _WingCfgDevNatBridgeSrcDynamicIfOverloadIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 8, 1, 4),
    _WingCfgDevNatBridgeSrcDynamicIfOverloadIp_Type()
)
wingCfgDevNatBridgeSrcDynamicIfOverloadIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicIfOverloadIp.setStatus("current")
_WingCfgDevNatBridgeSrcDynamicIfNatPool_Type = DisplayString
_WingCfgDevNatBridgeSrcDynamicIfNatPool_Object = MibTableColumn
wingCfgDevNatBridgeSrcDynamicIfNatPool = _WingCfgDevNatBridgeSrcDynamicIfNatPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 16, 8, 1, 5),
    _WingCfgDevNatBridgeSrcDynamicIfNatPool_Type()
)
wingCfgDevNatBridgeSrcDynamicIfNatPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevNatBridgeSrcDynamicIfNatPool.setStatus("current")
_WingCfgDevVpn_ObjectIdentity = ObjectIdentity
wingCfgDevVpn = _WingCfgDevVpn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19)
)
_WingCfgDevVpnTable_Object = MibTable
wingCfgDevVpnTable = _WingCfgDevVpnTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnTable.setStatus("current")
_WingCfgDevVpnEntry_Object = MibTableRow
wingCfgDevVpnEntry = _WingCfgDevVpnEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1)
)
wingCfgDevVpnEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnEntry.setStatus("current")


class _WingCfgDevVpnLifetimeSeconds_Type(Unsigned32):
    """Custom type wingCfgDevVpnLifetimeSeconds based on Unsigned32"""
    defaultValue = 3600

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(120, 2147483646),
    )


_WingCfgDevVpnLifetimeSeconds_Type.__name__ = "Unsigned32"
_WingCfgDevVpnLifetimeSeconds_Object = MibTableColumn
wingCfgDevVpnLifetimeSeconds = _WingCfgDevVpnLifetimeSeconds_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 1),
    _WingCfgDevVpnLifetimeSeconds_Type()
)
wingCfgDevVpnLifetimeSeconds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnLifetimeSeconds.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnLifetimeSeconds.setUnits("seconds")


class _WingCfgDevVpnLifetimeKb_Type(Unsigned32):
    """Custom type wingCfgDevVpnLifetimeKb based on Unsigned32"""
    defaultValue = 4608000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(500, 2147483646),
    )


_WingCfgDevVpnLifetimeKb_Type.__name__ = "Unsigned32"
_WingCfgDevVpnLifetimeKb_Object = MibTableColumn
wingCfgDevVpnLifetimeKb = _WingCfgDevVpnLifetimeKb_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 2),
    _WingCfgDevVpnLifetimeKb_Type()
)
wingCfgDevVpnLifetimeKb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnLifetimeKb.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnLifetimeKb.setUnits("kilobytes")


class _WingCfgDevVpnIkev1GlobalDpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev1GlobalDpdKeepalive based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgDevVpnIkev1GlobalDpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev1GlobalDpdKeepalive_Object = MibTableColumn
wingCfgDevVpnIkev1GlobalDpdKeepalive = _WingCfgDevVpnIkev1GlobalDpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 3),
    _WingCfgDevVpnIkev1GlobalDpdKeepalive_Type()
)
wingCfgDevVpnIkev1GlobalDpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1GlobalDpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1GlobalDpdKeepalive.setUnits("seconds")


class _WingCfgDevVpnIkev1GlobalDpdRetries_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev1GlobalDpdRetries based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgDevVpnIkev1GlobalDpdRetries_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev1GlobalDpdRetries_Object = MibTableColumn
wingCfgDevVpnIkev1GlobalDpdRetries = _WingCfgDevVpnIkev1GlobalDpdRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 4),
    _WingCfgDevVpnIkev1GlobalDpdRetries_Type()
)
wingCfgDevVpnIkev1GlobalDpdRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1GlobalDpdRetries.setStatus("current")


class _WingCfgDevVpnIkev1GlobalNatKeepalive_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev1GlobalNatKeepalive based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgDevVpnIkev1GlobalNatKeepalive_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev1GlobalNatKeepalive_Object = MibTableColumn
wingCfgDevVpnIkev1GlobalNatKeepalive = _WingCfgDevVpnIkev1GlobalNatKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 5),
    _WingCfgDevVpnIkev1GlobalNatKeepalive_Type()
)
wingCfgDevVpnIkev1GlobalNatKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1GlobalNatKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1GlobalNatKeepalive.setUnits("seconds")


class _WingCfgDevVpnIkev2GlobalDpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev2GlobalDpdKeepalive based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgDevVpnIkev2GlobalDpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev2GlobalDpdKeepalive_Object = MibTableColumn
wingCfgDevVpnIkev2GlobalDpdKeepalive = _WingCfgDevVpnIkev2GlobalDpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 6),
    _WingCfgDevVpnIkev2GlobalDpdKeepalive_Type()
)
wingCfgDevVpnIkev2GlobalDpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2GlobalDpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2GlobalDpdKeepalive.setUnits("seconds")


class _WingCfgDevVpnIkev2GlobalDpdRetries_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev2GlobalDpdRetries based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgDevVpnIkev2GlobalDpdRetries_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev2GlobalDpdRetries_Object = MibTableColumn
wingCfgDevVpnIkev2GlobalDpdRetries = _WingCfgDevVpnIkev2GlobalDpdRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 7),
    _WingCfgDevVpnIkev2GlobalDpdRetries_Type()
)
wingCfgDevVpnIkev2GlobalDpdRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2GlobalDpdRetries.setStatus("current")


class _WingCfgDevVpnIkev2GlobalNatKeepalive_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev2GlobalNatKeepalive based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgDevVpnIkev2GlobalNatKeepalive_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev2GlobalNatKeepalive_Object = MibTableColumn
wingCfgDevVpnIkev2GlobalNatKeepalive = _WingCfgDevVpnIkev2GlobalNatKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 8),
    _WingCfgDevVpnIkev2GlobalNatKeepalive_Type()
)
wingCfgDevVpnIkev2GlobalNatKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2GlobalNatKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2GlobalNatKeepalive.setUnits("seconds")


class _WingCfgDevVpnCookieChallengeThreshold_Type(Unsigned32):
    """Custom type wingCfgDevVpnCookieChallengeThreshold based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgDevVpnCookieChallengeThreshold_Type.__name__ = "Unsigned32"
_WingCfgDevVpnCookieChallengeThreshold_Object = MibTableColumn
wingCfgDevVpnCookieChallengeThreshold = _WingCfgDevVpnCookieChallengeThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 9),
    _WingCfgDevVpnCookieChallengeThreshold_Type()
)
wingCfgDevVpnCookieChallengeThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCookieChallengeThreshold.setStatus("current")


class _WingCfgDevVpnMaxInNegotiationSa_Type(Unsigned32):
    """Custom type wingCfgDevVpnMaxInNegotiationSa based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgDevVpnMaxInNegotiationSa_Type.__name__ = "Unsigned32"
_WingCfgDevVpnMaxInNegotiationSa_Object = MibTableColumn
wingCfgDevVpnMaxInNegotiationSa = _WingCfgDevVpnMaxInNegotiationSa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 10),
    _WingCfgDevVpnMaxInNegotiationSa_Type()
)
wingCfgDevVpnMaxInNegotiationSa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnMaxInNegotiationSa.setStatus("current")


class _WingCfgDevVpnDfBit_Type(DisplayString):
    """Custom type wingCfgDevVpnDfBit based on DisplayString"""
    defaultValue = OctetString("copy")


_WingCfgDevVpnDfBit_Type.__name__ = "DisplayString"
_WingCfgDevVpnDfBit_Object = MibTableColumn
wingCfgDevVpnDfBit = _WingCfgDevVpnDfBit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 1, 1, 11),
    _WingCfgDevVpnDfBit_Type()
)
wingCfgDevVpnDfBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnDfBit.setStatus("current")
_WingCfgDevVpnIkev1Table_Object = MibTable
wingCfgDevVpnIkev1Table = _WingCfgDevVpnIkev1Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1Table.setStatus("current")
_WingCfgDevVpnIkev1Entry_Object = MibTableRow
wingCfgDevVpnIkev1Entry = _WingCfgDevVpnIkev1Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 2, 1)
)
wingCfgDevVpnIkev1Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev1Name"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1Entry.setStatus("current")
_WingCfgDevVpnIkev1Name_Type = WingIdentifier
_WingCfgDevVpnIkev1Name_Object = MibTableColumn
wingCfgDevVpnIkev1Name = _WingCfgDevVpnIkev1Name_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 2, 1, 1),
    _WingCfgDevVpnIkev1Name_Type()
)
wingCfgDevVpnIkev1Name.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1Name.setStatus("current")


class _WingCfgDevVpnIkev1Mode_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1Mode based on DisplayString"""
    defaultValue = OctetString("main")


_WingCfgDevVpnIkev1Mode_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1Mode_Object = MibTableColumn
wingCfgDevVpnIkev1Mode = _WingCfgDevVpnIkev1Mode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 2, 1, 3),
    _WingCfgDevVpnIkev1Mode_Type()
)
wingCfgDevVpnIkev1Mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1Mode.setStatus("current")


class _WingCfgDevVpnIkev1IsakmpLifetime_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev1IsakmpLifetime based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(600, 2147483646),
    )


_WingCfgDevVpnIkev1IsakmpLifetime_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev1IsakmpLifetime_Object = MibTableColumn
wingCfgDevVpnIkev1IsakmpLifetime = _WingCfgDevVpnIkev1IsakmpLifetime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 2, 1, 4),
    _WingCfgDevVpnIkev1IsakmpLifetime_Type()
)
wingCfgDevVpnIkev1IsakmpLifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpLifetime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpLifetime.setUnits("seconds")


class _WingCfgDevVpnIkev1DpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev1DpdKeepalive based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgDevVpnIkev1DpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev1DpdKeepalive_Object = MibTableColumn
wingCfgDevVpnIkev1DpdKeepalive = _WingCfgDevVpnIkev1DpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 2, 1, 5),
    _WingCfgDevVpnIkev1DpdKeepalive_Type()
)
wingCfgDevVpnIkev1DpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1DpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1DpdKeepalive.setUnits("seconds")


class _WingCfgDevVpnIkev1DpdRetries_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev1DpdRetries based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgDevVpnIkev1DpdRetries_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev1DpdRetries_Object = MibTableColumn
wingCfgDevVpnIkev1DpdRetries = _WingCfgDevVpnIkev1DpdRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 2, 1, 6),
    _WingCfgDevVpnIkev1DpdRetries_Type()
)
wingCfgDevVpnIkev1DpdRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1DpdRetries.setStatus("current")
_WingCfgDevVpnIkev1IsakmpTable_Object = MibTable
wingCfgDevVpnIkev1IsakmpTable = _WingCfgDevVpnIkev1IsakmpTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 3)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpTable.setStatus("current")
_WingCfgDevVpnIkev1IsakmpEntry_Object = MibTableRow
wingCfgDevVpnIkev1IsakmpEntry = _WingCfgDevVpnIkev1IsakmpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 3, 1)
)
wingCfgDevVpnIkev1IsakmpEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev1Name"),
    (0, "WING-MIB", "wingCfgDevVpnIkev1IsakmpName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpEntry.setStatus("current")
_WingCfgDevVpnIkev1IsakmpName_Type = WingIdentifier
_WingCfgDevVpnIkev1IsakmpName_Object = MibTableColumn
wingCfgDevVpnIkev1IsakmpName = _WingCfgDevVpnIkev1IsakmpName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 3, 1, 1),
    _WingCfgDevVpnIkev1IsakmpName_Type()
)
wingCfgDevVpnIkev1IsakmpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpName.setStatus("current")


class _WingCfgDevVpnIkev1IsakmpEncryption_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1IsakmpEncryption based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgDevVpnIkev1IsakmpEncryption_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1IsakmpEncryption_Object = MibTableColumn
wingCfgDevVpnIkev1IsakmpEncryption = _WingCfgDevVpnIkev1IsakmpEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 3, 1, 3),
    _WingCfgDevVpnIkev1IsakmpEncryption_Type()
)
wingCfgDevVpnIkev1IsakmpEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpEncryption.setStatus("current")


class _WingCfgDevVpnIkev1IsakmpGroup_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1IsakmpGroup based on DisplayString"""
    defaultValue = OctetString("2")


_WingCfgDevVpnIkev1IsakmpGroup_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1IsakmpGroup_Object = MibTableColumn
wingCfgDevVpnIkev1IsakmpGroup = _WingCfgDevVpnIkev1IsakmpGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 3, 1, 4),
    _WingCfgDevVpnIkev1IsakmpGroup_Type()
)
wingCfgDevVpnIkev1IsakmpGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpGroup.setStatus("current")


class _WingCfgDevVpnIkev1IsakmpHash_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1IsakmpHash based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgDevVpnIkev1IsakmpHash_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1IsakmpHash_Object = MibTableColumn
wingCfgDevVpnIkev1IsakmpHash = _WingCfgDevVpnIkev1IsakmpHash_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 3, 1, 5),
    _WingCfgDevVpnIkev1IsakmpHash_Type()
)
wingCfgDevVpnIkev1IsakmpHash.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1IsakmpHash.setStatus("current")
_WingCfgDevVpnIkev2Table_Object = MibTable
wingCfgDevVpnIkev2Table = _WingCfgDevVpnIkev2Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 4)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2Table.setStatus("current")
_WingCfgDevVpnIkev2Entry_Object = MibTableRow
wingCfgDevVpnIkev2Entry = _WingCfgDevVpnIkev2Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 4, 1)
)
wingCfgDevVpnIkev2Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev2Name"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2Entry.setStatus("current")
_WingCfgDevVpnIkev2Name_Type = WingIdentifier
_WingCfgDevVpnIkev2Name_Object = MibTableColumn
wingCfgDevVpnIkev2Name = _WingCfgDevVpnIkev2Name_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 4, 1, 1),
    _WingCfgDevVpnIkev2Name_Type()
)
wingCfgDevVpnIkev2Name.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2Name.setStatus("current")


class _WingCfgDevVpnIkev2IkeLifetime_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev2IkeLifetime based on Unsigned32"""
    defaultValue = 86400

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(600, 2147483646),
    )


_WingCfgDevVpnIkev2IkeLifetime_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev2IkeLifetime_Object = MibTableColumn
wingCfgDevVpnIkev2IkeLifetime = _WingCfgDevVpnIkev2IkeLifetime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 4, 1, 3),
    _WingCfgDevVpnIkev2IkeLifetime_Type()
)
wingCfgDevVpnIkev2IkeLifetime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IkeLifetime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IkeLifetime.setUnits("seconds")


class _WingCfgDevVpnIkev2DpdKeepalive_Type(Unsigned32):
    """Custom type wingCfgDevVpnIkev2DpdKeepalive based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 3600),
    )


_WingCfgDevVpnIkev2DpdKeepalive_Type.__name__ = "Unsigned32"
_WingCfgDevVpnIkev2DpdKeepalive_Object = MibTableColumn
wingCfgDevVpnIkev2DpdKeepalive = _WingCfgDevVpnIkev2DpdKeepalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 4, 1, 4),
    _WingCfgDevVpnIkev2DpdKeepalive_Type()
)
wingCfgDevVpnIkev2DpdKeepalive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2DpdKeepalive.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2DpdKeepalive.setUnits("seconds")
_WingCfgDevVpnIkev2IsakmpTable_Object = MibTable
wingCfgDevVpnIkev2IsakmpTable = _WingCfgDevVpnIkev2IsakmpTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 5)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IsakmpTable.setStatus("current")
_WingCfgDevVpnIkev2IsakmpEntry_Object = MibTableRow
wingCfgDevVpnIkev2IsakmpEntry = _WingCfgDevVpnIkev2IsakmpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 5, 1)
)
wingCfgDevVpnIkev2IsakmpEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev2Name"),
    (0, "WING-MIB", "wingCfgDevVpnIkev2IsakmpName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IsakmpEntry.setStatus("current")
_WingCfgDevVpnIkev2IsakmpName_Type = WingIdentifier
_WingCfgDevVpnIkev2IsakmpName_Object = MibTableColumn
wingCfgDevVpnIkev2IsakmpName = _WingCfgDevVpnIkev2IsakmpName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 5, 1, 1),
    _WingCfgDevVpnIkev2IsakmpName_Type()
)
wingCfgDevVpnIkev2IsakmpName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IsakmpName.setStatus("current")


class _WingCfgDevVpnIkev2IsakmpEncryption_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2IsakmpEncryption based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgDevVpnIkev2IsakmpEncryption_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2IsakmpEncryption_Object = MibTableColumn
wingCfgDevVpnIkev2IsakmpEncryption = _WingCfgDevVpnIkev2IsakmpEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 5, 1, 3),
    _WingCfgDevVpnIkev2IsakmpEncryption_Type()
)
wingCfgDevVpnIkev2IsakmpEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IsakmpEncryption.setStatus("current")


class _WingCfgDevVpnIkev2IsakmpGroup_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2IsakmpGroup based on DisplayString"""
    defaultValue = OctetString("2")


_WingCfgDevVpnIkev2IsakmpGroup_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2IsakmpGroup_Object = MibTableColumn
wingCfgDevVpnIkev2IsakmpGroup = _WingCfgDevVpnIkev2IsakmpGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 5, 1, 4),
    _WingCfgDevVpnIkev2IsakmpGroup_Type()
)
wingCfgDevVpnIkev2IsakmpGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IsakmpGroup.setStatus("current")


class _WingCfgDevVpnIkev2IsakmpHash_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2IsakmpHash based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgDevVpnIkev2IsakmpHash_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2IsakmpHash_Object = MibTableColumn
wingCfgDevVpnIkev2IsakmpHash = _WingCfgDevVpnIkev2IsakmpHash_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 5, 1, 5),
    _WingCfgDevVpnIkev2IsakmpHash_Type()
)
wingCfgDevVpnIkev2IsakmpHash.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2IsakmpHash.setStatus("current")
_WingCfgDevVpnIkev1PeerTable_Object = MibTable
wingCfgDevVpnIkev1PeerTable = _WingCfgDevVpnIkev1PeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerTable.setStatus("current")
_WingCfgDevVpnIkev1PeerEntry_Object = MibTableRow
wingCfgDevVpnIkev1PeerEntry = _WingCfgDevVpnIkev1PeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1)
)
wingCfgDevVpnIkev1PeerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev1PeerName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerEntry.setStatus("current")
_WingCfgDevVpnIkev1PeerName_Type = WingIdentifier
_WingCfgDevVpnIkev1PeerName_Object = MibTableColumn
wingCfgDevVpnIkev1PeerName = _WingCfgDevVpnIkev1PeerName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 1),
    _WingCfgDevVpnIkev1PeerName_Type()
)
wingCfgDevVpnIkev1PeerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerName.setStatus("current")


class _WingCfgDevVpnIkev1PeerIpType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerIpType based on DisplayString"""
    defaultValue = OctetString("address")


_WingCfgDevVpnIkev1PeerIpType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerIpType_Object = MibTableColumn
wingCfgDevVpnIkev1PeerIpType = _WingCfgDevVpnIkev1PeerIpType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 3),
    _WingCfgDevVpnIkev1PeerIpType_Type()
)
wingCfgDevVpnIkev1PeerIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerIpType.setStatus("current")


class _WingCfgDevVpnIkev1PeerIpValue_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerIpValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgDevVpnIkev1PeerIpValue_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerIpValue_Object = MibTableColumn
wingCfgDevVpnIkev1PeerIpValue = _WingCfgDevVpnIkev1PeerIpValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 4),
    _WingCfgDevVpnIkev1PeerIpValue_Type()
)
wingCfgDevVpnIkev1PeerIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerIpValue.setStatus("current")


class _WingCfgDevVpnIkev1PeerAuthType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerAuthType based on DisplayString"""
    defaultValue = OctetString("rsa")


_WingCfgDevVpnIkev1PeerAuthType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerAuthType_Object = MibTableColumn
wingCfgDevVpnIkev1PeerAuthType = _WingCfgDevVpnIkev1PeerAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 5),
    _WingCfgDevVpnIkev1PeerAuthType_Type()
)
wingCfgDevVpnIkev1PeerAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerAuthType.setStatus("current")


class _WingCfgDevVpnIkev1PeerAuthKey_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgDevVpnIkev1PeerAuthKey_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerAuthKey_Object = MibTableColumn
wingCfgDevVpnIkev1PeerAuthKey = _WingCfgDevVpnIkev1PeerAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 6),
    _WingCfgDevVpnIkev1PeerAuthKey_Type()
)
wingCfgDevVpnIkev1PeerAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerAuthKey.setStatus("current")


class _WingCfgDevVpnIkev1PeerLocalidType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerLocalidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgDevVpnIkev1PeerLocalidType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerLocalidType_Object = MibTableColumn
wingCfgDevVpnIkev1PeerLocalidType = _WingCfgDevVpnIkev1PeerLocalidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 7),
    _WingCfgDevVpnIkev1PeerLocalidType_Type()
)
wingCfgDevVpnIkev1PeerLocalidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerLocalidType.setStatus("current")


class _WingCfgDevVpnIkev1PeerLocalidValue_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerLocalidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgDevVpnIkev1PeerLocalidValue_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerLocalidValue_Object = MibTableColumn
wingCfgDevVpnIkev1PeerLocalidValue = _WingCfgDevVpnIkev1PeerLocalidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 8),
    _WingCfgDevVpnIkev1PeerLocalidValue_Type()
)
wingCfgDevVpnIkev1PeerLocalidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerLocalidValue.setStatus("current")


class _WingCfgDevVpnIkev1PeerRemoteidType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerRemoteidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgDevVpnIkev1PeerRemoteidType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerRemoteidType_Object = MibTableColumn
wingCfgDevVpnIkev1PeerRemoteidType = _WingCfgDevVpnIkev1PeerRemoteidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 9),
    _WingCfgDevVpnIkev1PeerRemoteidType_Type()
)
wingCfgDevVpnIkev1PeerRemoteidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerRemoteidType.setStatus("current")


class _WingCfgDevVpnIkev1PeerRemoteidValue_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1PeerRemoteidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgDevVpnIkev1PeerRemoteidValue_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1PeerRemoteidValue_Object = MibTableColumn
wingCfgDevVpnIkev1PeerRemoteidValue = _WingCfgDevVpnIkev1PeerRemoteidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 10),
    _WingCfgDevVpnIkev1PeerRemoteidValue_Type()
)
wingCfgDevVpnIkev1PeerRemoteidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerRemoteidValue.setStatus("current")
_WingCfgDevVpnIkev1PeerIkev1Policy_Type = WingIdentifier
_WingCfgDevVpnIkev1PeerIkev1Policy_Object = MibTableColumn
wingCfgDevVpnIkev1PeerIkev1Policy = _WingCfgDevVpnIkev1PeerIkev1Policy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 6, 1, 11),
    _WingCfgDevVpnIkev1PeerIkev1Policy_Type()
)
wingCfgDevVpnIkev1PeerIkev1Policy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1PeerIkev1Policy.setStatus("current")
_WingCfgDevVpnIkev2PeerTable_Object = MibTable
wingCfgDevVpnIkev2PeerTable = _WingCfgDevVpnIkev2PeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerTable.setStatus("current")
_WingCfgDevVpnIkev2PeerEntry_Object = MibTableRow
wingCfgDevVpnIkev2PeerEntry = _WingCfgDevVpnIkev2PeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1)
)
wingCfgDevVpnIkev2PeerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev2PeerName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerEntry.setStatus("current")
_WingCfgDevVpnIkev2PeerName_Type = WingIdentifier
_WingCfgDevVpnIkev2PeerName_Object = MibTableColumn
wingCfgDevVpnIkev2PeerName = _WingCfgDevVpnIkev2PeerName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 1),
    _WingCfgDevVpnIkev2PeerName_Type()
)
wingCfgDevVpnIkev2PeerName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerName.setStatus("current")


class _WingCfgDevVpnIkev2PeerIpType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerIpType based on DisplayString"""
    defaultValue = OctetString("address")


_WingCfgDevVpnIkev2PeerIpType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerIpType_Object = MibTableColumn
wingCfgDevVpnIkev2PeerIpType = _WingCfgDevVpnIkev2PeerIpType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 3),
    _WingCfgDevVpnIkev2PeerIpType_Type()
)
wingCfgDevVpnIkev2PeerIpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerIpType.setStatus("current")


class _WingCfgDevVpnIkev2PeerIpValue_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerIpValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgDevVpnIkev2PeerIpValue_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerIpValue_Object = MibTableColumn
wingCfgDevVpnIkev2PeerIpValue = _WingCfgDevVpnIkev2PeerIpValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 4),
    _WingCfgDevVpnIkev2PeerIpValue_Type()
)
wingCfgDevVpnIkev2PeerIpValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerIpValue.setStatus("current")


class _WingCfgDevVpnIkev2PeerLocalAuthType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerLocalAuthType based on DisplayString"""
    defaultValue = OctetString("rsa")


_WingCfgDevVpnIkev2PeerLocalAuthType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerLocalAuthType_Object = MibTableColumn
wingCfgDevVpnIkev2PeerLocalAuthType = _WingCfgDevVpnIkev2PeerLocalAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 5),
    _WingCfgDevVpnIkev2PeerLocalAuthType_Type()
)
wingCfgDevVpnIkev2PeerLocalAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerLocalAuthType.setStatus("current")


class _WingCfgDevVpnIkev2PeerLocalAuthKey_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerLocalAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgDevVpnIkev2PeerLocalAuthKey_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerLocalAuthKey_Object = MibTableColumn
wingCfgDevVpnIkev2PeerLocalAuthKey = _WingCfgDevVpnIkev2PeerLocalAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 6),
    _WingCfgDevVpnIkev2PeerLocalAuthKey_Type()
)
wingCfgDevVpnIkev2PeerLocalAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerLocalAuthKey.setStatus("current")


class _WingCfgDevVpnIkev2PeerRemoteAuthType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerRemoteAuthType based on DisplayString"""
    defaultValue = OctetString("rsa")


_WingCfgDevVpnIkev2PeerRemoteAuthType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerRemoteAuthType_Object = MibTableColumn
wingCfgDevVpnIkev2PeerRemoteAuthType = _WingCfgDevVpnIkev2PeerRemoteAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 7),
    _WingCfgDevVpnIkev2PeerRemoteAuthType_Type()
)
wingCfgDevVpnIkev2PeerRemoteAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerRemoteAuthType.setStatus("current")


class _WingCfgDevVpnIkev2PeerRemoteAuthKey_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerRemoteAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgDevVpnIkev2PeerRemoteAuthKey_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerRemoteAuthKey_Object = MibTableColumn
wingCfgDevVpnIkev2PeerRemoteAuthKey = _WingCfgDevVpnIkev2PeerRemoteAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 8),
    _WingCfgDevVpnIkev2PeerRemoteAuthKey_Type()
)
wingCfgDevVpnIkev2PeerRemoteAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerRemoteAuthKey.setStatus("current")


class _WingCfgDevVpnIkev2PeerLocalidType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerLocalidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgDevVpnIkev2PeerLocalidType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerLocalidType_Object = MibTableColumn
wingCfgDevVpnIkev2PeerLocalidType = _WingCfgDevVpnIkev2PeerLocalidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 9),
    _WingCfgDevVpnIkev2PeerLocalidType_Type()
)
wingCfgDevVpnIkev2PeerLocalidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerLocalidType.setStatus("current")


class _WingCfgDevVpnIkev2PeerLocalidValue_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerLocalidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgDevVpnIkev2PeerLocalidValue_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerLocalidValue_Object = MibTableColumn
wingCfgDevVpnIkev2PeerLocalidValue = _WingCfgDevVpnIkev2PeerLocalidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 10),
    _WingCfgDevVpnIkev2PeerLocalidValue_Type()
)
wingCfgDevVpnIkev2PeerLocalidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerLocalidValue.setStatus("current")


class _WingCfgDevVpnIkev2PeerRemoteidType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerRemoteidType based on DisplayString"""
    defaultValue = OctetString("'string'")


_WingCfgDevVpnIkev2PeerRemoteidType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerRemoteidType_Object = MibTableColumn
wingCfgDevVpnIkev2PeerRemoteidType = _WingCfgDevVpnIkev2PeerRemoteidType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 11),
    _WingCfgDevVpnIkev2PeerRemoteidType_Type()
)
wingCfgDevVpnIkev2PeerRemoteidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerRemoteidType.setStatus("current")


class _WingCfgDevVpnIkev2PeerRemoteidValue_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2PeerRemoteidValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgDevVpnIkev2PeerRemoteidValue_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2PeerRemoteidValue_Object = MibTableColumn
wingCfgDevVpnIkev2PeerRemoteidValue = _WingCfgDevVpnIkev2PeerRemoteidValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 12),
    _WingCfgDevVpnIkev2PeerRemoteidValue_Type()
)
wingCfgDevVpnIkev2PeerRemoteidValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerRemoteidValue.setStatus("current")
_WingCfgDevVpnIkev2PeerIkev2Policy_Type = WingIdentifier
_WingCfgDevVpnIkev2PeerIkev2Policy_Object = MibTableColumn
wingCfgDevVpnIkev2PeerIkev2Policy = _WingCfgDevVpnIkev2PeerIkev2Policy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 7, 1, 13),
    _WingCfgDevVpnIkev2PeerIkev2Policy_Type()
)
wingCfgDevVpnIkev2PeerIkev2Policy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2PeerIkev2Policy.setStatus("current")
_WingCfgDevVpnTransformTable_Object = MibTable
wingCfgDevVpnTransformTable = _WingCfgDevVpnTransformTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 8)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnTransformTable.setStatus("current")
_WingCfgDevVpnTransformEntry_Object = MibTableRow
wingCfgDevVpnTransformEntry = _WingCfgDevVpnTransformEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 8, 1)
)
wingCfgDevVpnTransformEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnTransformName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnTransformEntry.setStatus("current")
_WingCfgDevVpnTransformName_Type = WingIdentifier
_WingCfgDevVpnTransformName_Object = MibTableColumn
wingCfgDevVpnTransformName = _WingCfgDevVpnTransformName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 8, 1, 1),
    _WingCfgDevVpnTransformName_Type()
)
wingCfgDevVpnTransformName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnTransformName.setStatus("current")


class _WingCfgDevVpnTransformCipherAlgo_Type(DisplayString):
    """Custom type wingCfgDevVpnTransformCipherAlgo based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgDevVpnTransformCipherAlgo_Type.__name__ = "DisplayString"
_WingCfgDevVpnTransformCipherAlgo_Object = MibTableColumn
wingCfgDevVpnTransformCipherAlgo = _WingCfgDevVpnTransformCipherAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 8, 1, 3),
    _WingCfgDevVpnTransformCipherAlgo_Type()
)
wingCfgDevVpnTransformCipherAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnTransformCipherAlgo.setStatus("current")


class _WingCfgDevVpnTransformAuthAlgo_Type(DisplayString):
    """Custom type wingCfgDevVpnTransformAuthAlgo based on DisplayString"""
    defaultValue = OctetString("sha-hmac")


_WingCfgDevVpnTransformAuthAlgo_Type.__name__ = "DisplayString"
_WingCfgDevVpnTransformAuthAlgo_Object = MibTableColumn
wingCfgDevVpnTransformAuthAlgo = _WingCfgDevVpnTransformAuthAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 8, 1, 4),
    _WingCfgDevVpnTransformAuthAlgo_Type()
)
wingCfgDevVpnTransformAuthAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnTransformAuthAlgo.setStatus("current")


class _WingCfgDevVpnTransformMode_Type(DisplayString):
    """Custom type wingCfgDevVpnTransformMode based on DisplayString"""
    defaultValue = OctetString("tunnel")


_WingCfgDevVpnTransformMode_Type.__name__ = "DisplayString"
_WingCfgDevVpnTransformMode_Object = MibTableColumn
wingCfgDevVpnTransformMode = _WingCfgDevVpnTransformMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 8, 1, 5),
    _WingCfgDevVpnTransformMode_Type()
)
wingCfgDevVpnTransformMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnTransformMode.setStatus("current")
_WingCfgDevVpnCryptoTable_Object = MibTable
wingCfgDevVpnCryptoTable = _WingCfgDevVpnCryptoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 9)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoTable.setStatus("current")
_WingCfgDevVpnCryptoEntry_Object = MibTableRow
wingCfgDevVpnCryptoEntry = _WingCfgDevVpnCryptoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 9, 1)
)
wingCfgDevVpnCryptoEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoEntry.setStatus("current")
_WingCfgDevVpnCryptoName_Type = WingIdentifier
_WingCfgDevVpnCryptoName_Object = MibTableColumn
wingCfgDevVpnCryptoName = _WingCfgDevVpnCryptoName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 9, 1, 1),
    _WingCfgDevVpnCryptoName_Type()
)
wingCfgDevVpnCryptoName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoName.setStatus("current")
_WingCfgDevVpnCryptoInstTable_Object = MibTable
wingCfgDevVpnCryptoInstTable = _WingCfgDevVpnCryptoInstTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstTable.setStatus("current")
_WingCfgDevVpnCryptoInstEntry_Object = MibTableRow
wingCfgDevVpnCryptoInstEntry = _WingCfgDevVpnCryptoInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1)
)
wingCfgDevVpnCryptoInstEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoName"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoInstSequence"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEntry.setStatus("current")


class _WingCfgDevVpnCryptoInstSequence_Type(Unsigned32):
    """Custom type wingCfgDevVpnCryptoInstSequence based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_WingCfgDevVpnCryptoInstSequence_Type.__name__ = "Unsigned32"
_WingCfgDevVpnCryptoInstSequence_Object = MibTableColumn
wingCfgDevVpnCryptoInstSequence = _WingCfgDevVpnCryptoInstSequence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 1),
    _WingCfgDevVpnCryptoInstSequence_Type()
)
wingCfgDevVpnCryptoInstSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstSequence.setStatus("current")


class _WingCfgDevVpnCryptoInstType_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstType based on DisplayString"""
    defaultValue = OctetString("site-to-site-auto")


_WingCfgDevVpnCryptoInstType_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstType_Object = MibTableColumn
wingCfgDevVpnCryptoInstType = _WingCfgDevVpnCryptoInstType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 3),
    _WingCfgDevVpnCryptoInstType_Type()
)
wingCfgDevVpnCryptoInstType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstType.setStatus("current")
_WingCfgDevVpnCryptoInstIpAcl_Type = WingIdentifier
_WingCfgDevVpnCryptoInstIpAcl_Object = MibTableColumn
wingCfgDevVpnCryptoInstIpAcl = _WingCfgDevVpnCryptoInstIpAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 4),
    _WingCfgDevVpnCryptoInstIpAcl_Type()
)
wingCfgDevVpnCryptoInstIpAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstIpAcl.setStatus("current")
_WingCfgDevVpnCryptoInstTransformSet_Type = WingIdentifier
_WingCfgDevVpnCryptoInstTransformSet_Object = MibTableColumn
wingCfgDevVpnCryptoInstTransformSet = _WingCfgDevVpnCryptoInstTransformSet_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 5),
    _WingCfgDevVpnCryptoInstTransformSet_Type()
)
wingCfgDevVpnCryptoInstTransformSet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstTransformSet.setStatus("current")
_WingCfgDevVpnCryptoInstLocalip_Type = DisplayString
_WingCfgDevVpnCryptoInstLocalip_Object = MibTableColumn
wingCfgDevVpnCryptoInstLocalip = _WingCfgDevVpnCryptoInstLocalip_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 6),
    _WingCfgDevVpnCryptoInstLocalip_Type()
)
wingCfgDevVpnCryptoInstLocalip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstLocalip.setStatus("current")


class _WingCfgDevVpnCryptoInstPfs_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstPfs based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevVpnCryptoInstPfs_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstPfs_Object = MibTableColumn
wingCfgDevVpnCryptoInstPfs = _WingCfgDevVpnCryptoInstPfs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 7),
    _WingCfgDevVpnCryptoInstPfs_Type()
)
wingCfgDevVpnCryptoInstPfs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPfs.setStatus("current")


class _WingCfgDevVpnCryptoInstLifetimeSeconds_Type(Unsigned32):
    """Custom type wingCfgDevVpnCryptoInstLifetimeSeconds based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(120, 2147483646),
    )


_WingCfgDevVpnCryptoInstLifetimeSeconds_Type.__name__ = "Unsigned32"
_WingCfgDevVpnCryptoInstLifetimeSeconds_Object = MibTableColumn
wingCfgDevVpnCryptoInstLifetimeSeconds = _WingCfgDevVpnCryptoInstLifetimeSeconds_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 8),
    _WingCfgDevVpnCryptoInstLifetimeSeconds_Type()
)
wingCfgDevVpnCryptoInstLifetimeSeconds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstLifetimeSeconds.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstLifetimeSeconds.setUnits("seconds")


class _WingCfgDevVpnCryptoInstLifetimeKb_Type(Unsigned32):
    """Custom type wingCfgDevVpnCryptoInstLifetimeKb based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(500, 2147483646),
    )


_WingCfgDevVpnCryptoInstLifetimeKb_Type.__name__ = "Unsigned32"
_WingCfgDevVpnCryptoInstLifetimeKb_Object = MibTableColumn
wingCfgDevVpnCryptoInstLifetimeKb = _WingCfgDevVpnCryptoInstLifetimeKb_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 9),
    _WingCfgDevVpnCryptoInstLifetimeKb_Type()
)
wingCfgDevVpnCryptoInstLifetimeKb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstLifetimeKb.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstLifetimeKb.setUnits("kilobytes")


class _WingCfgDevVpnCryptoInstRemoteType_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstRemoteType based on DisplayString"""
    defaultValue = OctetString("xauth")


_WingCfgDevVpnCryptoInstRemoteType_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstRemoteType_Object = MibTableColumn
wingCfgDevVpnCryptoInstRemoteType = _WingCfgDevVpnCryptoInstRemoteType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 10),
    _WingCfgDevVpnCryptoInstRemoteType_Type()
)
wingCfgDevVpnCryptoInstRemoteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstRemoteType.setStatus("current")


class _WingCfgDevVpnCryptoInstModeconfig_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstModeconfig based on DisplayString"""
    defaultValue = OctetString("push")


_WingCfgDevVpnCryptoInstModeconfig_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstModeconfig_Object = MibTableColumn
wingCfgDevVpnCryptoInstModeconfig = _WingCfgDevVpnCryptoInstModeconfig_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 11),
    _WingCfgDevVpnCryptoInstModeconfig_Type()
)
wingCfgDevVpnCryptoInstModeconfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstModeconfig.setStatus("current")
_WingCfgDevVpnCryptoInstPeer_Type = DisplayString
_WingCfgDevVpnCryptoInstPeer_Object = MibTableColumn
wingCfgDevVpnCryptoInstPeer = _WingCfgDevVpnCryptoInstPeer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 12),
    _WingCfgDevVpnCryptoInstPeer_Type()
)
wingCfgDevVpnCryptoInstPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPeer.setStatus("current")


class _WingCfgDevVpnCryptoInstProtocol_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstProtocol based on DisplayString"""
    defaultValue = OctetString("ESP")


_WingCfgDevVpnCryptoInstProtocol_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstProtocol_Object = MibTableColumn
wingCfgDevVpnCryptoInstProtocol = _WingCfgDevVpnCryptoInstProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 13),
    _WingCfgDevVpnCryptoInstProtocol_Type()
)
wingCfgDevVpnCryptoInstProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstProtocol.setStatus("current")


class _WingCfgDevVpnCryptoInstMode_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstMode based on DisplayString"""
    defaultValue = OctetString("tunnel")


_WingCfgDevVpnCryptoInstMode_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstMode_Object = MibTableColumn
wingCfgDevVpnCryptoInstMode = _WingCfgDevVpnCryptoInstMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 10, 1, 14),
    _WingCfgDevVpnCryptoInstMode_Type()
)
wingCfgDevVpnCryptoInstMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstMode.setStatus("current")
_WingCfgDevVpnCryptoInstPeerListTable_Object = MibTable
wingCfgDevVpnCryptoInstPeerListTable = _WingCfgDevVpnCryptoInstPeerListTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 11)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPeerListTable.setStatus("current")
_WingCfgDevVpnCryptoInstPeerListEntry_Object = MibTableRow
wingCfgDevVpnCryptoInstPeerListEntry = _WingCfgDevVpnCryptoInstPeerListEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 11, 1)
)
wingCfgDevVpnCryptoInstPeerListEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoName"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoInstSequence"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoInstPeerListPriority"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPeerListEntry.setStatus("current")


class _WingCfgDevVpnCryptoInstPeerListPriority_Type(Unsigned32):
    """Custom type wingCfgDevVpnCryptoInstPeerListPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WingCfgDevVpnCryptoInstPeerListPriority_Type.__name__ = "Unsigned32"
_WingCfgDevVpnCryptoInstPeerListPriority_Object = MibTableColumn
wingCfgDevVpnCryptoInstPeerListPriority = _WingCfgDevVpnCryptoInstPeerListPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 11, 1, 1),
    _WingCfgDevVpnCryptoInstPeerListPriority_Type()
)
wingCfgDevVpnCryptoInstPeerListPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPeerListPriority.setStatus("current")
_WingCfgDevVpnCryptoInstPeerListType_Type = DisplayString
_WingCfgDevVpnCryptoInstPeerListType_Object = MibTableColumn
wingCfgDevVpnCryptoInstPeerListType = _WingCfgDevVpnCryptoInstPeerListType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 11, 1, 3),
    _WingCfgDevVpnCryptoInstPeerListType_Type()
)
wingCfgDevVpnCryptoInstPeerListType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPeerListType.setStatus("current")
_WingCfgDevVpnCryptoInstPeerListIkev1Peer_Type = WingIdentifier
_WingCfgDevVpnCryptoInstPeerListIkev1Peer_Object = MibTableColumn
wingCfgDevVpnCryptoInstPeerListIkev1Peer = _WingCfgDevVpnCryptoInstPeerListIkev1Peer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 11, 1, 4),
    _WingCfgDevVpnCryptoInstPeerListIkev1Peer_Type()
)
wingCfgDevVpnCryptoInstPeerListIkev1Peer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPeerListIkev1Peer.setStatus("current")
_WingCfgDevVpnCryptoInstPeerListIkev2Peer_Type = WingIdentifier
_WingCfgDevVpnCryptoInstPeerListIkev2Peer_Object = MibTableColumn
wingCfgDevVpnCryptoInstPeerListIkev2Peer = _WingCfgDevVpnCryptoInstPeerListIkev2Peer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 11, 1, 5),
    _WingCfgDevVpnCryptoInstPeerListIkev2Peer_Type()
)
wingCfgDevVpnCryptoInstPeerListIkev2Peer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstPeerListIkev2Peer.setStatus("current")
_WingCfgDevVpnCryptoInstAhSessionTable_Object = MibTable
wingCfgDevVpnCryptoInstAhSessionTable = _WingCfgDevVpnCryptoInstAhSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 12)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstAhSessionTable.setStatus("current")
_WingCfgDevVpnCryptoInstAhSessionEntry_Object = MibTableRow
wingCfgDevVpnCryptoInstAhSessionEntry = _WingCfgDevVpnCryptoInstAhSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 12, 1)
)
wingCfgDevVpnCryptoInstAhSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoName"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoInstSequence"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoInstAhSessionDirection"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstAhSessionEntry.setStatus("current")
_WingCfgDevVpnCryptoInstAhSessionDirection_Type = WingIdentifier
_WingCfgDevVpnCryptoInstAhSessionDirection_Object = MibTableColumn
wingCfgDevVpnCryptoInstAhSessionDirection = _WingCfgDevVpnCryptoInstAhSessionDirection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 12, 1, 1),
    _WingCfgDevVpnCryptoInstAhSessionDirection_Type()
)
wingCfgDevVpnCryptoInstAhSessionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstAhSessionDirection.setStatus("current")


class _WingCfgDevVpnCryptoInstAhSessionSpi_Type(Unsigned32):
    """Custom type wingCfgDevVpnCryptoInstAhSessionSpi based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 4294967295),
    )


_WingCfgDevVpnCryptoInstAhSessionSpi_Type.__name__ = "Unsigned32"
_WingCfgDevVpnCryptoInstAhSessionSpi_Object = MibTableColumn
wingCfgDevVpnCryptoInstAhSessionSpi = _WingCfgDevVpnCryptoInstAhSessionSpi_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 12, 1, 3),
    _WingCfgDevVpnCryptoInstAhSessionSpi_Type()
)
wingCfgDevVpnCryptoInstAhSessionSpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstAhSessionSpi.setStatus("current")


class _WingCfgDevVpnCryptoInstAhSessionAuthAlgo_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstAhSessionAuthAlgo based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgDevVpnCryptoInstAhSessionAuthAlgo_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstAhSessionAuthAlgo_Object = MibTableColumn
wingCfgDevVpnCryptoInstAhSessionAuthAlgo = _WingCfgDevVpnCryptoInstAhSessionAuthAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 12, 1, 4),
    _WingCfgDevVpnCryptoInstAhSessionAuthAlgo_Type()
)
wingCfgDevVpnCryptoInstAhSessionAuthAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstAhSessionAuthAlgo.setStatus("current")


class _WingCfgDevVpnCryptoInstAhSessionKey_Type(OctetString):
    """Custom type wingCfgDevVpnCryptoInstAhSessionKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 512),
    )


_WingCfgDevVpnCryptoInstAhSessionKey_Type.__name__ = "OctetString"
_WingCfgDevVpnCryptoInstAhSessionKey_Object = MibTableColumn
wingCfgDevVpnCryptoInstAhSessionKey = _WingCfgDevVpnCryptoInstAhSessionKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 12, 1, 5),
    _WingCfgDevVpnCryptoInstAhSessionKey_Type()
)
wingCfgDevVpnCryptoInstAhSessionKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstAhSessionKey.setStatus("current")
_WingCfgDevVpnCryptoInstEspSessionTable_Object = MibTable
wingCfgDevVpnCryptoInstEspSessionTable = _WingCfgDevVpnCryptoInstEspSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionTable.setStatus("current")
_WingCfgDevVpnCryptoInstEspSessionEntry_Object = MibTableRow
wingCfgDevVpnCryptoInstEspSessionEntry = _WingCfgDevVpnCryptoInstEspSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13, 1)
)
wingCfgDevVpnCryptoInstEspSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoName"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoInstSequence"),
    (0, "WING-MIB", "wingCfgDevVpnCryptoInstEspSessionDirection"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionEntry.setStatus("current")
_WingCfgDevVpnCryptoInstEspSessionDirection_Type = WingIdentifier
_WingCfgDevVpnCryptoInstEspSessionDirection_Object = MibTableColumn
wingCfgDevVpnCryptoInstEspSessionDirection = _WingCfgDevVpnCryptoInstEspSessionDirection_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13, 1, 1),
    _WingCfgDevVpnCryptoInstEspSessionDirection_Type()
)
wingCfgDevVpnCryptoInstEspSessionDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionDirection.setStatus("current")


class _WingCfgDevVpnCryptoInstEspSessionSpi_Type(Unsigned32):
    """Custom type wingCfgDevVpnCryptoInstEspSessionSpi based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 4294967295),
    )


_WingCfgDevVpnCryptoInstEspSessionSpi_Type.__name__ = "Unsigned32"
_WingCfgDevVpnCryptoInstEspSessionSpi_Object = MibTableColumn
wingCfgDevVpnCryptoInstEspSessionSpi = _WingCfgDevVpnCryptoInstEspSessionSpi_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13, 1, 3),
    _WingCfgDevVpnCryptoInstEspSessionSpi_Type()
)
wingCfgDevVpnCryptoInstEspSessionSpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionSpi.setStatus("current")


class _WingCfgDevVpnCryptoInstEspSessionCipherAlgo_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstEspSessionCipherAlgo based on DisplayString"""
    defaultValue = OctetString("aes-256")


_WingCfgDevVpnCryptoInstEspSessionCipherAlgo_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstEspSessionCipherAlgo_Object = MibTableColumn
wingCfgDevVpnCryptoInstEspSessionCipherAlgo = _WingCfgDevVpnCryptoInstEspSessionCipherAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13, 1, 4),
    _WingCfgDevVpnCryptoInstEspSessionCipherAlgo_Type()
)
wingCfgDevVpnCryptoInstEspSessionCipherAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionCipherAlgo.setStatus("current")


class _WingCfgDevVpnCryptoInstEspSessionCipherKey_Type(OctetString):
    """Custom type wingCfgDevVpnCryptoInstEspSessionCipherKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 512),
    )


_WingCfgDevVpnCryptoInstEspSessionCipherKey_Type.__name__ = "OctetString"
_WingCfgDevVpnCryptoInstEspSessionCipherKey_Object = MibTableColumn
wingCfgDevVpnCryptoInstEspSessionCipherKey = _WingCfgDevVpnCryptoInstEspSessionCipherKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13, 1, 5),
    _WingCfgDevVpnCryptoInstEspSessionCipherKey_Type()
)
wingCfgDevVpnCryptoInstEspSessionCipherKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionCipherKey.setStatus("current")


class _WingCfgDevVpnCryptoInstEspSessionAuthAlgo_Type(DisplayString):
    """Custom type wingCfgDevVpnCryptoInstEspSessionAuthAlgo based on DisplayString"""
    defaultValue = OctetString("sha")


_WingCfgDevVpnCryptoInstEspSessionAuthAlgo_Type.__name__ = "DisplayString"
_WingCfgDevVpnCryptoInstEspSessionAuthAlgo_Object = MibTableColumn
wingCfgDevVpnCryptoInstEspSessionAuthAlgo = _WingCfgDevVpnCryptoInstEspSessionAuthAlgo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13, 1, 6),
    _WingCfgDevVpnCryptoInstEspSessionAuthAlgo_Type()
)
wingCfgDevVpnCryptoInstEspSessionAuthAlgo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionAuthAlgo.setStatus("current")


class _WingCfgDevVpnCryptoInstEspSessionAuthKey_Type(OctetString):
    """Custom type wingCfgDevVpnCryptoInstEspSessionAuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 512),
    )


_WingCfgDevVpnCryptoInstEspSessionAuthKey_Type.__name__ = "OctetString"
_WingCfgDevVpnCryptoInstEspSessionAuthKey_Object = MibTableColumn
wingCfgDevVpnCryptoInstEspSessionAuthKey = _WingCfgDevVpnCryptoInstEspSessionAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 13, 1, 7),
    _WingCfgDevVpnCryptoInstEspSessionAuthKey_Type()
)
wingCfgDevVpnCryptoInstEspSessionAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnCryptoInstEspSessionAuthKey.setStatus("current")
_WingCfgDevVpnIkev1RemoteTable_Object = MibTable
wingCfgDevVpnIkev1RemoteTable = _WingCfgDevVpnIkev1RemoteTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 14)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteTable.setStatus("current")
_WingCfgDevVpnIkev1RemoteEntry_Object = MibTableRow
wingCfgDevVpnIkev1RemoteEntry = _WingCfgDevVpnIkev1RemoteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 14, 1)
)
wingCfgDevVpnIkev1RemoteEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteEntry.setStatus("current")


class _WingCfgDevVpnIkev1RemoteAuthMethod_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1RemoteAuthMethod based on DisplayString"""
    defaultValue = OctetString("local")


_WingCfgDevVpnIkev1RemoteAuthMethod_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1RemoteAuthMethod_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteAuthMethod = _WingCfgDevVpnIkev1RemoteAuthMethod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 14, 1, 1),
    _WingCfgDevVpnIkev1RemoteAuthMethod_Type()
)
wingCfgDevVpnIkev1RemoteAuthMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteAuthMethod.setStatus("current")
_WingCfgDevVpnIkev1RemoteAaaPolicy_Type = WingIdentifier
_WingCfgDevVpnIkev1RemoteAaaPolicy_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteAaaPolicy = _WingCfgDevVpnIkev1RemoteAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 14, 1, 2),
    _WingCfgDevVpnIkev1RemoteAaaPolicy_Type()
)
wingCfgDevVpnIkev1RemoteAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteAaaPolicy.setStatus("current")
_WingCfgDevVpnIkev1RemoteIpLocalPool_Type = DisplayString
_WingCfgDevVpnIkev1RemoteIpLocalPool_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteIpLocalPool = _WingCfgDevVpnIkev1RemoteIpLocalPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 14, 1, 3),
    _WingCfgDevVpnIkev1RemoteIpLocalPool_Type()
)
wingCfgDevVpnIkev1RemoteIpLocalPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteIpLocalPool.setStatus("current")
_WingCfgDevVpnIkev1RemoteLocalUsersTable_Object = MibTable
wingCfgDevVpnIkev1RemoteLocalUsersTable = _WingCfgDevVpnIkev1RemoteLocalUsersTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 15)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteLocalUsersTable.setStatus("current")
_WingCfgDevVpnIkev1RemoteLocalUsersEntry_Object = MibTableRow
wingCfgDevVpnIkev1RemoteLocalUsersEntry = _WingCfgDevVpnIkev1RemoteLocalUsersEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 15, 1)
)
wingCfgDevVpnIkev1RemoteLocalUsersEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev1RemoteLocalUsersName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteLocalUsersEntry.setStatus("current")
_WingCfgDevVpnIkev1RemoteLocalUsersName_Type = WingIdentifier
_WingCfgDevVpnIkev1RemoteLocalUsersName_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteLocalUsersName = _WingCfgDevVpnIkev1RemoteLocalUsersName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 15, 1, 1),
    _WingCfgDevVpnIkev1RemoteLocalUsersName_Type()
)
wingCfgDevVpnIkev1RemoteLocalUsersName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteLocalUsersName.setStatus("current")


class _WingCfgDevVpnIkev1RemoteLocalUsersPassword_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev1RemoteLocalUsersPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgDevVpnIkev1RemoteLocalUsersPassword_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev1RemoteLocalUsersPassword_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteLocalUsersPassword = _WingCfgDevVpnIkev1RemoteLocalUsersPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 15, 1, 3),
    _WingCfgDevVpnIkev1RemoteLocalUsersPassword_Type()
)
wingCfgDevVpnIkev1RemoteLocalUsersPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteLocalUsersPassword.setStatus("current")
_WingCfgDevVpnIkev1RemoteWinsTable_Object = MibTable
wingCfgDevVpnIkev1RemoteWinsTable = _WingCfgDevVpnIkev1RemoteWinsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 16)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteWinsTable.setStatus("current")
_WingCfgDevVpnIkev1RemoteWinsEntry_Object = MibTableRow
wingCfgDevVpnIkev1RemoteWinsEntry = _WingCfgDevVpnIkev1RemoteWinsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 16, 1)
)
wingCfgDevVpnIkev1RemoteWinsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev1RemoteWinsServerType"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteWinsEntry.setStatus("current")
_WingCfgDevVpnIkev1RemoteWinsServerType_Type = WingIdentifier
_WingCfgDevVpnIkev1RemoteWinsServerType_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteWinsServerType = _WingCfgDevVpnIkev1RemoteWinsServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 16, 1, 1),
    _WingCfgDevVpnIkev1RemoteWinsServerType_Type()
)
wingCfgDevVpnIkev1RemoteWinsServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteWinsServerType.setStatus("current")
_WingCfgDevVpnIkev1RemoteWinsServerIp_Type = DisplayString
_WingCfgDevVpnIkev1RemoteWinsServerIp_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteWinsServerIp = _WingCfgDevVpnIkev1RemoteWinsServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 16, 1, 3),
    _WingCfgDevVpnIkev1RemoteWinsServerIp_Type()
)
wingCfgDevVpnIkev1RemoteWinsServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteWinsServerIp.setStatus("current")
_WingCfgDevVpnIkev1RemoteNameServerTable_Object = MibTable
wingCfgDevVpnIkev1RemoteNameServerTable = _WingCfgDevVpnIkev1RemoteNameServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 17)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteNameServerTable.setStatus("current")
_WingCfgDevVpnIkev1RemoteNameServerEntry_Object = MibTableRow
wingCfgDevVpnIkev1RemoteNameServerEntry = _WingCfgDevVpnIkev1RemoteNameServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 17, 1)
)
wingCfgDevVpnIkev1RemoteNameServerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev1RemoteNameServerType"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteNameServerEntry.setStatus("current")
_WingCfgDevVpnIkev1RemoteNameServerType_Type = WingIdentifier
_WingCfgDevVpnIkev1RemoteNameServerType_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteNameServerType = _WingCfgDevVpnIkev1RemoteNameServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 17, 1, 1),
    _WingCfgDevVpnIkev1RemoteNameServerType_Type()
)
wingCfgDevVpnIkev1RemoteNameServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteNameServerType.setStatus("current")
_WingCfgDevVpnIkev1RemoteNameServerIp_Type = DisplayString
_WingCfgDevVpnIkev1RemoteNameServerIp_Object = MibTableColumn
wingCfgDevVpnIkev1RemoteNameServerIp = _WingCfgDevVpnIkev1RemoteNameServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 17, 1, 4),
    _WingCfgDevVpnIkev1RemoteNameServerIp_Type()
)
wingCfgDevVpnIkev1RemoteNameServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev1RemoteNameServerIp.setStatus("current")
_WingCfgDevVpnIkev2RemoteTable_Object = MibTable
wingCfgDevVpnIkev2RemoteTable = _WingCfgDevVpnIkev2RemoteTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteTable.setStatus("current")
_WingCfgDevVpnIkev2RemoteEntry_Object = MibTableRow
wingCfgDevVpnIkev2RemoteEntry = _WingCfgDevVpnIkev2RemoteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1)
)
wingCfgDevVpnIkev2RemoteEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteEntry.setStatus("current")


class _WingCfgDevVpnIkev2RemoteAuthMethod_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2RemoteAuthMethod based on DisplayString"""
    defaultValue = OctetString("local")


_WingCfgDevVpnIkev2RemoteAuthMethod_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2RemoteAuthMethod_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteAuthMethod = _WingCfgDevVpnIkev2RemoteAuthMethod_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1, 1),
    _WingCfgDevVpnIkev2RemoteAuthMethod_Type()
)
wingCfgDevVpnIkev2RemoteAuthMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteAuthMethod.setStatus("current")
_WingCfgDevVpnIkev2RemoteAaaPolicy_Type = WingIdentifier
_WingCfgDevVpnIkev2RemoteAaaPolicy_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteAaaPolicy = _WingCfgDevVpnIkev2RemoteAaaPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1, 2),
    _WingCfgDevVpnIkev2RemoteAaaPolicy_Type()
)
wingCfgDevVpnIkev2RemoteAaaPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteAaaPolicy.setStatus("current")
_WingCfgDevVpnIkev2RemoteIpLocalPool_Type = DisplayString
_WingCfgDevVpnIkev2RemoteIpLocalPool_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteIpLocalPool = _WingCfgDevVpnIkev2RemoteIpLocalPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1, 3),
    _WingCfgDevVpnIkev2RemoteIpLocalPool_Type()
)
wingCfgDevVpnIkev2RemoteIpLocalPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteIpLocalPool.setStatus("current")


class _WingCfgDevVpnIkev2RemoteDhcpServerType_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2RemoteDhcpServerType based on DisplayString"""
    defaultValue = OctetString("'none'")


_WingCfgDevVpnIkev2RemoteDhcpServerType_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2RemoteDhcpServerType_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteDhcpServerType = _WingCfgDevVpnIkev2RemoteDhcpServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1, 4),
    _WingCfgDevVpnIkev2RemoteDhcpServerType_Type()
)
wingCfgDevVpnIkev2RemoteDhcpServerType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteDhcpServerType.setStatus("current")


class _WingCfgDevVpnIkev2RemoteDhcpServer_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2RemoteDhcpServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgDevVpnIkev2RemoteDhcpServer_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2RemoteDhcpServer_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteDhcpServer = _WingCfgDevVpnIkev2RemoteDhcpServer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1, 5),
    _WingCfgDevVpnIkev2RemoteDhcpServer_Type()
)
wingCfgDevVpnIkev2RemoteDhcpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteDhcpServer.setStatus("current")
_WingCfgDevVpnIkev2RemoteDhcpServerGiaddr_Type = DisplayString
_WingCfgDevVpnIkev2RemoteDhcpServerGiaddr_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteDhcpServerGiaddr = _WingCfgDevVpnIkev2RemoteDhcpServerGiaddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1, 6),
    _WingCfgDevVpnIkev2RemoteDhcpServerGiaddr_Type()
)
wingCfgDevVpnIkev2RemoteDhcpServerGiaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteDhcpServerGiaddr.setStatus("current")
_WingCfgDevVpnIkev2RemoteNetmask_Type = DisplayString
_WingCfgDevVpnIkev2RemoteNetmask_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteNetmask = _WingCfgDevVpnIkev2RemoteNetmask_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 18, 1, 7),
    _WingCfgDevVpnIkev2RemoteNetmask_Type()
)
wingCfgDevVpnIkev2RemoteNetmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteNetmask.setStatus("current")
_WingCfgDevVpnIkev2RemoteLocalUsersTable_Object = MibTable
wingCfgDevVpnIkev2RemoteLocalUsersTable = _WingCfgDevVpnIkev2RemoteLocalUsersTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 19)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteLocalUsersTable.setStatus("current")
_WingCfgDevVpnIkev2RemoteLocalUsersEntry_Object = MibTableRow
wingCfgDevVpnIkev2RemoteLocalUsersEntry = _WingCfgDevVpnIkev2RemoteLocalUsersEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 19, 1)
)
wingCfgDevVpnIkev2RemoteLocalUsersEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev2RemoteLocalUsersName"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteLocalUsersEntry.setStatus("current")
_WingCfgDevVpnIkev2RemoteLocalUsersName_Type = WingIdentifier
_WingCfgDevVpnIkev2RemoteLocalUsersName_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteLocalUsersName = _WingCfgDevVpnIkev2RemoteLocalUsersName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 19, 1, 1),
    _WingCfgDevVpnIkev2RemoteLocalUsersName_Type()
)
wingCfgDevVpnIkev2RemoteLocalUsersName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteLocalUsersName.setStatus("current")


class _WingCfgDevVpnIkev2RemoteLocalUsersPassword_Type(DisplayString):
    """Custom type wingCfgDevVpnIkev2RemoteLocalUsersPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgDevVpnIkev2RemoteLocalUsersPassword_Type.__name__ = "DisplayString"
_WingCfgDevVpnIkev2RemoteLocalUsersPassword_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteLocalUsersPassword = _WingCfgDevVpnIkev2RemoteLocalUsersPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 19, 1, 3),
    _WingCfgDevVpnIkev2RemoteLocalUsersPassword_Type()
)
wingCfgDevVpnIkev2RemoteLocalUsersPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteLocalUsersPassword.setStatus("current")
_WingCfgDevVpnIkev2RemoteWinsTable_Object = MibTable
wingCfgDevVpnIkev2RemoteWinsTable = _WingCfgDevVpnIkev2RemoteWinsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 20)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteWinsTable.setStatus("current")
_WingCfgDevVpnIkev2RemoteWinsEntry_Object = MibTableRow
wingCfgDevVpnIkev2RemoteWinsEntry = _WingCfgDevVpnIkev2RemoteWinsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 20, 1)
)
wingCfgDevVpnIkev2RemoteWinsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev2RemoteWinsServerType"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteWinsEntry.setStatus("current")
_WingCfgDevVpnIkev2RemoteWinsServerType_Type = WingIdentifier
_WingCfgDevVpnIkev2RemoteWinsServerType_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteWinsServerType = _WingCfgDevVpnIkev2RemoteWinsServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 20, 1, 1),
    _WingCfgDevVpnIkev2RemoteWinsServerType_Type()
)
wingCfgDevVpnIkev2RemoteWinsServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteWinsServerType.setStatus("current")
_WingCfgDevVpnIkev2RemoteWinsServerIp_Type = DisplayString
_WingCfgDevVpnIkev2RemoteWinsServerIp_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteWinsServerIp = _WingCfgDevVpnIkev2RemoteWinsServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 20, 1, 3),
    _WingCfgDevVpnIkev2RemoteWinsServerIp_Type()
)
wingCfgDevVpnIkev2RemoteWinsServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteWinsServerIp.setStatus("current")
_WingCfgDevVpnIkev2RemoteNameServerTable_Object = MibTable
wingCfgDevVpnIkev2RemoteNameServerTable = _WingCfgDevVpnIkev2RemoteNameServerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 21)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteNameServerTable.setStatus("current")
_WingCfgDevVpnIkev2RemoteNameServerEntry_Object = MibTableRow
wingCfgDevVpnIkev2RemoteNameServerEntry = _WingCfgDevVpnIkev2RemoteNameServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 21, 1)
)
wingCfgDevVpnIkev2RemoteNameServerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVpnIkev2RemoteNameServerType"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteNameServerEntry.setStatus("current")
_WingCfgDevVpnIkev2RemoteNameServerType_Type = WingIdentifier
_WingCfgDevVpnIkev2RemoteNameServerType_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteNameServerType = _WingCfgDevVpnIkev2RemoteNameServerType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 21, 1, 1),
    _WingCfgDevVpnIkev2RemoteNameServerType_Type()
)
wingCfgDevVpnIkev2RemoteNameServerType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteNameServerType.setStatus("current")
_WingCfgDevVpnIkev2RemoteNameServerIp_Type = DisplayString
_WingCfgDevVpnIkev2RemoteNameServerIp_Object = MibTableColumn
wingCfgDevVpnIkev2RemoteNameServerIp = _WingCfgDevVpnIkev2RemoteNameServerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 21, 1, 3),
    _WingCfgDevVpnIkev2RemoteNameServerIp_Type()
)
wingCfgDevVpnIkev2RemoteNameServerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnIkev2RemoteNameServerIp.setStatus("current")
_WingCfgDevVpnAutoIPSecSecureTable_Object = MibTable
wingCfgDevVpnAutoIPSecSecureTable = _WingCfgDevVpnAutoIPSecSecureTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 22)
)
if mibBuilder.loadTexts:
    wingCfgDevVpnAutoIPSecSecureTable.setStatus("current")
_WingCfgDevVpnAutoIPSecSecureEntry_Object = MibTableRow
wingCfgDevVpnAutoIPSecSecureEntry = _WingCfgDevVpnAutoIPSecSecureEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 22, 1)
)
wingCfgDevVpnAutoIPSecSecureEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevVpnAutoIPSecSecureEntry.setStatus("current")


class _WingCfgDevVpnAutoIPSecSecureGroupId_Type(OctetString):
    """Custom type wingCfgDevVpnAutoIPSecSecureGroupId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_WingCfgDevVpnAutoIPSecSecureGroupId_Type.__name__ = "OctetString"
_WingCfgDevVpnAutoIPSecSecureGroupId_Object = MibTableColumn
wingCfgDevVpnAutoIPSecSecureGroupId = _WingCfgDevVpnAutoIPSecSecureGroupId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 22, 1, 1),
    _WingCfgDevVpnAutoIPSecSecureGroupId_Type()
)
wingCfgDevVpnAutoIPSecSecureGroupId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnAutoIPSecSecureGroupId.setStatus("current")
_WingCfgDevVpnAutoIPSecSecureGroupIdAuthType_Type = DisplayString
_WingCfgDevVpnAutoIPSecSecureGroupIdAuthType_Object = MibTableColumn
wingCfgDevVpnAutoIPSecSecureGroupIdAuthType = _WingCfgDevVpnAutoIPSecSecureGroupIdAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 22, 1, 2),
    _WingCfgDevVpnAutoIPSecSecureGroupIdAuthType_Type()
)
wingCfgDevVpnAutoIPSecSecureGroupIdAuthType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnAutoIPSecSecureGroupIdAuthType.setStatus("current")


class _WingCfgDevVpnAutoIPSecSecureGroupIdAuthKey_Type(DisplayString):
    """Custom type wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 21),
    )


_WingCfgDevVpnAutoIPSecSecureGroupIdAuthKey_Type.__name__ = "DisplayString"
_WingCfgDevVpnAutoIPSecSecureGroupIdAuthKey_Object = MibTableColumn
wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey = _WingCfgDevVpnAutoIPSecSecureGroupIdAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 22, 1, 3),
    _WingCfgDevVpnAutoIPSecSecureGroupIdAuthKey_Type()
)
wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey.setStatus("current")
_WingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion_Type = DisplayString
_WingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion_Object = MibTableColumn
wingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion = _WingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 19, 22, 1, 4),
    _WingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion_Type()
)
wingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion.setStatus("current")
_WingCfgDevControllerHost_ObjectIdentity = ObjectIdentity
wingCfgDevControllerHost = _WingCfgDevControllerHost_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20)
)
_WingCfgDevControllerHostTable_Object = MibTable
wingCfgDevControllerHostTable = _WingCfgDevControllerHostTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevControllerHostTable.setStatus("current")
_WingCfgDevControllerHostEntry_Object = MibTableRow
wingCfgDevControllerHostEntry = _WingCfgDevControllerHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20, 1, 1)
)
wingCfgDevControllerHostEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevControllerHostIndex"),
)
if mibBuilder.loadTexts:
    wingCfgDevControllerHostEntry.setStatus("current")
_WingCfgDevControllerHostIndex_Type = WingIdentifier
_WingCfgDevControllerHostIndex_Object = MibTableColumn
wingCfgDevControllerHostIndex = _WingCfgDevControllerHostIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20, 1, 1, 1),
    _WingCfgDevControllerHostIndex_Type()
)
wingCfgDevControllerHostIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    wingCfgDevControllerHostIndex.setStatus("current")


class _WingCfgDevControllerHostRowStatus_Type(RowStatus):
    """Custom type wingCfgDevControllerHostRowStatus based on RowStatus"""
    subtypeSpec = RowStatus.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("createAndGo", 4),
          ("destroy", 6))
    )


_WingCfgDevControllerHostRowStatus_Type.__name__ = "RowStatus"
_WingCfgDevControllerHostRowStatus_Object = MibTableColumn
wingCfgDevControllerHostRowStatus = _WingCfgDevControllerHostRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20, 1, 1, 2),
    _WingCfgDevControllerHostRowStatus_Type()
)
wingCfgDevControllerHostRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    wingCfgDevControllerHostRowStatus.setStatus("current")
_WingCfgDevControllerHostHost_Type = DisplayString
_WingCfgDevControllerHostHost_Object = MibTableColumn
wingCfgDevControllerHostHost = _WingCfgDevControllerHostHost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20, 1, 1, 3),
    _WingCfgDevControllerHostHost_Type()
)
wingCfgDevControllerHostHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevControllerHostHost.setStatus("current")


class _WingCfgDevControllerHostPool_Type(Unsigned32):
    """Custom type wingCfgDevControllerHostPool based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgDevControllerHostPool_Type.__name__ = "Unsigned32"
_WingCfgDevControllerHostPool_Object = MibTableColumn
wingCfgDevControllerHostPool = _WingCfgDevControllerHostPool_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20, 1, 1, 4),
    _WingCfgDevControllerHostPool_Type()
)
wingCfgDevControllerHostPool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevControllerHostPool.setStatus("current")


class _WingCfgDevControllerHostLevel_Type(Unsigned32):
    """Custom type wingCfgDevControllerHostLevel based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgDevControllerHostLevel_Type.__name__ = "Unsigned32"
_WingCfgDevControllerHostLevel_Object = MibTableColumn
wingCfgDevControllerHostLevel = _WingCfgDevControllerHostLevel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 20, 1, 1, 5),
    _WingCfgDevControllerHostLevel_Type()
)
wingCfgDevControllerHostLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevControllerHostLevel.setStatus("current")
_WingCfgDevWlan_ObjectIdentity = ObjectIdentity
wingCfgDevWlan = _WingCfgDevWlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23)
)
_WingCfgDevWlanSsidOverrideTable_Object = MibTable
wingCfgDevWlanSsidOverrideTable = _WingCfgDevWlanSsidOverrideTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevWlanSsidOverrideTable.setStatus("current")
_WingCfgDevWlanSsidOverrideEntry_Object = MibTableRow
wingCfgDevWlanSsidOverrideEntry = _WingCfgDevWlanSsidOverrideEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 1, 1)
)
wingCfgDevWlanSsidOverrideEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevWlanSsidOverrideWlan"),
)
if mibBuilder.loadTexts:
    wingCfgDevWlanSsidOverrideEntry.setStatus("current")
_WingCfgDevWlanSsidOverrideWlan_Type = WingIdentifier
_WingCfgDevWlanSsidOverrideWlan_Object = MibTableColumn
wingCfgDevWlanSsidOverrideWlan = _WingCfgDevWlanSsidOverrideWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 1, 1, 1),
    _WingCfgDevWlanSsidOverrideWlan_Type()
)
wingCfgDevWlanSsidOverrideWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevWlanSsidOverrideWlan.setStatus("current")


class _WingCfgDevWlanSsidOverrideSsid_Type(DisplayString):
    """Custom type wingCfgDevWlanSsidOverrideSsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgDevWlanSsidOverrideSsid_Type.__name__ = "DisplayString"
_WingCfgDevWlanSsidOverrideSsid_Object = MibTableColumn
wingCfgDevWlanSsidOverrideSsid = _WingCfgDevWlanSsidOverrideSsid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 1, 1, 3),
    _WingCfgDevWlanSsidOverrideSsid_Type()
)
wingCfgDevWlanSsidOverrideSsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevWlanSsidOverrideSsid.setStatus("current")
_WingCfgDevWlanVlanOverrideTable_Object = MibTable
wingCfgDevWlanVlanOverrideTable = _WingCfgDevWlanVlanOverrideTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevWlanVlanOverrideTable.setStatus("current")
_WingCfgDevWlanVlanOverrideEntry_Object = MibTableRow
wingCfgDevWlanVlanOverrideEntry = _WingCfgDevWlanVlanOverrideEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 2, 1)
)
wingCfgDevWlanVlanOverrideEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevWlanVlanOverrideWlan"),
)
if mibBuilder.loadTexts:
    wingCfgDevWlanVlanOverrideEntry.setStatus("current")
_WingCfgDevWlanVlanOverrideWlan_Type = WingIdentifier
_WingCfgDevWlanVlanOverrideWlan_Object = MibTableColumn
wingCfgDevWlanVlanOverrideWlan = _WingCfgDevWlanVlanOverrideWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 2, 1, 1),
    _WingCfgDevWlanVlanOverrideWlan_Type()
)
wingCfgDevWlanVlanOverrideWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevWlanVlanOverrideWlan.setStatus("current")
_WingCfgDevWlanVlanOverrideInstTable_Object = MibTable
wingCfgDevWlanVlanOverrideInstTable = _WingCfgDevWlanVlanOverrideInstTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 3)
)
if mibBuilder.loadTexts:
    wingCfgDevWlanVlanOverrideInstTable.setStatus("current")
_WingCfgDevWlanVlanOverrideInstEntry_Object = MibTableRow
wingCfgDevWlanVlanOverrideInstEntry = _WingCfgDevWlanVlanOverrideInstEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 3, 1)
)
wingCfgDevWlanVlanOverrideInstEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevWlanVlanOverrideWlan"),
    (0, "WING-MIB", "wingCfgDevWlanVlanOverrideInstVlan"),
)
if mibBuilder.loadTexts:
    wingCfgDevWlanVlanOverrideInstEntry.setStatus("current")


class _WingCfgDevWlanVlanOverrideInstVlan_Type(Unsigned32):
    """Custom type wingCfgDevWlanVlanOverrideInstVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgDevWlanVlanOverrideInstVlan_Type.__name__ = "Unsigned32"
_WingCfgDevWlanVlanOverrideInstVlan_Object = MibTableColumn
wingCfgDevWlanVlanOverrideInstVlan = _WingCfgDevWlanVlanOverrideInstVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 3, 1, 1),
    _WingCfgDevWlanVlanOverrideInstVlan_Type()
)
wingCfgDevWlanVlanOverrideInstVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevWlanVlanOverrideInstVlan.setStatus("current")


class _WingCfgDevWlanVlanOverrideInstLimit_Type(Unsigned32):
    """Custom type wingCfgDevWlanVlanOverrideInstLimit based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8192),
    )


_WingCfgDevWlanVlanOverrideInstLimit_Type.__name__ = "Unsigned32"
_WingCfgDevWlanVlanOverrideInstLimit_Object = MibTableColumn
wingCfgDevWlanVlanOverrideInstLimit = _WingCfgDevWlanVlanOverrideInstLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 23, 3, 1, 3),
    _WingCfgDevWlanVlanOverrideInstLimit_Type()
)
wingCfgDevWlanVlanOverrideInstLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevWlanVlanOverrideInstLimit.setStatus("current")
_WingCfgDevStatsWindowTable_Object = MibTable
wingCfgDevStatsWindowTable = _WingCfgDevStatsWindowTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 24)
)
if mibBuilder.loadTexts:
    wingCfgDevStatsWindowTable.setStatus("current")
_WingCfgDevStatsWindowEntry_Object = MibTableRow
wingCfgDevStatsWindowEntry = _WingCfgDevStatsWindowEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 24, 1)
)
wingCfgDevStatsWindowEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevStatsWindowIdx"),
)
if mibBuilder.loadTexts:
    wingCfgDevStatsWindowEntry.setStatus("current")


class _WingCfgDevStatsWindowIdx_Type(Unsigned32):
    """Custom type wingCfgDevStatsWindowIdx based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgDevStatsWindowIdx_Type.__name__ = "Unsigned32"
_WingCfgDevStatsWindowIdx_Object = MibTableColumn
wingCfgDevStatsWindowIdx = _WingCfgDevStatsWindowIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 24, 1, 1),
    _WingCfgDevStatsWindowIdx_Type()
)
wingCfgDevStatsWindowIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevStatsWindowIdx.setStatus("current")


class _WingCfgDevStatsWindowSampleInterval_Type(Unsigned32):
    """Custom type wingCfgDevStatsWindowSampleInterval based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 86640),
    )


_WingCfgDevStatsWindowSampleInterval_Type.__name__ = "Unsigned32"
_WingCfgDevStatsWindowSampleInterval_Object = MibTableColumn
wingCfgDevStatsWindowSampleInterval = _WingCfgDevStatsWindowSampleInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 24, 1, 3),
    _WingCfgDevStatsWindowSampleInterval_Type()
)
wingCfgDevStatsWindowSampleInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevStatsWindowSampleInterval.setStatus("current")


class _WingCfgDevStatsWindowWindowSize_Type(Unsigned32):
    """Custom type wingCfgDevStatsWindowWindowSize based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 100),
    )


_WingCfgDevStatsWindowWindowSize_Type.__name__ = "Unsigned32"
_WingCfgDevStatsWindowWindowSize_Object = MibTableColumn
wingCfgDevStatsWindowWindowSize = _WingCfgDevStatsWindowWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 24, 1, 4),
    _WingCfgDevStatsWindowWindowSize_Type()
)
wingCfgDevStatsWindowWindowSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevStatsWindowWindowSize.setStatus("current")
_WingCfgDevVrrp_ObjectIdentity = ObjectIdentity
wingCfgDevVrrp = _WingCfgDevVrrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26)
)
_WingCfgDevVrrpTable_Object = MibTable
wingCfgDevVrrpTable = _WingCfgDevVrrpTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevVrrpTable.setStatus("current")
_WingCfgDevVrrpEntry_Object = MibTableRow
wingCfgDevVrrpEntry = _WingCfgDevVrrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 1, 1)
)
wingCfgDevVrrpEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevVrrpEntry.setStatus("current")


class _WingCfgDevVrrpVersion_Type(DisplayString):
    """Custom type wingCfgDevVrrpVersion based on DisplayString"""
    defaultValue = OctetString("2")


_WingCfgDevVrrpVersion_Type.__name__ = "DisplayString"
_WingCfgDevVrrpVersion_Object = MibTableColumn
wingCfgDevVrrpVersion = _WingCfgDevVrrpVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 1, 1, 1),
    _WingCfgDevVrrpVersion_Type()
)
wingCfgDevVrrpVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpVersion.setStatus("current")
_WingCfgDevVrrpGroupTable_Object = MibTable
wingCfgDevVrrpGroupTable = _WingCfgDevVrrpGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupTable.setStatus("current")
_WingCfgDevVrrpGroupEntry_Object = MibTableRow
wingCfgDevVrrpGroupEntry = _WingCfgDevVrrpGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1)
)
wingCfgDevVrrpGroupEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevVrrpGroupVirtualRouterId"),
)
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupEntry.setStatus("current")


class _WingCfgDevVrrpGroupVirtualRouterId_Type(Unsigned32):
    """Custom type wingCfgDevVrrpGroupVirtualRouterId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgDevVrrpGroupVirtualRouterId_Type.__name__ = "Unsigned32"
_WingCfgDevVrrpGroupVirtualRouterId_Object = MibTableColumn
wingCfgDevVrrpGroupVirtualRouterId = _WingCfgDevVrrpGroupVirtualRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 1),
    _WingCfgDevVrrpGroupVirtualRouterId_Type()
)
wingCfgDevVrrpGroupVirtualRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupVirtualRouterId.setStatus("current")


class _WingCfgDevVrrpGroupDescription_Type(DisplayString):
    """Custom type wingCfgDevVrrpGroupDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgDevVrrpGroupDescription_Type.__name__ = "DisplayString"
_WingCfgDevVrrpGroupDescription_Object = MibTableColumn
wingCfgDevVrrpGroupDescription = _WingCfgDevVrrpGroupDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 3),
    _WingCfgDevVrrpGroupDescription_Type()
)
wingCfgDevVrrpGroupDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupDescription.setStatus("current")


class _WingCfgDevVrrpGroupPriority_Type(Unsigned32):
    """Custom type wingCfgDevVrrpGroupPriority based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 254),
    )


_WingCfgDevVrrpGroupPriority_Type.__name__ = "Unsigned32"
_WingCfgDevVrrpGroupPriority_Object = MibTableColumn
wingCfgDevVrrpGroupPriority = _WingCfgDevVrrpGroupPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 4),
    _WingCfgDevVrrpGroupPriority_Type()
)
wingCfgDevVrrpGroupPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupPriority.setStatus("current")


class _WingCfgDevVrrpGroupAdvertisementUnit_Type(DisplayString):
    """Custom type wingCfgDevVrrpGroupAdvertisementUnit based on DisplayString"""
    defaultValue = OctetString("seconds")


_WingCfgDevVrrpGroupAdvertisementUnit_Type.__name__ = "DisplayString"
_WingCfgDevVrrpGroupAdvertisementUnit_Object = MibTableColumn
wingCfgDevVrrpGroupAdvertisementUnit = _WingCfgDevVrrpGroupAdvertisementUnit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 5),
    _WingCfgDevVrrpGroupAdvertisementUnit_Type()
)
wingCfgDevVrrpGroupAdvertisementUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupAdvertisementUnit.setStatus("current")


class _WingCfgDevVrrpGroupAdvertisementIntervalV2_Type(Unsigned32):
    """Custom type wingCfgDevVrrpGroupAdvertisementIntervalV2 based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingCfgDevVrrpGroupAdvertisementIntervalV2_Type.__name__ = "Unsigned32"
_WingCfgDevVrrpGroupAdvertisementIntervalV2_Object = MibTableColumn
wingCfgDevVrrpGroupAdvertisementIntervalV2 = _WingCfgDevVrrpGroupAdvertisementIntervalV2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 6),
    _WingCfgDevVrrpGroupAdvertisementIntervalV2_Type()
)
wingCfgDevVrrpGroupAdvertisementIntervalV2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupAdvertisementIntervalV2.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupAdvertisementIntervalV2.setUnits("seconds")


class _WingCfgDevVrrpGroupAdvertisementIntervalV2Msec_Type(Unsigned32):
    """Custom type wingCfgDevVrrpGroupAdvertisementIntervalV2Msec based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 999),
    )


_WingCfgDevVrrpGroupAdvertisementIntervalV2Msec_Type.__name__ = "Unsigned32"
_WingCfgDevVrrpGroupAdvertisementIntervalV2Msec_Object = MibTableColumn
wingCfgDevVrrpGroupAdvertisementIntervalV2Msec = _WingCfgDevVrrpGroupAdvertisementIntervalV2Msec_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 7),
    _WingCfgDevVrrpGroupAdvertisementIntervalV2Msec_Type()
)
wingCfgDevVrrpGroupAdvertisementIntervalV2Msec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupAdvertisementIntervalV2Msec.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupAdvertisementIntervalV2Msec.setUnits("milliseconds")


class _WingCfgDevVrrpGroupAdvertisementIntervalV3_Type(Unsigned32):
    """Custom type wingCfgDevVrrpGroupAdvertisementIntervalV3 based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_WingCfgDevVrrpGroupAdvertisementIntervalV3_Type.__name__ = "Unsigned32"
_WingCfgDevVrrpGroupAdvertisementIntervalV3_Object = MibTableColumn
wingCfgDevVrrpGroupAdvertisementIntervalV3 = _WingCfgDevVrrpGroupAdvertisementIntervalV3_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 8),
    _WingCfgDevVrrpGroupAdvertisementIntervalV3_Type()
)
wingCfgDevVrrpGroupAdvertisementIntervalV3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupAdvertisementIntervalV3.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupAdvertisementIntervalV3.setUnits("centiseconds")


class _WingCfgDevVrrpGroupPreempt_Type(TruthValue):
    """Custom type wingCfgDevVrrpGroupPreempt based on TruthValue"""
    defaultValue = 1


_WingCfgDevVrrpGroupPreempt_Type.__name__ = "TruthValue"
_WingCfgDevVrrpGroupPreempt_Object = MibTableColumn
wingCfgDevVrrpGroupPreempt = _WingCfgDevVrrpGroupPreempt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 9),
    _WingCfgDevVrrpGroupPreempt_Type()
)
wingCfgDevVrrpGroupPreempt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupPreempt.setStatus("current")


class _WingCfgDevVrrpGroupPreemptDelay_Type(Unsigned32):
    """Custom type wingCfgDevVrrpGroupPreemptDelay based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgDevVrrpGroupPreemptDelay_Type.__name__ = "Unsigned32"
_WingCfgDevVrrpGroupPreemptDelay_Object = MibTableColumn
wingCfgDevVrrpGroupPreemptDelay = _WingCfgDevVrrpGroupPreemptDelay_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 10),
    _WingCfgDevVrrpGroupPreemptDelay_Type()
)
wingCfgDevVrrpGroupPreemptDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupPreemptDelay.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupPreemptDelay.setUnits("seconds")


class _WingCfgDevVrrpGroupCrmAction_Type(DisplayString):
    """Custom type wingCfgDevVrrpGroupCrmAction based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevVrrpGroupCrmAction_Type.__name__ = "DisplayString"
_WingCfgDevVrrpGroupCrmAction_Object = MibTableColumn
wingCfgDevVrrpGroupCrmAction = _WingCfgDevVrrpGroupCrmAction_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 11),
    _WingCfgDevVrrpGroupCrmAction_Type()
)
wingCfgDevVrrpGroupCrmAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupCrmAction.setStatus("current")


class _WingCfgDevVrrpGroupDeltaPriority_Type(Unsigned32):
    """Custom type wingCfgDevVrrpGroupDeltaPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 253),
    )


_WingCfgDevVrrpGroupDeltaPriority_Type.__name__ = "Unsigned32"
_WingCfgDevVrrpGroupDeltaPriority_Object = MibTableColumn
wingCfgDevVrrpGroupDeltaPriority = _WingCfgDevVrrpGroupDeltaPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 12),
    _WingCfgDevVrrpGroupDeltaPriority_Type()
)
wingCfgDevVrrpGroupDeltaPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupDeltaPriority.setStatus("current")
_WingCfgDevVrrpGroupInterface_Type = DisplayString
_WingCfgDevVrrpGroupInterface_Object = MibTableColumn
wingCfgDevVrrpGroupInterface = _WingCfgDevVrrpGroupInterface_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 13),
    _WingCfgDevVrrpGroupInterface_Type()
)
wingCfgDevVrrpGroupInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupInterface.setStatus("current")


class _WingCfgDevVrrpGroupSyncGroup_Type(TruthValue):
    """Custom type wingCfgDevVrrpGroupSyncGroup based on TruthValue"""
    defaultValue = 2


_WingCfgDevVrrpGroupSyncGroup_Type.__name__ = "TruthValue"
_WingCfgDevVrrpGroupSyncGroup_Object = MibTableColumn
wingCfgDevVrrpGroupSyncGroup = _WingCfgDevVrrpGroupSyncGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 26, 2, 1, 14),
    _WingCfgDevVrrpGroupSyncGroup_Type()
)
wingCfgDevVrrpGroupSyncGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevVrrpGroupSyncGroup.setStatus("current")
_WingCfgDevIgs_ObjectIdentity = ObjectIdentity
wingCfgDevIgs = _WingCfgDevIgs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27)
)
_WingCfgDevIgsTable_Object = MibTable
wingCfgDevIgsTable = _WingCfgDevIgsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevIgsTable.setStatus("current")
_WingCfgDevIgsEntry_Object = MibTableRow
wingCfgDevIgsEntry = _WingCfgDevIgsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1)
)
wingCfgDevIgsEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevIgsEntry.setStatus("current")


class _WingCfgDevIgsIpIgmpSnooping_Type(TruthValue):
    """Custom type wingCfgDevIgsIpIgmpSnooping based on TruthValue"""
    defaultValue = 1


_WingCfgDevIgsIpIgmpSnooping_Type.__name__ = "TruthValue"
_WingCfgDevIgsIpIgmpSnooping_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnooping = _WingCfgDevIgsIpIgmpSnooping_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 1),
    _WingCfgDevIgsIpIgmpSnooping_Type()
)
wingCfgDevIgsIpIgmpSnooping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnooping.setStatus("current")


class _WingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast_Type(TruthValue):
    """Custom type wingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast based on TruthValue"""
    defaultValue = 2


_WingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast_Type.__name__ = "TruthValue"
_WingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast = _WingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 2),
    _WingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast_Type()
)
wingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast.setStatus("current")


class _WingCfgDevIgsIpIgmpSnoopingQuerier_Type(TruthValue):
    """Custom type wingCfgDevIgsIpIgmpSnoopingQuerier based on TruthValue"""
    defaultValue = 2


_WingCfgDevIgsIpIgmpSnoopingQuerier_Type.__name__ = "TruthValue"
_WingCfgDevIgsIpIgmpSnoopingQuerier_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingQuerier = _WingCfgDevIgsIpIgmpSnoopingQuerier_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 3),
    _WingCfgDevIgsIpIgmpSnoopingQuerier_Type()
)
wingCfgDevIgsIpIgmpSnoopingQuerier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerier.setStatus("current")


class _WingCfgDevIgsIpIgmpSnoopingQuerierAddress_Type(DisplayString):
    """Custom type wingCfgDevIgsIpIgmpSnoopingQuerierAddress based on DisplayString"""
    defaultValue = OctetString("0.0.0.0")


_WingCfgDevIgsIpIgmpSnoopingQuerierAddress_Type.__name__ = "DisplayString"
_WingCfgDevIgsIpIgmpSnoopingQuerierAddress_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingQuerierAddress = _WingCfgDevIgsIpIgmpSnoopingQuerierAddress_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 4),
    _WingCfgDevIgsIpIgmpSnoopingQuerierAddress_Type()
)
wingCfgDevIgsIpIgmpSnoopingQuerierAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierAddress.setStatus("current")


class _WingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime_Type(Unsigned32):
    """Custom type wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25),
    )


_WingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime_Type.__name__ = "Unsigned32"
_WingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime = _WingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 5),
    _WingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime_Type()
)
wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime.setUnits("seconds")


class _WingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Type(Unsigned32):
    """Custom type wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 300),
    )


_WingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Type.__name__ = "Unsigned32"
_WingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry = _WingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 6),
    _WingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry_Type()
)
wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry.setUnits("seconds")


class _WingCfgDevIgsIpIgmpSnoopingQuerierVersion_Type(Unsigned32):
    """Custom type wingCfgDevIgsIpIgmpSnoopingQuerierVersion based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_WingCfgDevIgsIpIgmpSnoopingQuerierVersion_Type.__name__ = "Unsigned32"
_WingCfgDevIgsIpIgmpSnoopingQuerierVersion_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingQuerierVersion = _WingCfgDevIgsIpIgmpSnoopingQuerierVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 7),
    _WingCfgDevIgsIpIgmpSnoopingQuerierVersion_Type()
)
wingCfgDevIgsIpIgmpSnoopingQuerierVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierVersion.setStatus("current")


class _WingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval_Type(Unsigned32):
    """Custom type wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 18000),
    )


_WingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval_Type.__name__ = "Unsigned32"
_WingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval = _WingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 8),
    _WingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval_Type()
)
wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval.setUnits("seconds")


class _WingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable_Type(Unsigned32):
    """Custom type wingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_WingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable_Type.__name__ = "Unsigned32"
_WingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable_Object = MibTableColumn
wingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable = _WingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 27, 1, 1, 9),
    _WingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable_Type()
)
wingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable.setStatus("current")
_WingCfgDevDynRoute_ObjectIdentity = ObjectIdentity
wingCfgDevDynRoute = _WingCfgDevDynRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28)
)
_WingCfgDevDynRouteOspfTable_Object = MibTable
wingCfgDevDynRouteOspfTable = _WingCfgDevDynRouteOspfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfTable.setStatus("current")
_WingCfgDevDynRouteOspfEntry_Object = MibTableRow
wingCfgDevDynRouteOspfEntry = _WingCfgDevDynRouteOspfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1)
)
wingCfgDevDynRouteOspfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfEntry.setStatus("current")


class _WingCfgDevDynRouteOspfEnabled_Type(TruthValue):
    """Custom type wingCfgDevDynRouteOspfEnabled based on TruthValue"""
    defaultValue = 2


_WingCfgDevDynRouteOspfEnabled_Type.__name__ = "TruthValue"
_WingCfgDevDynRouteOspfEnabled_Object = MibTableColumn
wingCfgDevDynRouteOspfEnabled = _WingCfgDevDynRouteOspfEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 1),
    _WingCfgDevDynRouteOspfEnabled_Type()
)
wingCfgDevDynRouteOspfEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfEnabled.setStatus("current")
_WingCfgDevDynRouteOspfRouterId_Type = OctetString
_WingCfgDevDynRouteOspfRouterId_Object = MibTableColumn
wingCfgDevDynRouteOspfRouterId = _WingCfgDevDynRouteOspfRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 2),
    _WingCfgDevDynRouteOspfRouterId_Type()
)
wingCfgDevDynRouteOspfRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfRouterId.setStatus("current")


class _WingCfgDevDynRouteOspfAutoCost_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteOspfAutoCost based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967),
    )


_WingCfgDevDynRouteOspfAutoCost_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteOspfAutoCost_Object = MibTableColumn
wingCfgDevDynRouteOspfAutoCost = _WingCfgDevDynRouteOspfAutoCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 3),
    _WingCfgDevDynRouteOspfAutoCost_Type()
)
wingCfgDevDynRouteOspfAutoCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAutoCost.setStatus("current")


class _WingCfgDevDynRouteOspfPassiveAll_Type(TruthValue):
    """Custom type wingCfgDevDynRouteOspfPassiveAll based on TruthValue"""
    defaultValue = 2


_WingCfgDevDynRouteOspfPassiveAll_Type.__name__ = "TruthValue"
_WingCfgDevDynRouteOspfPassiveAll_Object = MibTableColumn
wingCfgDevDynRouteOspfPassiveAll = _WingCfgDevDynRouteOspfPassiveAll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 4),
    _WingCfgDevDynRouteOspfPassiveAll_Type()
)
wingCfgDevDynRouteOspfPassiveAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfPassiveAll.setStatus("current")
_WingCfgDevDynRouteOspfPassive_Type = DisplayString
_WingCfgDevDynRouteOspfPassive_Object = MibTableColumn
wingCfgDevDynRouteOspfPassive = _WingCfgDevDynRouteOspfPassive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 5),
    _WingCfgDevDynRouteOspfPassive_Type()
)
wingCfgDevDynRouteOspfPassive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfPassive.setStatus("current")
_WingCfgDevDynRouteOspfPassiveRemoved_Type = DisplayString
_WingCfgDevDynRouteOspfPassiveRemoved_Object = MibTableColumn
wingCfgDevDynRouteOspfPassiveRemoved = _WingCfgDevDynRouteOspfPassiveRemoved_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 6),
    _WingCfgDevDynRouteOspfPassiveRemoved_Type()
)
wingCfgDevDynRouteOspfPassiveRemoved.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfPassiveRemoved.setStatus("current")
_WingCfgDevDynRouteOspfVrrpStateCheck_Type = TruthValue
_WingCfgDevDynRouteOspfVrrpStateCheck_Object = MibTableColumn
wingCfgDevDynRouteOspfVrrpStateCheck = _WingCfgDevDynRouteOspfVrrpStateCheck_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 7),
    _WingCfgDevDynRouteOspfVrrpStateCheck_Type()
)
wingCfgDevDynRouteOspfVrrpStateCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfVrrpStateCheck.setStatus("current")


class _WingCfgDevDynRouteOspfDefaultRoutePriority_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteOspfDefaultRoutePriority based on Unsigned32"""
    defaultValue = 7000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8000),
    )


_WingCfgDevDynRouteOspfDefaultRoutePriority_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteOspfDefaultRoutePriority_Object = MibTableColumn
wingCfgDevDynRouteOspfDefaultRoutePriority = _WingCfgDevDynRouteOspfDefaultRoutePriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 8),
    _WingCfgDevDynRouteOspfDefaultRoutePriority_Type()
)
wingCfgDevDynRouteOspfDefaultRoutePriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfDefaultRoutePriority.setStatus("current")


class _WingCfgDevDynRouteOspfNumRoutes_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteOspfNumRoutes based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingCfgDevDynRouteOspfNumRoutes_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteOspfNumRoutes_Object = MibTableColumn
wingCfgDevDynRouteOspfNumRoutes = _WingCfgDevDynRouteOspfNumRoutes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 9),
    _WingCfgDevDynRouteOspfNumRoutes_Type()
)
wingCfgDevDynRouteOspfNumRoutes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfNumRoutes.setStatus("current")


class _WingCfgDevDynRouteOspfRetryCount_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteOspfRetryCount based on Unsigned32"""
    defaultValue = 5

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_WingCfgDevDynRouteOspfRetryCount_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteOspfRetryCount_Object = MibTableColumn
wingCfgDevDynRouteOspfRetryCount = _WingCfgDevDynRouteOspfRetryCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 10),
    _WingCfgDevDynRouteOspfRetryCount_Type()
)
wingCfgDevDynRouteOspfRetryCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfRetryCount.setStatus("current")


class _WingCfgDevDynRouteOspfRetryTimeout_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteOspfRetryTimeout based on Unsigned32"""
    defaultValue = 60

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_WingCfgDevDynRouteOspfRetryTimeout_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteOspfRetryTimeout_Object = MibTableColumn
wingCfgDevDynRouteOspfRetryTimeout = _WingCfgDevDynRouteOspfRetryTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 11),
    _WingCfgDevDynRouteOspfRetryTimeout_Type()
)
wingCfgDevDynRouteOspfRetryTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfRetryTimeout.setStatus("current")


class _WingCfgDevDynRouteOspfResetTime_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteOspfResetTime based on Unsigned32"""
    defaultValue = 360

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 86400),
    )


_WingCfgDevDynRouteOspfResetTime_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteOspfResetTime_Object = MibTableColumn
wingCfgDevDynRouteOspfResetTime = _WingCfgDevDynRouteOspfResetTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 1, 1, 12),
    _WingCfgDevDynRouteOspfResetTime_Type()
)
wingCfgDevDynRouteOspfResetTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfResetTime.setStatus("current")
_WingCfgDevDynRouteOspfNetworkTable_Object = MibTable
wingCfgDevDynRouteOspfNetworkTable = _WingCfgDevDynRouteOspfNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfNetworkTable.setStatus("current")
_WingCfgDevDynRouteOspfNetworkEntry_Object = MibTableRow
wingCfgDevDynRouteOspfNetworkEntry = _WingCfgDevDynRouteOspfNetworkEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 2, 1)
)
wingCfgDevDynRouteOspfNetworkEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevDynRouteOspfNetwork"),
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfNetworkEntry.setStatus("current")
_WingCfgDevDynRouteOspfNetwork_Type = WingIdentifier
_WingCfgDevDynRouteOspfNetwork_Object = MibTableColumn
wingCfgDevDynRouteOspfNetwork = _WingCfgDevDynRouteOspfNetwork_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 2, 1, 1),
    _WingCfgDevDynRouteOspfNetwork_Type()
)
wingCfgDevDynRouteOspfNetwork.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfNetwork.setStatus("current")
_WingCfgDevDynRouteOspfNetworkAreaId_Type = DisplayString
_WingCfgDevDynRouteOspfNetworkAreaId_Object = MibTableColumn
wingCfgDevDynRouteOspfNetworkAreaId = _WingCfgDevDynRouteOspfNetworkAreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 2, 1, 3),
    _WingCfgDevDynRouteOspfNetworkAreaId_Type()
)
wingCfgDevDynRouteOspfNetworkAreaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfNetworkAreaId.setStatus("current")
_WingCfgDevDynRouteOspfAreaTable_Object = MibTable
wingCfgDevDynRouteOspfAreaTable = _WingCfgDevDynRouteOspfAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3)
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaTable.setStatus("current")
_WingCfgDevDynRouteOspfAreaEntry_Object = MibTableRow
wingCfgDevDynRouteOspfAreaEntry = _WingCfgDevDynRouteOspfAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3, 1)
)
wingCfgDevDynRouteOspfAreaEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevDynRouteOspfAreaId"),
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaEntry.setStatus("current")
_WingCfgDevDynRouteOspfAreaId_Type = WingIdentifier
_WingCfgDevDynRouteOspfAreaId_Object = MibTableColumn
wingCfgDevDynRouteOspfAreaId = _WingCfgDevDynRouteOspfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3, 1, 1),
    _WingCfgDevDynRouteOspfAreaId_Type()
)
wingCfgDevDynRouteOspfAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaId.setStatus("current")


class _WingCfgDevDynRouteOspfAreaAuthentication_Type(DisplayString):
    """Custom type wingCfgDevDynRouteOspfAreaAuthentication based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevDynRouteOspfAreaAuthentication_Type.__name__ = "DisplayString"
_WingCfgDevDynRouteOspfAreaAuthentication_Object = MibTableColumn
wingCfgDevDynRouteOspfAreaAuthentication = _WingCfgDevDynRouteOspfAreaAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3, 1, 3),
    _WingCfgDevDynRouteOspfAreaAuthentication_Type()
)
wingCfgDevDynRouteOspfAreaAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaAuthentication.setStatus("current")
_WingCfgDevDynRouteOspfAreaRange_Type = DisplayString
_WingCfgDevDynRouteOspfAreaRange_Object = MibTableColumn
wingCfgDevDynRouteOspfAreaRange = _WingCfgDevDynRouteOspfAreaRange_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3, 1, 4),
    _WingCfgDevDynRouteOspfAreaRange_Type()
)
wingCfgDevDynRouteOspfAreaRange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaRange.setStatus("current")


class _WingCfgDevDynRouteOspfAreaType_Type(DisplayString):
    """Custom type wingCfgDevDynRouteOspfAreaType based on DisplayString"""
    defaultValue = OctetString("non-stub")


_WingCfgDevDynRouteOspfAreaType_Type.__name__ = "DisplayString"
_WingCfgDevDynRouteOspfAreaType_Object = MibTableColumn
wingCfgDevDynRouteOspfAreaType = _WingCfgDevDynRouteOspfAreaType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3, 1, 5),
    _WingCfgDevDynRouteOspfAreaType_Type()
)
wingCfgDevDynRouteOspfAreaType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaType.setStatus("current")


class _WingCfgDevDynRouteOspfAreaDefaultCost_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteOspfAreaDefaultCost based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777215),
    )


_WingCfgDevDynRouteOspfAreaDefaultCost_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteOspfAreaDefaultCost_Object = MibTableColumn
wingCfgDevDynRouteOspfAreaDefaultCost = _WingCfgDevDynRouteOspfAreaDefaultCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3, 1, 6),
    _WingCfgDevDynRouteOspfAreaDefaultCost_Type()
)
wingCfgDevDynRouteOspfAreaDefaultCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaDefaultCost.setStatus("current")
_WingCfgDevDynRouteOspfAreaTranslateType_Type = DisplayString
_WingCfgDevDynRouteOspfAreaTranslateType_Object = MibTableColumn
wingCfgDevDynRouteOspfAreaTranslateType = _WingCfgDevDynRouteOspfAreaTranslateType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 3, 1, 7),
    _WingCfgDevDynRouteOspfAreaTranslateType_Type()
)
wingCfgDevDynRouteOspfAreaTranslateType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteOspfAreaTranslateType.setStatus("current")
_WingCfgDevDynRouteDefaultInfoTable_Object = MibTable
wingCfgDevDynRouteDefaultInfoTable = _WingCfgDevDynRouteDefaultInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 4)
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteDefaultInfoTable.setStatus("current")
_WingCfgDevDynRouteDefaultInfoEntry_Object = MibTableRow
wingCfgDevDynRouteDefaultInfoEntry = _WingCfgDevDynRouteDefaultInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 4, 1)
)
wingCfgDevDynRouteDefaultInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteDefaultInfoEntry.setStatus("current")
_WingCfgDevDynRouteDefaultInfoOriginate_Type = TruthValue
_WingCfgDevDynRouteDefaultInfoOriginate_Object = MibTableColumn
wingCfgDevDynRouteDefaultInfoOriginate = _WingCfgDevDynRouteDefaultInfoOriginate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 4, 1, 1),
    _WingCfgDevDynRouteDefaultInfoOriginate_Type()
)
wingCfgDevDynRouteDefaultInfoOriginate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteDefaultInfoOriginate.setStatus("current")
_WingCfgDevDynRouteDefaultInfoAlways_Type = TruthValue
_WingCfgDevDynRouteDefaultInfoAlways_Object = MibTableColumn
wingCfgDevDynRouteDefaultInfoAlways = _WingCfgDevDynRouteDefaultInfoAlways_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 4, 1, 2),
    _WingCfgDevDynRouteDefaultInfoAlways_Type()
)
wingCfgDevDynRouteDefaultInfoAlways.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteDefaultInfoAlways.setStatus("current")


class _WingCfgDevDynRouteDefaultInfoRtMetric_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteDefaultInfoRtMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777214),
    )


_WingCfgDevDynRouteDefaultInfoRtMetric_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteDefaultInfoRtMetric_Object = MibTableColumn
wingCfgDevDynRouteDefaultInfoRtMetric = _WingCfgDevDynRouteDefaultInfoRtMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 4, 1, 3),
    _WingCfgDevDynRouteDefaultInfoRtMetric_Type()
)
wingCfgDevDynRouteDefaultInfoRtMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteDefaultInfoRtMetric.setStatus("current")
_WingCfgDevDynRouteDefaultInfoRtMetricType_Type = DisplayString
_WingCfgDevDynRouteDefaultInfoRtMetricType_Object = MibTableColumn
wingCfgDevDynRouteDefaultInfoRtMetricType = _WingCfgDevDynRouteDefaultInfoRtMetricType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 4, 1, 4),
    _WingCfgDevDynRouteDefaultInfoRtMetricType_Type()
)
wingCfgDevDynRouteDefaultInfoRtMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteDefaultInfoRtMetricType.setStatus("current")
_WingCfgDevDynRouteRedistributeTable_Object = MibTable
wingCfgDevDynRouteRedistributeTable = _WingCfgDevDynRouteRedistributeTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 5)
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteRedistributeTable.setStatus("current")
_WingCfgDevDynRouteRedistributeEntry_Object = MibTableRow
wingCfgDevDynRouteRedistributeEntry = _WingCfgDevDynRouteRedistributeEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 5, 1)
)
wingCfgDevDynRouteRedistributeEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevDynRouteRedistributeRouteType"),
)
if mibBuilder.loadTexts:
    wingCfgDevDynRouteRedistributeEntry.setStatus("current")
_WingCfgDevDynRouteRedistributeRouteType_Type = WingIdentifier
_WingCfgDevDynRouteRedistributeRouteType_Object = MibTableColumn
wingCfgDevDynRouteRedistributeRouteType = _WingCfgDevDynRouteRedistributeRouteType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 5, 1, 1),
    _WingCfgDevDynRouteRedistributeRouteType_Type()
)
wingCfgDevDynRouteRedistributeRouteType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteRedistributeRouteType.setStatus("current")


class _WingCfgDevDynRouteRedistributeMetric_Type(Unsigned32):
    """Custom type wingCfgDevDynRouteRedistributeMetric based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16777214),
    )


_WingCfgDevDynRouteRedistributeMetric_Type.__name__ = "Unsigned32"
_WingCfgDevDynRouteRedistributeMetric_Object = MibTableColumn
wingCfgDevDynRouteRedistributeMetric = _WingCfgDevDynRouteRedistributeMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 5, 1, 3),
    _WingCfgDevDynRouteRedistributeMetric_Type()
)
wingCfgDevDynRouteRedistributeMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteRedistributeMetric.setStatus("current")
_WingCfgDevDynRouteRedistributeMetricType_Type = DisplayString
_WingCfgDevDynRouteRedistributeMetricType_Object = MibTableColumn
wingCfgDevDynRouteRedistributeMetricType = _WingCfgDevDynRouteRedistributeMetricType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 28, 5, 1, 4),
    _WingCfgDevDynRouteRedistributeMetricType_Type()
)
wingCfgDevDynRouteRedistributeMetricType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevDynRouteRedistributeMetricType.setStatus("current")
_WingCfgDevCriticalRes_ObjectIdentity = ObjectIdentity
wingCfgDevCriticalRes = _WingCfgDevCriticalRes_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29)
)
_WingCfgDevCriticalResMonitorTable_Object = MibTable
wingCfgDevCriticalResMonitorTable = _WingCfgDevCriticalResMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevCriticalResMonitorTable.setStatus("current")
_WingCfgDevCriticalResMonitorEntry_Object = MibTableRow
wingCfgDevCriticalResMonitorEntry = _WingCfgDevCriticalResMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 1, 1)
)
wingCfgDevCriticalResMonitorEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevCriticalResMonitorEntry.setStatus("current")


class _WingCfgDevCriticalResMonitorInt_Type(Unsigned32):
    """Custom type wingCfgDevCriticalResMonitorInt based on Unsigned32"""
    defaultValue = 30

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 86400),
    )


_WingCfgDevCriticalResMonitorInt_Type.__name__ = "Unsigned32"
_WingCfgDevCriticalResMonitorInt_Object = MibTableColumn
wingCfgDevCriticalResMonitorInt = _WingCfgDevCriticalResMonitorInt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 1, 1, 1),
    _WingCfgDevCriticalResMonitorInt_Type()
)
wingCfgDevCriticalResMonitorInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResMonitorInt.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResMonitorInt.setUnits("seconds")
_WingCfgDevCriticalResPolicyTable_Object = MibTable
wingCfgDevCriticalResPolicyTable = _WingCfgDevCriticalResPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevCriticalResPolicyTable.setStatus("current")
_WingCfgDevCriticalResPolicyEntry_Object = MibTableRow
wingCfgDevCriticalResPolicyEntry = _WingCfgDevCriticalResPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 2, 1)
)
wingCfgDevCriticalResPolicyEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevCriticalResPolicyVia"),
)
if mibBuilder.loadTexts:
    wingCfgDevCriticalResPolicyEntry.setStatus("current")
_WingCfgDevCriticalResPolicyVia_Type = WingIdentifier
_WingCfgDevCriticalResPolicyVia_Object = MibTableColumn
wingCfgDevCriticalResPolicyVia = _WingCfgDevCriticalResPolicyVia_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 2, 1, 1),
    _WingCfgDevCriticalResPolicyVia_Type()
)
wingCfgDevCriticalResPolicyVia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResPolicyVia.setStatus("current")


class _WingCfgDevCriticalResPolicyAnyAll_Type(DisplayString):
    """Custom type wingCfgDevCriticalResPolicyAnyAll based on DisplayString"""
    defaultValue = OctetString("any")


_WingCfgDevCriticalResPolicyAnyAll_Type.__name__ = "DisplayString"
_WingCfgDevCriticalResPolicyAnyAll_Object = MibTableColumn
wingCfgDevCriticalResPolicyAnyAll = _WingCfgDevCriticalResPolicyAnyAll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 2, 1, 3),
    _WingCfgDevCriticalResPolicyAnyAll_Type()
)
wingCfgDevCriticalResPolicyAnyAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResPolicyAnyAll.setStatus("current")
_WingCfgDevCriticalResourcesTable_Object = MibTable
wingCfgDevCriticalResourcesTable = _WingCfgDevCriticalResourcesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 3)
)
if mibBuilder.loadTexts:
    wingCfgDevCriticalResourcesTable.setStatus("current")
_WingCfgDevCriticalResourcesEntry_Object = MibTableRow
wingCfgDevCriticalResourcesEntry = _WingCfgDevCriticalResourcesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 3, 1)
)
wingCfgDevCriticalResourcesEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevCriticalResPolicyVia"),
    (0, "WING-MIB", "wingCfgDevCriticalResourcesAddr"),
)
if mibBuilder.loadTexts:
    wingCfgDevCriticalResourcesEntry.setStatus("current")
_WingCfgDevCriticalResourcesAddr_Type = WingIdentifier
_WingCfgDevCriticalResourcesAddr_Object = MibTableColumn
wingCfgDevCriticalResourcesAddr = _WingCfgDevCriticalResourcesAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 3, 1, 1),
    _WingCfgDevCriticalResourcesAddr_Type()
)
wingCfgDevCriticalResourcesAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResourcesAddr.setStatus("current")


class _WingCfgDevCriticalResourcesMonitorType_Type(DisplayString):
    """Custom type wingCfgDevCriticalResourcesMonitorType based on DisplayString"""
    defaultValue = OctetString("arp-and-ping")


_WingCfgDevCriticalResourcesMonitorType_Type.__name__ = "DisplayString"
_WingCfgDevCriticalResourcesMonitorType_Object = MibTableColumn
wingCfgDevCriticalResourcesMonitorType = _WingCfgDevCriticalResourcesMonitorType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 3, 1, 3),
    _WingCfgDevCriticalResourcesMonitorType_Type()
)
wingCfgDevCriticalResourcesMonitorType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResourcesMonitorType.setStatus("current")


class _WingCfgDevCriticalResourcesVlan_Type(Unsigned32):
    """Custom type wingCfgDevCriticalResourcesVlan based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgDevCriticalResourcesVlan_Type.__name__ = "Unsigned32"
_WingCfgDevCriticalResourcesVlan_Object = MibTableColumn
wingCfgDevCriticalResourcesVlan = _WingCfgDevCriticalResourcesVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 3, 1, 4),
    _WingCfgDevCriticalResourcesVlan_Type()
)
wingCfgDevCriticalResourcesVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResourcesVlan.setStatus("current")
_WingCfgDevCriticalResourcesPort_Type = DisplayString
_WingCfgDevCriticalResourcesPort_Object = MibTableColumn
wingCfgDevCriticalResourcesPort = _WingCfgDevCriticalResourcesPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 29, 3, 1, 5),
    _WingCfgDevCriticalResourcesPort_Type()
)
wingCfgDevCriticalResourcesPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevCriticalResourcesPort.setStatus("current")
_WingCfgDevl2tpv3_ObjectIdentity = ObjectIdentity
wingCfgDevl2tpv3 = _WingCfgDevl2tpv3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30)
)
_WingCfgDevl2tpv3Table_Object = MibTable
wingCfgDevl2tpv3Table = _WingCfgDevl2tpv3Table_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3Table.setStatus("current")
_WingCfgDevl2tpv3Entry_Object = MibTableRow
wingCfgDevl2tpv3Entry = _WingCfgDevl2tpv3Entry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 1, 1)
)
wingCfgDevl2tpv3Entry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3Entry.setStatus("current")
_WingCfgDevl2tpv3lUdpListenPort_Type = Unsigned32
_WingCfgDevl2tpv3lUdpListenPort_Object = MibTableColumn
wingCfgDevl2tpv3lUdpListenPort = _WingCfgDevl2tpv3lUdpListenPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 1, 1, 1),
    _WingCfgDevl2tpv3lUdpListenPort_Type()
)
wingCfgDevl2tpv3lUdpListenPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3lUdpListenPort.setStatus("current")
_WingCfgDevl2tpv3RouterId_Type = DisplayString
_WingCfgDevl2tpv3RouterId_Object = MibTableColumn
wingCfgDevl2tpv3RouterId = _WingCfgDevl2tpv3RouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 1, 1, 2),
    _WingCfgDevl2tpv3RouterId_Type()
)
wingCfgDevl2tpv3RouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3RouterId.setStatus("current")
_WingCfgDevl2tpv3HostName_Type = DisplayString
_WingCfgDevl2tpv3HostName_Object = MibTableColumn
wingCfgDevl2tpv3HostName = _WingCfgDevl2tpv3HostName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 1, 1, 3),
    _WingCfgDevl2tpv3HostName_Type()
)
wingCfgDevl2tpv3HostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3HostName.setStatus("current")
_WingCfgDevl2tpv3InterTunnelBridging_Type = TruthValue
_WingCfgDevl2tpv3InterTunnelBridging_Object = MibTableColumn
wingCfgDevl2tpv3InterTunnelBridging = _WingCfgDevl2tpv3InterTunnelBridging_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 1, 1, 4),
    _WingCfgDevl2tpv3InterTunnelBridging_Type()
)
wingCfgDevl2tpv3InterTunnelBridging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3InterTunnelBridging.setStatus("current")
_WingCfgDevl2tpv3TunnelTable_Object = MibTable
wingCfgDevl2tpv3TunnelTable = _WingCfgDevl2tpv3TunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2)
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelTable.setStatus("current")
_WingCfgDevl2tpv3TunnelEntry_Object = MibTableRow
wingCfgDevl2tpv3TunnelEntry = _WingCfgDevl2tpv3TunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2, 1)
)
wingCfgDevl2tpv3TunnelEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevl2tpv3TunnelName"),
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelEntry.setStatus("current")
_WingCfgDevl2tpv3TunnelName_Type = WingIdentifier
_WingCfgDevl2tpv3TunnelName_Object = MibTableColumn
wingCfgDevl2tpv3TunnelName = _WingCfgDevl2tpv3TunnelName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2, 1, 1),
    _WingCfgDevl2tpv3TunnelName_Type()
)
wingCfgDevl2tpv3TunnelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelName.setStatus("current")
_WingCfgDevl2tpv3TunnelLocalIpAddrss_Type = DisplayString
_WingCfgDevl2tpv3TunnelLocalIpAddrss_Object = MibTableColumn
wingCfgDevl2tpv3TunnelLocalIpAddrss = _WingCfgDevl2tpv3TunnelLocalIpAddrss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2, 1, 3),
    _WingCfgDevl2tpv3TunnelLocalIpAddrss_Type()
)
wingCfgDevl2tpv3TunnelLocalIpAddrss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelLocalIpAddrss.setStatus("current")
_WingCfgDevl2tpv3TunnelMtu_Type = Unsigned32
_WingCfgDevl2tpv3TunnelMtu_Object = MibTableColumn
wingCfgDevl2tpv3TunnelMtu = _WingCfgDevl2tpv3TunnelMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2, 1, 4),
    _WingCfgDevl2tpv3TunnelMtu_Type()
)
wingCfgDevl2tpv3TunnelMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelMtu.setStatus("current")
_WingCfgDevl2tpv3TunnelUseTunnelPolicy_Type = DisplayString
_WingCfgDevl2tpv3TunnelUseTunnelPolicy_Object = MibTableColumn
wingCfgDevl2tpv3TunnelUseTunnelPolicy = _WingCfgDevl2tpv3TunnelUseTunnelPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2, 1, 5),
    _WingCfgDevl2tpv3TunnelUseTunnelPolicy_Type()
)
wingCfgDevl2tpv3TunnelUseTunnelPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelUseTunnelPolicy.setStatus("current")
_WingCfgDevl2tpv3TunnelHostname_Type = DisplayString
_WingCfgDevl2tpv3TunnelHostname_Object = MibTableColumn
wingCfgDevl2tpv3TunnelHostname = _WingCfgDevl2tpv3TunnelHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2, 1, 6),
    _WingCfgDevl2tpv3TunnelHostname_Type()
)
wingCfgDevl2tpv3TunnelHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelHostname.setStatus("current")
_WingCfgDevl2tpv3TunnelRouterId_Type = DisplayString
_WingCfgDevl2tpv3TunnelRouterId_Object = MibTableColumn
wingCfgDevl2tpv3TunnelRouterId = _WingCfgDevl2tpv3TunnelRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 2, 1, 7),
    _WingCfgDevl2tpv3TunnelRouterId_Type()
)
wingCfgDevl2tpv3TunnelRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelRouterId.setStatus("current")
_WingCfgDevl2tpv3TunnelPeerTable_Object = MibTable
wingCfgDevl2tpv3TunnelPeerTable = _WingCfgDevl2tpv3TunnelPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3)
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelPeerTable.setStatus("current")
_WingCfgDevl2tpv3TunnelPeerEntry_Object = MibTableRow
wingCfgDevl2tpv3TunnelPeerEntry = _WingCfgDevl2tpv3TunnelPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3, 1)
)
wingCfgDevl2tpv3TunnelPeerEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevl2tpv3TunnelName"),
    (0, "WING-MIB", "wingCfgDevl2tpv3TunnelPeerId"),
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelPeerEntry.setStatus("current")


class _WingCfgDevl2tpv3TunnelPeerId_Type(Unsigned32):
    """Custom type wingCfgDevl2tpv3TunnelPeerId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_WingCfgDevl2tpv3TunnelPeerId_Type.__name__ = "Unsigned32"
_WingCfgDevl2tpv3TunnelPeerId_Object = MibTableColumn
wingCfgDevl2tpv3TunnelPeerId = _WingCfgDevl2tpv3TunnelPeerId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3, 1, 1),
    _WingCfgDevl2tpv3TunnelPeerId_Type()
)
wingCfgDevl2tpv3TunnelPeerId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelPeerId.setStatus("current")
_WingCfgDevl2tpv3TunnelPeerIp_Type = DisplayString
_WingCfgDevl2tpv3TunnelPeerIp_Object = MibTableColumn
wingCfgDevl2tpv3TunnelPeerIp = _WingCfgDevl2tpv3TunnelPeerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3, 1, 3),
    _WingCfgDevl2tpv3TunnelPeerIp_Type()
)
wingCfgDevl2tpv3TunnelPeerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelPeerIp.setStatus("current")
_WingCfgDev2tpv3TunnelPeerHostName_Type = DisplayString
_WingCfgDev2tpv3TunnelPeerHostName_Object = MibTableColumn
wingCfgDev2tpv3TunnelPeerHostName = _WingCfgDev2tpv3TunnelPeerHostName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3, 1, 4),
    _WingCfgDev2tpv3TunnelPeerHostName_Type()
)
wingCfgDev2tpv3TunnelPeerHostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDev2tpv3TunnelPeerHostName.setStatus("current")
_WingCfgDevl2tpv3TunnelPeerRouterId_Type = DisplayString
_WingCfgDevl2tpv3TunnelPeerRouterId_Object = MibTableColumn
wingCfgDevl2tpv3TunnelPeerRouterId = _WingCfgDevl2tpv3TunnelPeerRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3, 1, 5),
    _WingCfgDevl2tpv3TunnelPeerRouterId_Type()
)
wingCfgDevl2tpv3TunnelPeerRouterId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelPeerRouterId.setStatus("current")
_WingCfgDevl2tpv3TunnelPeerEncapsulation_Type = DisplayString
_WingCfgDevl2tpv3TunnelPeerEncapsulation_Object = MibTableColumn
wingCfgDevl2tpv3TunnelPeerEncapsulation = _WingCfgDevl2tpv3TunnelPeerEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3, 1, 6),
    _WingCfgDevl2tpv3TunnelPeerEncapsulation_Type()
)
wingCfgDevl2tpv3TunnelPeerEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelPeerEncapsulation.setStatus("current")
_WingCfgDevl2tpv3TunnelPeerUDPPort_Type = Unsigned32
_WingCfgDevl2tpv3TunnelPeerUDPPort_Object = MibTableColumn
wingCfgDevl2tpv3TunnelPeerUDPPort = _WingCfgDevl2tpv3TunnelPeerUDPPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 3, 1, 7),
    _WingCfgDevl2tpv3TunnelPeerUDPPort_Type()
)
wingCfgDevl2tpv3TunnelPeerUDPPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelPeerUDPPort.setStatus("current")
_WingCfgDevl2tpv3TunnelSessionTable_Object = MibTable
wingCfgDevl2tpv3TunnelSessionTable = _WingCfgDevl2tpv3TunnelSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 4)
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelSessionTable.setStatus("current")
_WingCfgDevl2tpv3TunnelSessionEntry_Object = MibTableRow
wingCfgDevl2tpv3TunnelSessionEntry = _WingCfgDevl2tpv3TunnelSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 4, 1)
)
wingCfgDevl2tpv3TunnelSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevl2tpv3TunnelName"),
    (0, "WING-MIB", "wingCfgDevl2tpv3TunnelSessionName"),
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelSessionEntry.setStatus("current")
_WingCfgDevl2tpv3TunnelSessionName_Type = WingIdentifier
_WingCfgDevl2tpv3TunnelSessionName_Object = MibTableColumn
wingCfgDevl2tpv3TunnelSessionName = _WingCfgDevl2tpv3TunnelSessionName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 4, 1, 1),
    _WingCfgDevl2tpv3TunnelSessionName_Type()
)
wingCfgDevl2tpv3TunnelSessionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelSessionName.setStatus("current")
_WingCfgDevl2tpv3TunnelSessionPseudoWireId_Type = Unsigned32
_WingCfgDevl2tpv3TunnelSessionPseudoWireId_Object = MibTableColumn
wingCfgDevl2tpv3TunnelSessionPseudoWireId = _WingCfgDevl2tpv3TunnelSessionPseudoWireId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 4, 1, 3),
    _WingCfgDevl2tpv3TunnelSessionPseudoWireId_Type()
)
wingCfgDevl2tpv3TunnelSessionPseudoWireId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelSessionPseudoWireId.setStatus("current")
_WingCfgDevl2tpv3TunnelSessionTrafficSourceType_Type = DisplayString
_WingCfgDevl2tpv3TunnelSessionTrafficSourceType_Object = MibTableColumn
wingCfgDevl2tpv3TunnelSessionTrafficSourceType = _WingCfgDevl2tpv3TunnelSessionTrafficSourceType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 4, 1, 4),
    _WingCfgDevl2tpv3TunnelSessionTrafficSourceType_Type()
)
wingCfgDevl2tpv3TunnelSessionTrafficSourceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelSessionTrafficSourceType.setStatus("current")
_WingCfgDevl2tpv3TunnelSessionTrafficSourceValue_Type = Unsigned32
_WingCfgDevl2tpv3TunnelSessionTrafficSourceValue_Object = MibTableColumn
wingCfgDevl2tpv3TunnelSessionTrafficSourceValue = _WingCfgDevl2tpv3TunnelSessionTrafficSourceValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 4, 1, 5),
    _WingCfgDevl2tpv3TunnelSessionTrafficSourceValue_Type()
)
wingCfgDevl2tpv3TunnelSessionTrafficSourceValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelSessionTrafficSourceValue.setStatus("current")
_WingCfgDevl2tpv3TunnelSessionNativeVlan_Type = DisplayString
_WingCfgDevl2tpv3TunnelSessionNativeVlan_Object = MibTableColumn
wingCfgDevl2tpv3TunnelSessionNativeVlan = _WingCfgDevl2tpv3TunnelSessionNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 4, 1, 6),
    _WingCfgDevl2tpv3TunnelSessionNativeVlan_Type()
)
wingCfgDevl2tpv3TunnelSessionNativeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3TunnelSessionNativeVlan.setStatus("current")
_WingCfgDevl2tpv3ManualSessionTable_Object = MibTable
wingCfgDevl2tpv3ManualSessionTable = _WingCfgDevl2tpv3ManualSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5)
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionTable.setStatus("current")
_WingCfgDevl2tpv3ManualSessionEntry_Object = MibTableRow
wingCfgDevl2tpv3ManualSessionEntry = _WingCfgDevl2tpv3ManualSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1)
)
wingCfgDevl2tpv3ManualSessionEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevl2tpv3ManualSessionName"),
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionEntry.setStatus("current")
_WingCfgDevl2tpv3ManualSessionName_Type = WingIdentifier
_WingCfgDevl2tpv3ManualSessionName_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionName = _WingCfgDevl2tpv3ManualSessionName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 1),
    _WingCfgDevl2tpv3ManualSessionName_Type()
)
wingCfgDevl2tpv3ManualSessionName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionName.setStatus("current")
_WingCfgDevl2tpv3ManualSessionLocalIpAddr_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionLocalIpAddr_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionLocalIpAddr = _WingCfgDevl2tpv3ManualSessionLocalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 3),
    _WingCfgDevl2tpv3ManualSessionLocalIpAddr_Type()
)
wingCfgDevl2tpv3ManualSessionLocalIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionLocalIpAddr.setStatus("current")
_WingCfgDevl2tpv3ManualSessionPeerIp_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionPeerIp_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionPeerIp = _WingCfgDevl2tpv3ManualSessionPeerIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 4),
    _WingCfgDevl2tpv3ManualSessionPeerIp_Type()
)
wingCfgDevl2tpv3ManualSessionPeerIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionPeerIp.setStatus("current")
_WingCfgDevl2tpv3ManualSessionPeerEncapsulation_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionPeerEncapsulation_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionPeerEncapsulation = _WingCfgDevl2tpv3ManualSessionPeerEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 5),
    _WingCfgDevl2tpv3ManualSessionPeerEncapsulation_Type()
)
wingCfgDevl2tpv3ManualSessionPeerEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionPeerEncapsulation.setStatus("current")
_WingCfgDevl2tpv3ManualSessionPeerUDPPort_Type = Unsigned32
_WingCfgDevl2tpv3ManualSessionPeerUDPPort_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionPeerUDPPort = _WingCfgDevl2tpv3ManualSessionPeerUDPPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 6),
    _WingCfgDevl2tpv3ManualSessionPeerUDPPort_Type()
)
wingCfgDevl2tpv3ManualSessionPeerUDPPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionPeerUDPPort.setStatus("current")
_WingCfgDevl2tpv3ManualSessionMtu_Type = Unsigned32
_WingCfgDevl2tpv3ManualSessionMtu_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionMtu = _WingCfgDevl2tpv3ManualSessionMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 7),
    _WingCfgDevl2tpv3ManualSessionMtu_Type()
)
wingCfgDevl2tpv3ManualSessionMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionMtu.setStatus("current")
_WingCfgDevl2tpv3ManualSessionTrafficSource_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionTrafficSource_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionTrafficSource = _WingCfgDevl2tpv3ManualSessionTrafficSource_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 8),
    _WingCfgDevl2tpv3ManualSessionTrafficSource_Type()
)
wingCfgDevl2tpv3ManualSessionTrafficSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionTrafficSource.setStatus("current")
_WingCfgDevl2tpv3ManualSessionTrafficSourceValue_Type = Unsigned32
_WingCfgDevl2tpv3ManualSessionTrafficSourceValue_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionTrafficSourceValue = _WingCfgDevl2tpv3ManualSessionTrafficSourceValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 9),
    _WingCfgDevl2tpv3ManualSessionTrafficSourceValue_Type()
)
wingCfgDevl2tpv3ManualSessionTrafficSourceValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionTrafficSourceValue.setStatus("current")
_WingCfgDevl2tpv3ManualSessionNativeVlan_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionNativeVlan_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionNativeVlan = _WingCfgDevl2tpv3ManualSessionNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 10),
    _WingCfgDevl2tpv3ManualSessionNativeVlan_Type()
)
wingCfgDevl2tpv3ManualSessionNativeVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionNativeVlan.setStatus("current")
_WingCfgDevl2tpv3ManualSessionLocalSessionId_Type = Unsigned32
_WingCfgDevl2tpv3ManualSessionLocalSessionId_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionLocalSessionId = _WingCfgDevl2tpv3ManualSessionLocalSessionId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 11),
    _WingCfgDevl2tpv3ManualSessionLocalSessionId_Type()
)
wingCfgDevl2tpv3ManualSessionLocalSessionId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionLocalSessionId.setStatus("current")
_WingCfgDevl2tpv3ManualSessionRemoteSessionId_Type = Unsigned32
_WingCfgDevl2tpv3ManualSessionRemoteSessionId_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionRemoteSessionId = _WingCfgDevl2tpv3ManualSessionRemoteSessionId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 5, 1, 12),
    _WingCfgDevl2tpv3ManualSessionRemoteSessionId_Type()
)
wingCfgDevl2tpv3ManualSessionRemoteSessionId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionRemoteSessionId.setStatus("current")
_WingCfgDevl2tpv3ManualSessionCookieTable_Object = MibTable
wingCfgDevl2tpv3ManualSessionCookieTable = _WingCfgDevl2tpv3ManualSessionCookieTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 6)
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionCookieTable.setStatus("current")
_WingCfgDevl2tpv3ManualSessionCookieEntry_Object = MibTableRow
wingCfgDevl2tpv3ManualSessionCookieEntry = _WingCfgDevl2tpv3ManualSessionCookieEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 6, 1)
)
wingCfgDevl2tpv3ManualSessionCookieEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevl2tpv3ManualSessionName"),
    (0, "WING-MIB", "wingCfgDevl2tpv3ManualSessionCookieEndpoint"),
)
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionCookieEntry.setStatus("current")
_WingCfgDevl2tpv3ManualSessionCookieEndpoint_Type = WingIdentifier
_WingCfgDevl2tpv3ManualSessionCookieEndpoint_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionCookieEndpoint = _WingCfgDevl2tpv3ManualSessionCookieEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 6, 1, 1),
    _WingCfgDevl2tpv3ManualSessionCookieEndpoint_Type()
)
wingCfgDevl2tpv3ManualSessionCookieEndpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionCookieEndpoint.setStatus("current")
_WingCfgDevl2tpv3ManualSessionCookieSize_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionCookieSize_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionCookieSize = _WingCfgDevl2tpv3ManualSessionCookieSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 6, 1, 3),
    _WingCfgDevl2tpv3ManualSessionCookieSize_Type()
)
wingCfgDevl2tpv3ManualSessionCookieSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionCookieSize.setStatus("current")
_WingCfgDevl2tpv3ManualSessionCookieVal1_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionCookieVal1_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionCookieVal1 = _WingCfgDevl2tpv3ManualSessionCookieVal1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 6, 1, 4),
    _WingCfgDevl2tpv3ManualSessionCookieVal1_Type()
)
wingCfgDevl2tpv3ManualSessionCookieVal1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionCookieVal1.setStatus("current")
_WingCfgDevl2tpv3ManualSessionCookieVal2_Type = DisplayString
_WingCfgDevl2tpv3ManualSessionCookieVal2_Object = MibTableColumn
wingCfgDevl2tpv3ManualSessionCookieVal2 = _WingCfgDevl2tpv3ManualSessionCookieVal2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 30, 6, 1, 5),
    _WingCfgDevl2tpv3ManualSessionCookieVal2_Type()
)
wingCfgDevl2tpv3ManualSessionCookieVal2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevl2tpv3ManualSessionCookieVal2.setStatus("current")
_WingCfgDevMcx_ObjectIdentity = ObjectIdentity
wingCfgDevMcx = _WingCfgDevMcx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31)
)
_WingCfgDevMeshpointDevTable_Object = MibTable
wingCfgDevMeshpointDevTable = _WingCfgDevMeshpointDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31, 1)
)
if mibBuilder.loadTexts:
    wingCfgDevMeshpointDevTable.setStatus("current")
_WingCfgDevMeshpointDevEntry_Object = MibTableRow
wingCfgDevMeshpointDevEntry = _WingCfgDevMeshpointDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31, 1, 1)
)
wingCfgDevMeshpointDevEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingCfgDevMeshpointDevName"),
)
if mibBuilder.loadTexts:
    wingCfgDevMeshpointDevEntry.setStatus("current")
_WingCfgDevMeshpointDevName_Type = WingIdentifier
_WingCfgDevMeshpointDevName_Object = MibTableColumn
wingCfgDevMeshpointDevName = _WingCfgDevMeshpointDevName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31, 1, 1, 1),
    _WingCfgDevMeshpointDevName_Type()
)
wingCfgDevMeshpointDevName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgDevMeshpointDevName.setStatus("current")


class _WingCfgDevMeshpointDevIsRootDev_Type(DisplayString):
    """Custom type wingCfgDevMeshpointDevIsRootDev based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevMeshpointDevIsRootDev_Type.__name__ = "DisplayString"
_WingCfgDevMeshpointDevIsRootDev_Object = MibTableColumn
wingCfgDevMeshpointDevIsRootDev = _WingCfgDevMeshpointDevIsRootDev_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31, 1, 1, 3),
    _WingCfgDevMeshpointDevIsRootDev_Type()
)
wingCfgDevMeshpointDevIsRootDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMeshpointDevIsRootDev.setStatus("current")
_WingCfgDevMeshpointDevPreferredRoot_Type = DisplayString
_WingCfgDevMeshpointDevPreferredRoot_Object = MibTableColumn
wingCfgDevMeshpointDevPreferredRoot = _WingCfgDevMeshpointDevPreferredRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31, 1, 1, 4),
    _WingCfgDevMeshpointDevPreferredRoot_Type()
)
wingCfgDevMeshpointDevPreferredRoot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMeshpointDevPreferredRoot.setStatus("current")
_WingCfgDevMeshpointDevPreferredNeighbor_Type = MacAddress
_WingCfgDevMeshpointDevPreferredNeighbor_Object = MibTableColumn
wingCfgDevMeshpointDevPreferredNeighbor = _WingCfgDevMeshpointDevPreferredNeighbor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31, 1, 1, 5),
    _WingCfgDevMeshpointDevPreferredNeighbor_Type()
)
wingCfgDevMeshpointDevPreferredNeighbor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMeshpointDevPreferredNeighbor.setStatus("current")


class _WingCfgDevMeshpointDevPreferredIf_Type(DisplayString):
    """Custom type wingCfgDevMeshpointDevPreferredIf based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgDevMeshpointDevPreferredIf_Type.__name__ = "DisplayString"
_WingCfgDevMeshpointDevPreferredIf_Object = MibTableColumn
wingCfgDevMeshpointDevPreferredIf = _WingCfgDevMeshpointDevPreferredIf_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 18, 31, 1, 1, 6),
    _WingCfgDevMeshpointDevPreferredIf_Type()
)
wingCfgDevMeshpointDevPreferredIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgDevMeshpointDevPreferredIf.setStatus("current")
_WingCfgMgmt_ObjectIdentity = ObjectIdentity
wingCfgMgmt = _WingCfgMgmt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19)
)
_WingCfgMgmtTable_Object = MibTable
wingCfgMgmtTable = _WingCfgMgmtTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1)
)
if mibBuilder.loadTexts:
    wingCfgMgmtTable.setStatus("current")
_WingCfgMgmtEntry_Object = MibTableRow
wingCfgMgmtEntry = _WingCfgMgmtEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1)
)
wingCfgMgmtEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMgmtName"),
)
if mibBuilder.loadTexts:
    wingCfgMgmtEntry.setStatus("current")
_WingCfgMgmtName_Type = WingIdentifier
_WingCfgMgmtName_Object = MibTableColumn
wingCfgMgmtName = _WingCfgMgmtName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 1),
    _WingCfgMgmtName_Type()
)
wingCfgMgmtName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtName.setStatus("current")


class _WingCfgMgmtTelnetEnable_Type(TruthValue):
    """Custom type wingCfgMgmtTelnetEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMgmtTelnetEnable_Type.__name__ = "TruthValue"
_WingCfgMgmtTelnetEnable_Object = MibTableColumn
wingCfgMgmtTelnetEnable = _WingCfgMgmtTelnetEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 3),
    _WingCfgMgmtTelnetEnable_Type()
)
wingCfgMgmtTelnetEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtTelnetEnable.setStatus("current")


class _WingCfgMgmtTelnetPort_Type(Unsigned32):
    """Custom type wingCfgMgmtTelnetPort based on Unsigned32"""
    defaultValue = 23

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingCfgMgmtTelnetPort_Type.__name__ = "Unsigned32"
_WingCfgMgmtTelnetPort_Object = MibTableColumn
wingCfgMgmtTelnetPort = _WingCfgMgmtTelnetPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 4),
    _WingCfgMgmtTelnetPort_Type()
)
wingCfgMgmtTelnetPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtTelnetPort.setStatus("current")


class _WingCfgMgmtHttpEnable_Type(TruthValue):
    """Custom type wingCfgMgmtHttpEnable based on TruthValue"""
    defaultValue = 1


_WingCfgMgmtHttpEnable_Type.__name__ = "TruthValue"
_WingCfgMgmtHttpEnable_Object = MibTableColumn
wingCfgMgmtHttpEnable = _WingCfgMgmtHttpEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 5),
    _WingCfgMgmtHttpEnable_Type()
)
wingCfgMgmtHttpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtHttpEnable.setStatus("current")


class _WingCfgMgmtHttpsEnable_Type(TruthValue):
    """Custom type wingCfgMgmtHttpsEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMgmtHttpsEnable_Type.__name__ = "TruthValue"
_WingCfgMgmtHttpsEnable_Object = MibTableColumn
wingCfgMgmtHttpsEnable = _WingCfgMgmtHttpsEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 6),
    _WingCfgMgmtHttpsEnable_Type()
)
wingCfgMgmtHttpsEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtHttpsEnable.setStatus("current")


class _WingCfgMgmtSshEnable_Type(TruthValue):
    """Custom type wingCfgMgmtSshEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMgmtSshEnable_Type.__name__ = "TruthValue"
_WingCfgMgmtSshEnable_Object = MibTableColumn
wingCfgMgmtSshEnable = _WingCfgMgmtSshEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 7),
    _WingCfgMgmtSshEnable_Type()
)
wingCfgMgmtSshEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtSshEnable.setStatus("current")


class _WingCfgMgmtSshPort_Type(Unsigned32):
    """Custom type wingCfgMgmtSshPort based on Unsigned32"""
    defaultValue = 22


_WingCfgMgmtSshPort_Type.__name__ = "Unsigned32"
_WingCfgMgmtSshPort_Object = MibTableColumn
wingCfgMgmtSshPort = _WingCfgMgmtSshPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 8),
    _WingCfgMgmtSshPort_Type()
)
wingCfgMgmtSshPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtSshPort.setStatus("current")


class _WingCfgMgmtBannerMotd_Type(DisplayString):
    """Custom type wingCfgMgmtBannerMotd based on DisplayString"""
    defaultValue = OctetString("")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_WingCfgMgmtBannerMotd_Type.__name__ = "DisplayString"
_WingCfgMgmtBannerMotd_Object = MibTableColumn
wingCfgMgmtBannerMotd = _WingCfgMgmtBannerMotd_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 1, 1, 9),
    _WingCfgMgmtBannerMotd_Type()
)
wingCfgMgmtBannerMotd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtBannerMotd.setStatus("current")
_WingCfgMgmtSnmp_ObjectIdentity = ObjectIdentity
wingCfgMgmtSnmp = _WingCfgMgmtSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2)
)
_WingCfgMgmtSnmpTable_Object = MibTable
wingCfgMgmtSnmpTable = _WingCfgMgmtSnmpTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 1)
)
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpTable.setStatus("current")
_WingCfgMgmtSnmpEntry_Object = MibTableRow
wingCfgMgmtSnmpEntry = _WingCfgMgmtSnmpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 1, 1)
)
wingCfgMgmtSnmpEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMgmtName"),
)
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpEntry.setStatus("current")


class _WingCfgMgmtSnmpV1Enable_Type(TruthValue):
    """Custom type wingCfgMgmtSnmpV1Enable based on TruthValue"""
    defaultValue = 1


_WingCfgMgmtSnmpV1Enable_Type.__name__ = "TruthValue"
_WingCfgMgmtSnmpV1Enable_Object = MibTableColumn
wingCfgMgmtSnmpV1Enable = _WingCfgMgmtSnmpV1Enable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 1, 1, 1),
    _WingCfgMgmtSnmpV1Enable_Type()
)
wingCfgMgmtSnmpV1Enable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpV1Enable.setStatus("current")


class _WingCfgMgmtSnmpV2Enable_Type(TruthValue):
    """Custom type wingCfgMgmtSnmpV2Enable based on TruthValue"""
    defaultValue = 1


_WingCfgMgmtSnmpV2Enable_Type.__name__ = "TruthValue"
_WingCfgMgmtSnmpV2Enable_Object = MibTableColumn
wingCfgMgmtSnmpV2Enable = _WingCfgMgmtSnmpV2Enable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 1, 1, 2),
    _WingCfgMgmtSnmpV2Enable_Type()
)
wingCfgMgmtSnmpV2Enable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpV2Enable.setStatus("current")


class _WingCfgMgmtSnmpV3Enable_Type(TruthValue):
    """Custom type wingCfgMgmtSnmpV3Enable based on TruthValue"""
    defaultValue = 1


_WingCfgMgmtSnmpV3Enable_Type.__name__ = "TruthValue"
_WingCfgMgmtSnmpV3Enable_Object = MibTableColumn
wingCfgMgmtSnmpV3Enable = _WingCfgMgmtSnmpV3Enable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 1, 1, 3),
    _WingCfgMgmtSnmpV3Enable_Type()
)
wingCfgMgmtSnmpV3Enable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpV3Enable.setStatus("current")


class _WingCfgMgmtSnmpTrapEnable_Type(TruthValue):
    """Custom type wingCfgMgmtSnmpTrapEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMgmtSnmpTrapEnable_Type.__name__ = "TruthValue"
_WingCfgMgmtSnmpTrapEnable_Object = MibTableColumn
wingCfgMgmtSnmpTrapEnable = _WingCfgMgmtSnmpTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 1, 1, 4),
    _WingCfgMgmtSnmpTrapEnable_Type()
)
wingCfgMgmtSnmpTrapEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpTrapEnable.setStatus("current")
_WingCfgMgmtSnmpCommunityTable_Object = MibTable
wingCfgMgmtSnmpCommunityTable = _WingCfgMgmtSnmpCommunityTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 2)
)
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpCommunityTable.setStatus("current")
_WingCfgMgmtSnmpCommunityEntry_Object = MibTableRow
wingCfgMgmtSnmpCommunityEntry = _WingCfgMgmtSnmpCommunityEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 2, 1)
)
wingCfgMgmtSnmpCommunityEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMgmtName"),
    (0, "WING-MIB", "wingCfgMgmtSnmpCommunityName"),
)
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpCommunityEntry.setStatus("current")
_WingCfgMgmtSnmpCommunityName_Type = WingIdentifier
_WingCfgMgmtSnmpCommunityName_Object = MibTableColumn
wingCfgMgmtSnmpCommunityName = _WingCfgMgmtSnmpCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 2, 1, 1),
    _WingCfgMgmtSnmpCommunityName_Type()
)
wingCfgMgmtSnmpCommunityName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpCommunityName.setStatus("current")


class _WingCfgMgmtSnmpCommunityAccess_Type(DisplayString):
    """Custom type wingCfgMgmtSnmpCommunityAccess based on DisplayString"""
    defaultValue = OctetString("ro")


_WingCfgMgmtSnmpCommunityAccess_Type.__name__ = "DisplayString"
_WingCfgMgmtSnmpCommunityAccess_Object = MibTableColumn
wingCfgMgmtSnmpCommunityAccess = _WingCfgMgmtSnmpCommunityAccess_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 2, 1, 3),
    _WingCfgMgmtSnmpCommunityAccess_Type()
)
wingCfgMgmtSnmpCommunityAccess.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpCommunityAccess.setStatus("current")
_WingCfgMgmtSnmpUsmUserTable_Object = MibTable
wingCfgMgmtSnmpUsmUserTable = _WingCfgMgmtSnmpUsmUserTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 3)
)
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpUsmUserTable.setStatus("current")
_WingCfgMgmtSnmpUsmUserEntry_Object = MibTableRow
wingCfgMgmtSnmpUsmUserEntry = _WingCfgMgmtSnmpUsmUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 3, 1)
)
wingCfgMgmtSnmpUsmUserEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMgmtName"),
    (0, "WING-MIB", "wingCfgMgmtSnmpUsmUserName"),
)
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpUsmUserEntry.setStatus("current")
_WingCfgMgmtSnmpUsmUserName_Type = WingIdentifier
_WingCfgMgmtSnmpUsmUserName_Object = MibTableColumn
wingCfgMgmtSnmpUsmUserName = _WingCfgMgmtSnmpUsmUserName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 3, 1, 1),
    _WingCfgMgmtSnmpUsmUserName_Type()
)
wingCfgMgmtSnmpUsmUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpUsmUserName.setStatus("current")


class _WingCfgMgmtSnmpUsmUserAuthentication_Type(DisplayString):
    """Custom type wingCfgMgmtSnmpUsmUserAuthentication based on DisplayString"""
    defaultValue = OctetString("md5")


_WingCfgMgmtSnmpUsmUserAuthentication_Type.__name__ = "DisplayString"
_WingCfgMgmtSnmpUsmUserAuthentication_Object = MibTableColumn
wingCfgMgmtSnmpUsmUserAuthentication = _WingCfgMgmtSnmpUsmUserAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 3, 1, 3),
    _WingCfgMgmtSnmpUsmUserAuthentication_Type()
)
wingCfgMgmtSnmpUsmUserAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpUsmUserAuthentication.setStatus("current")


class _WingCfgMgmtSnmpUsmUserEncryption_Type(DisplayString):
    """Custom type wingCfgMgmtSnmpUsmUserEncryption based on DisplayString"""
    defaultValue = OctetString("des")


_WingCfgMgmtSnmpUsmUserEncryption_Type.__name__ = "DisplayString"
_WingCfgMgmtSnmpUsmUserEncryption_Object = MibTableColumn
wingCfgMgmtSnmpUsmUserEncryption = _WingCfgMgmtSnmpUsmUserEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 3, 1, 4),
    _WingCfgMgmtSnmpUsmUserEncryption_Type()
)
wingCfgMgmtSnmpUsmUserEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpUsmUserEncryption.setStatus("current")


class _WingCfgMgmtSnmpUsmUserPassword_Type(DisplayString):
    """Custom type wingCfgMgmtSnmpUsmUserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 64),
    )


_WingCfgMgmtSnmpUsmUserPassword_Type.__name__ = "DisplayString"
_WingCfgMgmtSnmpUsmUserPassword_Object = MibTableColumn
wingCfgMgmtSnmpUsmUserPassword = _WingCfgMgmtSnmpUsmUserPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 2, 3, 1, 5),
    _WingCfgMgmtSnmpUsmUserPassword_Type()
)
wingCfgMgmtSnmpUsmUserPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtSnmpUsmUserPassword.setStatus("current")
_WingCfgMgmtAdminTable_Object = MibTable
wingCfgMgmtAdminTable = _WingCfgMgmtAdminTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 5)
)
if mibBuilder.loadTexts:
    wingCfgMgmtAdminTable.setStatus("current")
_WingCfgMgmtAdminEntry_Object = MibTableRow
wingCfgMgmtAdminEntry = _WingCfgMgmtAdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 5, 1)
)
wingCfgMgmtAdminEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMgmtName"),
    (0, "WING-MIB", "wingCfgMgmtAdminUsername"),
)
if mibBuilder.loadTexts:
    wingCfgMgmtAdminEntry.setStatus("current")
_WingCfgMgmtAdminUsername_Type = WingIdentifier
_WingCfgMgmtAdminUsername_Object = MibTableColumn
wingCfgMgmtAdminUsername = _WingCfgMgmtAdminUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 5, 1, 1),
    _WingCfgMgmtAdminUsername_Type()
)
wingCfgMgmtAdminUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgMgmtAdminUsername.setStatus("current")


class _WingCfgMgmtAdminPassword_Type(DisplayString):
    """Custom type wingCfgMgmtAdminPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_WingCfgMgmtAdminPassword_Type.__name__ = "DisplayString"
_WingCfgMgmtAdminPassword_Object = MibTableColumn
wingCfgMgmtAdminPassword = _WingCfgMgmtAdminPassword_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 5, 1, 3),
    _WingCfgMgmtAdminPassword_Type()
)
wingCfgMgmtAdminPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtAdminPassword.setStatus("current")


class _WingCfgMgmtAdminRole_Type(DisplayString):
    """Custom type wingCfgMgmtAdminRole based on DisplayString"""
    defaultValue = OctetString("superuser")


_WingCfgMgmtAdminRole_Type.__name__ = "DisplayString"
_WingCfgMgmtAdminRole_Object = MibTableColumn
wingCfgMgmtAdminRole = _WingCfgMgmtAdminRole_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 19, 5, 1, 4),
    _WingCfgMgmtAdminRole_Type()
)
wingCfgMgmtAdminRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMgmtAdminRole.setStatus("current")
_WingCfgRoute_ObjectIdentity = ObjectIdentity
wingCfgRoute = _WingCfgRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31)
)
_WingCfgRouteTable_Object = MibTable
wingCfgRouteTable = _WingCfgRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 1)
)
if mibBuilder.loadTexts:
    wingCfgRouteTable.setStatus("current")
_WingCfgRouteEntry_Object = MibTableRow
wingCfgRouteEntry = _WingCfgRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 1, 1)
)
wingCfgRouteEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRouteName"),
)
if mibBuilder.loadTexts:
    wingCfgRouteEntry.setStatus("current")
_WingCfgRouteName_Type = WingIdentifier
_WingCfgRouteName_Object = MibTableColumn
wingCfgRouteName = _WingCfgRouteName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 1, 1, 1),
    _WingCfgRouteName_Type()
)
wingCfgRouteName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRouteName.setStatus("current")


class _WingCfgRouteLogging_Type(TruthValue):
    """Custom type wingCfgRouteLogging based on TruthValue"""
    defaultValue = 2


_WingCfgRouteLogging_Type.__name__ = "TruthValue"
_WingCfgRouteLogging_Object = MibTableColumn
wingCfgRouteLogging = _WingCfgRouteLogging_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 1, 1, 3),
    _WingCfgRouteLogging_Type()
)
wingCfgRouteLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteLogging.setStatus("current")


class _WingCfgRouteLocalPbr_Type(TruthValue):
    """Custom type wingCfgRouteLocalPbr based on TruthValue"""
    defaultValue = 1


_WingCfgRouteLocalPbr_Type.__name__ = "TruthValue"
_WingCfgRouteLocalPbr_Object = MibTableColumn
wingCfgRouteLocalPbr = _WingCfgRouteLocalPbr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 1, 1, 4),
    _WingCfgRouteLocalPbr_Type()
)
wingCfgRouteLocalPbr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteLocalPbr.setStatus("current")


class _WingCfgRouteUseCrm_Type(TruthValue):
    """Custom type wingCfgRouteUseCrm based on TruthValue"""
    defaultValue = 1


_WingCfgRouteUseCrm_Type.__name__ = "TruthValue"
_WingCfgRouteUseCrm_Object = MibTableColumn
wingCfgRouteUseCrm = _WingCfgRouteUseCrm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 1, 1, 5),
    _WingCfgRouteUseCrm_Type()
)
wingCfgRouteUseCrm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteUseCrm.setStatus("current")
_WingCfgRouteMapTable_Object = MibTable
wingCfgRouteMapTable = _WingCfgRouteMapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2)
)
if mibBuilder.loadTexts:
    wingCfgRouteMapTable.setStatus("current")
_WingCfgRouteMapEntry_Object = MibTableRow
wingCfgRouteMapEntry = _WingCfgRouteMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1)
)
wingCfgRouteMapEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgRouteName"),
    (0, "WING-MIB", "wingCfgRouteMapPrecedence"),
)
if mibBuilder.loadTexts:
    wingCfgRouteMapEntry.setStatus("current")


class _WingCfgRouteMapPrecedence_Type(Unsigned32):
    """Custom type wingCfgRouteMapPrecedence based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingCfgRouteMapPrecedence_Type.__name__ = "Unsigned32"
_WingCfgRouteMapPrecedence_Object = MibTableColumn
wingCfgRouteMapPrecedence = _WingCfgRouteMapPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 1),
    _WingCfgRouteMapPrecedence_Type()
)
wingCfgRouteMapPrecedence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgRouteMapPrecedence.setStatus("current")
_WingCfgRouteMapMatchClauseAcl_Type = WingIdentifier
_WingCfgRouteMapMatchClauseAcl_Object = MibTableColumn
wingCfgRouteMapMatchClauseAcl = _WingCfgRouteMapMatchClauseAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 3),
    _WingCfgRouteMapMatchClauseAcl_Type()
)
wingCfgRouteMapMatchClauseAcl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapMatchClauseAcl.setStatus("current")


class _WingCfgRouteMapMatchClauseDscp_Type(Unsigned32):
    """Custom type wingCfgRouteMapMatchClauseDscp based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_WingCfgRouteMapMatchClauseDscp_Type.__name__ = "Unsigned32"
_WingCfgRouteMapMatchClauseDscp_Object = MibTableColumn
wingCfgRouteMapMatchClauseDscp = _WingCfgRouteMapMatchClauseDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 4),
    _WingCfgRouteMapMatchClauseDscp_Type()
)
wingCfgRouteMapMatchClauseDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapMatchClauseDscp.setStatus("current")
_WingCfgRouteMapMatchClauseWlan_Type = WingIdentifier
_WingCfgRouteMapMatchClauseWlan_Object = MibTableColumn
wingCfgRouteMapMatchClauseWlan = _WingCfgRouteMapMatchClauseWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 5),
    _WingCfgRouteMapMatchClauseWlan_Type()
)
wingCfgRouteMapMatchClauseWlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapMatchClauseWlan.setStatus("current")
_WingCfgRouteMapRolePolicy_Type = WingIdentifier
_WingCfgRouteMapRolePolicy_Object = MibTableColumn
wingCfgRouteMapRolePolicy = _WingCfgRouteMapRolePolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 6),
    _WingCfgRouteMapRolePolicy_Type()
)
wingCfgRouteMapRolePolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapRolePolicy.setStatus("current")
_WingCfgRouteMapUserRole_Type = WingIdentifier
_WingCfgRouteMapUserRole_Object = MibTableColumn
wingCfgRouteMapUserRole = _WingCfgRouteMapUserRole_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 7),
    _WingCfgRouteMapUserRole_Type()
)
wingCfgRouteMapUserRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapUserRole.setStatus("current")
_WingCfgRouteMapMatchClauseIncomingInterface_Type = DisplayString
_WingCfgRouteMapMatchClauseIncomingInterface_Object = MibTableColumn
wingCfgRouteMapMatchClauseIncomingInterface = _WingCfgRouteMapMatchClauseIncomingInterface_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 8),
    _WingCfgRouteMapMatchClauseIncomingInterface_Type()
)
wingCfgRouteMapMatchClauseIncomingInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapMatchClauseIncomingInterface.setStatus("current")
_WingCfgRouteMapNextHop1_Type = DisplayString
_WingCfgRouteMapNextHop1_Object = MibTableColumn
wingCfgRouteMapNextHop1 = _WingCfgRouteMapNextHop1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 9),
    _WingCfgRouteMapNextHop1_Type()
)
wingCfgRouteMapNextHop1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapNextHop1.setStatus("current")
_WingCfgRouteMapNextHop2_Type = DisplayString
_WingCfgRouteMapNextHop2_Object = MibTableColumn
wingCfgRouteMapNextHop2 = _WingCfgRouteMapNextHop2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 11),
    _WingCfgRouteMapNextHop2_Type()
)
wingCfgRouteMapNextHop2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapNextHop2.setStatus("current")
_WingCfgRouteMapSetClauseDefaultNextHop_Type = DisplayString
_WingCfgRouteMapSetClauseDefaultNextHop_Object = MibTableColumn
wingCfgRouteMapSetClauseDefaultNextHop = _WingCfgRouteMapSetClauseDefaultNextHop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 13),
    _WingCfgRouteMapSetClauseDefaultNextHop_Type()
)
wingCfgRouteMapSetClauseDefaultNextHop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapSetClauseDefaultNextHop.setStatus("current")


class _WingCfgRouteMapSetClauseFallback_Type(TruthValue):
    """Custom type wingCfgRouteMapSetClauseFallback based on TruthValue"""
    defaultValue = 1


_WingCfgRouteMapSetClauseFallback_Type.__name__ = "TruthValue"
_WingCfgRouteMapSetClauseFallback_Object = MibTableColumn
wingCfgRouteMapSetClauseFallback = _WingCfgRouteMapSetClauseFallback_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 14),
    _WingCfgRouteMapSetClauseFallback_Type()
)
wingCfgRouteMapSetClauseFallback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapSetClauseFallback.setStatus("current")


class _WingCfgRouteMapSetClauseMarkDscp_Type(Unsigned32):
    """Custom type wingCfgRouteMapSetClauseMarkDscp based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )


_WingCfgRouteMapSetClauseMarkDscp_Type.__name__ = "Unsigned32"
_WingCfgRouteMapSetClauseMarkDscp_Object = MibTableColumn
wingCfgRouteMapSetClauseMarkDscp = _WingCfgRouteMapSetClauseMarkDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 31, 2, 1, 15),
    _WingCfgRouteMapSetClauseMarkDscp_Type()
)
wingCfgRouteMapSetClauseMarkDscp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgRouteMapSetClauseMarkDscp.setStatus("current")
_WingCfgl2tpv3Policy_ObjectIdentity = ObjectIdentity
wingCfgl2tpv3Policy = _WingCfgl2tpv3Policy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32)
)
_WingCfgl2tpv3PolicyTable_Object = MibTable
wingCfgl2tpv3PolicyTable = _WingCfgl2tpv3PolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1)
)
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyTable.setStatus("current")
_WingCfgl2tpv3PolicyEntry_Object = MibTableRow
wingCfgl2tpv3PolicyEntry = _WingCfgl2tpv3PolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1)
)
wingCfgl2tpv3PolicyEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgl2tpv3PolicyName"),
)
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyEntry.setStatus("current")


class _WingCfgl2tpv3PolicyName_Type(WingIdentifier):
    """Custom type wingCfgl2tpv3PolicyName based on WingIdentifier"""
    subtypeSpec = WingIdentifier.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 31),
    )


_WingCfgl2tpv3PolicyName_Type.__name__ = "WingIdentifier"
_WingCfgl2tpv3PolicyName_Object = MibTableColumn
wingCfgl2tpv3PolicyName = _WingCfgl2tpv3PolicyName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 1),
    _WingCfgl2tpv3PolicyName_Type()
)
wingCfgl2tpv3PolicyName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyName.setStatus("current")


class _WingCfgl2tpv3PolicyHelloInterval_Type(Unsigned32):
    """Custom type wingCfgl2tpv3PolicyHelloInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_WingCfgl2tpv3PolicyHelloInterval_Type.__name__ = "Unsigned32"
_WingCfgl2tpv3PolicyHelloInterval_Object = MibTableColumn
wingCfgl2tpv3PolicyHelloInterval = _WingCfgl2tpv3PolicyHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 3),
    _WingCfgl2tpv3PolicyHelloInterval_Type()
)
wingCfgl2tpv3PolicyHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyHelloInterval.setStatus("current")


class _WingCfgl2tpv3PolicyRetryAttempts_Type(Unsigned32):
    """Custom type wingCfgl2tpv3PolicyRetryAttempts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_WingCfgl2tpv3PolicyRetryAttempts_Type.__name__ = "Unsigned32"
_WingCfgl2tpv3PolicyRetryAttempts_Object = MibTableColumn
wingCfgl2tpv3PolicyRetryAttempts = _WingCfgl2tpv3PolicyRetryAttempts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 4),
    _WingCfgl2tpv3PolicyRetryAttempts_Type()
)
wingCfgl2tpv3PolicyRetryAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyRetryAttempts.setStatus("current")


class _WingCfgl2tpv3PolicyRetryInterval_Type(Unsigned32):
    """Custom type wingCfgl2tpv3PolicyRetryInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 250),
    )


_WingCfgl2tpv3PolicyRetryInterval_Type.__name__ = "Unsigned32"
_WingCfgl2tpv3PolicyRetryInterval_Object = MibTableColumn
wingCfgl2tpv3PolicyRetryInterval = _WingCfgl2tpv3PolicyRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 5),
    _WingCfgl2tpv3PolicyRetryInterval_Type()
)
wingCfgl2tpv3PolicyRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyRetryInterval.setStatus("current")
_WingCfgl2tpv3PolicyHideAVPs_Type = TruthValue
_WingCfgl2tpv3PolicyHideAVPs_Object = MibTableColumn
wingCfgl2tpv3PolicyHideAVPs = _WingCfgl2tpv3PolicyHideAVPs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 6),
    _WingCfgl2tpv3PolicyHideAVPs_Type()
)
wingCfgl2tpv3PolicyHideAVPs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyHideAVPs.setStatus("current")
_WingCfgl2tpv3PolicyCookieSize_Type = DisplayString
_WingCfgl2tpv3PolicyCookieSize_Object = MibTableColumn
wingCfgl2tpv3PolicyCookieSize = _WingCfgl2tpv3PolicyCookieSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 7),
    _WingCfgl2tpv3PolicyCookieSize_Type()
)
wingCfgl2tpv3PolicyCookieSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyCookieSize.setStatus("current")


class _WingCfgl2tpv3PolicyRxWindowSize_Type(Unsigned32):
    """Custom type wingCfgl2tpv3PolicyRxWindowSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgl2tpv3PolicyRxWindowSize_Type.__name__ = "Unsigned32"
_WingCfgl2tpv3PolicyRxWindowSize_Object = MibTableColumn
wingCfgl2tpv3PolicyRxWindowSize = _WingCfgl2tpv3PolicyRxWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 8),
    _WingCfgl2tpv3PolicyRxWindowSize_Type()
)
wingCfgl2tpv3PolicyRxWindowSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyRxWindowSize.setStatus("current")


class _WingCfgl2tpv3PolicyTxWindowSize_Type(Unsigned32):
    """Custom type wingCfgl2tpv3PolicyTxWindowSize based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_WingCfgl2tpv3PolicyTxWindowSize_Type.__name__ = "Unsigned32"
_WingCfgl2tpv3PolicyTxWindowSize_Object = MibTableColumn
wingCfgl2tpv3PolicyTxWindowSize = _WingCfgl2tpv3PolicyTxWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 9),
    _WingCfgl2tpv3PolicyTxWindowSize_Type()
)
wingCfgl2tpv3PolicyTxWindowSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyTxWindowSize.setStatus("current")
_WingCfgl2tpv3PolicySequencingRequired_Type = TruthValue
_WingCfgl2tpv3PolicySequencingRequired_Object = MibTableColumn
wingCfgl2tpv3PolicySequencingRequired = _WingCfgl2tpv3PolicySequencingRequired_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 10),
    _WingCfgl2tpv3PolicySequencingRequired_Type()
)
wingCfgl2tpv3PolicySequencingRequired.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicySequencingRequired.setStatus("current")


class _WingCfgl2tpv3PolicyReconnectInterval_Type(Unsigned32):
    """Custom type wingCfgl2tpv3PolicyReconnectInterval based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3600),
    )


_WingCfgl2tpv3PolicyReconnectInterval_Type.__name__ = "Unsigned32"
_WingCfgl2tpv3PolicyReconnectInterval_Object = MibTableColumn
wingCfgl2tpv3PolicyReconnectInterval = _WingCfgl2tpv3PolicyReconnectInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 11),
    _WingCfgl2tpv3PolicyReconnectInterval_Type()
)
wingCfgl2tpv3PolicyReconnectInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyReconnectInterval.setStatus("current")


class _WingCfgl2tpv3PolicyReconnectAttempts_Type(Unsigned32):
    """Custom type wingCfgl2tpv3PolicyReconnectAttempts based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 250),
    )


_WingCfgl2tpv3PolicyReconnectAttempts_Type.__name__ = "Unsigned32"
_WingCfgl2tpv3PolicyReconnectAttempts_Object = MibTableColumn
wingCfgl2tpv3PolicyReconnectAttempts = _WingCfgl2tpv3PolicyReconnectAttempts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 32, 1, 1, 12),
    _WingCfgl2tpv3PolicyReconnectAttempts_Type()
)
wingCfgl2tpv3PolicyReconnectAttempts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgl2tpv3PolicyReconnectAttempts.setStatus("current")
_WingCfgLegacyAp_ObjectIdentity = ObjectIdentity
wingCfgLegacyAp = _WingCfgLegacyAp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33)
)
_WingCfgLegacyApTable_Object = MibTable
wingCfgLegacyApTable = _WingCfgLegacyApTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1)
)
if mibBuilder.loadTexts:
    wingCfgLegacyApTable.setStatus("current")
_WingCfgLegacyApEntry_Object = MibTableRow
wingCfgLegacyApEntry = _WingCfgLegacyApEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1)
)
wingCfgLegacyApEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgLegacyApIndex"),
)
if mibBuilder.loadTexts:
    wingCfgLegacyApEntry.setStatus("current")
_WingCfgLegacyApIndex_Type = WingIdentifier
_WingCfgLegacyApIndex_Object = MibTableColumn
wingCfgLegacyApIndex = _WingCfgLegacyApIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1, 1),
    _WingCfgLegacyApIndex_Type()
)
wingCfgLegacyApIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgLegacyApIndex.setStatus("current")
_WingCfgLegacyApCountryCode_Type = DisplayString
_WingCfgLegacyApCountryCode_Object = MibTableColumn
wingCfgLegacyApCountryCode = _WingCfgLegacyApCountryCode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1, 3),
    _WingCfgLegacyApCountryCode_Type()
)
wingCfgLegacyApCountryCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApCountryCode.setStatus("current")


class _WingCfgLegacyApLed_Type(TruthValue):
    """Custom type wingCfgLegacyApLed based on TruthValue"""
    defaultValue = 1


_WingCfgLegacyApLed_Type.__name__ = "TruthValue"
_WingCfgLegacyApLed_Object = MibTableColumn
wingCfgLegacyApLed = _WingCfgLegacyApLed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1, 4),
    _WingCfgLegacyApLed_Type()
)
wingCfgLegacyApLed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApLed.setStatus("current")


class _WingCfgLegacyApLocation_Type(DisplayString):
    """Custom type wingCfgLegacyApLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgLegacyApLocation_Type.__name__ = "DisplayString"
_WingCfgLegacyApLocation_Object = MibTableColumn
wingCfgLegacyApLocation = _WingCfgLegacyApLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1, 5),
    _WingCfgLegacyApLocation_Type()
)
wingCfgLegacyApLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApLocation.setStatus("current")
_WingCfgLegacyApIpAddr_Type = DisplayString
_WingCfgLegacyApIpAddr_Object = MibTableColumn
wingCfgLegacyApIpAddr = _WingCfgLegacyApIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1, 6),
    _WingCfgLegacyApIpAddr_Type()
)
wingCfgLegacyApIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIpAddr.setStatus("current")
_WingCfgLegacyApGateway_Type = DisplayString
_WingCfgLegacyApGateway_Object = MibTableColumn
wingCfgLegacyApGateway = _WingCfgLegacyApGateway_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1, 7),
    _WingCfgLegacyApGateway_Type()
)
wingCfgLegacyApGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApGateway.setStatus("current")


class _WingCfgLegacyApPreferredControllerGroup_Type(DisplayString):
    """Custom type wingCfgLegacyApPreferredControllerGroup based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgLegacyApPreferredControllerGroup_Type.__name__ = "DisplayString"
_WingCfgLegacyApPreferredControllerGroup_Object = MibTableColumn
wingCfgLegacyApPreferredControllerGroup = _WingCfgLegacyApPreferredControllerGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 1, 1, 8),
    _WingCfgLegacyApPreferredControllerGroup_Type()
)
wingCfgLegacyApPreferredControllerGroup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApPreferredControllerGroup.setStatus("current")
_WingCfgLegacyApIfTable_Object = MibTable
wingCfgLegacyApIfTable = _WingCfgLegacyApIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2)
)
if mibBuilder.loadTexts:
    wingCfgLegacyApIfTable.setStatus("current")
_WingCfgLegacyApIfEntry_Object = MibTableRow
wingCfgLegacyApIfEntry = _WingCfgLegacyApIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1)
)
wingCfgLegacyApIfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgLegacyApIndex"),
    (0, "WING-MIB", "wingCfgLegacyApIfName"),
)
if mibBuilder.loadTexts:
    wingCfgLegacyApIfEntry.setStatus("current")
_WingCfgLegacyApIfName_Type = WingIdentifier
_WingCfgLegacyApIfName_Object = MibTableColumn
wingCfgLegacyApIfName = _WingCfgLegacyApIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 1),
    _WingCfgLegacyApIfName_Type()
)
wingCfgLegacyApIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfName.setStatus("current")


class _WingCfgLegacyApIfDescr_Type(DisplayString):
    """Custom type wingCfgLegacyApIfDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingCfgLegacyApIfDescr_Type.__name__ = "DisplayString"
_WingCfgLegacyApIfDescr_Object = MibTableColumn
wingCfgLegacyApIfDescr = _WingCfgLegacyApIfDescr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 3),
    _WingCfgLegacyApIfDescr_Type()
)
wingCfgLegacyApIfDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfDescr.setStatus("current")


class _WingCfgLegacyApIfShutdown_Type(TruthValue):
    """Custom type wingCfgLegacyApIfShutdown based on TruthValue"""
    defaultValue = 2


_WingCfgLegacyApIfShutdown_Type.__name__ = "TruthValue"
_WingCfgLegacyApIfShutdown_Object = MibTableColumn
wingCfgLegacyApIfShutdown = _WingCfgLegacyApIfShutdown_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 4),
    _WingCfgLegacyApIfShutdown_Type()
)
wingCfgLegacyApIfShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfShutdown.setStatus("current")
_WingCfgLegacyApIfRfMode_Type = DisplayString
_WingCfgLegacyApIfRfMode_Object = MibTableColumn
wingCfgLegacyApIfRfMode = _WingCfgLegacyApIfRfMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 5),
    _WingCfgLegacyApIfRfMode_Type()
)
wingCfgLegacyApIfRfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfRfMode.setStatus("current")


class _WingCfgLegacyApIfAntennaDiversity_Type(TruthValue):
    """Custom type wingCfgLegacyApIfAntennaDiversity based on TruthValue"""
    defaultValue = 2


_WingCfgLegacyApIfAntennaDiversity_Type.__name__ = "TruthValue"
_WingCfgLegacyApIfAntennaDiversity_Object = MibTableColumn
wingCfgLegacyApIfAntennaDiversity = _WingCfgLegacyApIfAntennaDiversity_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 6),
    _WingCfgLegacyApIfAntennaDiversity_Type()
)
wingCfgLegacyApIfAntennaDiversity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfAntennaDiversity.setStatus("current")


class _WingCfgLegacyApIfBeaconInterval_Type(DisplayString):
    """Custom type wingCfgLegacyApIfBeaconInterval based on DisplayString"""
    defaultValue = OctetString("100")


_WingCfgLegacyApIfBeaconInterval_Type.__name__ = "DisplayString"
_WingCfgLegacyApIfBeaconInterval_Object = MibTableColumn
wingCfgLegacyApIfBeaconInterval = _WingCfgLegacyApIfBeaconInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 7),
    _WingCfgLegacyApIfBeaconInterval_Type()
)
wingCfgLegacyApIfBeaconInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfBeaconInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfBeaconInterval.setUnits("milliseconds")


class _WingCfgLegacyApIfChannel_Type(DisplayString):
    """Custom type wingCfgLegacyApIfChannel based on DisplayString"""
    defaultValue = OctetString("smart")


_WingCfgLegacyApIfChannel_Type.__name__ = "DisplayString"
_WingCfgLegacyApIfChannel_Object = MibTableColumn
wingCfgLegacyApIfChannel = _WingCfgLegacyApIfChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 8),
    _WingCfgLegacyApIfChannel_Type()
)
wingCfgLegacyApIfChannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfChannel.setStatus("current")


class _WingCfgLegacyApIfMaxClients_Type(Unsigned32):
    """Custom type wingCfgLegacyApIfMaxClients based on Unsigned32"""
    defaultValue = 256

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_WingCfgLegacyApIfMaxClients_Type.__name__ = "Unsigned32"
_WingCfgLegacyApIfMaxClients_Object = MibTableColumn
wingCfgLegacyApIfMaxClients = _WingCfgLegacyApIfMaxClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 9),
    _WingCfgLegacyApIfMaxClients_Type()
)
wingCfgLegacyApIfMaxClients.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfMaxClients.setStatus("current")


class _WingCfgLegacyApIfPlacement_Type(DisplayString):
    """Custom type wingCfgLegacyApIfPlacement based on DisplayString"""
    defaultValue = OctetString("indoor")


_WingCfgLegacyApIfPlacement_Type.__name__ = "DisplayString"
_WingCfgLegacyApIfPlacement_Object = MibTableColumn
wingCfgLegacyApIfPlacement = _WingCfgLegacyApIfPlacement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 10),
    _WingCfgLegacyApIfPlacement_Type()
)
wingCfgLegacyApIfPlacement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfPlacement.setStatus("current")


class _WingCfgLegacyApIfPower_Type(Unsigned32):
    """Custom type wingCfgLegacyApIfPower based on Unsigned32"""
    defaultValue = 20

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20),
    )


_WingCfgLegacyApIfPower_Type.__name__ = "Unsigned32"
_WingCfgLegacyApIfPower_Object = MibTableColumn
wingCfgLegacyApIfPower = _WingCfgLegacyApIfPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 11),
    _WingCfgLegacyApIfPower_Type()
)
wingCfgLegacyApIfPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfPower.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfPower.setUnits("dBm")


class _WingCfgLegacyApIfPreambleShort_Type(TruthValue):
    """Custom type wingCfgLegacyApIfPreambleShort based on TruthValue"""
    defaultValue = 2


_WingCfgLegacyApIfPreambleShort_Type.__name__ = "TruthValue"
_WingCfgLegacyApIfPreambleShort_Object = MibTableColumn
wingCfgLegacyApIfPreambleShort = _WingCfgLegacyApIfPreambleShort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 12),
    _WingCfgLegacyApIfPreambleShort_Type()
)
wingCfgLegacyApIfPreambleShort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfPreambleShort.setStatus("current")


class _WingCfgLegacyApIfOnChannelScan_Type(TruthValue):
    """Custom type wingCfgLegacyApIfOnChannelScan based on TruthValue"""
    defaultValue = 2


_WingCfgLegacyApIfOnChannelScan_Type.__name__ = "TruthValue"
_WingCfgLegacyApIfOnChannelScan_Object = MibTableColumn
wingCfgLegacyApIfOnChannelScan = _WingCfgLegacyApIfOnChannelScan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 13),
    _WingCfgLegacyApIfOnChannelScan_Type()
)
wingCfgLegacyApIfOnChannelScan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfOnChannelScan.setStatus("current")


class _WingCfgLegacyApIfRtsThreshold_Type(Unsigned32):
    """Custom type wingCfgLegacyApIfRtsThreshold based on Unsigned32"""
    defaultValue = 2347

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2347),
    )


_WingCfgLegacyApIfRtsThreshold_Type.__name__ = "Unsigned32"
_WingCfgLegacyApIfRtsThreshold_Object = MibTableColumn
wingCfgLegacyApIfRtsThreshold = _WingCfgLegacyApIfRtsThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 14),
    _WingCfgLegacyApIfRtsThreshold_Type()
)
wingCfgLegacyApIfRtsThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfRtsThreshold.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfRtsThreshold.setUnits("bytes")
_WingCfgLegacyApIfQosPolicy_Type = WingIdentifier
_WingCfgLegacyApIfQosPolicy_Object = MibTableColumn
wingCfgLegacyApIfQosPolicy = _WingCfgLegacyApIfQosPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 15),
    _WingCfgLegacyApIfQosPolicy_Type()
)
wingCfgLegacyApIfQosPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfQosPolicy.setStatus("current")


class _WingCfgLegacyApIfWirelessClientPower_Type(Unsigned32):
    """Custom type wingCfgLegacyApIfWirelessClientPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_WingCfgLegacyApIfWirelessClientPower_Type.__name__ = "Unsigned32"
_WingCfgLegacyApIfWirelessClientPower_Object = MibTableColumn
wingCfgLegacyApIfWirelessClientPower = _WingCfgLegacyApIfWirelessClientPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 2, 1, 16),
    _WingCfgLegacyApIfWirelessClientPower_Type()
)
wingCfgLegacyApIfWirelessClientPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfWirelessClientPower.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfWirelessClientPower.setUnits("dBm")
_WingCfgLegacyApIfWlanBssMapTable_Object = MibTable
wingCfgLegacyApIfWlanBssMapTable = _WingCfgLegacyApIfWlanBssMapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 3)
)
if mibBuilder.loadTexts:
    wingCfgLegacyApIfWlanBssMapTable.setStatus("current")
_WingCfgLegacyApIfWlanBssMapEntry_Object = MibTableRow
wingCfgLegacyApIfWlanBssMapEntry = _WingCfgLegacyApIfWlanBssMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 3, 1)
)
wingCfgLegacyApIfWlanBssMapEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgLegacyApIndex"),
    (0, "WING-MIB", "wingCfgLegacyApIfName"),
    (0, "WING-MIB", "wingCfgLegacyApIfWlanBssMapWlan"),
)
if mibBuilder.loadTexts:
    wingCfgLegacyApIfWlanBssMapEntry.setStatus("current")
_WingCfgLegacyApIfWlanBssMapWlan_Type = WingIdentifier
_WingCfgLegacyApIfWlanBssMapWlan_Object = MibTableColumn
wingCfgLegacyApIfWlanBssMapWlan = _WingCfgLegacyApIfWlanBssMapWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 3, 1, 1),
    _WingCfgLegacyApIfWlanBssMapWlan_Type()
)
wingCfgLegacyApIfWlanBssMapWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfWlanBssMapWlan.setStatus("current")


class _WingCfgLegacyApIfWlanBssMapBss_Type(Unsigned32):
    """Custom type wingCfgLegacyApIfWlanBssMapBss based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_WingCfgLegacyApIfWlanBssMapBss_Type.__name__ = "Unsigned32"
_WingCfgLegacyApIfWlanBssMapBss_Object = MibTableColumn
wingCfgLegacyApIfWlanBssMapBss = _WingCfgLegacyApIfWlanBssMapBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 3, 1, 3),
    _WingCfgLegacyApIfWlanBssMapBss_Type()
)
wingCfgLegacyApIfWlanBssMapBss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfWlanBssMapBss.setStatus("current")
_WingCfgLegacyApIfWlanBssMapPrimary_Type = TruthValue
_WingCfgLegacyApIfWlanBssMapPrimary_Object = MibTableColumn
wingCfgLegacyApIfWlanBssMapPrimary = _WingCfgLegacyApIfWlanBssMapPrimary_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 33, 3, 1, 4),
    _WingCfgLegacyApIfWlanBssMapPrimary_Type()
)
wingCfgLegacyApIfWlanBssMapPrimary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgLegacyApIfWlanBssMapPrimary.setStatus("current")
_WingCfgAlt_ObjectIdentity = ObjectIdentity
wingCfgAlt = _WingCfgAlt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34)
)
_WingCfgAltDevTable_Object = MibTable
wingCfgAltDevTable = _WingCfgAltDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1)
)
if mibBuilder.loadTexts:
    wingCfgAltDevTable.setStatus("current")
_WingCfgAltDevEntry_Object = MibTableRow
wingCfgAltDevEntry = _WingCfgAltDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1)
)
wingCfgAltDevEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAltDevMac"),
)
if mibBuilder.loadTexts:
    wingCfgAltDevEntry.setStatus("current")
_WingCfgAltDevMac_Type = MacAddress
_WingCfgAltDevMac_Object = MibTableColumn
wingCfgAltDevMac = _WingCfgAltDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 1),
    _WingCfgAltDevMac_Type()
)
wingCfgAltDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevMac.setStatus("current")


class _WingCfgAltDevHostname_Type(DisplayString):
    """Custom type wingCfgAltDevHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgAltDevHostname_Type.__name__ = "DisplayString"
_WingCfgAltDevHostname_Object = MibTableColumn
wingCfgAltDevHostname = _WingCfgAltDevHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 3),
    _WingCfgAltDevHostname_Type()
)
wingCfgAltDevHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevHostname.setStatus("current")


class _WingCfgAltDevBuilding_Type(DisplayString):
    """Custom type wingCfgAltDevBuilding based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingCfgAltDevBuilding_Type.__name__ = "DisplayString"
_WingCfgAltDevBuilding_Object = MibTableColumn
wingCfgAltDevBuilding = _WingCfgAltDevBuilding_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 4),
    _WingCfgAltDevBuilding_Type()
)
wingCfgAltDevBuilding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevBuilding.setStatus("current")


class _WingCfgAltDevFloor_Type(DisplayString):
    """Custom type wingCfgAltDevFloor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingCfgAltDevFloor_Type.__name__ = "DisplayString"
_WingCfgAltDevFloor_Object = MibTableColumn
wingCfgAltDevFloor = _WingCfgAltDevFloor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 5),
    _WingCfgAltDevFloor_Type()
)
wingCfgAltDevFloor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevFloor.setStatus("current")


class _WingCfgAltDevNumRadios_Type(Unsigned32):
    """Custom type wingCfgAltDevNumRadios based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_WingCfgAltDevNumRadios_Type.__name__ = "Unsigned32"
_WingCfgAltDevNumRadios_Object = MibTableColumn
wingCfgAltDevNumRadios = _WingCfgAltDevNumRadios_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 6),
    _WingCfgAltDevNumRadios_Type()
)
wingCfgAltDevNumRadios.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevNumRadios.setStatus("current")
_WingCfgAltDevProfileName_Type = WingIdentifier
_WingCfgAltDevProfileName_Object = MibTableColumn
wingCfgAltDevProfileName = _WingCfgAltDevProfileName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 7),
    _WingCfgAltDevProfileName_Type()
)
wingCfgAltDevProfileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevProfileName.setStatus("current")
_WingCfgAltDevRfDomainName_Type = WingIdentifier
_WingCfgAltDevRfDomainName_Object = MibTableColumn
wingCfgAltDevRfDomainName = _WingCfgAltDevRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 8),
    _WingCfgAltDevRfDomainName_Type()
)
wingCfgAltDevRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevRfDomainName.setStatus("current")


class _WingCfgAltDevHttpsTrustpoint_Type(DisplayString):
    """Custom type wingCfgAltDevHttpsTrustpoint based on DisplayString"""
    defaultValue = OctetString("default-trustpoint")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgAltDevHttpsTrustpoint_Type.__name__ = "DisplayString"
_WingCfgAltDevHttpsTrustpoint_Object = MibTableColumn
wingCfgAltDevHttpsTrustpoint = _WingCfgAltDevHttpsTrustpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 9),
    _WingCfgAltDevHttpsTrustpoint_Type()
)
wingCfgAltDevHttpsTrustpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevHttpsTrustpoint.setStatus("current")


class _WingCfgAltDevRadiusCaTrustpoint_Type(DisplayString):
    """Custom type wingCfgAltDevRadiusCaTrustpoint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgAltDevRadiusCaTrustpoint_Type.__name__ = "DisplayString"
_WingCfgAltDevRadiusCaTrustpoint_Object = MibTableColumn
wingCfgAltDevRadiusCaTrustpoint = _WingCfgAltDevRadiusCaTrustpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 10),
    _WingCfgAltDevRadiusCaTrustpoint_Type()
)
wingCfgAltDevRadiusCaTrustpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevRadiusCaTrustpoint.setStatus("current")


class _WingCfgAltDevRadiusServerTrustpoint_Type(DisplayString):
    """Custom type wingCfgAltDevRadiusServerTrustpoint based on DisplayString"""
    defaultValue = OctetString("default-trustpoint")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_WingCfgAltDevRadiusServerTrustpoint_Type.__name__ = "DisplayString"
_WingCfgAltDevRadiusServerTrustpoint_Object = MibTableColumn
wingCfgAltDevRadiusServerTrustpoint = _WingCfgAltDevRadiusServerTrustpoint_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 11),
    _WingCfgAltDevRadiusServerTrustpoint_Type()
)
wingCfgAltDevRadiusServerTrustpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevRadiusServerTrustpoint.setStatus("current")


class _WingCfgAltDevSshRsaKey_Type(WingIdentifier):
    """Custom type wingCfgAltDevSshRsaKey based on WingIdentifier"""
    defaultValue = OctetString("default_rsa_key")


_WingCfgAltDevSshRsaKey_Type.__name__ = "WingIdentifier"
_WingCfgAltDevSshRsaKey_Object = MibTableColumn
wingCfgAltDevSshRsaKey = _WingCfgAltDevSshRsaKey_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 12),
    _WingCfgAltDevSshRsaKey_Type()
)
wingCfgAltDevSshRsaKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevSshRsaKey.setStatus("current")


class _WingCfgAltDevHasOverrides_Type(TruthValue):
    """Custom type wingCfgAltDevHasOverrides based on TruthValue"""
    defaultValue = 2


_WingCfgAltDevHasOverrides_Type.__name__ = "TruthValue"
_WingCfgAltDevHasOverrides_Object = MibTableColumn
wingCfgAltDevHasOverrides = _WingCfgAltDevHasOverrides_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 1, 1, 13),
    _WingCfgAltDevHasOverrides_Type()
)
wingCfgAltDevHasOverrides.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevHasOverrides.setStatus("current")
_WingCfgAltDevIfTable_Object = MibTable
wingCfgAltDevIfTable = _WingCfgAltDevIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2)
)
if mibBuilder.loadTexts:
    wingCfgAltDevIfTable.setStatus("current")
_WingCfgAltDevIfEntry_Object = MibTableRow
wingCfgAltDevIfEntry = _WingCfgAltDevIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2, 1)
)
wingCfgAltDevIfEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAltDevMac"),
    (0, "WING-MIB", "wingCfgAltDevIfName"),
)
if mibBuilder.loadTexts:
    wingCfgAltDevIfEntry.setStatus("current")
_WingCfgAltDevIfName_Type = WingIdentifier
_WingCfgAltDevIfName_Object = MibTableColumn
wingCfgAltDevIfName = _WingCfgAltDevIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2, 1, 1),
    _WingCfgAltDevIfName_Type()
)
wingCfgAltDevIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfName.setStatus("current")
_WingCfgAltDevIfDescription_Type = DisplayString
_WingCfgAltDevIfDescription_Object = MibTableColumn
wingCfgAltDevIfDescription = _WingCfgAltDevIfDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2, 1, 3),
    _WingCfgAltDevIfDescription_Type()
)
wingCfgAltDevIfDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfDescription.setStatus("current")
_WingCfgAltDevIfType_Type = DisplayString
_WingCfgAltDevIfType_Object = MibTableColumn
wingCfgAltDevIfType = _WingCfgAltDevIfType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2, 1, 4),
    _WingCfgAltDevIfType_Type()
)
wingCfgAltDevIfType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfType.setStatus("current")


class _WingCfgAltDevIfShutdown_Type(TruthValue):
    """Custom type wingCfgAltDevIfShutdown based on TruthValue"""
    defaultValue = 2


_WingCfgAltDevIfShutdown_Type.__name__ = "TruthValue"
_WingCfgAltDevIfShutdown_Object = MibTableColumn
wingCfgAltDevIfShutdown = _WingCfgAltDevIfShutdown_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2, 1, 5),
    _WingCfgAltDevIfShutdown_Type()
)
wingCfgAltDevIfShutdown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfShutdown.setStatus("current")
_WingCfgAltDevIfIpInAcl_Type = WingIdentifier
_WingCfgAltDevIfIpInAcl_Object = MibTableColumn
wingCfgAltDevIfIpInAcl = _WingCfgAltDevIfIpInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2, 1, 6),
    _WingCfgAltDevIfIpInAcl_Type()
)
wingCfgAltDevIfIpInAcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfIpInAcl.setStatus("current")
_WingCfgAltDevIfMacInAcl_Type = WingIdentifier
_WingCfgAltDevIfMacInAcl_Object = MibTableColumn
wingCfgAltDevIfMacInAcl = _WingCfgAltDevIfMacInAcl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 2, 1, 7),
    _WingCfgAltDevIfMacInAcl_Type()
)
wingCfgAltDevIfMacInAcl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfMacInAcl.setStatus("current")
_WingCfgAltDevIfRadioBssmapTable_Object = MibTable
wingCfgAltDevIfRadioBssmapTable = _WingCfgAltDevIfRadioBssmapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 3)
)
if mibBuilder.loadTexts:
    wingCfgAltDevIfRadioBssmapTable.setStatus("current")
_WingCfgAltDevIfRadioBssmapEntry_Object = MibTableRow
wingCfgAltDevIfRadioBssmapEntry = _WingCfgAltDevIfRadioBssmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 3, 1)
)
wingCfgAltDevIfRadioBssmapEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgAltDevMac"),
    (0, "WING-MIB", "wingCfgAltDevIfName"),
    (0, "WING-MIB", "wingCfgAltDevIfRadioBssmapWlan"),
)
if mibBuilder.loadTexts:
    wingCfgAltDevIfRadioBssmapEntry.setStatus("current")
_WingCfgAltDevIfRadioBssmapWlan_Type = WingIdentifier
_WingCfgAltDevIfRadioBssmapWlan_Object = MibTableColumn
wingCfgAltDevIfRadioBssmapWlan = _WingCfgAltDevIfRadioBssmapWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 3, 1, 1),
    _WingCfgAltDevIfRadioBssmapWlan_Type()
)
wingCfgAltDevIfRadioBssmapWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfRadioBssmapWlan.setStatus("current")


class _WingCfgAltDevIfRadioBssmapBss_Type(Unsigned32):
    """Custom type wingCfgAltDevIfRadioBssmapBss based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_WingCfgAltDevIfRadioBssmapBss_Type.__name__ = "Unsigned32"
_WingCfgAltDevIfRadioBssmapBss_Object = MibTableColumn
wingCfgAltDevIfRadioBssmapBss = _WingCfgAltDevIfRadioBssmapBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 3, 1, 3),
    _WingCfgAltDevIfRadioBssmapBss_Type()
)
wingCfgAltDevIfRadioBssmapBss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfRadioBssmapBss.setStatus("current")
_WingCfgAltDevIfRadioBssmapPrimary_Type = TruthValue
_WingCfgAltDevIfRadioBssmapPrimary_Object = MibTableColumn
wingCfgAltDevIfRadioBssmapPrimary = _WingCfgAltDevIfRadioBssmapPrimary_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 34, 3, 1, 4),
    _WingCfgAltDevIfRadioBssmapPrimary_Type()
)
wingCfgAltDevIfRadioBssmapPrimary.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingCfgAltDevIfRadioBssmapPrimary.setStatus("current")
_WingCfgMcx_ObjectIdentity = ObjectIdentity
wingCfgMcx = _WingCfgMcx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35)
)
_WingCfgMcxMeshpointTable_Object = MibTable
wingCfgMcxMeshpointTable = _WingCfgMcxMeshpointTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1)
)
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointTable.setStatus("current")
_WingCfgMcxMeshpointEntry_Object = MibTableRow
wingCfgMcxMeshpointEntry = _WingCfgMcxMeshpointEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1)
)
wingCfgMcxMeshpointEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMcxMeshpointName"),
)
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointEntry.setStatus("current")
_WingCfgMcxMeshpointName_Type = WingIdentifier
_WingCfgMcxMeshpointName_Object = MibTableColumn
wingCfgMcxMeshpointName = _WingCfgMcxMeshpointName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 1),
    _WingCfgMcxMeshpointName_Type()
)
wingCfgMcxMeshpointName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointName.setStatus("current")


class _WingCfgMcxMeshpointShutdown_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointShutdown based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointShutdown_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointShutdown_Object = MibTableColumn
wingCfgMcxMeshpointShutdown = _WingCfgMcxMeshpointShutdown_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 3),
    _WingCfgMcxMeshpointShutdown_Type()
)
wingCfgMcxMeshpointShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointShutdown.setStatus("current")


class _WingCfgMcxMeshpointMeshid_Type(DisplayString):
    """Custom type wingCfgMcxMeshpointMeshid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingCfgMcxMeshpointMeshid_Type.__name__ = "DisplayString"
_WingCfgMcxMeshpointMeshid_Object = MibTableColumn
wingCfgMcxMeshpointMeshid = _WingCfgMcxMeshpointMeshid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 4),
    _WingCfgMcxMeshpointMeshid_Type()
)
wingCfgMcxMeshpointMeshid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointMeshid.setStatus("current")


class _WingCfgMcxMeshpointDescription_Type(DisplayString):
    """Custom type wingCfgMcxMeshpointDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_WingCfgMcxMeshpointDescription_Type.__name__ = "DisplayString"
_WingCfgMcxMeshpointDescription_Object = MibTableColumn
wingCfgMcxMeshpointDescription = _WingCfgMcxMeshpointDescription_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 5),
    _WingCfgMcxMeshpointDescription_Type()
)
wingCfgMcxMeshpointDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointDescription.setStatus("current")


class _WingCfgMcxMeshpointBeaconFormat_Type(DisplayString):
    """Custom type wingCfgMcxMeshpointBeaconFormat based on DisplayString"""
    defaultValue = OctetString("mesh-point")


_WingCfgMcxMeshpointBeaconFormat_Type.__name__ = "DisplayString"
_WingCfgMcxMeshpointBeaconFormat_Object = MibTableColumn
wingCfgMcxMeshpointBeaconFormat = _WingCfgMcxMeshpointBeaconFormat_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 6),
    _WingCfgMcxMeshpointBeaconFormat_Type()
)
wingCfgMcxMeshpointBeaconFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointBeaconFormat.setStatus("current")


class _WingCfgMcxMeshpointControlVlan_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointControlVlan based on Unsigned32"""
    defaultValue = 1

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4094),
    )


_WingCfgMcxMeshpointControlVlan_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointControlVlan_Object = MibTableColumn
wingCfgMcxMeshpointControlVlan = _WingCfgMcxMeshpointControlVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 7),
    _WingCfgMcxMeshpointControlVlan_Type()
)
wingCfgMcxMeshpointControlVlan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointControlVlan.setStatus("current")


class _WingCfgMcxMeshpointNeighborInactivityTimeout_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointNeighborInactivityTimeout based on Unsigned32"""
    defaultValue = 120

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 86400),
    )


_WingCfgMcxMeshpointNeighborInactivityTimeout_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointNeighborInactivityTimeout_Object = MibTableColumn
wingCfgMcxMeshpointNeighborInactivityTimeout = _WingCfgMcxMeshpointNeighborInactivityTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 8),
    _WingCfgMcxMeshpointNeighborInactivityTimeout_Type()
)
wingCfgMcxMeshpointNeighborInactivityTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointNeighborInactivityTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointNeighborInactivityTimeout.setUnits("seconds")
_WingCfgMcxMeshpointQosPolicy_Type = WingIdentifier
_WingCfgMcxMeshpointQosPolicy_Object = MibTableColumn
wingCfgMcxMeshpointQosPolicy = _WingCfgMcxMeshpointQosPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 9),
    _WingCfgMcxMeshpointQosPolicy_Type()
)
wingCfgMcxMeshpointQosPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosPolicy.setStatus("current")


class _WingCfgMcxMeshpointSecurityMode_Type(DisplayString):
    """Custom type wingCfgMcxMeshpointSecurityMode based on DisplayString"""
    defaultValue = OctetString("none")


_WingCfgMcxMeshpointSecurityMode_Type.__name__ = "DisplayString"
_WingCfgMcxMeshpointSecurityMode_Object = MibTableColumn
wingCfgMcxMeshpointSecurityMode = _WingCfgMcxMeshpointSecurityMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 10),
    _WingCfgMcxMeshpointSecurityMode_Type()
)
wingCfgMcxMeshpointSecurityMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointSecurityMode.setStatus("current")


class _WingCfgMcxMeshpointWpa2Psk_Type(DisplayString):
    """Custom type wingCfgMcxMeshpointWpa2Psk based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 64),
    )


_WingCfgMcxMeshpointWpa2Psk_Type.__name__ = "DisplayString"
_WingCfgMcxMeshpointWpa2Psk_Object = MibTableColumn
wingCfgMcxMeshpointWpa2Psk = _WingCfgMcxMeshpointWpa2Psk_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 11),
    _WingCfgMcxMeshpointWpa2Psk_Type()
)
wingCfgMcxMeshpointWpa2Psk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointWpa2Psk.setStatus("current")


class _WingCfgMcxMeshpointWpa2KeyRotationUnicast_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointWpa2KeyRotationUnicast based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 86400),
    )


_WingCfgMcxMeshpointWpa2KeyRotationUnicast_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointWpa2KeyRotationUnicast_Object = MibTableColumn
wingCfgMcxMeshpointWpa2KeyRotationUnicast = _WingCfgMcxMeshpointWpa2KeyRotationUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 12),
    _WingCfgMcxMeshpointWpa2KeyRotationUnicast_Type()
)
wingCfgMcxMeshpointWpa2KeyRotationUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointWpa2KeyRotationUnicast.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointWpa2KeyRotationUnicast.setUnits("seconds")


class _WingCfgMcxMeshpointWpa2KeyRotationBroadcast_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointWpa2KeyRotationBroadcast based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 86400),
    )


_WingCfgMcxMeshpointWpa2KeyRotationBroadcast_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointWpa2KeyRotationBroadcast_Object = MibTableColumn
wingCfgMcxMeshpointWpa2KeyRotationBroadcast = _WingCfgMcxMeshpointWpa2KeyRotationBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 13),
    _WingCfgMcxMeshpointWpa2KeyRotationBroadcast_Type()
)
wingCfgMcxMeshpointWpa2KeyRotationBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointWpa2KeyRotationBroadcast.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointWpa2KeyRotationBroadcast.setUnits("seconds")


class _WingCfgMcxMeshpointIsRoot_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointIsRoot based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointIsRoot_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointIsRoot_Object = MibTableColumn
wingCfgMcxMeshpointIsRoot = _WingCfgMcxMeshpointIsRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 14),
    _WingCfgMcxMeshpointIsRoot_Type()
)
wingCfgMcxMeshpointIsRoot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointIsRoot.setStatus("current")


class _WingCfgMcxMeshpointMonitorCriticalResources_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointMonitorCriticalResources based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointMonitorCriticalResources_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointMonitorCriticalResources_Object = MibTableColumn
wingCfgMcxMeshpointMonitorCriticalResources = _WingCfgMcxMeshpointMonitorCriticalResources_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 15),
    _WingCfgMcxMeshpointMonitorCriticalResources_Type()
)
wingCfgMcxMeshpointMonitorCriticalResources.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointMonitorCriticalResources.setStatus("current")


class _WingCfgMcxMeshpointMonitorPriPortLink_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointMonitorPriPortLink based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointMonitorPriPortLink_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointMonitorPriPortLink_Object = MibTableColumn
wingCfgMcxMeshpointMonitorPriPortLink = _WingCfgMcxMeshpointMonitorPriPortLink_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 1, 1, 16),
    _WingCfgMcxMeshpointMonitorPriPortLink_Type()
)
wingCfgMcxMeshpointMonitorPriPortLink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointMonitorPriPortLink.setStatus("current")
_WingCfgMcxMeshpointQosTable_Object = MibTable
wingCfgMcxMeshpointQosTable = _WingCfgMcxMeshpointQosTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2)
)
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosTable.setStatus("current")
_WingCfgMcxMeshpointQosEntry_Object = MibTableRow
wingCfgMcxMeshpointQosEntry = _WingCfgMcxMeshpointQosEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1)
)
wingCfgMcxMeshpointQosEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgMcxMeshpointName"),
)
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosEntry.setStatus("current")
_WingCfgMcxMeshpointQosName_Type = WingIdentifier
_WingCfgMcxMeshpointQosName_Object = MibTableColumn
wingCfgMcxMeshpointQosName = _WingCfgMcxMeshpointQosName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 1),
    _WingCfgMcxMeshpointQosName_Type()
)
wingCfgMcxMeshpointQosName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosName.setStatus("current")


class _WingCfgMcxMeshpointQosMeshpointRlDownEnable_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlDownEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointQosMeshpointRlDownEnable_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointQosMeshpointRlDownEnable_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlDownEnable = _WingCfgMcxMeshpointQosMeshpointRlDownEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 3),
    _WingCfgMcxMeshpointQosMeshpointRlDownEnable_Type()
)
wingCfgMcxMeshpointQosMeshpointRlDownEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownEnable.setStatus("current")


class _WingCfgMcxMeshpointQosMeshpointRlDownRate_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlDownRate based on Unsigned32"""
    defaultValue = 5000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgMcxMeshpointQosMeshpointRlDownRate_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlDownRate_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlDownRate = _WingCfgMcxMeshpointQosMeshpointRlDownRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 4),
    _WingCfgMcxMeshpointQosMeshpointRlDownRate_Type()
)
wingCfgMcxMeshpointQosMeshpointRlDownRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownRate.setUnits("kbps")


class _WingCfgMcxMeshpointQosMeshpointRlDownBurstSize_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlDownBurstSize based on Unsigned32"""
    defaultValue = 320

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgMcxMeshpointQosMeshpointRlDownBurstSize_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlDownBurstSize_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlDownBurstSize = _WingCfgMcxMeshpointQosMeshpointRlDownBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 5),
    _WingCfgMcxMeshpointQosMeshpointRlDownBurstSize_Type()
)
wingCfgMcxMeshpointQosMeshpointRlDownBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownBurstSize.setUnits("kbytes")


class _WingCfgMcxMeshpointQosMeshpointRlDownThreshBackground_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlDownThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlDownThreshBackground_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground = _WingCfgMcxMeshpointQosMeshpointRlDownThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 6),
    _WingCfgMcxMeshpointQosMeshpointRlDownThreshBackground_Type()
)
wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground.setUnits("%")


class _WingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort = _WingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 7),
    _WingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort_Type()
)
wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort.setUnits("%")


class _WingCfgMcxMeshpointQosMeshpointRlDownThreshVoice_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlDownThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlDownThreshVoice_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice = _WingCfgMcxMeshpointQosMeshpointRlDownThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 8),
    _WingCfgMcxMeshpointQosMeshpointRlDownThreshVoice_Type()
)
wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice.setUnits("%")


class _WingCfgMcxMeshpointQosMeshpointRlDownThreshVideo_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlDownThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlDownThreshVideo_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo = _WingCfgMcxMeshpointQosMeshpointRlDownThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 9),
    _WingCfgMcxMeshpointQosMeshpointRlDownThreshVideo_Type()
)
wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo.setUnits("%")


class _WingCfgMcxMeshpointQosMeshpointRlUpEnable_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlUpEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointQosMeshpointRlUpEnable_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointQosMeshpointRlUpEnable_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlUpEnable = _WingCfgMcxMeshpointQosMeshpointRlUpEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 10),
    _WingCfgMcxMeshpointQosMeshpointRlUpEnable_Type()
)
wingCfgMcxMeshpointQosMeshpointRlUpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpEnable.setStatus("current")


class _WingCfgMcxMeshpointQosMeshpointRlUpRate_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlUpRate based on Unsigned32"""
    defaultValue = 5000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgMcxMeshpointQosMeshpointRlUpRate_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlUpRate_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlUpRate = _WingCfgMcxMeshpointQosMeshpointRlUpRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 11),
    _WingCfgMcxMeshpointQosMeshpointRlUpRate_Type()
)
wingCfgMcxMeshpointQosMeshpointRlUpRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpRate.setUnits("kbps")


class _WingCfgMcxMeshpointQosMeshpointRlUpBurstSize_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlUpBurstSize based on Unsigned32"""
    defaultValue = 320

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgMcxMeshpointQosMeshpointRlUpBurstSize_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlUpBurstSize_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlUpBurstSize = _WingCfgMcxMeshpointQosMeshpointRlUpBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 12),
    _WingCfgMcxMeshpointQosMeshpointRlUpBurstSize_Type()
)
wingCfgMcxMeshpointQosMeshpointRlUpBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpBurstSize.setUnits("kbytes")


class _WingCfgMcxMeshpointQosMeshpointRlUpThreshBackground_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlUpThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlUpThreshBackground_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground = _WingCfgMcxMeshpointQosMeshpointRlUpThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 13),
    _WingCfgMcxMeshpointQosMeshpointRlUpThreshBackground_Type()
)
wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground.setUnits("%")


class _WingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort = _WingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 14),
    _WingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort_Type()
)
wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort.setUnits("%")


class _WingCfgMcxMeshpointQosMeshpointRlUpThreshVoice_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlUpThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlUpThreshVoice_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice = _WingCfgMcxMeshpointQosMeshpointRlUpThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 15),
    _WingCfgMcxMeshpointQosMeshpointRlUpThreshVoice_Type()
)
wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice.setUnits("%")


class _WingCfgMcxMeshpointQosMeshpointRlUpThreshVideo_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosMeshpointRlUpThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosMeshpointRlUpThreshVideo_Object = MibTableColumn
wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo = _WingCfgMcxMeshpointQosMeshpointRlUpThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 16),
    _WingCfgMcxMeshpointQosMeshpointRlUpThreshVideo_Type()
)
wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlDownEnable_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointQosNeighborRlDownEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointQosNeighborRlDownEnable_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointQosNeighborRlDownEnable_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlDownEnable = _WingCfgMcxMeshpointQosNeighborRlDownEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 17),
    _WingCfgMcxMeshpointQosNeighborRlDownEnable_Type()
)
wingCfgMcxMeshpointQosNeighborRlDownEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownEnable.setStatus("current")


class _WingCfgMcxMeshpointQosNeighborRlDownRate_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlDownRate based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgMcxMeshpointQosNeighborRlDownRate_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlDownRate_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlDownRate = _WingCfgMcxMeshpointQosNeighborRlDownRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 18),
    _WingCfgMcxMeshpointQosNeighborRlDownRate_Type()
)
wingCfgMcxMeshpointQosNeighborRlDownRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownRate.setUnits("kbps")


class _WingCfgMcxMeshpointQosNeighborRlDownBurstSize_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlDownBurstSize based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgMcxMeshpointQosNeighborRlDownBurstSize_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlDownBurstSize_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlDownBurstSize = _WingCfgMcxMeshpointQosNeighborRlDownBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 19),
    _WingCfgMcxMeshpointQosNeighborRlDownBurstSize_Type()
)
wingCfgMcxMeshpointQosNeighborRlDownBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownBurstSize.setUnits("kbytes")


class _WingCfgMcxMeshpointQosNeighborRlDownThreshBackground_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlDownThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlDownThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlDownThreshBackground_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlDownThreshBackground = _WingCfgMcxMeshpointQosNeighborRlDownThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 20),
    _WingCfgMcxMeshpointQosNeighborRlDownThreshBackground_Type()
)
wingCfgMcxMeshpointQosNeighborRlDownThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshBackground.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort = _WingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 21),
    _WingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort_Type()
)
wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlDownThreshVoice_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlDownThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlDownThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlDownThreshVoice_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlDownThreshVoice = _WingCfgMcxMeshpointQosNeighborRlDownThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 22),
    _WingCfgMcxMeshpointQosNeighborRlDownThreshVoice_Type()
)
wingCfgMcxMeshpointQosNeighborRlDownThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshVoice.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlDownThreshVideo_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlDownThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlDownThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlDownThreshVideo_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlDownThreshVideo = _WingCfgMcxMeshpointQosNeighborRlDownThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 23),
    _WingCfgMcxMeshpointQosNeighborRlDownThreshVideo_Type()
)
wingCfgMcxMeshpointQosNeighborRlDownThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlDownThreshVideo.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlUpEnable_Type(TruthValue):
    """Custom type wingCfgMcxMeshpointQosNeighborRlUpEnable based on TruthValue"""
    defaultValue = 2


_WingCfgMcxMeshpointQosNeighborRlUpEnable_Type.__name__ = "TruthValue"
_WingCfgMcxMeshpointQosNeighborRlUpEnable_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlUpEnable = _WingCfgMcxMeshpointQosNeighborRlUpEnable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 24),
    _WingCfgMcxMeshpointQosNeighborRlUpEnable_Type()
)
wingCfgMcxMeshpointQosNeighborRlUpEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpEnable.setStatus("current")


class _WingCfgMcxMeshpointQosNeighborRlUpRate_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlUpRate based on Unsigned32"""
    defaultValue = 1000

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 1000000),
    )


_WingCfgMcxMeshpointQosNeighborRlUpRate_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlUpRate_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlUpRate = _WingCfgMcxMeshpointQosNeighborRlUpRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 25),
    _WingCfgMcxMeshpointQosNeighborRlUpRate_Type()
)
wingCfgMcxMeshpointQosNeighborRlUpRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpRate.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpRate.setUnits("kbps")


class _WingCfgMcxMeshpointQosNeighborRlUpBurstSize_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlUpBurstSize based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1024),
    )


_WingCfgMcxMeshpointQosNeighborRlUpBurstSize_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlUpBurstSize_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlUpBurstSize = _WingCfgMcxMeshpointQosNeighborRlUpBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 26),
    _WingCfgMcxMeshpointQosNeighborRlUpBurstSize_Type()
)
wingCfgMcxMeshpointQosNeighborRlUpBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpBurstSize.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpBurstSize.setUnits("kbytes")


class _WingCfgMcxMeshpointQosNeighborRlUpThreshBackground_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlUpThreshBackground based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlUpThreshBackground_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlUpThreshBackground_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlUpThreshBackground = _WingCfgMcxMeshpointQosNeighborRlUpThreshBackground_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 27),
    _WingCfgMcxMeshpointQosNeighborRlUpThreshBackground_Type()
)
wingCfgMcxMeshpointQosNeighborRlUpThreshBackground.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshBackground.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshBackground.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort based on Unsigned32"""
    defaultValue = 50

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort = _WingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 28),
    _WingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort_Type()
)
wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlUpThreshVoice_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlUpThreshVoice based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlUpThreshVoice_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlUpThreshVoice_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlUpThreshVoice = _WingCfgMcxMeshpointQosNeighborRlUpThreshVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 29),
    _WingCfgMcxMeshpointQosNeighborRlUpThreshVoice_Type()
)
wingCfgMcxMeshpointQosNeighborRlUpThreshVoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshVoice.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshVoice.setUnits("%")


class _WingCfgMcxMeshpointQosNeighborRlUpThreshVideo_Type(Unsigned32):
    """Custom type wingCfgMcxMeshpointQosNeighborRlUpThreshVideo based on Unsigned32"""
    defaultValue = 25

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_WingCfgMcxMeshpointQosNeighborRlUpThreshVideo_Type.__name__ = "Unsigned32"
_WingCfgMcxMeshpointQosNeighborRlUpThreshVideo_Object = MibTableColumn
wingCfgMcxMeshpointQosNeighborRlUpThreshVideo = _WingCfgMcxMeshpointQosNeighborRlUpThreshVideo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 30),
    _WingCfgMcxMeshpointQosNeighborRlUpThreshVideo_Type()
)
wingCfgMcxMeshpointQosNeighborRlUpThreshVideo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshVideo.setStatus("current")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosNeighborRlUpThreshVideo.setUnits("%")
_WingCfgMcxMeshpointQosAddr_Type = DisplayString
_WingCfgMcxMeshpointQosAddr_Object = MibTableColumn
wingCfgMcxMeshpointQosAddr = _WingCfgMcxMeshpointQosAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 31),
    _WingCfgMcxMeshpointQosAddr_Type()
)
wingCfgMcxMeshpointQosAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosAddr.setStatus("current")


class _WingCfgMcxMeshpointQosPriority_Type(DisplayString):
    """Custom type wingCfgMcxMeshpointQosPriority based on DisplayString"""
    defaultValue = OctetString("trust")


_WingCfgMcxMeshpointQosPriority_Type.__name__ = "DisplayString"
_WingCfgMcxMeshpointQosPriority_Object = MibTableColumn
wingCfgMcxMeshpointQosPriority = _WingCfgMcxMeshpointQosPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 3, 35, 2, 1, 32),
    _WingCfgMcxMeshpointQosPriority_Type()
)
wingCfgMcxMeshpointQosPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingCfgMcxMeshpointQosPriority.setStatus("current")
_WingStats_ObjectIdentity = ObjectIdentity
wingStats = _WingStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4)
)
_WingStatsNoc_ObjectIdentity = ObjectIdentity
wingStatsNoc = _WingStatsNoc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1)
)
_WingStatsNocDevTable_Object = MibTable
wingStatsNocDevTable = _WingStatsNocDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2)
)
if mibBuilder.loadTexts:
    wingStatsNocDevTable.setStatus("current")
_WingStatsNocDevEntry_Object = MibTableRow
wingStatsNocDevEntry = _WingStatsNocDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1)
)
wingStatsNocDevEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsNocDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsNocDevEntry.setStatus("current")
_WingStatsNocDevMac_Type = MacAddress
_WingStatsNocDevMac_Object = MibTableColumn
wingStatsNocDevMac = _WingStatsNocDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 1),
    _WingStatsNocDevMac_Type()
)
wingStatsNocDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevMac.setStatus("current")


class _WingStatsNocDevHostname_Type(DisplayString):
    """Custom type wingStatsNocDevHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsNocDevHostname_Type.__name__ = "DisplayString"
_WingStatsNocDevHostname_Object = MibTableColumn
wingStatsNocDevHostname = _WingStatsNocDevHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 2),
    _WingStatsNocDevHostname_Type()
)
wingStatsNocDevHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevHostname.setStatus("current")
_WingStatsNocDevType_Type = DisplayString
_WingStatsNocDevType_Object = MibTableColumn
wingStatsNocDevType = _WingStatsNocDevType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 3),
    _WingStatsNocDevType_Type()
)
wingStatsNocDevType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevType.setStatus("current")


class _WingStatsNocDevClusterName_Type(DisplayString):
    """Custom type wingStatsNocDevClusterName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsNocDevClusterName_Type.__name__ = "DisplayString"
_WingStatsNocDevClusterName_Object = MibTableColumn
wingStatsNocDevClusterName = _WingStatsNocDevClusterName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 4),
    _WingStatsNocDevClusterName_Type()
)
wingStatsNocDevClusterName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevClusterName.setStatus("current")


class _WingStatsNocDevRfDomainName_Type(DisplayString):
    """Custom type wingStatsNocDevRfDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsNocDevRfDomainName_Type.__name__ = "DisplayString"
_WingStatsNocDevRfDomainName_Object = MibTableColumn
wingStatsNocDevRfDomainName = _WingStatsNocDevRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 5),
    _WingStatsNocDevRfDomainName_Type()
)
wingStatsNocDevRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevRfDomainName.setStatus("current")


class _WingStatsNocDevAdoptedBy_Type(DisplayString):
    """Custom type wingStatsNocDevAdoptedBy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsNocDevAdoptedBy_Type.__name__ = "DisplayString"
_WingStatsNocDevAdoptedBy_Object = MibTableColumn
wingStatsNocDevAdoptedBy = _WingStatsNocDevAdoptedBy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 6),
    _WingStatsNocDevAdoptedBy_Type()
)
wingStatsNocDevAdoptedBy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevAdoptedBy.setStatus("current")
_WingStatsNocDevOnline_Type = TruthValue
_WingStatsNocDevOnline_Object = MibTableColumn
wingStatsNocDevOnline = _WingStatsNocDevOnline_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 7),
    _WingStatsNocDevOnline_Type()
)
wingStatsNocDevOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevOnline.setStatus("current")
_WingStatsNocDevReporter_Type = MacAddress
_WingStatsNocDevReporter_Object = MibTableColumn
wingStatsNocDevReporter = _WingStatsNocDevReporter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 8),
    _WingStatsNocDevReporter_Type()
)
wingStatsNocDevReporter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevReporter.setStatus("current")
_WingStatsNocDevLastUpdate_Type = Unsigned32
_WingStatsNocDevLastUpdate_Object = MibTableColumn
wingStatsNocDevLastUpdate = _WingStatsNocDevLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 9),
    _WingStatsNocDevLastUpdate_Type()
)
wingStatsNocDevLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevLastUpdate.setStatus("current")
_WingStatsNocDevHasRadio_Type = TruthValue
_WingStatsNocDevHasRadio_Object = MibTableColumn
wingStatsNocDevHasRadio = _WingStatsNocDevHasRadio_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 10),
    _WingStatsNocDevHasRadio_Type()
)
wingStatsNocDevHasRadio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevHasRadio.setStatus("current")
_WingStatsNocDevIsController_Type = TruthValue
_WingStatsNocDevIsController_Object = MibTableColumn
wingStatsNocDevIsController = _WingStatsNocDevIsController_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 11),
    _WingStatsNocDevIsController_Type()
)
wingStatsNocDevIsController.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevIsController.setStatus("current")


class _WingStatsNocDevProfileName_Type(DisplayString):
    """Custom type wingStatsNocDevProfileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsNocDevProfileName_Type.__name__ = "DisplayString"
_WingStatsNocDevProfileName_Object = MibTableColumn
wingStatsNocDevProfileName = _WingStatsNocDevProfileName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 2, 1, 12),
    _WingStatsNocDevProfileName_Type()
)
wingStatsNocDevProfileName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocDevProfileName.setStatus("current")
_WingStatsNocAdopt_ObjectIdentity = ObjectIdentity
wingStatsNocAdopt = _WingStatsNocAdopt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9)
)
_WingStatsNocAdoptDevTable_Object = MibTable
wingStatsNocAdoptDevTable = _WingStatsNocAdoptDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1)
)
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevTable.setStatus("current")
_WingStatsNocAdoptDevEntry_Object = MibTableRow
wingStatsNocAdoptDevEntry = _WingStatsNocAdoptDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1)
)
wingStatsNocAdoptDevEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsNocAdoptDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevEntry.setStatus("current")
_WingStatsNocAdoptDevMac_Type = MacAddress
_WingStatsNocAdoptDevMac_Object = MibTableColumn
wingStatsNocAdoptDevMac = _WingStatsNocAdoptDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 1),
    _WingStatsNocAdoptDevMac_Type()
)
wingStatsNocAdoptDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevMac.setStatus("current")
_WingStatsNocAdoptDevType_Type = DisplayString
_WingStatsNocAdoptDevType_Object = MibTableColumn
wingStatsNocAdoptDevType = _WingStatsNocAdoptDevType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 2),
    _WingStatsNocAdoptDevType_Type()
)
wingStatsNocAdoptDevType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevType.setStatus("current")
_WingStatsNocAdoptDevHostname_Type = DisplayString
_WingStatsNocAdoptDevHostname_Object = MibTableColumn
wingStatsNocAdoptDevHostname = _WingStatsNocAdoptDevHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 3),
    _WingStatsNocAdoptDevHostname_Type()
)
wingStatsNocAdoptDevHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevHostname.setStatus("current")
_WingStatsNocAdoptDevVersion_Type = DisplayString
_WingStatsNocAdoptDevVersion_Object = MibTableColumn
wingStatsNocAdoptDevVersion = _WingStatsNocAdoptDevVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 4),
    _WingStatsNocAdoptDevVersion_Type()
)
wingStatsNocAdoptDevVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevVersion.setStatus("current")
_WingStatsNocAdoptDevSerialNo_Type = DisplayString
_WingStatsNocAdoptDevSerialNo_Object = MibTableColumn
wingStatsNocAdoptDevSerialNo = _WingStatsNocAdoptDevSerialNo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 5),
    _WingStatsNocAdoptDevSerialNo_Type()
)
wingStatsNocAdoptDevSerialNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevSerialNo.setStatus("current")
_WingStatsNocAdoptDevRfDomainName_Type = DisplayString
_WingStatsNocAdoptDevRfDomainName_Object = MibTableColumn
wingStatsNocAdoptDevRfDomainName = _WingStatsNocAdoptDevRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 6),
    _WingStatsNocAdoptDevRfDomainName_Type()
)
wingStatsNocAdoptDevRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevRfDomainName.setStatus("current")
_WingStatsNocAdoptDevOnline_Type = TruthValue
_WingStatsNocAdoptDevOnline_Object = MibTableColumn
wingStatsNocAdoptDevOnline = _WingStatsNocAdoptDevOnline_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 7),
    _WingStatsNocAdoptDevOnline_Type()
)
wingStatsNocAdoptDevOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevOnline.setStatus("current")
_WingStatsNocAdoptDevBy_Type = MacAddress
_WingStatsNocAdoptDevBy_Object = MibTableColumn
wingStatsNocAdoptDevBy = _WingStatsNocAdoptDevBy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 8),
    _WingStatsNocAdoptDevBy_Type()
)
wingStatsNocAdoptDevBy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevBy.setStatus("current")
_WingStatsNocAdoptDevLastAdoption_Type = Unsigned32
_WingStatsNocAdoptDevLastAdoption_Object = MibTableColumn
wingStatsNocAdoptDevLastAdoption = _WingStatsNocAdoptDevLastAdoption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 9),
    _WingStatsNocAdoptDevLastAdoption_Type()
)
wingStatsNocAdoptDevLastAdoption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevLastAdoption.setStatus("current")
_WingStatsNocAdoptDevModelNumber_Type = DisplayString
_WingStatsNocAdoptDevModelNumber_Object = MibTableColumn
wingStatsNocAdoptDevModelNumber = _WingStatsNocAdoptDevModelNumber_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 10),
    _WingStatsNocAdoptDevModelNumber_Type()
)
wingStatsNocAdoptDevModelNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevModelNumber.setStatus("current")
_WingStatsNocAdoptDevStartup_Type = Unsigned32
_WingStatsNocAdoptDevStartup_Object = MibTableColumn
wingStatsNocAdoptDevStartup = _WingStatsNocAdoptDevStartup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 11),
    _WingStatsNocAdoptDevStartup_Type()
)
wingStatsNocAdoptDevStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevStartup.setStatus("current")
_WingStatsNocAdoptDevCfgStatus_Type = DisplayString
_WingStatsNocAdoptDevCfgStatus_Object = MibTableColumn
wingStatsNocAdoptDevCfgStatus = _WingStatsNocAdoptDevCfgStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 12),
    _WingStatsNocAdoptDevCfgStatus_Type()
)
wingStatsNocAdoptDevCfgStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevCfgStatus.setStatus("current")


class _WingStatsNocAdoptDevProductName_Type(DisplayString):
    """Custom type wingStatsNocAdoptDevProductName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingStatsNocAdoptDevProductName_Type.__name__ = "DisplayString"
_WingStatsNocAdoptDevProductName_Object = MibTableColumn
wingStatsNocAdoptDevProductName = _WingStatsNocAdoptDevProductName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 1, 1, 13),
    _WingStatsNocAdoptDevProductName_Type()
)
wingStatsNocAdoptDevProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptDevProductName.setStatus("current")
_WingStatsNocAdoptPendingDevTable_Object = MibTable
wingStatsNocAdoptPendingDevTable = _WingStatsNocAdoptPendingDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2)
)
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevTable.setStatus("current")
_WingStatsNocAdoptPendingDevEntry_Object = MibTableRow
wingStatsNocAdoptPendingDevEntry = _WingStatsNocAdoptPendingDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1)
)
wingStatsNocAdoptPendingDevEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsNocAdoptPendingDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevEntry.setStatus("current")
_WingStatsNocAdoptPendingDevMac_Type = MacAddress
_WingStatsNocAdoptPendingDevMac_Object = MibTableColumn
wingStatsNocAdoptPendingDevMac = _WingStatsNocAdoptPendingDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 1),
    _WingStatsNocAdoptPendingDevMac_Type()
)
wingStatsNocAdoptPendingDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevMac.setStatus("current")
_WingStatsNocAdoptPendingDevType_Type = DisplayString
_WingStatsNocAdoptPendingDevType_Object = MibTableColumn
wingStatsNocAdoptPendingDevType = _WingStatsNocAdoptPendingDevType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 2),
    _WingStatsNocAdoptPendingDevType_Type()
)
wingStatsNocAdoptPendingDevType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevType.setStatus("current")
_WingStatsNocAdoptPendingDevTarget_Type = DisplayString
_WingStatsNocAdoptPendingDevTarget_Object = MibTableColumn
wingStatsNocAdoptPendingDevTarget = _WingStatsNocAdoptPendingDevTarget_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 3),
    _WingStatsNocAdoptPendingDevTarget_Type()
)
wingStatsNocAdoptPendingDevTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevTarget.setStatus("current")
_WingStatsNocAdoptPendingDevDisOption_Type = DisplayString
_WingStatsNocAdoptPendingDevDisOption_Object = MibTableColumn
wingStatsNocAdoptPendingDevDisOption = _WingStatsNocAdoptPendingDevDisOption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 4),
    _WingStatsNocAdoptPendingDevDisOption_Type()
)
wingStatsNocAdoptPendingDevDisOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevDisOption.setStatus("current")
_WingStatsNocAdoptPendingDevVersion_Type = DisplayString
_WingStatsNocAdoptPendingDevVersion_Object = MibTableColumn
wingStatsNocAdoptPendingDevVersion = _WingStatsNocAdoptPendingDevVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 5),
    _WingStatsNocAdoptPendingDevVersion_Type()
)
wingStatsNocAdoptPendingDevVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevVersion.setStatus("current")
_WingStatsNocAdoptPendingDevSerialNumber_Type = DisplayString
_WingStatsNocAdoptPendingDevSerialNumber_Object = MibTableColumn
wingStatsNocAdoptPendingDevSerialNumber = _WingStatsNocAdoptPendingDevSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 6),
    _WingStatsNocAdoptPendingDevSerialNumber_Type()
)
wingStatsNocAdoptPendingDevSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevSerialNumber.setStatus("current")
_WingStatsNocAdoptPendingDevReason_Type = DisplayString
_WingStatsNocAdoptPendingDevReason_Object = MibTableColumn
wingStatsNocAdoptPendingDevReason = _WingStatsNocAdoptPendingDevReason_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 7),
    _WingStatsNocAdoptPendingDevReason_Type()
)
wingStatsNocAdoptPendingDevReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevReason.setStatus("current")
_WingStatsNocAdoptPendingDevNumRadios_Type = Unsigned32
_WingStatsNocAdoptPendingDevNumRadios_Object = MibTableColumn
wingStatsNocAdoptPendingDevNumRadios = _WingStatsNocAdoptPendingDevNumRadios_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 8),
    _WingStatsNocAdoptPendingDevNumRadios_Type()
)
wingStatsNocAdoptPendingDevNumRadios.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevNumRadios.setStatus("current")
_WingStatsNocAdoptPendingDevIp_Type = DisplayString
_WingStatsNocAdoptPendingDevIp_Object = MibTableColumn
wingStatsNocAdoptPendingDevIp = _WingStatsNocAdoptPendingDevIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 9),
    _WingStatsNocAdoptPendingDevIp_Type()
)
wingStatsNocAdoptPendingDevIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevIp.setStatus("current")
_WingStatsNocAdoptPendingDevVlan_Type = Unsigned32
_WingStatsNocAdoptPendingDevVlan_Object = MibTableColumn
wingStatsNocAdoptPendingDevVlan = _WingStatsNocAdoptPendingDevVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 1, 9, 2, 1, 10),
    _WingStatsNocAdoptPendingDevVlan_Type()
)
wingStatsNocAdoptPendingDevVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsNocAdoptPendingDevVlan.setStatus("current")
_WingStatsDev_ObjectIdentity = ObjectIdentity
wingStatsDev = _WingStatsDev_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2)
)
_WingStatsDevTable_Object = MibTable
wingStatsDevTable = _WingStatsDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevTable.setStatus("current")
_WingStatsDevEntry_Object = MibTableRow
wingStatsDevEntry = _WingStatsDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1)
)
wingStatsDevEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevEntry.setStatus("current")
_WingStatsDevMac_Type = MacAddress
_WingStatsDevMac_Object = MibTableColumn
wingStatsDevMac = _WingStatsDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1, 1),
    _WingStatsDevMac_Type()
)
wingStatsDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevMac.setStatus("current")
_WingStatsDevType_Type = DisplayString
_WingStatsDevType_Object = MibTableColumn
wingStatsDevType = _WingStatsDevType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1, 2),
    _WingStatsDevType_Type()
)
wingStatsDevType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevType.setStatus("current")
_WingStatsDevHostname_Type = DisplayString
_WingStatsDevHostname_Object = MibTableColumn
wingStatsDevHostname = _WingStatsDevHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1, 3),
    _WingStatsDevHostname_Type()
)
wingStatsDevHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevHostname.setStatus("current")
_WingStatsDevVersion_Type = DisplayString
_WingStatsDevVersion_Object = MibTableColumn
wingStatsDevVersion = _WingStatsDevVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1, 4),
    _WingStatsDevVersion_Type()
)
wingStatsDevVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVersion.setStatus("current")
_WingStatsDevSerialNo_Type = DisplayString
_WingStatsDevSerialNo_Object = MibTableColumn
wingStatsDevSerialNo = _WingStatsDevSerialNo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1, 5),
    _WingStatsDevSerialNo_Type()
)
wingStatsDevSerialNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSerialNo.setStatus("current")
_WingStatsDevRfDomainName_Type = DisplayString
_WingStatsDevRfDomainName_Object = MibTableColumn
wingStatsDevRfDomainName = _WingStatsDevRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1, 6),
    _WingStatsDevRfDomainName_Type()
)
wingStatsDevRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevRfDomainName.setStatus("current")
_WingStatsDevOnline_Type = TruthValue
_WingStatsDevOnline_Object = MibTableColumn
wingStatsDevOnline = _WingStatsDevOnline_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 1, 1, 7),
    _WingStatsDevOnline_Type()
)
wingStatsDevOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevOnline.setStatus("current")
_WingStatsDevSysInfo_ObjectIdentity = ObjectIdentity
wingStatsDevSysInfo = _WingStatsDevSysInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2)
)
_WingStatsDevSysInfoTable_Object = MibTable
wingStatsDevSysInfoTable = _WingStatsDevSysInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevSysInfoTable.setStatus("current")
_WingStatsDevSysInfoEntry_Object = MibTableRow
wingStatsDevSysInfoEntry = _WingStatsDevSysInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1)
)
wingStatsDevSysInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevSysInfoEntry.setStatus("current")
_WingStatsDevSysInfoFreeMem_Type = Unsigned32
_WingStatsDevSysInfoFreeMem_Object = MibTableColumn
wingStatsDevSysInfoFreeMem = _WingStatsDevSysInfoFreeMem_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 1),
    _WingStatsDevSysInfoFreeMem_Type()
)
wingStatsDevSysInfoFreeMem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoFreeMem.setStatus("current")
_WingStatsDevSysInfoTotalMem_Type = Unsigned32
_WingStatsDevSysInfoTotalMem_Object = MibTableColumn
wingStatsDevSysInfoTotalMem = _WingStatsDevSysInfoTotalMem_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 2),
    _WingStatsDevSysInfoTotalMem_Type()
)
wingStatsDevSysInfoTotalMem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoTotalMem.setStatus("current")
_WingStatsDevSysInfoFreeRamCurrent_Type = Unsigned32
_WingStatsDevSysInfoFreeRamCurrent_Object = MibTableColumn
wingStatsDevSysInfoFreeRamCurrent = _WingStatsDevSysInfoFreeRamCurrent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 3),
    _WingStatsDevSysInfoFreeRamCurrent_Type()
)
wingStatsDevSysInfoFreeRamCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoFreeRamCurrent.setStatus("current")
_WingStatsDevSysInfoFreeRamLimit_Type = Unsigned32
_WingStatsDevSysInfoFreeRamLimit_Object = MibTableColumn
wingStatsDevSysInfoFreeRamLimit = _WingStatsDevSysInfoFreeRamLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 4),
    _WingStatsDevSysInfoFreeRamLimit_Type()
)
wingStatsDevSysInfoFreeRamLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoFreeRamLimit.setStatus("current")
_WingStatsDevSysInfoFdMax_Type = Unsigned32
_WingStatsDevSysInfoFdMax_Object = MibTableColumn
wingStatsDevSysInfoFdMax = _WingStatsDevSysInfoFdMax_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 5),
    _WingStatsDevSysInfoFdMax_Type()
)
wingStatsDevSysInfoFdMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoFdMax.setStatus("current")
_WingStatsDevSysInfoFdCurrent_Type = Unsigned32
_WingStatsDevSysInfoFdCurrent_Object = MibTableColumn
wingStatsDevSysInfoFdCurrent = _WingStatsDevSysInfoFdCurrent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 6),
    _WingStatsDevSysInfoFdCurrent_Type()
)
wingStatsDevSysInfoFdCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoFdCurrent.setStatus("current")
_WingStatsDevSysInfoFdLimit_Type = Unsigned32
_WingStatsDevSysInfoFdLimit_Object = MibTableColumn
wingStatsDevSysInfoFdLimit = _WingStatsDevSysInfoFdLimit_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 7),
    _WingStatsDevSysInfoFdLimit_Type()
)
wingStatsDevSysInfoFdLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoFdLimit.setStatus("current")
_WingStatsDevSysInfoLoadLimitS0_Type = Unsigned32
_WingStatsDevSysInfoLoadLimitS0_Object = MibTableColumn
wingStatsDevSysInfoLoadLimitS0 = _WingStatsDevSysInfoLoadLimitS0_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 8),
    _WingStatsDevSysInfoLoadLimitS0_Type()
)
wingStatsDevSysInfoLoadLimitS0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoLoadLimitS0.setStatus("current")
_WingStatsDevSysInfoLoadLimitS1_Type = Unsigned32
_WingStatsDevSysInfoLoadLimitS1_Object = MibTableColumn
wingStatsDevSysInfoLoadLimitS1 = _WingStatsDevSysInfoLoadLimitS1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 9),
    _WingStatsDevSysInfoLoadLimitS1_Type()
)
wingStatsDevSysInfoLoadLimitS1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoLoadLimitS1.setStatus("current")
_WingStatsDevSysInfoLoadLimitS2_Type = Unsigned32
_WingStatsDevSysInfoLoadLimitS2_Object = MibTableColumn
wingStatsDevSysInfoLoadLimitS2 = _WingStatsDevSysInfoLoadLimitS2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 10),
    _WingStatsDevSysInfoLoadLimitS2_Type()
)
wingStatsDevSysInfoLoadLimitS2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoLoadLimitS2.setStatus("current")
_WingStatsDevSysInfoBufferCurrent0_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent0_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent0 = _WingStatsDevSysInfoBufferCurrent0_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 11),
    _WingStatsDevSysInfoBufferCurrent0_Type()
)
wingStatsDevSysInfoBufferCurrent0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent0.setStatus("current")
_WingStatsDevSysInfoBufferCurrent1_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent1_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent1 = _WingStatsDevSysInfoBufferCurrent1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 12),
    _WingStatsDevSysInfoBufferCurrent1_Type()
)
wingStatsDevSysInfoBufferCurrent1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent1.setStatus("current")
_WingStatsDevSysInfoBufferCurrent2_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent2_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent2 = _WingStatsDevSysInfoBufferCurrent2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 13),
    _WingStatsDevSysInfoBufferCurrent2_Type()
)
wingStatsDevSysInfoBufferCurrent2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent2.setStatus("current")
_WingStatsDevSysInfoBufferCurrent3_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent3_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent3 = _WingStatsDevSysInfoBufferCurrent3_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 14),
    _WingStatsDevSysInfoBufferCurrent3_Type()
)
wingStatsDevSysInfoBufferCurrent3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent3.setStatus("current")
_WingStatsDevSysInfoBufferCurrent4_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent4_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent4 = _WingStatsDevSysInfoBufferCurrent4_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 15),
    _WingStatsDevSysInfoBufferCurrent4_Type()
)
wingStatsDevSysInfoBufferCurrent4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent4.setStatus("current")
_WingStatsDevSysInfoBufferCurrent5_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent5_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent5 = _WingStatsDevSysInfoBufferCurrent5_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 16),
    _WingStatsDevSysInfoBufferCurrent5_Type()
)
wingStatsDevSysInfoBufferCurrent5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent5.setStatus("current")
_WingStatsDevSysInfoBufferCurrent6_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent6_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent6 = _WingStatsDevSysInfoBufferCurrent6_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 17),
    _WingStatsDevSysInfoBufferCurrent6_Type()
)
wingStatsDevSysInfoBufferCurrent6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent6.setStatus("current")
_WingStatsDevSysInfoBufferCurrent7_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent7_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent7 = _WingStatsDevSysInfoBufferCurrent7_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 18),
    _WingStatsDevSysInfoBufferCurrent7_Type()
)
wingStatsDevSysInfoBufferCurrent7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent7.setStatus("current")
_WingStatsDevSysInfoBufferCurrent8_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent8_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent8 = _WingStatsDevSysInfoBufferCurrent8_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 19),
    _WingStatsDevSysInfoBufferCurrent8_Type()
)
wingStatsDevSysInfoBufferCurrent8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent8.setStatus("current")
_WingStatsDevSysInfoBufferCurrent9_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent9_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent9 = _WingStatsDevSysInfoBufferCurrent9_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 20),
    _WingStatsDevSysInfoBufferCurrent9_Type()
)
wingStatsDevSysInfoBufferCurrent9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent9.setStatus("current")
_WingStatsDevSysInfoBufferCurrent10_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent10_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent10 = _WingStatsDevSysInfoBufferCurrent10_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 21),
    _WingStatsDevSysInfoBufferCurrent10_Type()
)
wingStatsDevSysInfoBufferCurrent10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent10.setStatus("current")
_WingStatsDevSysInfoBufferCurrent11_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent11_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent11 = _WingStatsDevSysInfoBufferCurrent11_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 22),
    _WingStatsDevSysInfoBufferCurrent11_Type()
)
wingStatsDevSysInfoBufferCurrent11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent11.setStatus("current")
_WingStatsDevSysInfoBufferCurrent12_Type = Unsigned32
_WingStatsDevSysInfoBufferCurrent12_Object = MibTableColumn
wingStatsDevSysInfoBufferCurrent12 = _WingStatsDevSysInfoBufferCurrent12_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 23),
    _WingStatsDevSysInfoBufferCurrent12_Type()
)
wingStatsDevSysInfoBufferCurrent12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferCurrent12.setStatus("current")
_WingStatsDevSysInfoBufferTotal0_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal0_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal0 = _WingStatsDevSysInfoBufferTotal0_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 24),
    _WingStatsDevSysInfoBufferTotal0_Type()
)
wingStatsDevSysInfoBufferTotal0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal0.setStatus("current")
_WingStatsDevSysInfoBufferTotal1_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal1_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal1 = _WingStatsDevSysInfoBufferTotal1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 25),
    _WingStatsDevSysInfoBufferTotal1_Type()
)
wingStatsDevSysInfoBufferTotal1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal1.setStatus("current")
_WingStatsDevSysInfoBufferTotal2_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal2_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal2 = _WingStatsDevSysInfoBufferTotal2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 26),
    _WingStatsDevSysInfoBufferTotal2_Type()
)
wingStatsDevSysInfoBufferTotal2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal2.setStatus("current")
_WingStatsDevSysInfoBufferTotal3_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal3_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal3 = _WingStatsDevSysInfoBufferTotal3_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 27),
    _WingStatsDevSysInfoBufferTotal3_Type()
)
wingStatsDevSysInfoBufferTotal3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal3.setStatus("current")
_WingStatsDevSysInfoBufferTotal4_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal4_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal4 = _WingStatsDevSysInfoBufferTotal4_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 28),
    _WingStatsDevSysInfoBufferTotal4_Type()
)
wingStatsDevSysInfoBufferTotal4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal4.setStatus("current")
_WingStatsDevSysInfoBufferTotal5_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal5_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal5 = _WingStatsDevSysInfoBufferTotal5_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 29),
    _WingStatsDevSysInfoBufferTotal5_Type()
)
wingStatsDevSysInfoBufferTotal5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal5.setStatus("current")
_WingStatsDevSysInfoBufferTotal6_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal6_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal6 = _WingStatsDevSysInfoBufferTotal6_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 30),
    _WingStatsDevSysInfoBufferTotal6_Type()
)
wingStatsDevSysInfoBufferTotal6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal6.setStatus("current")
_WingStatsDevSysInfoBufferTotal7_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal7_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal7 = _WingStatsDevSysInfoBufferTotal7_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 31),
    _WingStatsDevSysInfoBufferTotal7_Type()
)
wingStatsDevSysInfoBufferTotal7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal7.setStatus("current")
_WingStatsDevSysInfoBufferTotal8_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal8_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal8 = _WingStatsDevSysInfoBufferTotal8_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 32),
    _WingStatsDevSysInfoBufferTotal8_Type()
)
wingStatsDevSysInfoBufferTotal8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal8.setStatus("current")
_WingStatsDevSysInfoBufferTotal9_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal9_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal9 = _WingStatsDevSysInfoBufferTotal9_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 33),
    _WingStatsDevSysInfoBufferTotal9_Type()
)
wingStatsDevSysInfoBufferTotal9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal9.setStatus("current")
_WingStatsDevSysInfoBufferTotal10_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal10_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal10 = _WingStatsDevSysInfoBufferTotal10_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 34),
    _WingStatsDevSysInfoBufferTotal10_Type()
)
wingStatsDevSysInfoBufferTotal10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal10.setStatus("current")
_WingStatsDevSysInfoBufferTotal11_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal11_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal11 = _WingStatsDevSysInfoBufferTotal11_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 35),
    _WingStatsDevSysInfoBufferTotal11_Type()
)
wingStatsDevSysInfoBufferTotal11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal11.setStatus("current")
_WingStatsDevSysInfoBufferTotal12_Type = Unsigned32
_WingStatsDevSysInfoBufferTotal12_Object = MibTableColumn
wingStatsDevSysInfoBufferTotal12 = _WingStatsDevSysInfoBufferTotal12_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 2, 1, 1, 36),
    _WingStatsDevSysInfoBufferTotal12_Type()
)
wingStatsDevSysInfoBufferTotal12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysInfoBufferTotal12.setStatus("current")
_WingStatsDevSys_ObjectIdentity = ObjectIdentity
wingStatsDevSys = _WingStatsDevSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4)
)
_WingStatsDevSysTable_Object = MibTable
wingStatsDevSysTable = _WingStatsDevSysTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevSysTable.setStatus("current")
_WingStatsDevSysEntry_Object = MibTableRow
wingStatsDevSysEntry = _WingStatsDevSysEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1)
)
wingStatsDevSysEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevSysEntry.setStatus("current")
_WingStatsDevSysProductName_Type = DisplayString
_WingStatsDevSysProductName_Object = MibTableColumn
wingStatsDevSysProductName = _WingStatsDevSysProductName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 1),
    _WingStatsDevSysProductName_Type()
)
wingStatsDevSysProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysProductName.setStatus("current")
_WingStatsDevSysSerialNo_Type = DisplayString
_WingStatsDevSysSerialNo_Object = MibTableColumn
wingStatsDevSysSerialNo = _WingStatsDevSysSerialNo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 2),
    _WingStatsDevSysSerialNo_Type()
)
wingStatsDevSysSerialNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysSerialNo.setStatus("current")
_WingStatsDevSysVersion_Type = DisplayString
_WingStatsDevSysVersion_Object = MibTableColumn
wingStatsDevSysVersion = _WingStatsDevSysVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 3),
    _WingStatsDevSysVersion_Type()
)
wingStatsDevSysVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysVersion.setStatus("current")
_WingStatsDevSysPrimaryVersion_Type = DisplayString
_WingStatsDevSysPrimaryVersion_Object = MibTableColumn
wingStatsDevSysPrimaryVersion = _WingStatsDevSysPrimaryVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 4),
    _WingStatsDevSysPrimaryVersion_Type()
)
wingStatsDevSysPrimaryVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysPrimaryVersion.setStatus("current")
_WingStatsDevSysSecondaryVersion_Type = DisplayString
_WingStatsDevSysSecondaryVersion_Object = MibTableColumn
wingStatsDevSysSecondaryVersion = _WingStatsDevSysSecondaryVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 5),
    _WingStatsDevSysSecondaryVersion_Type()
)
wingStatsDevSysSecondaryVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysSecondaryVersion.setStatus("current")
_WingStatsDevSysPrimaryBuildDate_Type = DisplayString
_WingStatsDevSysPrimaryBuildDate_Object = MibTableColumn
wingStatsDevSysPrimaryBuildDate = _WingStatsDevSysPrimaryBuildDate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 6),
    _WingStatsDevSysPrimaryBuildDate_Type()
)
wingStatsDevSysPrimaryBuildDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysPrimaryBuildDate.setStatus("current")
_WingStatsDevSysSecondaryBuildDate_Type = DisplayString
_WingStatsDevSysSecondaryBuildDate_Object = MibTableColumn
wingStatsDevSysSecondaryBuildDate = _WingStatsDevSysSecondaryBuildDate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 7),
    _WingStatsDevSysSecondaryBuildDate_Type()
)
wingStatsDevSysSecondaryBuildDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysSecondaryBuildDate.setStatus("current")
_WingStatsDevSysPrimaryInstallDate_Type = DisplayString
_WingStatsDevSysPrimaryInstallDate_Object = MibTableColumn
wingStatsDevSysPrimaryInstallDate = _WingStatsDevSysPrimaryInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 8),
    _WingStatsDevSysPrimaryInstallDate_Type()
)
wingStatsDevSysPrimaryInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysPrimaryInstallDate.setStatus("current")
_WingStatsDevSysSecondaryInstallDate_Type = DisplayString
_WingStatsDevSysSecondaryInstallDate_Object = MibTableColumn
wingStatsDevSysSecondaryInstallDate = _WingStatsDevSysSecondaryInstallDate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 9),
    _WingStatsDevSysSecondaryInstallDate_Type()
)
wingStatsDevSysSecondaryInstallDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysSecondaryInstallDate.setStatus("current")
_WingStatsDevSysBootPartition_Type = DisplayString
_WingStatsDevSysBootPartition_Object = MibTableColumn
wingStatsDevSysBootPartition = _WingStatsDevSysBootPartition_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 10),
    _WingStatsDevSysBootPartition_Type()
)
wingStatsDevSysBootPartition.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysBootPartition.setStatus("current")
_WingStatsDevSysNextBoot_Type = DisplayString
_WingStatsDevSysNextBoot_Object = MibTableColumn
wingStatsDevSysNextBoot = _WingStatsDevSysNextBoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 11),
    _WingStatsDevSysNextBoot_Type()
)
wingStatsDevSysNextBoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysNextBoot.setStatus("current")
_WingStatsDevSysIsFallback_Type = TruthValue
_WingStatsDevSysIsFallback_Object = MibTableColumn
wingStatsDevSysIsFallback = _WingStatsDevSysIsFallback_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 12),
    _WingStatsDevSysIsFallback_Type()
)
wingStatsDevSysIsFallback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysIsFallback.setStatus("current")
_WingStatsDevSysImgFallback_Type = DisplayString
_WingStatsDevSysImgFallback_Object = MibTableColumn
wingStatsDevSysImgFallback = _WingStatsDevSysImgFallback_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 13),
    _WingStatsDevSysImgFallback_Type()
)
wingStatsDevSysImgFallback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysImgFallback.setStatus("current")
_WingStatsDevSysUptime_Type = DisplayString
_WingStatsDevSysUptime_Object = MibTableColumn
wingStatsDevSysUptime = _WingStatsDevSysUptime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 14),
    _WingStatsDevSysUptime_Type()
)
wingStatsDevSysUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysUptime.setStatus("current")
_WingStatsDevSysCpu_Type = DisplayString
_WingStatsDevSysCpu_Object = MibTableColumn
wingStatsDevSysCpu = _WingStatsDevSysCpu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 15),
    _WingStatsDevSysCpu_Type()
)
wingStatsDevSysCpu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysCpu.setStatus("current")
_WingStatsDevSysRam_Type = DisplayString
_WingStatsDevSysRam_Object = MibTableColumn
wingStatsDevSysRam = _WingStatsDevSysRam_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 16),
    _WingStatsDevSysRam_Type()
)
wingStatsDevSysRam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysRam.setStatus("current")
_WingStatsDevSysClock_Type = DisplayString
_WingStatsDevSysClock_Object = MibTableColumn
wingStatsDevSysClock = _WingStatsDevSysClock_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 17),
    _WingStatsDevSysClock_Type()
)
wingStatsDevSysClock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysClock.setStatus("current")
_WingStatsDevSysUpgradeStatus_Type = DisplayString
_WingStatsDevSysUpgradeStatus_Object = MibTableColumn
wingStatsDevSysUpgradeStatus = _WingStatsDevSysUpgradeStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 18),
    _WingStatsDevSysUpgradeStatus_Type()
)
wingStatsDevSysUpgradeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysUpgradeStatus.setStatus("current")
_WingStatsDevSysUpgradeTime_Type = DisplayString
_WingStatsDevSysUpgradeTime_Object = MibTableColumn
wingStatsDevSysUpgradeTime = _WingStatsDevSysUpgradeTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 19),
    _WingStatsDevSysUpgradeTime_Type()
)
wingStatsDevSysUpgradeTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysUpgradeTime.setStatus("current")
_WingStatsDevSysPoeFwVersion_Type = DisplayString
_WingStatsDevSysPoeFwVersion_Object = MibTableColumn
wingStatsDevSysPoeFwVersion = _WingStatsDevSysPoeFwVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 21),
    _WingStatsDevSysPoeFwVersion_Type()
)
wingStatsDevSysPoeFwVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysPoeFwVersion.setStatus("current")
_WingStatsDevSysFpgaVersion_Type = DisplayString
_WingStatsDevSysFpgaVersion_Object = MibTableColumn
wingStatsDevSysFpgaVersion = _WingStatsDevSysFpgaVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 22),
    _WingStatsDevSysFpgaVersion_Type()
)
wingStatsDevSysFpgaVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysFpgaVersion.setStatus("current")
_WingStatsDevSysModelNumber_Type = DisplayString
_WingStatsDevSysModelNumber_Object = MibTableColumn
wingStatsDevSysModelNumber = _WingStatsDevSysModelNumber_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 4, 1, 1, 23),
    _WingStatsDevSysModelNumber_Type()
)
wingStatsDevSysModelNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevSysModelNumber.setStatus("current")
_WingStatsDevIf_ObjectIdentity = ObjectIdentity
wingStatsDevIf = _WingStatsDevIf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6)
)
_WingStatsDevIfTable_Object = MibTable
wingStatsDevIfTable = _WingStatsDevIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevIfTable.setStatus("current")
_WingStatsDevIfEntry_Object = MibTableRow
wingStatsDevIfEntry = _WingStatsDevIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1)
)
wingStatsDevIfEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevIfName"),
)
if mibBuilder.loadTexts:
    wingStatsDevIfEntry.setStatus("current")
_WingStatsDevIfName_Type = WingIdentifier
_WingStatsDevIfName_Object = MibTableColumn
wingStatsDevIfName = _WingStatsDevIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 1),
    _WingStatsDevIfName_Type()
)
wingStatsDevIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfName.setStatus("current")
_WingStatsDevIfIndex_Type = Unsigned32
_WingStatsDevIfIndex_Object = MibTableColumn
wingStatsDevIfIndex = _WingStatsDevIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 2),
    _WingStatsDevIfIndex_Type()
)
wingStatsDevIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfIndex.setStatus("current")
_WingStatsDevIfHwType_Type = DisplayString
_WingStatsDevIfHwType_Object = MibTableColumn
wingStatsDevIfHwType = _WingStatsDevIfHwType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 3),
    _WingStatsDevIfHwType_Type()
)
wingStatsDevIfHwType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfHwType.setStatus("current")
_WingStatsDevIfMode_Type = DisplayString
_WingStatsDevIfMode_Object = MibTableColumn
wingStatsDevIfMode = _WingStatsDevIfMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 4),
    _WingStatsDevIfMode_Type()
)
wingStatsDevIfMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMode.setStatus("current")
_WingStatsDevIfMac_Type = MacAddress
_WingStatsDevIfMac_Object = MibTableColumn
wingStatsDevIfMac = _WingStatsDevIfMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 5),
    _WingStatsDevIfMac_Type()
)
wingStatsDevIfMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMac.setStatus("current")
_WingStatsDevIfStatusAdmin_Type = DisplayString
_WingStatsDevIfStatusAdmin_Object = MibTableColumn
wingStatsDevIfStatusAdmin = _WingStatsDevIfStatusAdmin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 6),
    _WingStatsDevIfStatusAdmin_Type()
)
wingStatsDevIfStatusAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfStatusAdmin.setStatus("current")
_WingStatsDevIfMtu_Type = Unsigned32
_WingStatsDevIfMtu_Object = MibTableColumn
wingStatsDevIfMtu = _WingStatsDevIfMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 7),
    _WingStatsDevIfMtu_Type()
)
wingStatsDevIfMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMtu.setStatus("current")
_WingStatsDevIfGoodOctetsRcv_Type = Counter64
_WingStatsDevIfGoodOctetsRcv_Object = MibTableColumn
wingStatsDevIfGoodOctetsRcv = _WingStatsDevIfGoodOctetsRcv_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 8),
    _WingStatsDevIfGoodOctetsRcv_Type()
)
wingStatsDevIfGoodOctetsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfGoodOctetsRcv.setStatus("current")
_WingStatsDevIfGoodPktsRcv_Type = Counter64
_WingStatsDevIfGoodPktsRcv_Object = MibTableColumn
wingStatsDevIfGoodPktsRcv = _WingStatsDevIfGoodPktsRcv_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 9),
    _WingStatsDevIfGoodPktsRcv_Type()
)
wingStatsDevIfGoodPktsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfGoodPktsRcv.setStatus("current")
_WingStatsDevIfDropEvents_Type = Counter64
_WingStatsDevIfDropEvents_Object = MibTableColumn
wingStatsDevIfDropEvents = _WingStatsDevIfDropEvents_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 10),
    _WingStatsDevIfDropEvents_Type()
)
wingStatsDevIfDropEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfDropEvents.setStatus("current")
_WingStatsDevIfUcPktsRcv_Type = Counter64
_WingStatsDevIfUcPktsRcv_Object = MibTableColumn
wingStatsDevIfUcPktsRcv = _WingStatsDevIfUcPktsRcv_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 11),
    _WingStatsDevIfUcPktsRcv_Type()
)
wingStatsDevIfUcPktsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfUcPktsRcv.setStatus("current")
_WingStatsDevIfBrdcPktsRcv_Type = Counter64
_WingStatsDevIfBrdcPktsRcv_Object = MibTableColumn
wingStatsDevIfBrdcPktsRcv = _WingStatsDevIfBrdcPktsRcv_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 12),
    _WingStatsDevIfBrdcPktsRcv_Type()
)
wingStatsDevIfBrdcPktsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfBrdcPktsRcv.setStatus("current")
_WingStatsDevIfMcPktsRcv_Type = Counter64
_WingStatsDevIfMcPktsRcv_Object = MibTableColumn
wingStatsDevIfMcPktsRcv = _WingStatsDevIfMcPktsRcv_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 13),
    _WingStatsDevIfMcPktsRcv_Type()
)
wingStatsDevIfMcPktsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMcPktsRcv.setStatus("current")
_WingStatsDevIfBadPktsRcv_Type = Counter64
_WingStatsDevIfBadPktsRcv_Object = MibTableColumn
wingStatsDevIfBadPktsRcv = _WingStatsDevIfBadPktsRcv_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 14),
    _WingStatsDevIfBadPktsRcv_Type()
)
wingStatsDevIfBadPktsRcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfBadPktsRcv.setStatus("current")
_WingStatsDevIfUndersizePkts_Type = Counter64
_WingStatsDevIfUndersizePkts_Object = MibTableColumn
wingStatsDevIfUndersizePkts = _WingStatsDevIfUndersizePkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 15),
    _WingStatsDevIfUndersizePkts_Type()
)
wingStatsDevIfUndersizePkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfUndersizePkts.setStatus("current")
_WingStatsDevIfOversizePkts_Type = Counter64
_WingStatsDevIfOversizePkts_Object = MibTableColumn
wingStatsDevIfOversizePkts = _WingStatsDevIfOversizePkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 16),
    _WingStatsDevIfOversizePkts_Type()
)
wingStatsDevIfOversizePkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfOversizePkts.setStatus("current")
_WingStatsDevIfBadCrc_Type = Counter64
_WingStatsDevIfBadCrc_Object = MibTableColumn
wingStatsDevIfBadCrc = _WingStatsDevIfBadCrc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 17),
    _WingStatsDevIfBadCrc_Type()
)
wingStatsDevIfBadCrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfBadCrc.setStatus("current")
_WingStatsDevIfMacRcvError_Type = Counter64
_WingStatsDevIfMacRcvError_Object = MibTableColumn
wingStatsDevIfMacRcvError = _WingStatsDevIfMacRcvError_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 18),
    _WingStatsDevIfMacRcvError_Type()
)
wingStatsDevIfMacRcvError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMacRcvError.setStatus("current")
_WingStatsDevIfFragmentsPkts_Type = Counter64
_WingStatsDevIfFragmentsPkts_Object = MibTableColumn
wingStatsDevIfFragmentsPkts = _WingStatsDevIfFragmentsPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 19),
    _WingStatsDevIfFragmentsPkts_Type()
)
wingStatsDevIfFragmentsPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfFragmentsPkts.setStatus("current")
_WingStatsDevIfJabberPkts_Type = Counter64
_WingStatsDevIfJabberPkts_Object = MibTableColumn
wingStatsDevIfJabberPkts = _WingStatsDevIfJabberPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 20),
    _WingStatsDevIfJabberPkts_Type()
)
wingStatsDevIfJabberPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfJabberPkts.setStatus("current")
_WingStatsDevIfGoodOctetsSent_Type = Counter64
_WingStatsDevIfGoodOctetsSent_Object = MibTableColumn
wingStatsDevIfGoodOctetsSent = _WingStatsDevIfGoodOctetsSent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 21),
    _WingStatsDevIfGoodOctetsSent_Type()
)
wingStatsDevIfGoodOctetsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfGoodOctetsSent.setStatus("current")
_WingStatsDevIfGoodPktsSent_Type = Counter64
_WingStatsDevIfGoodPktsSent_Object = MibTableColumn
wingStatsDevIfGoodPktsSent = _WingStatsDevIfGoodPktsSent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 22),
    _WingStatsDevIfGoodPktsSent_Type()
)
wingStatsDevIfGoodPktsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfGoodPktsSent.setStatus("current")
_WingStatsDevIfMacTransmitErr_Type = Counter64
_WingStatsDevIfMacTransmitErr_Object = MibTableColumn
wingStatsDevIfMacTransmitErr = _WingStatsDevIfMacTransmitErr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 23),
    _WingStatsDevIfMacTransmitErr_Type()
)
wingStatsDevIfMacTransmitErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMacTransmitErr.setStatus("current")
_WingStatsDevIfUcPktsSent_Type = Counter64
_WingStatsDevIfUcPktsSent_Object = MibTableColumn
wingStatsDevIfUcPktsSent = _WingStatsDevIfUcPktsSent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 24),
    _WingStatsDevIfUcPktsSent_Type()
)
wingStatsDevIfUcPktsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfUcPktsSent.setStatus("current")
_WingStatsDevIfBrdcPktsSent_Type = Counter64
_WingStatsDevIfBrdcPktsSent_Object = MibTableColumn
wingStatsDevIfBrdcPktsSent = _WingStatsDevIfBrdcPktsSent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 25),
    _WingStatsDevIfBrdcPktsSent_Type()
)
wingStatsDevIfBrdcPktsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfBrdcPktsSent.setStatus("current")
_WingStatsDevIfMcPktsSent_Type = Counter64
_WingStatsDevIfMcPktsSent_Object = MibTableColumn
wingStatsDevIfMcPktsSent = _WingStatsDevIfMcPktsSent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 26),
    _WingStatsDevIfMcPktsSent_Type()
)
wingStatsDevIfMcPktsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMcPktsSent.setStatus("current")
_WingStatsDevIfLateCollisions_Type = Counter64
_WingStatsDevIfLateCollisions_Object = MibTableColumn
wingStatsDevIfLateCollisions = _WingStatsDevIfLateCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 27),
    _WingStatsDevIfLateCollisions_Type()
)
wingStatsDevIfLateCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfLateCollisions.setStatus("current")
_WingStatsDevIfExcessiveCollisions_Type = Counter64
_WingStatsDevIfExcessiveCollisions_Object = MibTableColumn
wingStatsDevIfExcessiveCollisions = _WingStatsDevIfExcessiveCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 28),
    _WingStatsDevIfExcessiveCollisions_Type()
)
wingStatsDevIfExcessiveCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfExcessiveCollisions.setStatus("current")
_WingStatsDevIfCollisions_Type = Counter64
_WingStatsDevIfCollisions_Object = MibTableColumn
wingStatsDevIfCollisions = _WingStatsDevIfCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 29),
    _WingStatsDevIfCollisions_Type()
)
wingStatsDevIfCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfCollisions.setStatus("current")
_WingStatsDevIfMetric_Type = Integer32
_WingStatsDevIfMetric_Object = MibTableColumn
wingStatsDevIfMetric = _WingStatsDevIfMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 30),
    _WingStatsDevIfMetric_Type()
)
wingStatsDevIfMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfMetric.setStatus("current")
_WingStatsDevIfRxFifoErrors_Type = Counter32
_WingStatsDevIfRxFifoErrors_Object = MibTableColumn
wingStatsDevIfRxFifoErrors = _WingStatsDevIfRxFifoErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 31),
    _WingStatsDevIfRxFifoErrors_Type()
)
wingStatsDevIfRxFifoErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfRxFifoErrors.setStatus("current")
_WingStatsDevIfRxOverErrors_Type = Counter32
_WingStatsDevIfRxOverErrors_Object = MibTableColumn
wingStatsDevIfRxOverErrors = _WingStatsDevIfRxOverErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 32),
    _WingStatsDevIfRxOverErrors_Type()
)
wingStatsDevIfRxOverErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfRxOverErrors.setStatus("current")
_WingStatsDevIfTxWindowErrors_Type = Counter32
_WingStatsDevIfTxWindowErrors_Object = MibTableColumn
wingStatsDevIfTxWindowErrors = _WingStatsDevIfTxWindowErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 33),
    _WingStatsDevIfTxWindowErrors_Type()
)
wingStatsDevIfTxWindowErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfTxWindowErrors.setStatus("current")
_WingStatsDevIfTxFifoErrors_Type = Counter32
_WingStatsDevIfTxFifoErrors_Object = MibTableColumn
wingStatsDevIfTxFifoErrors = _WingStatsDevIfTxFifoErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 34),
    _WingStatsDevIfTxFifoErrors_Type()
)
wingStatsDevIfTxFifoErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfTxFifoErrors.setStatus("current")
_WingStatsDevIfTxAbortedErrors_Type = Counter32
_WingStatsDevIfTxAbortedErrors_Object = MibTableColumn
wingStatsDevIfTxAbortedErrors = _WingStatsDevIfTxAbortedErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 35),
    _WingStatsDevIfTxAbortedErrors_Type()
)
wingStatsDevIfTxAbortedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfTxAbortedErrors.setStatus("current")
_WingStatsDevIfTxCarrierErrors_Type = Counter32
_WingStatsDevIfTxCarrierErrors_Object = MibTableColumn
wingStatsDevIfTxCarrierErrors = _WingStatsDevIfTxCarrierErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 36),
    _WingStatsDevIfTxCarrierErrors_Type()
)
wingStatsDevIfTxCarrierErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfTxCarrierErrors.setStatus("current")
_WingStatsDevIfTxDropped_Type = Counter32
_WingStatsDevIfTxDropped_Object = MibTableColumn
wingStatsDevIfTxDropped = _WingStatsDevIfTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 37),
    _WingStatsDevIfTxDropped_Type()
)
wingStatsDevIfTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfTxDropped.setStatus("current")
_WingStatsDevIfRxLengthErrors_Type = Counter32
_WingStatsDevIfRxLengthErrors_Object = MibTableColumn
wingStatsDevIfRxLengthErrors = _WingStatsDevIfRxLengthErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 38),
    _WingStatsDevIfRxLengthErrors_Type()
)
wingStatsDevIfRxLengthErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfRxLengthErrors.setStatus("current")
_WingStatsDevIfRxMissedErrors_Type = Counter32
_WingStatsDevIfRxMissedErrors_Object = MibTableColumn
wingStatsDevIfRxMissedErrors = _WingStatsDevIfRxMissedErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 39),
    _WingStatsDevIfRxMissedErrors_Type()
)
wingStatsDevIfRxMissedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfRxMissedErrors.setStatus("current")
_WingStatsDevIfRxFrameErrors_Type = Counter32
_WingStatsDevIfRxFrameErrors_Object = MibTableColumn
wingStatsDevIfRxFrameErrors = _WingStatsDevIfRxFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 40),
    _WingStatsDevIfRxFrameErrors_Type()
)
wingStatsDevIfRxFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfRxFrameErrors.setStatus("current")
_WingStatsDevIfTxErrors_Type = Counter32
_WingStatsDevIfTxErrors_Object = MibTableColumn
wingStatsDevIfTxErrors = _WingStatsDevIfTxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 41),
    _WingStatsDevIfTxErrors_Type()
)
wingStatsDevIfTxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfTxErrors.setStatus("current")
_WingStatsDevIfTxHeartbeatErrors_Type = Counter32
_WingStatsDevIfTxHeartbeatErrors_Object = MibTableColumn
wingStatsDevIfTxHeartbeatErrors = _WingStatsDevIfTxHeartbeatErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 42),
    _WingStatsDevIfTxHeartbeatErrors_Type()
)
wingStatsDevIfTxHeartbeatErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfTxHeartbeatErrors.setStatus("current")
_WingStatsDevIfStatusOper_Type = DisplayString
_WingStatsDevIfStatusOper_Object = MibTableColumn
wingStatsDevIfStatusOper = _WingStatsDevIfStatusOper_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 6, 1, 1, 43),
    _WingStatsDevIfStatusOper_Type()
)
wingStatsDevIfStatusOper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevIfStatusOper.setStatus("current")
_WingStatsDevAdopt_ObjectIdentity = ObjectIdentity
wingStatsDevAdopt = _WingStatsDevAdopt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8)
)
_WingStatsDevAdoptDevTable_Object = MibTable
wingStatsDevAdoptDevTable = _WingStatsDevAdoptDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevTable.setStatus("current")
_WingStatsDevAdoptDevEntry_Object = MibTableRow
wingStatsDevAdoptDevEntry = _WingStatsDevAdoptDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1)
)
wingStatsDevAdoptDevEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevAdoptDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevEntry.setStatus("current")
_WingStatsDevAdoptDevMac_Type = MacAddress
_WingStatsDevAdoptDevMac_Object = MibTableColumn
wingStatsDevAdoptDevMac = _WingStatsDevAdoptDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 1),
    _WingStatsDevAdoptDevMac_Type()
)
wingStatsDevAdoptDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevMac.setStatus("current")
_WingStatsDevAdoptDevType_Type = DisplayString
_WingStatsDevAdoptDevType_Object = MibTableColumn
wingStatsDevAdoptDevType = _WingStatsDevAdoptDevType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 2),
    _WingStatsDevAdoptDevType_Type()
)
wingStatsDevAdoptDevType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevType.setStatus("current")
_WingStatsDevAdoptDevHostname_Type = DisplayString
_WingStatsDevAdoptDevHostname_Object = MibTableColumn
wingStatsDevAdoptDevHostname = _WingStatsDevAdoptDevHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 3),
    _WingStatsDevAdoptDevHostname_Type()
)
wingStatsDevAdoptDevHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevHostname.setStatus("current")
_WingStatsDevAdoptDevVersion_Type = DisplayString
_WingStatsDevAdoptDevVersion_Object = MibTableColumn
wingStatsDevAdoptDevVersion = _WingStatsDevAdoptDevVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 4),
    _WingStatsDevAdoptDevVersion_Type()
)
wingStatsDevAdoptDevVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevVersion.setStatus("current")
_WingStatsDevAdoptDevSerialNo_Type = DisplayString
_WingStatsDevAdoptDevSerialNo_Object = MibTableColumn
wingStatsDevAdoptDevSerialNo = _WingStatsDevAdoptDevSerialNo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 5),
    _WingStatsDevAdoptDevSerialNo_Type()
)
wingStatsDevAdoptDevSerialNo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevSerialNo.setStatus("current")
_WingStatsDevAdoptDevRfDomainName_Type = DisplayString
_WingStatsDevAdoptDevRfDomainName_Object = MibTableColumn
wingStatsDevAdoptDevRfDomainName = _WingStatsDevAdoptDevRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 6),
    _WingStatsDevAdoptDevRfDomainName_Type()
)
wingStatsDevAdoptDevRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevRfDomainName.setStatus("current")
_WingStatsDevAdoptDevOnline_Type = TruthValue
_WingStatsDevAdoptDevOnline_Object = MibTableColumn
wingStatsDevAdoptDevOnline = _WingStatsDevAdoptDevOnline_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 7),
    _WingStatsDevAdoptDevOnline_Type()
)
wingStatsDevAdoptDevOnline.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevOnline.setStatus("current")
_WingStatsDevAdoptDevBy_Type = MacAddress
_WingStatsDevAdoptDevBy_Object = MibTableColumn
wingStatsDevAdoptDevBy = _WingStatsDevAdoptDevBy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 8),
    _WingStatsDevAdoptDevBy_Type()
)
wingStatsDevAdoptDevBy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevBy.setStatus("current")
_WingStatsDevAdoptDevLastAdoption_Type = Unsigned32
_WingStatsDevAdoptDevLastAdoption_Object = MibTableColumn
wingStatsDevAdoptDevLastAdoption = _WingStatsDevAdoptDevLastAdoption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 9),
    _WingStatsDevAdoptDevLastAdoption_Type()
)
wingStatsDevAdoptDevLastAdoption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevLastAdoption.setStatus("current")


class _WingStatsDevAdoptDevModelNumber_Type(DisplayString):
    """Custom type wingStatsDevAdoptDevModelNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingStatsDevAdoptDevModelNumber_Type.__name__ = "DisplayString"
_WingStatsDevAdoptDevModelNumber_Object = MibTableColumn
wingStatsDevAdoptDevModelNumber = _WingStatsDevAdoptDevModelNumber_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 10),
    _WingStatsDevAdoptDevModelNumber_Type()
)
wingStatsDevAdoptDevModelNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevModelNumber.setStatus("current")
_WingStatsDevAdoptDevStartup_Type = Unsigned32
_WingStatsDevAdoptDevStartup_Object = MibTableColumn
wingStatsDevAdoptDevStartup = _WingStatsDevAdoptDevStartup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 11),
    _WingStatsDevAdoptDevStartup_Type()
)
wingStatsDevAdoptDevStartup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevStartup.setStatus("current")


class _WingStatsDevAdoptDevCfgStatus_Type(DisplayString):
    """Custom type wingStatsDevAdoptDevCfgStatus based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingStatsDevAdoptDevCfgStatus_Type.__name__ = "DisplayString"
_WingStatsDevAdoptDevCfgStatus_Object = MibTableColumn
wingStatsDevAdoptDevCfgStatus = _WingStatsDevAdoptDevCfgStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 12),
    _WingStatsDevAdoptDevCfgStatus_Type()
)
wingStatsDevAdoptDevCfgStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevCfgStatus.setStatus("current")


class _WingStatsDevAdoptDevProductName_Type(DisplayString):
    """Custom type wingStatsDevAdoptDevProductName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingStatsDevAdoptDevProductName_Type.__name__ = "DisplayString"
_WingStatsDevAdoptDevProductName_Object = MibTableColumn
wingStatsDevAdoptDevProductName = _WingStatsDevAdoptDevProductName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 2, 1, 13),
    _WingStatsDevAdoptDevProductName_Type()
)
wingStatsDevAdoptDevProductName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptDevProductName.setStatus("current")
_WingStatsDevAdoptPendingDevTable_Object = MibTable
wingStatsDevAdoptPendingDevTable = _WingStatsDevAdoptPendingDevTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3)
)
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevTable.setStatus("current")
_WingStatsDevAdoptPendingDevEntry_Object = MibTableRow
wingStatsDevAdoptPendingDevEntry = _WingStatsDevAdoptPendingDevEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1)
)
wingStatsDevAdoptPendingDevEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevAdoptPendingDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevEntry.setStatus("current")
_WingStatsDevAdoptPendingDevMac_Type = MacAddress
_WingStatsDevAdoptPendingDevMac_Object = MibTableColumn
wingStatsDevAdoptPendingDevMac = _WingStatsDevAdoptPendingDevMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 1),
    _WingStatsDevAdoptPendingDevMac_Type()
)
wingStatsDevAdoptPendingDevMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevMac.setStatus("current")
_WingStatsDevAdoptPendingDevType_Type = DisplayString
_WingStatsDevAdoptPendingDevType_Object = MibTableColumn
wingStatsDevAdoptPendingDevType = _WingStatsDevAdoptPendingDevType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 2),
    _WingStatsDevAdoptPendingDevType_Type()
)
wingStatsDevAdoptPendingDevType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevType.setStatus("current")
_WingStatsDevAdoptPendingDevTarget_Type = DisplayString
_WingStatsDevAdoptPendingDevTarget_Object = MibTableColumn
wingStatsDevAdoptPendingDevTarget = _WingStatsDevAdoptPendingDevTarget_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 3),
    _WingStatsDevAdoptPendingDevTarget_Type()
)
wingStatsDevAdoptPendingDevTarget.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevTarget.setStatus("current")
_WingStatsDevAdoptPendingDevDisOption_Type = DisplayString
_WingStatsDevAdoptPendingDevDisOption_Object = MibTableColumn
wingStatsDevAdoptPendingDevDisOption = _WingStatsDevAdoptPendingDevDisOption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 4),
    _WingStatsDevAdoptPendingDevDisOption_Type()
)
wingStatsDevAdoptPendingDevDisOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevDisOption.setStatus("current")
_WingStatsDevAdoptPendingDevVersion_Type = DisplayString
_WingStatsDevAdoptPendingDevVersion_Object = MibTableColumn
wingStatsDevAdoptPendingDevVersion = _WingStatsDevAdoptPendingDevVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 5),
    _WingStatsDevAdoptPendingDevVersion_Type()
)
wingStatsDevAdoptPendingDevVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevVersion.setStatus("current")
_WingStatsDevAdoptPendingDevSerialNumber_Type = DisplayString
_WingStatsDevAdoptPendingDevSerialNumber_Object = MibTableColumn
wingStatsDevAdoptPendingDevSerialNumber = _WingStatsDevAdoptPendingDevSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 6),
    _WingStatsDevAdoptPendingDevSerialNumber_Type()
)
wingStatsDevAdoptPendingDevSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevSerialNumber.setStatus("current")
_WingStatsDevAdoptPendingDevReason_Type = DisplayString
_WingStatsDevAdoptPendingDevReason_Object = MibTableColumn
wingStatsDevAdoptPendingDevReason = _WingStatsDevAdoptPendingDevReason_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 7),
    _WingStatsDevAdoptPendingDevReason_Type()
)
wingStatsDevAdoptPendingDevReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevReason.setStatus("current")
_WingStatsDevAdoptPendingDevNumRadios_Type = Unsigned32
_WingStatsDevAdoptPendingDevNumRadios_Object = MibTableColumn
wingStatsDevAdoptPendingDevNumRadios = _WingStatsDevAdoptPendingDevNumRadios_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 8),
    _WingStatsDevAdoptPendingDevNumRadios_Type()
)
wingStatsDevAdoptPendingDevNumRadios.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevNumRadios.setStatus("current")
_WingStatsDevAdoptPendingDevIp_Type = DisplayString
_WingStatsDevAdoptPendingDevIp_Object = MibTableColumn
wingStatsDevAdoptPendingDevIp = _WingStatsDevAdoptPendingDevIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 9),
    _WingStatsDevAdoptPendingDevIp_Type()
)
wingStatsDevAdoptPendingDevIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevIp.setStatus("current")
_WingStatsDevAdoptPendingDevVlan_Type = Unsigned32
_WingStatsDevAdoptPendingDevVlan_Object = MibTableColumn
wingStatsDevAdoptPendingDevVlan = _WingStatsDevAdoptPendingDevVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 8, 3, 1, 10),
    _WingStatsDevAdoptPendingDevVlan_Type()
)
wingStatsDevAdoptPendingDevVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevAdoptPendingDevVlan.setStatus("current")
_WingStatsDevCdpNeighbor_ObjectIdentity = ObjectIdentity
wingStatsDevCdpNeighbor = _WingStatsDevCdpNeighbor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17)
)
_WingStatsDevCdpNeighborTable_Object = MibTable
wingStatsDevCdpNeighborTable = _WingStatsDevCdpNeighborTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborTable.setStatus("current")
_WingStatsDevCdpNeighborEntry_Object = MibTableRow
wingStatsDevCdpNeighborEntry = _WingStatsDevCdpNeighborEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1)
)
wingStatsDevCdpNeighborEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevCdpNeighborIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborEntry.setStatus("current")
_WingStatsDevCdpNeighborIndex_Type = WingIdentifier
_WingStatsDevCdpNeighborIndex_Object = MibTableColumn
wingStatsDevCdpNeighborIndex = _WingStatsDevCdpNeighborIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 1),
    _WingStatsDevCdpNeighborIndex_Type()
)
wingStatsDevCdpNeighborIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborIndex.setStatus("current")
_WingStatsDevCdpNeighborDevId_Type = DisplayString
_WingStatsDevCdpNeighborDevId_Object = MibTableColumn
wingStatsDevCdpNeighborDevId = _WingStatsDevCdpNeighborDevId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 2),
    _WingStatsDevCdpNeighborDevId_Type()
)
wingStatsDevCdpNeighborDevId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborDevId.setStatus("current")
_WingStatsDevCdpNeighborPlatform_Type = DisplayString
_WingStatsDevCdpNeighborPlatform_Object = MibTableColumn
wingStatsDevCdpNeighborPlatform = _WingStatsDevCdpNeighborPlatform_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 3),
    _WingStatsDevCdpNeighborPlatform_Type()
)
wingStatsDevCdpNeighborPlatform.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborPlatform.setStatus("current")
_WingStatsDevCdpNeighborIpList_Type = DisplayString
_WingStatsDevCdpNeighborIpList_Object = MibTableColumn
wingStatsDevCdpNeighborIpList = _WingStatsDevCdpNeighborIpList_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 4),
    _WingStatsDevCdpNeighborIpList_Type()
)
wingStatsDevCdpNeighborIpList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborIpList.setStatus("current")
_WingStatsDevCdpNeighborPortId_Type = DisplayString
_WingStatsDevCdpNeighborPortId_Object = MibTableColumn
wingStatsDevCdpNeighborPortId = _WingStatsDevCdpNeighborPortId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 5),
    _WingStatsDevCdpNeighborPortId_Type()
)
wingStatsDevCdpNeighborPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborPortId.setStatus("current")
_WingStatsDevCdpNeighborTtl_Type = Unsigned32
_WingStatsDevCdpNeighborTtl_Object = MibTableColumn
wingStatsDevCdpNeighborTtl = _WingStatsDevCdpNeighborTtl_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 6),
    _WingStatsDevCdpNeighborTtl_Type()
)
wingStatsDevCdpNeighborTtl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborTtl.setStatus("current")
_WingStatsDevCdpNeighborLocalPort_Type = DisplayString
_WingStatsDevCdpNeighborLocalPort_Object = MibTableColumn
wingStatsDevCdpNeighborLocalPort = _WingStatsDevCdpNeighborLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 7),
    _WingStatsDevCdpNeighborLocalPort_Type()
)
wingStatsDevCdpNeighborLocalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborLocalPort.setStatus("current")
_WingStatsDevCdpNeighborDuplex_Type = DisplayString
_WingStatsDevCdpNeighborDuplex_Object = MibTableColumn
wingStatsDevCdpNeighborDuplex = _WingStatsDevCdpNeighborDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 8),
    _WingStatsDevCdpNeighborDuplex_Type()
)
wingStatsDevCdpNeighborDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborDuplex.setStatus("current")
_WingStatsDevCdpNeighborAdvertisedVersion_Type = Unsigned32
_WingStatsDevCdpNeighborAdvertisedVersion_Object = MibTableColumn
wingStatsDevCdpNeighborAdvertisedVersion = _WingStatsDevCdpNeighborAdvertisedVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 9),
    _WingStatsDevCdpNeighborAdvertisedVersion_Type()
)
wingStatsDevCdpNeighborAdvertisedVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborAdvertisedVersion.setStatus("current")
_WingStatsDevCdpNeighborVtpDomain_Type = DisplayString
_WingStatsDevCdpNeighborVtpDomain_Object = MibTableColumn
wingStatsDevCdpNeighborVtpDomain = _WingStatsDevCdpNeighborVtpDomain_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 10),
    _WingStatsDevCdpNeighborVtpDomain_Type()
)
wingStatsDevCdpNeighborVtpDomain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborVtpDomain.setStatus("current")
_WingStatsDevCdpNeighborNativeVlan_Type = Unsigned32
_WingStatsDevCdpNeighborNativeVlan_Object = MibTableColumn
wingStatsDevCdpNeighborNativeVlan = _WingStatsDevCdpNeighborNativeVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 11),
    _WingStatsDevCdpNeighborNativeVlan_Type()
)
wingStatsDevCdpNeighborNativeVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborNativeVlan.setStatus("current")
_WingStatsDevCdpNeighborUntrustedPortCos_Type = Unsigned32
_WingStatsDevCdpNeighborUntrustedPortCos_Object = MibTableColumn
wingStatsDevCdpNeighborUntrustedPortCos = _WingStatsDevCdpNeighborUntrustedPortCos_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 12),
    _WingStatsDevCdpNeighborUntrustedPortCos_Type()
)
wingStatsDevCdpNeighborUntrustedPortCos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborUntrustedPortCos.setStatus("current")
_WingStatsDevCdpNeighborMgmtAddrList_Type = DisplayString
_WingStatsDevCdpNeighborMgmtAddrList_Object = MibTableColumn
wingStatsDevCdpNeighborMgmtAddrList = _WingStatsDevCdpNeighborMgmtAddrList_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 13),
    _WingStatsDevCdpNeighborMgmtAddrList_Type()
)
wingStatsDevCdpNeighborMgmtAddrList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborMgmtAddrList.setStatus("current")
_WingStatsDevCdpNeighborVersion_Type = DisplayString
_WingStatsDevCdpNeighborVersion_Object = MibTableColumn
wingStatsDevCdpNeighborVersion = _WingStatsDevCdpNeighborVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 17, 1, 1, 14),
    _WingStatsDevCdpNeighborVersion_Type()
)
wingStatsDevCdpNeighborVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCdpNeighborVersion.setStatus("current")
_WingStatsDevWl_ObjectIdentity = ObjectIdentity
wingStatsDevWl = _WingStatsDevWl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25)
)
_WingStatsDevWlApInfo_ObjectIdentity = ObjectIdentity
wingStatsDevWlApInfo = _WingStatsDevWlApInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1)
)
_WingStatsDevWlApInfoTable_Object = MibTable
wingStatsDevWlApInfoTable = _WingStatsDevWlApInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoTable.setStatus("current")
_WingStatsDevWlApInfoEntry_Object = MibTableRow
wingStatsDevWlApInfoEntry = _WingStatsDevWlApInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1)
)
wingStatsDevWlApInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlApInfoMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoEntry.setStatus("current")
_WingStatsDevWlApInfoMac_Type = MacAddress
_WingStatsDevWlApInfoMac_Object = MibTableColumn
wingStatsDevWlApInfoMac = _WingStatsDevWlApInfoMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 1),
    _WingStatsDevWlApInfoMac_Type()
)
wingStatsDevWlApInfoMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoMac.setStatus("current")
_WingStatsDevWlApInfoFaultDetected_Type = TruthValue
_WingStatsDevWlApInfoFaultDetected_Object = MibTableColumn
wingStatsDevWlApInfoFaultDetected = _WingStatsDevWlApInfoFaultDetected_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 2),
    _WingStatsDevWlApInfoFaultDetected_Type()
)
wingStatsDevWlApInfoFaultDetected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoFaultDetected.setStatus("current")
_WingStatsDevWlApInfoNumRadios_Type = Unsigned32
_WingStatsDevWlApInfoNumRadios_Object = MibTableColumn
wingStatsDevWlApInfoNumRadios = _WingStatsDevWlApInfoNumRadios_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 3),
    _WingStatsDevWlApInfoNumRadios_Type()
)
wingStatsDevWlApInfoNumRadios.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoNumRadios.setStatus("current")
_WingStatsDevWlApInfoNumClients_Type = Unsigned32
_WingStatsDevWlApInfoNumClients_Object = MibTableColumn
wingStatsDevWlApInfoNumClients = _WingStatsDevWlApInfoNumClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 4),
    _WingStatsDevWlApInfoNumClients_Type()
)
wingStatsDevWlApInfoNumClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoNumClients.setStatus("current")


class _WingStatsDevWlApInfoLastCalTime_Type(DisplayString):
    """Custom type wingStatsDevWlApInfoLastCalTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlApInfoLastCalTime_Type.__name__ = "DisplayString"
_WingStatsDevWlApInfoLastCalTime_Object = MibTableColumn
wingStatsDevWlApInfoLastCalTime = _WingStatsDevWlApInfoLastCalTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 5),
    _WingStatsDevWlApInfoLastCalTime_Type()
)
wingStatsDevWlApInfoLastCalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoLastCalTime.setStatus("current")


class _WingStatsDevWlApInfoType_Type(DisplayString):
    """Custom type wingStatsDevWlApInfoType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingStatsDevWlApInfoType_Type.__name__ = "DisplayString"
_WingStatsDevWlApInfoType_Object = MibTableColumn
wingStatsDevWlApInfoType = _WingStatsDevWlApInfoType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 6),
    _WingStatsDevWlApInfoType_Type()
)
wingStatsDevWlApInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoType.setStatus("current")


class _WingStatsDevWlApInfoStatsMode_Type(DisplayString):
    """Custom type wingStatsDevWlApInfoStatsMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingStatsDevWlApInfoStatsMode_Type.__name__ = "DisplayString"
_WingStatsDevWlApInfoStatsMode_Object = MibTableColumn
wingStatsDevWlApInfoStatsMode = _WingStatsDevWlApInfoStatsMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 7),
    _WingStatsDevWlApInfoStatsMode_Type()
)
wingStatsDevWlApInfoStatsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoStatsMode.setStatus("current")
_WingStatsDevWlApInfoStatsInterval_Type = Unsigned32
_WingStatsDevWlApInfoStatsInterval_Object = MibTableColumn
wingStatsDevWlApInfoStatsInterval = _WingStatsDevWlApInfoStatsInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 8),
    _WingStatsDevWlApInfoStatsInterval_Type()
)
wingStatsDevWlApInfoStatsInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoStatsInterval.setStatus("current")


class _WingStatsDevWlApInfoHostname_Type(DisplayString):
    """Custom type wingStatsDevWlApInfoHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlApInfoHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlApInfoHostname_Object = MibTableColumn
wingStatsDevWlApInfoHostname = _WingStatsDevWlApInfoHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 9),
    _WingStatsDevWlApInfoHostname_Type()
)
wingStatsDevWlApInfoHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoHostname.setStatus("current")


class _WingStatsDevWlApInfoRfDomainName_Type(DisplayString):
    """Custom type wingStatsDevWlApInfoRfDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlApInfoRfDomainName_Type.__name__ = "DisplayString"
_WingStatsDevWlApInfoRfDomainName_Object = MibTableColumn
wingStatsDevWlApInfoRfDomainName = _WingStatsDevWlApInfoRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 10),
    _WingStatsDevWlApInfoRfDomainName_Type()
)
wingStatsDevWlApInfoRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoRfDomainName.setStatus("current")


class _WingStatsDevWlApInfoLocation_Type(DisplayString):
    """Custom type wingStatsDevWlApInfoLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlApInfoLocation_Type.__name__ = "DisplayString"
_WingStatsDevWlApInfoLocation_Object = MibTableColumn
wingStatsDevWlApInfoLocation = _WingStatsDevWlApInfoLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 11),
    _WingStatsDevWlApInfoLocation_Type()
)
wingStatsDevWlApInfoLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoLocation.setStatus("current")
_WingStatsDevWlApInfoAdoptedTo_Type = MacAddress
_WingStatsDevWlApInfoAdoptedTo_Object = MibTableColumn
wingStatsDevWlApInfoAdoptedTo = _WingStatsDevWlApInfoAdoptedTo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 12),
    _WingStatsDevWlApInfoAdoptedTo_Type()
)
wingStatsDevWlApInfoAdoptedTo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoAdoptedTo.setStatus("current")


class _WingStatsDevWlApInfoIp_Type(DisplayString):
    """Custom type wingStatsDevWlApInfoIp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_WingStatsDevWlApInfoIp_Type.__name__ = "DisplayString"
_WingStatsDevWlApInfoIp_Object = MibTableColumn
wingStatsDevWlApInfoIp = _WingStatsDevWlApInfoIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 1, 1, 1, 13),
    _WingStatsDevWlApInfoIp_Type()
)
wingStatsDevWlApInfoIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApInfoIp.setStatus("current")
_WingStatsDevWlClient_ObjectIdentity = ObjectIdentity
wingStatsDevWlClient = _WingStatsDevWlClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3)
)
_WingStatsDevWlClientTable_Object = MibTable
wingStatsDevWlClientTable = _WingStatsDevWlClientTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevWlClientTable.setStatus("current")
_WingStatsDevWlClientEntry_Object = MibTableRow
wingStatsDevWlClientEntry = _WingStatsDevWlClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1)
)
wingStatsDevWlClientEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlClientMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlClientEntry.setStatus("current")
_WingStatsDevWlClientMac_Type = MacAddress
_WingStatsDevWlClientMac_Object = MibTableColumn
wingStatsDevWlClientMac = _WingStatsDevWlClientMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 1),
    _WingStatsDevWlClientMac_Type()
)
wingStatsDevWlClientMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientMac.setStatus("current")
_WingStatsDevWlClientMacName_Type = DisplayString
_WingStatsDevWlClientMacName_Object = MibTableColumn
wingStatsDevWlClientMacName = _WingStatsDevWlClientMacName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 2),
    _WingStatsDevWlClientMacName_Type()
)
wingStatsDevWlClientMacName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientMacName.setStatus("current")
_WingStatsDevWlClientVendor_Type = DisplayString
_WingStatsDevWlClientVendor_Object = MibTableColumn
wingStatsDevWlClientVendor = _WingStatsDevWlClientVendor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 3),
    _WingStatsDevWlClientVendor_Type()
)
wingStatsDevWlClientVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientVendor.setStatus("current")
_WingStatsDevWlClientBss_Type = MacAddress
_WingStatsDevWlClientBss_Object = MibTableColumn
wingStatsDevWlClientBss = _WingStatsDevWlClientBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 4),
    _WingStatsDevWlClientBss_Type()
)
wingStatsDevWlClientBss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientBss.setStatus("current")
_WingStatsDevWlClientAp_Type = MacAddress
_WingStatsDevWlClientAp_Object = MibTableColumn
wingStatsDevWlClientAp = _WingStatsDevWlClientAp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 5),
    _WingStatsDevWlClientAp_Type()
)
wingStatsDevWlClientAp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientAp.setStatus("current")
_WingStatsDevWlClientRadioNum_Type = Unsigned32
_WingStatsDevWlClientRadioNum_Object = MibTableColumn
wingStatsDevWlClientRadioNum = _WingStatsDevWlClientRadioNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 6),
    _WingStatsDevWlClientRadioNum_Type()
)
wingStatsDevWlClientRadioNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientRadioNum.setStatus("current")
_WingStatsDevWlClientRadioType_Type = DisplayString
_WingStatsDevWlClientRadioType_Object = MibTableColumn
wingStatsDevWlClientRadioType = _WingStatsDevWlClientRadioType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 7),
    _WingStatsDevWlClientRadioType_Type()
)
wingStatsDevWlClientRadioType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientRadioType.setStatus("current")
_WingStatsDevWlClientRadioEnc_Type = DisplayString
_WingStatsDevWlClientRadioEnc_Object = MibTableColumn
wingStatsDevWlClientRadioEnc = _WingStatsDevWlClientRadioEnc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 8),
    _WingStatsDevWlClientRadioEnc_Type()
)
wingStatsDevWlClientRadioEnc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientRadioEnc.setStatus("current")
_WingStatsDevWlClientRadioAuth_Type = DisplayString
_WingStatsDevWlClientRadioAuth_Object = MibTableColumn
wingStatsDevWlClientRadioAuth = _WingStatsDevWlClientRadioAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 9),
    _WingStatsDevWlClientRadioAuth_Type()
)
wingStatsDevWlClientRadioAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientRadioAuth.setStatus("current")
_WingStatsDevWlClientWlan_Type = DisplayString
_WingStatsDevWlClientWlan_Object = MibTableColumn
wingStatsDevWlClientWlan = _WingStatsDevWlClientWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 10),
    _WingStatsDevWlClientWlan_Type()
)
wingStatsDevWlClientWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientWlan.setStatus("current")
_WingStatsDevWlClientState_Type = DisplayString
_WingStatsDevWlClientState_Object = MibTableColumn
wingStatsDevWlClientState = _WingStatsDevWlClientState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 11),
    _WingStatsDevWlClientState_Type()
)
wingStatsDevWlClientState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientState.setStatus("current")
_WingStatsDevWlClientHotspotAuthed_Type = TruthValue
_WingStatsDevWlClientHotspotAuthed_Object = MibTableColumn
wingStatsDevWlClientHotspotAuthed = _WingStatsDevWlClientHotspotAuthed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 12),
    _WingStatsDevWlClientHotspotAuthed_Type()
)
wingStatsDevWlClientHotspotAuthed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientHotspotAuthed.setStatus("current")
_WingStatsDevWlClientVlan_Type = Unsigned32
_WingStatsDevWlClientVlan_Object = MibTableColumn
wingStatsDevWlClientVlan = _WingStatsDevWlClientVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 13),
    _WingStatsDevWlClientVlan_Type()
)
wingStatsDevWlClientVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientVlan.setStatus("current")
_WingStatsDevWlClientUserName_Type = DisplayString
_WingStatsDevWlClientUserName_Object = MibTableColumn
wingStatsDevWlClientUserName = _WingStatsDevWlClientUserName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 14),
    _WingStatsDevWlClientUserName_Type()
)
wingStatsDevWlClientUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientUserName.setStatus("current")
_WingStatsDevWlClientIp_Type = DisplayString
_WingStatsDevWlClientIp_Object = MibTableColumn
wingStatsDevWlClientIp = _WingStatsDevWlClientIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 15),
    _WingStatsDevWlClientIp_Type()
)
wingStatsDevWlClientIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientIp.setStatus("current")
_WingStatsDevWlClientRfdName_Type = DisplayString
_WingStatsDevWlClientRfdName_Object = MibTableColumn
wingStatsDevWlClientRfdName = _WingStatsDevWlClientRfdName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 16),
    _WingStatsDevWlClientRfdName_Type()
)
wingStatsDevWlClientRfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientRfdName.setStatus("current")
_WingStatsDevWlClientHostname_Type = DisplayString
_WingStatsDevWlClientHostname_Object = MibTableColumn
wingStatsDevWlClientHostname = _WingStatsDevWlClientHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 17),
    _WingStatsDevWlClientHostname_Type()
)
wingStatsDevWlClientHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientHostname.setStatus("current")
_WingStatsDevWlClientLocation_Type = DisplayString
_WingStatsDevWlClientLocation_Object = MibTableColumn
wingStatsDevWlClientLocation = _WingStatsDevWlClientLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 18),
    _WingStatsDevWlClientLocation_Type()
)
wingStatsDevWlClientLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientLocation.setStatus("current")
_WingStatsDevWlClientRadioId_Type = DisplayString
_WingStatsDevWlClientRadioId_Object = MibTableColumn
wingStatsDevWlClientRadioId = _WingStatsDevWlClientRadioId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 19),
    _WingStatsDevWlClientRadioId_Type()
)
wingStatsDevWlClientRadioId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientRadioId.setStatus("current")
_WingStatsDevWlClientRadioAlias_Type = DisplayString
_WingStatsDevWlClientRadioAlias_Object = MibTableColumn
wingStatsDevWlClientRadioAlias = _WingStatsDevWlClientRadioAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 3, 1, 1, 20),
    _WingStatsDevWlClientRadioAlias_Type()
)
wingStatsDevWlClientRadioAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientRadioAlias.setStatus("current")
_WingStatsDevWlClientStat_ObjectIdentity = ObjectIdentity
wingStatsDevWlClientStat = _WingStatsDevWlClientStat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5)
)
_WingStatsDevWlClientStatTable_Object = MibTable
wingStatsDevWlClientStatTable = _WingStatsDevWlClientStatTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTable.setStatus("current")
_WingStatsDevWlClientStatEntry_Object = MibTableRow
wingStatsDevWlClientStatEntry = _WingStatsDevWlClientStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1)
)
wingStatsDevWlClientStatEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlClientStatMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatEntry.setStatus("current")
_WingStatsDevWlClientStatMac_Type = MacAddress
_WingStatsDevWlClientStatMac_Object = MibTableColumn
wingStatsDevWlClientStatMac = _WingStatsDevWlClientStatMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 1),
    _WingStatsDevWlClientStatMac_Type()
)
wingStatsDevWlClientStatMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatMac.setStatus("current")


class _WingStatsDevWlClientStatMacName_Type(DisplayString):
    """Custom type wingStatsDevWlClientStatMacName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlClientStatMacName_Type.__name__ = "DisplayString"
_WingStatsDevWlClientStatMacName_Object = MibTableColumn
wingStatsDevWlClientStatMacName = _WingStatsDevWlClientStatMacName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 2),
    _WingStatsDevWlClientStatMacName_Type()
)
wingStatsDevWlClientStatMacName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatMacName.setStatus("current")


class _WingStatsDevWlClientStatVendor_Type(DisplayString):
    """Custom type wingStatsDevWlClientStatVendor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlClientStatVendor_Type.__name__ = "DisplayString"
_WingStatsDevWlClientStatVendor_Object = MibTableColumn
wingStatsDevWlClientStatVendor = _WingStatsDevWlClientStatVendor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 3),
    _WingStatsDevWlClientStatVendor_Type()
)
wingStatsDevWlClientStatVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatVendor.setStatus("current")
_WingStatsDevWlClientStatAp_Type = MacAddress
_WingStatsDevWlClientStatAp_Object = MibTableColumn
wingStatsDevWlClientStatAp = _WingStatsDevWlClientStatAp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 4),
    _WingStatsDevWlClientStatAp_Type()
)
wingStatsDevWlClientStatAp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatAp.setStatus("current")
_WingStatsDevWlClientStatTxBytes_Type = Counter64
_WingStatsDevWlClientStatTxBytes_Object = MibTableColumn
wingStatsDevWlClientStatTxBytes = _WingStatsDevWlClientStatTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 5),
    _WingStatsDevWlClientStatTxBytes_Type()
)
wingStatsDevWlClientStatTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTxBytes.setStatus("current")
_WingStatsDevWlClientStatRxBytes_Type = Counter64
_WingStatsDevWlClientStatRxBytes_Object = MibTableColumn
wingStatsDevWlClientStatRxBytes = _WingStatsDevWlClientStatRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 6),
    _WingStatsDevWlClientStatRxBytes_Type()
)
wingStatsDevWlClientStatRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatRxBytes.setStatus("current")
_WingStatsDevWlClientStatTxPkts_Type = Counter32
_WingStatsDevWlClientStatTxPkts_Object = MibTableColumn
wingStatsDevWlClientStatTxPkts = _WingStatsDevWlClientStatTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 7),
    _WingStatsDevWlClientStatTxPkts_Type()
)
wingStatsDevWlClientStatTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTxPkts.setStatus("current")
_WingStatsDevWlClientStatRxPkts_Type = Counter32
_WingStatsDevWlClientStatRxPkts_Object = MibTableColumn
wingStatsDevWlClientStatRxPkts = _WingStatsDevWlClientStatRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 8),
    _WingStatsDevWlClientStatRxPkts_Type()
)
wingStatsDevWlClientStatRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatRxPkts.setStatus("current")
_WingStatsDevWlClientStatTxDropped_Type = Counter32
_WingStatsDevWlClientStatTxDropped_Object = MibTableColumn
wingStatsDevWlClientStatTxDropped = _WingStatsDevWlClientStatTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 9),
    _WingStatsDevWlClientStatTxDropped_Type()
)
wingStatsDevWlClientStatTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTxDropped.setStatus("current")
_WingStatsDevWlClientStatRxErrors_Type = Counter32
_WingStatsDevWlClientStatRxErrors_Object = MibTableColumn
wingStatsDevWlClientStatRxErrors = _WingStatsDevWlClientStatRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 10),
    _WingStatsDevWlClientStatRxErrors_Type()
)
wingStatsDevWlClientStatRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatRxErrors.setStatus("current")
_WingStatsDevWlClientStatTIndex_Type = Integer32
_WingStatsDevWlClientStatTIndex_Object = MibTableColumn
wingStatsDevWlClientStatTIndex = _WingStatsDevWlClientStatTIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 11),
    _WingStatsDevWlClientStatTIndex_Type()
)
wingStatsDevWlClientStatTIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTIndex.setStatus("current")
_WingStatsDevWlClientStatTxBps_Type = Unsigned32
_WingStatsDevWlClientStatTxBps_Object = MibTableColumn
wingStatsDevWlClientStatTxBps = _WingStatsDevWlClientStatTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 12),
    _WingStatsDevWlClientStatTxBps_Type()
)
wingStatsDevWlClientStatTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTxBps.setUnits("kbps")
_WingStatsDevWlClientStatRxBps_Type = Unsigned32
_WingStatsDevWlClientStatRxBps_Object = MibTableColumn
wingStatsDevWlClientStatRxBps = _WingStatsDevWlClientStatRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 13),
    _WingStatsDevWlClientStatRxBps_Type()
)
wingStatsDevWlClientStatRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatRxBps.setUnits("kbps")
_WingStatsDevWlClientStatSignal_Type = Integer32
_WingStatsDevWlClientStatSignal_Object = MibTableColumn
wingStatsDevWlClientStatSignal = _WingStatsDevWlClientStatSignal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 14),
    _WingStatsDevWlClientStatSignal_Type()
)
wingStatsDevWlClientStatSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatSignal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatSignal.setUnits("dbm")
_WingStatsDevWlClientStatNoise_Type = Integer32
_WingStatsDevWlClientStatNoise_Object = MibTableColumn
wingStatsDevWlClientStatNoise = _WingStatsDevWlClientStatNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 15),
    _WingStatsDevWlClientStatNoise_Type()
)
wingStatsDevWlClientStatNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatNoise.setUnits("dbm")
_WingStatsDevWlClientStatSnr_Type = Integer32
_WingStatsDevWlClientStatSnr_Object = MibTableColumn
wingStatsDevWlClientStatSnr = _WingStatsDevWlClientStatSnr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 16),
    _WingStatsDevWlClientStatSnr_Type()
)
wingStatsDevWlClientStatSnr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatSnr.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatSnr.setUnits("db")
_WingStatsDevWlClientStatTxRate_Type = Unsigned32
_WingStatsDevWlClientStatTxRate_Object = MibTableColumn
wingStatsDevWlClientStatTxRate = _WingStatsDevWlClientStatTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 17),
    _WingStatsDevWlClientStatTxRate_Type()
)
wingStatsDevWlClientStatTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatTxRate.setUnits("Mbps")
_WingStatsDevWlClientStatRxRate_Type = Unsigned32
_WingStatsDevWlClientStatRxRate_Object = MibTableColumn
wingStatsDevWlClientStatRxRate = _WingStatsDevWlClientStatRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 18),
    _WingStatsDevWlClientStatRxRate_Type()
)
wingStatsDevWlClientStatRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatRxRate.setUnits("Mbps")
_WingStatsDevWlClientStatErrorRate_Type = Unsigned32
_WingStatsDevWlClientStatErrorRate_Object = MibTableColumn
wingStatsDevWlClientStatErrorRate = _WingStatsDevWlClientStatErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 19),
    _WingStatsDevWlClientStatErrorRate_Type()
)
wingStatsDevWlClientStatErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatErrorRate.setStatus("current")
_WingStatsDevWlClientStatQIndex_Type = Integer32
_WingStatsDevWlClientStatQIndex_Object = MibTableColumn
wingStatsDevWlClientStatQIndex = _WingStatsDevWlClientStatQIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 5, 1, 1, 20),
    _WingStatsDevWlClientStatQIndex_Type()
)
wingStatsDevWlClientStatQIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlClientStatQIndex.setStatus("current")
_WingStatsDevWlRadio_ObjectIdentity = ObjectIdentity
wingStatsDevWlRadio = _WingStatsDevWlRadio_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9)
)
_WingStatsDevWlRadioTable_Object = MibTable
wingStatsDevWlRadioTable = _WingStatsDevWlRadioTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevWlRadioTable.setStatus("current")
_WingStatsDevWlRadioEntry_Object = MibTableRow
wingStatsDevWlRadioEntry = _WingStatsDevWlRadioEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1)
)
wingStatsDevWlRadioEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlRadioId"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlRadioEntry.setStatus("current")
_WingStatsDevWlRadioId_Type = WingIdentifier
_WingStatsDevWlRadioId_Object = MibTableColumn
wingStatsDevWlRadioId = _WingStatsDevWlRadioId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 1),
    _WingStatsDevWlRadioId_Type()
)
wingStatsDevWlRadioId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioId.setStatus("current")
_WingStatsDevWlRadioDeviceMac_Type = MacAddress
_WingStatsDevWlRadioDeviceMac_Object = MibTableColumn
wingStatsDevWlRadioDeviceMac = _WingStatsDevWlRadioDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 2),
    _WingStatsDevWlRadioDeviceMac_Type()
)
wingStatsDevWlRadioDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioDeviceMac.setStatus("current")
_WingStatsDevWlRadioAlias_Type = WingIdentifier
_WingStatsDevWlRadioAlias_Object = MibTableColumn
wingStatsDevWlRadioAlias = _WingStatsDevWlRadioAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 3),
    _WingStatsDevWlRadioAlias_Type()
)
wingStatsDevWlRadioAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioAlias.setStatus("current")
_WingStatsDevWlRadioMac_Type = MacAddress
_WingStatsDevWlRadioMac_Object = MibTableColumn
wingStatsDevWlRadioMac = _WingStatsDevWlRadioMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 4),
    _WingStatsDevWlRadioMac_Type()
)
wingStatsDevWlRadioMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioMac.setStatus("current")


class _WingStatsDevWlRadioType_Type(DisplayString):
    """Custom type wingStatsDevWlRadioType based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlRadioType_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioType_Object = MibTableColumn
wingStatsDevWlRadioType = _WingStatsDevWlRadioType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 5),
    _WingStatsDevWlRadioType_Type()
)
wingStatsDevWlRadioType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioType.setStatus("current")


class _WingStatsDevWlRadioHostname_Type(DisplayString):
    """Custom type wingStatsDevWlRadioHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlRadioHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioHostname_Object = MibTableColumn
wingStatsDevWlRadioHostname = _WingStatsDevWlRadioHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 6),
    _WingStatsDevWlRadioHostname_Type()
)
wingStatsDevWlRadioHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioHostname.setStatus("current")


class _WingStatsDevWlRadioRfdName_Type(DisplayString):
    """Custom type wingStatsDevWlRadioRfdName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlRadioRfdName_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioRfdName_Object = MibTableColumn
wingStatsDevWlRadioRfdName = _WingStatsDevWlRadioRfdName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 7),
    _WingStatsDevWlRadioRfdName_Type()
)
wingStatsDevWlRadioRfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioRfdName.setStatus("current")


class _WingStatsDevWlRadioLocation_Type(DisplayString):
    """Custom type wingStatsDevWlRadioLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlRadioLocation_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioLocation_Object = MibTableColumn
wingStatsDevWlRadioLocation = _WingStatsDevWlRadioLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 8),
    _WingStatsDevWlRadioLocation_Type()
)
wingStatsDevWlRadioLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioLocation.setStatus("current")


class _WingStatsDevWlRadioState_Type(DisplayString):
    """Custom type wingStatsDevWlRadioState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlRadioState_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioState_Object = MibTableColumn
wingStatsDevWlRadioState = _WingStatsDevWlRadioState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 9),
    _WingStatsDevWlRadioState_Type()
)
wingStatsDevWlRadioState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioState.setStatus("current")


class _WingStatsDevWlRadioCurChannel_Type(DisplayString):
    """Custom type wingStatsDevWlRadioCurChannel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_WingStatsDevWlRadioCurChannel_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioCurChannel_Object = MibTableColumn
wingStatsDevWlRadioCurChannel = _WingStatsDevWlRadioCurChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 10),
    _WingStatsDevWlRadioCurChannel_Type()
)
wingStatsDevWlRadioCurChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioCurChannel.setStatus("current")


class _WingStatsDevWlRadioConfigChannel_Type(DisplayString):
    """Custom type wingStatsDevWlRadioConfigChannel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlRadioConfigChannel_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioConfigChannel_Object = MibTableColumn
wingStatsDevWlRadioConfigChannel = _WingStatsDevWlRadioConfigChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 11),
    _WingStatsDevWlRadioConfigChannel_Type()
)
wingStatsDevWlRadioConfigChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioConfigChannel.setStatus("current")
_WingStatsDevWlRadioCurPower_Type = Unsigned32
_WingStatsDevWlRadioCurPower_Object = MibTableColumn
wingStatsDevWlRadioCurPower = _WingStatsDevWlRadioCurPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 12),
    _WingStatsDevWlRadioCurPower_Type()
)
wingStatsDevWlRadioCurPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioCurPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioCurPower.setUnits("dBm")


class _WingStatsDevWlRadioConfigPower_Type(DisplayString):
    """Custom type wingStatsDevWlRadioConfigPower based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_WingStatsDevWlRadioConfigPower_Type.__name__ = "DisplayString"
_WingStatsDevWlRadioConfigPower_Object = MibTableColumn
wingStatsDevWlRadioConfigPower = _WingStatsDevWlRadioConfigPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 13),
    _WingStatsDevWlRadioConfigPower_Type()
)
wingStatsDevWlRadioConfigPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioConfigPower.setStatus("current")
_WingStatsDevWlRadioMaxUserRate_Type = Unsigned32
_WingStatsDevWlRadioMaxUserRate_Object = MibTableColumn
wingStatsDevWlRadioMaxUserRate = _WingStatsDevWlRadioMaxUserRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 14),
    _WingStatsDevWlRadioMaxUserRate_Type()
)
wingStatsDevWlRadioMaxUserRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioMaxUserRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioMaxUserRate.setUnits("kbps")
_WingStatsDevWlRadioNumClient_Type = Unsigned32
_WingStatsDevWlRadioNumClient_Object = MibTableColumn
wingStatsDevWlRadioNumClient = _WingStatsDevWlRadioNumClient_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 15),
    _WingStatsDevWlRadioNumClient_Type()
)
wingStatsDevWlRadioNumClient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioNumClient.setStatus("current")
_WingStatsDevWlRadioProtocol_Type = Unsigned32
_WingStatsDevWlRadioProtocol_Object = MibTableColumn
wingStatsDevWlRadioProtocol = _WingStatsDevWlRadioProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 9, 1, 1, 16),
    _WingStatsDevWlRadioProtocol_Type()
)
wingStatsDevWlRadioProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioProtocol.setStatus("current")
_WingStatsDevWlRadioStat_ObjectIdentity = ObjectIdentity
wingStatsDevWlRadioStat = _WingStatsDevWlRadioStat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10)
)
_WingStatsDevWlRadioStatTable_Object = MibTable
wingStatsDevWlRadioStatTable = _WingStatsDevWlRadioStatTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTable.setStatus("current")
_WingStatsDevWlRadioStatEntry_Object = MibTableRow
wingStatsDevWlRadioStatEntry = _WingStatsDevWlRadioStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1)
)
wingStatsDevWlRadioStatEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlRadioStatId"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatEntry.setStatus("current")
_WingStatsDevWlRadioStatId_Type = WingIdentifier
_WingStatsDevWlRadioStatId_Object = MibTableColumn
wingStatsDevWlRadioStatId = _WingStatsDevWlRadioStatId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 1),
    _WingStatsDevWlRadioStatId_Type()
)
wingStatsDevWlRadioStatId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatId.setStatus("current")
_WingStatsDevWlRadioStatDeviceMac_Type = MacAddress
_WingStatsDevWlRadioStatDeviceMac_Object = MibTableColumn
wingStatsDevWlRadioStatDeviceMac = _WingStatsDevWlRadioStatDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 2),
    _WingStatsDevWlRadioStatDeviceMac_Type()
)
wingStatsDevWlRadioStatDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatDeviceMac.setStatus("current")
_WingStatsDevWlRadioStatAlias_Type = WingIdentifier
_WingStatsDevWlRadioStatAlias_Object = MibTableColumn
wingStatsDevWlRadioStatAlias = _WingStatsDevWlRadioStatAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 3),
    _WingStatsDevWlRadioStatAlias_Type()
)
wingStatsDevWlRadioStatAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatAlias.setStatus("current")
_WingStatsDevWlRadioStatMac_Type = MacAddress
_WingStatsDevWlRadioStatMac_Object = MibTableColumn
wingStatsDevWlRadioStatMac = _WingStatsDevWlRadioStatMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 4),
    _WingStatsDevWlRadioStatMac_Type()
)
wingStatsDevWlRadioStatMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatMac.setStatus("current")
_WingStatsDevWlRadioStatType_Type = DisplayString
_WingStatsDevWlRadioStatType_Object = MibTableColumn
wingStatsDevWlRadioStatType = _WingStatsDevWlRadioStatType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 5),
    _WingStatsDevWlRadioStatType_Type()
)
wingStatsDevWlRadioStatType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatType.setStatus("current")
_WingStatsDevWlRadioStatTxBytes_Type = Counter64
_WingStatsDevWlRadioStatTxBytes_Object = MibTableColumn
wingStatsDevWlRadioStatTxBytes = _WingStatsDevWlRadioStatTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 6),
    _WingStatsDevWlRadioStatTxBytes_Type()
)
wingStatsDevWlRadioStatTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxBytes.setStatus("current")
_WingStatsDevWlRadioStatRxBytes_Type = Counter64
_WingStatsDevWlRadioStatRxBytes_Object = MibTableColumn
wingStatsDevWlRadioStatRxBytes = _WingStatsDevWlRadioStatRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 7),
    _WingStatsDevWlRadioStatRxBytes_Type()
)
wingStatsDevWlRadioStatRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatRxBytes.setStatus("current")
_WingStatsDevWlRadioStatTxPkts_Type = Counter32
_WingStatsDevWlRadioStatTxPkts_Object = MibTableColumn
wingStatsDevWlRadioStatTxPkts = _WingStatsDevWlRadioStatTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 8),
    _WingStatsDevWlRadioStatTxPkts_Type()
)
wingStatsDevWlRadioStatTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxPkts.setStatus("current")
_WingStatsDevWlRadioStatRxPkts_Type = Counter32
_WingStatsDevWlRadioStatRxPkts_Object = MibTableColumn
wingStatsDevWlRadioStatRxPkts = _WingStatsDevWlRadioStatRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 9),
    _WingStatsDevWlRadioStatRxPkts_Type()
)
wingStatsDevWlRadioStatRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatRxPkts.setStatus("current")
_WingStatsDevWlRadioStatTxDropped_Type = Counter32
_WingStatsDevWlRadioStatTxDropped_Object = MibTableColumn
wingStatsDevWlRadioStatTxDropped = _WingStatsDevWlRadioStatTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 10),
    _WingStatsDevWlRadioStatTxDropped_Type()
)
wingStatsDevWlRadioStatTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxDropped.setStatus("current")
_WingStatsDevWlRadioStatRxErrors_Type = Counter32
_WingStatsDevWlRadioStatRxErrors_Object = MibTableColumn
wingStatsDevWlRadioStatRxErrors = _WingStatsDevWlRadioStatRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 11),
    _WingStatsDevWlRadioStatRxErrors_Type()
)
wingStatsDevWlRadioStatRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatRxErrors.setStatus("current")
_WingStatsDevWlRadioStatTIndex_Type = Integer32
_WingStatsDevWlRadioStatTIndex_Object = MibTableColumn
wingStatsDevWlRadioStatTIndex = _WingStatsDevWlRadioStatTIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 12),
    _WingStatsDevWlRadioStatTIndex_Type()
)
wingStatsDevWlRadioStatTIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTIndex.setStatus("current")
_WingStatsDevWlRadioStatTxBps_Type = Unsigned32
_WingStatsDevWlRadioStatTxBps_Object = MibTableColumn
wingStatsDevWlRadioStatTxBps = _WingStatsDevWlRadioStatTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 13),
    _WingStatsDevWlRadioStatTxBps_Type()
)
wingStatsDevWlRadioStatTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxBps.setUnits("kbps")
_WingStatsDevWlRadioStatRxBps_Type = Unsigned32
_WingStatsDevWlRadioStatRxBps_Object = MibTableColumn
wingStatsDevWlRadioStatRxBps = _WingStatsDevWlRadioStatRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 14),
    _WingStatsDevWlRadioStatRxBps_Type()
)
wingStatsDevWlRadioStatRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatRxBps.setUnits("kbps")
_WingStatsDevWlRadioStatSignal_Type = Integer32
_WingStatsDevWlRadioStatSignal_Object = MibTableColumn
wingStatsDevWlRadioStatSignal = _WingStatsDevWlRadioStatSignal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 15),
    _WingStatsDevWlRadioStatSignal_Type()
)
wingStatsDevWlRadioStatSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatSignal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatSignal.setUnits("dbm")
_WingStatsDevWlRadioStatNoise_Type = Integer32
_WingStatsDevWlRadioStatNoise_Object = MibTableColumn
wingStatsDevWlRadioStatNoise = _WingStatsDevWlRadioStatNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 16),
    _WingStatsDevWlRadioStatNoise_Type()
)
wingStatsDevWlRadioStatNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNoise.setUnits("dbm")
_WingStatsDevWlRadioStatSnr_Type = Integer32
_WingStatsDevWlRadioStatSnr_Object = MibTableColumn
wingStatsDevWlRadioStatSnr = _WingStatsDevWlRadioStatSnr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 17),
    _WingStatsDevWlRadioStatSnr_Type()
)
wingStatsDevWlRadioStatSnr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatSnr.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatSnr.setUnits("db")
_WingStatsDevWlRadioStatTxRate_Type = Unsigned32
_WingStatsDevWlRadioStatTxRate_Object = MibTableColumn
wingStatsDevWlRadioStatTxRate = _WingStatsDevWlRadioStatTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 18),
    _WingStatsDevWlRadioStatTxRate_Type()
)
wingStatsDevWlRadioStatTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxRate.setUnits("Mbps")
_WingStatsDevWlRadioStatRxRate_Type = Unsigned32
_WingStatsDevWlRadioStatRxRate_Object = MibTableColumn
wingStatsDevWlRadioStatRxRate = _WingStatsDevWlRadioStatRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 19),
    _WingStatsDevWlRadioStatRxRate_Type()
)
wingStatsDevWlRadioStatRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatRxRate.setUnits("Mbps")
_WingStatsDevWlRadioStatErrorRate_Type = Unsigned32
_WingStatsDevWlRadioStatErrorRate_Object = MibTableColumn
wingStatsDevWlRadioStatErrorRate = _WingStatsDevWlRadioStatErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 20),
    _WingStatsDevWlRadioStatErrorRate_Type()
)
wingStatsDevWlRadioStatErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatErrorRate.setStatus("current")
_WingStatsDevWlRadioStatQIndex_Type = Integer32
_WingStatsDevWlRadioStatQIndex_Object = MibTableColumn
wingStatsDevWlRadioStatQIndex = _WingStatsDevWlRadioStatQIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 21),
    _WingStatsDevWlRadioStatQIndex_Type()
)
wingStatsDevWlRadioStatQIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatQIndex.setStatus("current")
_WingStatsDevWlRadioStatNumClients_Type = Unsigned32
_WingStatsDevWlRadioStatNumClients_Object = MibTableColumn
wingStatsDevWlRadioStatNumClients = _WingStatsDevWlRadioStatNumClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 22),
    _WingStatsDevWlRadioStatNumClients_Type()
)
wingStatsDevWlRadioStatNumClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNumClients.setStatus("current")
_WingStatsDevWlRadioStatNumBClients_Type = Unsigned32
_WingStatsDevWlRadioStatNumBClients_Object = MibTableColumn
wingStatsDevWlRadioStatNumBClients = _WingStatsDevWlRadioStatNumBClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 23),
    _WingStatsDevWlRadioStatNumBClients_Type()
)
wingStatsDevWlRadioStatNumBClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNumBClients.setStatus("current")
_WingStatsDevWlRadioStatNumBgClients_Type = Unsigned32
_WingStatsDevWlRadioStatNumBgClients_Object = MibTableColumn
wingStatsDevWlRadioStatNumBgClients = _WingStatsDevWlRadioStatNumBgClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 24),
    _WingStatsDevWlRadioStatNumBgClients_Type()
)
wingStatsDevWlRadioStatNumBgClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNumBgClients.setStatus("current")
_WingStatsDevWlRadioStatNumBgnClients_Type = Unsigned32
_WingStatsDevWlRadioStatNumBgnClients_Object = MibTableColumn
wingStatsDevWlRadioStatNumBgnClients = _WingStatsDevWlRadioStatNumBgnClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 25),
    _WingStatsDevWlRadioStatNumBgnClients_Type()
)
wingStatsDevWlRadioStatNumBgnClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNumBgnClients.setStatus("current")
_WingStatsDevWlRadioStatNumAClients_Type = Unsigned32
_WingStatsDevWlRadioStatNumAClients_Object = MibTableColumn
wingStatsDevWlRadioStatNumAClients = _WingStatsDevWlRadioStatNumAClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 26),
    _WingStatsDevWlRadioStatNumAClients_Type()
)
wingStatsDevWlRadioStatNumAClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNumAClients.setStatus("current")
_WingStatsDevWlRadioStatNumAnClients_Type = Unsigned32
_WingStatsDevWlRadioStatNumAnClients_Object = MibTableColumn
wingStatsDevWlRadioStatNumAnClients = _WingStatsDevWlRadioStatNumAnClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 27),
    _WingStatsDevWlRadioStatNumAnClients_Type()
)
wingStatsDevWlRadioStatNumAnClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatNumAnClients.setStatus("current")
_WingStatsDevWlRadioStatMediumErrorRate_Type = Unsigned32
_WingStatsDevWlRadioStatMediumErrorRate_Object = MibTableColumn
wingStatsDevWlRadioStatMediumErrorRate = _WingStatsDevWlRadioStatMediumErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 28),
    _WingStatsDevWlRadioStatMediumErrorRate_Type()
)
wingStatsDevWlRadioStatMediumErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatMediumErrorRate.setStatus("current")
_WingStatsDevWlRadioStatTxRetries_Type = Counter64
_WingStatsDevWlRadioStatTxRetries_Object = MibTableColumn
wingStatsDevWlRadioStatTxRetries = _WingStatsDevWlRadioStatTxRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 29),
    _WingStatsDevWlRadioStatTxRetries_Type()
)
wingStatsDevWlRadioStatTxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxRetries.setStatus("current")
_WingStatsDevWlRadioStatTxRetriedBytes_Type = Counter64
_WingStatsDevWlRadioStatTxRetriedBytes_Object = MibTableColumn
wingStatsDevWlRadioStatTxRetriedBytes = _WingStatsDevWlRadioStatTxRetriedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 10, 1, 1, 30),
    _WingStatsDevWlRadioStatTxRetriedBytes_Type()
)
wingStatsDevWlRadioStatTxRetriedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlRadioStatTxRetriedBytes.setStatus("current")
_WingStatsDevWlApDetectTable_Object = MibTable
wingStatsDevWlApDetectTable = _WingStatsDevWlApDetectTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20)
)
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectTable.setStatus("current")
_WingStatsDevWlApDetectEntry_Object = MibTableRow
wingStatsDevWlApDetectEntry = _WingStatsDevWlApDetectEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1)
)
wingStatsDevWlApDetectEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlApDetectMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectEntry.setStatus("current")
_WingStatsDevWlApDetectMac_Type = MacAddress
_WingStatsDevWlApDetectMac_Object = MibTableColumn
wingStatsDevWlApDetectMac = _WingStatsDevWlApDetectMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 1),
    _WingStatsDevWlApDetectMac_Type()
)
wingStatsDevWlApDetectMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectMac.setStatus("current")


class _WingStatsDevWlApDetectVendor_Type(DisplayString):
    """Custom type wingStatsDevWlApDetectVendor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_WingStatsDevWlApDetectVendor_Type.__name__ = "DisplayString"
_WingStatsDevWlApDetectVendor_Object = MibTableColumn
wingStatsDevWlApDetectVendor = _WingStatsDevWlApDetectVendor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 2),
    _WingStatsDevWlApDetectVendor_Type()
)
wingStatsDevWlApDetectVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectVendor.setStatus("current")


class _WingStatsDevWlApDetectChannel_Type(DisplayString):
    """Custom type wingStatsDevWlApDetectChannel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_WingStatsDevWlApDetectChannel_Type.__name__ = "DisplayString"
_WingStatsDevWlApDetectChannel_Object = MibTableColumn
wingStatsDevWlApDetectChannel = _WingStatsDevWlApDetectChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 3),
    _WingStatsDevWlApDetectChannel_Type()
)
wingStatsDevWlApDetectChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectChannel.setStatus("current")
_WingStatsDevWlApDetectRadioType_Type = DisplayString
_WingStatsDevWlApDetectRadioType_Object = MibTableColumn
wingStatsDevWlApDetectRadioType = _WingStatsDevWlApDetectRadioType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 4),
    _WingStatsDevWlApDetectRadioType_Type()
)
wingStatsDevWlApDetectRadioType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectRadioType.setStatus("current")
_WingStatsDevWlApDetectApMode_Type = DisplayString
_WingStatsDevWlApDetectApMode_Object = MibTableColumn
wingStatsDevWlApDetectApMode = _WingStatsDevWlApDetectApMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 5),
    _WingStatsDevWlApDetectApMode_Type()
)
wingStatsDevWlApDetectApMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectApMode.setStatus("current")


class _WingStatsDevWlApDetectSsid_Type(DisplayString):
    """Custom type wingStatsDevWlApDetectSsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 255),
    )


_WingStatsDevWlApDetectSsid_Type.__name__ = "DisplayString"
_WingStatsDevWlApDetectSsid_Object = MibTableColumn
wingStatsDevWlApDetectSsid = _WingStatsDevWlApDetectSsid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 6),
    _WingStatsDevWlApDetectSsid_Type()
)
wingStatsDevWlApDetectSsid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectSsid.setStatus("current")
_WingStatsDevWlApDetectRssi_Type = Integer32
_WingStatsDevWlApDetectRssi_Object = MibTableColumn
wingStatsDevWlApDetectRssi = _WingStatsDevWlApDetectRssi_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 7),
    _WingStatsDevWlApDetectRssi_Type()
)
wingStatsDevWlApDetectRssi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectRssi.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectRssi.setUnits("dBm")
_WingStatsDevWlApDetectLastSeen_Type = Unsigned32
_WingStatsDevWlApDetectLastSeen_Object = MibTableColumn
wingStatsDevWlApDetectLastSeen = _WingStatsDevWlApDetectLastSeen_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 8),
    _WingStatsDevWlApDetectLastSeen_Type()
)
wingStatsDevWlApDetectLastSeen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectLastSeen.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectLastSeen.setUnits("seconds")
_WingStatsDevWlApDetectFirstSeen_Type = Unsigned32
_WingStatsDevWlApDetectFirstSeen_Object = MibTableColumn
wingStatsDevWlApDetectFirstSeen = _WingStatsDevWlApDetectFirstSeen_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 9),
    _WingStatsDevWlApDetectFirstSeen_Type()
)
wingStatsDevWlApDetectFirstSeen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectFirstSeen.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectFirstSeen.setUnits("seconds")
_WingStatsDevWlApDetectEncryption_Type = TruthValue
_WingStatsDevWlApDetectEncryption_Object = MibTableColumn
wingStatsDevWlApDetectEncryption = _WingStatsDevWlApDetectEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 10),
    _WingStatsDevWlApDetectEncryption_Type()
)
wingStatsDevWlApDetectEncryption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectEncryption.setStatus("current")
_WingStatsDevWlApDetectReportingApMac_Type = MacAddress
_WingStatsDevWlApDetectReportingApMac_Object = MibTableColumn
wingStatsDevWlApDetectReportingApMac = _WingStatsDevWlApDetectReportingApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 11),
    _WingStatsDevWlApDetectReportingApMac_Type()
)
wingStatsDevWlApDetectReportingApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectReportingApMac.setStatus("current")
_WingStatsDevWlApDetectReportingApRadioNum_Type = Unsigned32
_WingStatsDevWlApDetectReportingApRadioNum_Object = MibTableColumn
wingStatsDevWlApDetectReportingApRadioNum = _WingStatsDevWlApDetectReportingApRadioNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 20, 1, 12),
    _WingStatsDevWlApDetectReportingApRadioNum_Type()
)
wingStatsDevWlApDetectReportingApRadioNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlApDetectReportingApRadioNum.setStatus("current")
_WingStatsDevWlMcx_ObjectIdentity = ObjectIdentity
wingStatsDevWlMcx = _WingStatsDevWlMcx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21)
)
_WingStatsDevWlMcxMeshpointTable_Object = MibTable
wingStatsDevWlMcxMeshpointTable = _WingStatsDevWlMcxMeshpointTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointTable.setStatus("current")
_WingStatsDevWlMcxMeshpointEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointEntry = _WingStatsDevWlMcxMeshpointEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1)
)
wingStatsDevWlMcxMeshpointEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointMpid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointMpid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMpid = _WingStatsDevWlMcxMeshpointMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 1),
    _WingStatsDevWlMcxMeshpointMpid_Type()
)
wingStatsDevWlMcxMeshpointMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointName = _WingStatsDevWlMcxMeshpointName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 3),
    _WingStatsDevWlMcxMeshpointName_Type()
)
wingStatsDevWlMcxMeshpointName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointName.setStatus("current")


class _WingStatsDevWlMcxMeshpointHostname_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsDevWlMcxMeshpointHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointHostname_Object = MibTableColumn
wingStatsDevWlMcxMeshpointHostname = _WingStatsDevWlMcxMeshpointHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 4),
    _WingStatsDevWlMcxMeshpointHostname_Type()
)
wingStatsDevWlMcxMeshpointHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointHostname.setStatus("current")
_WingStatsDevWlMcxMeshpointDeviceMac_Type = DisplayString
_WingStatsDevWlMcxMeshpointDeviceMac_Object = MibTableColumn
wingStatsDevWlMcxMeshpointDeviceMac = _WingStatsDevWlMcxMeshpointDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 5),
    _WingStatsDevWlMcxMeshpointDeviceMac_Type()
)
wingStatsDevWlMcxMeshpointDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointDeviceMac.setStatus("current")
_WingStatsDevWlMcxMeshpointIsRoot_Type = TruthValue
_WingStatsDevWlMcxMeshpointIsRoot_Object = MibTableColumn
wingStatsDevWlMcxMeshpointIsRoot = _WingStatsDevWlMcxMeshpointIsRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 6),
    _WingStatsDevWlMcxMeshpointIsRoot_Type()
)
wingStatsDevWlMcxMeshpointIsRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointIsRoot.setStatus("current")
_WingStatsDevWlMcxMeshpointIsCfgRoot_Type = TruthValue
_WingStatsDevWlMcxMeshpointIsCfgRoot_Object = MibTableColumn
wingStatsDevWlMcxMeshpointIsCfgRoot = _WingStatsDevWlMcxMeshpointIsCfgRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 7),
    _WingStatsDevWlMcxMeshpointIsCfgRoot_Type()
)
wingStatsDevWlMcxMeshpointIsCfgRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointIsCfgRoot.setStatus("current")
_WingStatsDevWlMcxMeshpointRootMpid_Type = DisplayString
_WingStatsDevWlMcxMeshpointRootMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootMpid = _WingStatsDevWlMcxMeshpointRootMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 8),
    _WingStatsDevWlMcxMeshpointRootMpid_Type()
)
wingStatsDevWlMcxMeshpointRootMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointNextHop_Type = DisplayString
_WingStatsDevWlMcxMeshpointNextHop_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNextHop = _WingStatsDevWlMcxMeshpointNextHop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 9),
    _WingStatsDevWlMcxMeshpointNextHop_Type()
)
wingStatsDevWlMcxMeshpointNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNextHop.setStatus("current")
_WingStatsDevWlMcxMeshpointRootHops_Type = Unsigned32
_WingStatsDevWlMcxMeshpointRootHops_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootHops = _WingStatsDevWlMcxMeshpointRootHops_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 10),
    _WingStatsDevWlMcxMeshpointRootHops_Type()
)
wingStatsDevWlMcxMeshpointRootHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootHops.setStatus("current")
_WingStatsDevWlMcxMeshpointIfidCnt_Type = Unsigned32
_WingStatsDevWlMcxMeshpointIfidCnt_Object = MibTableColumn
wingStatsDevWlMcxMeshpointIfidCnt = _WingStatsDevWlMcxMeshpointIfidCnt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 1, 1, 11),
    _WingStatsDevWlMcxMeshpointIfidCnt_Type()
)
wingStatsDevWlMcxMeshpointIfidCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointIfidCnt.setStatus("current")
_WingStatsDevWlMcxMeshpointIfidDataTable_Object = MibTable
wingStatsDevWlMcxMeshpointIfidDataTable = _WingStatsDevWlMcxMeshpointIfidDataTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointIfidDataTable.setStatus("current")
_WingStatsDevWlMcxMeshpointIfidDataEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointIfidDataEntry = _WingStatsDevWlMcxMeshpointIfidDataEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 2, 1)
)
wingStatsDevWlMcxMeshpointIfidDataEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointMpid"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointIfid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointIfidDataEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointIfid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointIfid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointIfid = _WingStatsDevWlMcxMeshpointIfid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 2, 1, 1),
    _WingStatsDevWlMcxMeshpointIfid_Type()
)
wingStatsDevWlMcxMeshpointIfid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointIfid.setStatus("current")


class _WingStatsDevWlMcxMeshpointIfidDataDesc_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointIfidDataDesc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(24, 24),
    )
    fixed_length = 24


_WingStatsDevWlMcxMeshpointIfidDataDesc_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointIfidDataDesc_Object = MibTableColumn
wingStatsDevWlMcxMeshpointIfidDataDesc = _WingStatsDevWlMcxMeshpointIfidDataDesc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 2, 1, 3),
    _WingStatsDevWlMcxMeshpointIfidDataDesc_Type()
)
wingStatsDevWlMcxMeshpointIfidDataDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointIfidDataDesc.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTable_Object = MibTable
wingStatsDevWlMcxMeshpointStatsTable = _WingStatsDevWlMcxMeshpointStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTable.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointStatsEntry = _WingStatsDevWlMcxMeshpointStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1)
)
wingStatsDevWlMcxMeshpointStatsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointStatsName"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointStatsName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsName = _WingStatsDevWlMcxMeshpointStatsName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 1),
    _WingStatsDevWlMcxMeshpointStatsName_Type()
)
wingStatsDevWlMcxMeshpointStatsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsName.setStatus("current")


class _WingStatsDevWlMcxMeshpointStatsMeshid_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointStatsMeshid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingStatsDevWlMcxMeshpointStatsMeshid_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointStatsMeshid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsMeshid = _WingStatsDevWlMcxMeshpointStatsMeshid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 3),
    _WingStatsDevWlMcxMeshpointStatsMeshid_Type()
)
wingStatsDevWlMcxMeshpointStatsMeshid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsMeshid.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsNumRadios_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsNumRadios_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsNumRadios = _WingStatsDevWlMcxMeshpointStatsNumRadios_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 4),
    _WingStatsDevWlMcxMeshpointStatsNumRadios_Type()
)
wingStatsDevWlMcxMeshpointStatsNumRadios.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsNumRadios.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsNumNeighbors_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsNumNeighbors_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsNumNeighbors = _WingStatsDevWlMcxMeshpointStatsNumNeighbors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 5),
    _WingStatsDevWlMcxMeshpointStatsNumNeighbors_Type()
)
wingStatsDevWlMcxMeshpointStatsNumNeighbors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsNumNeighbors.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTxBytes_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsTxBytes_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTxBytes = _WingStatsDevWlMcxMeshpointStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 6),
    _WingStatsDevWlMcxMeshpointStatsTxBytes_Type()
)
wingStatsDevWlMcxMeshpointStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxBytes.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsRxBytes_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsRxBytes_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsRxBytes = _WingStatsDevWlMcxMeshpointStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 7),
    _WingStatsDevWlMcxMeshpointStatsRxBytes_Type()
)
wingStatsDevWlMcxMeshpointStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxBytes.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTxPkts_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTxPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTxPkts = _WingStatsDevWlMcxMeshpointStatsTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 8),
    _WingStatsDevWlMcxMeshpointStatsTxPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsRxPkts_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsRxPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsRxPkts = _WingStatsDevWlMcxMeshpointStatsRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 9),
    _WingStatsDevWlMcxMeshpointStatsRxPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTxDropped_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTxDropped_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTxDropped = _WingStatsDevWlMcxMeshpointStatsTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 10),
    _WingStatsDevWlMcxMeshpointStatsTxDropped_Type()
)
wingStatsDevWlMcxMeshpointStatsTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxDropped.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsRxErrors_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsRxErrors_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsRxErrors = _WingStatsDevWlMcxMeshpointStatsRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 11),
    _WingStatsDevWlMcxMeshpointStatsRxErrors_Type()
)
wingStatsDevWlMcxMeshpointStatsRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxErrors.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTIndex_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTIndex_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTIndex = _WingStatsDevWlMcxMeshpointStatsTIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 12),
    _WingStatsDevWlMcxMeshpointStatsTIndex_Type()
)
wingStatsDevWlMcxMeshpointStatsTIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTIndex.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTotalBytes_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsTotalBytes_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTotalBytes = _WingStatsDevWlMcxMeshpointStatsTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 13),
    _WingStatsDevWlMcxMeshpointStatsTotalBytes_Type()
)
wingStatsDevWlMcxMeshpointStatsTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTotalBytes.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTotalPkts_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTotalPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTotalPkts = _WingStatsDevWlMcxMeshpointStatsTotalPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 14),
    _WingStatsDevWlMcxMeshpointStatsTotalPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsTotalPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTotalPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTxBps_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTxBps_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTxBps = _WingStatsDevWlMcxMeshpointStatsTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 15),
    _WingStatsDevWlMcxMeshpointStatsTxBps_Type()
)
wingStatsDevWlMcxMeshpointStatsTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxBps.setUnits("kbps")
_WingStatsDevWlMcxMeshpointStatsRxBps_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsRxBps_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsRxBps = _WingStatsDevWlMcxMeshpointStatsRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 16),
    _WingStatsDevWlMcxMeshpointStatsRxBps_Type()
)
wingStatsDevWlMcxMeshpointStatsRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxBps.setUnits("kbps")
_WingStatsDevWlMcxMeshpointStatsTotalBps_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTotalBps_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTotalBps = _WingStatsDevWlMcxMeshpointStatsTotalBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 17),
    _WingStatsDevWlMcxMeshpointStatsTotalBps_Type()
)
wingStatsDevWlMcxMeshpointStatsTotalBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTotalBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTotalBps.setUnits("kbps")
_WingStatsDevWlMcxMeshpointStatsTxPps_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTxPps_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTxPps = _WingStatsDevWlMcxMeshpointStatsTxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 18),
    _WingStatsDevWlMcxMeshpointStatsTxPps_Type()
)
wingStatsDevWlMcxMeshpointStatsTxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxPps.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsRxPps_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsRxPps_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsRxPps = _WingStatsDevWlMcxMeshpointStatsRxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 19),
    _WingStatsDevWlMcxMeshpointStatsRxPps_Type()
)
wingStatsDevWlMcxMeshpointStatsRxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxPps.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTotalPps_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsTotalPps_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTotalPps = _WingStatsDevWlMcxMeshpointStatsTotalPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 20),
    _WingStatsDevWlMcxMeshpointStatsTotalPps_Type()
)
wingStatsDevWlMcxMeshpointStatsTotalPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTotalPps.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTxBcmcPkts_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsTxBcmcPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTxBcmcPkts = _WingStatsDevWlMcxMeshpointStatsTxBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 21),
    _WingStatsDevWlMcxMeshpointStatsTxBcmcPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsTxBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxBcmcPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsRxBcmcPkts_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsRxBcmcPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsRxBcmcPkts = _WingStatsDevWlMcxMeshpointStatsRxBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 22),
    _WingStatsDevWlMcxMeshpointStatsRxBcmcPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsRxBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxBcmcPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTotalBcmcPkts_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsTotalBcmcPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTotalBcmcPkts = _WingStatsDevWlMcxMeshpointStatsTotalBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 23),
    _WingStatsDevWlMcxMeshpointStatsTotalBcmcPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsTotalBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTotalBcmcPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTxMgmtPkts_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsTxMgmtPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTxMgmtPkts = _WingStatsDevWlMcxMeshpointStatsTxMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 24),
    _WingStatsDevWlMcxMeshpointStatsTxMgmtPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsTxMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTxMgmtPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsRxMgmtPkts_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsRxMgmtPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsRxMgmtPkts = _WingStatsDevWlMcxMeshpointStatsRxMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 25),
    _WingStatsDevWlMcxMeshpointStatsRxMgmtPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsRxMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsRxMgmtPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsTotalMgmtPkts_Type = Counter64
_WingStatsDevWlMcxMeshpointStatsTotalMgmtPkts_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsTotalMgmtPkts = _WingStatsDevWlMcxMeshpointStatsTotalMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 26),
    _WingStatsDevWlMcxMeshpointStatsTotalMgmtPkts_Type()
)
wingStatsDevWlMcxMeshpointStatsTotalMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsTotalMgmtPkts.setStatus("current")
_WingStatsDevWlMcxMeshpointStatsMaxUserRate_Type = Unsigned32
_WingStatsDevWlMcxMeshpointStatsMaxUserRate_Object = MibTableColumn
wingStatsDevWlMcxMeshpointStatsMaxUserRate = _WingStatsDevWlMcxMeshpointStatsMaxUserRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 3, 1, 27),
    _WingStatsDevWlMcxMeshpointStatsMaxUserRate_Type()
)
wingStatsDevWlMcxMeshpointStatsMaxUserRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsMaxUserRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointStatsMaxUserRate.setUnits("kbps")
_WingStatsDevWlMcxMeshpointNeighborsTable_Object = MibTable
wingStatsDevWlMcxMeshpointNeighborsTable = _WingStatsDevWlMcxMeshpointNeighborsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 4)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsTable.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointNeighborsEntry = _WingStatsDevWlMcxMeshpointNeighborsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 4, 1)
)
wingStatsDevWlMcxMeshpointNeighborsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsMpid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsMpid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointNeighborsMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsMpid = _WingStatsDevWlMcxMeshpointNeighborsMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 4, 1, 1),
    _WingStatsDevWlMcxMeshpointNeighborsMpid_Type()
)
wingStatsDevWlMcxMeshpointNeighborsMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointNeighborsName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsName = _WingStatsDevWlMcxMeshpointNeighborsName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 4, 1, 3),
    _WingStatsDevWlMcxMeshpointNeighborsName_Type()
)
wingStatsDevWlMcxMeshpointNeighborsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsName.setStatus("current")


class _WingStatsDevWlMcxMeshpointNeighborsHostname_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointNeighborsHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsDevWlMcxMeshpointNeighborsHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointNeighborsHostname_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsHostname = _WingStatsDevWlMcxMeshpointNeighborsHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 4, 1, 4),
    _WingStatsDevWlMcxMeshpointNeighborsHostname_Type()
)
wingStatsDevWlMcxMeshpointNeighborsHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsHostname.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsDeviceMac_Type = DisplayString
_WingStatsDevWlMcxMeshpointNeighborsDeviceMac_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsDeviceMac = _WingStatsDevWlMcxMeshpointNeighborsDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 4, 1, 5),
    _WingStatsDevWlMcxMeshpointNeighborsDeviceMac_Type()
)
wingStatsDevWlMcxMeshpointNeighborsDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsDeviceMac.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsNumEntries_Type = Unsigned32
_WingStatsDevWlMcxMeshpointNeighborsNumEntries_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsNumEntries = _WingStatsDevWlMcxMeshpointNeighborsNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 4, 1, 6),
    _WingStatsDevWlMcxMeshpointNeighborsNumEntries_Type()
)
wingStatsDevWlMcxMeshpointNeighborsNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsNumEntries.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesTable_Object = MibTable
wingStatsDevWlMcxMeshpointNeighborsEntriesTable = _WingStatsDevWlMcxMeshpointNeighborsEntriesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesTable.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointNeighborsEntriesEntry = _WingStatsDevWlMcxMeshpointNeighborsEntriesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1)
)
wingStatsDevWlMcxMeshpointNeighborsEntriesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsMpid"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesEntry.setStatus("current")


class _WingStatsDevWlMcxMeshpointNeighborsEntriesIndex_Type(Unsigned32):
    """Custom type wingStatsDevWlMcxMeshpointNeighborsEntriesIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevWlMcxMeshpointNeighborsEntriesIndex_Type.__name__ = "Unsigned32"
_WingStatsDevWlMcxMeshpointNeighborsEntriesIndex_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesIndex = _WingStatsDevWlMcxMeshpointNeighborsEntriesIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 1),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesIndex_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesIndex.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid_Type = DisplayString
_WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid = _WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 2),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid_Type = DisplayString
_WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid = _WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 3),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot_Type = DisplayString
_WingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot = _WingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 4),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric_Type = Unsigned32
_WingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric = _WingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 5),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesRootHops_Type = Unsigned32
_WingStatsDevWlMcxMeshpointNeighborsEntriesRootHops_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesRootHops = _WingStatsDevWlMcxMeshpointNeighborsEntriesRootHops_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 6),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesRootHops_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesRootHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesRootHops.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesValid_Type = TruthValue
_WingStatsDevWlMcxMeshpointNeighborsEntriesValid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesValid = _WingStatsDevWlMcxMeshpointNeighborsEntriesValid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 7),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesValid_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesValid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesValid.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesRoot_Type = TruthValue
_WingStatsDevWlMcxMeshpointNeighborsEntriesRoot_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesRoot = _WingStatsDevWlMcxMeshpointNeighborsEntriesRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 8),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesRoot_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesRoot.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesProxy_Type = TruthValue
_WingStatsDevWlMcxMeshpointNeighborsEntriesProxy_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesProxy = _WingStatsDevWlMcxMeshpointNeighborsEntriesProxy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 9),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesProxy_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesProxy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesProxy.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference_Type = TruthValue
_WingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference = _WingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 10),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesMobile_Type = TruthValue
_WingStatsDevWlMcxMeshpointNeighborsEntriesMobile_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesMobile = _WingStatsDevWlMcxMeshpointNeighborsEntriesMobile_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 11),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesMobile_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesMobile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesMobile.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId = _WingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 12),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesAuthState_Type = DisplayString
_WingStatsDevWlMcxMeshpointNeighborsEntriesAuthState_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesAuthState = _WingStatsDevWlMcxMeshpointNeighborsEntriesAuthState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 13),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesAuthState_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesAuthState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesAuthState.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesRank_Type = DisplayString
_WingStatsDevWlMcxMeshpointNeighborsEntriesRank_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesRank = _WingStatsDevWlMcxMeshpointNeighborsEntriesRank_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 14),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesRank_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesRank.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesRank.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesResourced_Type = TruthValue
_WingStatsDevWlMcxMeshpointNeighborsEntriesResourced_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesResourced = _WingStatsDevWlMcxMeshpointNeighborsEntriesResourced_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 15),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesResourced_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesResourced.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesResourced.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality_Type = Unsigned32
_WingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality = _WingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 16),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric_Type = Unsigned32
_WingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric = _WingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 17),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric.setStatus("current")
_WingStatsDevWlMcxMeshpointNeighborsEntriesAge_Type = Integer32
_WingStatsDevWlMcxMeshpointNeighborsEntriesAge_Object = MibTableColumn
wingStatsDevWlMcxMeshpointNeighborsEntriesAge = _WingStatsDevWlMcxMeshpointNeighborsEntriesAge_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 5, 1, 18),
    _WingStatsDevWlMcxMeshpointNeighborsEntriesAge_Type()
)
wingStatsDevWlMcxMeshpointNeighborsEntriesAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointNeighborsEntriesAge.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsTable_Object = MibTable
wingStatsDevWlMcxMeshpointPathsTable = _WingStatsDevWlMcxMeshpointPathsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 6)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsTable.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointPathsEntry = _WingStatsDevWlMcxMeshpointPathsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 6, 1)
)
wingStatsDevWlMcxMeshpointPathsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointPathsMpid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsMpid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointPathsMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsMpid = _WingStatsDevWlMcxMeshpointPathsMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 6, 1, 1),
    _WingStatsDevWlMcxMeshpointPathsMpid_Type()
)
wingStatsDevWlMcxMeshpointPathsMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointPathsName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsName = _WingStatsDevWlMcxMeshpointPathsName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 6, 1, 3),
    _WingStatsDevWlMcxMeshpointPathsName_Type()
)
wingStatsDevWlMcxMeshpointPathsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsName.setStatus("current")


class _WingStatsDevWlMcxMeshpointPathsHostname_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointPathsHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsDevWlMcxMeshpointPathsHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointPathsHostname_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsHostname = _WingStatsDevWlMcxMeshpointPathsHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 6, 1, 4),
    _WingStatsDevWlMcxMeshpointPathsHostname_Type()
)
wingStatsDevWlMcxMeshpointPathsHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsHostname.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsDeviceMac_Type = DisplayString
_WingStatsDevWlMcxMeshpointPathsDeviceMac_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsDeviceMac = _WingStatsDevWlMcxMeshpointPathsDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 6, 1, 5),
    _WingStatsDevWlMcxMeshpointPathsDeviceMac_Type()
)
wingStatsDevWlMcxMeshpointPathsDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsDeviceMac.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsNumEntries_Type = Unsigned32
_WingStatsDevWlMcxMeshpointPathsNumEntries_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsNumEntries = _WingStatsDevWlMcxMeshpointPathsNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 6, 1, 6),
    _WingStatsDevWlMcxMeshpointPathsNumEntries_Type()
)
wingStatsDevWlMcxMeshpointPathsNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsNumEntries.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesTable_Object = MibTable
wingStatsDevWlMcxMeshpointPathsEntriesTable = _WingStatsDevWlMcxMeshpointPathsEntriesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesTable.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointPathsEntriesEntry = _WingStatsDevWlMcxMeshpointPathsEntriesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1)
)
wingStatsDevWlMcxMeshpointPathsEntriesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointPathsMpid"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesEntry.setStatus("current")


class _WingStatsDevWlMcxMeshpointPathsEntriesIndex_Type(Unsigned32):
    """Custom type wingStatsDevWlMcxMeshpointPathsEntriesIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevWlMcxMeshpointPathsEntriesIndex_Type.__name__ = "Unsigned32"
_WingStatsDevWlMcxMeshpointPathsEntriesIndex_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesIndex = _WingStatsDevWlMcxMeshpointPathsEntriesIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 1),
    _WingStatsDevWlMcxMeshpointPathsEntriesIndex_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesIndex.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesDestMpid_Type = DisplayString
_WingStatsDevWlMcxMeshpointPathsEntriesDestMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesDestMpid = _WingStatsDevWlMcxMeshpointPathsEntriesDestMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 2),
    _WingStatsDevWlMcxMeshpointPathsEntriesDestMpid_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesDestMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesDestMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid_Type = DisplayString
_WingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid = _WingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 3),
    _WingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesPathMetric_Type = Unsigned32
_WingStatsDevWlMcxMeshpointPathsEntriesPathMetric_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesPathMetric = _WingStatsDevWlMcxMeshpointPathsEntriesPathMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 4),
    _WingStatsDevWlMcxMeshpointPathsEntriesPathMetric_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesPathMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesPathMetric.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesHops_Type = Unsigned32
_WingStatsDevWlMcxMeshpointPathsEntriesHops_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesHops = _WingStatsDevWlMcxMeshpointPathsEntriesHops_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 5),
    _WingStatsDevWlMcxMeshpointPathsEntriesHops_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesHops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesHops.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesPathState_Type = DisplayString
_WingStatsDevWlMcxMeshpointPathsEntriesPathState_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesPathState = _WingStatsDevWlMcxMeshpointPathsEntriesPathState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 6),
    _WingStatsDevWlMcxMeshpointPathsEntriesPathState_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesPathState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesPathState.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesBindState_Type = DisplayString
_WingStatsDevWlMcxMeshpointPathsEntriesBindState_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesBindState = _WingStatsDevWlMcxMeshpointPathsEntriesBindState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 7),
    _WingStatsDevWlMcxMeshpointPathsEntriesBindState_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesBindState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesBindState.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesValid_Type = TruthValue
_WingStatsDevWlMcxMeshpointPathsEntriesValid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesValid = _WingStatsDevWlMcxMeshpointPathsEntriesValid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 8),
    _WingStatsDevWlMcxMeshpointPathsEntriesValid_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesValid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesValid.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesRoot_Type = TruthValue
_WingStatsDevWlMcxMeshpointPathsEntriesRoot_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesRoot = _WingStatsDevWlMcxMeshpointPathsEntriesRoot_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 9),
    _WingStatsDevWlMcxMeshpointPathsEntriesRoot_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesRoot.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesProxy_Type = TruthValue
_WingStatsDevWlMcxMeshpointPathsEntriesProxy_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesProxy = _WingStatsDevWlMcxMeshpointPathsEntriesProxy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 10),
    _WingStatsDevWlMcxMeshpointPathsEntriesProxy_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesProxy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesProxy.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesGeoReference_Type = TruthValue
_WingStatsDevWlMcxMeshpointPathsEntriesGeoReference_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesGeoReference = _WingStatsDevWlMcxMeshpointPathsEntriesGeoReference_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 11),
    _WingStatsDevWlMcxMeshpointPathsEntriesGeoReference_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesGeoReference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesGeoReference.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesMobile_Type = TruthValue
_WingStatsDevWlMcxMeshpointPathsEntriesMobile_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesMobile = _WingStatsDevWlMcxMeshpointPathsEntriesMobile_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 12),
    _WingStatsDevWlMcxMeshpointPathsEntriesMobile_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesMobile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesMobile.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence_Type = Unsigned32
_WingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence = _WingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 13),
    _WingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesPathTimeout_Type = Integer32
_WingStatsDevWlMcxMeshpointPathsEntriesPathTimeout_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesPathTimeout = _WingStatsDevWlMcxMeshpointPathsEntriesPathTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 14),
    _WingStatsDevWlMcxMeshpointPathsEntriesPathTimeout_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesPathTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesPathTimeout.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout_Type = Integer32
_WingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout = _WingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 15),
    _WingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout.setStatus("current")
_WingStatsDevWlMcxMeshpointPathsEntriesDestMintId_Type = DisplayString
_WingStatsDevWlMcxMeshpointPathsEntriesDestMintId_Object = MibTableColumn
wingStatsDevWlMcxMeshpointPathsEntriesDestMintId = _WingStatsDevWlMcxMeshpointPathsEntriesDestMintId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 7, 1, 16),
    _WingStatsDevWlMcxMeshpointPathsEntriesDestMintId_Type()
)
wingStatsDevWlMcxMeshpointPathsEntriesDestMintId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointPathsEntriesDestMintId.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsTable_Object = MibTable
wingStatsDevWlMcxMeshpointRootsTable = _WingStatsDevWlMcxMeshpointRootsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 8)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsTable.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointRootsEntry = _WingStatsDevWlMcxMeshpointRootsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 8, 1)
)
wingStatsDevWlMcxMeshpointRootsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointRootsMpid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsMpid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointRootsMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsMpid = _WingStatsDevWlMcxMeshpointRootsMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 8, 1, 1),
    _WingStatsDevWlMcxMeshpointRootsMpid_Type()
)
wingStatsDevWlMcxMeshpointRootsMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointRootsName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsName = _WingStatsDevWlMcxMeshpointRootsName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 8, 1, 3),
    _WingStatsDevWlMcxMeshpointRootsName_Type()
)
wingStatsDevWlMcxMeshpointRootsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsName.setStatus("current")


class _WingStatsDevWlMcxMeshpointRootsHostname_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointRootsHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsDevWlMcxMeshpointRootsHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointRootsHostname_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsHostname = _WingStatsDevWlMcxMeshpointRootsHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 8, 1, 4),
    _WingStatsDevWlMcxMeshpointRootsHostname_Type()
)
wingStatsDevWlMcxMeshpointRootsHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsHostname.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsDeviceMac_Type = DisplayString
_WingStatsDevWlMcxMeshpointRootsDeviceMac_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsDeviceMac = _WingStatsDevWlMcxMeshpointRootsDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 8, 1, 5),
    _WingStatsDevWlMcxMeshpointRootsDeviceMac_Type()
)
wingStatsDevWlMcxMeshpointRootsDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsDeviceMac.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsNumEntries_Type = Unsigned32
_WingStatsDevWlMcxMeshpointRootsNumEntries_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsNumEntries = _WingStatsDevWlMcxMeshpointRootsNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 8, 1, 6),
    _WingStatsDevWlMcxMeshpointRootsNumEntries_Type()
)
wingStatsDevWlMcxMeshpointRootsNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsNumEntries.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesTable_Object = MibTable
wingStatsDevWlMcxMeshpointRootsEntriesTable = _WingStatsDevWlMcxMeshpointRootsEntriesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesTable.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointRootsEntriesEntry = _WingStatsDevWlMcxMeshpointRootsEntriesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1)
)
wingStatsDevWlMcxMeshpointRootsEntriesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointRootsMpid"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesEntry.setStatus("current")


class _WingStatsDevWlMcxMeshpointRootsEntriesIndex_Type(Unsigned32):
    """Custom type wingStatsDevWlMcxMeshpointRootsEntriesIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevWlMcxMeshpointRootsEntriesIndex_Type.__name__ = "Unsigned32"
_WingStatsDevWlMcxMeshpointRootsEntriesIndex_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesIndex = _WingStatsDevWlMcxMeshpointRootsEntriesIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 1),
    _WingStatsDevWlMcxMeshpointRootsEntriesIndex_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesIndex.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesRootMpid_Type = DisplayString
_WingStatsDevWlMcxMeshpointRootsEntriesRootMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesRootMpid = _WingStatsDevWlMcxMeshpointRootsEntriesRootMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 2),
    _WingStatsDevWlMcxMeshpointRootsEntriesRootMpid_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesRootMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesRootMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid_Type = DisplayString
_WingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid = _WingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 3),
    _WingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesInterfaceId_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointRootsEntriesInterfaceId_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesInterfaceId = _WingStatsDevWlMcxMeshpointRootsEntriesInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 4),
    _WingStatsDevWlMcxMeshpointRootsEntriesInterfaceId_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesInterfaceId.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesRecommended_Type = TruthValue
_WingStatsDevWlMcxMeshpointRootsEntriesRecommended_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesRecommended = _WingStatsDevWlMcxMeshpointRootsEntriesRecommended_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 5),
    _WingStatsDevWlMcxMeshpointRootsEntriesRecommended_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesRecommended.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesRecommended.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesBindFailed_Type = TruthValue
_WingStatsDevWlMcxMeshpointRootsEntriesBindFailed_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesBindFailed = _WingStatsDevWlMcxMeshpointRootsEntriesBindFailed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 6),
    _WingStatsDevWlMcxMeshpointRootsEntriesBindFailed_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesBindFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesBindFailed.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesPathFailed_Type = TruthValue
_WingStatsDevWlMcxMeshpointRootsEntriesPathFailed_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesPathFailed = _WingStatsDevWlMcxMeshpointRootsEntriesPathFailed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 7),
    _WingStatsDevWlMcxMeshpointRootsEntriesPathFailed_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesPathFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesPathFailed.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesPathMetric_Type = Unsigned32
_WingStatsDevWlMcxMeshpointRootsEntriesPathMetric_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesPathMetric = _WingStatsDevWlMcxMeshpointRootsEntriesPathMetric_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 8),
    _WingStatsDevWlMcxMeshpointRootsEntriesPathMetric_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesPathMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesPathMetric.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesNeighborBias_Type = Integer32
_WingStatsDevWlMcxMeshpointRootsEntriesNeighborBias_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesNeighborBias = _WingStatsDevWlMcxMeshpointRootsEntriesNeighborBias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 9),
    _WingStatsDevWlMcxMeshpointRootsEntriesNeighborBias_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesNeighborBias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesNeighborBias.setStatus("current")
_WingStatsDevWlMcxMeshpointRootsEntriesRootBias_Type = Integer32
_WingStatsDevWlMcxMeshpointRootsEntriesRootBias_Object = MibTableColumn
wingStatsDevWlMcxMeshpointRootsEntriesRootBias = _WingStatsDevWlMcxMeshpointRootsEntriesRootBias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 9, 1, 10),
    _WingStatsDevWlMcxMeshpointRootsEntriesRootBias_Type()
)
wingStatsDevWlMcxMeshpointRootsEntriesRootBias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointRootsEntriesRootBias.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesTable_Object = MibTable
wingStatsDevWlMcxMeshpointProxiesTable = _WingStatsDevWlMcxMeshpointProxiesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 10)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesTable.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointProxiesEntry = _WingStatsDevWlMcxMeshpointProxiesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 10, 1)
)
wingStatsDevWlMcxMeshpointProxiesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointProxiesMpid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesMpid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointProxiesMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesMpid = _WingStatsDevWlMcxMeshpointProxiesMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 10, 1, 1),
    _WingStatsDevWlMcxMeshpointProxiesMpid_Type()
)
wingStatsDevWlMcxMeshpointProxiesMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointProxiesName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesName = _WingStatsDevWlMcxMeshpointProxiesName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 10, 1, 3),
    _WingStatsDevWlMcxMeshpointProxiesName_Type()
)
wingStatsDevWlMcxMeshpointProxiesName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesName.setStatus("current")


class _WingStatsDevWlMcxMeshpointProxiesHostname_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointProxiesHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsDevWlMcxMeshpointProxiesHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointProxiesHostname_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesHostname = _WingStatsDevWlMcxMeshpointProxiesHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 10, 1, 4),
    _WingStatsDevWlMcxMeshpointProxiesHostname_Type()
)
wingStatsDevWlMcxMeshpointProxiesHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesHostname.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesDeviceMac_Type = DisplayString
_WingStatsDevWlMcxMeshpointProxiesDeviceMac_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesDeviceMac = _WingStatsDevWlMcxMeshpointProxiesDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 10, 1, 5),
    _WingStatsDevWlMcxMeshpointProxiesDeviceMac_Type()
)
wingStatsDevWlMcxMeshpointProxiesDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesDeviceMac.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesNumEntries_Type = Unsigned32
_WingStatsDevWlMcxMeshpointProxiesNumEntries_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesNumEntries = _WingStatsDevWlMcxMeshpointProxiesNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 10, 1, 6),
    _WingStatsDevWlMcxMeshpointProxiesNumEntries_Type()
)
wingStatsDevWlMcxMeshpointProxiesNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesNumEntries.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntriesTable_Object = MibTable
wingStatsDevWlMcxMeshpointProxiesEntriesTable = _WingStatsDevWlMcxMeshpointProxiesEntriesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesTable.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntriesEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointProxiesEntriesEntry = _WingStatsDevWlMcxMeshpointProxiesEntriesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11, 1)
)
wingStatsDevWlMcxMeshpointProxiesEntriesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointProxiesMpid"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointProxiesEntriesIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesEntry.setStatus("current")


class _WingStatsDevWlMcxMeshpointProxiesEntriesIndex_Type(Unsigned32):
    """Custom type wingStatsDevWlMcxMeshpointProxiesEntriesIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevWlMcxMeshpointProxiesEntriesIndex_Type.__name__ = "Unsigned32"
_WingStatsDevWlMcxMeshpointProxiesEntriesIndex_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesEntriesIndex = _WingStatsDevWlMcxMeshpointProxiesEntriesIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11, 1, 1),
    _WingStatsDevWlMcxMeshpointProxiesEntriesIndex_Type()
)
wingStatsDevWlMcxMeshpointProxiesEntriesIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesIndex.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr_Type = DisplayString
_WingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr = _WingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11, 1, 2),
    _WingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr_Type()
)
wingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner_Type = DisplayString
_WingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner = _WingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11, 1, 3),
    _WingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner_Type()
)
wingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntriesPersistence_Type = DisplayString
_WingStatsDevWlMcxMeshpointProxiesEntriesPersistence_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesEntriesPersistence = _WingStatsDevWlMcxMeshpointProxiesEntriesPersistence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11, 1, 4),
    _WingStatsDevWlMcxMeshpointProxiesEntriesPersistence_Type()
)
wingStatsDevWlMcxMeshpointProxiesEntriesPersistence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesPersistence.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntriesAge_Type = Integer32
_WingStatsDevWlMcxMeshpointProxiesEntriesAge_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesEntriesAge = _WingStatsDevWlMcxMeshpointProxiesEntriesAge_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11, 1, 5),
    _WingStatsDevWlMcxMeshpointProxiesEntriesAge_Type()
)
wingStatsDevWlMcxMeshpointProxiesEntriesAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesAge.setStatus("current")
_WingStatsDevWlMcxMeshpointProxiesEntriesVlan_Type = Unsigned32
_WingStatsDevWlMcxMeshpointProxiesEntriesVlan_Object = MibTableColumn
wingStatsDevWlMcxMeshpointProxiesEntriesVlan = _WingStatsDevWlMcxMeshpointProxiesEntriesVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 11, 1, 6),
    _WingStatsDevWlMcxMeshpointProxiesEntriesVlan_Type()
)
wingStatsDevWlMcxMeshpointProxiesEntriesVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointProxiesEntriesVlan.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaTable_Object = MibTable
wingStatsDevWlMcxMeshpointLsaTable = _WingStatsDevWlMcxMeshpointLsaTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaTable.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointLsaEntry = _WingStatsDevWlMcxMeshpointLsaEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1)
)
wingStatsDevWlMcxMeshpointLsaEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointLsaMpid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaMpid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointLsaMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaMpid = _WingStatsDevWlMcxMeshpointLsaMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 1),
    _WingStatsDevWlMcxMeshpointLsaMpid_Type()
)
wingStatsDevWlMcxMeshpointLsaMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointLsaName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaName = _WingStatsDevWlMcxMeshpointLsaName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 3),
    _WingStatsDevWlMcxMeshpointLsaName_Type()
)
wingStatsDevWlMcxMeshpointLsaName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaName.setStatus("current")


class _WingStatsDevWlMcxMeshpointLsaHostname_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointLsaHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsDevWlMcxMeshpointLsaHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointLsaHostname_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaHostname = _WingStatsDevWlMcxMeshpointLsaHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 4),
    _WingStatsDevWlMcxMeshpointLsaHostname_Type()
)
wingStatsDevWlMcxMeshpointLsaHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaHostname.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaDeviceMac_Type = DisplayString
_WingStatsDevWlMcxMeshpointLsaDeviceMac_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaDeviceMac = _WingStatsDevWlMcxMeshpointLsaDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 5),
    _WingStatsDevWlMcxMeshpointLsaDeviceMac_Type()
)
wingStatsDevWlMcxMeshpointLsaDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaDeviceMac.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaNumEntries_Type = Unsigned32
_WingStatsDevWlMcxMeshpointLsaNumEntries_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaNumEntries = _WingStatsDevWlMcxMeshpointLsaNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 6),
    _WingStatsDevWlMcxMeshpointLsaNumEntries_Type()
)
wingStatsDevWlMcxMeshpointLsaNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaNumEntries.setStatus("current")


class _WingStatsDevWlMcxMeshpointLsaMeshid_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointLsaMeshid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingStatsDevWlMcxMeshpointLsaMeshid_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointLsaMeshid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaMeshid = _WingStatsDevWlMcxMeshpointLsaMeshid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 7),
    _WingStatsDevWlMcxMeshpointLsaMeshid_Type()
)
wingStatsDevWlMcxMeshpointLsaMeshid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaMeshid.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaR0Valid_Type = TruthValue
_WingStatsDevWlMcxMeshpointLsaR0Valid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaR0Valid = _WingStatsDevWlMcxMeshpointLsaR0Valid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 8),
    _WingStatsDevWlMcxMeshpointLsaR0Valid_Type()
)
wingStatsDevWlMcxMeshpointLsaR0Valid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaR0Valid.setStatus("current")


class _WingStatsDevWlMcxMeshpointLsaR0mdid_Type(OctetString):
    """Custom type wingStatsDevWlMcxMeshpointLsaR0mdid based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )
    fixed_length = 12


_WingStatsDevWlMcxMeshpointLsaR0mdid_Type.__name__ = "OctetString"
_WingStatsDevWlMcxMeshpointLsaR0mdid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaR0mdid = _WingStatsDevWlMcxMeshpointLsaR0mdid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 9),
    _WingStatsDevWlMcxMeshpointLsaR0mdid_Type()
)
wingStatsDevWlMcxMeshpointLsaR0mdid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaR0mdid.setStatus("current")


class _WingStatsDevWlMcxMeshpointLsaR0khid_Type(OctetString):
    """Custom type wingStatsDevWlMcxMeshpointLsaR0khid based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingStatsDevWlMcxMeshpointLsaR0khid_Type.__name__ = "OctetString"
_WingStatsDevWlMcxMeshpointLsaR0khid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaR0khid = _WingStatsDevWlMcxMeshpointLsaR0khid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 12, 1, 10),
    _WingStatsDevWlMcxMeshpointLsaR0khid_Type()
)
wingStatsDevWlMcxMeshpointLsaR0khid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaR0khid.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntriesTable_Object = MibTable
wingStatsDevWlMcxMeshpointLsaEntriesTable = _WingStatsDevWlMcxMeshpointLsaEntriesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesTable.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntriesEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointLsaEntriesEntry = _WingStatsDevWlMcxMeshpointLsaEntriesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13, 1)
)
wingStatsDevWlMcxMeshpointLsaEntriesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointLsaMpid"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointLsaEntriesIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesEntry.setStatus("current")


class _WingStatsDevWlMcxMeshpointLsaEntriesIndex_Type(Unsigned32):
    """Custom type wingStatsDevWlMcxMeshpointLsaEntriesIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevWlMcxMeshpointLsaEntriesIndex_Type.__name__ = "Unsigned32"
_WingStatsDevWlMcxMeshpointLsaEntriesIndex_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaEntriesIndex = _WingStatsDevWlMcxMeshpointLsaEntriesIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13, 1, 1),
    _WingStatsDevWlMcxMeshpointLsaEntriesIndex_Type()
)
wingStatsDevWlMcxMeshpointLsaEntriesIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesIndex.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntriesLinkAddr_Type = DisplayString
_WingStatsDevWlMcxMeshpointLsaEntriesLinkAddr_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaEntriesLinkAddr = _WingStatsDevWlMcxMeshpointLsaEntriesLinkAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13, 1, 2),
    _WingStatsDevWlMcxMeshpointLsaEntriesLinkAddr_Type()
)
wingStatsDevWlMcxMeshpointLsaEntriesLinkAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesLinkAddr.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntriesInterfaceId_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointLsaEntriesInterfaceId_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaEntriesInterfaceId = _WingStatsDevWlMcxMeshpointLsaEntriesInterfaceId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13, 1, 3),
    _WingStatsDevWlMcxMeshpointLsaEntriesInterfaceId_Type()
)
wingStatsDevWlMcxMeshpointLsaEntriesInterfaceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesInterfaceId.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntriesKeepAlive_Type = TruthValue
_WingStatsDevWlMcxMeshpointLsaEntriesKeepAlive_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaEntriesKeepAlive = _WingStatsDevWlMcxMeshpointLsaEntriesKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13, 1, 4),
    _WingStatsDevWlMcxMeshpointLsaEntriesKeepAlive_Type()
)
wingStatsDevWlMcxMeshpointLsaEntriesKeepAlive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesKeepAlive.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntriesLinkState_Type = DisplayString
_WingStatsDevWlMcxMeshpointLsaEntriesLinkState_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaEntriesLinkState = _WingStatsDevWlMcxMeshpointLsaEntriesLinkState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13, 1, 5),
    _WingStatsDevWlMcxMeshpointLsaEntriesLinkState_Type()
)
wingStatsDevWlMcxMeshpointLsaEntriesLinkState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesLinkState.setStatus("current")
_WingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout_Type = Integer32
_WingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout_Object = MibTableColumn
wingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout = _WingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 13, 1, 6),
    _WingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout_Type()
)
wingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsTable_Object = MibTable
wingStatsDevWlMcxMeshpointMcastPathsTable = _WingStatsDevWlMcxMeshpointMcastPathsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 14)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsTable.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointMcastPathsEntry = _WingStatsDevWlMcxMeshpointMcastPathsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 14, 1)
)
wingStatsDevWlMcxMeshpointMcastPathsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsMpid"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsEntry.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsMpid_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointMcastPathsMpid_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsMpid = _WingStatsDevWlMcxMeshpointMcastPathsMpid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 14, 1, 1),
    _WingStatsDevWlMcxMeshpointMcastPathsMpid_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsMpid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsMpid.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsName_Type = WingIdentifier
_WingStatsDevWlMcxMeshpointMcastPathsName_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsName = _WingStatsDevWlMcxMeshpointMcastPathsName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 14, 1, 3),
    _WingStatsDevWlMcxMeshpointMcastPathsName_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsName.setStatus("current")


class _WingStatsDevWlMcxMeshpointMcastPathsHostname_Type(DisplayString):
    """Custom type wingStatsDevWlMcxMeshpointMcastPathsHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsDevWlMcxMeshpointMcastPathsHostname_Type.__name__ = "DisplayString"
_WingStatsDevWlMcxMeshpointMcastPathsHostname_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsHostname = _WingStatsDevWlMcxMeshpointMcastPathsHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 14, 1, 4),
    _WingStatsDevWlMcxMeshpointMcastPathsHostname_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsHostname.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsDeviceMac_Type = DisplayString
_WingStatsDevWlMcxMeshpointMcastPathsDeviceMac_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsDeviceMac = _WingStatsDevWlMcxMeshpointMcastPathsDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 14, 1, 5),
    _WingStatsDevWlMcxMeshpointMcastPathsDeviceMac_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsDeviceMac.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsNumEntries_Type = Unsigned32
_WingStatsDevWlMcxMeshpointMcastPathsNumEntries_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsNumEntries = _WingStatsDevWlMcxMeshpointMcastPathsNumEntries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 14, 1, 6),
    _WingStatsDevWlMcxMeshpointMcastPathsNumEntries_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsNumEntries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsNumEntries.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsEntriesTable_Object = MibTable
wingStatsDevWlMcxMeshpointMcastPathsEntriesTable = _WingStatsDevWlMcxMeshpointMcastPathsEntriesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 15)
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsEntriesTable.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsEntriesEntry_Object = MibTableRow
wingStatsDevWlMcxMeshpointMcastPathsEntriesEntry = _WingStatsDevWlMcxMeshpointMcastPathsEntriesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 15, 1)
)
wingStatsDevWlMcxMeshpointMcastPathsEntriesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsMpid"),
    (0, "WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsEntriesEntry.setStatus("current")


class _WingStatsDevWlMcxMeshpointMcastPathsEntriesIndex_Type(Unsigned32):
    """Custom type wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevWlMcxMeshpointMcastPathsEntriesIndex_Type.__name__ = "Unsigned32"
_WingStatsDevWlMcxMeshpointMcastPathsEntriesIndex_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex = _WingStatsDevWlMcxMeshpointMcastPathsEntriesIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 15, 1, 1),
    _WingStatsDevWlMcxMeshpointMcastPathsEntriesIndex_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr_Type = DisplayString
_WingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr = _WingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 15, 1, 2),
    _WingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr_Type = DisplayString
_WingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr = _WingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 15, 1, 3),
    _WingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr.setStatus("current")
_WingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout_Type = Integer32
_WingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout_Object = MibTableColumn
wingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout = _WingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 25, 21, 15, 1, 4),
    _WingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout_Type()
)
wingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout.setStatus("current")
_WingStatsDevVrrp_ObjectIdentity = ObjectIdentity
wingStatsDevVrrp = _WingStatsDevVrrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31)
)
_WingStatsDevVrrpGlobalErrTable_Object = MibTable
wingStatsDevVrrpGlobalErrTable = _WingStatsDevVrrpGlobalErrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrTable.setStatus("current")
_WingStatsDevVrrpGlobalErrEntry_Object = MibTableRow
wingStatsDevVrrpGlobalErrEntry = _WingStatsDevVrrpGlobalErrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1)
)
wingStatsDevVrrpGlobalErrEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrEntry.setStatus("current")
_WingStatsDevVrrpGlobalErrIpTtlErrs_Type = Unsigned32
_WingStatsDevVrrpGlobalErrIpTtlErrs_Object = MibTableColumn
wingStatsDevVrrpGlobalErrIpTtlErrs = _WingStatsDevVrrpGlobalErrIpTtlErrs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 1),
    _WingStatsDevVrrpGlobalErrIpTtlErrs_Type()
)
wingStatsDevVrrpGlobalErrIpTtlErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrIpTtlErrs.setStatus("current")
_WingStatsDevVrrpGlobalErrVersionMismatch_Type = Unsigned32
_WingStatsDevVrrpGlobalErrVersionMismatch_Object = MibTableColumn
wingStatsDevVrrpGlobalErrVersionMismatch = _WingStatsDevVrrpGlobalErrVersionMismatch_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 2),
    _WingStatsDevVrrpGlobalErrVersionMismatch_Type()
)
wingStatsDevVrrpGlobalErrVersionMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrVersionMismatch.setStatus("current")
_WingStatsDevVrrpGlobalErrPacketLenErr_Type = Unsigned32
_WingStatsDevVrrpGlobalErrPacketLenErr_Object = MibTableColumn
wingStatsDevVrrpGlobalErrPacketLenErr = _WingStatsDevVrrpGlobalErrPacketLenErr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 3),
    _WingStatsDevVrrpGlobalErrPacketLenErr_Type()
)
wingStatsDevVrrpGlobalErrPacketLenErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrPacketLenErr.setStatus("current")
_WingStatsDevVrrpGlobalErrChecksumErr_Type = Unsigned32
_WingStatsDevVrrpGlobalErrChecksumErr_Object = MibTableColumn
wingStatsDevVrrpGlobalErrChecksumErr = _WingStatsDevVrrpGlobalErrChecksumErr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 4),
    _WingStatsDevVrrpGlobalErrChecksumErr_Type()
)
wingStatsDevVrrpGlobalErrChecksumErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrChecksumErr.setStatus("current")
_WingStatsDevVrrpGlobalErrInvalidVirtualRouterId_Type = Unsigned32
_WingStatsDevVrrpGlobalErrInvalidVirtualRouterId_Object = MibTableColumn
wingStatsDevVrrpGlobalErrInvalidVirtualRouterId = _WingStatsDevVrrpGlobalErrInvalidVirtualRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 5),
    _WingStatsDevVrrpGlobalErrInvalidVirtualRouterId_Type()
)
wingStatsDevVrrpGlobalErrInvalidVirtualRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrInvalidVirtualRouterId.setStatus("current")
_WingStatsDevVrrpGlobalErrAuthMismatch_Type = Unsigned32
_WingStatsDevVrrpGlobalErrAuthMismatch_Object = MibTableColumn
wingStatsDevVrrpGlobalErrAuthMismatch = _WingStatsDevVrrpGlobalErrAuthMismatch_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 6),
    _WingStatsDevVrrpGlobalErrAuthMismatch_Type()
)
wingStatsDevVrrpGlobalErrAuthMismatch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrAuthMismatch.setStatus("current")
_WingStatsDevVrrpGlobalErrInvalidTypePackets_Type = Unsigned32
_WingStatsDevVrrpGlobalErrInvalidTypePackets_Object = MibTableColumn
wingStatsDevVrrpGlobalErrInvalidTypePackets = _WingStatsDevVrrpGlobalErrInvalidTypePackets_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 7),
    _WingStatsDevVrrpGlobalErrInvalidTypePackets_Type()
)
wingStatsDevVrrpGlobalErrInvalidTypePackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrInvalidTypePackets.setStatus("current")
_WingStatsDevVrrpGlobalErrLastProtocolErrReason_Type = DisplayString
_WingStatsDevVrrpGlobalErrLastProtocolErrReason_Object = MibTableColumn
wingStatsDevVrrpGlobalErrLastProtocolErrReason = _WingStatsDevVrrpGlobalErrLastProtocolErrReason_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 1, 1, 8),
    _WingStatsDevVrrpGlobalErrLastProtocolErrReason_Type()
)
wingStatsDevVrrpGlobalErrLastProtocolErrReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpGlobalErrLastProtocolErrReason.setStatus("current")
_WingStatsDevVrrpOperationTable_Object = MibTable
wingStatsDevVrrpOperationTable = _WingStatsDevVrrpOperationTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationTable.setStatus("current")
_WingStatsDevVrrpOperationEntry_Object = MibTableRow
wingStatsDevVrrpOperationEntry = _WingStatsDevVrrpOperationEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1)
)
wingStatsDevVrrpOperationEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevVrrpOperationVirtualRouterId"),
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationEntry.setStatus("current")


class _WingStatsDevVrrpOperationVirtualRouterId_Type(Unsigned32):
    """Custom type wingStatsDevVrrpOperationVirtualRouterId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingStatsDevVrrpOperationVirtualRouterId_Type.__name__ = "Unsigned32"
_WingStatsDevVrrpOperationVirtualRouterId_Object = MibTableColumn
wingStatsDevVrrpOperationVirtualRouterId = _WingStatsDevVrrpOperationVirtualRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 1),
    _WingStatsDevVrrpOperationVirtualRouterId_Type()
)
wingStatsDevVrrpOperationVirtualRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationVirtualRouterId.setStatus("current")
_WingStatsDevVrrpOperationIfName_Type = DisplayString
_WingStatsDevVrrpOperationIfName_Object = MibTableColumn
wingStatsDevVrrpOperationIfName = _WingStatsDevVrrpOperationIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 3),
    _WingStatsDevVrrpOperationIfName_Type()
)
wingStatsDevVrrpOperationIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationIfName.setStatus("current")
_WingStatsDevVrrpOperationVersion_Type = DisplayString
_WingStatsDevVrrpOperationVersion_Object = MibTableColumn
wingStatsDevVrrpOperationVersion = _WingStatsDevVrrpOperationVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 4),
    _WingStatsDevVrrpOperationVersion_Type()
)
wingStatsDevVrrpOperationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationVersion.setStatus("current")
_WingStatsDevVrrpOperationState_Type = DisplayString
_WingStatsDevVrrpOperationState_Object = MibTableColumn
wingStatsDevVrrpOperationState = _WingStatsDevVrrpOperationState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 5),
    _WingStatsDevVrrpOperationState_Type()
)
wingStatsDevVrrpOperationState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationState.setStatus("current")


class _WingStatsDevVrrpOperationPriority_Type(Unsigned32):
    """Custom type wingStatsDevVrrpOperationPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_WingStatsDevVrrpOperationPriority_Type.__name__ = "Unsigned32"
_WingStatsDevVrrpOperationPriority_Object = MibTableColumn
wingStatsDevVrrpOperationPriority = _WingStatsDevVrrpOperationPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 6),
    _WingStatsDevVrrpOperationPriority_Type()
)
wingStatsDevVrrpOperationPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationPriority.setStatus("current")
_WingStatsDevVrrpOperationVirtualAddr_Type = DisplayString
_WingStatsDevVrrpOperationVirtualAddr_Object = MibTableColumn
wingStatsDevVrrpOperationVirtualAddr = _WingStatsDevVrrpOperationVirtualAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 7),
    _WingStatsDevVrrpOperationVirtualAddr_Type()
)
wingStatsDevVrrpOperationVirtualAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationVirtualAddr.setStatus("current")
_WingStatsDevVrrpOperationMasterAddr_Type = DisplayString
_WingStatsDevVrrpOperationMasterAddr_Object = MibTableColumn
wingStatsDevVrrpOperationMasterAddr = _WingStatsDevVrrpOperationMasterAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 8),
    _WingStatsDevVrrpOperationMasterAddr_Type()
)
wingStatsDevVrrpOperationMasterAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationMasterAddr.setStatus("current")
_WingStatsDevVrrpOperationExpiryTimer_Type = DisplayString
_WingStatsDevVrrpOperationExpiryTimer_Object = MibTableColumn
wingStatsDevVrrpOperationExpiryTimer = _WingStatsDevVrrpOperationExpiryTimer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 9),
    _WingStatsDevVrrpOperationExpiryTimer_Type()
)
wingStatsDevVrrpOperationExpiryTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationExpiryTimer.setStatus("current")
_WingStatsDevVrrpOperationMasterDeadTimer_Type = DisplayString
_WingStatsDevVrrpOperationMasterDeadTimer_Object = MibTableColumn
wingStatsDevVrrpOperationMasterDeadTimer = _WingStatsDevVrrpOperationMasterDeadTimer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 2, 1, 10),
    _WingStatsDevVrrpOperationMasterDeadTimer_Type()
)
wingStatsDevVrrpOperationMasterDeadTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpOperationMasterDeadTimer.setStatus("current")
_WingStatsDevVrrpDetailTable_Object = MibTable
wingStatsDevVrrpDetailTable = _WingStatsDevVrrpDetailTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3)
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailTable.setStatus("current")
_WingStatsDevVrrpDetailEntry_Object = MibTableRow
wingStatsDevVrrpDetailEntry = _WingStatsDevVrrpDetailEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1)
)
wingStatsDevVrrpDetailEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevVrrpDetailVirtualRouterId"),
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailEntry.setStatus("current")


class _WingStatsDevVrrpDetailVirtualRouterId_Type(Unsigned32):
    """Custom type wingStatsDevVrrpDetailVirtualRouterId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingStatsDevVrrpDetailVirtualRouterId_Type.__name__ = "Unsigned32"
_WingStatsDevVrrpDetailVirtualRouterId_Object = MibTableColumn
wingStatsDevVrrpDetailVirtualRouterId = _WingStatsDevVrrpDetailVirtualRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 1),
    _WingStatsDevVrrpDetailVirtualRouterId_Type()
)
wingStatsDevVrrpDetailVirtualRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailVirtualRouterId.setStatus("current")
_WingStatsDevVrrpDetailIfName_Type = DisplayString
_WingStatsDevVrrpDetailIfName_Object = MibTableColumn
wingStatsDevVrrpDetailIfName = _WingStatsDevVrrpDetailIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 3),
    _WingStatsDevVrrpDetailIfName_Type()
)
wingStatsDevVrrpDetailIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailIfName.setStatus("current")
_WingStatsDevVrrpDetailVersion_Type = DisplayString
_WingStatsDevVrrpDetailVersion_Object = MibTableColumn
wingStatsDevVrrpDetailVersion = _WingStatsDevVrrpDetailVersion_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 4),
    _WingStatsDevVrrpDetailVersion_Type()
)
wingStatsDevVrrpDetailVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailVersion.setStatus("current")


class _WingStatsDevVrrpDetailConfiguredPriority_Type(Unsigned32):
    """Custom type wingStatsDevVrrpDetailConfiguredPriority based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 254),
    )


_WingStatsDevVrrpDetailConfiguredPriority_Type.__name__ = "Unsigned32"
_WingStatsDevVrrpDetailConfiguredPriority_Object = MibTableColumn
wingStatsDevVrrpDetailConfiguredPriority = _WingStatsDevVrrpDetailConfiguredPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 5),
    _WingStatsDevVrrpDetailConfiguredPriority_Type()
)
wingStatsDevVrrpDetailConfiguredPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailConfiguredPriority.setStatus("current")
_WingStatsDevVrrpDetailAdvertisementInterval_Type = DisplayString
_WingStatsDevVrrpDetailAdvertisementInterval_Object = MibTableColumn
wingStatsDevVrrpDetailAdvertisementInterval = _WingStatsDevVrrpDetailAdvertisementInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 6),
    _WingStatsDevVrrpDetailAdvertisementInterval_Type()
)
wingStatsDevVrrpDetailAdvertisementInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailAdvertisementInterval.setStatus("current")
_WingStatsDevVrrpDetailLocalIpAddress_Type = DisplayString
_WingStatsDevVrrpDetailLocalIpAddress_Object = MibTableColumn
wingStatsDevVrrpDetailLocalIpAddress = _WingStatsDevVrrpDetailLocalIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 7),
    _WingStatsDevVrrpDetailLocalIpAddress_Type()
)
wingStatsDevVrrpDetailLocalIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailLocalIpAddress.setStatus("current")
_WingStatsDevVrrpDetailIfStatusAdmin_Type = DisplayString
_WingStatsDevVrrpDetailIfStatusAdmin_Object = MibTableColumn
wingStatsDevVrrpDetailIfStatusAdmin = _WingStatsDevVrrpDetailIfStatusAdmin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 8),
    _WingStatsDevVrrpDetailIfStatusAdmin_Type()
)
wingStatsDevVrrpDetailIfStatusAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailIfStatusAdmin.setStatus("current")
_WingStatsDevVrrpDetailVirtualAddressCount_Type = Unsigned32
_WingStatsDevVrrpDetailVirtualAddressCount_Object = MibTableColumn
wingStatsDevVrrpDetailVirtualAddressCount = _WingStatsDevVrrpDetailVirtualAddressCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 9),
    _WingStatsDevVrrpDetailVirtualAddressCount_Type()
)
wingStatsDevVrrpDetailVirtualAddressCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailVirtualAddressCount.setStatus("current")
_WingStatsDevVrrpDetailPreempt_Type = TruthValue
_WingStatsDevVrrpDetailPreempt_Object = MibTableColumn
wingStatsDevVrrpDetailPreempt = _WingStatsDevVrrpDetailPreempt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 10),
    _WingStatsDevVrrpDetailPreempt_Type()
)
wingStatsDevVrrpDetailPreempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailPreempt.setStatus("current")


class _WingStatsDevVrrpDetailPreemptDelay_Type(Unsigned32):
    """Custom type wingStatsDevVrrpDetailPreemptDelay based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsDevVrrpDetailPreemptDelay_Type.__name__ = "Unsigned32"
_WingStatsDevVrrpDetailPreemptDelay_Object = MibTableColumn
wingStatsDevVrrpDetailPreemptDelay = _WingStatsDevVrrpDetailPreemptDelay_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 11),
    _WingStatsDevVrrpDetailPreemptDelay_Type()
)
wingStatsDevVrrpDetailPreemptDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailPreemptDelay.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailPreemptDelay.setUnits("seconds")
_WingStatsDevVrrpDetailCrmDownAction_Type = DisplayString
_WingStatsDevVrrpDetailCrmDownAction_Object = MibTableColumn
wingStatsDevVrrpDetailCrmDownAction = _WingStatsDevVrrpDetailCrmDownAction_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 12),
    _WingStatsDevVrrpDetailCrmDownAction_Type()
)
wingStatsDevVrrpDetailCrmDownAction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailCrmDownAction.setStatus("current")
_WingStatsDevVrrpDetailCrmStatus_Type = DisplayString
_WingStatsDevVrrpDetailCrmStatus_Object = MibTableColumn
wingStatsDevVrrpDetailCrmStatus = _WingStatsDevVrrpDetailCrmStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 13),
    _WingStatsDevVrrpDetailCrmStatus_Type()
)
wingStatsDevVrrpDetailCrmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailCrmStatus.setStatus("current")
_WingStatsDevVrrpDetailCfgedDeltaPriority_Type = Unsigned32
_WingStatsDevVrrpDetailCfgedDeltaPriority_Object = MibTableColumn
wingStatsDevVrrpDetailCfgedDeltaPriority = _WingStatsDevVrrpDetailCfgedDeltaPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 14),
    _WingStatsDevVrrpDetailCfgedDeltaPriority_Type()
)
wingStatsDevVrrpDetailCfgedDeltaPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailCfgedDeltaPriority.setStatus("current")
_WingStatsDevVrrpDetailVirtualMacAddr_Type = MacAddress
_WingStatsDevVrrpDetailVirtualMacAddr_Object = MibTableColumn
wingStatsDevVrrpDetailVirtualMacAddr = _WingStatsDevVrrpDetailVirtualMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 15),
    _WingStatsDevVrrpDetailVirtualMacAddr_Type()
)
wingStatsDevVrrpDetailVirtualMacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailVirtualMacAddr.setStatus("current")
_WingStatsDevVrrpDetailSyncGroup_Type = TruthValue
_WingStatsDevVrrpDetailSyncGroup_Object = MibTableColumn
wingStatsDevVrrpDetailSyncGroup = _WingStatsDevVrrpDetailSyncGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 16),
    _WingStatsDevVrrpDetailSyncGroup_Type()
)
wingStatsDevVrrpDetailSyncGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailSyncGroup.setStatus("current")
_WingStatsDevVrrpDetailFailoverSyncGroup_Type = DisplayString
_WingStatsDevVrrpDetailFailoverSyncGroup_Object = MibTableColumn
wingStatsDevVrrpDetailFailoverSyncGroup = _WingStatsDevVrrpDetailFailoverSyncGroup_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 3, 1, 17),
    _WingStatsDevVrrpDetailFailoverSyncGroup_Type()
)
wingStatsDevVrrpDetailFailoverSyncGroup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailFailoverSyncGroup.setStatus("current")
_WingStatsDevVrrpDetailMonitorTable_Object = MibTable
wingStatsDevVrrpDetailMonitorTable = _WingStatsDevVrrpDetailMonitorTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 4)
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailMonitorTable.setStatus("current")
_WingStatsDevVrrpDetailMonitorEntry_Object = MibTableRow
wingStatsDevVrrpDetailMonitorEntry = _WingStatsDevVrrpDetailMonitorEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 4, 1)
)
wingStatsDevVrrpDetailMonitorEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevVrrpDetailVirtualRouterId"),
    (0, "WING-MIB", "wingStatsDevVrrpDetailMonitorIf"),
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailMonitorEntry.setStatus("current")
_WingStatsDevVrrpDetailMonitorIf_Type = WingIdentifier
_WingStatsDevVrrpDetailMonitorIf_Object = MibTableColumn
wingStatsDevVrrpDetailMonitorIf = _WingStatsDevVrrpDetailMonitorIf_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 4, 1, 1),
    _WingStatsDevVrrpDetailMonitorIf_Type()
)
wingStatsDevVrrpDetailMonitorIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailMonitorIf.setStatus("current")
_WingStatsDevVrrpDetailMonitorIfStatusAdmin_Type = DisplayString
_WingStatsDevVrrpDetailMonitorIfStatusAdmin_Object = MibTableColumn
wingStatsDevVrrpDetailMonitorIfStatusAdmin = _WingStatsDevVrrpDetailMonitorIfStatusAdmin_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 4, 1, 3),
    _WingStatsDevVrrpDetailMonitorIfStatusAdmin_Type()
)
wingStatsDevVrrpDetailMonitorIfStatusAdmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpDetailMonitorIfStatusAdmin.setStatus("current")
_WingStatsDevVrrpRouterStatsTable_Object = MibTable
wingStatsDevVrrpRouterStatsTable = _WingStatsDevVrrpRouterStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5)
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsTable.setStatus("current")
_WingStatsDevVrrpRouterStatsEntry_Object = MibTableRow
wingStatsDevVrrpRouterStatsEntry = _WingStatsDevVrrpRouterStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1)
)
wingStatsDevVrrpRouterStatsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevVrrpRouterStatsVirtualRouterId"),
)
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsEntry.setStatus("current")


class _WingStatsDevVrrpRouterStatsVirtualRouterId_Type(Unsigned32):
    """Custom type wingStatsDevVrrpRouterStatsVirtualRouterId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_WingStatsDevVrrpRouterStatsVirtualRouterId_Type.__name__ = "Unsigned32"
_WingStatsDevVrrpRouterStatsVirtualRouterId_Object = MibTableColumn
wingStatsDevVrrpRouterStatsVirtualRouterId = _WingStatsDevVrrpRouterStatsVirtualRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 1),
    _WingStatsDevVrrpRouterStatsVirtualRouterId_Type()
)
wingStatsDevVrrpRouterStatsVirtualRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsVirtualRouterId.setStatus("current")
_WingStatsDevVrrpRouterStatsMasterTransitions_Type = Unsigned32
_WingStatsDevVrrpRouterStatsMasterTransitions_Object = MibTableColumn
wingStatsDevVrrpRouterStatsMasterTransitions = _WingStatsDevVrrpRouterStatsMasterTransitions_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 3),
    _WingStatsDevVrrpRouterStatsMasterTransitions_Type()
)
wingStatsDevVrrpRouterStatsMasterTransitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsMasterTransitions.setStatus("current")
_WingStatsDevVrrpRouterStatsNewMasterReason_Type = DisplayString
_WingStatsDevVrrpRouterStatsNewMasterReason_Object = MibTableColumn
wingStatsDevVrrpRouterStatsNewMasterReason = _WingStatsDevVrrpRouterStatsNewMasterReason_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 4),
    _WingStatsDevVrrpRouterStatsNewMasterReason_Type()
)
wingStatsDevVrrpRouterStatsNewMasterReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsNewMasterReason.setStatus("current")
_WingStatsDevVrrpRouterStatsNumReceivedAdvertisement_Type = Unsigned32
_WingStatsDevVrrpRouterStatsNumReceivedAdvertisement_Object = MibTableColumn
wingStatsDevVrrpRouterStatsNumReceivedAdvertisement = _WingStatsDevVrrpRouterStatsNumReceivedAdvertisement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 5),
    _WingStatsDevVrrpRouterStatsNumReceivedAdvertisement_Type()
)
wingStatsDevVrrpRouterStatsNumReceivedAdvertisement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsNumReceivedAdvertisement.setStatus("current")
_WingStatsDevVrrpRouterStatsAdvertisementIntervalErrs_Type = Unsigned32
_WingStatsDevVrrpRouterStatsAdvertisementIntervalErrs_Object = MibTableColumn
wingStatsDevVrrpRouterStatsAdvertisementIntervalErrs = _WingStatsDevVrrpRouterStatsAdvertisementIntervalErrs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 6),
    _WingStatsDevVrrpRouterStatsAdvertisementIntervalErrs_Type()
)
wingStatsDevVrrpRouterStatsAdvertisementIntervalErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsAdvertisementIntervalErrs.setStatus("current")
_WingStatsDevVrrpRouterStatsNumSendAdvertisement_Type = Unsigned32
_WingStatsDevVrrpRouterStatsNumSendAdvertisement_Object = MibTableColumn
wingStatsDevVrrpRouterStatsNumSendAdvertisement = _WingStatsDevVrrpRouterStatsNumSendAdvertisement_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 7),
    _WingStatsDevVrrpRouterStatsNumSendAdvertisement_Type()
)
wingStatsDevVrrpRouterStatsNumSendAdvertisement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsNumSendAdvertisement.setStatus("current")
_WingStatsDevVrrpRouterStatsReceivedAdvtInitState_Type = Unsigned32
_WingStatsDevVrrpRouterStatsReceivedAdvtInitState_Object = MibTableColumn
wingStatsDevVrrpRouterStatsReceivedAdvtInitState = _WingStatsDevVrrpRouterStatsReceivedAdvtInitState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 8),
    _WingStatsDevVrrpRouterStatsReceivedAdvtInitState_Type()
)
wingStatsDevVrrpRouterStatsReceivedAdvtInitState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsReceivedAdvtInitState.setStatus("current")
_WingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets_Type = Unsigned32
_WingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets_Object = MibTableColumn
wingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets = _WingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 9),
    _WingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets_Type()
)
wingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets.setStatus("current")
_WingStatsDevVrrpRouterStatsSendPriorityZeroPackets_Type = Unsigned32
_WingStatsDevVrrpRouterStatsSendPriorityZeroPackets_Object = MibTableColumn
wingStatsDevVrrpRouterStatsSendPriorityZeroPackets = _WingStatsDevVrrpRouterStatsSendPriorityZeroPackets_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 10),
    _WingStatsDevVrrpRouterStatsSendPriorityZeroPackets_Type()
)
wingStatsDevVrrpRouterStatsSendPriorityZeroPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsSendPriorityZeroPackets.setStatus("current")
_WingStatsDevVrrpRouterStatsAddressListErrors_Type = Unsigned32
_WingStatsDevVrrpRouterStatsAddressListErrors_Object = MibTableColumn
wingStatsDevVrrpRouterStatsAddressListErrors = _WingStatsDevVrrpRouterStatsAddressListErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 31, 5, 1, 11),
    _WingStatsDevVrrpRouterStatsAddressListErrors_Type()
)
wingStatsDevVrrpRouterStatsAddressListErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevVrrpRouterStatsAddressListErrors.setStatus("current")
_WingStatsDevCrm_ObjectIdentity = ObjectIdentity
wingStatsDevCrm = _WingStatsDevCrm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32)
)
_WingStatsDevCrmTable_Object = MibTable
wingStatsDevCrmTable = _WingStatsDevCrmTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevCrmTable.setStatus("current")
_WingStatsDevCrmEntry_Object = MibTableRow
wingStatsDevCrmEntry = _WingStatsDevCrmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 1, 1)
)
wingStatsDevCrmEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevCrmEntry.setStatus("current")
_WingStatsDevCrmMonitorInterval_Type = Unsigned32
_WingStatsDevCrmMonitorInterval_Object = MibTableColumn
wingStatsDevCrmMonitorInterval = _WingStatsDevCrmMonitorInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 1, 1, 1),
    _WingStatsDevCrmMonitorInterval_Type()
)
wingStatsDevCrmMonitorInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmMonitorInterval.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsDevCrmMonitorInterval.setUnits("seconds")
_WingStatsDevCrmCriticalResTable_Object = MibTable
wingStatsDevCrmCriticalResTable = _WingStatsDevCrmCriticalResTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResTable.setStatus("current")
_WingStatsDevCrmCriticalResEntry_Object = MibTableRow
wingStatsDevCrmCriticalResEntry = _WingStatsDevCrmCriticalResEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 2, 1)
)
wingStatsDevCrmCriticalResEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevCrmCriticalResVia"),
)
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResEntry.setStatus("current")
_WingStatsDevCrmCriticalResVia_Type = WingIdentifier
_WingStatsDevCrmCriticalResVia_Object = MibTableColumn
wingStatsDevCrmCriticalResVia = _WingStatsDevCrmCriticalResVia_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 2, 1, 1),
    _WingStatsDevCrmCriticalResVia_Type()
)
wingStatsDevCrmCriticalResVia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResVia.setStatus("current")
_WingStatsDevCrmCriticalResStatus_Type = DisplayString
_WingStatsDevCrmCriticalResStatus_Object = MibTableColumn
wingStatsDevCrmCriticalResStatus = _WingStatsDevCrmCriticalResStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 2, 1, 3),
    _WingStatsDevCrmCriticalResStatus_Type()
)
wingStatsDevCrmCriticalResStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResStatus.setStatus("current")
_WingStatsDevCrmCriticalResErrorReason_Type = DisplayString
_WingStatsDevCrmCriticalResErrorReason_Object = MibTableColumn
wingStatsDevCrmCriticalResErrorReason = _WingStatsDevCrmCriticalResErrorReason_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 2, 1, 4),
    _WingStatsDevCrmCriticalResErrorReason_Type()
)
wingStatsDevCrmCriticalResErrorReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResErrorReason.setStatus("current")
_WingStatsDevCrmCriticalResMode_Type = DisplayString
_WingStatsDevCrmCriticalResMode_Object = MibTableColumn
wingStatsDevCrmCriticalResMode = _WingStatsDevCrmCriticalResMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 2, 1, 5),
    _WingStatsDevCrmCriticalResMode_Type()
)
wingStatsDevCrmCriticalResMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResMode.setStatus("current")
_WingStatsDevCrmCriticalResResTable_Object = MibTable
wingStatsDevCrmCriticalResResTable = _WingStatsDevCrmCriticalResResTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 3)
)
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResResTable.setStatus("current")
_WingStatsDevCrmCriticalResResEntry_Object = MibTableRow
wingStatsDevCrmCriticalResResEntry = _WingStatsDevCrmCriticalResResEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 3, 1)
)
wingStatsDevCrmCriticalResResEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevCrmCriticalResVia"),
    (0, "WING-MIB", "wingStatsDevCrmCriticalResResAddr"),
)
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResResEntry.setStatus("current")
_WingStatsDevCrmCriticalResResAddr_Type = WingIdentifier
_WingStatsDevCrmCriticalResResAddr_Object = MibTableColumn
wingStatsDevCrmCriticalResResAddr = _WingStatsDevCrmCriticalResResAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 3, 1, 1),
    _WingStatsDevCrmCriticalResResAddr_Type()
)
wingStatsDevCrmCriticalResResAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResResAddr.setStatus("current")
_WingStatsDevCrmCriticalResResMonitorMode_Type = DisplayString
_WingStatsDevCrmCriticalResResMonitorMode_Object = MibTableColumn
wingStatsDevCrmCriticalResResMonitorMode = _WingStatsDevCrmCriticalResResMonitorMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 3, 1, 3),
    _WingStatsDevCrmCriticalResResMonitorMode_Type()
)
wingStatsDevCrmCriticalResResMonitorMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResResMonitorMode.setStatus("current")
_WingStatsDevCrmCriticalResResArpVlan_Type = Unsigned32
_WingStatsDevCrmCriticalResResArpVlan_Object = MibTableColumn
wingStatsDevCrmCriticalResResArpVlan = _WingStatsDevCrmCriticalResResArpVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 3, 1, 4),
    _WingStatsDevCrmCriticalResResArpVlan_Type()
)
wingStatsDevCrmCriticalResResArpVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResResArpVlan.setStatus("current")
_WingStatsDevCrmCriticalResResStatus_Type = DisplayString
_WingStatsDevCrmCriticalResResStatus_Object = MibTableColumn
wingStatsDevCrmCriticalResResStatus = _WingStatsDevCrmCriticalResResStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 3, 1, 5),
    _WingStatsDevCrmCriticalResResStatus_Type()
)
wingStatsDevCrmCriticalResResStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResResStatus.setStatus("current")
_WingStatsDevCrmCriticalResResArpPort_Type = DisplayString
_WingStatsDevCrmCriticalResResArpPort_Object = MibTableColumn
wingStatsDevCrmCriticalResResArpPort = _WingStatsDevCrmCriticalResResArpPort_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 32, 3, 1, 6),
    _WingStatsDevCrmCriticalResResArpPort_Type()
)
wingStatsDevCrmCriticalResResArpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevCrmCriticalResResArpPort.setStatus("current")
_WingStatsDevPbr_ObjectIdentity = ObjectIdentity
wingStatsDevPbr = _WingStatsDevPbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33)
)
_WingStatsDevPbrTable_Object = MibTable
wingStatsDevPbrTable = _WingStatsDevPbrTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevPbrTable.setStatus("current")
_WingStatsDevPbrEntry_Object = MibTableRow
wingStatsDevPbrEntry = _WingStatsDevPbrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1)
)
wingStatsDevPbrEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevPbrRouteMapPrecedence"),
)
if mibBuilder.loadTexts:
    wingStatsDevPbrEntry.setStatus("current")


class _WingStatsDevPbrRouteMapPrecedence_Type(Unsigned32):
    """Custom type wingStatsDevPbrRouteMapPrecedence based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_WingStatsDevPbrRouteMapPrecedence_Type.__name__ = "Unsigned32"
_WingStatsDevPbrRouteMapPrecedence_Object = MibTableColumn
wingStatsDevPbrRouteMapPrecedence = _WingStatsDevPbrRouteMapPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 1),
    _WingStatsDevPbrRouteMapPrecedence_Type()
)
wingStatsDevPbrRouteMapPrecedence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrRouteMapPrecedence.setStatus("current")
_WingStatsDevPbrPrimaryNextHopIfName_Type = DisplayString
_WingStatsDevPbrPrimaryNextHopIfName_Object = MibTableColumn
wingStatsDevPbrPrimaryNextHopIfName = _WingStatsDevPbrPrimaryNextHopIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 3),
    _WingStatsDevPbrPrimaryNextHopIfName_Type()
)
wingStatsDevPbrPrimaryNextHopIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrPrimaryNextHopIfName.setStatus("current")
_WingStatsDevPbrPrimaryNextHopIpAddr_Type = DisplayString
_WingStatsDevPbrPrimaryNextHopIpAddr_Object = MibTableColumn
wingStatsDevPbrPrimaryNextHopIpAddr = _WingStatsDevPbrPrimaryNextHopIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 4),
    _WingStatsDevPbrPrimaryNextHopIpAddr_Type()
)
wingStatsDevPbrPrimaryNextHopIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrPrimaryNextHopIpAddr.setStatus("current")
_WingStatsDevPbrPrimaryNextHopState_Type = DisplayString
_WingStatsDevPbrPrimaryNextHopState_Object = MibTableColumn
wingStatsDevPbrPrimaryNextHopState = _WingStatsDevPbrPrimaryNextHopState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 5),
    _WingStatsDevPbrPrimaryNextHopState_Type()
)
wingStatsDevPbrPrimaryNextHopState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrPrimaryNextHopState.setStatus("current")
_WingStatsDevPbrPrimaryNextHopMonitorMode_Type = DisplayString
_WingStatsDevPbrPrimaryNextHopMonitorMode_Object = MibTableColumn
wingStatsDevPbrPrimaryNextHopMonitorMode = _WingStatsDevPbrPrimaryNextHopMonitorMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 6),
    _WingStatsDevPbrPrimaryNextHopMonitorMode_Type()
)
wingStatsDevPbrPrimaryNextHopMonitorMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrPrimaryNextHopMonitorMode.setStatus("current")
_WingStatsDevPbrSecondaryNextHopIfName_Type = DisplayString
_WingStatsDevPbrSecondaryNextHopIfName_Object = MibTableColumn
wingStatsDevPbrSecondaryNextHopIfName = _WingStatsDevPbrSecondaryNextHopIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 7),
    _WingStatsDevPbrSecondaryNextHopIfName_Type()
)
wingStatsDevPbrSecondaryNextHopIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrSecondaryNextHopIfName.setStatus("current")
_WingStatsDevPbrSecondaryNextHopIpAddr_Type = DisplayString
_WingStatsDevPbrSecondaryNextHopIpAddr_Object = MibTableColumn
wingStatsDevPbrSecondaryNextHopIpAddr = _WingStatsDevPbrSecondaryNextHopIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 8),
    _WingStatsDevPbrSecondaryNextHopIpAddr_Type()
)
wingStatsDevPbrSecondaryNextHopIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrSecondaryNextHopIpAddr.setStatus("current")
_WingStatsDevPbrSecondaryNextHopState_Type = DisplayString
_WingStatsDevPbrSecondaryNextHopState_Object = MibTableColumn
wingStatsDevPbrSecondaryNextHopState = _WingStatsDevPbrSecondaryNextHopState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 9),
    _WingStatsDevPbrSecondaryNextHopState_Type()
)
wingStatsDevPbrSecondaryNextHopState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrSecondaryNextHopState.setStatus("current")
_WingStatsDevPbrSecondaryNextHopMonitorMode_Type = DisplayString
_WingStatsDevPbrSecondaryNextHopMonitorMode_Object = MibTableColumn
wingStatsDevPbrSecondaryNextHopMonitorMode = _WingStatsDevPbrSecondaryNextHopMonitorMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 10),
    _WingStatsDevPbrSecondaryNextHopMonitorMode_Type()
)
wingStatsDevPbrSecondaryNextHopMonitorMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrSecondaryNextHopMonitorMode.setStatus("current")
_WingStatsDevPbrDefaultNextHopIfName_Type = DisplayString
_WingStatsDevPbrDefaultNextHopIfName_Object = MibTableColumn
wingStatsDevPbrDefaultNextHopIfName = _WingStatsDevPbrDefaultNextHopIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 11),
    _WingStatsDevPbrDefaultNextHopIfName_Type()
)
wingStatsDevPbrDefaultNextHopIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrDefaultNextHopIfName.setStatus("current")
_WingStatsDevPbrDefaultNextHopIpAddr_Type = DisplayString
_WingStatsDevPbrDefaultNextHopIpAddr_Object = MibTableColumn
wingStatsDevPbrDefaultNextHopIpAddr = _WingStatsDevPbrDefaultNextHopIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 12),
    _WingStatsDevPbrDefaultNextHopIpAddr_Type()
)
wingStatsDevPbrDefaultNextHopIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrDefaultNextHopIpAddr.setStatus("current")
_WingStatsDevPbrDefaultNextHopState_Type = DisplayString
_WingStatsDevPbrDefaultNextHopState_Object = MibTableColumn
wingStatsDevPbrDefaultNextHopState = _WingStatsDevPbrDefaultNextHopState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 13),
    _WingStatsDevPbrDefaultNextHopState_Type()
)
wingStatsDevPbrDefaultNextHopState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrDefaultNextHopState.setStatus("current")
_WingStatsDevPbrDefaultNextHopMonitorMode_Type = DisplayString
_WingStatsDevPbrDefaultNextHopMonitorMode_Object = MibTableColumn
wingStatsDevPbrDefaultNextHopMonitorMode = _WingStatsDevPbrDefaultNextHopMonitorMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 14),
    _WingStatsDevPbrDefaultNextHopMonitorMode_Type()
)
wingStatsDevPbrDefaultNextHopMonitorMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrDefaultNextHopMonitorMode.setStatus("current")
_WingStatsDevPbrWlan_Type = DisplayString
_WingStatsDevPbrWlan_Object = MibTableColumn
wingStatsDevPbrWlan = _WingStatsDevPbrWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 15),
    _WingStatsDevPbrWlan_Type()
)
wingStatsDevPbrWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrWlan.setStatus("current")
_WingStatsDevPbrWirelessClientRole_Type = DisplayString
_WingStatsDevPbrWirelessClientRole_Object = MibTableColumn
wingStatsDevPbrWirelessClientRole = _WingStatsDevPbrWirelessClientRole_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 16),
    _WingStatsDevPbrWirelessClientRole_Type()
)
wingStatsDevPbrWirelessClientRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrWirelessClientRole.setStatus("current")
_WingStatsDevPbrInInterface_Type = DisplayString
_WingStatsDevPbrInInterface_Object = MibTableColumn
wingStatsDevPbrInInterface = _WingStatsDevPbrInInterface_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 17),
    _WingStatsDevPbrInInterface_Type()
)
wingStatsDevPbrInInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrInInterface.setStatus("current")
_WingStatsDevPbrIpDscp_Type = DisplayString
_WingStatsDevPbrIpDscp_Object = MibTableColumn
wingStatsDevPbrIpDscp = _WingStatsDevPbrIpDscp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 1, 1, 18),
    _WingStatsDevPbrIpDscp_Type()
)
wingStatsDevPbrIpDscp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrIpDscp.setStatus("current")
_WingStatsDevPbrRulesTable_Object = MibTable
wingStatsDevPbrRulesTable = _WingStatsDevPbrRulesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevPbrRulesTable.setStatus("current")
_WingStatsDevPbrRulesEntry_Object = MibTableRow
wingStatsDevPbrRulesEntry = _WingStatsDevPbrRulesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 2, 1)
)
wingStatsDevPbrRulesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevPbrRouteMapPrecedence"),
    (0, "WING-MIB", "wingStatsDevPbrRuleString"),
)
if mibBuilder.loadTexts:
    wingStatsDevPbrRulesEntry.setStatus("current")
_WingStatsDevPbrRuleString_Type = WingIdentifier
_WingStatsDevPbrRuleString_Object = MibTableColumn
wingStatsDevPbrRuleString = _WingStatsDevPbrRuleString_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 2, 1, 1),
    _WingStatsDevPbrRuleString_Type()
)
wingStatsDevPbrRuleString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrRuleString.setStatus("current")
_WingStatsDevPbrRulesHitcount_Type = Unsigned32
_WingStatsDevPbrRulesHitcount_Object = MibTableColumn
wingStatsDevPbrRulesHitcount = _WingStatsDevPbrRulesHitcount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 33, 2, 1, 3),
    _WingStatsDevPbrRulesHitcount_Type()
)
wingStatsDevPbrRulesHitcount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPbrRulesHitcount.setStatus("current")
_WingStatsDevDynRoute_ObjectIdentity = ObjectIdentity
wingStatsDevDynRoute = _WingStatsDevDynRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34)
)
_WingStatsDevDynRouteIpOspfTable_Object = MibTable
wingStatsDevDynRouteIpOspfTable = _WingStatsDevDynRouteIpOspfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfTable.setStatus("current")
_WingStatsDevDynRouteIpOspfEntry_Object = MibTableRow
wingStatsDevDynRouteIpOspfEntry = _WingStatsDevDynRouteIpOspfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1)
)
wingStatsDevDynRouteIpOspfEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfEntry.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterId_Type = WingIdentifier
_WingStatsDevDynRouteIpOspfRouterId_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterId = _WingStatsDevDynRouteIpOspfRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 1),
    _WingStatsDevDynRouteIpOspfRouterId_Type()
)
wingStatsDevDynRouteIpOspfRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterId.setStatus("current")
_WingStatsDevDynRouteIpOspfShutdownFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfShutdownFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfShutdownFlag = _WingStatsDevDynRouteIpOspfShutdownFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 2),
    _WingStatsDevDynRouteIpOspfShutdownFlag_Type()
)
wingStatsDevDynRouteIpOspfShutdownFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfShutdownFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfShutdownDueTime_Type = DisplayString
_WingStatsDevDynRouteIpOspfShutdownDueTime_Object = MibTableColumn
wingStatsDevDynRouteIpOspfShutdownDueTime = _WingStatsDevDynRouteIpOspfShutdownDueTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 3),
    _WingStatsDevDynRouteIpOspfShutdownDueTime_Type()
)
wingStatsDevDynRouteIpOspfShutdownDueTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfShutdownDueTime.setStatus("current")
_WingStatsDevDynRouteIpOspfTos_Type = Unsigned32
_WingStatsDevDynRouteIpOspfTos_Object = MibTableColumn
wingStatsDevDynRouteIpOspfTos = _WingStatsDevDynRouteIpOspfTos_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 4),
    _WingStatsDevDynRouteIpOspfTos_Type()
)
wingStatsDevDynRouteIpOspfTos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfTos.setStatus("current")
_WingStatsDevDynRouteIpOspfRFC2328ConformanceFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfRFC2328ConformanceFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRFC2328ConformanceFlag = _WingStatsDevDynRouteIpOspfRFC2328ConformanceFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 5),
    _WingStatsDevDynRouteIpOspfRFC2328ConformanceFlag_Type()
)
wingStatsDevDynRouteIpOspfRFC2328ConformanceFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRFC2328ConformanceFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfRFC1583CompatFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfRFC1583CompatFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRFC1583CompatFlag = _WingStatsDevDynRouteIpOspfRFC1583CompatFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 6),
    _WingStatsDevDynRouteIpOspfRFC1583CompatFlag_Type()
)
wingStatsDevDynRouteIpOspfRFC1583CompatFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRFC1583CompatFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfOpaquelsaFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfOpaquelsaFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfOpaquelsaFlag = _WingStatsDevDynRouteIpOspfOpaquelsaFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 7),
    _WingStatsDevDynRouteIpOspfOpaquelsaFlag_Type()
)
wingStatsDevDynRouteIpOspfOpaquelsaFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfOpaquelsaFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag = _WingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 8),
    _WingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag_Type()
)
wingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfStubRouterAdvFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfStubRouterAdvFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfStubRouterAdvFlag = _WingStatsDevDynRouteIpOspfStubRouterAdvFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 9),
    _WingStatsDevDynRouteIpOspfStubRouterAdvFlag_Type()
)
wingStatsDevDynRouteIpOspfStubRouterAdvFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfStubRouterAdvFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfStubRouterStartupTime_Type = Unsigned32
_WingStatsDevDynRouteIpOspfStubRouterStartupTime_Object = MibTableColumn
wingStatsDevDynRouteIpOspfStubRouterStartupTime = _WingStatsDevDynRouteIpOspfStubRouterStartupTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 10),
    _WingStatsDevDynRouteIpOspfStubRouterStartupTime_Type()
)
wingStatsDevDynRouteIpOspfStubRouterStartupTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfStubRouterStartupTime.setStatus("current")
_WingStatsDevDynRouteIpOspfStubRouterShutdownTime_Type = Unsigned32
_WingStatsDevDynRouteIpOspfStubRouterShutdownTime_Object = MibTableColumn
wingStatsDevDynRouteIpOspfStubRouterShutdownTime = _WingStatsDevDynRouteIpOspfStubRouterShutdownTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 11),
    _WingStatsDevDynRouteIpOspfStubRouterShutdownTime_Type()
)
wingStatsDevDynRouteIpOspfStubRouterShutdownTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfStubRouterShutdownTime.setStatus("current")
_WingStatsDevDynRouteIpOspfDelay_Type = Unsigned32
_WingStatsDevDynRouteIpOspfDelay_Object = MibTableColumn
wingStatsDevDynRouteIpOspfDelay = _WingStatsDevDynRouteIpOspfDelay_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 12),
    _WingStatsDevDynRouteIpOspfDelay_Type()
)
wingStatsDevDynRouteIpOspfDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfDelay.setStatus("current")
_WingStatsDevDynRouteIpOspfHoldTime_Type = Unsigned32
_WingStatsDevDynRouteIpOspfHoldTime_Object = MibTableColumn
wingStatsDevDynRouteIpOspfHoldTime = _WingStatsDevDynRouteIpOspfHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 13),
    _WingStatsDevDynRouteIpOspfHoldTime_Type()
)
wingStatsDevDynRouteIpOspfHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfHoldTime.setStatus("current")
_WingStatsDevDynRouteIpOspfMaxHoldTime_Type = Unsigned32
_WingStatsDevDynRouteIpOspfMaxHoldTime_Object = MibTableColumn
wingStatsDevDynRouteIpOspfMaxHoldTime = _WingStatsDevDynRouteIpOspfMaxHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 14),
    _WingStatsDevDynRouteIpOspfMaxHoldTime_Type()
)
wingStatsDevDynRouteIpOspfMaxHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfMaxHoldTime.setStatus("current")
_WingStatsDevDynRouteIpOspfHoldMultiplier_Type = Unsigned32
_WingStatsDevDynRouteIpOspfHoldMultiplier_Object = MibTableColumn
wingStatsDevDynRouteIpOspfHoldMultiplier = _WingStatsDevDynRouteIpOspfHoldMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 15),
    _WingStatsDevDynRouteIpOspfHoldMultiplier_Type()
)
wingStatsDevDynRouteIpOspfHoldMultiplier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfHoldMultiplier.setStatus("current")
_WingStatsDevDynRouteIpOspfExecutedFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfExecutedFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfExecutedFlag = _WingStatsDevDynRouteIpOspfExecutedFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 16),
    _WingStatsDevDynRouteIpOspfExecutedFlag_Type()
)
wingStatsDevDynRouteIpOspfExecutedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfExecutedFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfExecutedWhen_Type = DisplayString
_WingStatsDevDynRouteIpOspfExecutedWhen_Object = MibTableColumn
wingStatsDevDynRouteIpOspfExecutedWhen = _WingStatsDevDynRouteIpOspfExecutedWhen_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 17),
    _WingStatsDevDynRouteIpOspfExecutedWhen_Type()
)
wingStatsDevDynRouteIpOspfExecutedWhen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfExecutedWhen.setStatus("current")
_WingStatsDevDynRouteIpOspfTimerDueFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfTimerDueFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfTimerDueFlag = _WingStatsDevDynRouteIpOspfTimerDueFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 18),
    _WingStatsDevDynRouteIpOspfTimerDueFlag_Type()
)
wingStatsDevDynRouteIpOspfTimerDueFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfTimerDueFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfDueIn_Type = DisplayString
_WingStatsDevDynRouteIpOspfDueIn_Object = MibTableColumn
wingStatsDevDynRouteIpOspfDueIn = _WingStatsDevDynRouteIpOspfDueIn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 19),
    _WingStatsDevDynRouteIpOspfDueIn_Type()
)
wingStatsDevDynRouteIpOspfDueIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfDueIn.setStatus("current")
_WingStatsDevDynRouteIpOspflsaRefreshTimer_Type = Unsigned32
_WingStatsDevDynRouteIpOspflsaRefreshTimer_Object = MibTableColumn
wingStatsDevDynRouteIpOspflsaRefreshTimer = _WingStatsDevDynRouteIpOspflsaRefreshTimer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 20),
    _WingStatsDevDynRouteIpOspflsaRefreshTimer_Type()
)
wingStatsDevDynRouteIpOspflsaRefreshTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspflsaRefreshTimer.setStatus("current")
_WingStatsDevDynRouteIpOspfAbrFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfAbrFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfAbrFlag = _WingStatsDevDynRouteIpOspfAbrFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 21),
    _WingStatsDevDynRouteIpOspfAbrFlag_Type()
)
wingStatsDevDynRouteIpOspfAbrFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfAbrFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfAbrType_Type = DisplayString
_WingStatsDevDynRouteIpOspfAbrType_Object = MibTableColumn
wingStatsDevDynRouteIpOspfAbrType = _WingStatsDevDynRouteIpOspfAbrType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 22),
    _WingStatsDevDynRouteIpOspfAbrType_Type()
)
wingStatsDevDynRouteIpOspfAbrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfAbrType.setStatus("current")
_WingStatsDevDynRouteIpOspfAsbrFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfAsbrFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfAsbrFlag = _WingStatsDevDynRouteIpOspfAsbrFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 23),
    _WingStatsDevDynRouteIpOspfAsbrFlag_Type()
)
wingStatsDevDynRouteIpOspfAsbrFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfAsbrFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfExtLsdbCount_Type = Counter64
_WingStatsDevDynRouteIpOspfExtLsdbCount_Object = MibTableColumn
wingStatsDevDynRouteIpOspfExtLsdbCount = _WingStatsDevDynRouteIpOspfExtLsdbCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 24),
    _WingStatsDevDynRouteIpOspfExtLsdbCount_Type()
)
wingStatsDevDynRouteIpOspfExtLsdbCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfExtLsdbCount.setStatus("current")
_WingStatsDevDynRouteIpOspfExtLsdbCsum_Type = Unsigned32
_WingStatsDevDynRouteIpOspfExtLsdbCsum_Object = MibTableColumn
wingStatsDevDynRouteIpOspfExtLsdbCsum = _WingStatsDevDynRouteIpOspfExtLsdbCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 25),
    _WingStatsDevDynRouteIpOspfExtLsdbCsum_Type()
)
wingStatsDevDynRouteIpOspfExtLsdbCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfExtLsdbCsum.setStatus("current")
_WingStatsDevDynRouteIpOspfOpaqueLsdbCount_Type = Counter64
_WingStatsDevDynRouteIpOspfOpaqueLsdbCount_Object = MibTableColumn
wingStatsDevDynRouteIpOspfOpaqueLsdbCount = _WingStatsDevDynRouteIpOspfOpaqueLsdbCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 26),
    _WingStatsDevDynRouteIpOspfOpaqueLsdbCount_Type()
)
wingStatsDevDynRouteIpOspfOpaqueLsdbCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfOpaqueLsdbCount.setStatus("current")
_WingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum_Type = Unsigned32
_WingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum_Object = MibTableColumn
wingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum = _WingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 27),
    _WingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum_Type()
)
wingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum.setStatus("current")
_WingStatsDevDynRouteIpOspfNumAreasAttached_Type = Unsigned32
_WingStatsDevDynRouteIpOspfNumAreasAttached_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNumAreasAttached = _WingStatsDevDynRouteIpOspfNumAreasAttached_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 28),
    _WingStatsDevDynRouteIpOspfNumAreasAttached_Type()
)
wingStatsDevDynRouteIpOspfNumAreasAttached.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNumAreasAttached.setStatus("current")
_WingStatsDevDynRouteIpOspfMaxRoutes_Type = Unsigned32
_WingStatsDevDynRouteIpOspfMaxRoutes_Object = MibTableColumn
wingStatsDevDynRouteIpOspfMaxRoutes = _WingStatsDevDynRouteIpOspfMaxRoutes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 29),
    _WingStatsDevDynRouteIpOspfMaxRoutes_Type()
)
wingStatsDevDynRouteIpOspfMaxRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfMaxRoutes.setStatus("current")
_WingStatsDevDynRouteIpOspfRoutesReceived_Type = Unsigned32
_WingStatsDevDynRouteIpOspfRoutesReceived_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRoutesReceived = _WingStatsDevDynRouteIpOspfRoutesReceived_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 30),
    _WingStatsDevDynRouteIpOspfRoutesReceived_Type()
)
wingStatsDevDynRouteIpOspfRoutesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRoutesReceived.setStatus("current")
_WingStatsDevDynRouteIpOspfMaxIgnoreStateCount_Type = Unsigned32
_WingStatsDevDynRouteIpOspfMaxIgnoreStateCount_Object = MibTableColumn
wingStatsDevDynRouteIpOspfMaxIgnoreStateCount = _WingStatsDevDynRouteIpOspfMaxIgnoreStateCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 31),
    _WingStatsDevDynRouteIpOspfMaxIgnoreStateCount_Type()
)
wingStatsDevDynRouteIpOspfMaxIgnoreStateCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfMaxIgnoreStateCount.setStatus("current")
_WingStatsDevDynRouteIpOspfIgnoreStateCount_Type = Unsigned32
_WingStatsDevDynRouteIpOspfIgnoreStateCount_Object = MibTableColumn
wingStatsDevDynRouteIpOspfIgnoreStateCount = _WingStatsDevDynRouteIpOspfIgnoreStateCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 32),
    _WingStatsDevDynRouteIpOspfIgnoreStateCount_Type()
)
wingStatsDevDynRouteIpOspfIgnoreStateCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfIgnoreStateCount.setStatus("current")
_WingStatsDevDynRouteIpOspfIgnoreStateTimeout_Type = Unsigned32
_WingStatsDevDynRouteIpOspfIgnoreStateTimeout_Object = MibTableColumn
wingStatsDevDynRouteIpOspfIgnoreStateTimeout = _WingStatsDevDynRouteIpOspfIgnoreStateTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 33),
    _WingStatsDevDynRouteIpOspfIgnoreStateTimeout_Type()
)
wingStatsDevDynRouteIpOspfIgnoreStateTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfIgnoreStateTimeout.setStatus("current")
_WingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout_Type = Unsigned32
_WingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout_Object = MibTableColumn
wingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout = _WingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 34),
    _WingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout_Type()
)
wingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout.setStatus("current")
_WingStatsDevDynRouteIpOspfState_Type = DisplayString
_WingStatsDevDynRouteIpOspfState_Object = MibTableColumn
wingStatsDevDynRouteIpOspfState = _WingStatsDevDynRouteIpOspfState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 1, 1, 35),
    _WingStatsDevDynRouteIpOspfState_Type()
)
wingStatsDevDynRouteIpOspfState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfState.setStatus("current")
_WingStatsDevDynRouteOspfAreaTable_Object = MibTable
wingStatsDevDynRouteOspfAreaTable = _WingStatsDevDynRouteOspfAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaTable.setStatus("current")
_WingStatsDevDynRouteOspfAreaEntry_Object = MibTableRow
wingStatsDevDynRouteOspfAreaEntry = _WingStatsDevDynRouteOspfAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1)
)
wingStatsDevDynRouteOspfAreaEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteOspfAreaId"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaEntry.setStatus("current")
_WingStatsDevDynRouteOspfAreaId_Type = WingIdentifier
_WingStatsDevDynRouteOspfAreaId_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaId = _WingStatsDevDynRouteOspfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 1),
    _WingStatsDevDynRouteOspfAreaId_Type()
)
wingStatsDevDynRouteOspfAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaId.setStatus("current")
_WingStatsDevDynRouteOspfAreaType_Type = DisplayString
_WingStatsDevDynRouteOspfAreaType_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaType = _WingStatsDevDynRouteOspfAreaType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 2),
    _WingStatsDevDynRouteOspfAreaType_Type()
)
wingStatsDevDynRouteOspfAreaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaType.setStatus("current")
_WingStatsDevDynRouteOspfAreaBackboneFlag_Type = TruthValue
_WingStatsDevDynRouteOspfAreaBackboneFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaBackboneFlag = _WingStatsDevDynRouteOspfAreaBackboneFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 3),
    _WingStatsDevDynRouteOspfAreaBackboneFlag_Type()
)
wingStatsDevDynRouteOspfAreaBackboneFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaBackboneFlag.setStatus("current")
_WingStatsDevDynRouteOspfAreaNoSummaryFlag_Type = TruthValue
_WingStatsDevDynRouteOspfAreaNoSummaryFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNoSummaryFlag = _WingStatsDevDynRouteOspfAreaNoSummaryFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 4),
    _WingStatsDevDynRouteOspfAreaNoSummaryFlag_Type()
)
wingStatsDevDynRouteOspfAreaNoSummaryFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNoSummaryFlag.setStatus("current")
_WingStatsDevDynRouteOspfAreaShortcutType_Type = DisplayString
_WingStatsDevDynRouteOspfAreaShortcutType_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaShortcutType = _WingStatsDevDynRouteOspfAreaShortcutType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 5),
    _WingStatsDevDynRouteOspfAreaShortcutType_Type()
)
wingStatsDevDynRouteOspfAreaShortcutType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaShortcutType.setStatus("current")
_WingStatsDevDynRouteOspfAreaShortcutCapability_Type = TruthValue
_WingStatsDevDynRouteOspfAreaShortcutCapability_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaShortcutCapability = _WingStatsDevDynRouteOspfAreaShortcutCapability_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 6),
    _WingStatsDevDynRouteOspfAreaShortcutCapability_Type()
)
wingStatsDevDynRouteOspfAreaShortcutCapability.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaShortcutCapability.setStatus("current")
_WingStatsDevDynRouteOspfAreaInterfaceNum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaInterfaceNum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaInterfaceNum = _WingStatsDevDynRouteOspfAreaInterfaceNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 7),
    _WingStatsDevDynRouteOspfAreaInterfaceNum_Type()
)
wingStatsDevDynRouteOspfAreaInterfaceNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaInterfaceNum.setStatus("current")
_WingStatsDevDynRouteOspfAreaActiveInterfaces_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaActiveInterfaces_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaActiveInterfaces = _WingStatsDevDynRouteOspfAreaActiveInterfaces_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 8),
    _WingStatsDevDynRouteOspfAreaActiveInterfaces_Type()
)
wingStatsDevDynRouteOspfAreaActiveInterfaces.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaActiveInterfaces.setStatus("current")
_WingStatsDevDynRouteOspfAreaNssaFlag_Type = TruthValue
_WingStatsDevDynRouteOspfAreaNssaFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNssaFlag = _WingStatsDevDynRouteOspfAreaNssaFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 9),
    _WingStatsDevDynRouteOspfAreaNssaFlag_Type()
)
wingStatsDevDynRouteOspfAreaNssaFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNssaFlag.setStatus("current")
_WingStatsDevDynRouteOspfAreaNssaTransType_Type = DisplayString
_WingStatsDevDynRouteOspfAreaNssaTransType_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNssaTransType = _WingStatsDevDynRouteOspfAreaNssaTransType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 10),
    _WingStatsDevDynRouteOspfAreaNssaTransType_Type()
)
wingStatsDevDynRouteOspfAreaNssaTransType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNssaTransType.setStatus("current")
_WingStatsDevDynRouteOspfAreaStubRouterStateFlag_Type = TruthValue
_WingStatsDevDynRouteOspfAreaStubRouterStateFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaStubRouterStateFlag = _WingStatsDevDynRouteOspfAreaStubRouterStateFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 11),
    _WingStatsDevDynRouteOspfAreaStubRouterStateFlag_Type()
)
wingStatsDevDynRouteOspfAreaStubRouterStateFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaStubRouterStateFlag.setStatus("current")
_WingStatsDevDynRouteOspfAreaAdminStubRoutedFlag_Type = TruthValue
_WingStatsDevDynRouteOspfAreaAdminStubRoutedFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaAdminStubRoutedFlag = _WingStatsDevDynRouteOspfAreaAdminStubRoutedFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 12),
    _WingStatsDevDynRouteOspfAreaAdminStubRoutedFlag_Type()
)
wingStatsDevDynRouteOspfAreaAdminStubRoutedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaAdminStubRoutedFlag.setStatus("current")
_WingStatsDevDynRouteOspfAreaStartupTimeDue_Type = DisplayString
_WingStatsDevDynRouteOspfAreaStartupTimeDue_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaStartupTimeDue = _WingStatsDevDynRouteOspfAreaStartupTimeDue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 13),
    _WingStatsDevDynRouteOspfAreaStartupTimeDue_Type()
)
wingStatsDevDynRouteOspfAreaStartupTimeDue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaStartupTimeDue.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumFullyAdjNbrs_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaNumFullyAdjNbrs_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumFullyAdjNbrs = _WingStatsDevDynRouteOspfAreaNumFullyAdjNbrs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 14),
    _WingStatsDevDynRouteOspfAreaNumFullyAdjNbrs_Type()
)
wingStatsDevDynRouteOspfAreaNumFullyAdjNbrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumFullyAdjNbrs.setStatus("current")
_WingStatsDevDynRouteOspfAreaAuthType_Type = DisplayString
_WingStatsDevDynRouteOspfAreaAuthType_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaAuthType = _WingStatsDevDynRouteOspfAreaAuthType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 15),
    _WingStatsDevDynRouteOspfAreaAuthType_Type()
)
wingStatsDevDynRouteOspfAreaAuthType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaAuthType.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumFullVirtualAdj_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaNumFullVirtualAdj_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumFullVirtualAdj = _WingStatsDevDynRouteOspfAreaNumFullVirtualAdj_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 16),
    _WingStatsDevDynRouteOspfAreaNumFullVirtualAdj_Type()
)
wingStatsDevDynRouteOspfAreaNumFullVirtualAdj.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumFullVirtualAdj.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumSpfExecuted_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaNumSpfExecuted_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumSpfExecuted = _WingStatsDevDynRouteOspfAreaNumSpfExecuted_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 17),
    _WingStatsDevDynRouteOspfAreaNumSpfExecuted_Type()
)
wingStatsDevDynRouteOspfAreaNumSpfExecuted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumSpfExecuted.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumTotalLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumTotalLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumTotalLsa = _WingStatsDevDynRouteOspfAreaNumTotalLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 18),
    _WingStatsDevDynRouteOspfAreaNumTotalLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumTotalLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumTotalLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumRouterLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumRouterLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumRouterLsa = _WingStatsDevDynRouteOspfAreaNumRouterLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 19),
    _WingStatsDevDynRouteOspfAreaNumRouterLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumRouterLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumRouterLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaRouterLsaCsum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaRouterLsaCsum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaRouterLsaCsum = _WingStatsDevDynRouteOspfAreaRouterLsaCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 20),
    _WingStatsDevDynRouteOspfAreaRouterLsaCsum_Type()
)
wingStatsDevDynRouteOspfAreaRouterLsaCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaRouterLsaCsum.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumNetworkLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumNetworkLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumNetworkLsa = _WingStatsDevDynRouteOspfAreaNumNetworkLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 21),
    _WingStatsDevDynRouteOspfAreaNumNetworkLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumNetworkLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumNetworkLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaNetworkLsaCsum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaNetworkLsaCsum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNetworkLsaCsum = _WingStatsDevDynRouteOspfAreaNetworkLsaCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 22),
    _WingStatsDevDynRouteOspfAreaNetworkLsaCsum_Type()
)
wingStatsDevDynRouteOspfAreaNetworkLsaCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNetworkLsaCsum.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumSummaryLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumSummaryLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumSummaryLsa = _WingStatsDevDynRouteOspfAreaNumSummaryLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 23),
    _WingStatsDevDynRouteOspfAreaNumSummaryLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumSummaryLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumSummaryLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaSummaryLsaCsum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaSummaryLsaCsum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaSummaryLsaCsum = _WingStatsDevDynRouteOspfAreaSummaryLsaCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 24),
    _WingStatsDevDynRouteOspfAreaSummaryLsaCsum_Type()
)
wingStatsDevDynRouteOspfAreaSummaryLsaCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaSummaryLsaCsum.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa = _WingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 25),
    _WingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum = _WingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 26),
    _WingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum_Type()
)
wingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumNssaLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumNssaLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumNssaLsa = _WingStatsDevDynRouteOspfAreaNumNssaLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 27),
    _WingStatsDevDynRouteOspfAreaNumNssaLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumNssaLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumNssaLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaNssaLsaCsum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaNssaLsaCsum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNssaLsaCsum = _WingStatsDevDynRouteOspfAreaNssaLsaCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 28),
    _WingStatsDevDynRouteOspfAreaNssaLsaCsum_Type()
)
wingStatsDevDynRouteOspfAreaNssaLsaCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNssaLsaCsum.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa = _WingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 29),
    _WingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum = _WingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 30),
    _WingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum_Type()
)
wingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum.setStatus("current")
_WingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa_Type = Counter64
_WingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa = _WingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 31),
    _WingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa_Type()
)
wingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa.setStatus("current")
_WingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum_Type = Unsigned32
_WingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum_Object = MibTableColumn
wingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum = _WingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 2, 1, 32),
    _WingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum_Type()
)
wingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesTable_Object = MibTable
wingStatsDevDynRouteIpOspfNetworkRoutesTable = _WingStatsDevDynRouteIpOspfNetworkRoutesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 3)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesTable.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesEntry_Object = MibTableRow
wingStatsDevDynRouteIpOspfNetworkRoutesEntry = _WingStatsDevDynRouteIpOspfNetworkRoutesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 3, 1)
)
wingStatsDevDynRouteIpOspfNetworkRoutesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoute"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesEntry.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoute_Type = WingIdentifier
_WingStatsDevDynRouteIpOspfNetworkRoute_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoute = _WingStatsDevDynRouteIpOspfNetworkRoute_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 3, 1, 1),
    _WingStatsDevDynRouteIpOspfNetworkRoute_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoute.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesPathType_Type = DisplayString
_WingStatsDevDynRouteIpOspfNetworkRoutesPathType_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesPathType = _WingStatsDevDynRouteIpOspfNetworkRoutesPathType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 3, 1, 2),
    _WingStatsDevDynRouteIpOspfNetworkRoutesPathType_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesPathType.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesDestType_Type = DisplayString
_WingStatsDevDynRouteIpOspfNetworkRoutesDestType_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesDestType = _WingStatsDevDynRouteIpOspfNetworkRoutesDestType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 3, 1, 3),
    _WingStatsDevDynRouteIpOspfNetworkRoutesDestType_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesDestType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesDestType.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesCost_Type = Unsigned32
_WingStatsDevDynRouteIpOspfNetworkRoutesCost_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesCost = _WingStatsDevDynRouteIpOspfNetworkRoutesCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 3, 1, 4),
    _WingStatsDevDynRouteIpOspfNetworkRoutesCost_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesCost.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesArea_Type = DisplayString
_WingStatsDevDynRouteIpOspfNetworkRoutesArea_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesArea = _WingStatsDevDynRouteIpOspfNetworkRoutesArea_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 3, 1, 5),
    _WingStatsDevDynRouteIpOspfNetworkRoutesArea_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesArea.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesMPathsTable_Object = MibTable
wingStatsDevDynRouteIpOspfNetworkRoutesMPathsTable = _WingStatsDevDynRouteIpOspfNetworkRoutesMPathsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 4)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesMPathsTable.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesMPathsEntry_Object = MibTableRow
wingStatsDevDynRouteIpOspfNetworkRoutesMPathsEntry = _WingStatsDevDynRouteIpOspfNetworkRoutesMPathsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 4, 1)
)
wingStatsDevDynRouteIpOspfNetworkRoutesMPathsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoute"),
    (0, "WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesMPathsEntry.setStatus("current")


class _WingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex_Type(Unsigned32):
    """Custom type wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex_Type.__name__ = "Unsigned32"
_WingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex = _WingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 4, 1, 1),
    _WingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags_Type = TruthValue
_WingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags = _WingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 4, 1, 2),
    _WingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesIfName_Type = DisplayString
_WingStatsDevDynRouteIpOspfNetworkRoutesIfName_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesIfName = _WingStatsDevDynRouteIpOspfNetworkRoutesIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 4, 1, 3),
    _WingStatsDevDynRouteIpOspfNetworkRoutesIfName_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesIfName.setStatus("current")
_WingStatsDevDynRouteIpOspfNetworkRoutesNextHop_Type = DisplayString
_WingStatsDevDynRouteIpOspfNetworkRoutesNextHop_Object = MibTableColumn
wingStatsDevDynRouteIpOspfNetworkRoutesNextHop = _WingStatsDevDynRouteIpOspfNetworkRoutesNextHop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 4, 1, 4),
    _WingStatsDevDynRouteIpOspfNetworkRoutesNextHop_Type()
)
wingStatsDevDynRouteIpOspfNetworkRoutesNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfNetworkRoutesNextHop.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRoutesTable_Object = MibTable
wingStatsDevDynRouteIpOspfRouterRoutesTable = _WingStatsDevDynRouteIpOspfRouterRoutesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 5)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRoutesTable.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRoutesEntry_Object = MibTableRow
wingStatsDevDynRouteIpOspfRouterRoutesEntry = _WingStatsDevDynRouteIpOspfRouterRoutesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 5, 1)
)
wingStatsDevDynRouteIpOspfRouterRoutesEntry.setIndexNames(
    (0, "WING-MIB", "wingCfgDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoute"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRoutesEntry.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRoute_Type = WingIdentifier
_WingStatsDevDynRouteIpOspfRouterRoute_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRoute = _WingStatsDevDynRouteIpOspfRouterRoute_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 5, 1, 1),
    _WingStatsDevDynRouteIpOspfRouterRoute_Type()
)
wingStatsDevDynRouteIpOspfRouterRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRoute.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRoutesInfoTable_Object = MibTable
wingStatsDevDynRouteIpOspfRouterRoutesInfoTable = _WingStatsDevDynRouteIpOspfRouterRoutesInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRoutesInfoTable.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRoutesInfoEntry_Object = MibTableRow
wingStatsDevDynRouteIpOspfRouterRoutesInfoEntry = _WingStatsDevDynRouteIpOspfRouterRoutesInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1)
)
wingStatsDevDynRouteIpOspfRouterRoutesInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoute"),
    (0, "WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRoutesInfoEntry.setStatus("current")


class _WingStatsDevDynRouteIpOspfRouterRoutesInfoIndex_Type(Unsigned32):
    """Custom type wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevDynRouteIpOspfRouterRoutesInfoIndex_Type.__name__ = "Unsigned32"
_WingStatsDevDynRouteIpOspfRouterRoutesInfoIndex_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex = _WingStatsDevDynRouteIpOspfRouterRoutesInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 1),
    _WingStatsDevDynRouteIpOspfRouterRoutesInfoIndex_Type()
)
wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRoutePathType_Type = DisplayString
_WingStatsDevDynRouteIpOspfRouterRoutePathType_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRoutePathType = _WingStatsDevDynRouteIpOspfRouterRoutePathType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 2),
    _WingStatsDevDynRouteIpOspfRouterRoutePathType_Type()
)
wingStatsDevDynRouteIpOspfRouterRoutePathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRoutePathType.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRouteArea_Type = DisplayString
_WingStatsDevDynRouteIpOspfRouterRouteArea_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRouteArea = _WingStatsDevDynRouteIpOspfRouterRouteArea_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 3),
    _WingStatsDevDynRouteIpOspfRouterRouteArea_Type()
)
wingStatsDevDynRouteIpOspfRouterRouteArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRouteArea.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRouteCost_Type = Unsigned32
_WingStatsDevDynRouteIpOspfRouterRouteCost_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRouteCost = _WingStatsDevDynRouteIpOspfRouterRouteCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 4),
    _WingStatsDevDynRouteIpOspfRouterRouteCost_Type()
)
wingStatsDevDynRouteIpOspfRouterRouteCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRouteCost.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRouteFlags_Type = DisplayString
_WingStatsDevDynRouteIpOspfRouterRouteFlags_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRouteFlags = _WingStatsDevDynRouteIpOspfRouterRouteFlags_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 5),
    _WingStatsDevDynRouteIpOspfRouterRouteFlags_Type()
)
wingStatsDevDynRouteIpOspfRouterRouteFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRouteFlags.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRouteAttachedFlag_Type = TruthValue
_WingStatsDevDynRouteIpOspfRouterRouteAttachedFlag_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRouteAttachedFlag = _WingStatsDevDynRouteIpOspfRouterRouteAttachedFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 6),
    _WingStatsDevDynRouteIpOspfRouterRouteAttachedFlag_Type()
)
wingStatsDevDynRouteIpOspfRouterRouteAttachedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRouteAttachedFlag.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRouteIfName_Type = DisplayString
_WingStatsDevDynRouteIpOspfRouterRouteIfName_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRouteIfName = _WingStatsDevDynRouteIpOspfRouterRouteIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 7),
    _WingStatsDevDynRouteIpOspfRouterRouteIfName_Type()
)
wingStatsDevDynRouteIpOspfRouterRouteIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRouteIfName.setStatus("current")
_WingStatsDevDynRouteIpOspfRouterRouteNextHop_Type = DisplayString
_WingStatsDevDynRouteIpOspfRouterRouteNextHop_Object = MibTableColumn
wingStatsDevDynRouteIpOspfRouterRouteNextHop = _WingStatsDevDynRouteIpOspfRouterRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 6, 1, 8),
    _WingStatsDevDynRouteIpOspfRouterRouteNextHop_Type()
)
wingStatsDevDynRouteIpOspfRouterRouteNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteIpOspfRouterRouteNextHop.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRoutesTable_Object = MibTable
wingstatsDevDynRouteIpOspfExtRoutesTable = _WingstatsDevDynRouteIpOspfExtRoutesTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7)
)
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRoutesTable.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRoutesEntry_Object = MibTableRow
wingstatsDevDynRouteIpOspfExtRoutesEntry = _WingstatsDevDynRouteIpOspfExtRoutesEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7, 1)
)
wingstatsDevDynRouteIpOspfExtRoutesEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingstatsDevDynRouteIpOspfExtRoute"),
)
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRoutesEntry.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRoute_Type = WingIdentifier
_WingstatsDevDynRouteIpOspfExtRoute_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRoute = _WingstatsDevDynRouteIpOspfExtRoute_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7, 1, 1),
    _WingstatsDevDynRouteIpOspfExtRoute_Type()
)
wingstatsDevDynRouteIpOspfExtRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRoute.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRoutePathType_Type = DisplayString
_WingstatsDevDynRouteIpOspfExtRoutePathType_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRoutePathType = _WingstatsDevDynRouteIpOspfExtRoutePathType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7, 1, 2),
    _WingstatsDevDynRouteIpOspfExtRoutePathType_Type()
)
wingstatsDevDynRouteIpOspfExtRoutePathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRoutePathType.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRouteArea_Type = DisplayString
_WingstatsDevDynRouteIpOspfExtRouteArea_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRouteArea = _WingstatsDevDynRouteIpOspfExtRouteArea_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7, 1, 3),
    _WingstatsDevDynRouteIpOspfExtRouteArea_Type()
)
wingstatsDevDynRouteIpOspfExtRouteArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRouteArea.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRouteCost_Type = Unsigned32
_WingstatsDevDynRouteIpOspfExtRouteCost_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRouteCost = _WingstatsDevDynRouteIpOspfExtRouteCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7, 1, 4),
    _WingstatsDevDynRouteIpOspfExtRouteCost_Type()
)
wingstatsDevDynRouteIpOspfExtRouteCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRouteCost.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRouteType2Cost_Type = Unsigned32
_WingstatsDevDynRouteIpOspfExtRouteType2Cost_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRouteType2Cost = _WingstatsDevDynRouteIpOspfExtRouteType2Cost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7, 1, 5),
    _WingstatsDevDynRouteIpOspfExtRouteType2Cost_Type()
)
wingstatsDevDynRouteIpOspfExtRouteType2Cost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRouteType2Cost.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRouteTag_Type = Unsigned32
_WingstatsDevDynRouteIpOspfExtRouteTag_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRouteTag = _WingstatsDevDynRouteIpOspfExtRouteTag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 7, 1, 6),
    _WingstatsDevDynRouteIpOspfExtRouteTag_Type()
)
wingstatsDevDynRouteIpOspfExtRouteTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRouteTag.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRoutesMPathsTable_Object = MibTable
wingstatsDevDynRouteIpOspfExtRoutesMPathsTable = _WingstatsDevDynRouteIpOspfExtRoutesMPathsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 8)
)
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRoutesMPathsTable.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRoutesMPathsEntry_Object = MibTableRow
wingstatsDevDynRouteIpOspfExtRoutesMPathsEntry = _WingstatsDevDynRouteIpOspfExtRoutesMPathsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 8, 1)
)
wingstatsDevDynRouteIpOspfExtRoutesMPathsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingstatsDevDynRouteIpOspfExtRoute"),
    (0, "WING-MIB", "wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex"),
)
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRoutesMPathsEntry.setStatus("current")


class _WingstatsDevDynRouteIpOspfExtRoutesMPathsIndex_Type(Unsigned32):
    """Custom type wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingstatsDevDynRouteIpOspfExtRoutesMPathsIndex_Type.__name__ = "Unsigned32"
_WingstatsDevDynRouteIpOspfExtRoutesMPathsIndex_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex = _WingstatsDevDynRouteIpOspfExtRoutesMPathsIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 8, 1, 1),
    _WingstatsDevDynRouteIpOspfExtRoutesMPathsIndex_Type()
)
wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRouteAttachedFlag_Type = TruthValue
_WingstatsDevDynRouteIpOspfExtRouteAttachedFlag_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRouteAttachedFlag = _WingstatsDevDynRouteIpOspfExtRouteAttachedFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 8, 1, 2),
    _WingstatsDevDynRouteIpOspfExtRouteAttachedFlag_Type()
)
wingstatsDevDynRouteIpOspfExtRouteAttachedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRouteAttachedFlag.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRouteIfName_Type = DisplayString
_WingstatsDevDynRouteIpOspfExtRouteIfName_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRouteIfName = _WingstatsDevDynRouteIpOspfExtRouteIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 8, 1, 3),
    _WingstatsDevDynRouteIpOspfExtRouteIfName_Type()
)
wingstatsDevDynRouteIpOspfExtRouteIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRouteIfName.setStatus("current")
_WingstatsDevDynRouteIpOspfExtRouteNextHop_Type = DisplayString
_WingstatsDevDynRouteIpOspfExtRouteNextHop_Object = MibTableColumn
wingstatsDevDynRouteIpOspfExtRouteNextHop = _WingstatsDevDynRouteIpOspfExtRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 8, 1, 4),
    _WingstatsDevDynRouteIpOspfExtRouteNextHop_Type()
)
wingstatsDevDynRouteIpOspfExtRouteNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingstatsDevDynRouteIpOspfExtRouteNextHop.setStatus("current")
_WingStatsDevDynRouteBorderRoutersTable_Object = MibTable
wingStatsDevDynRouteBorderRoutersTable = _WingStatsDevDynRouteBorderRoutersTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 9)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRoutersTable.setStatus("current")
_WingStatsDevDynRouteBorderRoutersEntry_Object = MibTableRow
wingStatsDevDynRouteBorderRoutersEntry = _WingStatsDevDynRouteBorderRoutersEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 9, 1)
)
wingStatsDevDynRouteBorderRoutersEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteBorderRouter"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRoutersEntry.setStatus("current")
_WingStatsDevDynRouteBorderRouter_Type = WingIdentifier
_WingStatsDevDynRouteBorderRouter_Object = MibTableColumn
wingStatsDevDynRouteBorderRouter = _WingStatsDevDynRouteBorderRouter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 9, 1, 1),
    _WingStatsDevDynRouteBorderRouter_Type()
)
wingStatsDevDynRouteBorderRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouter.setStatus("current")
_WingStatsDevDynRouteBorderRoutersInfoTable_Object = MibTable
wingStatsDevDynRouteBorderRoutersInfoTable = _WingStatsDevDynRouteBorderRoutersInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRoutersInfoTable.setStatus("current")
_WingStatsDevDynRouteBorderRoutersInfoEntry_Object = MibTableRow
wingStatsDevDynRouteBorderRoutersInfoEntry = _WingStatsDevDynRouteBorderRoutersInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1)
)
wingStatsDevDynRouteBorderRoutersInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteBorderRouter"),
    (0, "WING-MIB", "wingStatsDevDynRouteBorderRoutersInfoIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRoutersInfoEntry.setStatus("current")


class _WingStatsDevDynRouteBorderRoutersInfoIndex_Type(Unsigned32):
    """Custom type wingStatsDevDynRouteBorderRoutersInfoIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevDynRouteBorderRoutersInfoIndex_Type.__name__ = "Unsigned32"
_WingStatsDevDynRouteBorderRoutersInfoIndex_Object = MibTableColumn
wingStatsDevDynRouteBorderRoutersInfoIndex = _WingStatsDevDynRouteBorderRoutersInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 1),
    _WingStatsDevDynRouteBorderRoutersInfoIndex_Type()
)
wingStatsDevDynRouteBorderRoutersInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRoutersInfoIndex.setStatus("current")
_WingStatsDevDynRouteBorderRouterPathType_Type = DisplayString
_WingStatsDevDynRouteBorderRouterPathType_Object = MibTableColumn
wingStatsDevDynRouteBorderRouterPathType = _WingStatsDevDynRouteBorderRouterPathType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 2),
    _WingStatsDevDynRouteBorderRouterPathType_Type()
)
wingStatsDevDynRouteBorderRouterPathType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouterPathType.setStatus("current")
_WingStatsDevDynRouteBorderRouterArea_Type = DisplayString
_WingStatsDevDynRouteBorderRouterArea_Object = MibTableColumn
wingStatsDevDynRouteBorderRouterArea = _WingStatsDevDynRouteBorderRouterArea_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 3),
    _WingStatsDevDynRouteBorderRouterArea_Type()
)
wingStatsDevDynRouteBorderRouterArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouterArea.setStatus("current")
_WingStatsDevDynRouteBorderRouterCost_Type = Unsigned32
_WingStatsDevDynRouteBorderRouterCost_Object = MibTableColumn
wingStatsDevDynRouteBorderRouterCost = _WingStatsDevDynRouteBorderRouterCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 4),
    _WingStatsDevDynRouteBorderRouterCost_Type()
)
wingStatsDevDynRouteBorderRouterCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouterCost.setStatus("current")
_WingStatsDevDynRouteBorderRouterFlags_Type = DisplayString
_WingStatsDevDynRouteBorderRouterFlags_Object = MibTableColumn
wingStatsDevDynRouteBorderRouterFlags = _WingStatsDevDynRouteBorderRouterFlags_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 5),
    _WingStatsDevDynRouteBorderRouterFlags_Type()
)
wingStatsDevDynRouteBorderRouterFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouterFlags.setStatus("current")
_WingStatsDevDynRouteBorderRouterAttachedFlag_Type = TruthValue
_WingStatsDevDynRouteBorderRouterAttachedFlag_Object = MibTableColumn
wingStatsDevDynRouteBorderRouterAttachedFlag = _WingStatsDevDynRouteBorderRouterAttachedFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 6),
    _WingStatsDevDynRouteBorderRouterAttachedFlag_Type()
)
wingStatsDevDynRouteBorderRouterAttachedFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouterAttachedFlag.setStatus("current")
_WingStatsDevDynRouteBorderRouterIfName_Type = DisplayString
_WingStatsDevDynRouteBorderRouterIfName_Object = MibTableColumn
wingStatsDevDynRouteBorderRouterIfName = _WingStatsDevDynRouteBorderRouterIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 7),
    _WingStatsDevDynRouteBorderRouterIfName_Type()
)
wingStatsDevDynRouteBorderRouterIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouterIfName.setStatus("current")
_WingStatsDevDynRouteBorderRouterNextHop_Type = DisplayString
_WingStatsDevDynRouteBorderRouterNextHop_Object = MibTableColumn
wingStatsDevDynRouteBorderRouterNextHop = _WingStatsDevDynRouteBorderRouterNextHop_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 10, 1, 8),
    _WingStatsDevDynRouteBorderRouterNextHop_Type()
)
wingStatsDevDynRouteBorderRouterNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteBorderRouterNextHop.setStatus("current")
_WingStatsDevDynRouteOspfIfTable_Object = MibTable
wingStatsDevDynRouteOspfIfTable = _WingStatsDevDynRouteOspfIfTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfTable.setStatus("current")
_WingStatsDevDynRouteOspfIfEntry_Object = MibTableRow
wingStatsDevDynRouteOspfIfEntry = _WingStatsDevDynRouteOspfIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1)
)
wingStatsDevDynRouteOspfIfEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteOspfIfName"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfEntry.setStatus("current")
_WingStatsDevDynRouteOspfIfName_Type = WingIdentifier
_WingStatsDevDynRouteOspfIfName_Object = MibTableColumn
wingStatsDevDynRouteOspfIfName = _WingStatsDevDynRouteOspfIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1, 1),
    _WingStatsDevDynRouteOspfIfName_Type()
)
wingStatsDevDynRouteOspfIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfName.setStatus("current")
_WingStatsDevDynRouteOspfIfStatusFlag_Type = TruthValue
_WingStatsDevDynRouteOspfIfStatusFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfIfStatusFlag = _WingStatsDevDynRouteOspfIfStatusFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1, 2),
    _WingStatsDevDynRouteOspfIfStatusFlag_Type()
)
wingStatsDevDynRouteOspfIfStatusFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfStatusFlag.setStatus("current")
_WingStatsDevDynRouteOspfIfIndex_Type = Unsigned32
_WingStatsDevDynRouteOspfIfIndex_Object = MibTableColumn
wingStatsDevDynRouteOspfIfIndex = _WingStatsDevDynRouteOspfIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1, 3),
    _WingStatsDevDynRouteOspfIfIndex_Type()
)
wingStatsDevDynRouteOspfIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfIndex.setStatus("current")
_WingStatsDevDynRouteOspfIfMtu_Type = Unsigned32
_WingStatsDevDynRouteOspfIfMtu_Object = MibTableColumn
wingStatsDevDynRouteOspfIfMtu = _WingStatsDevDynRouteOspfIfMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1, 4),
    _WingStatsDevDynRouteOspfIfMtu_Type()
)
wingStatsDevDynRouteOspfIfMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfMtu.setStatus("current")
_WingStatsDevDynRouteOspfIfBandwidth_Type = Unsigned32
_WingStatsDevDynRouteOspfIfBandwidth_Object = MibTableColumn
wingStatsDevDynRouteOspfIfBandwidth = _WingStatsDevDynRouteOspfIfBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1, 5),
    _WingStatsDevDynRouteOspfIfBandwidth_Type()
)
wingStatsDevDynRouteOspfIfBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfBandwidth.setStatus("current")
_WingStatsDevDynRouteOspfIfFlags_Type = Counter64
_WingStatsDevDynRouteOspfIfFlags_Object = MibTableColumn
wingStatsDevDynRouteOspfIfFlags = _WingStatsDevDynRouteOspfIfFlags_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1, 6),
    _WingStatsDevDynRouteOspfIfFlags_Type()
)
wingStatsDevDynRouteOspfIfFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfFlags.setStatus("current")
_WingStatsDevDynRouteOspfIfEnabled_Type = TruthValue
_WingStatsDevDynRouteOspfIfEnabled_Object = MibTableColumn
wingStatsDevDynRouteOspfIfEnabled = _WingStatsDevDynRouteOspfIfEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 11, 1, 7),
    _WingStatsDevDynRouteOspfIfEnabled_Type()
)
wingStatsDevDynRouteOspfIfEnabled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfEnabled.setStatus("current")
_WingStatsDevDynRouteOspfIfInfoTable_Object = MibTable
wingStatsDevDynRouteOspfIfInfoTable = _WingStatsDevDynRouteOspfIfInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfInfoTable.setStatus("current")
_WingStatsDevDynRouteOspfIfInfoEntry_Object = MibTableRow
wingStatsDevDynRouteOspfIfInfoEntry = _WingStatsDevDynRouteOspfIfInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1)
)
wingStatsDevDynRouteOspfIfInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteOspfIfName"),
    (0, "WING-MIB", "wingStatsDevDynRouteOspfIfInfoIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfInfoEntry.setStatus("current")


class _WingStatsDevDynRouteOspfIfInfoIndex_Type(Unsigned32):
    """Custom type wingStatsDevDynRouteOspfIfInfoIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevDynRouteOspfIfInfoIndex_Type.__name__ = "Unsigned32"
_WingStatsDevDynRouteOspfIfInfoIndex_Object = MibTableColumn
wingStatsDevDynRouteOspfIfInfoIndex = _WingStatsDevDynRouteOspfIfInfoIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 1),
    _WingStatsDevDynRouteOspfIfInfoIndex_Type()
)
wingStatsDevDynRouteOspfIfInfoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfInfoIndex.setStatus("current")
_WingStatsDevDynRouteOspfIfIpAddr_Type = DisplayString
_WingStatsDevDynRouteOspfIfIpAddr_Object = MibTableColumn
wingStatsDevDynRouteOspfIfIpAddr = _WingStatsDevDynRouteOspfIfIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 2),
    _WingStatsDevDynRouteOspfIfIpAddr_Type()
)
wingStatsDevDynRouteOspfIfIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfIpAddr.setStatus("current")
_WingStatsDevDynRouteOspfIfMask_Type = Unsigned32
_WingStatsDevDynRouteOspfIfMask_Object = MibTableColumn
wingStatsDevDynRouteOspfIfMask = _WingStatsDevDynRouteOspfIfMask_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 3),
    _WingStatsDevDynRouteOspfIfMask_Type()
)
wingStatsDevDynRouteOspfIfMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfMask.setStatus("current")
_WingStatsDevDynRouteOspfIfBroadcastOrP2P_Type = DisplayString
_WingStatsDevDynRouteOspfIfBroadcastOrP2P_Object = MibTableColumn
wingStatsDevDynRouteOspfIfBroadcastOrP2P = _WingStatsDevDynRouteOspfIfBroadcastOrP2P_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 4),
    _WingStatsDevDynRouteOspfIfBroadcastOrP2P_Type()
)
wingStatsDevDynRouteOspfIfBroadcastOrP2P.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfBroadcastOrP2P.setStatus("current")
_WingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr_Type = DisplayString
_WingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr_Object = MibTableColumn
wingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr = _WingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 5),
    _WingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr_Type()
)
wingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr.setStatus("current")
_WingStatsDevDynRouteOspfIfAreaId_Type = DisplayString
_WingStatsDevDynRouteOspfIfAreaId_Object = MibTableColumn
wingStatsDevDynRouteOspfIfAreaId = _WingStatsDevDynRouteOspfIfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 6),
    _WingStatsDevDynRouteOspfIfAreaId_Type()
)
wingStatsDevDynRouteOspfIfAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfAreaId.setStatus("current")
_WingStatsDevDynRouteOspfIfMtuMismatchDetectFlag_Type = TruthValue
_WingStatsDevDynRouteOspfIfMtuMismatchDetectFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfIfMtuMismatchDetectFlag = _WingStatsDevDynRouteOspfIfMtuMismatchDetectFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 7),
    _WingStatsDevDynRouteOspfIfMtuMismatchDetectFlag_Type()
)
wingStatsDevDynRouteOspfIfMtuMismatchDetectFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfMtuMismatchDetectFlag.setStatus("current")
_WingStatsDevDynRouteOspfIfRouterId_Type = DisplayString
_WingStatsDevDynRouteOspfIfRouterId_Object = MibTableColumn
wingStatsDevDynRouteOspfIfRouterId = _WingStatsDevDynRouteOspfIfRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 8),
    _WingStatsDevDynRouteOspfIfRouterId_Type()
)
wingStatsDevDynRouteOspfIfRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfRouterId.setStatus("current")
_WingStatsDevDynRouteOspfIfNetworkType_Type = DisplayString
_WingStatsDevDynRouteOspfIfNetworkType_Object = MibTableColumn
wingStatsDevDynRouteOspfIfNetworkType = _WingStatsDevDynRouteOspfIfNetworkType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 9),
    _WingStatsDevDynRouteOspfIfNetworkType_Type()
)
wingStatsDevDynRouteOspfIfNetworkType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfNetworkType.setStatus("current")
_WingStatsDevDynRouteOspfIfCost_Type = Unsigned32
_WingStatsDevDynRouteOspfIfCost_Object = MibTableColumn
wingStatsDevDynRouteOspfIfCost = _WingStatsDevDynRouteOspfIfCost_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 10),
    _WingStatsDevDynRouteOspfIfCost_Type()
)
wingStatsDevDynRouteOspfIfCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfCost.setStatus("current")
_WingStatsDevDynRouteOspfIfTransmitDelay_Type = Unsigned32
_WingStatsDevDynRouteOspfIfTransmitDelay_Object = MibTableColumn
wingStatsDevDynRouteOspfIfTransmitDelay = _WingStatsDevDynRouteOspfIfTransmitDelay_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 11),
    _WingStatsDevDynRouteOspfIfTransmitDelay_Type()
)
wingStatsDevDynRouteOspfIfTransmitDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfTransmitDelay.setStatus("current")
_WingStatsDevDynRouteOspfIfIsmState_Type = DisplayString
_WingStatsDevDynRouteOspfIfIsmState_Object = MibTableColumn
wingStatsDevDynRouteOspfIfIsmState = _WingStatsDevDynRouteOspfIfIsmState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 12),
    _WingStatsDevDynRouteOspfIfIsmState_Type()
)
wingStatsDevDynRouteOspfIfIsmState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfIsmState.setStatus("current")
_WingStatsDevDynRouteOspfIfPriority_Type = Unsigned32
_WingStatsDevDynRouteOspfIfPriority_Object = MibTableColumn
wingStatsDevDynRouteOspfIfPriority = _WingStatsDevDynRouteOspfIfPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 13),
    _WingStatsDevDynRouteOspfIfPriority_Type()
)
wingStatsDevDynRouteOspfIfPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfPriority.setStatus("current")
_WingStatsDevDynRouteOspfIfDesgRouterId_Type = DisplayString
_WingStatsDevDynRouteOspfIfDesgRouterId_Object = MibTableColumn
wingStatsDevDynRouteOspfIfDesgRouterId = _WingStatsDevDynRouteOspfIfDesgRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 14),
    _WingStatsDevDynRouteOspfIfDesgRouterId_Type()
)
wingStatsDevDynRouteOspfIfDesgRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfDesgRouterId.setStatus("current")
_WingStatsDevDynRouteOspfIfDesgRouterAddr_Type = DisplayString
_WingStatsDevDynRouteOspfIfDesgRouterAddr_Object = MibTableColumn
wingStatsDevDynRouteOspfIfDesgRouterAddr = _WingStatsDevDynRouteOspfIfDesgRouterAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 15),
    _WingStatsDevDynRouteOspfIfDesgRouterAddr_Type()
)
wingStatsDevDynRouteOspfIfDesgRouterAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfDesgRouterAddr.setStatus("current")
_WingStatsDevDynRouteOspfIfBackupDesgRouterId_Type = DisplayString
_WingStatsDevDynRouteOspfIfBackupDesgRouterId_Object = MibTableColumn
wingStatsDevDynRouteOspfIfBackupDesgRouterId = _WingStatsDevDynRouteOspfIfBackupDesgRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 16),
    _WingStatsDevDynRouteOspfIfBackupDesgRouterId_Type()
)
wingStatsDevDynRouteOspfIfBackupDesgRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfBackupDesgRouterId.setStatus("current")
_WingStatsDevDynRouteOspfIfBackupDesgRouterAddr_Type = DisplayString
_WingStatsDevDynRouteOspfIfBackupDesgRouterAddr_Object = MibTableColumn
wingStatsDevDynRouteOspfIfBackupDesgRouterAddr = _WingStatsDevDynRouteOspfIfBackupDesgRouterAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 17),
    _WingStatsDevDynRouteOspfIfBackupDesgRouterAddr_Type()
)
wingStatsDevDynRouteOspfIfBackupDesgRouterAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfBackupDesgRouterAddr.setStatus("current")
_WingStatsDevDynRouteOspfIfMcastMembership_Type = DisplayString
_WingStatsDevDynRouteOspfIfMcastMembership_Object = MibTableColumn
wingStatsDevDynRouteOspfIfMcastMembership = _WingStatsDevDynRouteOspfIfMcastMembership_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 18),
    _WingStatsDevDynRouteOspfIfMcastMembership_Type()
)
wingStatsDevDynRouteOspfIfMcastMembership.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfMcastMembership.setStatus("current")
_WingStatsDevDynRouteOspfIfSubSecHelloFlag_Type = TruthValue
_WingStatsDevDynRouteOspfIfSubSecHelloFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfIfSubSecHelloFlag = _WingStatsDevDynRouteOspfIfSubSecHelloFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 19),
    _WingStatsDevDynRouteOspfIfSubSecHelloFlag_Type()
)
wingStatsDevDynRouteOspfIfSubSecHelloFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfSubSecHelloFlag.setStatus("current")
_WingStatsDevDynRouteOspfIfHelloInterval_Type = Unsigned32
_WingStatsDevDynRouteOspfIfHelloInterval_Object = MibTableColumn
wingStatsDevDynRouteOspfIfHelloInterval = _WingStatsDevDynRouteOspfIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 20),
    _WingStatsDevDynRouteOspfIfHelloInterval_Type()
)
wingStatsDevDynRouteOspfIfHelloInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfHelloInterval.setStatus("current")
_WingStatsDevDynRouteOspfIfDeadInterval_Type = Unsigned32
_WingStatsDevDynRouteOspfIfDeadInterval_Object = MibTableColumn
wingStatsDevDynRouteOspfIfDeadInterval = _WingStatsDevDynRouteOspfIfDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 21),
    _WingStatsDevDynRouteOspfIfDeadInterval_Type()
)
wingStatsDevDynRouteOspfIfDeadInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfDeadInterval.setStatus("current")
_WingStatsDevDynRouteOspfIfWaitInterval_Type = Unsigned32
_WingStatsDevDynRouteOspfIfWaitInterval_Object = MibTableColumn
wingStatsDevDynRouteOspfIfWaitInterval = _WingStatsDevDynRouteOspfIfWaitInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 22),
    _WingStatsDevDynRouteOspfIfWaitInterval_Type()
)
wingStatsDevDynRouteOspfIfWaitInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfWaitInterval.setStatus("current")
_WingStatsDevDynRouteOspfIfRetransmitInterval_Type = Unsigned32
_WingStatsDevDynRouteOspfIfRetransmitInterval_Object = MibTableColumn
wingStatsDevDynRouteOspfIfRetransmitInterval = _WingStatsDevDynRouteOspfIfRetransmitInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 23),
    _WingStatsDevDynRouteOspfIfRetransmitInterval_Type()
)
wingStatsDevDynRouteOspfIfRetransmitInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfRetransmitInterval.setStatus("current")
_WingStatsDevDynRouteOspfIfPassiveFlag_Type = TruthValue
_WingStatsDevDynRouteOspfIfPassiveFlag_Object = MibTableColumn
wingStatsDevDynRouteOspfIfPassiveFlag = _WingStatsDevDynRouteOspfIfPassiveFlag_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 24),
    _WingStatsDevDynRouteOspfIfPassiveFlag_Type()
)
wingStatsDevDynRouteOspfIfPassiveFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfPassiveFlag.setStatus("current")
_WingStatsDevDynRouteOspfIfHelloDueIn_Type = DisplayString
_WingStatsDevDynRouteOspfIfHelloDueIn_Object = MibTableColumn
wingStatsDevDynRouteOspfIfHelloDueIn = _WingStatsDevDynRouteOspfIfHelloDueIn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 25),
    _WingStatsDevDynRouteOspfIfHelloDueIn_Type()
)
wingStatsDevDynRouteOspfIfHelloDueIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfHelloDueIn.setStatus("current")
_WingStatsDevDynRouteOspfIfNeighborCount_Type = Unsigned32
_WingStatsDevDynRouteOspfIfNeighborCount_Object = MibTableColumn
wingStatsDevDynRouteOspfIfNeighborCount = _WingStatsDevDynRouteOspfIfNeighborCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 26),
    _WingStatsDevDynRouteOspfIfNeighborCount_Type()
)
wingStatsDevDynRouteOspfIfNeighborCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfNeighborCount.setStatus("current")
_WingStatsDevDynRouteOspfIfAdjNeighborCount_Type = Unsigned32
_WingStatsDevDynRouteOspfIfAdjNeighborCount_Object = MibTableColumn
wingStatsDevDynRouteOspfIfAdjNeighborCount = _WingStatsDevDynRouteOspfIfAdjNeighborCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 12, 1, 27),
    _WingStatsDevDynRouteOspfIfAdjNeighborCount_Type()
)
wingStatsDevDynRouteOspfIfAdjNeighborCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteOspfIfAdjNeighborCount.setStatus("current")
_WingStatsDevDynRouteNeighborTable_Object = MibTable
wingStatsDevDynRouteNeighborTable = _WingStatsDevDynRouteNeighborTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13)
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborTable.setStatus("current")
_WingStatsDevDynRouteNeighborEntry_Object = MibTableRow
wingStatsDevDynRouteNeighborEntry = _WingStatsDevDynRouteNeighborEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1)
)
wingStatsDevDynRouteNeighborEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevDynRouteNeighborIndex"),
)
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborEntry.setStatus("current")


class _WingStatsDevDynRouteNeighborIndex_Type(Unsigned32):
    """Custom type wingStatsDevDynRouteNeighborIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_WingStatsDevDynRouteNeighborIndex_Type.__name__ = "Unsigned32"
_WingStatsDevDynRouteNeighborIndex_Object = MibTableColumn
wingStatsDevDynRouteNeighborIndex = _WingStatsDevDynRouteNeighborIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 1),
    _WingStatsDevDynRouteNeighborIndex_Type()
)
wingStatsDevDynRouteNeighborIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborIndex.setStatus("current")
_WingStatsDevDynRouteNeighborRouterId_Type = DisplayString
_WingStatsDevDynRouteNeighborRouterId_Object = MibTableColumn
wingStatsDevDynRouteNeighborRouterId = _WingStatsDevDynRouteNeighborRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 2),
    _WingStatsDevDynRouteNeighborRouterId_Type()
)
wingStatsDevDynRouteNeighborRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborRouterId.setStatus("current")
_WingStatsDevDynRouteNeighborPriority_Type = Unsigned32
_WingStatsDevDynRouteNeighborPriority_Object = MibTableColumn
wingStatsDevDynRouteNeighborPriority = _WingStatsDevDynRouteNeighborPriority_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 3),
    _WingStatsDevDynRouteNeighborPriority_Type()
)
wingStatsDevDynRouteNeighborPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborPriority.setStatus("current")
_WingStatsDevDynRouteNeighborSelfState_Type = DisplayString
_WingStatsDevDynRouteNeighborSelfState_Object = MibTableColumn
wingStatsDevDynRouteNeighborSelfState = _WingStatsDevDynRouteNeighborSelfState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 4),
    _WingStatsDevDynRouteNeighborSelfState_Type()
)
wingStatsDevDynRouteNeighborSelfState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborSelfState.setStatus("current")
_WingStatsDevDynRouteNeighborDeadTime_Type = Unsigned32
_WingStatsDevDynRouteNeighborDeadTime_Object = MibTableColumn
wingStatsDevDynRouteNeighborDeadTime = _WingStatsDevDynRouteNeighborDeadTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 5),
    _WingStatsDevDynRouteNeighborDeadTime_Type()
)
wingStatsDevDynRouteNeighborDeadTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborDeadTime.setStatus("current")
_WingStatsDevDynRouteNeighborAddr_Type = DisplayString
_WingStatsDevDynRouteNeighborAddr_Object = MibTableColumn
wingStatsDevDynRouteNeighborAddr = _WingStatsDevDynRouteNeighborAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 6),
    _WingStatsDevDynRouteNeighborAddr_Type()
)
wingStatsDevDynRouteNeighborAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborAddr.setStatus("current")
_WingStatsDevDynRouteNeighborIfName_Type = DisplayString
_WingStatsDevDynRouteNeighborIfName_Object = MibTableColumn
wingStatsDevDynRouteNeighborIfName = _WingStatsDevDynRouteNeighborIfName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 7),
    _WingStatsDevDynRouteNeighborIfName_Type()
)
wingStatsDevDynRouteNeighborIfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborIfName.setStatus("current")
_WingStatsDevDynRouteNeighborSrcAddr_Type = DisplayString
_WingStatsDevDynRouteNeighborSrcAddr_Object = MibTableColumn
wingStatsDevDynRouteNeighborSrcAddr = _WingStatsDevDynRouteNeighborSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 8),
    _WingStatsDevDynRouteNeighborSrcAddr_Type()
)
wingStatsDevDynRouteNeighborSrcAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborSrcAddr.setStatus("current")
_WingStatsDevDynRouteNeighborRetansmitCount_Type = Unsigned32
_WingStatsDevDynRouteNeighborRetansmitCount_Object = MibTableColumn
wingStatsDevDynRouteNeighborRetansmitCount = _WingStatsDevDynRouteNeighborRetansmitCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 9),
    _WingStatsDevDynRouteNeighborRetansmitCount_Type()
)
wingStatsDevDynRouteNeighborRetansmitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborRetansmitCount.setStatus("current")
_WingStatsDevDynRouteNeighborRequestCount_Type = Unsigned32
_WingStatsDevDynRouteNeighborRequestCount_Object = MibTableColumn
wingStatsDevDynRouteNeighborRequestCount = _WingStatsDevDynRouteNeighborRequestCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 10),
    _WingStatsDevDynRouteNeighborRequestCount_Type()
)
wingStatsDevDynRouteNeighborRequestCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborRequestCount.setStatus("current")
_WingStatsDevDynRouteNeighborSummaryCount_Type = Unsigned32
_WingStatsDevDynRouteNeighborSummaryCount_Object = MibTableColumn
wingStatsDevDynRouteNeighborSummaryCount = _WingStatsDevDynRouteNeighborSummaryCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 34, 13, 1, 11),
    _WingStatsDevDynRouteNeighborSummaryCount_Type()
)
wingStatsDevDynRouteNeighborSummaryCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevDynRouteNeighborSummaryCount.setStatus("current")
_WingStatsDevPppoe_ObjectIdentity = ObjectIdentity
wingStatsDevPppoe = _WingStatsDevPppoe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35)
)
_WingStatsDevPppoeStatusTable_Object = MibTable
wingStatsDevPppoeStatusTable = _WingStatsDevPppoeStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusTable.setStatus("current")
_WingStatsDevPppoeStatusEntry_Object = MibTableRow
wingStatsDevPppoeStatusEntry = _WingStatsDevPppoeStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1)
)
wingStatsDevPppoeStatusEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusEntry.setStatus("current")
_WingStatsDevPppoeStatusPeer_Type = MacAddress
_WingStatsDevPppoeStatusPeer_Object = MibTableColumn
wingStatsDevPppoeStatusPeer = _WingStatsDevPppoeStatusPeer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1, 1),
    _WingStatsDevPppoeStatusPeer_Type()
)
wingStatsDevPppoeStatusPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusPeer.setStatus("current")
_WingStatsDevPppoeStatusSid_Type = OctetString
_WingStatsDevPppoeStatusSid_Object = MibTableColumn
wingStatsDevPppoeStatusSid = _WingStatsDevPppoeStatusSid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1, 2),
    _WingStatsDevPppoeStatusSid_Type()
)
wingStatsDevPppoeStatusSid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusSid.setStatus("current")
_WingStatsDevPppoeStatusService_Type = DisplayString
_WingStatsDevPppoeStatusService_Object = MibTableColumn
wingStatsDevPppoeStatusService = _WingStatsDevPppoeStatusService_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1, 3),
    _WingStatsDevPppoeStatusService_Type()
)
wingStatsDevPppoeStatusService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusService.setStatus("current")
_WingStatsDevPppoeStatusStatus_Type = DisplayString
_WingStatsDevPppoeStatusStatus_Object = MibTableColumn
wingStatsDevPppoeStatusStatus = _WingStatsDevPppoeStatusStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1, 4),
    _WingStatsDevPppoeStatusStatus_Type()
)
wingStatsDevPppoeStatusStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusStatus.setStatus("current")
_WingStatsDevPppoeStatusMtu_Type = Unsigned32
_WingStatsDevPppoeStatusMtu_Object = MibTableColumn
wingStatsDevPppoeStatusMtu = _WingStatsDevPppoeStatusMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1, 5),
    _WingStatsDevPppoeStatusMtu_Type()
)
wingStatsDevPppoeStatusMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusMtu.setStatus("current")
_WingStatsDevPppoeStatusDns1_Type = DisplayString
_WingStatsDevPppoeStatusDns1_Object = MibTableColumn
wingStatsDevPppoeStatusDns1 = _WingStatsDevPppoeStatusDns1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1, 6),
    _WingStatsDevPppoeStatusDns1_Type()
)
wingStatsDevPppoeStatusDns1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusDns1.setStatus("current")
_WingStatsDevPppoeStatusDns2_Type = DisplayString
_WingStatsDevPppoeStatusDns2_Object = MibTableColumn
wingStatsDevPppoeStatusDns2 = _WingStatsDevPppoeStatusDns2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 1, 1, 7),
    _WingStatsDevPppoeStatusDns2_Type()
)
wingStatsDevPppoeStatusDns2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeStatusDns2.setStatus("current")
_WingStatsDevPppoeCfgTable_Object = MibTable
wingStatsDevPppoeCfgTable = _WingStatsDevPppoeCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgTable.setStatus("current")
_WingStatsDevPppoeCfgEntry_Object = MibTableRow
wingStatsDevPppoeCfgEntry = _WingStatsDevPppoeCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1)
)
wingStatsDevPppoeCfgEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
)
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgEntry.setStatus("current")
_WingStatsDevPppoeCfgAuthtype_Type = DisplayString
_WingStatsDevPppoeCfgAuthtype_Object = MibTableColumn
wingStatsDevPppoeCfgAuthtype = _WingStatsDevPppoeCfgAuthtype_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 1),
    _WingStatsDevPppoeCfgAuthtype_Type()
)
wingStatsDevPppoeCfgAuthtype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgAuthtype.setStatus("current")
_WingStatsDevPppoeCfgIdleTime_Type = Unsigned32
_WingStatsDevPppoeCfgIdleTime_Object = MibTableColumn
wingStatsDevPppoeCfgIdleTime = _WingStatsDevPppoeCfgIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 2),
    _WingStatsDevPppoeCfgIdleTime_Type()
)
wingStatsDevPppoeCfgIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgIdleTime.setStatus("current")
_WingStatsDevPppoeCfgKalive_Type = TruthValue
_WingStatsDevPppoeCfgKalive_Object = MibTableColumn
wingStatsDevPppoeCfgKalive = _WingStatsDevPppoeCfgKalive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 3),
    _WingStatsDevPppoeCfgKalive_Type()
)
wingStatsDevPppoeCfgKalive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgKalive.setStatus("current")
_WingStatsDevPppoeCfgMtu_Type = Unsigned32
_WingStatsDevPppoeCfgMtu_Object = MibTableColumn
wingStatsDevPppoeCfgMtu = _WingStatsDevPppoeCfgMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 4),
    _WingStatsDevPppoeCfgMtu_Type()
)
wingStatsDevPppoeCfgMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgMtu.setStatus("current")
_WingStatsDevPppoeCfgNet_Type = DisplayString
_WingStatsDevPppoeCfgNet_Object = MibTableColumn
wingStatsDevPppoeCfgNet = _WingStatsDevPppoeCfgNet_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 5),
    _WingStatsDevPppoeCfgNet_Type()
)
wingStatsDevPppoeCfgNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgNet.setStatus("current")
_WingStatsDevPppoeCfgService_Type = DisplayString
_WingStatsDevPppoeCfgService_Object = MibTableColumn
wingStatsDevPppoeCfgService = _WingStatsDevPppoeCfgService_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 6),
    _WingStatsDevPppoeCfgService_Type()
)
wingStatsDevPppoeCfgService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgService.setStatus("current")
_WingStatsDevPppoeCfgUsername_Type = DisplayString
_WingStatsDevPppoeCfgUsername_Object = MibTableColumn
wingStatsDevPppoeCfgUsername = _WingStatsDevPppoeCfgUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 7),
    _WingStatsDevPppoeCfgUsername_Type()
)
wingStatsDevPppoeCfgUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgUsername.setStatus("current")
_WingStatsDevPppoeCfgPasswd_Type = DisplayString
_WingStatsDevPppoeCfgPasswd_Object = MibTableColumn
wingStatsDevPppoeCfgPasswd = _WingStatsDevPppoeCfgPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 8),
    _WingStatsDevPppoeCfgPasswd_Type()
)
wingStatsDevPppoeCfgPasswd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgPasswd.setStatus("current")
_WingStatsDevPppoeCfgShutdown_Type = TruthValue
_WingStatsDevPppoeCfgShutdown_Object = MibTableColumn
wingStatsDevPppoeCfgShutdown = _WingStatsDevPppoeCfgShutdown_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 35, 2, 1, 9),
    _WingStatsDevPppoeCfgShutdown_Type()
)
wingStatsDevPppoeCfgShutdown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevPppoeCfgShutdown.setStatus("current")
_WingStatsDevl2tpv3_ObjectIdentity = ObjectIdentity
wingStatsDevl2tpv3 = _WingStatsDevl2tpv3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36)
)
_WingStatsDevl2tpv3TunnelTable_Object = MibTable
wingStatsDevl2tpv3TunnelTable = _WingStatsDevl2tpv3TunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelTable.setStatus("current")
_WingStatsDevl2tpv3TunnelEntry_Object = MibTableRow
wingStatsDevl2tpv3TunnelEntry = _WingStatsDevl2tpv3TunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1)
)
wingStatsDevl2tpv3TunnelEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevl2tpv3TunnelName"),
)
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelEntry.setStatus("current")
_WingStatsDevl2tpv3TunnelName_Type = WingIdentifier
_WingStatsDevl2tpv3TunnelName_Object = MibTableColumn
wingStatsDevl2tpv3TunnelName = _WingStatsDevl2tpv3TunnelName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 1),
    _WingStatsDevl2tpv3TunnelName_Type()
)
wingStatsDevl2tpv3TunnelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelName.setStatus("current")
_WingStatsDevl2tpv3TunnelCtrlConnId_Type = Unsigned32
_WingStatsDevl2tpv3TunnelCtrlConnId_Object = MibTableColumn
wingStatsDevl2tpv3TunnelCtrlConnId = _WingStatsDevl2tpv3TunnelCtrlConnId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 2),
    _WingStatsDevl2tpv3TunnelCtrlConnId_Type()
)
wingStatsDevl2tpv3TunnelCtrlConnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelCtrlConnId.setStatus("current")
_WingStatsDevl2tpv3TunnelUpTime_Type = Integer32
_WingStatsDevl2tpv3TunnelUpTime_Object = MibTableColumn
wingStatsDevl2tpv3TunnelUpTime = _WingStatsDevl2tpv3TunnelUpTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 3),
    _WingStatsDevl2tpv3TunnelUpTime_Type()
)
wingStatsDevl2tpv3TunnelUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelUpTime.setStatus("current")
_WingStatsDevl2tpv3TunnelPeerAddr_Type = DisplayString
_WingStatsDevl2tpv3TunnelPeerAddr_Object = MibTableColumn
wingStatsDevl2tpv3TunnelPeerAddr = _WingStatsDevl2tpv3TunnelPeerAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 4),
    _WingStatsDevl2tpv3TunnelPeerAddr_Type()
)
wingStatsDevl2tpv3TunnelPeerAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelPeerAddr.setStatus("current")
_WingStatsDevl2tpv3TunnelLocalAddr_Type = DisplayString
_WingStatsDevl2tpv3TunnelLocalAddr_Object = MibTableColumn
wingStatsDevl2tpv3TunnelLocalAddr = _WingStatsDevl2tpv3TunnelLocalAddr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 5),
    _WingStatsDevl2tpv3TunnelLocalAddr_Type()
)
wingStatsDevl2tpv3TunnelLocalAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelLocalAddr.setStatus("current")
_WingStatsDevl2tpv3TunnelMtu_Type = Unsigned32
_WingStatsDevl2tpv3TunnelMtu_Object = MibTableColumn
wingStatsDevl2tpv3TunnelMtu = _WingStatsDevl2tpv3TunnelMtu_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 6),
    _WingStatsDevl2tpv3TunnelMtu_Type()
)
wingStatsDevl2tpv3TunnelMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelMtu.setStatus("current")
_WingStatsDevl2tpv3TunnelPeerHostName_Type = DisplayString
_WingStatsDevl2tpv3TunnelPeerHostName_Object = MibTableColumn
wingStatsDevl2tpv3TunnelPeerHostName = _WingStatsDevl2tpv3TunnelPeerHostName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 7),
    _WingStatsDevl2tpv3TunnelPeerHostName_Type()
)
wingStatsDevl2tpv3TunnelPeerHostName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelPeerHostName.setStatus("current")
_WingStatsDevl2tpv3TunnelPeerCtrlConnId_Type = Unsigned32
_WingStatsDevl2tpv3TunnelPeerCtrlConnId_Object = MibTableColumn
wingStatsDevl2tpv3TunnelPeerCtrlConnId = _WingStatsDevl2tpv3TunnelPeerCtrlConnId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 8),
    _WingStatsDevl2tpv3TunnelPeerCtrlConnId_Type()
)
wingStatsDevl2tpv3TunnelPeerCtrlConnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelPeerCtrlConnId.setStatus("current")
_WingStatsDevl2tpv3TunnelPeerVendorName_Type = DisplayString
_WingStatsDevl2tpv3TunnelPeerVendorName_Object = MibTableColumn
wingStatsDevl2tpv3TunnelPeerVendorName = _WingStatsDevl2tpv3TunnelPeerVendorName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 9),
    _WingStatsDevl2tpv3TunnelPeerVendorName_Type()
)
wingStatsDevl2tpv3TunnelPeerVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelPeerVendorName.setStatus("current")
_WingStatsDevl2tpv3TunnelState_Type = DisplayString
_WingStatsDevl2tpv3TunnelState_Object = MibTableColumn
wingStatsDevl2tpv3TunnelState = _WingStatsDevl2tpv3TunnelState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 10),
    _WingStatsDevl2tpv3TunnelState_Type()
)
wingStatsDevl2tpv3TunnelState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelState.setStatus("current")
_WingStatsDevl2tpv3TunnelEncapsulationProtocol_Type = DisplayString
_WingStatsDevl2tpv3TunnelEncapsulationProtocol_Object = MibTableColumn
wingStatsDevl2tpv3TunnelEncapsulationProtocol = _WingStatsDevl2tpv3TunnelEncapsulationProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 11),
    _WingStatsDevl2tpv3TunnelEncapsulationProtocol_Type()
)
wingStatsDevl2tpv3TunnelEncapsulationProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelEncapsulationProtocol.setStatus("current")
_WingStatsDevl2tpv3TunnelNextTxSeqNum_Type = Unsigned32
_WingStatsDevl2tpv3TunnelNextTxSeqNum_Object = MibTableColumn
wingStatsDevl2tpv3TunnelNextTxSeqNum = _WingStatsDevl2tpv3TunnelNextTxSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 12),
    _WingStatsDevl2tpv3TunnelNextTxSeqNum_Type()
)
wingStatsDevl2tpv3TunnelNextTxSeqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelNextTxSeqNum.setStatus("current")
_WingStatsDevl2tpv3TunnelNextRxSeqNum_Type = Unsigned32
_WingStatsDevl2tpv3TunnelNextRxSeqNum_Object = MibTableColumn
wingStatsDevl2tpv3TunnelNextRxSeqNum = _WingStatsDevl2tpv3TunnelNextRxSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 13),
    _WingStatsDevl2tpv3TunnelNextRxSeqNum_Type()
)
wingStatsDevl2tpv3TunnelNextRxSeqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelNextRxSeqNum.setStatus("current")
_WingStatsDevl2tpv3TunnelRxAckSeqNum_Type = Unsigned32
_WingStatsDevl2tpv3TunnelRxAckSeqNum_Object = MibTableColumn
wingStatsDevl2tpv3TunnelRxAckSeqNum = _WingStatsDevl2tpv3TunnelRxAckSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 14),
    _WingStatsDevl2tpv3TunnelRxAckSeqNum_Type()
)
wingStatsDevl2tpv3TunnelRxAckSeqNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelRxAckSeqNum.setStatus("current")
_WingStatsDevl2tpv3TunnelRetransmitCount_Type = Unsigned32
_WingStatsDevl2tpv3TunnelRetransmitCount_Object = MibTableColumn
wingStatsDevl2tpv3TunnelRetransmitCount = _WingStatsDevl2tpv3TunnelRetransmitCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 15),
    _WingStatsDevl2tpv3TunnelRetransmitCount_Type()
)
wingStatsDevl2tpv3TunnelRetransmitCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelRetransmitCount.setStatus("current")
_WingStatsDevl2tpv3TunnelReconnectCount_Type = Unsigned32
_WingStatsDevl2tpv3TunnelReconnectCount_Object = MibTableColumn
wingStatsDevl2tpv3TunnelReconnectCount = _WingStatsDevl2tpv3TunnelReconnectCount_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 1, 1, 16),
    _WingStatsDevl2tpv3TunnelReconnectCount_Type()
)
wingStatsDevl2tpv3TunnelReconnectCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelReconnectCount.setStatus("current")
_WingStatsDevl2tpv3Sessions_ObjectIdentity = ObjectIdentity
wingStatsDevl2tpv3Sessions = _WingStatsDevl2tpv3Sessions_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2)
)
_WingStatsDevl2tpv3SessionsVlansTable_Object = MibTable
wingStatsDevl2tpv3SessionsVlansTable = _WingStatsDevl2tpv3SessionsVlansTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 1)
)
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsVlansTable.setStatus("current")
_WingStatsDevl2tpv3SessionsVlansEntry_Object = MibTableRow
wingStatsDevl2tpv3SessionsVlansEntry = _WingStatsDevl2tpv3SessionsVlansEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 1, 1)
)
wingStatsDevl2tpv3SessionsVlansEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevl2tpv3SessionsName"),
    (0, "WING-MIB", "wingStatsDevl2tpv3SessionsVlanId"),
)
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsVlansEntry.setStatus("current")


class _WingStatsDevl2tpv3SessionsVlanId_Type(Unsigned32):
    """Custom type wingStatsDevl2tpv3SessionsVlanId based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_WingStatsDevl2tpv3SessionsVlanId_Type.__name__ = "Unsigned32"
_WingStatsDevl2tpv3SessionsVlanId_Object = MibTableColumn
wingStatsDevl2tpv3SessionsVlanId = _WingStatsDevl2tpv3SessionsVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 1, 1, 1),
    _WingStatsDevl2tpv3SessionsVlanId_Type()
)
wingStatsDevl2tpv3SessionsVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsVlanId.setStatus("current")
_WingStatsDevl2tpv3SessionsTable_Object = MibTable
wingStatsDevl2tpv3SessionsTable = _WingStatsDevl2tpv3SessionsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2)
)
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsTable.setStatus("current")
_WingStatsDevl2tpv3SessionsEntry_Object = MibTableRow
wingStatsDevl2tpv3SessionsEntry = _WingStatsDevl2tpv3SessionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1)
)
wingStatsDevl2tpv3SessionsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsDevMac"),
    (0, "WING-MIB", "wingStatsDevl2tpv3TunnelName"),
    (0, "WING-MIB", "wingStatsDevl2tpv3SessionsName"),
)
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsEntry.setStatus("current")
_WingStatsDevl2tpv3SessionsName_Type = WingIdentifier
_WingStatsDevl2tpv3SessionsName_Object = MibTableColumn
wingStatsDevl2tpv3SessionsName = _WingStatsDevl2tpv3SessionsName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 1),
    _WingStatsDevl2tpv3SessionsName_Type()
)
wingStatsDevl2tpv3SessionsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsName.setStatus("current")
_WingStatsDevl2tpv3TunnelNativeVlanId_Type = Unsigned32
_WingStatsDevl2tpv3TunnelNativeVlanId_Object = MibTableColumn
wingStatsDevl2tpv3TunnelNativeVlanId = _WingStatsDevl2tpv3TunnelNativeVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 2),
    _WingStatsDevl2tpv3TunnelNativeVlanId_Type()
)
wingStatsDevl2tpv3TunnelNativeVlanId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelNativeVlanId.setStatus("current")
_WingStatsDevl2tpv3TunnelTrunkSession_Type = TruthValue
_WingStatsDevl2tpv3TunnelTrunkSession_Object = MibTableColumn
wingStatsDevl2tpv3TunnelTrunkSession = _WingStatsDevl2tpv3TunnelTrunkSession_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 3),
    _WingStatsDevl2tpv3TunnelTrunkSession_Type()
)
wingStatsDevl2tpv3TunnelTrunkSession.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelTrunkSession.setStatus("current")
_WingStatsDevl2tpv3TunnelNativeVlanTagged_Type = TruthValue
_WingStatsDevl2tpv3TunnelNativeVlanTagged_Object = MibTableColumn
wingStatsDevl2tpv3TunnelNativeVlanTagged = _WingStatsDevl2tpv3TunnelNativeVlanTagged_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 4),
    _WingStatsDevl2tpv3TunnelNativeVlanTagged_Type()
)
wingStatsDevl2tpv3TunnelNativeVlanTagged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3TunnelNativeVlanTagged.setStatus("current")
_WingStatsDevl2tpv3SessionsPseudoWireType_Type = DisplayString
_WingStatsDevl2tpv3SessionsPseudoWireType_Object = MibTableColumn
wingStatsDevl2tpv3SessionsPseudoWireType = _WingStatsDevl2tpv3SessionsPseudoWireType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 5),
    _WingStatsDevl2tpv3SessionsPseudoWireType_Type()
)
wingStatsDevl2tpv3SessionsPseudoWireType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsPseudoWireType.setStatus("current")
_WingStatsDevl2tpv3SessionsCallSerialNumber_Type = Unsigned32
_WingStatsDevl2tpv3SessionsCallSerialNumber_Object = MibTableColumn
wingStatsDevl2tpv3SessionsCallSerialNumber = _WingStatsDevl2tpv3SessionsCallSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 6),
    _WingStatsDevl2tpv3SessionsCallSerialNumber_Type()
)
wingStatsDevl2tpv3SessionsCallSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsCallSerialNumber.setStatus("current")
_WingStatsDevl2tpv3SessionsLocalSessionId_Type = Unsigned32
_WingStatsDevl2tpv3SessionsLocalSessionId_Object = MibTableColumn
wingStatsDevl2tpv3SessionsLocalSessionId = _WingStatsDevl2tpv3SessionsLocalSessionId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 7),
    _WingStatsDevl2tpv3SessionsLocalSessionId_Type()
)
wingStatsDevl2tpv3SessionsLocalSessionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsLocalSessionId.setStatus("current")
_WingStatsDevl2tpv3SessionsRemoteSessionId_Type = Unsigned32
_WingStatsDevl2tpv3SessionsRemoteSessionId_Object = MibTableColumn
wingStatsDevl2tpv3SessionsRemoteSessionId = _WingStatsDevl2tpv3SessionsRemoteSessionId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 8),
    _WingStatsDevl2tpv3SessionsRemoteSessionId_Type()
)
wingStatsDevl2tpv3SessionsRemoteSessionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsRemoteSessionId.setStatus("current")
_WingStatsDevl2tpv3SessionsLocalCookieSize_Type = Unsigned32
_WingStatsDevl2tpv3SessionsLocalCookieSize_Object = MibTableColumn
wingStatsDevl2tpv3SessionsLocalCookieSize = _WingStatsDevl2tpv3SessionsLocalCookieSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 9),
    _WingStatsDevl2tpv3SessionsLocalCookieSize_Type()
)
wingStatsDevl2tpv3SessionsLocalCookieSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsLocalCookieSize.setStatus("current")
_WingStatsDevl2tpv3SessionsLocalcookieWord1_Type = Unsigned32
_WingStatsDevl2tpv3SessionsLocalcookieWord1_Object = MibTableColumn
wingStatsDevl2tpv3SessionsLocalcookieWord1 = _WingStatsDevl2tpv3SessionsLocalcookieWord1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 10),
    _WingStatsDevl2tpv3SessionsLocalcookieWord1_Type()
)
wingStatsDevl2tpv3SessionsLocalcookieWord1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsLocalcookieWord1.setStatus("current")
_WingStatsDevl2tpv3SessionsLocalCookieWord2_Type = Unsigned32
_WingStatsDevl2tpv3SessionsLocalCookieWord2_Object = MibTableColumn
wingStatsDevl2tpv3SessionsLocalCookieWord2 = _WingStatsDevl2tpv3SessionsLocalCookieWord2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 11),
    _WingStatsDevl2tpv3SessionsLocalCookieWord2_Type()
)
wingStatsDevl2tpv3SessionsLocalCookieWord2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsLocalCookieWord2.setStatus("current")
_WingStatsDevl2tpv3SessionsRemoteCookieSize_Type = Unsigned32
_WingStatsDevl2tpv3SessionsRemoteCookieSize_Object = MibTableColumn
wingStatsDevl2tpv3SessionsRemoteCookieSize = _WingStatsDevl2tpv3SessionsRemoteCookieSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 12),
    _WingStatsDevl2tpv3SessionsRemoteCookieSize_Type()
)
wingStatsDevl2tpv3SessionsRemoteCookieSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsRemoteCookieSize.setStatus("current")
_WingStatsDevl2tpv3SessionsRemoteCookieWord1_Type = Unsigned32
_WingStatsDevl2tpv3SessionsRemoteCookieWord1_Object = MibTableColumn
wingStatsDevl2tpv3SessionsRemoteCookieWord1 = _WingStatsDevl2tpv3SessionsRemoteCookieWord1_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 13),
    _WingStatsDevl2tpv3SessionsRemoteCookieWord1_Type()
)
wingStatsDevl2tpv3SessionsRemoteCookieWord1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsRemoteCookieWord1.setStatus("current")
_WingStatsDevl2tpv3SessionsRemoteCookieWord2_Type = Unsigned32
_WingStatsDevl2tpv3SessionsRemoteCookieWord2_Object = MibTableColumn
wingStatsDevl2tpv3SessionsRemoteCookieWord2 = _WingStatsDevl2tpv3SessionsRemoteCookieWord2_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 14),
    _WingStatsDevl2tpv3SessionsRemoteCookieWord2_Type()
)
wingStatsDevl2tpv3SessionsRemoteCookieWord2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsRemoteCookieWord2.setStatus("current")
_WingStatsDevl2tpv3SessionsState_Type = DisplayString
_WingStatsDevl2tpv3SessionsState_Object = MibTableColumn
wingStatsDevl2tpv3SessionsState = _WingStatsDevl2tpv3SessionsState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 15),
    _WingStatsDevl2tpv3SessionsState_Type()
)
wingStatsDevl2tpv3SessionsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsState.setStatus("current")
_WingStatsDevl2tpv3SessionsRemoteEndId_Type = DisplayString
_WingStatsDevl2tpv3SessionsRemoteEndId_Object = MibTableColumn
wingStatsDevl2tpv3SessionsRemoteEndId = _WingStatsDevl2tpv3SessionsRemoteEndId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 16),
    _WingStatsDevl2tpv3SessionsRemoteEndId_Type()
)
wingStatsDevl2tpv3SessionsRemoteEndId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsRemoteEndId.setStatus("current")
_WingStatsDevl2tpv3SessionsRxPktCounter_Type = Unsigned32
_WingStatsDevl2tpv3SessionsRxPktCounter_Object = MibTableColumn
wingStatsDevl2tpv3SessionsRxPktCounter = _WingStatsDevl2tpv3SessionsRxPktCounter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 17),
    _WingStatsDevl2tpv3SessionsRxPktCounter_Type()
)
wingStatsDevl2tpv3SessionsRxPktCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsRxPktCounter.setStatus("current")
_WingStatsDevl2tpv3SessionsRxBytesCounter_Type = Unsigned32
_WingStatsDevl2tpv3SessionsRxBytesCounter_Object = MibTableColumn
wingStatsDevl2tpv3SessionsRxBytesCounter = _WingStatsDevl2tpv3SessionsRxBytesCounter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 18),
    _WingStatsDevl2tpv3SessionsRxBytesCounter_Type()
)
wingStatsDevl2tpv3SessionsRxBytesCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsRxBytesCounter.setStatus("current")
_WingStatsDevl2tpv3SessionsTxPktCounter_Type = Unsigned32
_WingStatsDevl2tpv3SessionsTxPktCounter_Object = MibTableColumn
wingStatsDevl2tpv3SessionsTxPktCounter = _WingStatsDevl2tpv3SessionsTxPktCounter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 19),
    _WingStatsDevl2tpv3SessionsTxPktCounter_Type()
)
wingStatsDevl2tpv3SessionsTxPktCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsTxPktCounter.setStatus("current")
_WingStatsDevl2tpv3SessionsTxBytesCounter_Type = Unsigned32
_WingStatsDevl2tpv3SessionsTxBytesCounter_Object = MibTableColumn
wingStatsDevl2tpv3SessionsTxBytesCounter = _WingStatsDevl2tpv3SessionsTxBytesCounter_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 20),
    _WingStatsDevl2tpv3SessionsTxBytesCounter_Type()
)
wingStatsDevl2tpv3SessionsTxBytesCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsTxBytesCounter.setStatus("current")
_WingStatsDevl2tpv3SessionsNumDroppedPkts_Type = Unsigned32
_WingStatsDevl2tpv3SessionsNumDroppedPkts_Object = MibTableColumn
wingStatsDevl2tpv3SessionsNumDroppedPkts = _WingStatsDevl2tpv3SessionsNumDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 2, 36, 2, 2, 1, 21),
    _WingStatsDevl2tpv3SessionsNumDroppedPkts_Type()
)
wingStatsDevl2tpv3SessionsNumDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsDevl2tpv3SessionsNumDroppedPkts.setStatus("current")
_WingStatsRfd_ObjectIdentity = ObjectIdentity
wingStatsRfd = _WingStatsRfd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3)
)
_WingStatsRfdTable_Object = MibTable
wingStatsRfdTable = _WingStatsRfdTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdTable.setStatus("current")
_WingStatsRfdEntry_Object = MibTableRow
wingStatsRfdEntry = _WingStatsRfdEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 1, 1)
)
wingStatsRfdEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
)
if mibBuilder.loadTexts:
    wingStatsRfdEntry.setStatus("current")
_WingStatsRfdName_Type = WingIdentifier
_WingStatsRfdName_Object = MibTableColumn
wingStatsRfdName = _WingStatsRfdName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 1, 1, 1),
    _WingStatsRfdName_Type()
)
wingStatsRfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdName.setStatus("current")
_WingStatsRfdManager_Type = MacAddress
_WingStatsRfdManager_Object = MibTableColumn
wingStatsRfdManager = _WingStatsRfdManager_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 1, 1, 2),
    _WingStatsRfdManager_Type()
)
wingStatsRfdManager.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdManager.setStatus("current")
_WingStatsRfdWl_ObjectIdentity = ObjectIdentity
wingStatsRfdWl = _WingStatsRfdWl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2)
)
_WingStatsRfdWlApInfo_ObjectIdentity = ObjectIdentity
wingStatsRfdWlApInfo = _WingStatsRfdWlApInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1)
)
_WingStatsRfdWlApInfoTable_Object = MibTable
wingStatsRfdWlApInfoTable = _WingStatsRfdWlApInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoTable.setStatus("current")
_WingStatsRfdWlApInfoEntry_Object = MibTableRow
wingStatsRfdWlApInfoEntry = _WingStatsRfdWlApInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1)
)
wingStatsRfdWlApInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlApInfoMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoEntry.setStatus("current")
_WingStatsRfdWlApInfoMac_Type = MacAddress
_WingStatsRfdWlApInfoMac_Object = MibTableColumn
wingStatsRfdWlApInfoMac = _WingStatsRfdWlApInfoMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 1),
    _WingStatsRfdWlApInfoMac_Type()
)
wingStatsRfdWlApInfoMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoMac.setStatus("current")
_WingStatsRfdWlApInfoFaultDetected_Type = TruthValue
_WingStatsRfdWlApInfoFaultDetected_Object = MibTableColumn
wingStatsRfdWlApInfoFaultDetected = _WingStatsRfdWlApInfoFaultDetected_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 2),
    _WingStatsRfdWlApInfoFaultDetected_Type()
)
wingStatsRfdWlApInfoFaultDetected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoFaultDetected.setStatus("current")
_WingStatsRfdWlApInfoNumRadios_Type = Unsigned32
_WingStatsRfdWlApInfoNumRadios_Object = MibTableColumn
wingStatsRfdWlApInfoNumRadios = _WingStatsRfdWlApInfoNumRadios_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 3),
    _WingStatsRfdWlApInfoNumRadios_Type()
)
wingStatsRfdWlApInfoNumRadios.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoNumRadios.setStatus("current")
_WingStatsRfdWlApInfoNumClients_Type = Unsigned32
_WingStatsRfdWlApInfoNumClients_Object = MibTableColumn
wingStatsRfdWlApInfoNumClients = _WingStatsRfdWlApInfoNumClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 4),
    _WingStatsRfdWlApInfoNumClients_Type()
)
wingStatsRfdWlApInfoNumClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoNumClients.setStatus("current")
_WingStatsRfdWlApInfoLastCalTime_Type = DisplayString
_WingStatsRfdWlApInfoLastCalTime_Object = MibTableColumn
wingStatsRfdWlApInfoLastCalTime = _WingStatsRfdWlApInfoLastCalTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 5),
    _WingStatsRfdWlApInfoLastCalTime_Type()
)
wingStatsRfdWlApInfoLastCalTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoLastCalTime.setStatus("current")
_WingStatsRfdWlApInfoType_Type = DisplayString
_WingStatsRfdWlApInfoType_Object = MibTableColumn
wingStatsRfdWlApInfoType = _WingStatsRfdWlApInfoType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 6),
    _WingStatsRfdWlApInfoType_Type()
)
wingStatsRfdWlApInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoType.setStatus("current")
_WingStatsRfdWlApInfoStatsMode_Type = DisplayString
_WingStatsRfdWlApInfoStatsMode_Object = MibTableColumn
wingStatsRfdWlApInfoStatsMode = _WingStatsRfdWlApInfoStatsMode_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 7),
    _WingStatsRfdWlApInfoStatsMode_Type()
)
wingStatsRfdWlApInfoStatsMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoStatsMode.setStatus("current")
_WingStatsRfdWlApInfoStatsInterval_Type = Unsigned32
_WingStatsRfdWlApInfoStatsInterval_Object = MibTableColumn
wingStatsRfdWlApInfoStatsInterval = _WingStatsRfdWlApInfoStatsInterval_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 8),
    _WingStatsRfdWlApInfoStatsInterval_Type()
)
wingStatsRfdWlApInfoStatsInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoStatsInterval.setStatus("current")
_WingStatsRfdWlApInfoHostname_Type = DisplayString
_WingStatsRfdWlApInfoHostname_Object = MibTableColumn
wingStatsRfdWlApInfoHostname = _WingStatsRfdWlApInfoHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 9),
    _WingStatsRfdWlApInfoHostname_Type()
)
wingStatsRfdWlApInfoHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoHostname.setStatus("current")
_WingStatsRfdWlApInfoRfDomainName_Type = DisplayString
_WingStatsRfdWlApInfoRfDomainName_Object = MibTableColumn
wingStatsRfdWlApInfoRfDomainName = _WingStatsRfdWlApInfoRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 10),
    _WingStatsRfdWlApInfoRfDomainName_Type()
)
wingStatsRfdWlApInfoRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoRfDomainName.setStatus("current")
_WingStatsRfdWlApInfoLocation_Type = DisplayString
_WingStatsRfdWlApInfoLocation_Object = MibTableColumn
wingStatsRfdWlApInfoLocation = _WingStatsRfdWlApInfoLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 11),
    _WingStatsRfdWlApInfoLocation_Type()
)
wingStatsRfdWlApInfoLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoLocation.setStatus("current")
_WingStatsRfdWlApInfoAdoptedTo_Type = MacAddress
_WingStatsRfdWlApInfoAdoptedTo_Object = MibTableColumn
wingStatsRfdWlApInfoAdoptedTo = _WingStatsRfdWlApInfoAdoptedTo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 12),
    _WingStatsRfdWlApInfoAdoptedTo_Type()
)
wingStatsRfdWlApInfoAdoptedTo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoAdoptedTo.setStatus("current")
_WingStatsRfdWlApInfoIp_Type = DisplayString
_WingStatsRfdWlApInfoIp_Object = MibTableColumn
wingStatsRfdWlApInfoIp = _WingStatsRfdWlApInfoIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 1, 1, 1, 13),
    _WingStatsRfdWlApInfoIp_Type()
)
wingStatsRfdWlApInfoIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlApInfoIp.setStatus("current")
_WingStatsRfdWlClient_ObjectIdentity = ObjectIdentity
wingStatsRfdWlClient = _WingStatsRfdWlClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3)
)
_WingStatsRfdWlClientTable_Object = MibTable
wingStatsRfdWlClientTable = _WingStatsRfdWlClientTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientTable.setStatus("current")
_WingStatsRfdWlClientEntry_Object = MibTableRow
wingStatsRfdWlClientEntry = _WingStatsRfdWlClientEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1)
)
wingStatsRfdWlClientEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlClientMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientEntry.setStatus("current")
_WingStatsRfdWlClientMac_Type = MacAddress
_WingStatsRfdWlClientMac_Object = MibTableColumn
wingStatsRfdWlClientMac = _WingStatsRfdWlClientMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 1),
    _WingStatsRfdWlClientMac_Type()
)
wingStatsRfdWlClientMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientMac.setStatus("current")
_WingStatsRfdWlClientMacName_Type = DisplayString
_WingStatsRfdWlClientMacName_Object = MibTableColumn
wingStatsRfdWlClientMacName = _WingStatsRfdWlClientMacName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 2),
    _WingStatsRfdWlClientMacName_Type()
)
wingStatsRfdWlClientMacName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientMacName.setStatus("current")
_WingStatsRfdWlClientVendor_Type = DisplayString
_WingStatsRfdWlClientVendor_Object = MibTableColumn
wingStatsRfdWlClientVendor = _WingStatsRfdWlClientVendor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 3),
    _WingStatsRfdWlClientVendor_Type()
)
wingStatsRfdWlClientVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientVendor.setStatus("current")
_WingStatsRfdWlClientBss_Type = MacAddress
_WingStatsRfdWlClientBss_Object = MibTableColumn
wingStatsRfdWlClientBss = _WingStatsRfdWlClientBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 4),
    _WingStatsRfdWlClientBss_Type()
)
wingStatsRfdWlClientBss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientBss.setStatus("current")
_WingStatsRfdWlClientAp_Type = MacAddress
_WingStatsRfdWlClientAp_Object = MibTableColumn
wingStatsRfdWlClientAp = _WingStatsRfdWlClientAp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 5),
    _WingStatsRfdWlClientAp_Type()
)
wingStatsRfdWlClientAp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientAp.setStatus("current")
_WingStatsRfdWlClientRadioNum_Type = Unsigned32
_WingStatsRfdWlClientRadioNum_Object = MibTableColumn
wingStatsRfdWlClientRadioNum = _WingStatsRfdWlClientRadioNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 6),
    _WingStatsRfdWlClientRadioNum_Type()
)
wingStatsRfdWlClientRadioNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientRadioNum.setStatus("current")
_WingStatsRfdWlClientRadioType_Type = DisplayString
_WingStatsRfdWlClientRadioType_Object = MibTableColumn
wingStatsRfdWlClientRadioType = _WingStatsRfdWlClientRadioType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 7),
    _WingStatsRfdWlClientRadioType_Type()
)
wingStatsRfdWlClientRadioType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientRadioType.setStatus("current")
_WingStatsRfdWlClientRadioEnc_Type = DisplayString
_WingStatsRfdWlClientRadioEnc_Object = MibTableColumn
wingStatsRfdWlClientRadioEnc = _WingStatsRfdWlClientRadioEnc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 8),
    _WingStatsRfdWlClientRadioEnc_Type()
)
wingStatsRfdWlClientRadioEnc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientRadioEnc.setStatus("current")
_WingStatsRfdWlClientRadioAuth_Type = DisplayString
_WingStatsRfdWlClientRadioAuth_Object = MibTableColumn
wingStatsRfdWlClientRadioAuth = _WingStatsRfdWlClientRadioAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 9),
    _WingStatsRfdWlClientRadioAuth_Type()
)
wingStatsRfdWlClientRadioAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientRadioAuth.setStatus("current")
_WingStatsRfdWlClientWlan_Type = DisplayString
_WingStatsRfdWlClientWlan_Object = MibTableColumn
wingStatsRfdWlClientWlan = _WingStatsRfdWlClientWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 10),
    _WingStatsRfdWlClientWlan_Type()
)
wingStatsRfdWlClientWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientWlan.setStatus("current")
_WingStatsRfdWlClientState_Type = DisplayString
_WingStatsRfdWlClientState_Object = MibTableColumn
wingStatsRfdWlClientState = _WingStatsRfdWlClientState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 11),
    _WingStatsRfdWlClientState_Type()
)
wingStatsRfdWlClientState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientState.setStatus("current")
_WingStatsRfdWlClientHotspotAuthed_Type = TruthValue
_WingStatsRfdWlClientHotspotAuthed_Object = MibTableColumn
wingStatsRfdWlClientHotspotAuthed = _WingStatsRfdWlClientHotspotAuthed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 12),
    _WingStatsRfdWlClientHotspotAuthed_Type()
)
wingStatsRfdWlClientHotspotAuthed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientHotspotAuthed.setStatus("current")
_WingStatsRfdWlClientVlan_Type = Unsigned32
_WingStatsRfdWlClientVlan_Object = MibTableColumn
wingStatsRfdWlClientVlan = _WingStatsRfdWlClientVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 13),
    _WingStatsRfdWlClientVlan_Type()
)
wingStatsRfdWlClientVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientVlan.setStatus("current")
_WingStatsRfdWlClientUserName_Type = DisplayString
_WingStatsRfdWlClientUserName_Object = MibTableColumn
wingStatsRfdWlClientUserName = _WingStatsRfdWlClientUserName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 14),
    _WingStatsRfdWlClientUserName_Type()
)
wingStatsRfdWlClientUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientUserName.setStatus("current")
_WingStatsRfdWlClientIp_Type = DisplayString
_WingStatsRfdWlClientIp_Object = MibTableColumn
wingStatsRfdWlClientIp = _WingStatsRfdWlClientIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 15),
    _WingStatsRfdWlClientIp_Type()
)
wingStatsRfdWlClientIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientIp.setStatus("current")
_WingStatsRfdWlClientRfdName_Type = DisplayString
_WingStatsRfdWlClientRfdName_Object = MibTableColumn
wingStatsRfdWlClientRfdName = _WingStatsRfdWlClientRfdName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 16),
    _WingStatsRfdWlClientRfdName_Type()
)
wingStatsRfdWlClientRfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientRfdName.setStatus("current")
_WingStatsRfdWlClientHostname_Type = DisplayString
_WingStatsRfdWlClientHostname_Object = MibTableColumn
wingStatsRfdWlClientHostname = _WingStatsRfdWlClientHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 17),
    _WingStatsRfdWlClientHostname_Type()
)
wingStatsRfdWlClientHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientHostname.setStatus("current")
_WingStatsRfdWlClientLocation_Type = DisplayString
_WingStatsRfdWlClientLocation_Object = MibTableColumn
wingStatsRfdWlClientLocation = _WingStatsRfdWlClientLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 18),
    _WingStatsRfdWlClientLocation_Type()
)
wingStatsRfdWlClientLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientLocation.setStatus("current")
_WingStatsRfdWlClientRadioId_Type = DisplayString
_WingStatsRfdWlClientRadioId_Object = MibTableColumn
wingStatsRfdWlClientRadioId = _WingStatsRfdWlClientRadioId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 19),
    _WingStatsRfdWlClientRadioId_Type()
)
wingStatsRfdWlClientRadioId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientRadioId.setStatus("current")
_WingStatsRfdWlClientRadioAlias_Type = DisplayString
_WingStatsRfdWlClientRadioAlias_Object = MibTableColumn
wingStatsRfdWlClientRadioAlias = _WingStatsRfdWlClientRadioAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 3, 1, 1, 20),
    _WingStatsRfdWlClientRadioAlias_Type()
)
wingStatsRfdWlClientRadioAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientRadioAlias.setStatus("current")
_WingStatsRfdWlClientDetail_ObjectIdentity = ObjectIdentity
wingStatsRfdWlClientDetail = _WingStatsRfdWlClientDetail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4)
)
_WingStatsRfdWlClientDetailTable_Object = MibTable
wingStatsRfdWlClientDetailTable = _WingStatsRfdWlClientDetailTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailTable.setStatus("current")
_WingStatsRfdWlClientDetailEntry_Object = MibTableRow
wingStatsRfdWlClientDetailEntry = _WingStatsRfdWlClientDetailEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1)
)
wingStatsRfdWlClientDetailEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlClientDetailMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailEntry.setStatus("current")
_WingStatsRfdWlClientDetailMac_Type = MacAddress
_WingStatsRfdWlClientDetailMac_Object = MibTableColumn
wingStatsRfdWlClientDetailMac = _WingStatsRfdWlClientDetailMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 1),
    _WingStatsRfdWlClientDetailMac_Type()
)
wingStatsRfdWlClientDetailMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailMac.setStatus("current")
_WingStatsRfdWlClientDetailMacName_Type = DisplayString
_WingStatsRfdWlClientDetailMacName_Object = MibTableColumn
wingStatsRfdWlClientDetailMacName = _WingStatsRfdWlClientDetailMacName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 2),
    _WingStatsRfdWlClientDetailMacName_Type()
)
wingStatsRfdWlClientDetailMacName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailMacName.setStatus("current")
_WingStatsRfdWlClientDetailVendor_Type = DisplayString
_WingStatsRfdWlClientDetailVendor_Object = MibTableColumn
wingStatsRfdWlClientDetailVendor = _WingStatsRfdWlClientDetailVendor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 3),
    _WingStatsRfdWlClientDetailVendor_Type()
)
wingStatsRfdWlClientDetailVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailVendor.setStatus("current")
_WingStatsRfdWlClientDetailBss_Type = MacAddress
_WingStatsRfdWlClientDetailBss_Object = MibTableColumn
wingStatsRfdWlClientDetailBss = _WingStatsRfdWlClientDetailBss_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 4),
    _WingStatsRfdWlClientDetailBss_Type()
)
wingStatsRfdWlClientDetailBss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailBss.setStatus("current")
_WingStatsRfdWlClientDetailAp_Type = MacAddress
_WingStatsRfdWlClientDetailAp_Object = MibTableColumn
wingStatsRfdWlClientDetailAp = _WingStatsRfdWlClientDetailAp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 5),
    _WingStatsRfdWlClientDetailAp_Type()
)
wingStatsRfdWlClientDetailAp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailAp.setStatus("current")
_WingStatsRfdWlClientDetailRadioNum_Type = Unsigned32
_WingStatsRfdWlClientDetailRadioNum_Object = MibTableColumn
wingStatsRfdWlClientDetailRadioNum = _WingStatsRfdWlClientDetailRadioNum_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 6),
    _WingStatsRfdWlClientDetailRadioNum_Type()
)
wingStatsRfdWlClientDetailRadioNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailRadioNum.setStatus("current")
_WingStatsRfdWlClientDetailRadioType_Type = DisplayString
_WingStatsRfdWlClientDetailRadioType_Object = MibTableColumn
wingStatsRfdWlClientDetailRadioType = _WingStatsRfdWlClientDetailRadioType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 7),
    _WingStatsRfdWlClientDetailRadioType_Type()
)
wingStatsRfdWlClientDetailRadioType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailRadioType.setStatus("current")
_WingStatsRfdWlClientDetailEnc_Type = DisplayString
_WingStatsRfdWlClientDetailEnc_Object = MibTableColumn
wingStatsRfdWlClientDetailEnc = _WingStatsRfdWlClientDetailEnc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 8),
    _WingStatsRfdWlClientDetailEnc_Type()
)
wingStatsRfdWlClientDetailEnc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailEnc.setStatus("current")
_WingStatsRfdWlClientDetailAuth_Type = DisplayString
_WingStatsRfdWlClientDetailAuth_Object = MibTableColumn
wingStatsRfdWlClientDetailAuth = _WingStatsRfdWlClientDetailAuth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 9),
    _WingStatsRfdWlClientDetailAuth_Type()
)
wingStatsRfdWlClientDetailAuth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailAuth.setStatus("current")
_WingStatsRfdWlClientDetailWlan_Type = DisplayString
_WingStatsRfdWlClientDetailWlan_Object = MibTableColumn
wingStatsRfdWlClientDetailWlan = _WingStatsRfdWlClientDetailWlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 10),
    _WingStatsRfdWlClientDetailWlan_Type()
)
wingStatsRfdWlClientDetailWlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailWlan.setStatus("current")
_WingStatsRfdWlClientDetailState_Type = DisplayString
_WingStatsRfdWlClientDetailState_Object = MibTableColumn
wingStatsRfdWlClientDetailState = _WingStatsRfdWlClientDetailState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 11),
    _WingStatsRfdWlClientDetailState_Type()
)
wingStatsRfdWlClientDetailState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailState.setStatus("current")
_WingStatsRfdWlClientDetailHotspotAuthed_Type = TruthValue
_WingStatsRfdWlClientDetailHotspotAuthed_Object = MibTableColumn
wingStatsRfdWlClientDetailHotspotAuthed = _WingStatsRfdWlClientDetailHotspotAuthed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 12),
    _WingStatsRfdWlClientDetailHotspotAuthed_Type()
)
wingStatsRfdWlClientDetailHotspotAuthed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailHotspotAuthed.setStatus("current")
_WingStatsRfdWlClientDetailVlan_Type = Unsigned32
_WingStatsRfdWlClientDetailVlan_Object = MibTableColumn
wingStatsRfdWlClientDetailVlan = _WingStatsRfdWlClientDetailVlan_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 13),
    _WingStatsRfdWlClientDetailVlan_Type()
)
wingStatsRfdWlClientDetailVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailVlan.setStatus("current")
_WingStatsRfdWlClientDetailUsername_Type = DisplayString
_WingStatsRfdWlClientDetailUsername_Object = MibTableColumn
wingStatsRfdWlClientDetailUsername = _WingStatsRfdWlClientDetailUsername_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 14),
    _WingStatsRfdWlClientDetailUsername_Type()
)
wingStatsRfdWlClientDetailUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailUsername.setStatus("current")
_WingStatsRfdWlClientDetailIp_Type = DisplayString
_WingStatsRfdWlClientDetailIp_Object = MibTableColumn
wingStatsRfdWlClientDetailIp = _WingStatsRfdWlClientDetailIp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 15),
    _WingStatsRfdWlClientDetailIp_Type()
)
wingStatsRfdWlClientDetailIp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailIp.setStatus("current")
_WingStatsRfdWlClientDetailRfDomainName_Type = DisplayString
_WingStatsRfdWlClientDetailRfDomainName_Object = MibTableColumn
wingStatsRfdWlClientDetailRfDomainName = _WingStatsRfdWlClientDetailRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 16),
    _WingStatsRfdWlClientDetailRfDomainName_Type()
)
wingStatsRfdWlClientDetailRfDomainName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailRfDomainName.setStatus("current")
_WingStatsRfdWlClientDetailMc2ucStreams_Type = DisplayString
_WingStatsRfdWlClientDetailMc2ucStreams_Object = MibTableColumn
wingStatsRfdWlClientDetailMc2ucStreams = _WingStatsRfdWlClientDetailMc2ucStreams_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 17),
    _WingStatsRfdWlClientDetailMc2ucStreams_Type()
)
wingStatsRfdWlClientDetailMc2ucStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailMc2ucStreams.setStatus("current")
_WingStatsRfdWlClientDetailHostname_Type = DisplayString
_WingStatsRfdWlClientDetailHostname_Object = MibTableColumn
wingStatsRfdWlClientDetailHostname = _WingStatsRfdWlClientDetailHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 18),
    _WingStatsRfdWlClientDetailHostname_Type()
)
wingStatsRfdWlClientDetailHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailHostname.setStatus("current")
_WingStatsRfdWlClientDetailLocation_Type = DisplayString
_WingStatsRfdWlClientDetailLocation_Object = MibTableColumn
wingStatsRfdWlClientDetailLocation = _WingStatsRfdWlClientDetailLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 19),
    _WingStatsRfdWlClientDetailLocation_Type()
)
wingStatsRfdWlClientDetailLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailLocation.setStatus("current")
_WingStatsRfdWlClientDetailRadioId_Type = DisplayString
_WingStatsRfdWlClientDetailRadioId_Object = MibTableColumn
wingStatsRfdWlClientDetailRadioId = _WingStatsRfdWlClientDetailRadioId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 20),
    _WingStatsRfdWlClientDetailRadioId_Type()
)
wingStatsRfdWlClientDetailRadioId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailRadioId.setStatus("current")
_WingStatsRfdWlClientDetailRadioAlias_Type = DisplayString
_WingStatsRfdWlClientDetailRadioAlias_Object = MibTableColumn
wingStatsRfdWlClientDetailRadioAlias = _WingStatsRfdWlClientDetailRadioAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 21),
    _WingStatsRfdWlClientDetailRadioAlias_Type()
)
wingStatsRfdWlClientDetailRadioAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailRadioAlias.setStatus("current")
_WingStatsRfdWlClientDetailSsid_Type = DisplayString
_WingStatsRfdWlClientDetailSsid_Object = MibTableColumn
wingStatsRfdWlClientDetailSsid = _WingStatsRfdWlClientDetailSsid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 22),
    _WingStatsRfdWlClientDetailSsid_Type()
)
wingStatsRfdWlClientDetailSsid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailSsid.setStatus("current")
_WingStatsRfdWlClientDetailAid_Type = Unsigned32
_WingStatsRfdWlClientDetailAid_Object = MibTableColumn
wingStatsRfdWlClientDetailAid = _WingStatsRfdWlClientDetailAid_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 23),
    _WingStatsRfdWlClientDetailAid_Type()
)
wingStatsRfdWlClientDetailAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailAid.setStatus("current")
_WingStatsRfdWlClientDetailRates_Type = DisplayString
_WingStatsRfdWlClientDetailRates_Object = MibTableColumn
wingStatsRfdWlClientDetailRates = _WingStatsRfdWlClientDetailRates_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 24),
    _WingStatsRfdWlClientDetailRates_Type()
)
wingStatsRfdWlClientDetailRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailRates.setStatus("current")
_WingStatsRfdWlClientDetailInPsp_Type = TruthValue
_WingStatsRfdWlClientDetailInPsp_Object = MibTableColumn
wingStatsRfdWlClientDetailInPsp = _WingStatsRfdWlClientDetailInPsp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 25),
    _WingStatsRfdWlClientDetailInPsp_Type()
)
wingStatsRfdWlClientDetailInPsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailInPsp.setStatus("current")
_WingStatsRfdWlClientDetailIsWmm_Type = TruthValue
_WingStatsRfdWlClientDetailIsWmm_Object = MibTableColumn
wingStatsRfdWlClientDetailIsWmm = _WingStatsRfdWlClientDetailIsWmm_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 26),
    _WingStatsRfdWlClientDetailIsWmm_Type()
)
wingStatsRfdWlClientDetailIsWmm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailIsWmm.setStatus("current")
_WingStatsRfdWlClientDetailUapsd_Type = DisplayString
_WingStatsRfdWlClientDetailUapsd_Object = MibTableColumn
wingStatsRfdWlClientDetailUapsd = _WingStatsRfdWlClientDetailUapsd_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 27),
    _WingStatsRfdWlClientDetailUapsd_Type()
)
wingStatsRfdWlClientDetailUapsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailUapsd.setStatus("current")
_WingStatsRfdWlClientDetailSmPowersave_Type = DisplayString
_WingStatsRfdWlClientDetailSmPowersave_Object = MibTableColumn
wingStatsRfdWlClientDetailSmPowersave = _WingStatsRfdWlClientDetailSmPowersave_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 28),
    _WingStatsRfdWlClientDetailSmPowersave_Type()
)
wingStatsRfdWlClientDetailSmPowersave.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailSmPowersave.setStatus("current")
_WingStatsRfdWlClientDetailHtCapable_Type = TruthValue
_WingStatsRfdWlClientDetailHtCapable_Object = MibTableColumn
wingStatsRfdWlClientDetailHtCapable = _WingStatsRfdWlClientDetailHtCapable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 29),
    _WingStatsRfdWlClientDetailHtCapable_Type()
)
wingStatsRfdWlClientDetailHtCapable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailHtCapable.setStatus("current")
_WingStatsRfdWlClientDetailShortGi_Type = TruthValue
_WingStatsRfdWlClientDetailShortGi_Object = MibTableColumn
wingStatsRfdWlClientDetailShortGi = _WingStatsRfdWlClientDetailShortGi_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 30),
    _WingStatsRfdWlClientDetailShortGi_Type()
)
wingStatsRfdWlClientDetailShortGi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailShortGi.setStatus("current")
_WingStatsRfdWlClientDetailCurWidth40_Type = TruthValue
_WingStatsRfdWlClientDetailCurWidth40_Object = MibTableColumn
wingStatsRfdWlClientDetailCurWidth40 = _WingStatsRfdWlClientDetailCurWidth40_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 31),
    _WingStatsRfdWlClientDetailCurWidth40_Type()
)
wingStatsRfdWlClientDetailCurWidth40.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailCurWidth40.setStatus("current")
_WingStatsRfdWlClientDetailAmsduSize_Type = Unsigned32
_WingStatsRfdWlClientDetailAmsduSize_Object = MibTableColumn
wingStatsRfdWlClientDetailAmsduSize = _WingStatsRfdWlClientDetailAmsduSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 32),
    _WingStatsRfdWlClientDetailAmsduSize_Type()
)
wingStatsRfdWlClientDetailAmsduSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailAmsduSize.setStatus("current")
_WingStatsRfdWlClientDetailAmpduSize_Type = Unsigned32
_WingStatsRfdWlClientDetailAmpduSize_Object = MibTableColumn
wingStatsRfdWlClientDetailAmpduSize = _WingStatsRfdWlClientDetailAmpduSize_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 33),
    _WingStatsRfdWlClientDetailAmpduSize_Type()
)
wingStatsRfdWlClientDetailAmpduSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailAmpduSize.setStatus("current")
_WingStatsRfdWlClientDetailAmpduSpacing_Type = Unsigned32
_WingStatsRfdWlClientDetailAmpduSpacing_Object = MibTableColumn
wingStatsRfdWlClientDetailAmpduSpacing = _WingStatsRfdWlClientDetailAmpduSpacing_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 34),
    _WingStatsRfdWlClientDetailAmpduSpacing_Type()
)
wingStatsRfdWlClientDetailAmpduSpacing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailAmpduSpacing.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailAmpduSpacing.setUnits("microSeconds")
_WingStatsRfdWlClientDetailRifs_Type = TruthValue
_WingStatsRfdWlClientDetailRifs_Object = MibTableColumn
wingStatsRfdWlClientDetailRifs = _WingStatsRfdWlClientDetailRifs_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 35),
    _WingStatsRfdWlClientDetailRifs_Type()
)
wingStatsRfdWlClientDetailRifs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailRifs.setStatus("current")
_WingStatsRfdWlClientDetailLastActive_Type = Unsigned32
_WingStatsRfdWlClientDetailLastActive_Object = MibTableColumn
wingStatsRfdWlClientDetailLastActive = _WingStatsRfdWlClientDetailLastActive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 36),
    _WingStatsRfdWlClientDetailLastActive_Type()
)
wingStatsRfdWlClientDetailLastActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailLastActive.setStatus("current")
_WingStatsRfdWlClientDetailLastAssoc_Type = Unsigned32
_WingStatsRfdWlClientDetailLastAssoc_Object = MibTableColumn
wingStatsRfdWlClientDetailLastAssoc = _WingStatsRfdWlClientDetailLastAssoc_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 37),
    _WingStatsRfdWlClientDetailLastAssoc_Type()
)
wingStatsRfdWlClientDetailLastAssoc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailLastAssoc.setStatus("current")
_WingStatsRfdWlClientDetailSessTime_Type = Unsigned32
_WingStatsRfdWlClientDetailSessTime_Object = MibTableColumn
wingStatsRfdWlClientDetailSessTime = _WingStatsRfdWlClientDetailSessTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 38),
    _WingStatsRfdWlClientDetailSessTime_Type()
)
wingStatsRfdWlClientDetailSessTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailSessTime.setStatus("current")
_WingStatsRfdWlClientDetailIdleTime_Type = Unsigned32
_WingStatsRfdWlClientDetailIdleTime_Object = MibTableColumn
wingStatsRfdWlClientDetailIdleTime = _WingStatsRfdWlClientDetailIdleTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 39),
    _WingStatsRfdWlClientDetailIdleTime_Type()
)
wingStatsRfdWlClientDetailIdleTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailIdleTime.setStatus("current")
_WingStatsRfdWlClientDetailMaxPhyRate_Type = Unsigned32
_WingStatsRfdWlClientDetailMaxPhyRate_Object = MibTableColumn
wingStatsRfdWlClientDetailMaxPhyRate = _WingStatsRfdWlClientDetailMaxPhyRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 40),
    _WingStatsRfdWlClientDetailMaxPhyRate_Type()
)
wingStatsRfdWlClientDetailMaxPhyRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailMaxPhyRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailMaxPhyRate.setUnits("kbps")
_WingStatsRfdWlClientDetailMaxUserRate_Type = Unsigned32
_WingStatsRfdWlClientDetailMaxUserRate_Object = MibTableColumn
wingStatsRfdWlClientDetailMaxUserRate = _WingStatsRfdWlClientDetailMaxUserRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 41),
    _WingStatsRfdWlClientDetailMaxUserRate_Type()
)
wingStatsRfdWlClientDetailMaxUserRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailMaxUserRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailMaxUserRate.setUnits("kbps")
_WingStatsRfdWlClientDetailIsVoice_Type = TruthValue
_WingStatsRfdWlClientDetailIsVoice_Object = MibTableColumn
wingStatsRfdWlClientDetailIsVoice = _WingStatsRfdWlClientDetailIsVoice_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 42),
    _WingStatsRfdWlClientDetailIsVoice_Type()
)
wingStatsRfdWlClientDetailIsVoice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailIsVoice.setStatus("current")
_WingStatsRfdWlClientDetailIsCallActive_Type = TruthValue
_WingStatsRfdWlClientDetailIsCallActive_Object = MibTableColumn
wingStatsRfdWlClientDetailIsCallActive = _WingStatsRfdWlClientDetailIsCallActive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 4, 1, 1, 43),
    _WingStatsRfdWlClientDetailIsCallActive_Type()
)
wingStatsRfdWlClientDetailIsCallActive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientDetailIsCallActive.setStatus("current")
_WingStatsRfdWlClientStat_ObjectIdentity = ObjectIdentity
wingStatsRfdWlClientStat = _WingStatsRfdWlClientStat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5)
)
_WingStatsRfdWlClientStatTable_Object = MibTable
wingStatsRfdWlClientStatTable = _WingStatsRfdWlClientStatTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTable.setStatus("current")
_WingStatsRfdWlClientStatEntry_Object = MibTableRow
wingStatsRfdWlClientStatEntry = _WingStatsRfdWlClientStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1)
)
wingStatsRfdWlClientStatEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlClientStatMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatEntry.setStatus("current")
_WingStatsRfdWlClientStatMac_Type = MacAddress
_WingStatsRfdWlClientStatMac_Object = MibTableColumn
wingStatsRfdWlClientStatMac = _WingStatsRfdWlClientStatMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 1),
    _WingStatsRfdWlClientStatMac_Type()
)
wingStatsRfdWlClientStatMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatMac.setStatus("current")
_WingStatsRfdWlClientStatMacName_Type = DisplayString
_WingStatsRfdWlClientStatMacName_Object = MibTableColumn
wingStatsRfdWlClientStatMacName = _WingStatsRfdWlClientStatMacName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 2),
    _WingStatsRfdWlClientStatMacName_Type()
)
wingStatsRfdWlClientStatMacName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatMacName.setStatus("current")
_WingStatsRfdWlClientStatVendor_Type = DisplayString
_WingStatsRfdWlClientStatVendor_Object = MibTableColumn
wingStatsRfdWlClientStatVendor = _WingStatsRfdWlClientStatVendor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 3),
    _WingStatsRfdWlClientStatVendor_Type()
)
wingStatsRfdWlClientStatVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatVendor.setStatus("current")
_WingStatsRfdWlClientStatAp_Type = MacAddress
_WingStatsRfdWlClientStatAp_Object = MibTableColumn
wingStatsRfdWlClientStatAp = _WingStatsRfdWlClientStatAp_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 4),
    _WingStatsRfdWlClientStatAp_Type()
)
wingStatsRfdWlClientStatAp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatAp.setStatus("current")
_WingStatsRfdWlClientStatTxBytes_Type = Counter64
_WingStatsRfdWlClientStatTxBytes_Object = MibTableColumn
wingStatsRfdWlClientStatTxBytes = _WingStatsRfdWlClientStatTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 5),
    _WingStatsRfdWlClientStatTxBytes_Type()
)
wingStatsRfdWlClientStatTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTxBytes.setStatus("current")
_WingStatsRfdWlClientStatRxBytes_Type = Counter64
_WingStatsRfdWlClientStatRxBytes_Object = MibTableColumn
wingStatsRfdWlClientStatRxBytes = _WingStatsRfdWlClientStatRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 6),
    _WingStatsRfdWlClientStatRxBytes_Type()
)
wingStatsRfdWlClientStatRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatRxBytes.setStatus("current")
_WingStatsRfdWlClientStatTxPkts_Type = Counter32
_WingStatsRfdWlClientStatTxPkts_Object = MibTableColumn
wingStatsRfdWlClientStatTxPkts = _WingStatsRfdWlClientStatTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 7),
    _WingStatsRfdWlClientStatTxPkts_Type()
)
wingStatsRfdWlClientStatTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTxPkts.setStatus("current")
_WingStatsRfdWlClientStatRxPkts_Type = Counter32
_WingStatsRfdWlClientStatRxPkts_Object = MibTableColumn
wingStatsRfdWlClientStatRxPkts = _WingStatsRfdWlClientStatRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 8),
    _WingStatsRfdWlClientStatRxPkts_Type()
)
wingStatsRfdWlClientStatRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatRxPkts.setStatus("current")
_WingStatsRfdWlClientStatTxDropped_Type = Counter32
_WingStatsRfdWlClientStatTxDropped_Object = MibTableColumn
wingStatsRfdWlClientStatTxDropped = _WingStatsRfdWlClientStatTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 9),
    _WingStatsRfdWlClientStatTxDropped_Type()
)
wingStatsRfdWlClientStatTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTxDropped.setStatus("current")
_WingStatsRfdWlClientStatRxErrors_Type = Counter32
_WingStatsRfdWlClientStatRxErrors_Object = MibTableColumn
wingStatsRfdWlClientStatRxErrors = _WingStatsRfdWlClientStatRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 10),
    _WingStatsRfdWlClientStatRxErrors_Type()
)
wingStatsRfdWlClientStatRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatRxErrors.setStatus("current")
_WingStatsRfdWlClientStatTIndex_Type = Integer32
_WingStatsRfdWlClientStatTIndex_Object = MibTableColumn
wingStatsRfdWlClientStatTIndex = _WingStatsRfdWlClientStatTIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 11),
    _WingStatsRfdWlClientStatTIndex_Type()
)
wingStatsRfdWlClientStatTIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTIndex.setStatus("current")
_WingStatsRfdWlClientStatTxBps_Type = Unsigned32
_WingStatsRfdWlClientStatTxBps_Object = MibTableColumn
wingStatsRfdWlClientStatTxBps = _WingStatsRfdWlClientStatTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 12),
    _WingStatsRfdWlClientStatTxBps_Type()
)
wingStatsRfdWlClientStatTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTxBps.setUnits("kbps")
_WingStatsRfdWlClientStatRxBps_Type = Unsigned32
_WingStatsRfdWlClientStatRxBps_Object = MibTableColumn
wingStatsRfdWlClientStatRxBps = _WingStatsRfdWlClientStatRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 13),
    _WingStatsRfdWlClientStatRxBps_Type()
)
wingStatsRfdWlClientStatRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatRxBps.setUnits("kbps")
_WingStatsRfdWlClientStatSignal_Type = Integer32
_WingStatsRfdWlClientStatSignal_Object = MibTableColumn
wingStatsRfdWlClientStatSignal = _WingStatsRfdWlClientStatSignal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 14),
    _WingStatsRfdWlClientStatSignal_Type()
)
wingStatsRfdWlClientStatSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatSignal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatSignal.setUnits("dbm")
_WingStatsRfdWlClientStatNoise_Type = Integer32
_WingStatsRfdWlClientStatNoise_Object = MibTableColumn
wingStatsRfdWlClientStatNoise = _WingStatsRfdWlClientStatNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 15),
    _WingStatsRfdWlClientStatNoise_Type()
)
wingStatsRfdWlClientStatNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatNoise.setUnits("dbm")
_WingStatsRfdWlClientStatSnr_Type = Integer32
_WingStatsRfdWlClientStatSnr_Object = MibTableColumn
wingStatsRfdWlClientStatSnr = _WingStatsRfdWlClientStatSnr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 16),
    _WingStatsRfdWlClientStatSnr_Type()
)
wingStatsRfdWlClientStatSnr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatSnr.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatSnr.setUnits("db")
_WingStatsRfdWlClientStatTxRate_Type = Unsigned32
_WingStatsRfdWlClientStatTxRate_Object = MibTableColumn
wingStatsRfdWlClientStatTxRate = _WingStatsRfdWlClientStatTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 17),
    _WingStatsRfdWlClientStatTxRate_Type()
)
wingStatsRfdWlClientStatTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatTxRate.setUnits("Mbps")
_WingStatsRfdWlClientStatRxRate_Type = Unsigned32
_WingStatsRfdWlClientStatRxRate_Object = MibTableColumn
wingStatsRfdWlClientStatRxRate = _WingStatsRfdWlClientStatRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 18),
    _WingStatsRfdWlClientStatRxRate_Type()
)
wingStatsRfdWlClientStatRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatRxRate.setUnits("Mbps")
_WingStatsRfdWlClientStatErrorRate_Type = Unsigned32
_WingStatsRfdWlClientStatErrorRate_Object = MibTableColumn
wingStatsRfdWlClientStatErrorRate = _WingStatsRfdWlClientStatErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 19),
    _WingStatsRfdWlClientStatErrorRate_Type()
)
wingStatsRfdWlClientStatErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatErrorRate.setStatus("current")
_WingStatsRfdWlClientStatQIndex_Type = Integer32
_WingStatsRfdWlClientStatQIndex_Object = MibTableColumn
wingStatsRfdWlClientStatQIndex = _WingStatsRfdWlClientStatQIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 5, 1, 1, 20),
    _WingStatsRfdWlClientStatQIndex_Type()
)
wingStatsRfdWlClientStatQIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatQIndex.setStatus("current")
_WingStatsRfdWlClientStatDetail_ObjectIdentity = ObjectIdentity
wingStatsRfdWlClientStatDetail = _WingStatsRfdWlClientStatDetail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6)
)
_WingStatsRfdWlClientStatDetailTable_Object = MibTable
wingStatsRfdWlClientStatDetailTable = _WingStatsRfdWlClientStatDetailTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTable.setStatus("current")
_WingStatsRfdWlClientStatDetailEntry_Object = MibTableRow
wingStatsRfdWlClientStatDetailEntry = _WingStatsRfdWlClientStatDetailEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1)
)
wingStatsRfdWlClientStatDetailEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlClientStatDetailMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailEntry.setStatus("current")
_WingStatsRfdWlClientStatDetailMac_Type = MacAddress
_WingStatsRfdWlClientStatDetailMac_Object = MibTableColumn
wingStatsRfdWlClientStatDetailMac = _WingStatsRfdWlClientStatDetailMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 1),
    _WingStatsRfdWlClientStatDetailMac_Type()
)
wingStatsRfdWlClientStatDetailMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailMac.setStatus("current")
_WingStatsRfdWlClientStatDetailMacName_Type = DisplayString
_WingStatsRfdWlClientStatDetailMacName_Object = MibTableColumn
wingStatsRfdWlClientStatDetailMacName = _WingStatsRfdWlClientStatDetailMacName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 2),
    _WingStatsRfdWlClientStatDetailMacName_Type()
)
wingStatsRfdWlClientStatDetailMacName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailMacName.setStatus("current")
_WingStatsRfdWlClientStatDetailVendor_Type = DisplayString
_WingStatsRfdWlClientStatDetailVendor_Object = MibTableColumn
wingStatsRfdWlClientStatDetailVendor = _WingStatsRfdWlClientStatDetailVendor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 3),
    _WingStatsRfdWlClientStatDetailVendor_Type()
)
wingStatsRfdWlClientStatDetailVendor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailVendor.setStatus("current")
_WingStatsRfdWlClientStatDetailTxBytes_Type = Counter64
_WingStatsRfdWlClientStatDetailTxBytes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxBytes = _WingStatsRfdWlClientStatDetailTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 4),
    _WingStatsRfdWlClientStatDetailTxBytes_Type()
)
wingStatsRfdWlClientStatDetailTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxBytes.setStatus("current")
_WingStatsRfdWlClientStatDetailRxBytes_Type = Counter64
_WingStatsRfdWlClientStatDetailRxBytes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxBytes = _WingStatsRfdWlClientStatDetailRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 5),
    _WingStatsRfdWlClientStatDetailRxBytes_Type()
)
wingStatsRfdWlClientStatDetailRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxBytes.setStatus("current")
_WingStatsRfdWlClientStatDetailTxPkts_Type = Counter32
_WingStatsRfdWlClientStatDetailTxPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxPkts = _WingStatsRfdWlClientStatDetailTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 6),
    _WingStatsRfdWlClientStatDetailTxPkts_Type()
)
wingStatsRfdWlClientStatDetailTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailRxPkts_Type = Counter32
_WingStatsRfdWlClientStatDetailRxPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxPkts = _WingStatsRfdWlClientStatDetailRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 7),
    _WingStatsRfdWlClientStatDetailRxPkts_Type()
)
wingStatsRfdWlClientStatDetailRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailTxDropped_Type = Counter32
_WingStatsRfdWlClientStatDetailTxDropped_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxDropped = _WingStatsRfdWlClientStatDetailTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 8),
    _WingStatsRfdWlClientStatDetailTxDropped_Type()
)
wingStatsRfdWlClientStatDetailTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxDropped.setStatus("current")
_WingStatsRfdWlClientStatDetailRxErrors_Type = Counter32
_WingStatsRfdWlClientStatDetailRxErrors_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxErrors = _WingStatsRfdWlClientStatDetailRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 9),
    _WingStatsRfdWlClientStatDetailRxErrors_Type()
)
wingStatsRfdWlClientStatDetailRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxErrors.setStatus("current")
_WingStatsRfdWlClientStatDetailTIndex_Type = Integer32
_WingStatsRfdWlClientStatDetailTIndex_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTIndex = _WingStatsRfdWlClientStatDetailTIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 10),
    _WingStatsRfdWlClientStatDetailTIndex_Type()
)
wingStatsRfdWlClientStatDetailTIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTIndex.setStatus("current")
_WingStatsRfdWlClientStatDetailTxBps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailTxBps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxBps = _WingStatsRfdWlClientStatDetailTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 11),
    _WingStatsRfdWlClientStatDetailTxBps_Type()
)
wingStatsRfdWlClientStatDetailTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxBps.setUnits("kbps")
_WingStatsRfdWlClientStatDetailRxBps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRxBps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxBps = _WingStatsRfdWlClientStatDetailRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 12),
    _WingStatsRfdWlClientStatDetailRxBps_Type()
)
wingStatsRfdWlClientStatDetailRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxBps.setUnits("kbps")
_WingStatsRfdWlClientStatDetailSignal_Type = Integer32
_WingStatsRfdWlClientStatDetailSignal_Object = MibTableColumn
wingStatsRfdWlClientStatDetailSignal = _WingStatsRfdWlClientStatDetailSignal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 13),
    _WingStatsRfdWlClientStatDetailSignal_Type()
)
wingStatsRfdWlClientStatDetailSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailSignal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailSignal.setUnits("dbm")
_WingStatsRfdWlClientStatDetailNoise_Type = Integer32
_WingStatsRfdWlClientStatDetailNoise_Object = MibTableColumn
wingStatsRfdWlClientStatDetailNoise = _WingStatsRfdWlClientStatDetailNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 14),
    _WingStatsRfdWlClientStatDetailNoise_Type()
)
wingStatsRfdWlClientStatDetailNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailNoise.setUnits("dbm")
_WingStatsRfdWlClientStatDetailSnr_Type = Integer32
_WingStatsRfdWlClientStatDetailSnr_Object = MibTableColumn
wingStatsRfdWlClientStatDetailSnr = _WingStatsRfdWlClientStatDetailSnr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 15),
    _WingStatsRfdWlClientStatDetailSnr_Type()
)
wingStatsRfdWlClientStatDetailSnr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailSnr.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailSnr.setUnits("db")
_WingStatsRfdWlClientStatDetailTxRate_Type = Unsigned32
_WingStatsRfdWlClientStatDetailTxRate_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxRate = _WingStatsRfdWlClientStatDetailTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 16),
    _WingStatsRfdWlClientStatDetailTxRate_Type()
)
wingStatsRfdWlClientStatDetailTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxRate.setUnits("Mbps")
_WingStatsRfdWlClientStatDetailRxRate_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRxRate_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxRate = _WingStatsRfdWlClientStatDetailRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 17),
    _WingStatsRfdWlClientStatDetailRxRate_Type()
)
wingStatsRfdWlClientStatDetailRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxRate.setUnits("Mbps")
_WingStatsRfdWlClientStatDetailErrorRate_Type = Unsigned32
_WingStatsRfdWlClientStatDetailErrorRate_Object = MibTableColumn
wingStatsRfdWlClientStatDetailErrorRate = _WingStatsRfdWlClientStatDetailErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 18),
    _WingStatsRfdWlClientStatDetailErrorRate_Type()
)
wingStatsRfdWlClientStatDetailErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailErrorRate.setStatus("current")
_WingStatsRfdWlClientStatDetailQIndex_Type = Integer32
_WingStatsRfdWlClientStatDetailQIndex_Object = MibTableColumn
wingStatsRfdWlClientStatDetailQIndex = _WingStatsRfdWlClientStatDetailQIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 19),
    _WingStatsRfdWlClientStatDetailQIndex_Type()
)
wingStatsRfdWlClientStatDetailQIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailQIndex.setStatus("current")
_WingStatsRfdWlClientStatDetailRawTxBytes_Type = Counter64
_WingStatsRfdWlClientStatDetailRawTxBytes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTxBytes = _WingStatsRfdWlClientStatDetailRawTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 20),
    _WingStatsRfdWlClientStatDetailRawTxBytes_Type()
)
wingStatsRfdWlClientStatDetailRawTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTxBytes.setStatus("current")
_WingStatsRfdWlClientStatDetailRawRxBytes_Type = Counter64
_WingStatsRfdWlClientStatDetailRawRxBytes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawRxBytes = _WingStatsRfdWlClientStatDetailRawRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 21),
    _WingStatsRfdWlClientStatDetailRawRxBytes_Type()
)
wingStatsRfdWlClientStatDetailRawRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawRxBytes.setStatus("current")
_WingStatsRfdWlClientStatDetailRawTotalBytes_Type = Counter64
_WingStatsRfdWlClientStatDetailRawTotalBytes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTotalBytes = _WingStatsRfdWlClientStatDetailRawTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 22),
    _WingStatsRfdWlClientStatDetailRawTotalBytes_Type()
)
wingStatsRfdWlClientStatDetailRawTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTotalBytes.setStatus("current")
_WingStatsRfdWlClientStatDetailRawTxPkts_Type = Counter32
_WingStatsRfdWlClientStatDetailRawTxPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTxPkts = _WingStatsRfdWlClientStatDetailRawTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 23),
    _WingStatsRfdWlClientStatDetailRawTxPkts_Type()
)
wingStatsRfdWlClientStatDetailRawTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTxPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailRawRxPkts_Type = Counter32
_WingStatsRfdWlClientStatDetailRawRxPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawRxPkts = _WingStatsRfdWlClientStatDetailRawRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 24),
    _WingStatsRfdWlClientStatDetailRawRxPkts_Type()
)
wingStatsRfdWlClientStatDetailRawRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawRxPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailRawTotalPkts_Type = Counter32
_WingStatsRfdWlClientStatDetailRawTotalPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTotalPkts = _WingStatsRfdWlClientStatDetailRawTotalPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 25),
    _WingStatsRfdWlClientStatDetailRawTotalPkts_Type()
)
wingStatsRfdWlClientStatDetailRawTotalPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTotalPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailRawTxBps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawTxBps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTxBps = _WingStatsRfdWlClientStatDetailRawTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 26),
    _WingStatsRfdWlClientStatDetailRawTxBps_Type()
)
wingStatsRfdWlClientStatDetailRawTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTxBps.setUnits("kbps")
_WingStatsRfdWlClientStatDetailRawRxBps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawRxBps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawRxBps = _WingStatsRfdWlClientStatDetailRawRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 27),
    _WingStatsRfdWlClientStatDetailRawRxBps_Type()
)
wingStatsRfdWlClientStatDetailRawRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawRxBps.setUnits("kbps")
_WingStatsRfdWlClientStatDetailRawTotalBps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawTotalBps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTotalBps = _WingStatsRfdWlClientStatDetailRawTotalBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 28),
    _WingStatsRfdWlClientStatDetailRawTotalBps_Type()
)
wingStatsRfdWlClientStatDetailRawTotalBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTotalBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTotalBps.setUnits("kbps")
_WingStatsRfdWlClientStatDetailRawTxPps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawTxPps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTxPps = _WingStatsRfdWlClientStatDetailRawTxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 29),
    _WingStatsRfdWlClientStatDetailRawTxPps_Type()
)
wingStatsRfdWlClientStatDetailRawTxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTxPps.setStatus("current")
_WingStatsRfdWlClientStatDetailRawRxPps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawRxPps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawRxPps = _WingStatsRfdWlClientStatDetailRawRxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 30),
    _WingStatsRfdWlClientStatDetailRawRxPps_Type()
)
wingStatsRfdWlClientStatDetailRawRxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawRxPps.setStatus("current")
_WingStatsRfdWlClientStatDetailRawTotalPps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawTotalPps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTotalPps = _WingStatsRfdWlClientStatDetailRawTotalPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 31),
    _WingStatsRfdWlClientStatDetailRawTotalPps_Type()
)
wingStatsRfdWlClientStatDetailRawTotalPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTotalPps.setStatus("current")
_WingStatsRfdWlClientStatDetailRawTxRate_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawTxRate_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawTxRate = _WingStatsRfdWlClientStatDetailRawTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 32),
    _WingStatsRfdWlClientStatDetailRawTxRate_Type()
)
wingStatsRfdWlClientStatDetailRawTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawTxRate.setUnits("Mbps")
_WingStatsRfdWlClientStatDetailRawRxRate_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawRxRate_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawRxRate = _WingStatsRfdWlClientStatDetailRawRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 33),
    _WingStatsRfdWlClientStatDetailRawRxRate_Type()
)
wingStatsRfdWlClientStatDetailRawRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawRxRate.setUnits("Mbps")
_WingStatsRfdWlClientStatDetailRawOverallRate_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRawOverallRate_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRawOverallRate = _WingStatsRfdWlClientStatDetailRawOverallRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 34),
    _WingStatsRfdWlClientStatDetailRawOverallRate_Type()
)
wingStatsRfdWlClientStatDetailRawOverallRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawOverallRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRawOverallRate.setUnits("Mbps")
_WingStatsRfdWlClientStatDetailTxBcmcPkts_Type = Counter64
_WingStatsRfdWlClientStatDetailTxBcmcPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxBcmcPkts = _WingStatsRfdWlClientStatDetailTxBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 35),
    _WingStatsRfdWlClientStatDetailTxBcmcPkts_Type()
)
wingStatsRfdWlClientStatDetailTxBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxBcmcPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailRxBcmcPkts_Type = Counter64
_WingStatsRfdWlClientStatDetailRxBcmcPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxBcmcPkts = _WingStatsRfdWlClientStatDetailRxBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 36),
    _WingStatsRfdWlClientStatDetailRxBcmcPkts_Type()
)
wingStatsRfdWlClientStatDetailRxBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxBcmcPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailTotalBcmcPkts_Type = Counter64
_WingStatsRfdWlClientStatDetailTotalBcmcPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTotalBcmcPkts = _WingStatsRfdWlClientStatDetailTotalBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 37),
    _WingStatsRfdWlClientStatDetailTotalBcmcPkts_Type()
)
wingStatsRfdWlClientStatDetailTotalBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTotalBcmcPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailTxPps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailTxPps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxPps = _WingStatsRfdWlClientStatDetailTxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 38),
    _WingStatsRfdWlClientStatDetailTxPps_Type()
)
wingStatsRfdWlClientStatDetailTxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxPps.setStatus("current")
_WingStatsRfdWlClientStatDetailRxPps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailRxPps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxPps = _WingStatsRfdWlClientStatDetailRxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 39),
    _WingStatsRfdWlClientStatDetailRxPps_Type()
)
wingStatsRfdWlClientStatDetailRxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxPps.setStatus("current")
_WingStatsRfdWlClientStatDetailTotalPps_Type = Unsigned32
_WingStatsRfdWlClientStatDetailTotalPps_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTotalPps = _WingStatsRfdWlClientStatDetailTotalPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 40),
    _WingStatsRfdWlClientStatDetailTotalPps_Type()
)
wingStatsRfdWlClientStatDetailTotalPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTotalPps.setStatus("current")
_WingStatsRfdWlClientStatDetailTxMgmtPkts_Type = Counter64
_WingStatsRfdWlClientStatDetailTxMgmtPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxMgmtPkts = _WingStatsRfdWlClientStatDetailTxMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 41),
    _WingStatsRfdWlClientStatDetailTxMgmtPkts_Type()
)
wingStatsRfdWlClientStatDetailTxMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxMgmtPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailRxMgmtPkts_Type = Counter64
_WingStatsRfdWlClientStatDetailRxMgmtPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxMgmtPkts = _WingStatsRfdWlClientStatDetailRxMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 42),
    _WingStatsRfdWlClientStatDetailRxMgmtPkts_Type()
)
wingStatsRfdWlClientStatDetailRxMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxMgmtPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailTotalMgmtPkts_Type = Counter64
_WingStatsRfdWlClientStatDetailTotalMgmtPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTotalMgmtPkts = _WingStatsRfdWlClientStatDetailTotalMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 43),
    _WingStatsRfdWlClientStatDetailTotalMgmtPkts_Type()
)
wingStatsRfdWlClientStatDetailTotalMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTotalMgmtPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailTxRetries_Type = Counter64
_WingStatsRfdWlClientStatDetailTxRetries_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxRetries = _WingStatsRfdWlClientStatDetailTxRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 44),
    _WingStatsRfdWlClientStatDetailTxRetries_Type()
)
wingStatsRfdWlClientStatDetailTxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxRetries.setStatus("current")
_WingStatsRfdWlClientStatDetailRxProbes_Type = Counter32
_WingStatsRfdWlClientStatDetailRxProbes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxProbes = _WingStatsRfdWlClientStatDetailRxProbes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 45),
    _WingStatsRfdWlClientStatDetailRxProbes_Type()
)
wingStatsRfdWlClientStatDetailRxProbes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxProbes.setStatus("current")
_WingStatsRfdWlClientStatDetailRxActions_Type = Counter32
_WingStatsRfdWlClientStatDetailRxActions_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxActions = _WingStatsRfdWlClientStatDetailRxActions_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 46),
    _WingStatsRfdWlClientStatDetailRxActions_Type()
)
wingStatsRfdWlClientStatDetailRxActions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxActions.setStatus("current")
_WingStatsRfdWlClientStatDetailRxPsPoll_Type = Counter32
_WingStatsRfdWlClientStatDetailRxPsPoll_Object = MibTableColumn
wingStatsRfdWlClientStatDetailRxPsPoll = _WingStatsRfdWlClientStatDetailRxPsPoll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 47),
    _WingStatsRfdWlClientStatDetailRxPsPoll_Type()
)
wingStatsRfdWlClientStatDetailRxPsPoll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailRxPsPoll.setStatus("current")
_WingStatsRfdWlClientStatDetailLastCallStatus_Type = DisplayString
_WingStatsRfdWlClientStatDetailLastCallStatus_Object = MibTableColumn
wingStatsRfdWlClientStatDetailLastCallStatus = _WingStatsRfdWlClientStatDetailLastCallStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 48),
    _WingStatsRfdWlClientStatDetailLastCallStatus_Type()
)
wingStatsRfdWlClientStatDetailLastCallStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailLastCallStatus.setStatus("current")
_WingStatsRfdWlClientStatDetailCallTotal_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallTotal_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallTotal = _WingStatsRfdWlClientStatDetailCallTotal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 49),
    _WingStatsRfdWlClientStatDetailCallTotal_Type()
)
wingStatsRfdWlClientStatDetailCallTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallTotal.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatOk_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatOk_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatOk = _WingStatsRfdWlClientStatDetailCallStatOk_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 50),
    _WingStatsRfdWlClientStatDetailCallStatOk_Type()
)
wingStatsRfdWlClientStatDetailCallStatOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatOk.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatBusy_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatBusy_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatBusy = _WingStatsRfdWlClientStatDetailCallStatBusy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 51),
    _WingStatsRfdWlClientStatDetailCallStatBusy_Type()
)
wingStatsRfdWlClientStatDetailCallStatBusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatBusy.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatNoAnswer_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatNoAnswer_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatNoAnswer = _WingStatsRfdWlClientStatDetailCallStatNoAnswer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 52),
    _WingStatsRfdWlClientStatDetailCallStatNoAnswer_Type()
)
wingStatsRfdWlClientStatDetailCallStatNoAnswer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatNoAnswer.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatUnknownDest_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatUnknownDest_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatUnknownDest = _WingStatsRfdWlClientStatDetailCallStatUnknownDest_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 53),
    _WingStatsRfdWlClientStatDetailCallStatUnknownDest_Type()
)
wingStatsRfdWlClientStatDetailCallStatUnknownDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatUnknownDest.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatAdmDenied_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatAdmDenied_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatAdmDenied = _WingStatsRfdWlClientStatDetailCallStatAdmDenied_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 54),
    _WingStatsRfdWlClientStatDetailCallStatAdmDenied_Type()
)
wingStatsRfdWlClientStatDetailCallStatAdmDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatAdmDenied.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatDeclined_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatDeclined_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatDeclined = _WingStatsRfdWlClientStatDetailCallStatDeclined_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 55),
    _WingStatsRfdWlClientStatDetailCallStatDeclined_Type()
)
wingStatsRfdWlClientStatDetailCallStatDeclined.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatDeclined.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatUnauth_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatUnauth_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatUnauth = _WingStatsRfdWlClientStatDetailCallStatUnauth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 56),
    _WingStatsRfdWlClientStatDetailCallStatUnauth_Type()
)
wingStatsRfdWlClientStatDetailCallStatUnauth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatUnauth.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatUnsuppMedia_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatUnsuppMedia_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatUnsuppMedia = _WingStatsRfdWlClientStatDetailCallStatUnsuppMedia_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 57),
    _WingStatsRfdWlClientStatDetailCallStatUnsuppMedia_Type()
)
wingStatsRfdWlClientStatDetailCallStatUnsuppMedia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatUnsuppMedia.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatTempUnavail_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatTempUnavail_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatTempUnavail = _WingStatsRfdWlClientStatDetailCallStatTempUnavail_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 58),
    _WingStatsRfdWlClientStatDetailCallStatTempUnavail_Type()
)
wingStatsRfdWlClientStatDetailCallStatTempUnavail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatTempUnavail.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatNoForkAllowed_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatNoForkAllowed_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatNoForkAllowed = _WingStatsRfdWlClientStatDetailCallStatNoForkAllowed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 59),
    _WingStatsRfdWlClientStatDetailCallStatNoForkAllowed_Type()
)
wingStatsRfdWlClientStatDetailCallStatNoForkAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatNoForkAllowed.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatSessInactive_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatSessInactive_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatSessInactive = _WingStatsRfdWlClientStatDetailCallStatSessInactive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 60),
    _WingStatsRfdWlClientStatDetailCallStatSessInactive_Type()
)
wingStatsRfdWlClientStatDetailCallStatSessInactive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatSessInactive.setStatus("current")
_WingStatsRfdWlClientStatDetailCallStatOther_Type = Unsigned32
_WingStatsRfdWlClientStatDetailCallStatOther_Object = MibTableColumn
wingStatsRfdWlClientStatDetailCallStatOther = _WingStatsRfdWlClientStatDetailCallStatOther_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 61),
    _WingStatsRfdWlClientStatDetailCallStatOther_Type()
)
wingStatsRfdWlClientStatDetailCallStatOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailCallStatOther.setStatus("current")
_WingStatsRfdWlClientStatDetailTotalBytes_Type = Counter64
_WingStatsRfdWlClientStatDetailTotalBytes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTotalBytes = _WingStatsRfdWlClientStatDetailTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 62),
    _WingStatsRfdWlClientStatDetailTotalBytes_Type()
)
wingStatsRfdWlClientStatDetailTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTotalBytes.setStatus("current")
_WingStatsRfdWlClientStatDetailTotalPkts_Type = Counter32
_WingStatsRfdWlClientStatDetailTotalPkts_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTotalPkts = _WingStatsRfdWlClientStatDetailTotalPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 63),
    _WingStatsRfdWlClientStatDetailTotalPkts_Type()
)
wingStatsRfdWlClientStatDetailTotalPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTotalPkts.setStatus("current")
_WingStatsRfdWlClientStatDetailTxRetriedBytes_Type = Counter64
_WingStatsRfdWlClientStatDetailTxRetriedBytes_Object = MibTableColumn
wingStatsRfdWlClientStatDetailTxRetriedBytes = _WingStatsRfdWlClientStatDetailTxRetriedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 6, 1, 1, 64),
    _WingStatsRfdWlClientStatDetailTxRetriedBytes_Type()
)
wingStatsRfdWlClientStatDetailTxRetriedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlClientStatDetailTxRetriedBytes.setStatus("current")
_WingStatsRfdWlRadio_ObjectIdentity = ObjectIdentity
wingStatsRfdWlRadio = _WingStatsRfdWlRadio_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8)
)
_WingStatsRfdWlRadioTable_Object = MibTable
wingStatsRfdWlRadioTable = _WingStatsRfdWlRadioTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioTable.setStatus("current")
_WingStatsRfdWlRadioEntry_Object = MibTableRow
wingStatsRfdWlRadioEntry = _WingStatsRfdWlRadioEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1)
)
wingStatsRfdWlRadioEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlRadioId"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioEntry.setStatus("current")
_WingStatsRfdWlRadioId_Type = WingIdentifier
_WingStatsRfdWlRadioId_Object = MibTableColumn
wingStatsRfdWlRadioId = _WingStatsRfdWlRadioId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 1),
    _WingStatsRfdWlRadioId_Type()
)
wingStatsRfdWlRadioId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioId.setStatus("current")
_WingStatsRfdWlRadioDeviceMac_Type = MacAddress
_WingStatsRfdWlRadioDeviceMac_Object = MibTableColumn
wingStatsRfdWlRadioDeviceMac = _WingStatsRfdWlRadioDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 2),
    _WingStatsRfdWlRadioDeviceMac_Type()
)
wingStatsRfdWlRadioDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDeviceMac.setStatus("current")
_WingStatsRfdWlRadioAlias_Type = DisplayString
_WingStatsRfdWlRadioAlias_Object = MibTableColumn
wingStatsRfdWlRadioAlias = _WingStatsRfdWlRadioAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 3),
    _WingStatsRfdWlRadioAlias_Type()
)
wingStatsRfdWlRadioAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioAlias.setStatus("current")
_WingStatsRfdWlRadioMac_Type = MacAddress
_WingStatsRfdWlRadioMac_Object = MibTableColumn
wingStatsRfdWlRadioMac = _WingStatsRfdWlRadioMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 4),
    _WingStatsRfdWlRadioMac_Type()
)
wingStatsRfdWlRadioMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioMac.setStatus("current")
_WingStatsRfdWlRadioType_Type = DisplayString
_WingStatsRfdWlRadioType_Object = MibTableColumn
wingStatsRfdWlRadioType = _WingStatsRfdWlRadioType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 5),
    _WingStatsRfdWlRadioType_Type()
)
wingStatsRfdWlRadioType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioType.setStatus("current")
_WingStatsRfdWlRadioHostname_Type = DisplayString
_WingStatsRfdWlRadioHostname_Object = MibTableColumn
wingStatsRfdWlRadioHostname = _WingStatsRfdWlRadioHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 6),
    _WingStatsRfdWlRadioHostname_Type()
)
wingStatsRfdWlRadioHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioHostname.setStatus("current")
_WingStatsRfdWlRadioRfdName_Type = DisplayString
_WingStatsRfdWlRadioRfdName_Object = MibTableColumn
wingStatsRfdWlRadioRfdName = _WingStatsRfdWlRadioRfdName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 7),
    _WingStatsRfdWlRadioRfdName_Type()
)
wingStatsRfdWlRadioRfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioRfdName.setStatus("current")
_WingStatsRfdWlRadioLocation_Type = DisplayString
_WingStatsRfdWlRadioLocation_Object = MibTableColumn
wingStatsRfdWlRadioLocation = _WingStatsRfdWlRadioLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 8),
    _WingStatsRfdWlRadioLocation_Type()
)
wingStatsRfdWlRadioLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioLocation.setStatus("current")
_WingStatsRfdWlRadioState_Type = DisplayString
_WingStatsRfdWlRadioState_Object = MibTableColumn
wingStatsRfdWlRadioState = _WingStatsRfdWlRadioState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 9),
    _WingStatsRfdWlRadioState_Type()
)
wingStatsRfdWlRadioState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioState.setStatus("current")
_WingStatsRfdWlRadioCurChannel_Type = DisplayString
_WingStatsRfdWlRadioCurChannel_Object = MibTableColumn
wingStatsRfdWlRadioCurChannel = _WingStatsRfdWlRadioCurChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 10),
    _WingStatsRfdWlRadioCurChannel_Type()
)
wingStatsRfdWlRadioCurChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioCurChannel.setStatus("current")
_WingStatsRfdWlRadioConfigChannel_Type = DisplayString
_WingStatsRfdWlRadioConfigChannel_Object = MibTableColumn
wingStatsRfdWlRadioConfigChannel = _WingStatsRfdWlRadioConfigChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 11),
    _WingStatsRfdWlRadioConfigChannel_Type()
)
wingStatsRfdWlRadioConfigChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioConfigChannel.setStatus("current")
_WingStatsRfdWlRadioCurPower_Type = Unsigned32
_WingStatsRfdWlRadioCurPower_Object = MibTableColumn
wingStatsRfdWlRadioCurPower = _WingStatsRfdWlRadioCurPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 12),
    _WingStatsRfdWlRadioCurPower_Type()
)
wingStatsRfdWlRadioCurPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioCurPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioCurPower.setUnits("dBm")
_WingStatsRfdWlRadioConfigPower_Type = DisplayString
_WingStatsRfdWlRadioConfigPower_Object = MibTableColumn
wingStatsRfdWlRadioConfigPower = _WingStatsRfdWlRadioConfigPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 13),
    _WingStatsRfdWlRadioConfigPower_Type()
)
wingStatsRfdWlRadioConfigPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioConfigPower.setStatus("current")
_WingStatsRfdWlRadioMaxUserRate_Type = Unsigned32
_WingStatsRfdWlRadioMaxUserRate_Object = MibTableColumn
wingStatsRfdWlRadioMaxUserRate = _WingStatsRfdWlRadioMaxUserRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 14),
    _WingStatsRfdWlRadioMaxUserRate_Type()
)
wingStatsRfdWlRadioMaxUserRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioMaxUserRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioMaxUserRate.setUnits("kbps")
_WingStatsRfdWlRadioNumClient_Type = Unsigned32
_WingStatsRfdWlRadioNumClient_Object = MibTableColumn
wingStatsRfdWlRadioNumClient = _WingStatsRfdWlRadioNumClient_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 15),
    _WingStatsRfdWlRadioNumClient_Type()
)
wingStatsRfdWlRadioNumClient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioNumClient.setStatus("current")
_WingStatsRfdWlRadioProtocol_Type = Unsigned32
_WingStatsRfdWlRadioProtocol_Object = MibTableColumn
wingStatsRfdWlRadioProtocol = _WingStatsRfdWlRadioProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 8, 1, 1, 16),
    _WingStatsRfdWlRadioProtocol_Type()
)
wingStatsRfdWlRadioProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioProtocol.setStatus("current")
_WingStatsRfdWlRadioStat_ObjectIdentity = ObjectIdentity
wingStatsRfdWlRadioStat = _WingStatsRfdWlRadioStat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9)
)
_WingStatsRfdWlRadioStatTable_Object = MibTable
wingStatsRfdWlRadioStatTable = _WingStatsRfdWlRadioStatTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTable.setStatus("current")
_WingStatsRfdWlRadioStatEntry_Object = MibTableRow
wingStatsRfdWlRadioStatEntry = _WingStatsRfdWlRadioStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1)
)
wingStatsRfdWlRadioStatEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlRadioStatId"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatEntry.setStatus("current")
_WingStatsRfdWlRadioStatId_Type = WingIdentifier
_WingStatsRfdWlRadioStatId_Object = MibTableColumn
wingStatsRfdWlRadioStatId = _WingStatsRfdWlRadioStatId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 1),
    _WingStatsRfdWlRadioStatId_Type()
)
wingStatsRfdWlRadioStatId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatId.setStatus("current")
_WingStatsRfdWlRadioStatDeviceMac_Type = MacAddress
_WingStatsRfdWlRadioStatDeviceMac_Object = MibTableColumn
wingStatsRfdWlRadioStatDeviceMac = _WingStatsRfdWlRadioStatDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 2),
    _WingStatsRfdWlRadioStatDeviceMac_Type()
)
wingStatsRfdWlRadioStatDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDeviceMac.setStatus("current")
_WingStatsRfdWlRadioStatAlias_Type = DisplayString
_WingStatsRfdWlRadioStatAlias_Object = MibTableColumn
wingStatsRfdWlRadioStatAlias = _WingStatsRfdWlRadioStatAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 3),
    _WingStatsRfdWlRadioStatAlias_Type()
)
wingStatsRfdWlRadioStatAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatAlias.setStatus("current")
_WingStatsRfdWlRadioStatMac_Type = MacAddress
_WingStatsRfdWlRadioStatMac_Object = MibTableColumn
wingStatsRfdWlRadioStatMac = _WingStatsRfdWlRadioStatMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 4),
    _WingStatsRfdWlRadioStatMac_Type()
)
wingStatsRfdWlRadioStatMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatMac.setStatus("current")
_WingStatsRfdWlRadioStatType_Type = DisplayString
_WingStatsRfdWlRadioStatType_Object = MibTableColumn
wingStatsRfdWlRadioStatType = _WingStatsRfdWlRadioStatType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 5),
    _WingStatsRfdWlRadioStatType_Type()
)
wingStatsRfdWlRadioStatType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatType.setStatus("current")
_WingStatsRfdWlRadioStatTxBytes_Type = Counter64
_WingStatsRfdWlRadioStatTxBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatTxBytes = _WingStatsRfdWlRadioStatTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 6),
    _WingStatsRfdWlRadioStatTxBytes_Type()
)
wingStatsRfdWlRadioStatTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxBytes.setStatus("current")
_WingStatsRfdWlRadioStatRxBytes_Type = Counter64
_WingStatsRfdWlRadioStatRxBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatRxBytes = _WingStatsRfdWlRadioStatRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 7),
    _WingStatsRfdWlRadioStatRxBytes_Type()
)
wingStatsRfdWlRadioStatRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatRxBytes.setStatus("current")
_WingStatsRfdWlRadioStatTxPkts_Type = Counter32
_WingStatsRfdWlRadioStatTxPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatTxPkts = _WingStatsRfdWlRadioStatTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 8),
    _WingStatsRfdWlRadioStatTxPkts_Type()
)
wingStatsRfdWlRadioStatTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxPkts.setStatus("current")
_WingStatsRfdWlRadioStatRxPkts_Type = Counter32
_WingStatsRfdWlRadioStatRxPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatRxPkts = _WingStatsRfdWlRadioStatRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 9),
    _WingStatsRfdWlRadioStatRxPkts_Type()
)
wingStatsRfdWlRadioStatRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatRxPkts.setStatus("current")
_WingStatsRfdWlRadioStatTxDropped_Type = Counter32
_WingStatsRfdWlRadioStatTxDropped_Object = MibTableColumn
wingStatsRfdWlRadioStatTxDropped = _WingStatsRfdWlRadioStatTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 10),
    _WingStatsRfdWlRadioStatTxDropped_Type()
)
wingStatsRfdWlRadioStatTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxDropped.setStatus("current")
_WingStatsRfdWlRadioStatRxErrors_Type = Counter32
_WingStatsRfdWlRadioStatRxErrors_Object = MibTableColumn
wingStatsRfdWlRadioStatRxErrors = _WingStatsRfdWlRadioStatRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 11),
    _WingStatsRfdWlRadioStatRxErrors_Type()
)
wingStatsRfdWlRadioStatRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatRxErrors.setStatus("current")
_WingStatsRfdWlRadioStatTIndex_Type = Integer32
_WingStatsRfdWlRadioStatTIndex_Object = MibTableColumn
wingStatsRfdWlRadioStatTIndex = _WingStatsRfdWlRadioStatTIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 12),
    _WingStatsRfdWlRadioStatTIndex_Type()
)
wingStatsRfdWlRadioStatTIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTIndex.setStatus("current")
_WingStatsRfdWlRadioStatTxBps_Type = Unsigned32
_WingStatsRfdWlRadioStatTxBps_Object = MibTableColumn
wingStatsRfdWlRadioStatTxBps = _WingStatsRfdWlRadioStatTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 13),
    _WingStatsRfdWlRadioStatTxBps_Type()
)
wingStatsRfdWlRadioStatTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxBps.setUnits("kbps")
_WingStatsRfdWlRadioStatRxBps_Type = Unsigned32
_WingStatsRfdWlRadioStatRxBps_Object = MibTableColumn
wingStatsRfdWlRadioStatRxBps = _WingStatsRfdWlRadioStatRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 14),
    _WingStatsRfdWlRadioStatRxBps_Type()
)
wingStatsRfdWlRadioStatRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatRxBps.setUnits("kbps")
_WingStatsRfdWlRadioStatSignal_Type = Integer32
_WingStatsRfdWlRadioStatSignal_Object = MibTableColumn
wingStatsRfdWlRadioStatSignal = _WingStatsRfdWlRadioStatSignal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 15),
    _WingStatsRfdWlRadioStatSignal_Type()
)
wingStatsRfdWlRadioStatSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatSignal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatSignal.setUnits("dbm")
_WingStatsRfdWlRadioStatNoise_Type = Integer32
_WingStatsRfdWlRadioStatNoise_Object = MibTableColumn
wingStatsRfdWlRadioStatNoise = _WingStatsRfdWlRadioStatNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 16),
    _WingStatsRfdWlRadioStatNoise_Type()
)
wingStatsRfdWlRadioStatNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNoise.setUnits("dbm")
_WingStatsRfdWlRadioStatSnr_Type = Integer32
_WingStatsRfdWlRadioStatSnr_Object = MibTableColumn
wingStatsRfdWlRadioStatSnr = _WingStatsRfdWlRadioStatSnr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 17),
    _WingStatsRfdWlRadioStatSnr_Type()
)
wingStatsRfdWlRadioStatSnr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatSnr.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatSnr.setUnits("db")
_WingStatsRfdWlRadioStatTxRate_Type = Unsigned32
_WingStatsRfdWlRadioStatTxRate_Object = MibTableColumn
wingStatsRfdWlRadioStatTxRate = _WingStatsRfdWlRadioStatTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 18),
    _WingStatsRfdWlRadioStatTxRate_Type()
)
wingStatsRfdWlRadioStatTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxRate.setUnits("Mbps")
_WingStatsRfdWlRadioStatRxRate_Type = Unsigned32
_WingStatsRfdWlRadioStatRxRate_Object = MibTableColumn
wingStatsRfdWlRadioStatRxRate = _WingStatsRfdWlRadioStatRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 19),
    _WingStatsRfdWlRadioStatRxRate_Type()
)
wingStatsRfdWlRadioStatRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatRxRate.setUnits("Mbps")
_WingStatsRfdWlRadioStatErrorRate_Type = Unsigned32
_WingStatsRfdWlRadioStatErrorRate_Object = MibTableColumn
wingStatsRfdWlRadioStatErrorRate = _WingStatsRfdWlRadioStatErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 20),
    _WingStatsRfdWlRadioStatErrorRate_Type()
)
wingStatsRfdWlRadioStatErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatErrorRate.setStatus("current")
_WingStatsRfdWlRadioStatQIndex_Type = Integer32
_WingStatsRfdWlRadioStatQIndex_Object = MibTableColumn
wingStatsRfdWlRadioStatQIndex = _WingStatsRfdWlRadioStatQIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 21),
    _WingStatsRfdWlRadioStatQIndex_Type()
)
wingStatsRfdWlRadioStatQIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatQIndex.setStatus("current")
_WingStatsRfdWlRadioStatNumClients_Type = Unsigned32
_WingStatsRfdWlRadioStatNumClients_Object = MibTableColumn
wingStatsRfdWlRadioStatNumClients = _WingStatsRfdWlRadioStatNumClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 22),
    _WingStatsRfdWlRadioStatNumClients_Type()
)
wingStatsRfdWlRadioStatNumClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNumClients.setStatus("current")
_WingStatsRfdWlRadioStatNumBClients_Type = Unsigned32
_WingStatsRfdWlRadioStatNumBClients_Object = MibTableColumn
wingStatsRfdWlRadioStatNumBClients = _WingStatsRfdWlRadioStatNumBClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 23),
    _WingStatsRfdWlRadioStatNumBClients_Type()
)
wingStatsRfdWlRadioStatNumBClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNumBClients.setStatus("current")
_WingStatsRfdWlRadioStatNumBgClients_Type = Unsigned32
_WingStatsRfdWlRadioStatNumBgClients_Object = MibTableColumn
wingStatsRfdWlRadioStatNumBgClients = _WingStatsRfdWlRadioStatNumBgClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 24),
    _WingStatsRfdWlRadioStatNumBgClients_Type()
)
wingStatsRfdWlRadioStatNumBgClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNumBgClients.setStatus("current")
_WingStatsRfdWlRadioStatNumBgnClients_Type = Unsigned32
_WingStatsRfdWlRadioStatNumBgnClients_Object = MibTableColumn
wingStatsRfdWlRadioStatNumBgnClients = _WingStatsRfdWlRadioStatNumBgnClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 25),
    _WingStatsRfdWlRadioStatNumBgnClients_Type()
)
wingStatsRfdWlRadioStatNumBgnClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNumBgnClients.setStatus("current")
_WingStatsRfdWlRadioStatNumAClients_Type = Unsigned32
_WingStatsRfdWlRadioStatNumAClients_Object = MibTableColumn
wingStatsRfdWlRadioStatNumAClients = _WingStatsRfdWlRadioStatNumAClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 26),
    _WingStatsRfdWlRadioStatNumAClients_Type()
)
wingStatsRfdWlRadioStatNumAClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNumAClients.setStatus("current")
_WingStatsRfdWlRadioStatNumAnClients_Type = Unsigned32
_WingStatsRfdWlRadioStatNumAnClients_Object = MibTableColumn
wingStatsRfdWlRadioStatNumAnClients = _WingStatsRfdWlRadioStatNumAnClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 27),
    _WingStatsRfdWlRadioStatNumAnClients_Type()
)
wingStatsRfdWlRadioStatNumAnClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatNumAnClients.setStatus("current")
_WingStatsRfdWlRadioStatMediumErrorRate_Type = Unsigned32
_WingStatsRfdWlRadioStatMediumErrorRate_Object = MibTableColumn
wingStatsRfdWlRadioStatMediumErrorRate = _WingStatsRfdWlRadioStatMediumErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 28),
    _WingStatsRfdWlRadioStatMediumErrorRate_Type()
)
wingStatsRfdWlRadioStatMediumErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatMediumErrorRate.setStatus("current")
_WingStatsRfdWlRadioStatTxRetries_Type = Counter64
_WingStatsRfdWlRadioStatTxRetries_Object = MibTableColumn
wingStatsRfdWlRadioStatTxRetries = _WingStatsRfdWlRadioStatTxRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 29),
    _WingStatsRfdWlRadioStatTxRetries_Type()
)
wingStatsRfdWlRadioStatTxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxRetries.setStatus("current")
_WingStatsRfdWlRadioStatTxRetriedBytes_Type = Counter64
_WingStatsRfdWlRadioStatTxRetriedBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatTxRetriedBytes = _WingStatsRfdWlRadioStatTxRetriedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 9, 1, 1, 30),
    _WingStatsRfdWlRadioStatTxRetriedBytes_Type()
)
wingStatsRfdWlRadioStatTxRetriedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatTxRetriedBytes.setStatus("current")
_WingStatsRfdWlRadioDetail_ObjectIdentity = ObjectIdentity
wingStatsRfdWlRadioDetail = _WingStatsRfdWlRadioDetail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10)
)
_WingStatsRfdWlRadioDetailTable_Object = MibTable
wingStatsRfdWlRadioDetailTable = _WingStatsRfdWlRadioDetailTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailTable.setStatus("current")
_WingStatsRfdWlRadioDetailEntry_Object = MibTableRow
wingStatsRfdWlRadioDetailEntry = _WingStatsRfdWlRadioDetailEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1)
)
wingStatsRfdWlRadioDetailEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlRadioDetailId"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailEntry.setStatus("current")
_WingStatsRfdWlRadioDetailId_Type = WingIdentifier
_WingStatsRfdWlRadioDetailId_Object = MibTableColumn
wingStatsRfdWlRadioDetailId = _WingStatsRfdWlRadioDetailId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 1),
    _WingStatsRfdWlRadioDetailId_Type()
)
wingStatsRfdWlRadioDetailId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailId.setStatus("current")
_WingStatsRfdWlRadioDetailDeviceMac_Type = MacAddress
_WingStatsRfdWlRadioDetailDeviceMac_Object = MibTableColumn
wingStatsRfdWlRadioDetailDeviceMac = _WingStatsRfdWlRadioDetailDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 2),
    _WingStatsRfdWlRadioDetailDeviceMac_Type()
)
wingStatsRfdWlRadioDetailDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailDeviceMac.setStatus("current")
_WingStatsRfdWlRadioDetailAlias_Type = DisplayString
_WingStatsRfdWlRadioDetailAlias_Object = MibTableColumn
wingStatsRfdWlRadioDetailAlias = _WingStatsRfdWlRadioDetailAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 3),
    _WingStatsRfdWlRadioDetailAlias_Type()
)
wingStatsRfdWlRadioDetailAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailAlias.setStatus("current")
_WingStatsRfdWlRadioDetailMac_Type = MacAddress
_WingStatsRfdWlRadioDetailMac_Object = MibTableColumn
wingStatsRfdWlRadioDetailMac = _WingStatsRfdWlRadioDetailMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 4),
    _WingStatsRfdWlRadioDetailMac_Type()
)
wingStatsRfdWlRadioDetailMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailMac.setStatus("current")
_WingStatsRfdWlRadioDetailType_Type = DisplayString
_WingStatsRfdWlRadioDetailType_Object = MibTableColumn
wingStatsRfdWlRadioDetailType = _WingStatsRfdWlRadioDetailType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 5),
    _WingStatsRfdWlRadioDetailType_Type()
)
wingStatsRfdWlRadioDetailType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailType.setStatus("current")
_WingStatsRfdWlRadioDetailHostname_Type = DisplayString
_WingStatsRfdWlRadioDetailHostname_Object = MibTableColumn
wingStatsRfdWlRadioDetailHostname = _WingStatsRfdWlRadioDetailHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 6),
    _WingStatsRfdWlRadioDetailHostname_Type()
)
wingStatsRfdWlRadioDetailHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailHostname.setStatus("current")
_WingStatsRfdWlRadioDetailRfdName_Type = DisplayString
_WingStatsRfdWlRadioDetailRfdName_Object = MibTableColumn
wingStatsRfdWlRadioDetailRfdName = _WingStatsRfdWlRadioDetailRfdName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 7),
    _WingStatsRfdWlRadioDetailRfdName_Type()
)
wingStatsRfdWlRadioDetailRfdName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailRfdName.setStatus("current")
_WingStatsRfdWlRadioDetailLocation_Type = DisplayString
_WingStatsRfdWlRadioDetailLocation_Object = MibTableColumn
wingStatsRfdWlRadioDetailLocation = _WingStatsRfdWlRadioDetailLocation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 8),
    _WingStatsRfdWlRadioDetailLocation_Type()
)
wingStatsRfdWlRadioDetailLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailLocation.setStatus("current")
_WingStatsRfdWlRadioDetailState_Type = DisplayString
_WingStatsRfdWlRadioDetailState_Object = MibTableColumn
wingStatsRfdWlRadioDetailState = _WingStatsRfdWlRadioDetailState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 9),
    _WingStatsRfdWlRadioDetailState_Type()
)
wingStatsRfdWlRadioDetailState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailState.setStatus("current")
_WingStatsRfdWlRadioDetailCurChannel_Type = DisplayString
_WingStatsRfdWlRadioDetailCurChannel_Object = MibTableColumn
wingStatsRfdWlRadioDetailCurChannel = _WingStatsRfdWlRadioDetailCurChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 10),
    _WingStatsRfdWlRadioDetailCurChannel_Type()
)
wingStatsRfdWlRadioDetailCurChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailCurChannel.setStatus("current")
_WingStatsRfdWlRadioDetailConfigChannel_Type = DisplayString
_WingStatsRfdWlRadioDetailConfigChannel_Object = MibTableColumn
wingStatsRfdWlRadioDetailConfigChannel = _WingStatsRfdWlRadioDetailConfigChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 11),
    _WingStatsRfdWlRadioDetailConfigChannel_Type()
)
wingStatsRfdWlRadioDetailConfigChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailConfigChannel.setStatus("current")
_WingStatsRfdWlRadioDetailCurPower_Type = Unsigned32
_WingStatsRfdWlRadioDetailCurPower_Object = MibTableColumn
wingStatsRfdWlRadioDetailCurPower = _WingStatsRfdWlRadioDetailCurPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 12),
    _WingStatsRfdWlRadioDetailCurPower_Type()
)
wingStatsRfdWlRadioDetailCurPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailCurPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailCurPower.setUnits("dBm")
_WingStatsRfdWlRadioDetailConfigPower_Type = DisplayString
_WingStatsRfdWlRadioDetailConfigPower_Object = MibTableColumn
wingStatsRfdWlRadioDetailConfigPower = _WingStatsRfdWlRadioDetailConfigPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 13),
    _WingStatsRfdWlRadioDetailConfigPower_Type()
)
wingStatsRfdWlRadioDetailConfigPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailConfigPower.setStatus("current")
_WingStatsRfdWlRadioDetailMaxUserRate_Type = Unsigned32
_WingStatsRfdWlRadioDetailMaxUserRate_Object = MibTableColumn
wingStatsRfdWlRadioDetailMaxUserRate = _WingStatsRfdWlRadioDetailMaxUserRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 14),
    _WingStatsRfdWlRadioDetailMaxUserRate_Type()
)
wingStatsRfdWlRadioDetailMaxUserRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailMaxUserRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailMaxUserRate.setUnits("kbps")
_WingStatsRfdWlRadioDetailNumClient_Type = Unsigned32
_WingStatsRfdWlRadioDetailNumClient_Object = MibTableColumn
wingStatsRfdWlRadioDetailNumClient = _WingStatsRfdWlRadioDetailNumClient_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 15),
    _WingStatsRfdWlRadioDetailNumClient_Type()
)
wingStatsRfdWlRadioDetailNumClient.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailNumClient.setStatus("current")
_WingStatsRfdWlRadioDetailSpectrumMgmt_Type = TruthValue
_WingStatsRfdWlRadioDetailSpectrumMgmt_Object = MibTableColumn
wingStatsRfdWlRadioDetailSpectrumMgmt = _WingStatsRfdWlRadioDetailSpectrumMgmt_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 16),
    _WingStatsRfdWlRadioDetailSpectrumMgmt_Type()
)
wingStatsRfdWlRadioDetailSpectrumMgmt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailSpectrumMgmt.setStatus("current")
_WingStatsRfdWlRadioDetailShortPreamble_Type = TruthValue
_WingStatsRfdWlRadioDetailShortPreamble_Object = MibTableColumn
wingStatsRfdWlRadioDetailShortPreamble = _WingStatsRfdWlRadioDetailShortPreamble_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 17),
    _WingStatsRfdWlRadioDetailShortPreamble_Type()
)
wingStatsRfdWlRadioDetailShortPreamble.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailShortPreamble.setStatus("current")
_WingStatsRfdWlRadioDetailNonErpPresent_Type = TruthValue
_WingStatsRfdWlRadioDetailNonErpPresent_Object = MibTableColumn
wingStatsRfdWlRadioDetailNonErpPresent = _WingStatsRfdWlRadioDetailNonErpPresent_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 18),
    _WingStatsRfdWlRadioDetailNonErpPresent_Type()
)
wingStatsRfdWlRadioDetailNonErpPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailNonErpPresent.setStatus("current")
_WingStatsRfdWlRadioDetailErpProtectionOn_Type = TruthValue
_WingStatsRfdWlRadioDetailErpProtectionOn_Object = MibTableColumn
wingStatsRfdWlRadioDetailErpProtectionOn = _WingStatsRfdWlRadioDetailErpProtectionOn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 19),
    _WingStatsRfdWlRadioDetailErpProtectionOn_Type()
)
wingStatsRfdWlRadioDetailErpProtectionOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailErpProtectionOn.setStatus("current")
_WingStatsRfdWlRadioDetailNonErpDetected_Type = TruthValue
_WingStatsRfdWlRadioDetailNonErpDetected_Object = MibTableColumn
wingStatsRfdWlRadioDetailNonErpDetected = _WingStatsRfdWlRadioDetailNonErpDetected_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 20),
    _WingStatsRfdWlRadioDetailNonErpDetected_Type()
)
wingStatsRfdWlRadioDetailNonErpDetected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailNonErpDetected.setStatus("current")
_WingStatsRfdWlRadioDetailHtProtectionOn_Type = TruthValue
_WingStatsRfdWlRadioDetailHtProtectionOn_Object = MibTableColumn
wingStatsRfdWlRadioDetailHtProtectionOn = _WingStatsRfdWlRadioDetailHtProtectionOn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 21),
    _WingStatsRfdWlRadioDetailHtProtectionOn_Type()
)
wingStatsRfdWlRadioDetailHtProtectionOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailHtProtectionOn.setStatus("current")
_WingStatsRfdWlRadioDetailHt20Present_Type = TruthValue
_WingStatsRfdWlRadioDetailHt20Present_Object = MibTableColumn
wingStatsRfdWlRadioDetailHt20Present = _WingStatsRfdWlRadioDetailHt20Present_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 22),
    _WingStatsRfdWlRadioDetailHt20Present_Type()
)
wingStatsRfdWlRadioDetailHt20Present.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailHt20Present.setStatus("current")
_WingStatsRfdWlRadioDetailNonHtDetected_Type = TruthValue
_WingStatsRfdWlRadioDetailNonHtDetected_Object = MibTableColumn
wingStatsRfdWlRadioDetailNonHtDetected = _WingStatsRfdWlRadioDetailNonHtDetected_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 23),
    _WingStatsRfdWlRadioDetailNonHtDetected_Type()
)
wingStatsRfdWlRadioDetailNonHtDetected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailNonHtDetected.setStatus("current")
_WingStatsRfdWlRadioDetailDualChannelOn_Type = TruthValue
_WingStatsRfdWlRadioDetailDualChannelOn_Object = MibTableColumn
wingStatsRfdWlRadioDetailDualChannelOn = _WingStatsRfdWlRadioDetailDualChannelOn_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 24),
    _WingStatsRfdWlRadioDetailDualChannelOn_Type()
)
wingStatsRfdWlRadioDetailDualChannelOn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailDualChannelOn.setStatus("current")
_WingStatsRfdWlRadioDetailTxAntennaUsed_Type = Unsigned32
_WingStatsRfdWlRadioDetailTxAntennaUsed_Object = MibTableColumn
wingStatsRfdWlRadioDetailTxAntennaUsed = _WingStatsRfdWlRadioDetailTxAntennaUsed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 25),
    _WingStatsRfdWlRadioDetailTxAntennaUsed_Type()
)
wingStatsRfdWlRadioDetailTxAntennaUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailTxAntennaUsed.setStatus("current")
_WingStatsRfdWlRadioDetailRxAntennaUsed_Type = Unsigned32
_WingStatsRfdWlRadioDetailRxAntennaUsed_Object = MibTableColumn
wingStatsRfdWlRadioDetailRxAntennaUsed = _WingStatsRfdWlRadioDetailRxAntennaUsed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 26),
    _WingStatsRfdWlRadioDetailRxAntennaUsed_Type()
)
wingStatsRfdWlRadioDetailRxAntennaUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailRxAntennaUsed.setStatus("current")
_WingStatsRfdWlRadioDetailMaxPhyRate_Type = Unsigned32
_WingStatsRfdWlRadioDetailMaxPhyRate_Object = MibTableColumn
wingStatsRfdWlRadioDetailMaxPhyRate = _WingStatsRfdWlRadioDetailMaxPhyRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 27),
    _WingStatsRfdWlRadioDetailMaxPhyRate_Type()
)
wingStatsRfdWlRadioDetailMaxPhyRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailMaxPhyRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailMaxPhyRate.setUnits("kbps")
_WingStatsRfdWlRadioDetailCurMcastStreams_Type = Unsigned32
_WingStatsRfdWlRadioDetailCurMcastStreams_Object = MibTableColumn
wingStatsRfdWlRadioDetailCurMcastStreams = _WingStatsRfdWlRadioDetailCurMcastStreams_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 28),
    _WingStatsRfdWlRadioDetailCurMcastStreams_Type()
)
wingStatsRfdWlRadioDetailCurMcastStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailCurMcastStreams.setStatus("current")
_WingStatsRfdWlRadioDetailMaxMcastStreams_Type = Unsigned32
_WingStatsRfdWlRadioDetailMaxMcastStreams_Object = MibTableColumn
wingStatsRfdWlRadioDetailMaxMcastStreams = _WingStatsRfdWlRadioDetailMaxMcastStreams_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 29),
    _WingStatsRfdWlRadioDetailMaxMcastStreams_Type()
)
wingStatsRfdWlRadioDetailMaxMcastStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailMaxMcastStreams.setStatus("current")
_WingStatsRfdWlRadioDetailMcastStreams_Type = DisplayString
_WingStatsRfdWlRadioDetailMcastStreams_Object = MibTableColumn
wingStatsRfdWlRadioDetailMcastStreams = _WingStatsRfdWlRadioDetailMcastStreams_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 30),
    _WingStatsRfdWlRadioDetailMcastStreams_Type()
)
wingStatsRfdWlRadioDetailMcastStreams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailMcastStreams.setStatus("current")
_WingStatsRfdWlRadioDetailLastError_Type = DisplayString
_WingStatsRfdWlRadioDetailLastError_Object = MibTableColumn
wingStatsRfdWlRadioDetailLastError = _WingStatsRfdWlRadioDetailLastError_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 1, 1, 31),
    _WingStatsRfdWlRadioDetailLastError_Type()
)
wingStatsRfdWlRadioDetailLastError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailLastError.setStatus("current")
_WingStatsRfdWlRadioDetailWlanMapTable_Object = MibTable
wingStatsRfdWlRadioDetailWlanMapTable = _WingStatsRfdWlRadioDetailWlanMapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 2)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailWlanMapTable.setStatus("current")
_WingStatsRfdWlRadioDetailWlanMapEntry_Object = MibTableRow
wingStatsRfdWlRadioDetailWlanMapEntry = _WingStatsRfdWlRadioDetailWlanMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 2, 1)
)
wingStatsRfdWlRadioDetailWlanMapEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlRadioDetailId"),
    (0, "WING-MIB", "wingStatsRfdWlRadioDetailWlanMapWlanName"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailWlanMapEntry.setStatus("current")
_WingStatsRfdWlRadioDetailWlanMapWlanName_Type = WingIdentifier
_WingStatsRfdWlRadioDetailWlanMapWlanName_Object = MibTableColumn
wingStatsRfdWlRadioDetailWlanMapWlanName = _WingStatsRfdWlRadioDetailWlanMapWlanName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 2, 1, 1),
    _WingStatsRfdWlRadioDetailWlanMapWlanName_Type()
)
wingStatsRfdWlRadioDetailWlanMapWlanName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailWlanMapWlanName.setStatus("current")
_WingStatsRfdWlRadioDetailWlanMapBssIndex_Type = Unsigned32
_WingStatsRfdWlRadioDetailWlanMapBssIndex_Object = MibTableColumn
wingStatsRfdWlRadioDetailWlanMapBssIndex = _WingStatsRfdWlRadioDetailWlanMapBssIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 2, 1, 2),
    _WingStatsRfdWlRadioDetailWlanMapBssIndex_Type()
)
wingStatsRfdWlRadioDetailWlanMapBssIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailWlanMapBssIndex.setStatus("current")
_WingStatsRfdWlRadioDetailWlanMapIsPrimary_Type = TruthValue
_WingStatsRfdWlRadioDetailWlanMapIsPrimary_Object = MibTableColumn
wingStatsRfdWlRadioDetailWlanMapIsPrimary = _WingStatsRfdWlRadioDetailWlanMapIsPrimary_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 2, 1, 3),
    _WingStatsRfdWlRadioDetailWlanMapIsPrimary_Type()
)
wingStatsRfdWlRadioDetailWlanMapIsPrimary.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailWlanMapIsPrimary.setStatus("current")
_WingStatsRfdWlRadioDetailBssMapTable_Object = MibTable
wingStatsRfdWlRadioDetailBssMapTable = _WingStatsRfdWlRadioDetailBssMapTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 3)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailBssMapTable.setStatus("current")
_WingStatsRfdWlRadioDetailBssMapEntry_Object = MibTableRow
wingStatsRfdWlRadioDetailBssMapEntry = _WingStatsRfdWlRadioDetailBssMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 3, 1)
)
wingStatsRfdWlRadioDetailBssMapEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlRadioDetailId"),
    (0, "WING-MIB", "wingStatsRfdWlRadioDetailBssMapBssIndex"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailBssMapEntry.setStatus("current")
_WingStatsRfdWlRadioDetailBssMapBssIndex_Type = WingIdentifier
_WingStatsRfdWlRadioDetailBssMapBssIndex_Object = MibTableColumn
wingStatsRfdWlRadioDetailBssMapBssIndex = _WingStatsRfdWlRadioDetailBssMapBssIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 3, 1, 1),
    _WingStatsRfdWlRadioDetailBssMapBssIndex_Type()
)
wingStatsRfdWlRadioDetailBssMapBssIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailBssMapBssIndex.setStatus("current")
_WingStatsRfdWlRadioDetailBssMapBasicRates_Type = DisplayString
_WingStatsRfdWlRadioDetailBssMapBasicRates_Object = MibTableColumn
wingStatsRfdWlRadioDetailBssMapBasicRates = _WingStatsRfdWlRadioDetailBssMapBasicRates_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 3, 1, 2),
    _WingStatsRfdWlRadioDetailBssMapBasicRates_Type()
)
wingStatsRfdWlRadioDetailBssMapBasicRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailBssMapBasicRates.setStatus("current")
_WingStatsRfdWlRadioDetailBssMapSupportedRates_Type = DisplayString
_WingStatsRfdWlRadioDetailBssMapSupportedRates_Object = MibTableColumn
wingStatsRfdWlRadioDetailBssMapSupportedRates = _WingStatsRfdWlRadioDetailBssMapSupportedRates_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 10, 3, 1, 3),
    _WingStatsRfdWlRadioDetailBssMapSupportedRates_Type()
)
wingStatsRfdWlRadioDetailBssMapSupportedRates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioDetailBssMapSupportedRates.setStatus("current")
_WingStatsRfdWlRadioStatDetail_ObjectIdentity = ObjectIdentity
wingStatsRfdWlRadioStatDetail = _WingStatsRfdWlRadioStatDetail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11)
)
_WingStatsRfdWlRadioStatDetailTable_Object = MibTable
wingStatsRfdWlRadioStatDetailTable = _WingStatsRfdWlRadioStatDetailTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTable.setStatus("current")
_WingStatsRfdWlRadioStatDetailEntry_Object = MibTableRow
wingStatsRfdWlRadioStatDetailEntry = _WingStatsRfdWlRadioStatDetailEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1)
)
wingStatsRfdWlRadioStatDetailEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdWlRadioStatDetailId"),
)
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailEntry.setStatus("current")
_WingStatsRfdWlRadioStatDetailId_Type = WingIdentifier
_WingStatsRfdWlRadioStatDetailId_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailId = _WingStatsRfdWlRadioStatDetailId_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 1),
    _WingStatsRfdWlRadioStatDetailId_Type()
)
wingStatsRfdWlRadioStatDetailId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailId.setStatus("current")
_WingStatsRfdWlRadioStatDetailDeviceMac_Type = MacAddress
_WingStatsRfdWlRadioStatDetailDeviceMac_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailDeviceMac = _WingStatsRfdWlRadioStatDetailDeviceMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 2),
    _WingStatsRfdWlRadioStatDetailDeviceMac_Type()
)
wingStatsRfdWlRadioStatDetailDeviceMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailDeviceMac.setStatus("current")
_WingStatsRfdWlRadioStatDetailAlias_Type = DisplayString
_WingStatsRfdWlRadioStatDetailAlias_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailAlias = _WingStatsRfdWlRadioStatDetailAlias_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 3),
    _WingStatsRfdWlRadioStatDetailAlias_Type()
)
wingStatsRfdWlRadioStatDetailAlias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailAlias.setStatus("current")
_WingStatsRfdWlRadioStatDetailMac_Type = MacAddress
_WingStatsRfdWlRadioStatDetailMac_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailMac = _WingStatsRfdWlRadioStatDetailMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 4),
    _WingStatsRfdWlRadioStatDetailMac_Type()
)
wingStatsRfdWlRadioStatDetailMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailMac.setStatus("current")
_WingStatsRfdWlRadioStatDetailType_Type = DisplayString
_WingStatsRfdWlRadioStatDetailType_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailType = _WingStatsRfdWlRadioStatDetailType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 5),
    _WingStatsRfdWlRadioStatDetailType_Type()
)
wingStatsRfdWlRadioStatDetailType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailType.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxBytes_Type = Counter64
_WingStatsRfdWlRadioStatDetailTxBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxBytes = _WingStatsRfdWlRadioStatDetailTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 6),
    _WingStatsRfdWlRadioStatDetailTxBytes_Type()
)
wingStatsRfdWlRadioStatDetailTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxBytes.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxBytes_Type = Counter64
_WingStatsRfdWlRadioStatDetailRxBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxBytes = _WingStatsRfdWlRadioStatDetailRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 7),
    _WingStatsRfdWlRadioStatDetailRxBytes_Type()
)
wingStatsRfdWlRadioStatDetailRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxBytes.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxPkts_Type = Counter32
_WingStatsRfdWlRadioStatDetailTxPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxPkts = _WingStatsRfdWlRadioStatDetailTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 8),
    _WingStatsRfdWlRadioStatDetailTxPkts_Type()
)
wingStatsRfdWlRadioStatDetailTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxPkts_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxPkts = _WingStatsRfdWlRadioStatDetailRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 9),
    _WingStatsRfdWlRadioStatDetailRxPkts_Type()
)
wingStatsRfdWlRadioStatDetailRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxDropped_Type = Counter32
_WingStatsRfdWlRadioStatDetailTxDropped_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxDropped = _WingStatsRfdWlRadioStatDetailTxDropped_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 10),
    _WingStatsRfdWlRadioStatDetailTxDropped_Type()
)
wingStatsRfdWlRadioStatDetailTxDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxDropped.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxErrors_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxErrors_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxErrors = _WingStatsRfdWlRadioStatDetailRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 11),
    _WingStatsRfdWlRadioStatDetailRxErrors_Type()
)
wingStatsRfdWlRadioStatDetailRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxErrors.setStatus("current")
_WingStatsRfdWlRadioStatDetailTIndex_Type = Integer32
_WingStatsRfdWlRadioStatDetailTIndex_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTIndex = _WingStatsRfdWlRadioStatDetailTIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 12),
    _WingStatsRfdWlRadioStatDetailTIndex_Type()
)
wingStatsRfdWlRadioStatDetailTIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTIndex.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxBps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailTxBps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxBps = _WingStatsRfdWlRadioStatDetailTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 13),
    _WingStatsRfdWlRadioStatDetailTxBps_Type()
)
wingStatsRfdWlRadioStatDetailTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxBps.setUnits("kbps")
_WingStatsRfdWlRadioStatDetailRxBps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRxBps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxBps = _WingStatsRfdWlRadioStatDetailRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 14),
    _WingStatsRfdWlRadioStatDetailRxBps_Type()
)
wingStatsRfdWlRadioStatDetailRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxBps.setUnits("kbps")
_WingStatsRfdWlRadioStatDetailSignal_Type = Integer32
_WingStatsRfdWlRadioStatDetailSignal_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailSignal = _WingStatsRfdWlRadioStatDetailSignal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 15),
    _WingStatsRfdWlRadioStatDetailSignal_Type()
)
wingStatsRfdWlRadioStatDetailSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailSignal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailSignal.setUnits("dbm")
_WingStatsRfdWlRadioStatDetailNoise_Type = Integer32
_WingStatsRfdWlRadioStatDetailNoise_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailNoise = _WingStatsRfdWlRadioStatDetailNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 16),
    _WingStatsRfdWlRadioStatDetailNoise_Type()
)
wingStatsRfdWlRadioStatDetailNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNoise.setUnits("dbm")
_WingStatsRfdWlRadioStatDetailSnr_Type = Integer32
_WingStatsRfdWlRadioStatDetailSnr_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailSnr = _WingStatsRfdWlRadioStatDetailSnr_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 17),
    _WingStatsRfdWlRadioStatDetailSnr_Type()
)
wingStatsRfdWlRadioStatDetailSnr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailSnr.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailSnr.setUnits("db")
_WingStatsRfdWlRadioStatDetailTxRate_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailTxRate_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxRate = _WingStatsRfdWlRadioStatDetailTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 18),
    _WingStatsRfdWlRadioStatDetailTxRate_Type()
)
wingStatsRfdWlRadioStatDetailTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxRate.setUnits("Mbps")
_WingStatsRfdWlRadioStatDetailRxRate_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRxRate_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxRate = _WingStatsRfdWlRadioStatDetailRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 19),
    _WingStatsRfdWlRadioStatDetailRxRate_Type()
)
wingStatsRfdWlRadioStatDetailRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxRate.setUnits("Mbps")
_WingStatsRfdWlRadioStatDetailErrorRate_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailErrorRate_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailErrorRate = _WingStatsRfdWlRadioStatDetailErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 20),
    _WingStatsRfdWlRadioStatDetailErrorRate_Type()
)
wingStatsRfdWlRadioStatDetailErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailErrorRate.setStatus("current")
_WingStatsRfdWlRadioStatDetailQIndex_Type = Integer32
_WingStatsRfdWlRadioStatDetailQIndex_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailQIndex = _WingStatsRfdWlRadioStatDetailQIndex_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 21),
    _WingStatsRfdWlRadioStatDetailQIndex_Type()
)
wingStatsRfdWlRadioStatDetailQIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailQIndex.setStatus("current")
_WingStatsRfdWlRadioStatDetailNumClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailNumClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailNumClients = _WingStatsRfdWlRadioStatDetailNumClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 22),
    _WingStatsRfdWlRadioStatDetailNumClients_Type()
)
wingStatsRfdWlRadioStatDetailNumClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNumClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailNumBClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailNumBClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailNumBClients = _WingStatsRfdWlRadioStatDetailNumBClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 23),
    _WingStatsRfdWlRadioStatDetailNumBClients_Type()
)
wingStatsRfdWlRadioStatDetailNumBClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNumBClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailNumBgClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailNumBgClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailNumBgClients = _WingStatsRfdWlRadioStatDetailNumBgClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 24),
    _WingStatsRfdWlRadioStatDetailNumBgClients_Type()
)
wingStatsRfdWlRadioStatDetailNumBgClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNumBgClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailNumBgnClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailNumBgnClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailNumBgnClients = _WingStatsRfdWlRadioStatDetailNumBgnClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 25),
    _WingStatsRfdWlRadioStatDetailNumBgnClients_Type()
)
wingStatsRfdWlRadioStatDetailNumBgnClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNumBgnClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailNumAClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailNumAClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailNumAClients = _WingStatsRfdWlRadioStatDetailNumAClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 26),
    _WingStatsRfdWlRadioStatDetailNumAClients_Type()
)
wingStatsRfdWlRadioStatDetailNumAClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNumAClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailNumAnClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailNumAnClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailNumAnClients = _WingStatsRfdWlRadioStatDetailNumAnClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 27),
    _WingStatsRfdWlRadioStatDetailNumAnClients_Type()
)
wingStatsRfdWlRadioStatDetailNumAnClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailNumAnClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailMediumErrorRate_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailMediumErrorRate_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailMediumErrorRate = _WingStatsRfdWlRadioStatDetailMediumErrorRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 28),
    _WingStatsRfdWlRadioStatDetailMediumErrorRate_Type()
)
wingStatsRfdWlRadioStatDetailMediumErrorRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailMediumErrorRate.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawTxBytes_Type = Counter64
_WingStatsRfdWlRadioStatDetailRawTxBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTxBytes = _WingStatsRfdWlRadioStatDetailRawTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 29),
    _WingStatsRfdWlRadioStatDetailRawTxBytes_Type()
)
wingStatsRfdWlRadioStatDetailRawTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTxBytes.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawRxBytes_Type = Counter64
_WingStatsRfdWlRadioStatDetailRawRxBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawRxBytes = _WingStatsRfdWlRadioStatDetailRawRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 30),
    _WingStatsRfdWlRadioStatDetailRawRxBytes_Type()
)
wingStatsRfdWlRadioStatDetailRawRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawRxBytes.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawTotalBytes_Type = Counter64
_WingStatsRfdWlRadioStatDetailRawTotalBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTotalBytes = _WingStatsRfdWlRadioStatDetailRawTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 31),
    _WingStatsRfdWlRadioStatDetailRawTotalBytes_Type()
)
wingStatsRfdWlRadioStatDetailRawTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTotalBytes.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawTxPkts_Type = Counter32
_WingStatsRfdWlRadioStatDetailRawTxPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTxPkts = _WingStatsRfdWlRadioStatDetailRawTxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 32),
    _WingStatsRfdWlRadioStatDetailRawTxPkts_Type()
)
wingStatsRfdWlRadioStatDetailRawTxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTxPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawRxPkts_Type = Counter32
_WingStatsRfdWlRadioStatDetailRawRxPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawRxPkts = _WingStatsRfdWlRadioStatDetailRawRxPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 33),
    _WingStatsRfdWlRadioStatDetailRawRxPkts_Type()
)
wingStatsRfdWlRadioStatDetailRawRxPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawRxPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawTotalPkts_Type = Counter32
_WingStatsRfdWlRadioStatDetailRawTotalPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTotalPkts = _WingStatsRfdWlRadioStatDetailRawTotalPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 34),
    _WingStatsRfdWlRadioStatDetailRawTotalPkts_Type()
)
wingStatsRfdWlRadioStatDetailRawTotalPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTotalPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawTxBps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawTxBps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTxBps = _WingStatsRfdWlRadioStatDetailRawTxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 35),
    _WingStatsRfdWlRadioStatDetailRawTxBps_Type()
)
wingStatsRfdWlRadioStatDetailRawTxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTxBps.setUnits("kbps")
_WingStatsRfdWlRadioStatDetailRawRxBps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawRxBps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawRxBps = _WingStatsRfdWlRadioStatDetailRawRxBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 36),
    _WingStatsRfdWlRadioStatDetailRawRxBps_Type()
)
wingStatsRfdWlRadioStatDetailRawRxBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawRxBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawRxBps.setUnits("kbps")
_WingStatsRfdWlRadioStatDetailRawTotalBps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawTotalBps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTotalBps = _WingStatsRfdWlRadioStatDetailRawTotalBps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 37),
    _WingStatsRfdWlRadioStatDetailRawTotalBps_Type()
)
wingStatsRfdWlRadioStatDetailRawTotalBps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTotalBps.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTotalBps.setUnits("kbps")
_WingStatsRfdWlRadioStatDetailRawTxPps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawTxPps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTxPps = _WingStatsRfdWlRadioStatDetailRawTxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 38),
    _WingStatsRfdWlRadioStatDetailRawTxPps_Type()
)
wingStatsRfdWlRadioStatDetailRawTxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTxPps.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawRxPps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawRxPps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawRxPps = _WingStatsRfdWlRadioStatDetailRawRxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 39),
    _WingStatsRfdWlRadioStatDetailRawRxPps_Type()
)
wingStatsRfdWlRadioStatDetailRawRxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawRxPps.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawTotalPps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawTotalPps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTotalPps = _WingStatsRfdWlRadioStatDetailRawTotalPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 40),
    _WingStatsRfdWlRadioStatDetailRawTotalPps_Type()
)
wingStatsRfdWlRadioStatDetailRawTotalPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTotalPps.setStatus("current")
_WingStatsRfdWlRadioStatDetailRawTxRate_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawTxRate_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawTxRate = _WingStatsRfdWlRadioStatDetailRawTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 41),
    _WingStatsRfdWlRadioStatDetailRawTxRate_Type()
)
wingStatsRfdWlRadioStatDetailRawTxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawTxRate.setUnits("Mbps")
_WingStatsRfdWlRadioStatDetailRawRxRate_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawRxRate_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawRxRate = _WingStatsRfdWlRadioStatDetailRawRxRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 42),
    _WingStatsRfdWlRadioStatDetailRawRxRate_Type()
)
wingStatsRfdWlRadioStatDetailRawRxRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawRxRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawRxRate.setUnits("Mbps")
_WingStatsRfdWlRadioStatDetailRawOverallRate_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRawOverallRate_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRawOverallRate = _WingStatsRfdWlRadioStatDetailRawOverallRate_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 43),
    _WingStatsRfdWlRadioStatDetailRawOverallRate_Type()
)
wingStatsRfdWlRadioStatDetailRawOverallRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawOverallRate.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRawOverallRate.setUnits("Mbps")
_WingStatsRfdWlRadioStatDetailTxBcmcPkts_Type = Counter64
_WingStatsRfdWlRadioStatDetailTxBcmcPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxBcmcPkts = _WingStatsRfdWlRadioStatDetailTxBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 44),
    _WingStatsRfdWlRadioStatDetailTxBcmcPkts_Type()
)
wingStatsRfdWlRadioStatDetailTxBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxBcmcPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxBcmcPkts_Type = Counter64
_WingStatsRfdWlRadioStatDetailRxBcmcPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxBcmcPkts = _WingStatsRfdWlRadioStatDetailRxBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 45),
    _WingStatsRfdWlRadioStatDetailRxBcmcPkts_Type()
)
wingStatsRfdWlRadioStatDetailRxBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxBcmcPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailTotalBcmcPkts_Type = Counter64
_WingStatsRfdWlRadioStatDetailTotalBcmcPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTotalBcmcPkts = _WingStatsRfdWlRadioStatDetailTotalBcmcPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 46),
    _WingStatsRfdWlRadioStatDetailTotalBcmcPkts_Type()
)
wingStatsRfdWlRadioStatDetailTotalBcmcPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTotalBcmcPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxPps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailTxPps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxPps = _WingStatsRfdWlRadioStatDetailTxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 47),
    _WingStatsRfdWlRadioStatDetailTxPps_Type()
)
wingStatsRfdWlRadioStatDetailTxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxPps.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxPps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailRxPps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxPps = _WingStatsRfdWlRadioStatDetailRxPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 48),
    _WingStatsRfdWlRadioStatDetailRxPps_Type()
)
wingStatsRfdWlRadioStatDetailRxPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxPps.setStatus("current")
_WingStatsRfdWlRadioStatDetailTotalPps_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailTotalPps_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTotalPps = _WingStatsRfdWlRadioStatDetailTotalPps_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 49),
    _WingStatsRfdWlRadioStatDetailTotalPps_Type()
)
wingStatsRfdWlRadioStatDetailTotalPps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTotalPps.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxMgmtPkts_Type = Counter64
_WingStatsRfdWlRadioStatDetailTxMgmtPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxMgmtPkts = _WingStatsRfdWlRadioStatDetailTxMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 50),
    _WingStatsRfdWlRadioStatDetailTxMgmtPkts_Type()
)
wingStatsRfdWlRadioStatDetailTxMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxMgmtPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxMgmtPkts_Type = Counter64
_WingStatsRfdWlRadioStatDetailRxMgmtPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxMgmtPkts = _WingStatsRfdWlRadioStatDetailRxMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 51),
    _WingStatsRfdWlRadioStatDetailRxMgmtPkts_Type()
)
wingStatsRfdWlRadioStatDetailRxMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxMgmtPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailTotalMgmtPkts_Type = Counter64
_WingStatsRfdWlRadioStatDetailTotalMgmtPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTotalMgmtPkts = _WingStatsRfdWlRadioStatDetailTotalMgmtPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 52),
    _WingStatsRfdWlRadioStatDetailTotalMgmtPkts_Type()
)
wingStatsRfdWlRadioStatDetailTotalMgmtPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTotalMgmtPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxRetries_Type = Counter64
_WingStatsRfdWlRadioStatDetailTxRetries_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxRetries = _WingStatsRfdWlRadioStatDetailTxRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 53),
    _WingStatsRfdWlRadioStatDetailTxRetries_Type()
)
wingStatsRfdWlRadioStatDetailTxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxRetries.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxProbes_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxProbes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxProbes = _WingStatsRfdWlRadioStatDetailRxProbes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 54),
    _WingStatsRfdWlRadioStatDetailRxProbes_Type()
)
wingStatsRfdWlRadioStatDetailRxProbes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxProbes.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxActions_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxActions_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxActions = _WingStatsRfdWlRadioStatDetailRxActions_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 55),
    _WingStatsRfdWlRadioStatDetailRxActions_Type()
)
wingStatsRfdWlRadioStatDetailRxActions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxActions.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxPsPoll_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxPsPoll_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxPsPoll = _WingStatsRfdWlRadioStatDetailRxPsPoll_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 56),
    _WingStatsRfdWlRadioStatDetailRxPsPoll_Type()
)
wingStatsRfdWlRadioStatDetailRxPsPoll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxPsPoll.setStatus("current")
_WingStatsRfdWlRadioStatDetailLastCallStatus_Type = DisplayString
_WingStatsRfdWlRadioStatDetailLastCallStatus_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailLastCallStatus = _WingStatsRfdWlRadioStatDetailLastCallStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 57),
    _WingStatsRfdWlRadioStatDetailLastCallStatus_Type()
)
wingStatsRfdWlRadioStatDetailLastCallStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailLastCallStatus.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallTotal_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallTotal_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallTotal = _WingStatsRfdWlRadioStatDetailCallTotal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 58),
    _WingStatsRfdWlRadioStatDetailCallTotal_Type()
)
wingStatsRfdWlRadioStatDetailCallTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallTotal.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatOk_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatOk_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatOk = _WingStatsRfdWlRadioStatDetailCallStatOk_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 59),
    _WingStatsRfdWlRadioStatDetailCallStatOk_Type()
)
wingStatsRfdWlRadioStatDetailCallStatOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatOk.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatBusy_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatBusy_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatBusy = _WingStatsRfdWlRadioStatDetailCallStatBusy_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 60),
    _WingStatsRfdWlRadioStatDetailCallStatBusy_Type()
)
wingStatsRfdWlRadioStatDetailCallStatBusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatBusy.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatNoAnswer_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatNoAnswer_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatNoAnswer = _WingStatsRfdWlRadioStatDetailCallStatNoAnswer_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 61),
    _WingStatsRfdWlRadioStatDetailCallStatNoAnswer_Type()
)
wingStatsRfdWlRadioStatDetailCallStatNoAnswer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatNoAnswer.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatUnknownDest_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatUnknownDest_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatUnknownDest = _WingStatsRfdWlRadioStatDetailCallStatUnknownDest_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 62),
    _WingStatsRfdWlRadioStatDetailCallStatUnknownDest_Type()
)
wingStatsRfdWlRadioStatDetailCallStatUnknownDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatUnknownDest.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatAdmDenied_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatAdmDenied_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatAdmDenied = _WingStatsRfdWlRadioStatDetailCallStatAdmDenied_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 63),
    _WingStatsRfdWlRadioStatDetailCallStatAdmDenied_Type()
)
wingStatsRfdWlRadioStatDetailCallStatAdmDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatAdmDenied.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatDeclined_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatDeclined_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatDeclined = _WingStatsRfdWlRadioStatDetailCallStatDeclined_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 64),
    _WingStatsRfdWlRadioStatDetailCallStatDeclined_Type()
)
wingStatsRfdWlRadioStatDetailCallStatDeclined.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatDeclined.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatUnauth_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatUnauth_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatUnauth = _WingStatsRfdWlRadioStatDetailCallStatUnauth_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 65),
    _WingStatsRfdWlRadioStatDetailCallStatUnauth_Type()
)
wingStatsRfdWlRadioStatDetailCallStatUnauth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatUnauth.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatUnsuppMedia_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatUnsuppMedia_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatUnsuppMedia = _WingStatsRfdWlRadioStatDetailCallStatUnsuppMedia_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 66),
    _WingStatsRfdWlRadioStatDetailCallStatUnsuppMedia_Type()
)
wingStatsRfdWlRadioStatDetailCallStatUnsuppMedia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatUnsuppMedia.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatTempUnavail_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatTempUnavail_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatTempUnavail = _WingStatsRfdWlRadioStatDetailCallStatTempUnavail_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 67),
    _WingStatsRfdWlRadioStatDetailCallStatTempUnavail_Type()
)
wingStatsRfdWlRadioStatDetailCallStatTempUnavail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatTempUnavail.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatNoForkAllowed_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatNoForkAllowed_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatNoForkAllowed = _WingStatsRfdWlRadioStatDetailCallStatNoForkAllowed_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 68),
    _WingStatsRfdWlRadioStatDetailCallStatNoForkAllowed_Type()
)
wingStatsRfdWlRadioStatDetailCallStatNoForkAllowed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatNoForkAllowed.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatSessInactive_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatSessInactive_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatSessInactive = _WingStatsRfdWlRadioStatDetailCallStatSessInactive_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 69),
    _WingStatsRfdWlRadioStatDetailCallStatSessInactive_Type()
)
wingStatsRfdWlRadioStatDetailCallStatSessInactive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatSessInactive.setStatus("current")
_WingStatsRfdWlRadioStatDetailCallStatOther_Type = Counter32
_WingStatsRfdWlRadioStatDetailCallStatOther_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailCallStatOther = _WingStatsRfdWlRadioStatDetailCallStatOther_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 70),
    _WingStatsRfdWlRadioStatDetailCallStatOther_Type()
)
wingStatsRfdWlRadioStatDetailCallStatOther.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailCallStatOther.setStatus("current")
_WingStatsRfdWlRadioStatDetailTotalBytes_Type = Counter64
_WingStatsRfdWlRadioStatDetailTotalBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTotalBytes = _WingStatsRfdWlRadioStatDetailTotalBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 71),
    _WingStatsRfdWlRadioStatDetailTotalBytes_Type()
)
wingStatsRfdWlRadioStatDetailTotalBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTotalBytes.setStatus("current")
_WingStatsRfdWlRadioStatDetailTotalPkts_Type = Counter32
_WingStatsRfdWlRadioStatDetailTotalPkts_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTotalPkts = _WingStatsRfdWlRadioStatDetailTotalPkts_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 72),
    _WingStatsRfdWlRadioStatDetailTotalPkts_Type()
)
wingStatsRfdWlRadioStatDetailTotalPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTotalPkts.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxRetries_Type = Counter64
_WingStatsRfdWlRadioStatDetailRxRetries_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxRetries = _WingStatsRfdWlRadioStatDetailRxRetries_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 73),
    _WingStatsRfdWlRadioStatDetailRxRetries_Type()
)
wingStatsRfdWlRadioStatDetailRxRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxRetries.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxCrcErrors_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxCrcErrors_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxCrcErrors = _WingStatsRfdWlRadioStatDetailRxCrcErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 74),
    _WingStatsRfdWlRadioStatDetailRxCrcErrors_Type()
)
wingStatsRfdWlRadioStatDetailRxCrcErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxCrcErrors.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxUndecryptable_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxUndecryptable_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxUndecryptable = _WingStatsRfdWlRadioStatDetailRxUndecryptable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 75),
    _WingStatsRfdWlRadioStatDetailRxUndecryptable_Type()
)
wingStatsRfdWlRadioStatDetailRxUndecryptable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxUndecryptable.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxIncomplete_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxIncomplete_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxIncomplete = _WingStatsRfdWlRadioStatDetailRxIncomplete_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 76),
    _WingStatsRfdWlRadioStatDetailRxIncomplete_Type()
)
wingStatsRfdWlRadioStatDetailRxIncomplete.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxIncomplete.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxLengthErrors_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxLengthErrors_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxLengthErrors = _WingStatsRfdWlRadioStatDetailRxLengthErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 77),
    _WingStatsRfdWlRadioStatDetailRxLengthErrors_Type()
)
wingStatsRfdWlRadioStatDetailRxLengthErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxLengthErrors.setStatus("current")
_WingStatsRfdWlRadioStatDetailRxOtherErrors_Type = Counter32
_WingStatsRfdWlRadioStatDetailRxOtherErrors_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailRxOtherErrors = _WingStatsRfdWlRadioStatDetailRxOtherErrors_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 78),
    _WingStatsRfdWlRadioStatDetailRxOtherErrors_Type()
)
wingStatsRfdWlRadioStatDetailRxOtherErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailRxOtherErrors.setStatus("current")
_WingStatsRfdWlRadioStatDetailLongPreambleClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailLongPreambleClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailLongPreambleClients = _WingStatsRfdWlRadioStatDetailLongPreambleClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 79),
    _WingStatsRfdWlRadioStatDetailLongPreambleClients_Type()
)
wingStatsRfdWlRadioStatDetailLongPreambleClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailLongPreambleClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailLtClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailLtClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailLtClients = _WingStatsRfdWlRadioStatDetailLtClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 80),
    _WingStatsRfdWlRadioStatDetailLtClients_Type()
)
wingStatsRfdWlRadioStatDetailLtClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailLtClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailHt20Clients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailHt20Clients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailHt20Clients = _WingStatsRfdWlRadioStatDetailHt20Clients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 81),
    _WingStatsRfdWlRadioStatDetailHt20Clients_Type()
)
wingStatsRfdWlRadioStatDetailHt20Clients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailHt20Clients.setStatus("current")
_WingStatsRfdWlRadioStatDetailLongSlotClients_Type = Unsigned32
_WingStatsRfdWlRadioStatDetailLongSlotClients_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailLongSlotClients = _WingStatsRfdWlRadioStatDetailLongSlotClients_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 82),
    _WingStatsRfdWlRadioStatDetailLongSlotClients_Type()
)
wingStatsRfdWlRadioStatDetailLongSlotClients.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailLongSlotClients.setStatus("current")
_WingStatsRfdWlRadioStatDetailTxRetriedBytes_Type = Counter64
_WingStatsRfdWlRadioStatDetailTxRetriedBytes_Object = MibTableColumn
wingStatsRfdWlRadioStatDetailTxRetriedBytes = _WingStatsRfdWlRadioStatDetailTxRetriedBytes_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 2, 11, 1, 1, 83),
    _WingStatsRfdWlRadioStatDetailTxRetriedBytes_Type()
)
wingStatsRfdWlRadioStatDetailTxRetriedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdWlRadioStatDetailTxRetriedBytes.setStatus("current")
_WingStatsRfdSmartRf_ObjectIdentity = ObjectIdentity
wingStatsRfdSmartRf = _WingStatsRfdSmartRf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5)
)
_WingStatsRfdSmartRfRadioInfoTable_Object = MibTable
wingStatsRfdSmartRfRadioInfoTable = _WingStatsRfdSmartRfRadioInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoTable.setStatus("current")
_WingStatsRfdSmartRfRadioInfoEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioInfoEntry = _WingStatsRfdSmartRfRadioInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1)
)
wingStatsRfdSmartRfRadioInfoEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioInfoMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoEntry.setStatus("current")
_WingStatsRfdSmartRfRadioInfoMac_Type = WingIdentifier
_WingStatsRfdSmartRfRadioInfoMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoMac = _WingStatsRfdSmartRfRadioInfoMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 1),
    _WingStatsRfdSmartRfRadioInfoMac_Type()
)
wingStatsRfdSmartRfRadioInfoMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoMac.setStatus("current")
_WingStatsRfdSmartRfRadioInfoApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioInfoApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoApMac = _WingStatsRfdSmartRfRadioInfoApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 3),
    _WingStatsRfdSmartRfRadioInfoApMac_Type()
)
wingStatsRfdSmartRfRadioInfoApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoApMac.setStatus("current")


class _WingStatsRfdSmartRfRadioInfoHostname_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfRadioInfoHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsRfdSmartRfRadioInfoHostname_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfRadioInfoHostname_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoHostname = _WingStatsRfdSmartRfRadioInfoHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 4),
    _WingStatsRfdSmartRfRadioInfoHostname_Type()
)
wingStatsRfdSmartRfRadioInfoHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoHostname.setStatus("current")
_WingStatsRfdSmartRfRadioInfoChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioInfoChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoChannel = _WingStatsRfdSmartRfRadioInfoChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 5),
    _WingStatsRfdSmartRfRadioInfoChannel_Type()
)
wingStatsRfdSmartRfRadioInfoChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoChannel.setStatus("current")


class _WingStatsRfdSmartRfRadioInfoPower_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioInfoPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WingStatsRfdSmartRfRadioInfoPower_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioInfoPower_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoPower = _WingStatsRfdSmartRfRadioInfoPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 6),
    _WingStatsRfdSmartRfRadioInfoPower_Type()
)
wingStatsRfdSmartRfRadioInfoPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoPower.setUnits("dBm")
_WingStatsRfdSmartRfRadioInfoRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfRadioInfoRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoRadioIdx = _WingStatsRfdSmartRfRadioInfoRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 7),
    _WingStatsRfdSmartRfRadioInfoRadioIdx_Type()
)
wingStatsRfdSmartRfRadioInfoRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoRadioIdx.setStatus("current")
_WingStatsRfdSmartRfRadioInfoState_Type = DisplayString
_WingStatsRfdSmartRfRadioInfoState_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoState = _WingStatsRfdSmartRfRadioInfoState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 8),
    _WingStatsRfdSmartRfRadioInfoState_Type()
)
wingStatsRfdSmartRfRadioInfoState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoState.setStatus("current")
_WingStatsRfdSmartRfRadioInfoType_Type = DisplayString
_WingStatsRfdSmartRfRadioInfoType_Object = MibTableColumn
wingStatsRfdSmartRfRadioInfoType = _WingStatsRfdSmartRfRadioInfoType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 1, 1, 9),
    _WingStatsRfdSmartRfRadioInfoType_Type()
)
wingStatsRfdSmartRfRadioInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioInfoType.setStatus("current")
_WingStatsRfdSmartRfRadioActTable_Object = MibTable
wingStatsRfdSmartRfRadioActTable = _WingStatsRfdSmartRfRadioActTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActTable.setStatus("current")
_WingStatsRfdSmartRfRadioActEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioActEntry = _WingStatsRfdSmartRfRadioActEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2, 1)
)
wingStatsRfdSmartRfRadioActEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioActMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActEntry.setStatus("current")
_WingStatsRfdSmartRfRadioActMac_Type = WingIdentifier
_WingStatsRfdSmartRfRadioActMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioActMac = _WingStatsRfdSmartRfRadioActMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2, 1, 1),
    _WingStatsRfdSmartRfRadioActMac_Type()
)
wingStatsRfdSmartRfRadioActMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActMac.setStatus("current")
_WingStatsRfdSmartRfRadioActApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioActApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioActApMac = _WingStatsRfdSmartRfRadioActApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2, 1, 3),
    _WingStatsRfdSmartRfRadioActApMac_Type()
)
wingStatsRfdSmartRfRadioActApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActApMac.setStatus("current")
_WingStatsRfdSmartRfRadioActType_Type = DisplayString
_WingStatsRfdSmartRfRadioActType_Object = MibTableColumn
wingStatsRfdSmartRfRadioActType = _WingStatsRfdSmartRfRadioActType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2, 1, 4),
    _WingStatsRfdSmartRfRadioActType_Type()
)
wingStatsRfdSmartRfRadioActType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActType.setStatus("current")


class _WingStatsRfdSmartRfRadioActPowerChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioActPowerChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfRadioActPowerChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioActPowerChanges_Object = MibTableColumn
wingStatsRfdSmartRfRadioActPowerChanges = _WingStatsRfdSmartRfRadioActPowerChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2, 1, 5),
    _WingStatsRfdSmartRfRadioActPowerChanges_Type()
)
wingStatsRfdSmartRfRadioActPowerChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActPowerChanges.setStatus("current")


class _WingStatsRfdSmartRfRadioActChannelChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioActChannelChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfRadioActChannelChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioActChannelChanges_Object = MibTableColumn
wingStatsRfdSmartRfRadioActChannelChanges = _WingStatsRfdSmartRfRadioActChannelChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2, 1, 6),
    _WingStatsRfdSmartRfRadioActChannelChanges_Type()
)
wingStatsRfdSmartRfRadioActChannelChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActChannelChanges.setStatus("current")


class _WingStatsRfdSmartRfRadioActCoverageChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioActCoverageChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfRadioActCoverageChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioActCoverageChanges_Object = MibTableColumn
wingStatsRfdSmartRfRadioActCoverageChanges = _WingStatsRfdSmartRfRadioActCoverageChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 2, 1, 7),
    _WingStatsRfdSmartRfRadioActCoverageChanges_Type()
)
wingStatsRfdSmartRfRadioActCoverageChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioActCoverageChanges.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsTable_Object = MibTable
wingStatsRfdSmartRfRadioNeighborsTable = _WingStatsRfdSmartRfRadioNeighborsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsTable.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioNeighborsEntry = _WingStatsRfdSmartRfRadioNeighborsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3, 1)
)
wingStatsRfdSmartRfRadioNeighborsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioNeighborsMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsEntry.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsMac_Type = WingIdentifier
_WingStatsRfdSmartRfRadioNeighborsMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsMac = _WingStatsRfdSmartRfRadioNeighborsMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3, 1, 1),
    _WingStatsRfdSmartRfRadioNeighborsMac_Type()
)
wingStatsRfdSmartRfRadioNeighborsMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsMac.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioNeighborsApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsApMac = _WingStatsRfdSmartRfRadioNeighborsApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3, 1, 3),
    _WingStatsRfdSmartRfRadioNeighborsApMac_Type()
)
wingStatsRfdSmartRfRadioNeighborsApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsApMac.setStatus("current")


class _WingStatsRfdSmartRfRadioNeighborsHostname_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfRadioNeighborsHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsRfdSmartRfRadioNeighborsHostname_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfRadioNeighborsHostname_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsHostname = _WingStatsRfdSmartRfRadioNeighborsHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3, 1, 4),
    _WingStatsRfdSmartRfRadioNeighborsHostname_Type()
)
wingStatsRfdSmartRfRadioNeighborsHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsHostname.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioNeighborsChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsChannel = _WingStatsRfdSmartRfRadioNeighborsChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3, 1, 5),
    _WingStatsRfdSmartRfRadioNeighborsChannel_Type()
)
wingStatsRfdSmartRfRadioNeighborsChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsChannel.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfRadioNeighborsRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsRadioIdx = _WingStatsRfdSmartRfRadioNeighborsRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3, 1, 6),
    _WingStatsRfdSmartRfRadioNeighborsRadioIdx_Type()
)
wingStatsRfdSmartRfRadioNeighborsRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsRadioIdx.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsType_Type = DisplayString
_WingStatsRfdSmartRfRadioNeighborsType_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsType = _WingStatsRfdSmartRfRadioNeighborsType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 3, 1, 7),
    _WingStatsRfdSmartRfRadioNeighborsType_Type()
)
wingStatsRfdSmartRfRadioNeighborsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsType.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsNeighborsTable_Object = MibTable
wingStatsRfdSmartRfRadioNeighborsNeighborsTable = _WingStatsRfdSmartRfRadioNeighborsNeighborsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsTable.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsNeighborsEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioNeighborsNeighborsEntry = _WingStatsRfdSmartRfRadioNeighborsNeighborsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4, 1)
)
wingStatsRfdSmartRfRadioNeighborsNeighborsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioNeighborsMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsEntry.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsNeighborsMac_Type = DisplayString
_WingStatsRfdSmartRfRadioNeighborsNeighborsMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsNeighborsMac = _WingStatsRfdSmartRfRadioNeighborsNeighborsMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4, 1, 1),
    _WingStatsRfdSmartRfRadioNeighborsNeighborsMac_Type()
)
wingStatsRfdSmartRfRadioNeighborsNeighborsMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsMac.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsNeighborsApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioNeighborsNeighborsApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsNeighborsApMac = _WingStatsRfdSmartRfRadioNeighborsNeighborsApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4, 1, 2),
    _WingStatsRfdSmartRfRadioNeighborsNeighborsApMac_Type()
)
wingStatsRfdSmartRfRadioNeighborsNeighborsApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsApMac.setStatus("current")
_WingStatsRfdSmartRfRadioNeighborsNeighborsChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioNeighborsNeighborsChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsNeighborsChannel = _WingStatsRfdSmartRfRadioNeighborsNeighborsChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4, 1, 3),
    _WingStatsRfdSmartRfRadioNeighborsNeighborsChannel_Type()
)
wingStatsRfdSmartRfRadioNeighborsNeighborsChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsChannel.setStatus("current")


class _WingStatsRfdSmartRfRadioNeighborsNeighborsPower_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioNeighborsNeighborsPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WingStatsRfdSmartRfRadioNeighborsNeighborsPower_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioNeighborsNeighborsPower_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsNeighborsPower = _WingStatsRfdSmartRfRadioNeighborsNeighborsPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4, 1, 4),
    _WingStatsRfdSmartRfRadioNeighborsNeighborsPower_Type()
)
wingStatsRfdSmartRfRadioNeighborsNeighborsPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsPower.setUnits("dBm")
_WingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation_Type = Unsigned32
_WingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation = _WingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4, 1, 5),
    _WingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation_Type()
)
wingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation.setUnits("dB")
_WingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx = _WingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 4, 1, 6),
    _WingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx_Type()
)
wingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyTable_Object = MibTable
wingStatsRfdSmartRfRadioEnergyTable = _WingStatsRfdSmartRfRadioEnergyTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyTable.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioEnergyEntry = _WingStatsRfdSmartRfRadioEnergyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5, 1)
)
wingStatsRfdSmartRfRadioEnergyEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioEnergyMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEntry.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyMac_Type = WingIdentifier
_WingStatsRfdSmartRfRadioEnergyMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyMac = _WingStatsRfdSmartRfRadioEnergyMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5, 1, 1),
    _WingStatsRfdSmartRfRadioEnergyMac_Type()
)
wingStatsRfdSmartRfRadioEnergyMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyMac.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioEnergyApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyApMac = _WingStatsRfdSmartRfRadioEnergyApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5, 1, 3),
    _WingStatsRfdSmartRfRadioEnergyApMac_Type()
)
wingStatsRfdSmartRfRadioEnergyApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyApMac.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyHostname_Type = DisplayString
_WingStatsRfdSmartRfRadioEnergyHostname_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyHostname = _WingStatsRfdSmartRfRadioEnergyHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5, 1, 4),
    _WingStatsRfdSmartRfRadioEnergyHostname_Type()
)
wingStatsRfdSmartRfRadioEnergyHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyHostname.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioEnergyChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyChannel = _WingStatsRfdSmartRfRadioEnergyChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5, 1, 5),
    _WingStatsRfdSmartRfRadioEnergyChannel_Type()
)
wingStatsRfdSmartRfRadioEnergyChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyChannel.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfRadioEnergyRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyRadioIdx = _WingStatsRfdSmartRfRadioEnergyRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5, 1, 6),
    _WingStatsRfdSmartRfRadioEnergyRadioIdx_Type()
)
wingStatsRfdSmartRfRadioEnergyRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyRadioIdx.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyType_Type = DisplayString
_WingStatsRfdSmartRfRadioEnergyType_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyType = _WingStatsRfdSmartRfRadioEnergyType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 5, 1, 7),
    _WingStatsRfdSmartRfRadioEnergyType_Type()
)
wingStatsRfdSmartRfRadioEnergyType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyType.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyEnergyTable_Object = MibTable
wingStatsRfdSmartRfRadioEnergyEnergyTable = _WingStatsRfdSmartRfRadioEnergyEnergyTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 6)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyTable.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyEnergyEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioEnergyEnergyEntry = _WingStatsRfdSmartRfRadioEnergyEnergyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 6, 1)
)
wingStatsRfdSmartRfRadioEnergyEnergyEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioEnergyMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyEntry.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyEnergyChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioEnergyEnergyChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyEnergyChannel = _WingStatsRfdSmartRfRadioEnergyEnergyChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 6, 1, 1),
    _WingStatsRfdSmartRfRadioEnergyEnergyChannel_Type()
)
wingStatsRfdSmartRfRadioEnergyEnergyChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyChannel.setStatus("current")
_WingStatsRfdSmartRfRadioEnergyEnergyExternal_Type = Integer32
_WingStatsRfdSmartRfRadioEnergyEnergyExternal_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyEnergyExternal = _WingStatsRfdSmartRfRadioEnergyEnergyExternal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 6, 1, 2),
    _WingStatsRfdSmartRfRadioEnergyEnergyExternal_Type()
)
wingStatsRfdSmartRfRadioEnergyEnergyExternal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyExternal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyExternal.setUnits("dbm")
_WingStatsRfdSmartRfRadioEnergyEnergyNeighbor_Type = Integer32
_WingStatsRfdSmartRfRadioEnergyEnergyNeighbor_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyEnergyNeighbor = _WingStatsRfdSmartRfRadioEnergyEnergyNeighbor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 6, 1, 3),
    _WingStatsRfdSmartRfRadioEnergyEnergyNeighbor_Type()
)
wingStatsRfdSmartRfRadioEnergyEnergyNeighbor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyNeighbor.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyNeighbor.setUnits("dbm")
_WingStatsRfdSmartRfRadioEnergyEnergyNoise_Type = Integer32
_WingStatsRfdSmartRfRadioEnergyEnergyNoise_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyEnergyNoise = _WingStatsRfdSmartRfRadioEnergyEnergyNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 6, 1, 4),
    _WingStatsRfdSmartRfRadioEnergyEnergyNoise_Type()
)
wingStatsRfdSmartRfRadioEnergyEnergyNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyNoise.setUnits("dbm")
_WingStatsRfdSmartRfRadioEnergyEnergyTotal_Type = Integer32
_WingStatsRfdSmartRfRadioEnergyEnergyTotal_Object = MibTableColumn
wingStatsRfdSmartRfRadioEnergyEnergyTotal = _WingStatsRfdSmartRfRadioEnergyEnergyTotal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 6, 1, 5),
    _WingStatsRfdSmartRfRadioEnergyEnergyTotal_Type()
)
wingStatsRfdSmartRfRadioEnergyEnergyTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyTotal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioEnergyEnergyTotal.setUnits("dbm")
_WingStatsRfdSmartRfRadioNonSsmTable_Object = MibTable
wingStatsRfdSmartRfRadioNonSsmTable = _WingStatsRfdSmartRfRadioNonSsmTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmTable.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioNonSsmEntry = _WingStatsRfdSmartRfRadioNonSsmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1)
)
wingStatsRfdSmartRfRadioNonSsmEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioNonSsmMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEntry.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmMac_Type = WingIdentifier
_WingStatsRfdSmartRfRadioNonSsmMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmMac = _WingStatsRfdSmartRfRadioNonSsmMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 1),
    _WingStatsRfdSmartRfRadioNonSsmMac_Type()
)
wingStatsRfdSmartRfRadioNonSsmMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmMac.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmInfoApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmInfoApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmInfoApMac = _WingStatsRfdSmartRfRadioNonSsmInfoApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 3),
    _WingStatsRfdSmartRfRadioNonSsmInfoApMac_Type()
)
wingStatsRfdSmartRfRadioNonSsmInfoApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmInfoApMac.setStatus("current")


class _WingStatsRfdSmartRfRadioNonSsmHostname_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfRadioNonSsmHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsRfdSmartRfRadioNonSsmHostname_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfRadioNonSsmHostname_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmHostname = _WingStatsRfdSmartRfRadioNonSsmHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 4),
    _WingStatsRfdSmartRfRadioNonSsmHostname_Type()
)
wingStatsRfdSmartRfRadioNonSsmHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmHostname.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmChannel = _WingStatsRfdSmartRfRadioNonSsmChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 5),
    _WingStatsRfdSmartRfRadioNonSsmChannel_Type()
)
wingStatsRfdSmartRfRadioNonSsmChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmChannel.setStatus("current")


class _WingStatsRfdSmartRfRadioNonSsmPower_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioNonSsmPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WingStatsRfdSmartRfRadioNonSsmPower_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioNonSsmPower_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmPower = _WingStatsRfdSmartRfRadioNonSsmPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 6),
    _WingStatsRfdSmartRfRadioNonSsmPower_Type()
)
wingStatsRfdSmartRfRadioNonSsmPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmPower.setUnits("dBm")
_WingStatsRfdSmartRfRadioNonSsmRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfRadioNonSsmRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmRadioIdx = _WingStatsRfdSmartRfRadioNonSsmRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 7),
    _WingStatsRfdSmartRfRadioNonSsmRadioIdx_Type()
)
wingStatsRfdSmartRfRadioNonSsmRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmRadioIdx.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmState_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmState_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmState = _WingStatsRfdSmartRfRadioNonSsmState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 8),
    _WingStatsRfdSmartRfRadioNonSsmState_Type()
)
wingStatsRfdSmartRfRadioNonSsmState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmState.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmInfoType_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmInfoType_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmInfoType = _WingStatsRfdSmartRfRadioNonSsmInfoType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 9),
    _WingStatsRfdSmartRfRadioNonSsmInfoType_Type()
)
wingStatsRfdSmartRfRadioNonSsmInfoType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmInfoType.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmActApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmActApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmActApMac = _WingStatsRfdSmartRfRadioNonSsmActApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 10),
    _WingStatsRfdSmartRfRadioNonSsmActApMac_Type()
)
wingStatsRfdSmartRfRadioNonSsmActApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmActApMac.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmActType_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmActType_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmActType = _WingStatsRfdSmartRfRadioNonSsmActType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 11),
    _WingStatsRfdSmartRfRadioNonSsmActType_Type()
)
wingStatsRfdSmartRfRadioNonSsmActType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmActType.setStatus("current")


class _WingStatsRfdSmartRfRadioNonSsmPowerChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioNonSsmPowerChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfRadioNonSsmPowerChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioNonSsmPowerChanges_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmPowerChanges = _WingStatsRfdSmartRfRadioNonSsmPowerChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 12),
    _WingStatsRfdSmartRfRadioNonSsmPowerChanges_Type()
)
wingStatsRfdSmartRfRadioNonSsmPowerChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmPowerChanges.setStatus("current")


class _WingStatsRfdSmartRfRadioNonSsmChannelChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioNonSsmChannelChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfRadioNonSsmChannelChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioNonSsmChannelChanges_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmChannelChanges = _WingStatsRfdSmartRfRadioNonSsmChannelChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 13),
    _WingStatsRfdSmartRfRadioNonSsmChannelChanges_Type()
)
wingStatsRfdSmartRfRadioNonSsmChannelChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmChannelChanges.setStatus("current")


class _WingStatsRfdSmartRfRadioNonSsmCoverageChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioNonSsmCoverageChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfRadioNonSsmCoverageChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioNonSsmCoverageChanges_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmCoverageChanges = _WingStatsRfdSmartRfRadioNonSsmCoverageChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 7, 1, 14),
    _WingStatsRfdSmartRfRadioNonSsmCoverageChanges_Type()
)
wingStatsRfdSmartRfRadioNonSsmCoverageChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmCoverageChanges.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmNeighborsTable_Object = MibTable
wingStatsRfdSmartRfRadioNonSsmNeighborsTable = _WingStatsRfdSmartRfRadioNonSsmNeighborsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsTable.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmNeighborsEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioNonSsmNeighborsEntry = _WingStatsRfdSmartRfRadioNonSsmNeighborsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8, 1)
)
wingStatsRfdSmartRfRadioNonSsmNeighborsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioNonSsmMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsEntry.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmNeighborsMac_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmNeighborsMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmNeighborsMac = _WingStatsRfdSmartRfRadioNonSsmNeighborsMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8, 1, 1),
    _WingStatsRfdSmartRfRadioNonSsmNeighborsMac_Type()
)
wingStatsRfdSmartRfRadioNonSsmNeighborsMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsMac.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmNeighborsApMac_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmNeighborsApMac_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmNeighborsApMac = _WingStatsRfdSmartRfRadioNonSsmNeighborsApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8, 1, 2),
    _WingStatsRfdSmartRfRadioNonSsmNeighborsApMac_Type()
)
wingStatsRfdSmartRfRadioNonSsmNeighborsApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsApMac.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmNeighborsChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmNeighborsChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmNeighborsChannel = _WingStatsRfdSmartRfRadioNonSsmNeighborsChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8, 1, 3),
    _WingStatsRfdSmartRfRadioNonSsmNeighborsChannel_Type()
)
wingStatsRfdSmartRfRadioNonSsmNeighborsChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsChannel.setStatus("current")


class _WingStatsRfdSmartRfRadioNonSsmNeighborsPower_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfRadioNonSsmNeighborsPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WingStatsRfdSmartRfRadioNonSsmNeighborsPower_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfRadioNonSsmNeighborsPower_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmNeighborsPower = _WingStatsRfdSmartRfRadioNonSsmNeighborsPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8, 1, 4),
    _WingStatsRfdSmartRfRadioNonSsmNeighborsPower_Type()
)
wingStatsRfdSmartRfRadioNonSsmNeighborsPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsPower.setUnits("dBm")
_WingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation_Type = Unsigned32
_WingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation = _WingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8, 1, 5),
    _WingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation_Type()
)
wingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation.setUnits("dB")
_WingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx = _WingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 8, 1, 6),
    _WingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx_Type()
)
wingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmEnergyTable_Object = MibTable
wingStatsRfdSmartRfRadioNonSsmEnergyTable = _WingStatsRfdSmartRfRadioNonSsmEnergyTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 9)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyTable.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmEnergyEntry_Object = MibTableRow
wingStatsRfdSmartRfRadioNonSsmEnergyEntry = _WingStatsRfdSmartRfRadioNonSsmEnergyEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 9, 1)
)
wingStatsRfdSmartRfRadioNonSsmEnergyEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfRadioNonSsmMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyEntry.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmEnergyChannel_Type = DisplayString
_WingStatsRfdSmartRfRadioNonSsmEnergyChannel_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmEnergyChannel = _WingStatsRfdSmartRfRadioNonSsmEnergyChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 9, 1, 1),
    _WingStatsRfdSmartRfRadioNonSsmEnergyChannel_Type()
)
wingStatsRfdSmartRfRadioNonSsmEnergyChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyChannel.setStatus("current")
_WingStatsRfdSmartRfRadioNonSsmEnergyExternal_Type = Integer32
_WingStatsRfdSmartRfRadioNonSsmEnergyExternal_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmEnergyExternal = _WingStatsRfdSmartRfRadioNonSsmEnergyExternal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 9, 1, 2),
    _WingStatsRfdSmartRfRadioNonSsmEnergyExternal_Type()
)
wingStatsRfdSmartRfRadioNonSsmEnergyExternal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyExternal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyExternal.setUnits("dbm")
_WingStatsRfdSmartRfRadioNonSsmEnergyNeighbor_Type = Integer32
_WingStatsRfdSmartRfRadioNonSsmEnergyNeighbor_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmEnergyNeighbor = _WingStatsRfdSmartRfRadioNonSsmEnergyNeighbor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 9, 1, 3),
    _WingStatsRfdSmartRfRadioNonSsmEnergyNeighbor_Type()
)
wingStatsRfdSmartRfRadioNonSsmEnergyNeighbor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyNeighbor.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyNeighbor.setUnits("dbm")
_WingStatsRfdSmartRfRadioNonSsmEnergyNoise_Type = Integer32
_WingStatsRfdSmartRfRadioNonSsmEnergyNoise_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmEnergyNoise = _WingStatsRfdSmartRfRadioNonSsmEnergyNoise_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 9, 1, 4),
    _WingStatsRfdSmartRfRadioNonSsmEnergyNoise_Type()
)
wingStatsRfdSmartRfRadioNonSsmEnergyNoise.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyNoise.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyNoise.setUnits("dbm")
_WingStatsRfdSmartRfRadioNonSsmEnergyTotal_Type = Integer32
_WingStatsRfdSmartRfRadioNonSsmEnergyTotal_Object = MibTableColumn
wingStatsRfdSmartRfRadioNonSsmEnergyTotal = _WingStatsRfdSmartRfRadioNonSsmEnergyTotal_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 9, 1, 5),
    _WingStatsRfdSmartRfRadioNonSsmEnergyTotal_Type()
)
wingStatsRfdSmartRfRadioNonSsmEnergyTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyTotal.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfRadioNonSsmEnergyTotal.setUnits("dbm")
_WingStatsRfdSmartRfApTable_Object = MibTable
wingStatsRfdSmartRfApTable = _WingStatsRfdSmartRfApTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 10)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApTable.setStatus("current")
_WingStatsRfdSmartRfApEntry_Object = MibTableRow
wingStatsRfdSmartRfApEntry = _WingStatsRfdSmartRfApEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 10, 1)
)
wingStatsRfdSmartRfApEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfApMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApEntry.setStatus("current")
_WingStatsRfdSmartRfApMac_Type = WingIdentifier
_WingStatsRfdSmartRfApMac_Object = MibTableColumn
wingStatsRfdSmartRfApMac = _WingStatsRfdSmartRfApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 10, 1, 1),
    _WingStatsRfdSmartRfApMac_Type()
)
wingStatsRfdSmartRfApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApMac.setStatus("current")
_WingStatsRfdSmartRfApNeighborsTable_Object = MibTable
wingStatsRfdSmartRfApNeighborsTable = _WingStatsRfdSmartRfApNeighborsTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsTable.setStatus("current")
_WingStatsRfdSmartRfApNeighborsEntry_Object = MibTableRow
wingStatsRfdSmartRfApNeighborsEntry = _WingStatsRfdSmartRfApNeighborsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1)
)
wingStatsRfdSmartRfApNeighborsEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfApMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsEntry.setStatus("current")
_WingStatsRfdSmartRfApNeighborsMac_Type = DisplayString
_WingStatsRfdSmartRfApNeighborsMac_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsMac = _WingStatsRfdSmartRfApNeighborsMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 1),
    _WingStatsRfdSmartRfApNeighborsMac_Type()
)
wingStatsRfdSmartRfApNeighborsMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsMac.setStatus("current")
_WingStatsRfdSmartRfApNeighborsApMac_Type = DisplayString
_WingStatsRfdSmartRfApNeighborsApMac_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsApMac = _WingStatsRfdSmartRfApNeighborsApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 2),
    _WingStatsRfdSmartRfApNeighborsApMac_Type()
)
wingStatsRfdSmartRfApNeighborsApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsApMac.setStatus("current")


class _WingStatsRfdSmartRfApNeighborsHostname_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfApNeighborsHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsRfdSmartRfApNeighborsHostname_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfApNeighborsHostname_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsHostname = _WingStatsRfdSmartRfApNeighborsHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 3),
    _WingStatsRfdSmartRfApNeighborsHostname_Type()
)
wingStatsRfdSmartRfApNeighborsHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsHostname.setStatus("current")
_WingStatsRfdSmartRfApNeighborsChannel_Type = DisplayString
_WingStatsRfdSmartRfApNeighborsChannel_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsChannel = _WingStatsRfdSmartRfApNeighborsChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 4),
    _WingStatsRfdSmartRfApNeighborsChannel_Type()
)
wingStatsRfdSmartRfApNeighborsChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsChannel.setStatus("current")


class _WingStatsRfdSmartRfApNeighborsPower_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfApNeighborsPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WingStatsRfdSmartRfApNeighborsPower_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfApNeighborsPower_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsPower = _WingStatsRfdSmartRfApNeighborsPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 5),
    _WingStatsRfdSmartRfApNeighborsPower_Type()
)
wingStatsRfdSmartRfApNeighborsPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsPower.setUnits("dBm")
_WingStatsRfdSmartRfApNeighborsAttenuation_Type = Unsigned32
_WingStatsRfdSmartRfApNeighborsAttenuation_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsAttenuation = _WingStatsRfdSmartRfApNeighborsAttenuation_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 6),
    _WingStatsRfdSmartRfApNeighborsAttenuation_Type()
)
wingStatsRfdSmartRfApNeighborsAttenuation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsAttenuation.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsAttenuation.setUnits("dB")
_WingStatsRfdSmartRfApNeighborsInterference_Type = Integer32
_WingStatsRfdSmartRfApNeighborsInterference_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsInterference = _WingStatsRfdSmartRfApNeighborsInterference_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 7),
    _WingStatsRfdSmartRfApNeighborsInterference_Type()
)
wingStatsRfdSmartRfApNeighborsInterference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsInterference.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsInterference.setUnits("dbm")
_WingStatsRfdSmartRfApNeighborsRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfApNeighborsRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsRadioIdx = _WingStatsRfdSmartRfApNeighborsRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 8),
    _WingStatsRfdSmartRfApNeighborsRadioIdx_Type()
)
wingStatsRfdSmartRfApNeighborsRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsRadioIdx.setStatus("current")
_WingStatsRfdSmartRfApNeighborsListenerIdx_Type = Unsigned32
_WingStatsRfdSmartRfApNeighborsListenerIdx_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsListenerIdx = _WingStatsRfdSmartRfApNeighborsListenerIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 9),
    _WingStatsRfdSmartRfApNeighborsListenerIdx_Type()
)
wingStatsRfdSmartRfApNeighborsListenerIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsListenerIdx.setStatus("current")
_WingStatsRfdSmartRfApNeighborsListenerMac_Type = DisplayString
_WingStatsRfdSmartRfApNeighborsListenerMac_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsListenerMac = _WingStatsRfdSmartRfApNeighborsListenerMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 10),
    _WingStatsRfdSmartRfApNeighborsListenerMac_Type()
)
wingStatsRfdSmartRfApNeighborsListenerMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsListenerMac.setStatus("current")
_WingStatsRfdSmartRfApNeighborsType_Type = DisplayString
_WingStatsRfdSmartRfApNeighborsType_Object = MibTableColumn
wingStatsRfdSmartRfApNeighborsType = _WingStatsRfdSmartRfApNeighborsType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 11, 1, 11),
    _WingStatsRfdSmartRfApNeighborsType_Type()
)
wingStatsRfdSmartRfApNeighborsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfApNeighborsType.setStatus("current")
_WingStatsRfdSmartRfHighActRadiosTable_Object = MibTable
wingStatsRfdSmartRfHighActRadiosTable = _WingStatsRfdSmartRfHighActRadiosTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosTable.setStatus("current")
_WingStatsRfdSmartRfHighActRadiosEntry_Object = MibTableRow
wingStatsRfdSmartRfHighActRadiosEntry = _WingStatsRfdSmartRfHighActRadiosEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1)
)
wingStatsRfdSmartRfHighActRadiosEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosEntry.setStatus("current")
_WingStatsRfdSmartRfHighActRadiosMac_Type = DisplayString
_WingStatsRfdSmartRfHighActRadiosMac_Object = MibTableColumn
wingStatsRfdSmartRfHighActRadiosMac = _WingStatsRfdSmartRfHighActRadiosMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1, 1),
    _WingStatsRfdSmartRfHighActRadiosMac_Type()
)
wingStatsRfdSmartRfHighActRadiosMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosMac.setStatus("current")
_WingStatsRfdSmartRfHighActRadiosApMac_Type = DisplayString
_WingStatsRfdSmartRfHighActRadiosApMac_Object = MibTableColumn
wingStatsRfdSmartRfHighActRadiosApMac = _WingStatsRfdSmartRfHighActRadiosApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1, 2),
    _WingStatsRfdSmartRfHighActRadiosApMac_Type()
)
wingStatsRfdSmartRfHighActRadiosApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosApMac.setStatus("current")


class _WingStatsRfdSmartRfHighActRadiosHostname_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfHighActRadiosHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsRfdSmartRfHighActRadiosHostname_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfHighActRadiosHostname_Object = MibTableColumn
wingStatsRfdSmartRfHighActRadiosHostname = _WingStatsRfdSmartRfHighActRadiosHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1, 3),
    _WingStatsRfdSmartRfHighActRadiosHostname_Type()
)
wingStatsRfdSmartRfHighActRadiosHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosHostname.setStatus("current")
_WingStatsRfdSmartRfHighActRadiosType_Type = DisplayString
_WingStatsRfdSmartRfHighActRadiosType_Object = MibTableColumn
wingStatsRfdSmartRfHighActRadiosType = _WingStatsRfdSmartRfHighActRadiosType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1, 4),
    _WingStatsRfdSmartRfHighActRadiosType_Type()
)
wingStatsRfdSmartRfHighActRadiosType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosType.setStatus("current")


class _WingStatsRfdSmartRfHighActRadiosPowerChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHighActRadiosPowerChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfHighActRadiosPowerChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHighActRadiosPowerChanges_Object = MibTableColumn
wingStatsRfdSmartRfHighActRadiosPowerChanges = _WingStatsRfdSmartRfHighActRadiosPowerChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1, 5),
    _WingStatsRfdSmartRfHighActRadiosPowerChanges_Type()
)
wingStatsRfdSmartRfHighActRadiosPowerChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosPowerChanges.setStatus("current")


class _WingStatsRfdSmartRfHighActRadiosChannelChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHighActRadiosChannelChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfHighActRadiosChannelChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHighActRadiosChannelChanges_Object = MibTableColumn
wingStatsRfdSmartRfHighActRadiosChannelChanges = _WingStatsRfdSmartRfHighActRadiosChannelChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1, 6),
    _WingStatsRfdSmartRfHighActRadiosChannelChanges_Type()
)
wingStatsRfdSmartRfHighActRadiosChannelChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosChannelChanges.setStatus("current")


class _WingStatsRfdSmartRfHighActRadiosCoverageChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHighActRadiosCoverageChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_WingStatsRfdSmartRfHighActRadiosCoverageChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHighActRadiosCoverageChanges_Object = MibTableColumn
wingStatsRfdSmartRfHighActRadiosCoverageChanges = _WingStatsRfdSmartRfHighActRadiosCoverageChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 12, 1, 7),
    _WingStatsRfdSmartRfHighActRadiosCoverageChanges_Type()
)
wingStatsRfdSmartRfHighActRadiosCoverageChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHighActRadiosCoverageChanges.setStatus("current")
_WingStatsRfdSmartRfHistoryTable_Object = MibTable
wingStatsRfdSmartRfHistoryTable = _WingStatsRfdSmartRfHistoryTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryTable.setStatus("current")
_WingStatsRfdSmartRfHistoryEntry_Object = MibTableRow
wingStatsRfdSmartRfHistoryEntry = _WingStatsRfdSmartRfHistoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1)
)
wingStatsRfdSmartRfHistoryEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryEntry.setStatus("current")
_WingStatsRfdSmartRfHistoryTime_Type = Unsigned32
_WingStatsRfdSmartRfHistoryTime_Object = MibTableColumn
wingStatsRfdSmartRfHistoryTime = _WingStatsRfdSmartRfHistoryTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1, 1),
    _WingStatsRfdSmartRfHistoryTime_Type()
)
wingStatsRfdSmartRfHistoryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryTime.setStatus("current")
_WingStatsRfdSmartRfHistoryApMac_Type = DisplayString
_WingStatsRfdSmartRfHistoryApMac_Object = MibTableColumn
wingStatsRfdSmartRfHistoryApMac = _WingStatsRfdSmartRfHistoryApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1, 2),
    _WingStatsRfdSmartRfHistoryApMac_Type()
)
wingStatsRfdSmartRfHistoryApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryApMac.setStatus("current")


class _WingStatsRfdSmartRfHistoryHostname_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfHistoryHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(64, 64),
    )
    fixed_length = 64


_WingStatsRfdSmartRfHistoryHostname_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfHistoryHostname_Object = MibTableColumn
wingStatsRfdSmartRfHistoryHostname = _WingStatsRfdSmartRfHistoryHostname_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1, 3),
    _WingStatsRfdSmartRfHistoryHostname_Type()
)
wingStatsRfdSmartRfHistoryHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryHostname.setStatus("current")
_WingStatsRfdSmartRfHistoryRadioMac_Type = DisplayString
_WingStatsRfdSmartRfHistoryRadioMac_Object = MibTableColumn
wingStatsRfdSmartRfHistoryRadioMac = _WingStatsRfdSmartRfHistoryRadioMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1, 4),
    _WingStatsRfdSmartRfHistoryRadioMac_Type()
)
wingStatsRfdSmartRfHistoryRadioMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryRadioMac.setStatus("current")
_WingStatsRfdSmartRfHistoryRadioIdx_Type = Integer32
_WingStatsRfdSmartRfHistoryRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfHistoryRadioIdx = _WingStatsRfdSmartRfHistoryRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1, 5),
    _WingStatsRfdSmartRfHistoryRadioIdx_Type()
)
wingStatsRfdSmartRfHistoryRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryRadioIdx.setStatus("current")


class _WingStatsRfdSmartRfHistoryOldValue_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfHistoryOldValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingStatsRfdSmartRfHistoryOldValue_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfHistoryOldValue_Object = MibTableColumn
wingStatsRfdSmartRfHistoryOldValue = _WingStatsRfdSmartRfHistoryOldValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1, 6),
    _WingStatsRfdSmartRfHistoryOldValue_Type()
)
wingStatsRfdSmartRfHistoryOldValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryOldValue.setStatus("current")


class _WingStatsRfdSmartRfHistoryNewValue_Type(DisplayString):
    """Custom type wingStatsRfdSmartRfHistoryNewValue based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )
    fixed_length = 32


_WingStatsRfdSmartRfHistoryNewValue_Type.__name__ = "DisplayString"
_WingStatsRfdSmartRfHistoryNewValue_Object = MibTableColumn
wingStatsRfdSmartRfHistoryNewValue = _WingStatsRfdSmartRfHistoryNewValue_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 13, 1, 7),
    _WingStatsRfdSmartRfHistoryNewValue_Type()
)
wingStatsRfdSmartRfHistoryNewValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryNewValue.setStatus("current")
_WingStatsRfdSmartRfHistoryDaysTable_Object = MibTable
wingStatsRfdSmartRfHistoryDaysTable = _WingStatsRfdSmartRfHistoryDaysTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 14)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryDaysTable.setStatus("current")
_WingStatsRfdSmartRfHistoryDaysEntry_Object = MibTableRow
wingStatsRfdSmartRfHistoryDaysEntry = _WingStatsRfdSmartRfHistoryDaysEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 14, 1)
)
wingStatsRfdSmartRfHistoryDaysEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryDaysEntry.setStatus("current")
_WingStatsRfdSmartRfHistoryDaysTime_Type = Unsigned32
_WingStatsRfdSmartRfHistoryDaysTime_Object = MibTableColumn
wingStatsRfdSmartRfHistoryDaysTime = _WingStatsRfdSmartRfHistoryDaysTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 14, 1, 1),
    _WingStatsRfdSmartRfHistoryDaysTime_Type()
)
wingStatsRfdSmartRfHistoryDaysTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryDaysTime.setStatus("current")


class _WingStatsRfdSmartRfHistoryDaysPowerChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHistoryDaysPowerChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfHistoryDaysPowerChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHistoryDaysPowerChanges_Object = MibTableColumn
wingStatsRfdSmartRfHistoryDaysPowerChanges = _WingStatsRfdSmartRfHistoryDaysPowerChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 14, 1, 2),
    _WingStatsRfdSmartRfHistoryDaysPowerChanges_Type()
)
wingStatsRfdSmartRfHistoryDaysPowerChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryDaysPowerChanges.setStatus("current")


class _WingStatsRfdSmartRfHistoryDaysChannelChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHistoryDaysChannelChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfHistoryDaysChannelChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHistoryDaysChannelChanges_Object = MibTableColumn
wingStatsRfdSmartRfHistoryDaysChannelChanges = _WingStatsRfdSmartRfHistoryDaysChannelChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 14, 1, 3),
    _WingStatsRfdSmartRfHistoryDaysChannelChanges_Type()
)
wingStatsRfdSmartRfHistoryDaysChannelChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryDaysChannelChanges.setStatus("current")


class _WingStatsRfdSmartRfHistoryDaysCoverageChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHistoryDaysCoverageChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfHistoryDaysCoverageChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHistoryDaysCoverageChanges_Object = MibTableColumn
wingStatsRfdSmartRfHistoryDaysCoverageChanges = _WingStatsRfdSmartRfHistoryDaysCoverageChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 14, 1, 4),
    _WingStatsRfdSmartRfHistoryDaysCoverageChanges_Type()
)
wingStatsRfdSmartRfHistoryDaysCoverageChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryDaysCoverageChanges.setStatus("current")
_WingStatsRfdSmartRfHistoryHoursTable_Object = MibTable
wingStatsRfdSmartRfHistoryHoursTable = _WingStatsRfdSmartRfHistoryHoursTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 15)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryHoursTable.setStatus("current")
_WingStatsRfdSmartRfHistoryHoursEntry_Object = MibTableRow
wingStatsRfdSmartRfHistoryHoursEntry = _WingStatsRfdSmartRfHistoryHoursEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 15, 1)
)
wingStatsRfdSmartRfHistoryHoursEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryHoursEntry.setStatus("current")
_WingStatsRfdSmartRfHistoryHoursTime_Type = Unsigned32
_WingStatsRfdSmartRfHistoryHoursTime_Object = MibTableColumn
wingStatsRfdSmartRfHistoryHoursTime = _WingStatsRfdSmartRfHistoryHoursTime_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 15, 1, 1),
    _WingStatsRfdSmartRfHistoryHoursTime_Type()
)
wingStatsRfdSmartRfHistoryHoursTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryHoursTime.setStatus("current")


class _WingStatsRfdSmartRfHistoryHoursPowerChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHistoryHoursPowerChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfHistoryHoursPowerChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHistoryHoursPowerChanges_Object = MibTableColumn
wingStatsRfdSmartRfHistoryHoursPowerChanges = _WingStatsRfdSmartRfHistoryHoursPowerChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 15, 1, 2),
    _WingStatsRfdSmartRfHistoryHoursPowerChanges_Type()
)
wingStatsRfdSmartRfHistoryHoursPowerChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryHoursPowerChanges.setStatus("current")


class _WingStatsRfdSmartRfHistoryHoursChannelChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHistoryHoursChannelChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfHistoryHoursChannelChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHistoryHoursChannelChanges_Object = MibTableColumn
wingStatsRfdSmartRfHistoryHoursChannelChanges = _WingStatsRfdSmartRfHistoryHoursChannelChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 15, 1, 3),
    _WingStatsRfdSmartRfHistoryHoursChannelChanges_Type()
)
wingStatsRfdSmartRfHistoryHoursChannelChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryHoursChannelChanges.setStatus("current")


class _WingStatsRfdSmartRfHistoryHoursCoverageChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfHistoryHoursCoverageChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfHistoryHoursCoverageChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfHistoryHoursCoverageChanges_Object = MibTableColumn
wingStatsRfdSmartRfHistoryHoursCoverageChanges = _WingStatsRfdSmartRfHistoryHoursCoverageChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 15, 1, 4),
    _WingStatsRfdSmartRfHistoryHoursCoverageChanges_Type()
)
wingStatsRfdSmartRfHistoryHoursCoverageChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfHistoryHoursCoverageChanges.setStatus("current")
_WingStatsRfdSmartRfDashboardHistoryTable_Object = MibTable
wingStatsRfdSmartRfDashboardHistoryTable = _WingStatsRfdSmartRfDashboardHistoryTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 16)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfDashboardHistoryTable.setStatus("current")
_WingStatsRfdSmartRfDashboardHistoryEntry_Object = MibTableRow
wingStatsRfdSmartRfDashboardHistoryEntry = _WingStatsRfdSmartRfDashboardHistoryEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 16, 1)
)
wingStatsRfdSmartRfDashboardHistoryEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfDashboardHistoryEntry.setStatus("current")
_WingStatsRfdSmartRfDashboardHistoryDetails_Type = DisplayString
_WingStatsRfdSmartRfDashboardHistoryDetails_Object = MibTableColumn
wingStatsRfdSmartRfDashboardHistoryDetails = _WingStatsRfdSmartRfDashboardHistoryDetails_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 16, 1, 1),
    _WingStatsRfdSmartRfDashboardHistoryDetails_Type()
)
wingStatsRfdSmartRfDashboardHistoryDetails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfDashboardHistoryDetails.setStatus("current")


class _WingStatsRfdSmartRfDashboardHistoryPowerChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfDashboardHistoryPowerChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfDashboardHistoryPowerChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfDashboardHistoryPowerChanges_Object = MibTableColumn
wingStatsRfdSmartRfDashboardHistoryPowerChanges = _WingStatsRfdSmartRfDashboardHistoryPowerChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 16, 1, 2),
    _WingStatsRfdSmartRfDashboardHistoryPowerChanges_Type()
)
wingStatsRfdSmartRfDashboardHistoryPowerChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfDashboardHistoryPowerChanges.setStatus("current")


class _WingStatsRfdSmartRfDashboardHistoryChannelChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfDashboardHistoryChannelChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfDashboardHistoryChannelChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfDashboardHistoryChannelChanges_Object = MibTableColumn
wingStatsRfdSmartRfDashboardHistoryChannelChanges = _WingStatsRfdSmartRfDashboardHistoryChannelChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 16, 1, 3),
    _WingStatsRfdSmartRfDashboardHistoryChannelChanges_Type()
)
wingStatsRfdSmartRfDashboardHistoryChannelChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfDashboardHistoryChannelChanges.setStatus("current")


class _WingStatsRfdSmartRfDashboardHistoryCoverageChanges_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfDashboardHistoryCoverageChanges based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WingStatsRfdSmartRfDashboardHistoryCoverageChanges_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfDashboardHistoryCoverageChanges_Object = MibTableColumn
wingStatsRfdSmartRfDashboardHistoryCoverageChanges = _WingStatsRfdSmartRfDashboardHistoryCoverageChanges_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 16, 1, 4),
    _WingStatsRfdSmartRfDashboardHistoryCoverageChanges_Type()
)
wingStatsRfdSmartRfDashboardHistoryCoverageChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfDashboardHistoryCoverageChanges.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultTable_Object = MibTable
wingStatsRfdSmartRfCalibrateResultTable = _WingStatsRfdSmartRfCalibrateResultTable_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17)
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultTable.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultEntry_Object = MibTableRow
wingStatsRfdSmartRfCalibrateResultEntry = _WingStatsRfdSmartRfCalibrateResultEntry_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1)
)
wingStatsRfdSmartRfCalibrateResultEntry.setIndexNames(
    (0, "WING-MIB", "wingStatsRfdName"),
    (0, "WING-MIB", "wingStatsRfdSmartRfCalibrateResultMac"),
)
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultEntry.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultMac_Type = WingIdentifier
_WingStatsRfdSmartRfCalibrateResultMac_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultMac = _WingStatsRfdSmartRfCalibrateResultMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 1),
    _WingStatsRfdSmartRfCalibrateResultMac_Type()
)
wingStatsRfdSmartRfCalibrateResultMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultMac.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultResultMac_Type = DisplayString
_WingStatsRfdSmartRfCalibrateResultResultMac_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultResultMac = _WingStatsRfdSmartRfCalibrateResultResultMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 3),
    _WingStatsRfdSmartRfCalibrateResultResultMac_Type()
)
wingStatsRfdSmartRfCalibrateResultResultMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultResultMac.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultApMac_Type = DisplayString
_WingStatsRfdSmartRfCalibrateResultApMac_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultApMac = _WingStatsRfdSmartRfCalibrateResultApMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 4),
    _WingStatsRfdSmartRfCalibrateResultApMac_Type()
)
wingStatsRfdSmartRfCalibrateResultApMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultApMac.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultChannel_Type = DisplayString
_WingStatsRfdSmartRfCalibrateResultChannel_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultChannel = _WingStatsRfdSmartRfCalibrateResultChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 5),
    _WingStatsRfdSmartRfCalibrateResultChannel_Type()
)
wingStatsRfdSmartRfCalibrateResultChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultChannel.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultOldChannel_Type = DisplayString
_WingStatsRfdSmartRfCalibrateResultOldChannel_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultOldChannel = _WingStatsRfdSmartRfCalibrateResultOldChannel_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 6),
    _WingStatsRfdSmartRfCalibrateResultOldChannel_Type()
)
wingStatsRfdSmartRfCalibrateResultOldChannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultOldChannel.setStatus("current")


class _WingStatsRfdSmartRfCalibrateResultPower_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfCalibrateResultPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WingStatsRfdSmartRfCalibrateResultPower_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfCalibrateResultPower_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultPower = _WingStatsRfdSmartRfCalibrateResultPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 7),
    _WingStatsRfdSmartRfCalibrateResultPower_Type()
)
wingStatsRfdSmartRfCalibrateResultPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultPower.setUnits("dBm")


class _WingStatsRfdSmartRfCalibrateResultOldPower_Type(Unsigned32):
    """Custom type wingStatsRfdSmartRfCalibrateResultOldPower based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_WingStatsRfdSmartRfCalibrateResultOldPower_Type.__name__ = "Unsigned32"
_WingStatsRfdSmartRfCalibrateResultOldPower_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultOldPower = _WingStatsRfdSmartRfCalibrateResultOldPower_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 8),
    _WingStatsRfdSmartRfCalibrateResultOldPower_Type()
)
wingStatsRfdSmartRfCalibrateResultOldPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultOldPower.setStatus("current")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultOldPower.setUnits("dBm")
_WingStatsRfdSmartRfCalibrateResultRadioIdx_Type = Unsigned32
_WingStatsRfdSmartRfCalibrateResultRadioIdx_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultRadioIdx = _WingStatsRfdSmartRfCalibrateResultRadioIdx_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 9),
    _WingStatsRfdSmartRfCalibrateResultRadioIdx_Type()
)
wingStatsRfdSmartRfCalibrateResultRadioIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultRadioIdx.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultState_Type = DisplayString
_WingStatsRfdSmartRfCalibrateResultState_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultState = _WingStatsRfdSmartRfCalibrateResultState_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 10),
    _WingStatsRfdSmartRfCalibrateResultState_Type()
)
wingStatsRfdSmartRfCalibrateResultState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultState.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultType_Type = DisplayString
_WingStatsRfdSmartRfCalibrateResultType_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultType = _WingStatsRfdSmartRfCalibrateResultType_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 11),
    _WingStatsRfdSmartRfCalibrateResultType_Type()
)
wingStatsRfdSmartRfCalibrateResultType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultType.setStatus("current")
_WingStatsRfdSmartRfCalibrateResultSmartSensor_Type = TruthValue
_WingStatsRfdSmartRfCalibrateResultSmartSensor_Object = MibTableColumn
wingStatsRfdSmartRfCalibrateResultSmartSensor = _WingStatsRfdSmartRfCalibrateResultSmartSensor_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 4, 3, 5, 17, 1, 12),
    _WingStatsRfdSmartRfCalibrateResultSmartSensor_Type()
)
wingStatsRfdSmartRfCalibrateResultSmartSensor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingStatsRfdSmartRfCalibrateResultSmartSensor.setStatus("current")
_WingAction_ObjectIdentity = ObjectIdentity
wingAction = _WingAction_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5)
)
_WingActionFileCopy_ObjectIdentity = ObjectIdentity
wingActionFileCopy = _WingActionFileCopy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1)
)
_WingActionFileCopyIn_ObjectIdentity = ObjectIdentity
wingActionFileCopyIn = _WingActionFileCopyIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 1)
)
_WingActionFileCopyInMac_Type = MacAddress
_WingActionFileCopyInMac_Object = MibScalar
wingActionFileCopyInMac = _WingActionFileCopyInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 1, 1),
    _WingActionFileCopyInMac_Type()
)
wingActionFileCopyInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionFileCopyInMac.setStatus("current")
_WingActionFileCopyInFrom_Type = DisplayString
_WingActionFileCopyInFrom_Object = MibScalar
wingActionFileCopyInFrom = _WingActionFileCopyInFrom_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 1, 2),
    _WingActionFileCopyInFrom_Type()
)
wingActionFileCopyInFrom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionFileCopyInFrom.setStatus("current")
_WingActionFileCopyInTo_Type = DisplayString
_WingActionFileCopyInTo_Object = MibScalar
wingActionFileCopyInTo = _WingActionFileCopyInTo_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 1, 3),
    _WingActionFileCopyInTo_Type()
)
wingActionFileCopyInTo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionFileCopyInTo.setStatus("current")
_WingActionFileCopyOut_ObjectIdentity = ObjectIdentity
wingActionFileCopyOut = _WingActionFileCopyOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 2)
)
_WingActionFileCopyOutStatus_Type = TruthValue
_WingActionFileCopyOutStatus_Object = MibScalar
wingActionFileCopyOutStatus = _WingActionFileCopyOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 2, 1),
    _WingActionFileCopyOutStatus_Type()
)
wingActionFileCopyOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionFileCopyOutStatus.setStatus("current")
_WingActionFileCopyOutMessage_Type = DisplayString
_WingActionFileCopyOutMessage_Object = MibScalar
wingActionFileCopyOutMessage = _WingActionFileCopyOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 2, 2),
    _WingActionFileCopyOutMessage_Type()
)
wingActionFileCopyOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionFileCopyOutMessage.setStatus("current")
_WingActionFileCopyRun_Type = WingDoActionNow
_WingActionFileCopyRun_Object = MibScalar
wingActionFileCopyRun = _WingActionFileCopyRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 1, 3),
    _WingActionFileCopyRun_Type()
)
wingActionFileCopyRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionFileCopyRun.setStatus("current")
_WingActionFileMD5sum_ObjectIdentity = ObjectIdentity
wingActionFileMD5sum = _WingActionFileMD5sum_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2)
)
_WingActionFileMD5sumIn_ObjectIdentity = ObjectIdentity
wingActionFileMD5sumIn = _WingActionFileMD5sumIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2, 1)
)
_WingActionFileMD5sumInMac_Type = MacAddress
_WingActionFileMD5sumInMac_Object = MibScalar
wingActionFileMD5sumInMac = _WingActionFileMD5sumInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2, 1, 1),
    _WingActionFileMD5sumInMac_Type()
)
wingActionFileMD5sumInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionFileMD5sumInMac.setStatus("current")
_WingActionFileMD5sumInPath_Type = DisplayString
_WingActionFileMD5sumInPath_Object = MibScalar
wingActionFileMD5sumInPath = _WingActionFileMD5sumInPath_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2, 1, 2),
    _WingActionFileMD5sumInPath_Type()
)
wingActionFileMD5sumInPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionFileMD5sumInPath.setStatus("current")
_WingActionFileMD5sumOut_ObjectIdentity = ObjectIdentity
wingActionFileMD5sumOut = _WingActionFileMD5sumOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2, 2)
)
_WingActionFileMD5sumOutStatus_Type = TruthValue
_WingActionFileMD5sumOutStatus_Object = MibScalar
wingActionFileMD5sumOutStatus = _WingActionFileMD5sumOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2, 2, 1),
    _WingActionFileMD5sumOutStatus_Type()
)
wingActionFileMD5sumOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionFileMD5sumOutStatus.setStatus("current")
_WingActionFileMD5sumOutMessage_Type = DisplayString
_WingActionFileMD5sumOutMessage_Object = MibScalar
wingActionFileMD5sumOutMessage = _WingActionFileMD5sumOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2, 2, 2),
    _WingActionFileMD5sumOutMessage_Type()
)
wingActionFileMD5sumOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionFileMD5sumOutMessage.setStatus("current")
_WingActionFileMD5sumRun_Type = WingDoActionNow
_WingActionFileMD5sumRun_Object = MibScalar
wingActionFileMD5sumRun = _WingActionFileMD5sumRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 2, 3),
    _WingActionFileMD5sumRun_Type()
)
wingActionFileMD5sumRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionFileMD5sumRun.setStatus("current")
_WingActionDisassociateClient_ObjectIdentity = ObjectIdentity
wingActionDisassociateClient = _WingActionDisassociateClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3)
)
_WingActionDisassociateClientIn_ObjectIdentity = ObjectIdentity
wingActionDisassociateClientIn = _WingActionDisassociateClientIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 1)
)
_WingActionDisassociateClientInRfDomainName_Type = DisplayString
_WingActionDisassociateClientInRfDomainName_Object = MibScalar
wingActionDisassociateClientInRfDomainName = _WingActionDisassociateClientInRfDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 1, 1),
    _WingActionDisassociateClientInRfDomainName_Type()
)
wingActionDisassociateClientInRfDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionDisassociateClientInRfDomainName.setStatus("current")
_WingActionDisassociateClientInWlanNameORClientMac_ObjectIdentity = ObjectIdentity
wingActionDisassociateClientInWlanNameORClientMac = _WingActionDisassociateClientInWlanNameORClientMac_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 1, 2)
)
_WingActionDisassociateClientInMac_Type = MacAddress
_WingActionDisassociateClientInMac_Object = MibScalar
wingActionDisassociateClientInMac = _WingActionDisassociateClientInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 1, 2, 1),
    _WingActionDisassociateClientInMac_Type()
)
wingActionDisassociateClientInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionDisassociateClientInMac.setStatus("current")
_WingActionDisassociateClientInWlanName_Type = DisplayString
_WingActionDisassociateClientInWlanName_Object = MibScalar
wingActionDisassociateClientInWlanName = _WingActionDisassociateClientInWlanName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 1, 2, 2),
    _WingActionDisassociateClientInWlanName_Type()
)
wingActionDisassociateClientInWlanName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionDisassociateClientInWlanName.setStatus("current")
_WingActionDisassociateClientOut_ObjectIdentity = ObjectIdentity
wingActionDisassociateClientOut = _WingActionDisassociateClientOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 2)
)
_WingActionDisassociateClientOutStatus_Type = TruthValue
_WingActionDisassociateClientOutStatus_Object = MibScalar
wingActionDisassociateClientOutStatus = _WingActionDisassociateClientOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 2, 1),
    _WingActionDisassociateClientOutStatus_Type()
)
wingActionDisassociateClientOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionDisassociateClientOutStatus.setStatus("current")
_WingActionDisassociateClientOutMessage_Type = DisplayString
_WingActionDisassociateClientOutMessage_Object = MibScalar
wingActionDisassociateClientOutMessage = _WingActionDisassociateClientOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 2, 2),
    _WingActionDisassociateClientOutMessage_Type()
)
wingActionDisassociateClientOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionDisassociateClientOutMessage.setStatus("current")
_WingActionDisassociateClientRun_Type = WingDoActionNow
_WingActionDisassociateClientRun_Object = MibScalar
wingActionDisassociateClientRun = _WingActionDisassociateClientRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 3, 3),
    _WingActionDisassociateClientRun_Type()
)
wingActionDisassociateClientRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionDisassociateClientRun.setStatus("current")
_WingActionReload_ObjectIdentity = ObjectIdentity
wingActionReload = _WingActionReload_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4)
)
_WingActionReloadIn_ObjectIdentity = ObjectIdentity
wingActionReloadIn = _WingActionReloadIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 1)
)
_WingActionReloadInMac_Type = MacAddress
_WingActionReloadInMac_Object = MibScalar
wingActionReloadInMac = _WingActionReloadInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 1, 1),
    _WingActionReloadInMac_Type()
)
wingActionReloadInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReloadInMac.setStatus("current")
_WingActionReloadInForce_Type = TruthValue
_WingActionReloadInForce_Object = MibScalar
wingActionReloadInForce = _WingActionReloadInForce_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 1, 2),
    _WingActionReloadInForce_Type()
)
wingActionReloadInForce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReloadInForce.setStatus("current")


class _WingActionReloadInTimeout_Type(Unsigned32):
    """Custom type wingActionReloadInTimeout based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_WingActionReloadInTimeout_Type.__name__ = "Unsigned32"
_WingActionReloadInTimeout_Object = MibScalar
wingActionReloadInTimeout = _WingActionReloadInTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 1, 3),
    _WingActionReloadInTimeout_Type()
)
wingActionReloadInTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReloadInTimeout.setStatus("current")
if mibBuilder.loadTexts:
    wingActionReloadInTimeout.setUnits("minutes")
_WingActionReloadInReason_Type = DisplayString
_WingActionReloadInReason_Object = MibScalar
wingActionReloadInReason = _WingActionReloadInReason_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 1, 4),
    _WingActionReloadInReason_Type()
)
wingActionReloadInReason.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReloadInReason.setStatus("current")
_WingActionReloadOut_ObjectIdentity = ObjectIdentity
wingActionReloadOut = _WingActionReloadOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 2)
)
_WingActionReloadOutStatus_Type = TruthValue
_WingActionReloadOutStatus_Object = MibScalar
wingActionReloadOutStatus = _WingActionReloadOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 2, 1),
    _WingActionReloadOutStatus_Type()
)
wingActionReloadOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionReloadOutStatus.setStatus("current")
_WingActionReloadOutMessage_Type = DisplayString
_WingActionReloadOutMessage_Object = MibScalar
wingActionReloadOutMessage = _WingActionReloadOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 2, 2),
    _WingActionReloadOutMessage_Type()
)
wingActionReloadOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionReloadOutMessage.setStatus("current")
_WingActionReloadRun_Type = WingDoActionNow
_WingActionReloadRun_Object = MibScalar
wingActionReloadRun = _WingActionReloadRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 4, 3),
    _WingActionReloadRun_Type()
)
wingActionReloadRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReloadRun.setStatus("current")
_WingActionReElectTunnelController_ObjectIdentity = ObjectIdentity
wingActionReElectTunnelController = _WingActionReElectTunnelController_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5)
)
_WingActionReElectTunnelControllerIn_ObjectIdentity = ObjectIdentity
wingActionReElectTunnelControllerIn = _WingActionReElectTunnelControllerIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5, 1)
)
_WingActionReElectTunnelControllerInMac_Type = MacAddress
_WingActionReElectTunnelControllerInMac_Object = MibScalar
wingActionReElectTunnelControllerInMac = _WingActionReElectTunnelControllerInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5, 1, 1),
    _WingActionReElectTunnelControllerInMac_Type()
)
wingActionReElectTunnelControllerInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReElectTunnelControllerInMac.setStatus("current")
_WingActionReElectTunnelControllerInName_Type = DisplayString
_WingActionReElectTunnelControllerInName_Object = MibScalar
wingActionReElectTunnelControllerInName = _WingActionReElectTunnelControllerInName_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5, 1, 2),
    _WingActionReElectTunnelControllerInName_Type()
)
wingActionReElectTunnelControllerInName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReElectTunnelControllerInName.setStatus("current")
_WingActionReElectTunnelControllerOut_ObjectIdentity = ObjectIdentity
wingActionReElectTunnelControllerOut = _WingActionReElectTunnelControllerOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5, 2)
)
_WingActionReElectTunnelControllerOutStatus_Type = TruthValue
_WingActionReElectTunnelControllerOutStatus_Object = MibScalar
wingActionReElectTunnelControllerOutStatus = _WingActionReElectTunnelControllerOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5, 2, 1),
    _WingActionReElectTunnelControllerOutStatus_Type()
)
wingActionReElectTunnelControllerOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionReElectTunnelControllerOutStatus.setStatus("current")
_WingActionReElectTunnelControllerOutMessage_Type = DisplayString
_WingActionReElectTunnelControllerOutMessage_Object = MibScalar
wingActionReElectTunnelControllerOutMessage = _WingActionReElectTunnelControllerOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5, 2, 2),
    _WingActionReElectTunnelControllerOutMessage_Type()
)
wingActionReElectTunnelControllerOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionReElectTunnelControllerOutMessage.setStatus("current")
_WingActionReElectTunnelControllerRun_Type = WingDoActionNow
_WingActionReElectTunnelControllerRun_Object = MibScalar
wingActionReElectTunnelControllerRun = _WingActionReElectTunnelControllerRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 5, 3),
    _WingActionReElectTunnelControllerRun_Type()
)
wingActionReElectTunnelControllerRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionReElectTunnelControllerRun.setStatus("current")
_WingActionClearIpOspf_ObjectIdentity = ObjectIdentity
wingActionClearIpOspf = _WingActionClearIpOspf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 6)
)
_WingActionClearIpOspfIn_ObjectIdentity = ObjectIdentity
wingActionClearIpOspfIn = _WingActionClearIpOspfIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 6, 1)
)
_WingActionClearIpOspfInMac_Type = MacAddress
_WingActionClearIpOspfInMac_Object = MibScalar
wingActionClearIpOspfInMac = _WingActionClearIpOspfInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 6, 1, 1),
    _WingActionClearIpOspfInMac_Type()
)
wingActionClearIpOspfInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearIpOspfInMac.setStatus("current")
_WingActionClearIpOspfOut_ObjectIdentity = ObjectIdentity
wingActionClearIpOspfOut = _WingActionClearIpOspfOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 6, 2)
)
_WingActionClearIpOspfOutStatus_Type = TruthValue
_WingActionClearIpOspfOutStatus_Object = MibScalar
wingActionClearIpOspfOutStatus = _WingActionClearIpOspfOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 6, 2, 1),
    _WingActionClearIpOspfOutStatus_Type()
)
wingActionClearIpOspfOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearIpOspfOutStatus.setStatus("current")
_WingActionClearIpOspfOutMessage_Type = DisplayString
_WingActionClearIpOspfOutMessage_Object = MibScalar
wingActionClearIpOspfOutMessage = _WingActionClearIpOspfOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 6, 2, 2),
    _WingActionClearIpOspfOutMessage_Type()
)
wingActionClearIpOspfOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearIpOspfOutMessage.setStatus("current")
_WingActionClearIpOspfRun_Type = WingDoActionNow
_WingActionClearIpOspfRun_Object = MibScalar
wingActionClearIpOspfRun = _WingActionClearIpOspfRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 6, 3),
    _WingActionClearIpOspfRun_Type()
)
wingActionClearIpOspfRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearIpOspfRun.setStatus("current")
_WingActionVrrp_ObjectIdentity = ObjectIdentity
wingActionVrrp = _WingActionVrrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7)
)
_WingActionClearVrrpRouterStats_ObjectIdentity = ObjectIdentity
wingActionClearVrrpRouterStats = _WingActionClearVrrpRouterStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 1)
)
_WingActionClearVrrpRouterStatsIn_ObjectIdentity = ObjectIdentity
wingActionClearVrrpRouterStatsIn = _WingActionClearVrrpRouterStatsIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 1, 1)
)
_WingActionClearVrrpRouterStatsInMac_Type = MacAddress
_WingActionClearVrrpRouterStatsInMac_Object = MibScalar
wingActionClearVrrpRouterStatsInMac = _WingActionClearVrrpRouterStatsInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 1, 1, 1),
    _WingActionClearVrrpRouterStatsInMac_Type()
)
wingActionClearVrrpRouterStatsInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearVrrpRouterStatsInMac.setStatus("current")
_WingActionClearVrrpRouterStatsOut_ObjectIdentity = ObjectIdentity
wingActionClearVrrpRouterStatsOut = _WingActionClearVrrpRouterStatsOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 1, 2)
)
_WingActionClearVrrpRouterStatsOutStatus_Type = TruthValue
_WingActionClearVrrpRouterStatsOutStatus_Object = MibScalar
wingActionClearVrrpRouterStatsOutStatus = _WingActionClearVrrpRouterStatsOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 1, 2, 1),
    _WingActionClearVrrpRouterStatsOutStatus_Type()
)
wingActionClearVrrpRouterStatsOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearVrrpRouterStatsOutStatus.setStatus("current")
_WingActionClearVrrpRouterStatsOutMessage_Type = DisplayString
_WingActionClearVrrpRouterStatsOutMessage_Object = MibScalar
wingActionClearVrrpRouterStatsOutMessage = _WingActionClearVrrpRouterStatsOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 1, 2, 2),
    _WingActionClearVrrpRouterStatsOutMessage_Type()
)
wingActionClearVrrpRouterStatsOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearVrrpRouterStatsOutMessage.setStatus("current")
_WingActionClearVrrpRouterStatsRun_Type = WingDoActionNow
_WingActionClearVrrpRouterStatsRun_Object = MibScalar
wingActionClearVrrpRouterStatsRun = _WingActionClearVrrpRouterStatsRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 1, 3),
    _WingActionClearVrrpRouterStatsRun_Type()
)
wingActionClearVrrpRouterStatsRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearVrrpRouterStatsRun.setStatus("current")
_WingActionClearVrrpGlobalErrStats_ObjectIdentity = ObjectIdentity
wingActionClearVrrpGlobalErrStats = _WingActionClearVrrpGlobalErrStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 2)
)
_WingActionClearVrrpGlobalErrStatsIn_ObjectIdentity = ObjectIdentity
wingActionClearVrrpGlobalErrStatsIn = _WingActionClearVrrpGlobalErrStatsIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 2, 1)
)
_WingActionClearVrrpGlobalErrStatsInMac_Type = MacAddress
_WingActionClearVrrpGlobalErrStatsInMac_Object = MibScalar
wingActionClearVrrpGlobalErrStatsInMac = _WingActionClearVrrpGlobalErrStatsInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 2, 1, 1),
    _WingActionClearVrrpGlobalErrStatsInMac_Type()
)
wingActionClearVrrpGlobalErrStatsInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearVrrpGlobalErrStatsInMac.setStatus("current")
_WingActionClearVrrpGlobalErrStatsOut_ObjectIdentity = ObjectIdentity
wingActionClearVrrpGlobalErrStatsOut = _WingActionClearVrrpGlobalErrStatsOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 2, 2)
)
_WingActionClearVrrpGlobalErrStatsOutStatus_Type = TruthValue
_WingActionClearVrrpGlobalErrStatsOutStatus_Object = MibScalar
wingActionClearVrrpGlobalErrStatsOutStatus = _WingActionClearVrrpGlobalErrStatsOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 2, 2, 1),
    _WingActionClearVrrpGlobalErrStatsOutStatus_Type()
)
wingActionClearVrrpGlobalErrStatsOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearVrrpGlobalErrStatsOutStatus.setStatus("current")
_WingActionClearVrrpGlobalErrStatsOutMessage_Type = DisplayString
_WingActionClearVrrpGlobalErrStatsOutMessage_Object = MibScalar
wingActionClearVrrpGlobalErrStatsOutMessage = _WingActionClearVrrpGlobalErrStatsOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 2, 2, 2),
    _WingActionClearVrrpGlobalErrStatsOutMessage_Type()
)
wingActionClearVrrpGlobalErrStatsOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearVrrpGlobalErrStatsOutMessage.setStatus("current")
_WingActionClearVrrpGlobalErrStatsRun_Type = WingDoActionNow
_WingActionClearVrrpGlobalErrStatsRun_Object = MibScalar
wingActionClearVrrpGlobalErrStatsRun = _WingActionClearVrrpGlobalErrStatsRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 7, 2, 3),
    _WingActionClearVrrpGlobalErrStatsRun_Type()
)
wingActionClearVrrpGlobalErrStatsRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearVrrpGlobalErrStatsRun.setStatus("current")
_WingActionL2pv3_ObjectIdentity = ObjectIdentity
wingActionL2pv3 = _WingActionL2pv3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8)
)
_WingActionClearL2tpv3Tunnel_ObjectIdentity = ObjectIdentity
wingActionClearL2tpv3Tunnel = _WingActionClearL2tpv3Tunnel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 1)
)
_WingActionClearL2tpv3TunnelIn_ObjectIdentity = ObjectIdentity
wingActionClearL2tpv3TunnelIn = _WingActionClearL2tpv3TunnelIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 1, 1)
)
_WingActionClearL2tpv3TunnelInMac_Type = MacAddress
_WingActionClearL2tpv3TunnelInMac_Object = MibScalar
wingActionClearL2tpv3TunnelInMac = _WingActionClearL2tpv3TunnelInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 1, 1, 1),
    _WingActionClearL2tpv3TunnelInMac_Type()
)
wingActionClearL2tpv3TunnelInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearL2tpv3TunnelInMac.setStatus("current")
_WingActionClearL2tpv3TunnelOut_ObjectIdentity = ObjectIdentity
wingActionClearL2tpv3TunnelOut = _WingActionClearL2tpv3TunnelOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 1, 2)
)
_WingActionClearL2tpv3TunnelOutStatus_Type = TruthValue
_WingActionClearL2tpv3TunnelOutStatus_Object = MibScalar
wingActionClearL2tpv3TunnelOutStatus = _WingActionClearL2tpv3TunnelOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 1, 2, 1),
    _WingActionClearL2tpv3TunnelOutStatus_Type()
)
wingActionClearL2tpv3TunnelOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearL2tpv3TunnelOutStatus.setStatus("current")
_WingActionClearL2tpv3TunnelOutMessage_Type = DisplayString
_WingActionClearL2tpv3TunnelOutMessage_Object = MibScalar
wingActionClearL2tpv3TunnelOutMessage = _WingActionClearL2tpv3TunnelOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 1, 2, 2),
    _WingActionClearL2tpv3TunnelOutMessage_Type()
)
wingActionClearL2tpv3TunnelOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionClearL2tpv3TunnelOutMessage.setStatus("current")
_WingActionClearL2tpv3TunnelRun_Type = WingDoActionNow
_WingActionClearL2tpv3TunnelRun_Object = MibScalar
wingActionClearL2tpv3TunnelRun = _WingActionClearL2tpv3TunnelRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 1, 3),
    _WingActionClearL2tpv3TunnelRun_Type()
)
wingActionClearL2tpv3TunnelRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionClearL2tpv3TunnelRun.setStatus("current")
_WingActionConnectL2tpv3Tunnel_ObjectIdentity = ObjectIdentity
wingActionConnectL2tpv3Tunnel = _WingActionConnectL2tpv3Tunnel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 2)
)
_WingActionConnectL2tpv3TunnelIn_ObjectIdentity = ObjectIdentity
wingActionConnectL2tpv3TunnelIn = _WingActionConnectL2tpv3TunnelIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 2, 1)
)
_WingActionConnectL2tpv3TunnelInMac_Type = MacAddress
_WingActionConnectL2tpv3TunnelInMac_Object = MibScalar
wingActionConnectL2tpv3TunnelInMac = _WingActionConnectL2tpv3TunnelInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 2, 1, 1),
    _WingActionConnectL2tpv3TunnelInMac_Type()
)
wingActionConnectL2tpv3TunnelInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionConnectL2tpv3TunnelInMac.setStatus("current")
_WingActionConnectL2tpv3TunnelOut_ObjectIdentity = ObjectIdentity
wingActionConnectL2tpv3TunnelOut = _WingActionConnectL2tpv3TunnelOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 2, 2)
)
_WingActionConnectL2tpv3TunnelOutStatus_Type = TruthValue
_WingActionConnectL2tpv3TunnelOutStatus_Object = MibScalar
wingActionConnectL2tpv3TunnelOutStatus = _WingActionConnectL2tpv3TunnelOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 2, 2, 1),
    _WingActionConnectL2tpv3TunnelOutStatus_Type()
)
wingActionConnectL2tpv3TunnelOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionConnectL2tpv3TunnelOutStatus.setStatus("current")
_WingActionConnectL2tpv3TunnelOutMessage_Type = DisplayString
_WingActionConnectL2tpv3TunnelOutMessage_Object = MibScalar
wingActionConnectL2tpv3TunnelOutMessage = _WingActionConnectL2tpv3TunnelOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 2, 2, 2),
    _WingActionConnectL2tpv3TunnelOutMessage_Type()
)
wingActionConnectL2tpv3TunnelOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionConnectL2tpv3TunnelOutMessage.setStatus("current")
_WingActionConnectL2tpv3TunnelRun_Type = WingDoActionNow
_WingActionConnectL2tpv3TunnelRun_Object = MibScalar
wingActionConnectL2tpv3TunnelRun = _WingActionConnectL2tpv3TunnelRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 8, 2, 3),
    _WingActionConnectL2tpv3TunnelRun_Type()
)
wingActionConnectL2tpv3TunnelRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionConnectL2tpv3TunnelRun.setStatus("current")
_WingActionLocator_ObjectIdentity = ObjectIdentity
wingActionLocator = _WingActionLocator_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9)
)
_WingActionLocatorOn_ObjectIdentity = ObjectIdentity
wingActionLocatorOn = _WingActionLocatorOn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1)
)
_WingActionLocatorOnIn_ObjectIdentity = ObjectIdentity
wingActionLocatorOnIn = _WingActionLocatorOnIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1, 1)
)
_WingActionLocatorOnInDuration_Type = Unsigned32
_WingActionLocatorOnInDuration_Object = MibScalar
wingActionLocatorOnInDuration = _WingActionLocatorOnInDuration_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1, 1, 1),
    _WingActionLocatorOnInDuration_Type()
)
wingActionLocatorOnInDuration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionLocatorOnInDuration.setStatus("current")
_WingActionLocatorOnInMac_Type = MacAddress
_WingActionLocatorOnInMac_Object = MibScalar
wingActionLocatorOnInMac = _WingActionLocatorOnInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1, 1, 2),
    _WingActionLocatorOnInMac_Type()
)
wingActionLocatorOnInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionLocatorOnInMac.setStatus("current")
_WingActionLocatorOnOut_ObjectIdentity = ObjectIdentity
wingActionLocatorOnOut = _WingActionLocatorOnOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1, 2)
)
_WingActionLocatorOnOutStatus_Type = TruthValue
_WingActionLocatorOnOutStatus_Object = MibScalar
wingActionLocatorOnOutStatus = _WingActionLocatorOnOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1, 2, 1),
    _WingActionLocatorOnOutStatus_Type()
)
wingActionLocatorOnOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionLocatorOnOutStatus.setStatus("current")
_WingActionLocatorOnOutMessage_Type = DisplayString
_WingActionLocatorOnOutMessage_Object = MibScalar
wingActionLocatorOnOutMessage = _WingActionLocatorOnOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1, 2, 2),
    _WingActionLocatorOnOutMessage_Type()
)
wingActionLocatorOnOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionLocatorOnOutMessage.setStatus("current")
_WingActionLocatorOnRun_Type = WingDoActionNow
_WingActionLocatorOnRun_Object = MibScalar
wingActionLocatorOnRun = _WingActionLocatorOnRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 1, 3),
    _WingActionLocatorOnRun_Type()
)
wingActionLocatorOnRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionLocatorOnRun.setStatus("current")
_WingActionLocatorOff_ObjectIdentity = ObjectIdentity
wingActionLocatorOff = _WingActionLocatorOff_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 2)
)
_WingActionLocatorOffIn_ObjectIdentity = ObjectIdentity
wingActionLocatorOffIn = _WingActionLocatorOffIn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 2, 1)
)
_WingActionLocatorOffInMac_Type = MacAddress
_WingActionLocatorOffInMac_Object = MibScalar
wingActionLocatorOffInMac = _WingActionLocatorOffInMac_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 2, 1, 1),
    _WingActionLocatorOffInMac_Type()
)
wingActionLocatorOffInMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionLocatorOffInMac.setStatus("current")
_WingActionLocatorOffOut_ObjectIdentity = ObjectIdentity
wingActionLocatorOffOut = _WingActionLocatorOffOut_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 2, 2)
)
_WingActionLocatorOffOutStatus_Type = TruthValue
_WingActionLocatorOffOutStatus_Object = MibScalar
wingActionLocatorOffOutStatus = _WingActionLocatorOffOutStatus_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 2, 2, 1),
    _WingActionLocatorOffOutStatus_Type()
)
wingActionLocatorOffOutStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionLocatorOffOutStatus.setStatus("current")
_WingActionLocatorOffOutMessage_Type = DisplayString
_WingActionLocatorOffOutMessage_Object = MibScalar
wingActionLocatorOffOutMessage = _WingActionLocatorOffOutMessage_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 2, 2, 2),
    _WingActionLocatorOffOutMessage_Type()
)
wingActionLocatorOffOutMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    wingActionLocatorOffOutMessage.setStatus("current")
_WingActionLocatorOffRun_Type = WingDoActionNow
_WingActionLocatorOffRun_Object = MibScalar
wingActionLocatorOffRun = _WingActionLocatorOffRun_Object(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 1, 5, 9, 2, 3),
    _WingActionLocatorOffRun_Type()
)
wingActionLocatorOffRun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    wingActionLocatorOffRun.setStatus("current")
_WingConformance_ObjectIdentity = ObjectIdentity
wingConformance = _WingConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 2)
)
_WingCompliances_ObjectIdentity = ObjectIdentity
wingCompliances = _WingCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 2, 1)
)
_WingGroups_ObjectIdentity = ObjectIdentity
wingGroups = _WingGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 2, 2)
)

# Managed Objects groups

wingObjectGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 2, 2, 1)
)
wingObjectGroup.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingConfigSysMacAddr"),
        ("WING-MIB", "wingStatsDevMac"),
        ("WING-MIB", "wingStatsDevType"),
        ("WING-MIB", "wingStatsDevHostname"),
        ("WING-MIB", "wingStatsDevVersion"),
        ("WING-MIB", "wingStatsDevSerialNo"),
        ("WING-MIB", "wingStatsDevRfDomainName"),
        ("WING-MIB", "wingStatsDevOnline"),
        ("WING-MIB", "wingStatsDevAdoptDevMac"),
        ("WING-MIB", "wingStatsDevAdoptDevType"),
        ("WING-MIB", "wingStatsDevAdoptDevHostname"),
        ("WING-MIB", "wingStatsDevAdoptDevVersion"),
        ("WING-MIB", "wingStatsDevAdoptDevSerialNo"),
        ("WING-MIB", "wingStatsDevAdoptDevRfDomainName"),
        ("WING-MIB", "wingStatsDevAdoptDevOnline"),
        ("WING-MIB", "wingStatsRfdName"),
        ("WING-MIB", "wingStatsRfdManager"),
        ("WING-MIB", "wingStatsRfdWlClientMac"),
        ("WING-MIB", "wingStatsRfdWlClientMacName"),
        ("WING-MIB", "wingStatsRfdWlClientVendor"),
        ("WING-MIB", "wingStatsRfdWlClientBss"),
        ("WING-MIB", "wingStatsRfdWlClientAp"),
        ("WING-MIB", "wingStatsRfdWlClientRadioNum"),
        ("WING-MIB", "wingStatsRfdWlClientRadioType"),
        ("WING-MIB", "wingStatsRfdWlClientRadioEnc"),
        ("WING-MIB", "wingStatsRfdWlClientRadioAuth"),
        ("WING-MIB", "wingStatsRfdWlClientWlan"),
        ("WING-MIB", "wingStatsRfdWlClientState"),
        ("WING-MIB", "wingStatsRfdWlClientHotspotAuthed"),
        ("WING-MIB", "wingStatsRfdWlClientVlan"),
        ("WING-MIB", "wingStatsRfdWlClientUserName"),
        ("WING-MIB", "wingStatsRfdWlClientIp"),
        ("WING-MIB", "wingStatsRfdWlClientRfdName"),
        ("WING-MIB", "wingStatsRfdWlClientHostname"),
        ("WING-MIB", "wingStatsRfdWlClientLocation"),
        ("WING-MIB", "wingStatsRfdWlClientRadioId"),
        ("WING-MIB", "wingStatsRfdWlClientRadioAlias"),
        ("WING-MIB", "wingStatsRfdWlApInfoMac"),
        ("WING-MIB", "wingStatsRfdWlApInfoFaultDetected"),
        ("WING-MIB", "wingStatsRfdWlApInfoNumRadios"),
        ("WING-MIB", "wingStatsRfdWlApInfoNumClients"),
        ("WING-MIB", "wingStatsRfdWlApInfoLastCalTime"),
        ("WING-MIB", "wingStatsRfdWlApInfoType"),
        ("WING-MIB", "wingStatsRfdWlApInfoStatsMode"),
        ("WING-MIB", "wingStatsRfdWlApInfoStatsInterval"),
        ("WING-MIB", "wingStatsRfdWlApInfoHostname"),
        ("WING-MIB", "wingStatsRfdWlApInfoRfDomainName"),
        ("WING-MIB", "wingStatsRfdWlApInfoLocation"),
        ("WING-MIB", "wingStatsRfdWlApInfoAdoptedTo"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevMac"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevType"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevTarget"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevDisOption"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevVersion"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevSerialNumber"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevReason"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevNumRadios"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevIp"),
        ("WING-MIB", "wingStatsDevAdoptPendingDevVlan"),
        ("WING-MIB", "wingStatsRfdWlClientDetailMac"),
        ("WING-MIB", "wingStatsRfdWlClientDetailMacName"),
        ("WING-MIB", "wingStatsRfdWlClientDetailVendor"),
        ("WING-MIB", "wingStatsRfdWlClientDetailBss"),
        ("WING-MIB", "wingStatsRfdWlClientDetailAp"),
        ("WING-MIB", "wingStatsRfdWlClientDetailRadioNum"),
        ("WING-MIB", "wingStatsRfdWlClientDetailRadioType"),
        ("WING-MIB", "wingStatsRfdWlClientDetailEnc"),
        ("WING-MIB", "wingStatsRfdWlClientDetailAuth"),
        ("WING-MIB", "wingStatsRfdWlClientDetailWlan"),
        ("WING-MIB", "wingStatsRfdWlClientDetailState"),
        ("WING-MIB", "wingStatsRfdWlClientDetailHotspotAuthed"),
        ("WING-MIB", "wingStatsRfdWlClientDetailVlan"),
        ("WING-MIB", "wingStatsRfdWlClientDetailUsername"),
        ("WING-MIB", "wingStatsRfdWlClientDetailIp"),
        ("WING-MIB", "wingStatsRfdWlClientDetailRfDomainName"),
        ("WING-MIB", "wingStatsRfdWlClientDetailMc2ucStreams"),
        ("WING-MIB", "wingStatsRfdWlClientDetailHostname"),
        ("WING-MIB", "wingStatsRfdWlClientDetailLocation"),
        ("WING-MIB", "wingStatsRfdWlClientDetailRadioId"),
        ("WING-MIB", "wingStatsRfdWlClientDetailRadioAlias"),
        ("WING-MIB", "wingStatsRfdWlClientDetailSsid"),
        ("WING-MIB", "wingStatsRfdWlClientDetailAid"),
        ("WING-MIB", "wingStatsRfdWlClientDetailRates"),
        ("WING-MIB", "wingStatsRfdWlClientDetailInPsp"),
        ("WING-MIB", "wingStatsRfdWlClientDetailIsWmm"),
        ("WING-MIB", "wingStatsRfdWlClientDetailUapsd"),
        ("WING-MIB", "wingStatsRfdWlClientDetailSmPowersave"),
        ("WING-MIB", "wingStatsRfdWlClientDetailHtCapable"),
        ("WING-MIB", "wingStatsRfdWlClientDetailShortGi"),
        ("WING-MIB", "wingStatsRfdWlClientDetailCurWidth40"),
        ("WING-MIB", "wingStatsRfdWlClientDetailAmsduSize"),
        ("WING-MIB", "wingStatsRfdWlClientDetailAmpduSize"),
        ("WING-MIB", "wingStatsRfdWlClientDetailAmpduSpacing"),
        ("WING-MIB", "wingStatsRfdWlClientDetailRifs"),
        ("WING-MIB", "wingStatsRfdWlClientDetailLastActive"),
        ("WING-MIB", "wingStatsRfdWlClientDetailLastAssoc"),
        ("WING-MIB", "wingStatsRfdWlClientDetailSessTime"),
        ("WING-MIB", "wingStatsRfdWlClientDetailIdleTime"),
        ("WING-MIB", "wingStatsRfdWlClientDetailMaxPhyRate"),
        ("WING-MIB", "wingStatsRfdWlClientDetailMaxUserRate"),
        ("WING-MIB", "wingStatsRfdWlClientDetailIsVoice"),
        ("WING-MIB", "wingStatsRfdWlClientDetailIsCallActive"),
        ("WING-MIB", "wingStatsRfdWlClientStatMac"),
        ("WING-MIB", "wingStatsRfdWlClientStatMacName"),
        ("WING-MIB", "wingStatsRfdWlClientStatVendor"),
        ("WING-MIB", "wingStatsRfdWlClientStatAp"),
        ("WING-MIB", "wingStatsRfdWlClientStatTxPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatRxPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatTxDropped"),
        ("WING-MIB", "wingStatsRfdWlClientStatRxErrors"),
        ("WING-MIB", "wingStatsRfdWlClientStatTIndex"),
        ("WING-MIB", "wingStatsRfdWlClientStatTxBps"),
        ("WING-MIB", "wingStatsRfdWlClientStatRxBps"),
        ("WING-MIB", "wingStatsRfdWlClientStatSignal"),
        ("WING-MIB", "wingStatsRfdWlClientStatNoise"),
        ("WING-MIB", "wingStatsRfdWlClientStatSnr"),
        ("WING-MIB", "wingStatsRfdWlClientStatTxRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatRxRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatErrorRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatQIndex"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailMac"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailMacName"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailVendor"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxDropped"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxErrors"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTIndex"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxBps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxBps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailSignal"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailNoise"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailSnr"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailErrorRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailQIndex"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTxPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawRxPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTotalPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTxBps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawRxBps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTotalBps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTxPps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawRxPps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTotalPps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTxRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawRxRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawOverallRate"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxPps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxPps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTotalPps"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxProbes"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxActions"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxPsPoll"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailLastCallStatus"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallTotal"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatOk"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatBusy"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatNoAnswer"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatUnknownDest"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatAdmDenied"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatDeclined"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatUnauth"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatUnsuppMedia"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatTempUnavail"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatNoForkAllowed"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatSessInactive"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailCallStatOther"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTotalPkts"),
        ("WING-MIB", "wingStatsDevWlClientMac"),
        ("WING-MIB", "wingStatsDevWlClientMacName"),
        ("WING-MIB", "wingStatsDevWlClientVendor"),
        ("WING-MIB", "wingStatsDevWlClientBss"),
        ("WING-MIB", "wingStatsDevWlClientAp"),
        ("WING-MIB", "wingStatsDevWlClientRadioNum"),
        ("WING-MIB", "wingStatsDevWlClientRadioType"),
        ("WING-MIB", "wingStatsDevWlClientRadioEnc"),
        ("WING-MIB", "wingStatsDevWlClientRadioAuth"),
        ("WING-MIB", "wingStatsDevWlClientWlan"),
        ("WING-MIB", "wingStatsDevWlClientState"),
        ("WING-MIB", "wingStatsDevWlClientHotspotAuthed"),
        ("WING-MIB", "wingStatsDevWlClientVlan"),
        ("WING-MIB", "wingStatsDevWlClientUserName"),
        ("WING-MIB", "wingStatsDevWlClientIp"),
        ("WING-MIB", "wingStatsDevWlClientRfdName"),
        ("WING-MIB", "wingStatsDevWlClientHostname"),
        ("WING-MIB", "wingStatsDevWlClientLocation"),
        ("WING-MIB", "wingStatsDevWlClientRadioId"),
        ("WING-MIB", "wingStatsDevWlClientRadioAlias"),
        ("WING-MIB", "wingStatsRfdWlRadioId"),
        ("WING-MIB", "wingStatsRfdWlRadioDeviceMac"),
        ("WING-MIB", "wingStatsRfdWlRadioAlias"),
        ("WING-MIB", "wingStatsRfdWlRadioMac"),
        ("WING-MIB", "wingStatsRfdWlRadioType"),
        ("WING-MIB", "wingStatsRfdWlRadioHostname"),
        ("WING-MIB", "wingStatsRfdWlRadioRfdName"),
        ("WING-MIB", "wingStatsRfdWlRadioLocation"),
        ("WING-MIB", "wingStatsRfdWlRadioState"),
        ("WING-MIB", "wingStatsRfdWlRadioCurChannel"),
        ("WING-MIB", "wingStatsRfdWlRadioConfigChannel"),
        ("WING-MIB", "wingStatsRfdWlRadioCurPower"),
        ("WING-MIB", "wingStatsRfdWlRadioConfigPower"),
        ("WING-MIB", "wingStatsRfdWlRadioMaxUserRate"),
        ("WING-MIB", "wingStatsRfdWlRadioNumClient"),
        ("WING-MIB", "wingStatsRfdWlRadioStatId"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDeviceMac"),
        ("WING-MIB", "wingStatsRfdWlRadioStatAlias"),
        ("WING-MIB", "wingStatsRfdWlRadioStatMac"),
        ("WING-MIB", "wingStatsRfdWlRadioStatType"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTxPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatRxPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTxDropped"),
        ("WING-MIB", "wingStatsRfdWlRadioStatRxErrors"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTxBps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatRxBps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatSignal"),
        ("WING-MIB", "wingStatsRfdWlRadioStatNoise"),
        ("WING-MIB", "wingStatsRfdWlRadioStatSnr"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTxRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatRxRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatErrorRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatQIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioStatNumClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatNumBClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatNumBgClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatNumBgnClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatNumAClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatNumAnClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatMediumErrorRate"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailId"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailDeviceMac"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailAlias"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailMac"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailType"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailHostname"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailRfdName"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailLocation"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailState"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailCurChannel"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailConfigChannel"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailCurPower"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailConfigPower"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailMaxUserRate"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailNumClient"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailSpectrumMgmt"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailShortPreamble"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailNonErpPresent"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailErpProtectionOn"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailNonErpDetected"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailHtProtectionOn"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailHt20Present"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailNonHtDetected"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailDualChannelOn"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailTxAntennaUsed"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailRxAntennaUsed"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailMaxPhyRate"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailCurMcastStreams"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailMaxMcastStreams"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailMcastStreams"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailLastError"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailId"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailDeviceMac"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailAlias"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailMac"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailType"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxDropped"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxErrors"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxBps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxBps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailSignal"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailNoise"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailSnr"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailErrorRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailQIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailNumClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailNumBClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailNumBgClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailNumBgnClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailNumAClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailNumAnClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailMediumErrorRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTxPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawRxPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTotalPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTxBps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawRxBps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTotalBps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTxPps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawRxPps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTotalPps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTxRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawRxRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawOverallRate"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxPps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxPps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTotalPps"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxProbes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxActions"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxPsPoll"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailLastCallStatus"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallTotal"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatOk"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatBusy"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatNoAnswer"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatUnknownDest"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatAdmDenied"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatDeclined"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatUnauth"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatUnsuppMedia"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatTempUnavail"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatNoForkAllowed"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatSessInactive"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailCallStatOther"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTotalPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxCrcErrors"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxUndecryptable"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxIncomplete"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxLengthErrors"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxOtherErrors"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailLongPreambleClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailLtClients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailHt20Clients"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailLongSlotClients"),
        ("WING-MIB", "wingCfgWlanName"),
        ("WING-MIB", "wingCfgWlanShutdown"),
        ("WING-MIB", "wingCfgWlanSsid"),
        ("WING-MIB", "wingCfgWlanDescr"),
        ("WING-MIB", "wingCfgWlanEncType"),
        ("WING-MIB", "wingCfgWlanAuthType"),
        ("WING-MIB", "wingCfgWlanCaptivePortalEnforcement"),
        ("WING-MIB", "wingCfgWlanClientPower"),
        ("WING-MIB", "wingCfgWlanNasId"),
        ("WING-MIB", "wingCfgWlanNasPortId"),
        ("WING-MIB", "wingCfgWlanBroadcastSsid"),
        ("WING-MIB", "wingCfgWlanAnswerBroadcastProbes"),
        ("WING-MIB", "wingCfgWlanClientClientCommunication"),
        ("WING-MIB", "wingCfgWlanHoldTime"),
        ("WING-MIB", "wingCfgWlanInactivityTimeout"),
        ("WING-MIB", "wingCfgWlanCredCacheAgeout"),
        ("WING-MIB", "wingCfgWlanVlanCacheAgeout"),
        ("WING-MIB", "wingCfgWlanMaxFirewallSessions"),
        ("WING-MIB", "wingCfgWlanReauth"),
        ("WING-MIB", "wingCfgWlanPmfMode"),
        ("WING-MIB", "wingCfgWlanPmfSaQueryTimeout"),
        ("WING-MIB", "wingCfgWlanPmfSaQueryAttempts"),
        ("WING-MIB", "wingCfgWlanWpaWpa2Psk"),
        ("WING-MIB", "wingCfgWlanWpaWpa2ExcludeWpa2Tkip"),
        ("WING-MIB", "wingCfgWlanWpaWpa2KeyRotationUnicast"),
        ("WING-MIB", "wingCfgWlanWpaWpa2KeyRotationBroadcast"),
        ("WING-MIB", "wingCfgWlanWpaWpa2PmkCaching"),
        ("WING-MIB", "wingCfgWlanWpaWpa2OpmkCaching"),
        ("WING-MIB", "wingCfgWlanWpaWpa2Preauth"),
        ("WING-MIB", "wingCfgWlanWpaWpa2TkipCntrmeasHoldTime"),
        ("WING-MIB", "wingCfgWlanWep64TransmitKey"),
        ("WING-MIB", "wingCfgWlanWep128TransmitKey"),
        ("WING-MIB", "wingCfgWlanRadiusAssignedVlans"),
        ("WING-MIB", "wingCfgWlanRadiusDynamicAuthorization"),
        ("WING-MIB", "wingCfgWlanAccountingRadius"),
        ("WING-MIB", "wingCfgWlanMotoExtnMoveCmd"),
        ("WING-MIB", "wingCfgWlanMotoExtnSmartScan"),
        ("WING-MIB", "wingCfgWlanMotoExtnWmmLoadBalance"),
        ("WING-MIB", "wingCfgWlanMotoExtnSymbolLoadInfo"),
        ("WING-MIB", "wingCfgWlanClientLoadBal"),
        ("WING-MIB", "wingCfgWlanClientLoadBalSingleBandClients5ghz"),
        ("WING-MIB", "wingCfgWlanClientLoadBalSingleBandClients24ghz"),
        ("WING-MIB", "wingCfgWlanClientLoadBalMaxProbeReq24ghz"),
        ("WING-MIB", "wingCfgWlanClientLoadBalMaxProbeReq5ghz"),
        ("WING-MIB", "wingCfgWlanClientLoadBalProbeReqIntvl5ghz"),
        ("WING-MIB", "wingCfgWlanClientLoadBalProbeReqIntvl24ghz"),
        ("WING-MIB", "wingCfgWlanClientLoadBalBandDiscoveryIntvl"),
        ("WING-MIB", "wingCfgWlanClientLoadBalCapabilityAgeoutTime"),
        ("WING-MIB", "wingCfgWlanQosPolicy"),
        ("WING-MIB", "wingCfgWlanAaaPolicy"),
        ("WING-MIB", "wingCfgWlanCaptivePortal"),
        ("WING-MIB", "wingCfgWlanAssocAcl"),
        ("WING-MIB", "wingCfgWlanIpInAcl"),
        ("WING-MIB", "wingCfgWlanMacInAcl"),
        ("WING-MIB", "wingCfgWlanIpOutAcl"),
        ("WING-MIB", "wingCfgWlanMacOutAcl"),
        ("WING-MIB", "wingCfgWlanArpTrust"),
        ("WING-MIB", "wingCfgWlanDhcpTrust"),
        ("WING-MIB", "wingCfgWlanArpHeaderMismatchValidation"),
        ("WING-MIB", "wingCfgWlanServiceAllowHtOnly"),
        ("WING-MIB", "wingCfgWlanEnforceDhcp"),
        ("WING-MIB", "wingCfgWlanProxyArpMode"),
        ("WING-MIB", "wingCfgWlanBroadcastDhcpValidateOffer"),
        ("WING-MIB", "wingCfgWlanKerberosRealm"),
        ("WING-MIB", "wingCfgWlanKerberosTimeout"),
        ("WING-MIB", "wingCfgWlanKerberosPassword"),
        ("WING-MIB", "wingCfgWlanKerberosPrimaryServer"),
        ("WING-MIB", "wingCfgWlanKerberosPrimaryServerPort"),
        ("WING-MIB", "wingCfgWlanKerberosSecondaryServer"),
        ("WING-MIB", "wingCfgWlanKerberosSecondaryServerPort"),
        ("WING-MIB", "wingCfgWlanAcctSyslogEnable"),
        ("WING-MIB", "wingCfgWlanAcctSyslogHost"),
        ("WING-MIB", "wingCfgWlanAcctSyslogPort"),
        ("WING-MIB", "wingCfgWlanClientDenyLimitThresholdRate"),
        ("WING-MIB", "wingCfgWlanClientDenyLimitAction"),
        ("WING-MIB", "wingCfgWlanClientDenyLimitBlacklistAgeout"),
        ("WING-MIB", "wingCfgWlanQosName"),
        ("WING-MIB", "wingCfgWlanQosClassification"),
        ("WING-MIB", "wingCfgWlanQosNonWmmClassification"),
        ("WING-MIB", "wingCfgWlanQosMulticastMaskPrimary"),
        ("WING-MIB", "wingCfgWlanQosMulticastMaskSecondary"),
        ("WING-MIB", "wingCfgWlanQosMulticastMaskAc"),
        ("WING-MIB", "wingCfgWlanQosVoicePrioritization"),
        ("WING-MIB", "wingCfgWlanQosSvpPrioritization"),
        ("WING-MIB", "wingCfgWlanQosWmmPowerSave"),
        ("WING-MIB", "wingCfgWlanQosWmmQbssLoadElement"),
        ("WING-MIB", "wingCfgWlanQosWmmBestEffortTxopLimit"),
        ("WING-MIB", "wingCfgWlanQosWmmBestEffortAifsn"),
        ("WING-MIB", "wingCfgWlanQosWmmBestEffortCwMin"),
        ("WING-MIB", "wingCfgWlanQosWmmBestEffortCwMax"),
        ("WING-MIB", "wingCfgWlanQosWmmBackgroundTxopLimit"),
        ("WING-MIB", "wingCfgWlanQosWmmBackgroundAifsn"),
        ("WING-MIB", "wingCfgWlanQosWmmBackgroundCwMin"),
        ("WING-MIB", "wingCfgWlanQosWmmBackgroundCwMax"),
        ("WING-MIB", "wingCfgWlanQosWmmVideoTxopLimit"),
        ("WING-MIB", "wingCfgWlanQosWmmVideoAifsn"),
        ("WING-MIB", "wingCfgWlanQosWmmVideoCwMin"),
        ("WING-MIB", "wingCfgWlanQosWmmVideoCwMax"),
        ("WING-MIB", "wingCfgWlanQosWmmVoiceTxopLimit"),
        ("WING-MIB", "wingCfgWlanQosWmmVoiceAifsn"),
        ("WING-MIB", "wingCfgWlanQosWmmVoiceCwMin"),
        ("WING-MIB", "wingCfgWlanQosWmmVoiceCwMax"),
        ("WING-MIB", "wingCfgWlanQosWlanRlDownEnable"),
        ("WING-MIB", "wingCfgWlanQosWlanRlDownRate"),
        ("WING-MIB", "wingCfgWlanQosWlanRlDownBurstSize"),
        ("WING-MIB", "wingCfgWlanQosWlanRlDownThreshBackground"),
        ("WING-MIB", "wingCfgWlanQosWlanRlDownThreshBestEffort"),
        ("WING-MIB", "wingCfgWlanQosWlanRlDownThreshVoice"),
        ("WING-MIB", "wingCfgWlanQosWlanRlDownThreshVideo"),
        ("WING-MIB", "wingCfgWlanQosWlanRlUpEnable"),
        ("WING-MIB", "wingCfgWlanQosWlanRlUpRate"),
        ("WING-MIB", "wingCfgWlanQosWlanRlUpBurstSize"),
        ("WING-MIB", "wingCfgWlanQosWlanRlUpThreshBackground"),
        ("WING-MIB", "wingCfgWlanQosWlanRlUpThreshBestEffort"),
        ("WING-MIB", "wingCfgWlanQosWlanRlUpThreshVoice"),
        ("WING-MIB", "wingCfgWlanQosWlanRlUpThreshVideo"),
        ("WING-MIB", "wingCfgWlanQosMuRlDownEnable"),
        ("WING-MIB", "wingCfgWlanQosMuRlDownRate"),
        ("WING-MIB", "wingCfgWlanQosMuRlDownBurstSize"),
        ("WING-MIB", "wingCfgWlanQosMuRlDownThreshBackground"),
        ("WING-MIB", "wingCfgWlanQosMuRlDownThreshBestEffort"),
        ("WING-MIB", "wingCfgWlanQosMuRlDownThreshVoice"),
        ("WING-MIB", "wingCfgWlanQosMuRlDownThreshVideo"),
        ("WING-MIB", "wingCfgWlanQosMuRlUpEnable"),
        ("WING-MIB", "wingCfgWlanQosMuRlUpRate"),
        ("WING-MIB", "wingCfgWlanQosMuRlUpBurstSize"),
        ("WING-MIB", "wingCfgWlanQosMuRlUpThreshBackground"),
        ("WING-MIB", "wingCfgWlanQosMuRlUpThreshBestEffort"),
        ("WING-MIB", "wingCfgWlanQosMuRlUpThreshVoice"),
        ("WING-MIB", "wingCfgWlanQosMuRlUpThreshVideo"),
        ("WING-MIB", "wingCfgWlanQosQosTrustDscp"),
        ("WING-MIB", "wingCfgWlanQosQosTrustWmm"),
        ("WING-MIB", "wingCfgWlanQosMcastStreamAddr"),
        ("WING-MIB", "wingCfgWlanQosMcastStreamPriority"),
        ("WING-MIB", "wingCfgRadioQosName"),
        ("WING-MIB", "wingCfgRadioQosWmmBestEffortTxopLimit"),
        ("WING-MIB", "wingCfgRadioQosWmmBestEffortAifsn"),
        ("WING-MIB", "wingCfgRadioQosWmmBestEffortCwMin"),
        ("WING-MIB", "wingCfgRadioQosWmmBestEffortCwMax"),
        ("WING-MIB", "wingCfgRadioQosWmmBackgroundTxopLimit"),
        ("WING-MIB", "wingCfgRadioQosWmmBackgroundAifsn"),
        ("WING-MIB", "wingCfgRadioQosWmmBackgroundCwMin"),
        ("WING-MIB", "wingCfgRadioQosWmmBackgroundCwMax"),
        ("WING-MIB", "wingCfgRadioQosWmmVideoTxopLimit"),
        ("WING-MIB", "wingCfgRadioQosWmmVideoAifsn"),
        ("WING-MIB", "wingCfgRadioQosWmmVideoCwMin"),
        ("WING-MIB", "wingCfgRadioQosWmmVideoCwMax"),
        ("WING-MIB", "wingCfgRadioQosWmmVoiceTxopLimit"),
        ("WING-MIB", "wingCfgRadioQosWmmVoiceAifsn"),
        ("WING-MIB", "wingCfgRadioQosWmmVoiceCwMin"),
        ("WING-MIB", "wingCfgRadioQosWmmVoiceCwMax"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlFirewallDetectedTraffic"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlImplicitTspec"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVoiceEnable"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVoiceMaxClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVoiceMaxRoamedClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVideoEnable"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVideoMaxClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVideoMaxRoamedClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVideoMaxAirtimePercent"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlVideoReservedForRoamPercent"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBestEffortEnable"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBestEffortMaxClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBackgroundEnable"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBackgroundMaxClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent"),
        ("WING-MIB", "wingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent"),
        ("WING-MIB", "wingCfgRadioQosAccelMcastMaxStreams"),
        ("WING-MIB", "wingCfgRadioQosAccelMcastOverflowPolicy"),
        ("WING-MIB", "wingCfgRadioQosAccelMcastMaxClientStreams"),
        ("WING-MIB", "wingCfgRadioQosAccelMcastStreamThreshold"),
        ("WING-MIB", "wingCfgRadioQosAccelMcastClientTimeout"),
        ("WING-MIB", "wingCfgAaaName"),
        ("WING-MIB", "wingCfgAaaServerPoolingMode"),
        ("WING-MIB", "wingCfgAaaMacAddrFormat"),
        ("WING-MIB", "wingCfgAaaMacAddrCase"),
        ("WING-MIB", "wingCfgAaaMacAddrAttributes"),
        ("WING-MIB", "wingCfgAaaEapClientTimeout"),
        ("WING-MIB", "wingCfgAaaEapClientAttempts"),
        ("WING-MIB", "wingCfgAaaEapClientRetryFactor"),
        ("WING-MIB", "wingCfgAaaEapClientIdReqTimeout"),
        ("WING-MIB", "wingCfgAaaAuthProtocol"),
        ("WING-MIB", "wingCfgAaaAccountingType"),
        ("WING-MIB", "wingCfgAaaInterimAccountingInterval"),
        ("WING-MIB", "wingCfgAaaNacList"),
        ("WING-MIB", "wingCfgAssocAclName"),
        ("WING-MIB", "wingCfgSmartRfName"),
        ("WING-MIB", "wingCfgSmartRfEnable"),
        ("WING-MIB", "wingCfgSmartRfSensitivity"),
        ("WING-MIB", "wingCfgSmartRfAutoAssignSensor"),
        ("WING-MIB", "wingCfgSmartRfMinPowerA"),
        ("WING-MIB", "wingCfgSmartRfMaxPowerA"),
        ("WING-MIB", "wingCfgSmartRfMinPowerBg"),
        ("WING-MIB", "wingCfgSmartRfMaxPowerBg"),
        ("WING-MIB", "wingCfgSmartRfChannelWidthA"),
        ("WING-MIB", "wingCfgSmartRfChannelWidthBg"),
        ("WING-MIB", "wingCfgSmartRfGroupByArea"),
        ("WING-MIB", "wingCfgSmartRfGroupByFloor"),
        ("WING-MIB", "wingCfgSmartRfSmartOcsMonitoring"),
        ("WING-MIB", "wingCfgSmartRfOcsDurationA"),
        ("WING-MIB", "wingCfgSmartRfOcsDurationBg"),
        ("WING-MIB", "wingCfgSmartRfOcsFrequencyA"),
        ("WING-MIB", "wingCfgSmartRfOcsFrequencyBg"),
        ("WING-MIB", "wingCfgSmartRfOcsSampleCountA"),
        ("WING-MIB", "wingCfgSmartRfOcsSampleCountBg"),
        ("WING-MIB", "wingCfgSmartRfOcsExtendedScanFrequencyA"),
        ("WING-MIB", "wingCfgSmartRfOcsExtendedScanFrequencyBg"),
        ("WING-MIB", "wingCfgSmartRfOcsVoiceAwareA"),
        ("WING-MIB", "wingCfgSmartRfOcsVoiceAwareBg"),
        ("WING-MIB", "wingCfgSmartRfOcsPspAwareA"),
        ("WING-MIB", "wingCfgSmartRfOcsPspAwareBg"),
        ("WING-MIB", "wingCfgSmartRfInterferenceRecovery"),
        ("WING-MIB", "wingCfgSmartRfIrNoise"),
        ("WING-MIB", "wingCfgSmartRfIrInterference"),
        ("WING-MIB", "wingCfgSmartRfIrClientThreshold"),
        ("WING-MIB", "wingCfgSmartRfIrChannelSwitchDeltaA"),
        ("WING-MIB", "wingCfgSmartRfIrChannelSwitchDeltaBg"),
        ("WING-MIB", "wingCfgSmartRfNeighborRecovery"),
        ("WING-MIB", "wingCfgSmartRfNrPowerThresholdA"),
        ("WING-MIB", "wingCfgSmartRfNrPowerThresholdBg"),
        ("WING-MIB", "wingCfgSmartRfCoverageHoleRecovery"),
        ("WING-MIB", "wingCfgSmartRfChrIntervalA"),
        ("WING-MIB", "wingCfgSmartRfChrIntervalBg"),
        ("WING-MIB", "wingCfgSmartRfChrCovIntervalA"),
        ("WING-MIB", "wingCfgSmartRfChrCovIntervalBg"),
        ("WING-MIB", "wingCfgSmartRfChrSnrThresholdA"),
        ("WING-MIB", "wingCfgSmartRfChrSnrThresholdBg"),
        ("WING-MIB", "wingCfgSmartRfChrClientThresholdA"),
        ("WING-MIB", "wingCfgSmartRfChrClientThresholdBg"),
        ("WING-MIB", "wingCfgSmartRfChannelHoldTime"),
        ("WING-MIB", "wingCfgSmartRfPowerHoldTime"),
        ("WING-MIB", "wingCfgCaptPrtlName"),
        ("WING-MIB", "wingCfgCaptPrtlAccessType"),
        ("WING-MIB", "wingCfgCaptPrtlAccessTime"),
        ("WING-MIB", "wingCfgCaptPrtlCustomAuthInfo"),
        ("WING-MIB", "wingCfgCaptPrtlConnectionMode"),
        ("WING-MIB", "wingCfgCaptPrtlInactivityTimeout"),
        ("WING-MIB", "wingCfgCaptPrtlServer"),
        ("WING-MIB", "wingCfgCaptPrtlServerMode"),
        ("WING-MIB", "wingCfgCaptPrtlSimultaneousUsers"),
        ("WING-MIB", "wingCfgCaptPrtlTermsAgreement"),
        ("WING-MIB", "wingCfgCaptPrtlWebpageLocation"),
        ("WING-MIB", "wingCfgCaptPrtlAccountingRadius"),
        ("WING-MIB", "wingCfgCaptPrtlAaaPolicy"),
        ("WING-MIB", "wingCfgCaptPrtlDnsWhitelist"),
        ("WING-MIB", "wingCfgCaptPrtlAcctSyslogEnable"),
        ("WING-MIB", "wingCfgCaptPrtlAcctSyslogHost"),
        ("WING-MIB", "wingCfgCaptPrtlAcctSyslogPort"),
        ("WING-MIB", "wingCfgDnsWhitelistName"),
        ("WING-MIB", "wingCfgDnsWhitelistInstName"),
        ("WING-MIB", "wingCfgDnsWhitelistInstSuffix"),
        ("WING-MIB", "wingCfgIpAclName"),
        ("WING-MIB", "wingCfgDhcpSvrName"),
        ("WING-MIB", "wingCfgDhcpSvrIgnoreBootp"),
        ("WING-MIB", "wingCfgDhcpSvrPingInterval"),
        ("WING-MIB", "wingCfgDhcpSvrClassName"),
        ("WING-MIB", "wingCfgDhcpSvrClassMultipleUserClass"),
        ("WING-MIB", "wingCfgMacAclName"),
        ("WING-MIB", "wingCfgProfName"),
        ("WING-MIB", "wingCfgProfType"),
        ("WING-MIB", "wingCfgProfDomainLookup"),
        ("WING-MIB", "wingCfgProfDomainName"),
        ("WING-MIB", "wingCfgProfArpTimeout"),
        ("WING-MIB", "wingCfgProfApIpAddr"),
        ("WING-MIB", "wingCfgProfAutoConfUpdate"),
        ("WING-MIB", "wingCfgProfAutoFwUpdate"),
        ("WING-MIB", "wingCfgProfAutoupgradeCount"),
        ("WING-MIB", "wingCfgProfServiceWatchdog"),
        ("WING-MIB", "wingCfgProfRadiusServerPolicy"),
        ("WING-MIB", "wingCfgProfDhcpServerPolicy"),
        ("WING-MIB", "wingCfgProfManagementPolicy"),
        ("WING-MIB", "wingCfgProfFirewallPolicy"),
        ("WING-MIB", "wingCfgProfAdvancedWipsPolicy"),
        ("WING-MIB", "wingCfgProfRolePolicy"),
        ("WING-MIB", "wingCfgProfAdoptionPolicy"),
        ("WING-MIB", "wingCfgProfBridgingPolicy"),
        ("WING-MIB", "wingCfgProfEventSystemPolicy"),
        ("WING-MIB", "wingCfgProfRoutingPolicy"),
        ("WING-MIB", "wingCfgProfRfDomainMgrCapable"),
        ("WING-MIB", "wingCfgProfRfDomainMgrPriority"),
        ("WING-MIB", "wingCfgProfDhcpcSendHostname"),
        ("WING-MIB", "wingCfgProfDhcpcPersistentLease"),
        ("WING-MIB", "wingCfgProfDnsServerForward"),
        ("WING-MIB", "wingCfgProfBridgeAgingTime"),
        ("WING-MIB", "wingCfgProfLogging"),
        ("WING-MIB", "wingCfgProfAggregationTime"),
        ("WING-MIB", "wingCfgProfConsole"),
        ("WING-MIB", "wingCfgProfBuffered"),
        ("WING-MIB", "wingCfgProfSyslog"),
        ("WING-MIB", "wingCfgProfFacility"),
        ("WING-MIB", "wingCfgProfEvents"),
        ("WING-MIB", "wingCfgProfEventsForward"),
        ("WING-MIB", "wingCfgProfLed"),
        ("WING-MIB", "wingCfgProfRemoteLogging"),
        ("WING-MIB", "wingCfgProfPowerConfig3afOption"),
        ("WING-MIB", "wingCfgProfPowerConfig3atOption"),
        ("WING-MIB", "wingCfgProfPowerConfigMode"),
        ("WING-MIB", "wingCfgProfCriticalResourcePolicy"),
        ("WING-MIB", "wingCfgProfControllerAp"),
        ("WING-MIB", "wingCfgProfControllerVlan"),
        ("WING-MIB", "wingCfgProfControllerGroup"),
        ("WING-MIB", "wingCfgProfPreferredControllerGroup"),
        ("WING-MIB", "wingCfgProfIpRouting"),
        ("WING-MIB", "wingCfgProfIfRadioRfMode"),
        ("WING-MIB", "wingCfgProfIfRadioChannel"),
        ("WING-MIB", "wingCfgProfIfRadioPower"),
        ("WING-MIB", "wingCfgProfIfRadioPlacement"),
        ("WING-MIB", "wingCfgProfIfRadioBeaconInterval"),
        ("WING-MIB", "wingCfgProfIfRadioRtsThreshold"),
        ("WING-MIB", "wingCfgProfIfRadioOffChannelScan"),
        ("WING-MIB", "wingCfgProfIfRadioPreambleShort"),
        ("WING-MIB", "wingCfgProfIfRadioGuardInterval"),
        ("WING-MIB", "wingCfgProfIfRadioAmpduMode"),
        ("WING-MIB", "wingCfgProfIfRadioAmsduMode"),
        ("WING-MIB", "wingCfgProfIfRadioRifsMode"),
        ("WING-MIB", "wingCfgProfIfRadioAmpduMaxAggrSizeRx"),
        ("WING-MIB", "wingCfgProfIfRadioAmpduMaxAggrSizeTx"),
        ("WING-MIB", "wingCfgProfIfRadioAmpduMinSpacing"),
        ("WING-MIB", "wingCfgProfIfRadioAntennaMode"),
        ("WING-MIB", "wingCfgProfIfRadioNonUnicastForwarding"),
        ("WING-MIB", "wingCfgProfIfRadioDynamicChainSelection"),
        ("WING-MIB", "wingCfgProfIfRadioLockRfMode"),
        ("WING-MIB", "wingCfgProfIfRadioSnifferRedirHost"),
        ("WING-MIB", "wingCfgProfIfRadioSnifferRedirChannel"),
        ("WING-MIB", "wingCfgProfIfRadioMesh"),
        ("WING-MIB", "wingCfgProfIfRadioMeshLinks"),
        ("WING-MIB", "wingCfgProfIfRadioProbeResponseRetry"),
        ("WING-MIB", "wingCfgProfIfRadioProbeResponseRate"),
        ("WING-MIB", "wingCfgProfIfRadioMaxClients"),
        ("WING-MIB", "wingCfgProfIfRadioRadioTapMode"),
        ("WING-MIB", "wingCfgProfIfRadioWirelessClientPower"),
        ("WING-MIB", "wingCfgProfIfRadioLoadBalLfCount"),
        ("WING-MIB", "wingCfgProfIfRadioLoadBalLfThroughput"),
        ("WING-MIB", "wingCfgProfIfRadioLoadBalWmCount"),
        ("WING-MIB", "wingCfgProfIfRadioLoadBalWmTput"),
        ("WING-MIB", "wingCfgProfIfRadioAssocAcl"),
        ("WING-MIB", "wingCfgProfDot11WepSharedKeyAuth"),
        ("WING-MIB", "wingCfgProfDot11LegacyAutoUpdate"),
        ("WING-MIB", "wingCfgProfDot11LegacyAutoUpdateImgAp7131"),
        ("WING-MIB", "wingCfgProfDot11LegacyAutoDowngrade"),
        ("WING-MIB", "wingCfgProfDot11NasIdentifier"),
        ("WING-MIB", "wingCfgProfDot11NasPortId"),
        ("WING-MIB", "wingCfgProfDot11LegacyAutoDowngrade"),
        ("WING-MIB", "wingCfgProfDot11NasIdentifier"),
        ("WING-MIB", "wingCfgProfDot11NasPortId"),
        ("WING-MIB", "wingCfgRfdName"),
        ("WING-MIB", "wingCfgRfdLocation"),
        ("WING-MIB", "wingCfgRfdContact"),
        ("WING-MIB", "wingCfgRfdTimezone"),
        ("WING-MIB", "wingCfgRfdCountryCode"),
        ("WING-MIB", "wingCfgRfdSmartRfPolicy"),
        ("WING-MIB", "wingCfgRfdWipsPolicyName"),
        ("WING-MIB", "wingCfgRfdNocUpdateInterval"),
        ("WING-MIB", "wingCfgRfdControlVlan"),
        ("WING-MIB", "wingCfgRfdSmartscanChanlistDynamic"),
        ("WING-MIB", "wingCfgRfdStatsUpdateInterval"),
        ("WING-MIB", "wingCfgDevMac"),
        ("WING-MIB", "wingCfgDevHostname"),
        ("WING-MIB", "wingCfgDevBuilding"),
        ("WING-MIB", "wingCfgDevFloor"),
        ("WING-MIB", "wingCfgDevNumRadios"),
        ("WING-MIB", "wingCfgDevProfileName"),
        ("WING-MIB", "wingCfgDevRfDomainName"),
        ("WING-MIB", "wingCfgDevHttpsTrustpoint"),
        ("WING-MIB", "wingCfgDevRadiusCaTrustpoint"),
        ("WING-MIB", "wingCfgDevRadiusServerTrustpoint"),
        ("WING-MIB", "wingCfgDevSshRsaKey"),
        ("WING-MIB", "wingCfgDevHasOverrides"),
        ("WING-MIB", "wingCfgDevDot11WepSharedKeyAuth"),
        ("WING-MIB", "wingCfgDevDot11LegacyAutoUpdate"),
        ("WING-MIB", "wingCfgDevDot11LegacyAutoUpdateImgAp7131"),
        ("WING-MIB", "wingCfgDevDot11LegacyAutoDowngrade"),
        ("WING-MIB", "wingCfgDevDot11NasIdentifier"),
        ("WING-MIB", "wingCfgDevDot11NasPortId"),
        ("WING-MIB", "wingCfgMgmtName"),
        ("WING-MIB", "wingCfgMgmtTelnetEnable"),
        ("WING-MIB", "wingCfgMgmtTelnetPort"),
        ("WING-MIB", "wingCfgMgmtHttpEnable"),
        ("WING-MIB", "wingCfgMgmtHttpsEnable"),
        ("WING-MIB", "wingCfgMgmtSshEnable"),
        ("WING-MIB", "wingCfgMgmtSshPort"),
        ("WING-MIB", "wingCfgMgmtSnmpV2Enable"),
        ("WING-MIB", "wingCfgMgmtSnmpV3Enable"),
        ("WING-MIB", "wingCfgMgmtSnmpTrapEnable"),
        ("WING-MIB", "wingCfgMgmtSnmpCommunityName"),
        ("WING-MIB", "wingCfgMgmtSnmpCommunityAccess"),
        ("WING-MIB", "wingCfgMgmtAdminUsername"),
        ("WING-MIB", "wingCfgMgmtAdminPassword"),
        ("WING-MIB", "wingCfgMgmtAdminRole"),
        ("WING-MIB", "wingCfgDhcpSvrOptionName"),
        ("WING-MIB", "wingCfgDhcpSvrOptionCode"),
        ("WING-MIB", "wingCfgDhcpSvrOptionType"),
        ("WING-MIB", "wingCfgDhcpSvrPoolName"),
        ("WING-MIB", "wingCfgDhcpSvrPoolNetwork"),
        ("WING-MIB", "wingCfgDhcpSvrPoolDomainName"),
        ("WING-MIB", "wingCfgDhcpSvrPoolNetbiosNodeType"),
        ("WING-MIB", "wingCfgDhcpSvrPoolBootfile"),
        ("WING-MIB", "wingCfgDhcpSvrPoolLeaseTime"),
        ("WING-MIB", "wingCfgDhcpSvrPoolBootpNextServer"),
        ("WING-MIB", "wingCfgDhcpSvrPoolUpdateDns"),
        ("WING-MIB", "wingCfgDhcpSvrPoolDdnsDomainName"),
        ("WING-MIB", "wingCfgDhcpSvrPoolDdnsTtl"),
        ("WING-MIB", "wingCfgDhcpSvrPoolDdnsMultiUserClass"),
        ("WING-MIB", "wingCfgProfIfEthSpeed"),
        ("WING-MIB", "wingCfgProfIfEthDuplex"),
        ("WING-MIB", "wingCfgProfIfEthSwitchportMode"),
        ("WING-MIB", "wingCfgProfIfEthSwitchportNativeVlan"),
        ("WING-MIB", "wingCfgProfIfEthSwitchportNativeVlanTagged"),
        ("WING-MIB", "wingCfgProfIfEthArpTrust"),
        ("WING-MIB", "wingCfgProfIfEthDhcpTrust"),
        ("WING-MIB", "wingCfgProfIfEthArpHeaderMismatchValidation"),
        ("WING-MIB", "wingCfgProfIfEthQosTrustDscp"),
        ("WING-MIB", "wingCfgProfIfEthQosTrust802dot1p"),
        ("WING-MIB", "wingCfgProfIfEthStaticChannelGroup"),
        ("WING-MIB", "wingCfgProfIfEthPoeSupported"),
        ("WING-MIB", "wingCfgProfIfEthPoePower"),
        ("WING-MIB", "wingCfgProfIfEthPoeLimit"),
        ("WING-MIB", "wingCfgProfIfEthPoePriority"),
        ("WING-MIB", "wingCfgProfIfEthDot1xSupported"),
        ("WING-MIB", "wingCfgProfIfEthDot1xEnable"),
        ("WING-MIB", "wingCfgProfIfEthDot1xUsername"),
        ("WING-MIB", "wingCfgProfIfEthDot1xPassword"),
        ("WING-MIB", "wingCfgProfIfEthCdpReceive"),
        ("WING-MIB", "wingCfgProfIfEthCdpTransmit"),
        ("WING-MIB", "wingCfgProfIfEthLldpReceive"),
        ("WING-MIB", "wingCfgProfIfEthLldpTransmit"),
        ("WING-MIB", "wingCfgProfIfEthPortChannelLoadBalance"),
        ("WING-MIB", "wingCfgProfIfVlanVlan"),
        ("WING-MIB", "wingCfgProfIfVlanDhcpcOptAll"),
        ("WING-MIB", "wingCfgProfIfVlanNatDirection"),
        ("WING-MIB", "wingCfgProfIfVlanCryptoMap"),
        ("WING-MIB", "wingCfgProfIfVlanDhcpRelayIncoming"),
        ("WING-MIB", "wingCfgProfIfVlanOspfAuth"),
        ("WING-MIB", "wingCfgProfIfVlanOspfAuthKey"),
        ("WING-MIB", "wingCfgProfIfVlanOspfNetworkType"),
        ("WING-MIB", "wingCfgProfIfSpanTreeLinkType"),
        ("WING-MIB", "wingCfgProfIfSpanTreePortfast"),
        ("WING-MIB", "wingCfgProfIfSpanTreeEdgeport"),
        ("WING-MIB", "wingCfgProfIfSpanTreeBpduguard"),
        ("WING-MIB", "wingCfgProfIfSpanTreeBpdufilter"),
        ("WING-MIB", "wingCfgProfIfSpanTreePortCiscoInterop"),
        ("WING-MIB", "wingCfgProfIfSpanTreeForceVersion"),
        ("WING-MIB", "wingCfgProfIfSpanTreeGuard"),
        ("WING-MIB", "wingCfgWipsName"),
        ("WING-MIB", "wingCfgWipsEnable"),
        ("WING-MIB", "wingCfgWipsHistoryThrottleDuration"),
        ("WING-MIB", "wingCfgWipsApDetection"),
        ("WING-MIB", "wingCfgWipsApDetectionAgeout"),
        ("WING-MIB", "wingCfgWipsApDetectionWaitTime"),
        ("WING-MIB", "wingCfgWipsDeviceCategorization"),
        ("WING-MIB", "wingCfgRfdWlanSsidOverrideWlan"),
        ("WING-MIB", "wingCfgRfdWlanSsidOverrideSsid"),
        ("WING-MIB", "wingCfgRfdWlanVlanOverrideWlan"),
        ("WING-MIB", "wingCfgMgmtSnmpUsmUserName"),
        ("WING-MIB", "wingCfgMgmtSnmpUsmUserAuthentication"),
        ("WING-MIB", "wingCfgMgmtSnmpUsmUserEncryption"),
        ("WING-MIB", "wingCfgMgmtSnmpUsmUserPassword"),
        ("WING-MIB", "wingCfgProfRouteNetwork"),
        ("WING-MIB", "wingCfgProfRouteGateway"),
        ("WING-MIB", "wingCfgProfNtpSvrServerIp"),
        ("WING-MIB", "wingCfgProfNtpSvrAuthenkey"),
        ("WING-MIB", "wingCfgProfNtpSvrAutokey"),
        ("WING-MIB", "wingCfgProfNtpSvrKeyStr"),
        ("WING-MIB", "wingCfgProfNtpSvrPrefer"),
        ("WING-MIB", "wingCfgProfNtpSvrVersion"),
        ("WING-MIB", "wingCfgProfClstClstName"),
        ("WING-MIB", "wingCfgProfClstClstMemberVlan"),
        ("WING-MIB", "wingCfgProfClstClstMode"),
        ("WING-MIB", "wingCfgProfClstClstMasterPriority"),
        ("WING-MIB", "wingCfgProfClstHandleStp"),
        ("WING-MIB", "wingCfgProfClstAutoRevert"),
        ("WING-MIB", "wingCfgProfClstAutoRevertDelay"),
        ("WING-MIB", "wingCfgProfMintLevel1AreaId"),
        ("WING-MIB", "wingCfgProfMintSpfLatency"),
        ("WING-MIB", "wingCfgProfMintDisPriorityAdjustment"),
        ("WING-MIB", "wingCfgProfIfWwanApn"),
        ("WING-MIB", "wingCfgProfIfWwanAuth"),
        ("WING-MIB", "wingCfgProfIfWwanUser"),
        ("WING-MIB", "wingCfgProfIfWwanPwd"),
        ("WING-MIB", "wingCfgProfIfWwanCryptomap"),
        ("WING-MIB", "wingCfgProfIfWwanNatDirection"),
        ("WING-MIB", "wingCfgProfCrlUpdateTrustpoint"),
        ("WING-MIB", "wingCfgProfCrlUpdateUrl"),
        ("WING-MIB", "wingCfgProfCrlUpdateInterval"),
        ("WING-MIB", "wingCfgProfNatPoolName"),
        ("WING-MIB", "wingCfgProfControllerHostHost"),
        ("WING-MIB", "wingCfgProfControllerHostPool"),
        ("WING-MIB", "wingCfgProfControllerHostLevel"),
        ("WING-MIB", "wingCfgMacAclRulePrecedence"),
        ("WING-MIB", "wingCfgMacAclRuleAllow"),
        ("WING-MIB", "wingCfgMacAclRulePriorityField"),
        ("WING-MIB", "wingCfgMacAclRuleMarkDscp"),
        ("WING-MIB", "wingCfgMacAclRuleMark8021p"),
        ("WING-MIB", "wingCfgMacAclRuleDescription"),
        ("WING-MIB", "wingCfgMacAclRuleSmac"),
        ("WING-MIB", "wingCfgMacAclRuleSmacMask"),
        ("WING-MIB", "wingCfgMacAclRuleDmac"),
        ("WING-MIB", "wingCfgMacAclRuleDmacMask"),
        ("WING-MIB", "wingCfgMacAclRuleMatchVlan"),
        ("WING-MIB", "wingCfgMacAclRuleMatchDot1p"),
        ("WING-MIB", "wingCfgMacAclRuleMatchType"),
        ("WING-MIB", "wingCfgWlanVlanId"),
        ("WING-MIB", "wingCfgWlanVlanLimit"),
        ("WING-MIB", "wingCfgAaaAuthSrvrIdx"),
        ("WING-MIB", "wingCfgAaaAuthSrvrType"),
        ("WING-MIB", "wingCfgAaaAuthSrvrHost"),
        ("WING-MIB", "wingCfgAaaAuthSrvrSecret"),
        ("WING-MIB", "wingCfgAaaAuthSrvrPort"),
        ("WING-MIB", "wingCfgAaaAuthSrvrTimeout"),
        ("WING-MIB", "wingCfgAaaAuthSrvrAttempts"),
        ("WING-MIB", "wingCfgAaaAuthSrvrProxyMode"),
        ("WING-MIB", "wingCfgAaaAuthSrvrNaiRouting"),
        ("WING-MIB", "wingCfgAaaAuthSrvrRealmType"),
        ("WING-MIB", "wingCfgAaaAuthSrvrRealm"),
        ("WING-MIB", "wingCfgAaaAuthSrvrStripRealm"),
        ("WING-MIB", "wingCfgAaaAuthSrvrRetryTimeoutFactor"),
        ("WING-MIB", "wingCfgAaaAuthSrvrNacEnable"),
        ("WING-MIB", "wingCfgAaaAuthSrvrDscp"),
        ("WING-MIB", "wingCfgAaaAcctSrvrIdx"),
        ("WING-MIB", "wingCfgAaaAcctSrvrType"),
        ("WING-MIB", "wingCfgAaaAcctSrvrHost"),
        ("WING-MIB", "wingCfgAaaAcctSrvrSecret"),
        ("WING-MIB", "wingCfgAaaAcctSrvrPort"),
        ("WING-MIB", "wingCfgAaaAcctSrvrTimeout"),
        ("WING-MIB", "wingCfgAaaAcctSrvrAttempts"),
        ("WING-MIB", "wingCfgAaaAcctSrvrProxyMode"),
        ("WING-MIB", "wingCfgAaaAcctSrvrNaiRouting"),
        ("WING-MIB", "wingCfgAaaAcctSrvrRealmType"),
        ("WING-MIB", "wingCfgAaaAcctSrvrRealm"),
        ("WING-MIB", "wingCfgAaaAcctSrvrStripRealm"),
        ("WING-MIB", "wingCfgAaaAcctSrvrRetryTimeoutFactor"),
        ("WING-MIB", "wingCfgAaaAcctSrvrDscp"),
        ("WING-MIB", "wingCfgAssocAclRulePrecedence"),
        ("WING-MIB", "wingCfgAssocAclRulePermit"),
        ("WING-MIB", "wingCfgAssocAclRuleMac0"),
        ("WING-MIB", "wingCfgAssocAclRuleMac1"),
        ("WING-MIB", "wingCfgIpAclRulePrecedence"),
        ("WING-MIB", "wingCfgIpAclRuleAllow"),
        ("WING-MIB", "wingCfgIpAclRulePriorityField"),
        ("WING-MIB", "wingCfgIpAclRuleMarkDscp"),
        ("WING-MIB", "wingCfgIpAclRuleMark8021p"),
        ("WING-MIB", "wingCfgIpAclRuleDescription"),
        ("WING-MIB", "wingCfgIpAclRuleProtocol"),
        ("WING-MIB", "wingCfgIpAclRuleSip"),
        ("WING-MIB", "wingCfgIpAclRuleDip"),
        ("WING-MIB", "wingCfgRfdStatsWindowIdx"),
        ("WING-MIB", "wingCfgRfdStatsWindowSampleInterval"),
        ("WING-MIB", "wingCfgRfdStatsWindowWindowSize"),
        ("WING-MIB", "wingCfgProfBridgeVlanId"),
        ("WING-MIB", "wingCfgProfBridgeVlanDesc"),
        ("WING-MIB", "wingCfgProfBridgeVlanEdgeVlan"),
        ("WING-MIB", "wingCfgProfBridgeVlanBridgingMode"),
        ("WING-MIB", "wingCfgProfBridgeVlanIpArpTrust"),
        ("WING-MIB", "wingCfgProfBridgeVlanIpDhcpTrust"),
        ("WING-MIB", "wingCfgProfBridgeVlanTunnelMacOutAcl"),
        ("WING-MIB", "wingCfgProfBridgeVlanTunnelIpOutAcl"),
        ("WING-MIB", "wingCfgRfdSensorSvrIdx"),
        ("WING-MIB", "wingCfgRfdSensorSvrIp"),
        ("WING-MIB", "wingCfgRfdSensorSvrPort"),
        ("WING-MIB", "wingCfgDevIfName"),
        ("WING-MIB", "wingCfgDevIfDescription"),
        ("WING-MIB", "wingCfgDevIfType"),
        ("WING-MIB", "wingCfgDevIfShutdown"),
        ("WING-MIB", "wingCfgDevIfIpInAcl"),
        ("WING-MIB", "wingCfgDevIfMacInAcl"),
        ("WING-MIB", "wingCfgDevIfRadioRfMode"),
        ("WING-MIB", "wingCfgDevIfRadioChannel"),
        ("WING-MIB", "wingCfgDevIfRadioPower"),
        ("WING-MIB", "wingCfgDevIfRadioPlacement"),
        ("WING-MIB", "wingCfgDevIfRadioBeaconInterval"),
        ("WING-MIB", "wingCfgDevIfRadioRtsThreshold"),
        ("WING-MIB", "wingCfgDevIfRadioOffChannelScan"),
        ("WING-MIB", "wingCfgDevIfRadioPreambleShort"),
        ("WING-MIB", "wingCfgDevIfRadioGuardInterval"),
        ("WING-MIB", "wingCfgDevIfRadioAmpduMode"),
        ("WING-MIB", "wingCfgDevIfRadioAmsduMode"),
        ("WING-MIB", "wingCfgDevIfRadioRifsMode"),
        ("WING-MIB", "wingCfgDevIfRadioAmpduMaxAggrSizeRx"),
        ("WING-MIB", "wingCfgDevIfRadioAmpduMaxAggrSizeTx"),
        ("WING-MIB", "wingCfgDevIfRadioAmpduMinSpacing"),
        ("WING-MIB", "wingCfgDevIfRadioAntennaMode"),
        ("WING-MIB", "wingCfgDevIfRadioNonUnicastForwarding"),
        ("WING-MIB", "wingCfgDevIfRadioDynamicChainSelection"),
        ("WING-MIB", "wingCfgDevIfRadioLockRfMode"),
        ("WING-MIB", "wingCfgDevIfRadioSnifferRedirHost"),
        ("WING-MIB", "wingCfgDevIfRadioSnifferRedirChannel"),
        ("WING-MIB", "wingCfgDevIfRadioMesh"),
        ("WING-MIB", "wingCfgDevIfRadioMeshLinks"),
        ("WING-MIB", "wingCfgDevIfRadioProbeResponseRetry"),
        ("WING-MIB", "wingCfgDevIfRadioProbeResponseRate"),
        ("WING-MIB", "wingCfgDevIfRadioMaxClients"),
        ("WING-MIB", "wingCfgDevIfRadioRadioTapMode"),
        ("WING-MIB", "wingCfgDevIfRadioWirelessClientPower"),
        ("WING-MIB", "wingCfgDevIfRadioLoadBalLfCount"),
        ("WING-MIB", "wingCfgDevIfRadioLoadBalLfThroughput"),
        ("WING-MIB", "wingCfgDevIfRadioLoadBalWmCount"),
        ("WING-MIB", "wingCfgDevIfRadioLoadBalWmTput"),
        ("WING-MIB", "wingCfgDevIfRadioAssocAcl"),
        ("WING-MIB", "wingCfgDevIfRadioQosPolicy"),
        ("WING-MIB", "wingCfgDevWlanSsidOverrideWlan"),
        ("WING-MIB", "wingCfgDevWlanSsidOverrideSsid"),
        ("WING-MIB", "wingCfgDevWlanVlanOverrideWlan"),
        ("WING-MIB", "wingCfgDevIfEthSpeed"),
        ("WING-MIB", "wingCfgDevIfEthDuplex"),
        ("WING-MIB", "wingCfgDevIfEthSwitchportMode"),
        ("WING-MIB", "wingCfgDevIfEthSwitchportNativeVlan"),
        ("WING-MIB", "wingCfgDevIfEthSwitchportNativeVlanTagged"),
        ("WING-MIB", "wingCfgDevIfEthArpTrust"),
        ("WING-MIB", "wingCfgDevIfEthDhcpTrust"),
        ("WING-MIB", "wingCfgDevIfEthArpHeaderMismatchValidation"),
        ("WING-MIB", "wingCfgDevIfEthQosTrustDscp"),
        ("WING-MIB", "wingCfgDevIfEthQosTrust802dot1p"),
        ("WING-MIB", "wingCfgDevIfEthStaticChannelGroup"),
        ("WING-MIB", "wingCfgDevIfEthPoeSupported"),
        ("WING-MIB", "wingCfgDevIfEthPoePower"),
        ("WING-MIB", "wingCfgDevIfEthPoeLimit"),
        ("WING-MIB", "wingCfgDevIfEthPoePriority"),
        ("WING-MIB", "wingCfgDevIfEthDot1xSupported"),
        ("WING-MIB", "wingCfgDevIfEthDot1xEnable"),
        ("WING-MIB", "wingCfgDevIfEthDot1xUsername"),
        ("WING-MIB", "wingCfgDevIfEthDot1xPassword"),
        ("WING-MIB", "wingCfgDevIfEthCdpReceive"),
        ("WING-MIB", "wingCfgDevIfEthCdpTransmit"),
        ("WING-MIB", "wingCfgDevIfEthLldpReceive"),
        ("WING-MIB", "wingCfgDevIfEthLldpTransmit"),
        ("WING-MIB", "wingCfgDevIfEthPortChannelLoadBalance"),
        ("WING-MIB", "wingCfgDevIfVlanVlan"),
        ("WING-MIB", "wingCfgDevIfVlanDhcpcOptAll"),
        ("WING-MIB", "wingCfgDevIfVlanNatDirection"),
        ("WING-MIB", "wingCfgDevIfVlanCryptoMap"),
        ("WING-MIB", "wingCfgDevIfVlanDhcpRelayIncoming"),
        ("WING-MIB", "wingCfgDevIfSpanTreeLinkType"),
        ("WING-MIB", "wingCfgDevIfSpanTreePortfast"),
        ("WING-MIB", "wingCfgDevIfSpanTreeEdgeport"),
        ("WING-MIB", "wingCfgDevIfSpanTreeBpduguard"),
        ("WING-MIB", "wingCfgDevIfSpanTreeBpdufilter"),
        ("WING-MIB", "wingCfgDevIfSpanTreePortCiscoInterop"),
        ("WING-MIB", "wingCfgDevIfSpanTreeForceVersion"),
        ("WING-MIB", "wingCfgDevIfSpanTreeGuard"),
        ("WING-MIB", "wingCfgProfVpnLifetimeSeconds"),
        ("WING-MIB", "wingCfgProfVpnLifetimeKb"),
        ("WING-MIB", "wingCfgProfVpnIkev1GlobalDpdKeepalive"),
        ("WING-MIB", "wingCfgProfVpnIkev1GlobalDpdRetries"),
        ("WING-MIB", "wingCfgProfVpnIkev1GlobalNatKeepalive"),
        ("WING-MIB", "wingCfgProfVpnIkev2GlobalDpdKeepalive"),
        ("WING-MIB", "wingCfgProfVpnIkev2GlobalDpdRetries"),
        ("WING-MIB", "wingCfgProfVpnIkev2GlobalNatKeepalive"),
        ("WING-MIB", "wingCfgProfVpnCookieChallengeThreshold"),
        ("WING-MIB", "wingCfgProfVpnMaxInNegotiationSa"),
        ("WING-MIB", "wingCfgProfVpnDfBit"),
        ("WING-MIB", "wingCfgProfVpnIkev1Name"),
        ("WING-MIB", "wingCfgProfVpnIkev1Mode"),
        ("WING-MIB", "wingCfgProfVpnIkev1IsakmpLifetime"),
        ("WING-MIB", "wingCfgProfVpnIkev1DpdKeepalive"),
        ("WING-MIB", "wingCfgProfVpnIkev1DpdRetries"),
        ("WING-MIB", "wingCfgProfVpnIkev1IsakmpHash"),
        ("WING-MIB", "wingCfgProfVpnIkev2Name"),
        ("WING-MIB", "wingCfgProfVpnIkev2IsakmpLifetime"),
        ("WING-MIB", "wingCfgProfVpnIkev2DpdKeepalive"),
        ("WING-MIB", "wingCfgProfVpnIkev2IsakmpHash"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerName"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerIpType"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerIpValue"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerLocalidType"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerLocalidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerRemoteidType"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerRemoteidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerIkev1Policy"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerName"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerIpType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerIpValue"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerLocalidType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerLocalidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerRemoteidType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerRemoteidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerIkev2Policy"),
        ("WING-MIB", "wingCfgProfVpnTransformName"),
        ("WING-MIB", "wingCfgProfVpnTransformCipherAlgo"),
        ("WING-MIB", "wingCfgProfVpnTransformAuthAlgo"),
        ("WING-MIB", "wingCfgProfVpnTransformMode"),
        ("WING-MIB", "wingCfgProfVpnCryptoName"),
        ("WING-MIB", "wingCfgProfNtpSvrServerIp"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime"),
        ("WING-MIB", "wingCfgProfVrrpVersion"),
        ("WING-MIB", "wingCfgProfVrrpGroupVirtualRouterId"),
        ("WING-MIB", "wingCfgProfVrrpGroupDescription"),
        ("WING-MIB", "wingCfgProfVrrpGroupPriority"),
        ("WING-MIB", "wingCfgProfVrrpGroupAdvertisementIntervalV2"),
        ("WING-MIB", "wingCfgProfVrrpGroupAdvertisementIntervalV3"),
        ("WING-MIB", "wingCfgProfVrrpGroupPreempt"),
        ("WING-MIB", "wingCfgProfVrrpGroupPreemptDelay"),
        ("WING-MIB", "wingCfgProfVrrpGroupCrmAction"),
        ("WING-MIB", "wingCfgProfVrrpGroupDeltaPriority"),
        ("WING-MIB", "wingCfgProfVrrpGroupInterface"),
        ("WING-MIB", "wingCfgProfVrrpGroupSyncGroup"),
        ("WING-MIB", "wingCfgDevVrrpVersion"),
        ("WING-MIB", "wingCfgDevVrrpGroupVirtualRouterId"),
        ("WING-MIB", "wingCfgDevVrrpGroupDescription"),
        ("WING-MIB", "wingCfgDevVrrpGroupPriority"),
        ("WING-MIB", "wingCfgDevVrrpGroupAdvertisementIntervalV2"),
        ("WING-MIB", "wingCfgDevVrrpGroupAdvertisementIntervalV3"),
        ("WING-MIB", "wingCfgDevVrrpGroupPreempt"),
        ("WING-MIB", "wingCfgDevVrrpGroupPreemptDelay"),
        ("WING-MIB", "wingCfgDevVrrpGroupCrmAction"),
        ("WING-MIB", "wingCfgDevVrrpGroupDeltaPriority"),
        ("WING-MIB", "wingCfgDevVrrpGroupInterface"),
        ("WING-MIB", "wingCfgDevVrrpGroupSyncGroup"),
        ("WING-MIB", "wingCfgProfDynRouteOspfEnabled"),
        ("WING-MIB", "wingCfgProfDynRouteOspfRouterId"),
        ("WING-MIB", "wingCfgProfDynRouteOspfAutoCost"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassiveAll"),
        ("WING-MIB", "wingCfgProfIfVlanOspfOspfAuthentication"),
        ("WING-MIB", "wingCfgProfIfVlanOspfOspfAuthKey"),
        ("WING-MIB", "wingCfgProfIfVlanOspfOspfPriority"),
        ("WING-MIB", "wingCfgProfIfVlanOspfOspfCost"),
        ("WING-MIB", "wingCfgDevIfVlanOspfOspfAuthentication"),
        ("WING-MIB", "wingCfgDevIfVlanOspfOspfAuthKey"),
        ("WING-MIB", "wingCfgDevIfVlanOspfOspfPriority"),
        ("WING-MIB", "wingCfgDevIfVlanOspfOspfCost"),
        ("WING-MIB", "wingCfgDevIfPppoeAuthType"),
        ("WING-MIB", "wingCfgDevIfPppoeIdleTime"),
        ("WING-MIB", "wingCfgDevIfPppoeKeepalive"),
        ("WING-MIB", "wingCfgDevIfPppoeUsername"),
        ("WING-MIB", "wingCfgDevIfPppoePassword"),
        ("WING-MIB", "wingCfgDevIfPppoeService"),
        ("WING-MIB", "wingCfgDevIfPppoeLocalnetVlan"),
        ("WING-MIB", "wingCfgDevIfPppoeMtu"),
        ("WING-MIB", "wingCfgProfIfPppoeAuthType"),
        ("WING-MIB", "wingCfgProfIfPppoeIdleTime"),
        ("WING-MIB", "wingCfgProfIfPppoeKeepalive"),
        ("WING-MIB", "wingCfgProfIfPppoeUsername"),
        ("WING-MIB", "wingCfgProfIfPppoePassword"),
        ("WING-MIB", "wingCfgProfIfPppoeService"),
        ("WING-MIB", "wingCfgProfIfPppoeLocalnetVlan"),
        ("WING-MIB", "wingCfgProfIfPppoeMtu"),
        ("WING-MIB", "wingCfgDevBridgeVlanId"),
        ("WING-MIB", "wingCfgDevBridgeVlanDescription"),
        ("WING-MIB", "wingCfgDevBridgeVlanEdgeVlan"),
        ("WING-MIB", "wingCfgDevBridgeVlanBridgingMode"),
        ("WING-MIB", "wingCfgDevBridgeVlanIpArpTrust"),
        ("WING-MIB", "wingCfgDevBridgeVlanIpDhcpTrust"),
        ("WING-MIB", "wingCfgDevBridgeVlanTunnelMacOutAcl"),
        ("WING-MIB", "wingCfgDevBridgeVlanTunnelIpOutAcl"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgs"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgsQuerier"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgsQuerierVersion"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgsQuerierAddress"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast"),
        ("WING-MIB", "wingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp"),
        ("WING-MIB", "wingCfgRouteName"),
        ("WING-MIB", "wingCfgRouteLogging"),
        ("WING-MIB", "wingCfgRouteLocalPbr"),
        ("WING-MIB", "wingCfgRouteMapPrecedence"),
        ("WING-MIB", "wingCfgRouteMapMatchClauseAcl"),
        ("WING-MIB", "wingCfgRouteMapMatchClauseDscp"),
        ("WING-MIB", "wingCfgRouteMapMatchClauseWlan"),
        ("WING-MIB", "wingCfgRouteMapRolePolicy"),
        ("WING-MIB", "wingCfgRouteMapUserRole"),
        ("WING-MIB", "wingCfgRouteMapMatchClauseIncomingInterface"),
        ("WING-MIB", "wingCfgRouteMapNextHop1"),
        ("WING-MIB", "wingCfgRouteMapNextHop2"),
        ("WING-MIB", "wingCfgRouteMapSetClauseDefaultNextHop"),
        ("WING-MIB", "wingCfgRouteUseCrm"),
        ("WING-MIB", "wingCfgRouteMapSetClauseFallback"),
        ("WING-MIB", "wingCfgRouteMapSetClauseMarkDscp"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgs"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsQuerier"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsQuerierVersion"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsQuerierAddress"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast"),
        ("WING-MIB", "wingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnooping"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingQuerier"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingQuerierAddress"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingQuerierVersion"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval"),
        ("WING-MIB", "wingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnooping"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingQuerier"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingQuerierAddress"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingQuerierVersion"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval"),
        ("WING-MIB", "wingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable"),
        ("WING-MIB", "wingCfgDevVpnLifetimeSeconds"),
        ("WING-MIB", "wingCfgDevVpnLifetimeKb"),
        ("WING-MIB", "wingCfgDevVpnIkev1GlobalDpdKeepalive"),
        ("WING-MIB", "wingCfgDevVpnIkev1GlobalDpdRetries"),
        ("WING-MIB", "wingCfgDevVpnIkev1GlobalNatKeepalive"),
        ("WING-MIB", "wingCfgDevVpnIkev2GlobalDpdKeepalive"),
        ("WING-MIB", "wingCfgDevVpnIkev2GlobalDpdRetries"),
        ("WING-MIB", "wingCfgDevVpnIkev2GlobalNatKeepalive"),
        ("WING-MIB", "wingCfgDevVpnCookieChallengeThreshold"),
        ("WING-MIB", "wingCfgDevVpnMaxInNegotiationSa"),
        ("WING-MIB", "wingCfgDevVpnIkev1Name"),
        ("WING-MIB", "wingCfgDevVpnIkev1Mode"),
        ("WING-MIB", "wingCfgDevVpnIkev1IsakmpLifetime"),
        ("WING-MIB", "wingCfgDevVpnIkev1DpdKeepalive"),
        ("WING-MIB", "wingCfgDevVpnIkev1DpdRetries"),
        ("WING-MIB", "wingCfgDevVpnIkev2Name"),
        ("WING-MIB", "wingCfgDevVpnIkev2IkeLifetime"),
        ("WING-MIB", "wingCfgDevVpnIkev2DpdKeepalive"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerName"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerIpType"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerIpValue"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerAuthType"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerAuthKey"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerLocalidType"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerLocalidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerRemoteidType"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerRemoteidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev1PeerIkev1Policy"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerName"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerIpType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerIpValue"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerLocalAuthType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerLocalAuthKey"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerRemoteAuthType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerRemoteAuthKey"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerLocalidType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerLocalidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerRemoteidType"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerRemoteidValue"),
        ("WING-MIB", "wingCfgProfVpnIkev2PeerIkev2Policy"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerName"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerIpType"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerIpValue"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerAuthType"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerAuthKey"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerLocalidType"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerLocalidValue"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerRemoteidType"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerRemoteidValue"),
        ("WING-MIB", "wingCfgDevVpnIkev1PeerIkev1Policy"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerName"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerIpType"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerIpValue"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerLocalAuthType"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerLocalAuthKey"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerRemoteAuthType"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerRemoteAuthKey"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerLocalidType"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerLocalidValue"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerRemoteidType"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerRemoteidValue"),
        ("WING-MIB", "wingCfgDevVpnIkev2PeerIkev2Policy"),
        ("WING-MIB", "wingCfgVersionVal"),
        ("WING-MIB", "wingCfgPasswordEncVal"),
        ("WING-MIB", "wingCfgPasswordEncSetOldPassphrase"),
        ("WING-MIB", "wingCfgPasswordEncSetNewPassphrase"),
        ("WING-MIB", "wingCfgDevDynRouteOspfEnabled"),
        ("WING-MIB", "wingCfgDevDynRouteOspfRouterId"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAutoCost"),
        ("WING-MIB", "wingCfgDevDynRouteOspfPassiveAll"),
        ("WING-MIB", "wingCfgDevVpnTransformName"),
        ("WING-MIB", "wingCfgDevVpnTransformCipherAlgo"),
        ("WING-MIB", "wingCfgDevVpnTransformAuthAlgo"),
        ("WING-MIB", "wingCfgDevVpnTransformMode"),
        ("WING-MIB", "wingCfgDevVpnCryptoName"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteAuthMethod"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteAaaPolicy"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteIpLocalPool"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteWinsServerType"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteWinsServerIp"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteNameServerType"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteNameServerIp"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteAuthMethod"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteAaaPolicy"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteIpLocalPool"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteDhcpServerType"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteDhcpServer"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteDhcpServerGiaddr"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteNetmask"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteWinsServerType"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteWinsServerIp"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteNameServerType"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteNameServerIp"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteAuthMethod"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteAaaPolicy"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteIpLocalPool"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteWinsServerType"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteWinsServerIp"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteNameServerType"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteNameServerIp"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteAuthMethod"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteAaaPolicy"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteIpLocalPool"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteDhcpServerType"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteDhcpServer"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteDhcpServerGiaddr"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteNetmask"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteWinsServerType"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteWinsServerIp"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteNameServerType"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteNameServerIp"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxBytes"),
        ("WING-MIB", "wingStatsDevSysInfoFreeMem"),
        ("WING-MIB", "wingStatsDevSysInfoTotalMem"),
        ("WING-MIB", "wingStatsDevSysInfoFreeRamCurrent"),
        ("WING-MIB", "wingStatsDevSysInfoFreeRamLimit"),
        ("WING-MIB", "wingStatsDevSysInfoFdMax"),
        ("WING-MIB", "wingStatsDevSysInfoFdCurrent"),
        ("WING-MIB", "wingStatsDevSysInfoFdLimit"),
        ("WING-MIB", "wingStatsDevSysInfoLoadLimitS0"),
        ("WING-MIB", "wingStatsDevSysInfoLoadLimitS1"),
        ("WING-MIB", "wingStatsDevSysInfoLoadLimitS2"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent0"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent1"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent2"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent3"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent4"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent5"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent6"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent7"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent8"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent9"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent10"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent11"),
        ("WING-MIB", "wingStatsDevSysInfoBufferCurrent12"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal0"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal1"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal2"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal3"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal4"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal5"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal6"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal7"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal8"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal9"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal10"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal11"),
        ("WING-MIB", "wingStatsDevSysInfoBufferTotal12"),
        ("WING-MIB", "wingStatsDevSysProductName"),
        ("WING-MIB", "wingStatsDevSysSerialNo"),
        ("WING-MIB", "wingStatsDevSysVersion"),
        ("WING-MIB", "wingStatsDevSysPrimaryVersion"),
        ("WING-MIB", "wingStatsDevSysSecondaryVersion"),
        ("WING-MIB", "wingStatsDevSysPrimaryBuildDate"),
        ("WING-MIB", "wingStatsDevSysSecondaryBuildDate"),
        ("WING-MIB", "wingStatsDevSysPrimaryInstallDate"),
        ("WING-MIB", "wingStatsDevSysSecondaryInstallDate"),
        ("WING-MIB", "wingStatsDevSysBootPartition"),
        ("WING-MIB", "wingStatsDevSysNextBoot"),
        ("WING-MIB", "wingStatsDevSysIsFallback"),
        ("WING-MIB", "wingStatsDevSysImgFallback"),
        ("WING-MIB", "wingStatsDevSysUptime"),
        ("WING-MIB", "wingStatsDevSysCpu"),
        ("WING-MIB", "wingStatsDevSysRam"),
        ("WING-MIB", "wingStatsDevSysClock"),
        ("WING-MIB", "wingStatsDevSysUpgradeStatus"),
        ("WING-MIB", "wingStatsDevSysUpgradeTime"),
        ("WING-MIB", "wingStatsDevSysPoeFwVersion"),
        ("WING-MIB", "wingStatsDevSysFpgaVersion"),
        ("WING-MIB", "wingStatsDevSysModelNumber"),
        ("WING-MIB", "wingStatsDevIfName"),
        ("WING-MIB", "wingStatsDevIfIndex"),
        ("WING-MIB", "wingStatsDevIfHwType"),
        ("WING-MIB", "wingStatsDevIfMode"),
        ("WING-MIB", "wingStatsDevIfMac"),
        ("WING-MIB", "wingStatsDevIfStatusAdmin"),
        ("WING-MIB", "wingStatsDevIfMtu"),
        ("WING-MIB", "wingStatsDevIfGoodOctetsRcv"),
        ("WING-MIB", "wingStatsDevIfGoodPktsRcv"),
        ("WING-MIB", "wingStatsDevIfDropEvents"),
        ("WING-MIB", "wingStatsDevIfUcPktsRcv"),
        ("WING-MIB", "wingStatsDevIfBrdcPktsRcv"),
        ("WING-MIB", "wingStatsDevIfMcPktsRcv"),
        ("WING-MIB", "wingStatsDevIfBadPktsRcv"),
        ("WING-MIB", "wingStatsDevIfUndersizePkts"),
        ("WING-MIB", "wingStatsDevIfOversizePkts"),
        ("WING-MIB", "wingStatsDevIfBadCrc"),
        ("WING-MIB", "wingStatsDevIfMacRcvError"),
        ("WING-MIB", "wingStatsDevIfFragmentsPkts"),
        ("WING-MIB", "wingStatsDevIfJabberPkts"),
        ("WING-MIB", "wingStatsDevIfGoodOctetsSent"),
        ("WING-MIB", "wingStatsDevIfGoodPktsSent"),
        ("WING-MIB", "wingStatsDevIfMacTransmitErr"),
        ("WING-MIB", "wingStatsDevIfUcPktsSent"),
        ("WING-MIB", "wingStatsDevIfBrdcPktsSent"),
        ("WING-MIB", "wingStatsDevIfMcPktsSent"),
        ("WING-MIB", "wingStatsDevIfLateCollisions"),
        ("WING-MIB", "wingStatsDevIfExcessiveCollisions"),
        ("WING-MIB", "wingStatsDevIfCollisions"),
        ("WING-MIB", "wingStatsDevIfMetric"),
        ("WING-MIB", "wingStatsDevIfRxFifoErrors"),
        ("WING-MIB", "wingStatsDevIfRxOverErrors"),
        ("WING-MIB", "wingStatsDevIfTxWindowErrors"),
        ("WING-MIB", "wingStatsDevIfTxFifoErrors"),
        ("WING-MIB", "wingStatsDevIfTxAbortedErrors"),
        ("WING-MIB", "wingStatsDevIfTxCarrierErrors"),
        ("WING-MIB", "wingStatsDevIfTxDropped"),
        ("WING-MIB", "wingStatsDevIfRxLengthErrors"),
        ("WING-MIB", "wingStatsDevIfRxMissedErrors"),
        ("WING-MIB", "wingStatsDevIfRxFrameErrors"),
        ("WING-MIB", "wingStatsDevIfTxErrors"),
        ("WING-MIB", "wingStatsDevIfTxHeartbeatErrors"),
        ("WING-MIB", "wingStatsRfdWlClientStatTxBytes"),
        ("WING-MIB", "wingStatsRfdWlClientStatRxBytes"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxBytes"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxBytes"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTxBytes"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawRxBytes"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRawTotalBytes"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxBcmcPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxBcmcPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTotalBcmcPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxMgmtPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailRxMgmtPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTotalMgmtPkts"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxRetries"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTotalBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTxBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatRxBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTxBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawRxBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRawTotalBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxBcmcPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxBcmcPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTotalBcmcPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxMgmtPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxMgmtPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTotalMgmtPkts"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxRetries"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTotalBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailRxRetries"),
        ("WING-MIB", "wingCfgProfIfRadioBssmapWlan"),
        ("WING-MIB", "wingCfgProfIfRadioBssmapBss"),
        ("WING-MIB", "wingCfgProfIfRadioBssmapPrimary"),
        ("WING-MIB", "wingCfgRfdWlanVlanOverrideInstVlan"),
        ("WING-MIB", "wingCfgRfdWlanVlanOverrideInstLimit"),
        ("WING-MIB", "wingCfgDevIfRadioBssmapWlan"),
        ("WING-MIB", "wingCfgDevIfRadioBssmapBss"),
        ("WING-MIB", "wingCfgDevIfRadioBssmapPrimary"),
        ("WING-MIB", "wingCfgDevWlanVlanOverrideInstVlan"),
        ("WING-MIB", "wingCfgDevWlanVlanOverrideInstLimit"),
        ("WING-MIB", "wingCfgDevStatsWindowIdx"),
        ("WING-MIB", "wingCfgDevStatsWindowSampleInterval"),
        ("WING-MIB", "wingCfgDevStatsWindowWindowSize"),
        ("WING-MIB", "wingActionFileCopyInMac"),
        ("WING-MIB", "wingActionFileCopyInFrom"),
        ("WING-MIB", "wingActionFileCopyInTo"),
        ("WING-MIB", "wingActionFileCopyOutStatus"),
        ("WING-MIB", "wingActionFileCopyOutMessage"),
        ("WING-MIB", "wingActionFileCopyRun"),
        ("WING-MIB", "wingStatsNocDevMac"),
        ("WING-MIB", "wingStatsNocDevHostname"),
        ("WING-MIB", "wingStatsNocDevType"),
        ("WING-MIB", "wingStatsNocDevClusterName"),
        ("WING-MIB", "wingStatsNocDevRfDomainName"),
        ("WING-MIB", "wingStatsNocDevAdoptedBy"),
        ("WING-MIB", "wingStatsNocDevOnline"),
        ("WING-MIB", "wingStatsNocDevReporter"),
        ("WING-MIB", "wingStatsNocDevLastUpdate"),
        ("WING-MIB", "wingStatsNocDevHasRadio"),
        ("WING-MIB", "wingStatsNocDevIsController"),
        ("WING-MIB", "wingStatsNocDevProfileName"),
        ("WING-MIB", "wingStatsRfdWlClientStatDetailTxRetriedBytes"),
        ("WING-MIB", "wingStatsRfdWlRadioStatDetailTxRetriedBytes"),
        ("WING-MIB", "wingStatsRfdWlApInfoIp"),
        ("WING-MIB", "wingActionFileMD5sumInMac"),
        ("WING-MIB", "wingActionFileMD5sumInPath"),
        ("WING-MIB", "wingActionFileMD5sumOutStatus"),
        ("WING-MIB", "wingActionFileMD5sumOutMessage"),
        ("WING-MIB", "wingActionFileMD5sumRun"),
        ("WING-MIB", "wingActionDisassociateClientInRfDomainName"),
        ("WING-MIB", "wingActionDisassociateClientInMac"),
        ("WING-MIB", "wingActionDisassociateClientInWlanName"),
        ("WING-MIB", "wingActionDisassociateClientOutStatus"),
        ("WING-MIB", "wingActionDisassociateClientOutMessage"),
        ("WING-MIB", "wingActionDisassociateClientRun"),
        ("WING-MIB", "wingStatsDevAdoptDevBy"),
        ("WING-MIB", "wingStatsDevAdoptDevLastAdoption"),
        ("WING-MIB", "wingStatsDevAdoptDevModelNumber"),
        ("WING-MIB", "wingStatsDevAdoptDevStartup"),
        ("WING-MIB", "wingStatsDevAdoptDevCfgStatus"),
        ("WING-MIB", "wingStatsDevCdpNeighborIndex"),
        ("WING-MIB", "wingStatsDevCdpNeighborDevId"),
        ("WING-MIB", "wingStatsDevCdpNeighborPlatform"),
        ("WING-MIB", "wingStatsDevCdpNeighborIpList"),
        ("WING-MIB", "wingStatsDevCdpNeighborPortId"),
        ("WING-MIB", "wingStatsDevCdpNeighborTtl"),
        ("WING-MIB", "wingStatsDevCdpNeighborLocalPort"),
        ("WING-MIB", "wingStatsDevCdpNeighborDuplex"),
        ("WING-MIB", "wingCfgSysCommitLastError"),
        ("WING-MIB", "wingStatsDevWlApDetectMac"),
        ("WING-MIB", "wingStatsDevWlApDetectVendor"),
        ("WING-MIB", "wingStatsDevWlApDetectChannel"),
        ("WING-MIB", "wingStatsDevWlApDetectRadioType"),
        ("WING-MIB", "wingStatsDevWlApDetectApMode"),
        ("WING-MIB", "wingStatsDevWlApDetectSsid"),
        ("WING-MIB", "wingStatsDevWlApDetectRssi"),
        ("WING-MIB", "wingStatsDevWlApDetectLastSeen"),
        ("WING-MIB", "wingStatsDevWlApDetectFirstSeen"),
        ("WING-MIB", "wingStatsDevWlApDetectEncryption"),
        ("WING-MIB", "wingStatsDevWlApDetectReportingApMac"),
        ("WING-MIB", "wingStatsDevWlApDetectReportingApRadioNum"),
        ("WING-MIB", "wingCfgSysRunningConfigChecksum"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailWlanMapWlanName"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailWlanMapBssIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailWlanMapIsPrimary"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailBssMapBssIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailBssMapBasicRates"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailBssMapSupportedRates"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListPriority"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListType"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListIkev1Peer"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListIkev2Peer"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionDirection"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionSpi"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionAuth"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionKey"),
        ("WING-MIB", "wingCfgDevDynRouteOspfNetworkAreaId"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaId"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaAuthentication"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaRange"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaType"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaDefaultCost"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaTranslateType"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoOriginate"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoAlways"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoRtMetric"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoRtMetricType"),
        ("WING-MIB", "wingCfgDevDynRouteRedistributeRouteType"),
        ("WING-MIB", "wingCfgDevDynRouteRedistributeMetric"),
        ("WING-MIB", "wingCfgDevDynRouteRedistributeMetricType"),
        ("WING-MIB", "wingCfgDevDynRouteOspfNetwork"),
        ("WING-MIB", "wingCfgDevDynRouteOspfVrrpStateCheck"),
        ("WING-MIB", "wingCfgDevDynRouteOspfPassiveRemoved"),
        ("WING-MIB", "wingCfgDevDynRouteOspfPassive"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoRtMetricType"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoRtMetric"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoAlways"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassive"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassiveRemoved"),
        ("WING-MIB", "wingCfgProfDynRouteOspfVrrpStateCheck"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoOriginate"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfShutdownFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfShutdownDueTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfTos"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRFC2328ConformanceFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRFC1583CompatFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaquelsaFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfStubRouterAdvFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfStubRouterStartupTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfStubRouterShutdownTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfDelay"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfHoldTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfMaxHoldTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfHoldMultiplier"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExecutedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExecutedWhen"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfTimerDueFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfDueIn"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspflsaRefreshTimer"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfAbrFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfAbrType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfAsbrFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExtLsdbCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExtLsdbCsum"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaqueLsdbCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNumAreasAttached"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaBackboneFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNoSummaryFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaShortcutType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaShortcutCapability"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaInterfaceNum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaActiveInterfaces"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNssaFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNssaTransType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaStubRouterStateFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaAdminStubRoutedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaStartupTimeDue"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumFullyAdjNbrs"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaAuthType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumFullVirtualAdj"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumSpfExecuted"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumTotalLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumRouterLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaRouterLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumNetworkLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNetworkLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumSummaryLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaSummaryLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumNssaLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNssaLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoute"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesPathType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesDestType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesCost"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesArea"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesIfName"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesNextHop"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoute"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoutePathType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteArea"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteCost"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteFlags"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteAttachedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteIfName"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteNextHop"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRoute"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRoutePathType"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteArea"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteCost"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteType2Cost"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteTag"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteAttachedFlag"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteIfName"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteNextHop"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouter"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRoutersInfoIndex"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterPathType"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterArea"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterCost"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterFlags"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterAttachedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterIfName"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterNextHop"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfName"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfStatusFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfIndex"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMtu"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBandwidth"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfFlags"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfEnabled"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfInfoIndex"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfIpAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMask"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBroadcastOrP2P"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfAreaId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMtuMismatchDetectFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfNetworkType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfCost"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfTransmitDelay"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfIsmState"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfPriority"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfDesgRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfDesgRouterAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBackupDesgRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBackupDesgRouterAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMcastMembership"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfSubSecHelloFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfHelloInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfDeadInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfWaitInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfRetransmitInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfPassiveFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfHelloDueIn"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfNeighborCount"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfAdjNeighborCount"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborIndex"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborPriority"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborSelfState"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborDeadTime"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborAddr"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborIfName"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborSrcAddr"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborRetansmitCount"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborRequestCount"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborSummaryCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterId"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoAlways"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassive"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassiveRemoved"),
        ("WING-MIB", "wingCfgProfDynRouteOspfVrrpStateCheck"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoOriginate"),
        ("WING-MIB", "wingStatsDevPbrRuleString"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureGroupId"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureGroupIdAuthType"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureGroupId"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureGroupIdAuthType"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion"),
        ("WING-MIB", "wingCfgl2tpv3PolicyName"),
        ("WING-MIB", "wingCfgl2tpv3PolicyHelloInterval"),
        ("WING-MIB", "wingCfgl2tpv3PolicyRetryAttempts"),
        ("WING-MIB", "wingCfgl2tpv3PolicyRetryInterval"),
        ("WING-MIB", "wingCfgl2tpv3PolicyHideAVPs"),
        ("WING-MIB", "wingCfgl2tpv3PolicyCookieSize"),
        ("WING-MIB", "wingCfgl2tpv3PolicyRxWindowSize"),
        ("WING-MIB", "wingCfgl2tpv3PolicyTxWindowSize"),
        ("WING-MIB", "wingCfgl2tpv3PolicySequencingRequired"),
        ("WING-MIB", "wingCfgl2tpv3PolicyReconnectInterval"),
        ("WING-MIB", "wingCfgl2tpv3PolicyReconnectAttempts"),
        ("WING-MIB", "wingStatsDevPbrRuleString"),
        ("WING-MIB", "wingCfgDevIfPppoeDefaultRoutePriority"),
        ("WING-MIB", "wingCfgProfVpnIkev1IsakmpName"),
        ("WING-MIB", "wingCfgProfVpnIkev1IsakmpEncryption"),
        ("WING-MIB", "wingCfgProfVpnIkev1IsakmpGroup"),
        ("WING-MIB", "wingCfgProfVpnIkev1IsakmpHash"),
        ("WING-MIB", "wingCfgProfVpnIkev2IsakmpName"),
        ("WING-MIB", "wingCfgProfVpnIkev2IsakmpEncryption"),
        ("WING-MIB", "wingCfgProfVpnIkev2IsakmpGroup"),
        ("WING-MIB", "wingCfgProfVpnIkev2IsakmpHash"),
        ("WING-MIB", "wingCfgDevVpnIkev1IsakmpName"),
        ("WING-MIB", "wingCfgDevVpnIkev1IsakmpEncryption"),
        ("WING-MIB", "wingCfgDevVpnIkev1IsakmpGroup"),
        ("WING-MIB", "wingCfgDevVpnIkev1IsakmpHash"),
        ("WING-MIB", "wingCfgDevVpnIkev2IsakmpName"),
        ("WING-MIB", "wingCfgDevVpnIkev2IsakmpEncryption"),
        ("WING-MIB", "wingCfgDevVpnIkev2IsakmpGroup"),
        ("WING-MIB", "wingCfgDevVpnIkev2IsakmpHash"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstSequence"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstType"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstIpAcl"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstTransformSet"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstLocalip"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstPfs"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstLifetimeSeconds"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstLifetimeKb"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstRemoteType"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstModeconfig"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstPeer"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstProtocol"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstMode"),
        ("WING-MIB", "wingCfgDevDynRouteOspfNetworkAreaId"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaId"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaAuthentication"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaRange"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaType"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaDefaultCost"),
        ("WING-MIB", "wingCfgDevDynRouteOspfAreaTranslateType"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoOriginate"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoAlways"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoRtMetric"),
        ("WING-MIB", "wingCfgDevDynRouteDefaultInfoRtMetricType"),
        ("WING-MIB", "wingCfgDevDynRouteRedistributeRouteType"),
        ("WING-MIB", "wingCfgDevDynRouteRedistributeMetric"),
        ("WING-MIB", "wingCfgDevDynRouteRedistributeMetricType"),
        ("WING-MIB", "wingCfgDevDynRouteOspfNetwork"),
        ("WING-MIB", "wingCfgDevDynRouteOspfVrrpStateCheck"),
        ("WING-MIB", "wingCfgDevDynRouteOspfPassiveRemoved"),
        ("WING-MIB", "wingCfgDevDynRouteOspfPassive"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoRtMetricType"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoRtMetric"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoAlways"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassive"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassiveRemoved"),
        ("WING-MIB", "wingCfgProfDynRouteOspfVrrpStateCheck"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoOriginate"),
        ("WING-MIB", "wingCfgProfVrrpGroupAdvertisementUnit"),
        ("WING-MIB", "wingCfgProfVrrpGroupAdvertisementIntervalV2Msec"),
        ("WING-MIB", "wingCfgDevVrrpGroupAdvertisementUnit"),
        ("WING-MIB", "wingCfgDevVrrpGroupAdvertisementIntervalV2Msec"),
        ("WING-MIB", "wingCfgProfCriticalResMonitorInt"),
        ("WING-MIB", "wingCfgProfCriticalResPolicyVia"),
        ("WING-MIB", "wingCfgProfCriticalResPolicyAnyAll"),
        ("WING-MIB", "wingCfgProfCriticalResourcesAddr"),
        ("WING-MIB", "wingCfgProfCriticalResourcesMonitorType"),
        ("WING-MIB", "wingCfgProfCriticalResourcesVlan"),
        ("WING-MIB", "wingCfgDevCriticalResMonitorInt"),
        ("WING-MIB", "wingCfgDevCriticalResPolicyVia"),
        ("WING-MIB", "wingCfgDevCriticalResPolicyAnyAll"),
        ("WING-MIB", "wingCfgDevCriticalResourcesAddr"),
        ("WING-MIB", "wingCfgDevCriticalResourcesMonitorType"),
        ("WING-MIB", "wingCfgDevCriticalResourcesVlan"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrIpTtlErrs"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrVersionMismatch"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrPacketLenErr"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrChecksumErr"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrInvalidVirtualRouterId"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrAuthMismatch"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrInvalidTypePackets"),
        ("WING-MIB", "wingStatsDevVrrpGlobalErrLastProtocolErrReason"),
        ("WING-MIB", "wingStatsDevVrrpOperationVirtualRouterId"),
        ("WING-MIB", "wingStatsDevVrrpOperationIfName"),
        ("WING-MIB", "wingStatsDevVrrpOperationVersion"),
        ("WING-MIB", "wingStatsDevVrrpOperationState"),
        ("WING-MIB", "wingStatsDevVrrpOperationPriority"),
        ("WING-MIB", "wingStatsDevVrrpOperationVirtualAddr"),
        ("WING-MIB", "wingStatsDevVrrpOperationMasterAddr"),
        ("WING-MIB", "wingStatsDevVrrpOperationExpiryTimer"),
        ("WING-MIB", "wingStatsDevVrrpOperationMasterDeadTimer"),
        ("WING-MIB", "wingStatsDevVrrpDetailVirtualRouterId"),
        ("WING-MIB", "wingStatsDevVrrpDetailIfName"),
        ("WING-MIB", "wingStatsDevVrrpDetailVersion"),
        ("WING-MIB", "wingStatsDevVrrpDetailConfiguredPriority"),
        ("WING-MIB", "wingStatsDevVrrpDetailAdvertisementInterval"),
        ("WING-MIB", "wingStatsDevVrrpDetailLocalIpAddress"),
        ("WING-MIB", "wingStatsDevVrrpDetailIfStatusAdmin"),
        ("WING-MIB", "wingStatsDevVrrpDetailVirtualAddressCount"),
        ("WING-MIB", "wingStatsDevVrrpDetailPreempt"),
        ("WING-MIB", "wingStatsDevVrrpDetailPreemptDelay"),
        ("WING-MIB", "wingStatsDevVrrpDetailCrmDownAction"),
        ("WING-MIB", "wingStatsDevVrrpDetailCrmStatus"),
        ("WING-MIB", "wingStatsDevVrrpDetailCfgedDeltaPriority"),
        ("WING-MIB", "wingStatsDevVrrpDetailVirtualMacAddr"),
        ("WING-MIB", "wingStatsDevVrrpDetailSyncGroup"),
        ("WING-MIB", "wingStatsDevVrrpDetailFailoverSyncGroup"),
        ("WING-MIB", "wingStatsDevVrrpDetailMonitorIf"),
        ("WING-MIB", "wingStatsDevVrrpDetailMonitorIfStatusAdmin"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsVirtualRouterId"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsMasterTransitions"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsNewMasterReason"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsNumReceivedAdvertisement"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsAdvertisementIntervalErrs"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsNumSendAdvertisement"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsReceivedAdvtInitState"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets"),
        ("WING-MIB", "wingStatsDevVrrpRouterStatsSendPriorityZeroPackets"),
        ("WING-MIB", "wingStatsDevPbrRouteMapPrecedence"),
        ("WING-MIB", "wingStatsDevPbrPrimaryNextHopIfName"),
        ("WING-MIB", "wingStatsDevPbrPrimaryNextHopIpAddr"),
        ("WING-MIB", "wingStatsDevPbrPrimaryNextHopState"),
        ("WING-MIB", "wingStatsDevPbrPrimaryNextHopMonitorMode"),
        ("WING-MIB", "wingStatsDevPbrSecondaryNextHopIfName"),
        ("WING-MIB", "wingStatsDevPbrSecondaryNextHopIpAddr"),
        ("WING-MIB", "wingStatsDevPbrSecondaryNextHopState"),
        ("WING-MIB", "wingStatsDevPbrSecondaryNextHopMonitorMode"),
        ("WING-MIB", "wingStatsDevPbrDefaultNextHopIfName"),
        ("WING-MIB", "wingStatsDevPbrDefaultNextHopIpAddr"),
        ("WING-MIB", "wingStatsDevPbrDefaultNextHopState"),
        ("WING-MIB", "wingStatsDevPbrDefaultNextHopMonitorMode"),
        ("WING-MIB", "wingStatsDevPbrWlan"),
        ("WING-MIB", "wingStatsDevPbrWirelessClientRole"),
        ("WING-MIB", "wingStatsDevPbrInInterface"),
        ("WING-MIB", "wingStatsDevPbrIpDscp"),
        ("WING-MIB", "wingStatsDevPbrRuleString"),
        ("WING-MIB", "wingStatsDevPbrRulesHitcount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfShutdownFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfShutdownDueTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfTos"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRFC2328ConformanceFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRFC1583CompatFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaquelsaFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfStubRouterAdvFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfStubRouterStartupTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfStubRouterShutdownTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfDelay"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfHoldTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfMaxHoldTime"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfHoldMultiplier"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExecutedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExecutedWhen"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfTimerDueFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfDueIn"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspflsaRefreshTimer"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfAbrFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfAbrType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfAsbrFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExtLsdbCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfExtLsdbCsum"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaqueLsdbCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNumAreasAttached"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaBackboneFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNoSummaryFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaShortcutType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaShortcutCapability"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaInterfaceNum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaActiveInterfaces"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNssaFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNssaTransType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaStubRouterStateFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaAdminStubRoutedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaStartupTimeDue"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumFullyAdjNbrs"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaAuthType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumFullVirtualAdj"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumSpfExecuted"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumTotalLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumRouterLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaRouterLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumNetworkLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNetworkLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumSummaryLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaSummaryLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumNssaLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNssaLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa"),
        ("WING-MIB", "wingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoute"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesPathType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesDestType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesCost"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesArea"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesIfName"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfNetworkRoutesNextHop"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoute"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRoutePathType"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteArea"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteCost"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteFlags"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteAttachedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteIfName"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterRouteNextHop"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRoute"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRoutePathType"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteArea"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteCost"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteType2Cost"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteTag"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteAttachedFlag"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteIfName"),
        ("WING-MIB", "wingstatsDevDynRouteIpOspfExtRouteNextHop"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouter"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRoutersInfoIndex"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterPathType"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterArea"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterCost"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterFlags"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterAttachedFlag"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterIfName"),
        ("WING-MIB", "wingStatsDevDynRouteBorderRouterNextHop"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfName"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfStatusFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfIndex"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMtu"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBandwidth"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfFlags"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfEnabled"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfInfoIndex"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfIpAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMask"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBroadcastOrP2P"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfAreaId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMtuMismatchDetectFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfNetworkType"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfCost"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfTransmitDelay"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfIsmState"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfPriority"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfDesgRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfDesgRouterAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBackupDesgRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfBackupDesgRouterAddr"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfMcastMembership"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfSubSecHelloFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfHelloInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfDeadInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfWaitInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfRetransmitInterval"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfPassiveFlag"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfHelloDueIn"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfNeighborCount"),
        ("WING-MIB", "wingStatsDevDynRouteOspfIfAdjNeighborCount"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborIndex"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborRouterId"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborPriority"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborSelfState"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborDeadTime"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborAddr"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborIfName"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborSrcAddr"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborRetansmitCount"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborRequestCount"),
        ("WING-MIB", "wingStatsDevDynRouteNeighborSummaryCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRouterId"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoAlways"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassive"),
        ("WING-MIB", "wingCfgProfDynRouteOspfPassiveRemoved"),
        ("WING-MIB", "wingCfgProfDynRouteOspfVrrpStateCheck"),
        ("WING-MIB", "wingCfgProfDynRouteDefaultInfoOriginate"),
        ("WING-MIB", "wingStatsDevPbrRuleString"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteLocalUsersName"),
        ("WING-MIB", "wingCfgProfVpnIkev1RemoteLocalUsersPassword"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteLocalUsersName"),
        ("WING-MIB", "wingCfgDevVpnIkev1RemoteLocalUsersPassword"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteLocalUsersName"),
        ("WING-MIB", "wingCfgProfVpnIkev2RemoteLocalUsersPassword"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteLocalUsersName"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteLocalUsersPassword"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstSequence"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstType"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstIpAcl"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstTransformSet"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstLocalip"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPfs"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstLifetimeSeconds"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstLifetimeKb"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstRemoteType"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstModeconfig"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeer"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstProtocol"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstMode"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteLocalUsersName"),
        ("WING-MIB", "wingCfgDevVpnIkev2RemoteLocalUsersPassword"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureGroupId"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureGroupIdAuthType"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey"),
        ("WING-MIB", "wingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureGroupId"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureGroupIdAuthType"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey"),
        ("WING-MIB", "wingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstPeerListPriority"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstPeerListType"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstPeerListIkev1Peer"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstPeerListIkev2Peer"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailWlanMapWlanName"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailWlanMapBssIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailWlanMapIsPrimary"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailBssMapBssIndex"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailBssMapBasicRates"),
        ("WING-MIB", "wingStatsRfdWlRadioDetailBssMapSupportedRates"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListPriority"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListType"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListIkev1Peer"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstPeerListIkev2Peer"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionDirection"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionSpi"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionAuth"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstAhSessionKey"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstAhSessionDirection"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstAhSessionSpi"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstAhSessionAuthAlgo"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstAhSessionKey"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstEspSessionDirection"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstEspSessionSpi"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstEspSessionCipherAlgo"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstEspSessionCipherKey"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstEspSessionAuthAlgo"),
        ("WING-MIB", "wingCfgProfVpnCryptoInstEspSessionAuthKey"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstEspSessionDirection"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstEspSessionSpi"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstEspSessionCipherAlgo"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstEspSessionCipherKey"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstEspSessionAuthAlgo"),
        ("WING-MIB", "wingCfgDevVpnCryptoInstEspSessionAuthKey"),
        ("WING-MIB", "wingCfgProfIfPppoeDefaultRoutePriority"),
        ("WING-MIB", "wingCfgProfIfPppoeIp"),
        ("WING-MIB", "wingCfgDevIfPppoeDefaultRoutePriority"),
        ("WING-MIB", "wingCfgDevIfPppoeIp"),
        ("WING-MIB", "wingStatsDevPppoeStatusPeer"),
        ("WING-MIB", "wingStatsDevPppoeStatusSid"),
        ("WING-MIB", "wingStatsDevPppoeStatusService"),
        ("WING-MIB", "wingStatsDevPppoeStatusStatus"),
        ("WING-MIB", "wingStatsDevPppoeStatusMtu"),
        ("WING-MIB", "wingStatsDevPppoeStatusDns1"),
        ("WING-MIB", "wingStatsDevPppoeStatusDns2"),
        ("WING-MIB", "wingStatsDevPppoeCfgAuthtype"),
        ("WING-MIB", "wingStatsDevPppoeCfgIdleTime"),
        ("WING-MIB", "wingStatsDevPppoeCfgKalive"),
        ("WING-MIB", "wingStatsDevPppoeCfgMtu"),
        ("WING-MIB", "wingStatsDevPppoeCfgNet"),
        ("WING-MIB", "wingStatsDevPppoeCfgService"),
        ("WING-MIB", "wingStatsDevPppoeCfgUsername"),
        ("WING-MIB", "wingStatsDevPppoeCfgPasswd"),
        ("WING-MIB", "wingStatsDevPppoeCfgShutdown"),
        ("WING-MIB", "wingCfgProfControllerHostIndex"),
        ("WING-MIB", "wingCfgProfControllerHostRowStatus"),
        ("WING-MIB", "wingCfgDevControllerHostIndex"),
        ("WING-MIB", "wingCfgDevControllerHostRowStatus"),
        ("WING-MIB", "wingCfgDevControllerHostHost"),
        ("WING-MIB", "wingCfgDevControllerHostPool"),
        ("WING-MIB", "wingCfgDevControllerHostLevel"),
        ("WING-MIB", "wingActionReloadInMac"),
        ("WING-MIB", "wingActionReloadInForce"),
        ("WING-MIB", "wingActionReloadInTimeout"),
        ("WING-MIB", "wingActionReloadInReason"),
        ("WING-MIB", "wingActionReloadOutStatus"),
        ("WING-MIB", "wingActionReloadOutMessage"),
        ("WING-MIB", "wingActionReloadRun"),
        ("WING-MIB", "wingCfgLegacyApIndex"),
        ("WING-MIB", "wingCfgLegacyApCountryCode"),
        ("WING-MIB", "wingCfgLegacyApLed"),
        ("WING-MIB", "wingCfgLegacyApLocation"),
        ("WING-MIB", "wingCfgLegacyApIpAddr"),
        ("WING-MIB", "wingCfgLegacyApGateway"),
        ("WING-MIB", "wingCfgLegacyApPreferredControllerGroup"),
        ("WING-MIB", "wingCfgLegacyApIfName"),
        ("WING-MIB", "wingCfgLegacyApIfDescr"),
        ("WING-MIB", "wingCfgLegacyApIfShutdown"),
        ("WING-MIB", "wingCfgLegacyApIfRfMode"),
        ("WING-MIB", "wingCfgLegacyApIfAntennaDiversity"),
        ("WING-MIB", "wingCfgLegacyApIfBeaconInterval"),
        ("WING-MIB", "wingCfgLegacyApIfChannel"),
        ("WING-MIB", "wingCfgLegacyApIfMaxClients"),
        ("WING-MIB", "wingCfgLegacyApIfPlacement"),
        ("WING-MIB", "wingCfgLegacyApIfPower"),
        ("WING-MIB", "wingCfgLegacyApIfPreambleShort"),
        ("WING-MIB", "wingCfgLegacyApIfOnChannelScan"),
        ("WING-MIB", "wingCfgLegacyApIfRtsThreshold"),
        ("WING-MIB", "wingCfgLegacyApIfQosPolicy"),
        ("WING-MIB", "wingCfgLegacyApIfWirelessClientPower"),
        ("WING-MIB", "wingCfgLegacyApIfWlanBssMapWlan"),
        ("WING-MIB", "wingCfgLegacyApIfWlanBssMapBss"),
        ("WING-MIB", "wingCfgLegacyApIfWlanBssMapPrimary"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTxRetries"),
        ("WING-MIB", "wingStatsRfdWlRadioStatTxRetriedBytes"),
        ("WING-MIB", "wingStatsNocAdoptDevMac"),
        ("WING-MIB", "wingStatsNocAdoptDevType"),
        ("WING-MIB", "wingStatsNocAdoptDevHostname"),
        ("WING-MIB", "wingStatsNocAdoptDevVersion"),
        ("WING-MIB", "wingStatsNocAdoptDevSerialNo"),
        ("WING-MIB", "wingStatsNocAdoptDevRfDomainName"),
        ("WING-MIB", "wingStatsNocAdoptDevOnline"),
        ("WING-MIB", "wingStatsNocAdoptDevBy"),
        ("WING-MIB", "wingStatsNocAdoptDevLastAdoption"),
        ("WING-MIB", "wingStatsNocAdoptDevModelNumber"),
        ("WING-MIB", "wingStatsNocAdoptDevStartup"),
        ("WING-MIB", "wingStatsNocAdoptDevCfgStatus"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevMac"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevType"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevTarget"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevDisOption"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevVersion"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevSerialNumber"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevReason"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevNumRadios"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevIp"),
        ("WING-MIB", "wingStatsNocAdoptPendingDevVlan"),
        ("WING-MIB", "wingCfgAltDevMac"),
        ("WING-MIB", "wingCfgAltDevHostname"),
        ("WING-MIB", "wingCfgAltDevBuilding"),
        ("WING-MIB", "wingCfgAltDevFloor"),
        ("WING-MIB", "wingCfgAltDevNumRadios"),
        ("WING-MIB", "wingCfgAltDevProfileName"),
        ("WING-MIB", "wingCfgAltDevRfDomainName"),
        ("WING-MIB", "wingCfgAltDevHttpsTrustpoint"),
        ("WING-MIB", "wingCfgAltDevRadiusCaTrustpoint"),
        ("WING-MIB", "wingCfgAltDevRadiusServerTrustpoint"),
        ("WING-MIB", "wingCfgAltDevSshRsaKey"),
        ("WING-MIB", "wingCfgAltDevHasOverrides"),
        ("WING-MIB", "wingCfgAltDevIfName"),
        ("WING-MIB", "wingCfgAltDevIfDescription"),
        ("WING-MIB", "wingCfgAltDevIfType"),
        ("WING-MIB", "wingCfgAltDevIfShutdown"),
        ("WING-MIB", "wingCfgAltDevIfIpInAcl"),
        ("WING-MIB", "wingCfgAltDevIfMacInAcl"),
        ("WING-MIB", "wingCfgAltDevIfRadioBssmapWlan"),
        ("WING-MIB", "wingCfgAltDevIfRadioBssmapBss"),
        ("WING-MIB", "wingCfgAltDevIfRadioBssmapPrimary"),
        ("WING-MIB", "wingCfgProfNatPoolAddrStartIp"),
        ("WING-MIB", "wingCfgProfNatPoolAddrEndIp"),
        ("WING-MIB", "wingCfgProfNatBridgeSrcDynamicAcl"),
        ("WING-MIB", "wingCfgProfNatBridgeSrcDynamicIfName"),
        ("WING-MIB", "wingCfgProfNatBridgeSrcDynamicIfOverloadType"),
        ("WING-MIB", "wingCfgProfNatBridgeSrcDynamicIfOverloadIp"),
        ("WING-MIB", "wingCfgProfNatBridgeSrcDynamicIfNatPool"),
        ("WING-MIB", "wingCfgDevNatPoolAddrStartIp"),
        ("WING-MIB", "wingCfgDevNatPoolAddrEndIp"),
        ("WING-MIB", "wingCfgDevNatBridgeSrcDynamicAcl"),
        ("WING-MIB", "wingCfgDevNatBridgeSrcDynamicIfName"),
        ("WING-MIB", "wingCfgDevNatBridgeSrcDynamicIfOverloadType"),
        ("WING-MIB", "wingCfgDevNatBridgeSrcDynamicIfOverloadIp"),
        ("WING-MIB", "wingCfgDevNatBridgeSrcDynamicIfNatPool"),
        ("WING-MIB", "wingCfgDevNatPoolName"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelName"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelCtrlConnId"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelUpTime"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelPeerAddr"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelLocalAddr"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelMtu"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelNativeVlanId"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelTrunkSession"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelNativeVlanTagged"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelPeerHostName"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelPeerCtrlConnId"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelPeerVendorName"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelState"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelNextTxSeqNum"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelNextRxSeqNum"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelRxAckSeqNum"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelRetransmitCount"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelReconnectCount"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsVlanId"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsName"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsPseudoWireType"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsCallSerialNumber"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsLocalSessionId"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsRemoteSessionId"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsLocalCookieSize"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsLocalcookieWord1"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsLocalCookieWord2"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsRemoteCookieSize"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsRemoteCookieWord1"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsRemoteCookieWord2"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsState"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsRemoteEndId"),
        ("WING-MIB", "wingCfgProfTunnelController"),
        ("WING-MIB", "wingCfgProfPreferredTunnelController"),
        ("WING-MIB", "wingCfgProfMintMlcpVlan"),
        ("WING-MIB", "wingCfgProfMintMlcpIp"),
        ("WING-MIB", "wingCfgProfMintTunnelControllerLoadBalancingLevel1"),
        ("WING-MIB", "wingCfgProfl2tpv3lUdpListenPort"),
        ("WING-MIB", "wingCfgProfl2tpv3RouterId"),
        ("WING-MIB", "wingCfgProfl2tpv3HostName"),
        ("WING-MIB", "wingCfgProfl2tpv3InterTunnelBridging"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelName"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelLocalIpAddrss"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelMtu"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelUseTunnelPolicy"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelHostname"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelRouterId"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelPeerId"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelPeerIp"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelPeerHostName"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelPeerRouterId"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelPeerEncapsulation"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelPeerUDPPort"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelSessionName"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelSessionPseudoWireId"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelSessionTrafficSourceType"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelSessionTrafficSourceValue"),
        ("WING-MIB", "wingCfgProfl2tpv3TunnelSessionNativeVlan"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionName"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionLocalIpAddr"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionPeerIp"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionPeerEncapsulation"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionPeerUDPPort"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionMtu"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionTrafficSource"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionTrafficSourceValue"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionNativeVlan"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionLocalSessionId"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionRemoteSessionId"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionCookieEndpoint"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionCookieSize"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionCookieVal1"),
        ("WING-MIB", "wingCfgProfl2tpv3ManualSessionCookieVal2"),
        ("WING-MIB", "wingCfgDevTunnelController"),
        ("WING-MIB", "wingCfgDevPreferredTunnelController"),
        ("WING-MIB", "wingCfgDevMintLevel1AreaId"),
        ("WING-MIB", "wingCfgDevMintSpfLatency"),
        ("WING-MIB", "wingCfgDevMintDisPriorityAdjustment"),
        ("WING-MIB", "wingCfgDevMintMlcpVlan"),
        ("WING-MIB", "wingCfgDevMintMlcpIp"),
        ("WING-MIB", "wingCfgDevMintTunnelControllerLoadBalancingLevel1"),
        ("WING-MIB", "wingCfgDevl2tpv3lUdpListenPort"),
        ("WING-MIB", "wingCfgDevl2tpv3RouterId"),
        ("WING-MIB", "wingCfgDevl2tpv3HostName"),
        ("WING-MIB", "wingCfgDevl2tpv3InterTunnelBridging"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelName"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelLocalIpAddrss"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelMtu"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelUseTunnelPolicy"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelHostname"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelRouterId"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelPeerId"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelPeerIp"),
        ("WING-MIB", "wingCfgDev2tpv3TunnelPeerHostName"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelPeerRouterId"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelPeerEncapsulation"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelPeerUDPPort"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelSessionName"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelSessionPseudoWireId"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelSessionTrafficSourceType"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelSessionTrafficSourceValue"),
        ("WING-MIB", "wingCfgDevl2tpv3TunnelSessionNativeVlan"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionName"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionLocalIpAddr"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionPeerIp"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionPeerEncapsulation"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionPeerUDPPort"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionMtu"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionTrafficSource"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionTrafficSourceValue"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionNativeVlan"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionLocalSessionId"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionRemoteSessionId"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionCookieEndpoint"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionCookieSize"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionCookieVal1"),
        ("WING-MIB", "wingCfgDevl2tpv3ManualSessionCookieVal2"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfMaxRoutes"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfRoutesReceived"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfMaxIgnoreStateCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfIgnoreStateCount"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfIgnoreStateTimeout"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout"),
        ("WING-MIB", "wingStatsDevDynRouteIpOspfState"),
        ("WING-MIB", "wingCfgProfDynRouteOspfDefaultRoutePriority"),
        ("WING-MIB", "wingCfgProfDynRouteOspfNumRoutes"),
        ("WING-MIB", "wingCfgProfDynRouteOspfRetryCount"),
        ("WING-MIB", "wingCfgProfDynRouteOspfRetryTimeout"),
        ("WING-MIB", "wingCfgProfDynRouteOspfResetTime"),
        ("WING-MIB", "wingCfgDevDynRouteOspfDefaultRoutePriority"),
        ("WING-MIB", "wingCfgDevDynRouteOspfNumRoutes"),
        ("WING-MIB", "wingCfgDevDynRouteOspfRetryCount"),
        ("WING-MIB", "wingCfgDevDynRouteOspfRetryTimeout"),
        ("WING-MIB", "wingCfgDevDynRouteOspfResetTime"),
        ("WING-MIB", "wingCfgProfIfVlanOspfOspfBandWidth"),
        ("WING-MIB", "wingCfgProfIfVlanOspfMsgDigestKeyId"),
        ("WING-MIB", "wingCfgProfIfVlanOspfMsgDigestMessageDigest"),
        ("WING-MIB", "wingCfgDevIfVlanOspfOspfBandWidth"),
        ("WING-MIB", "wingCfgDevIfVlanOspfMsgDigestKeyId"),
        ("WING-MIB", "wingCfgDevIfVlanOspfMsgDigestMessageDigest"),
        ("WING-MIB", "wingStatsDevl2tpv3TunnelEncapsulationProtocol"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsRxPktCounter"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsRxBytesCounter"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsTxPktCounter"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsTxBytesCounter"),
        ("WING-MIB", "wingStatsDevl2tpv3SessionsNumDroppedPkts"),
        ("WING-MIB", "wingCfgProfIfRadioAntennaDowntilt"),
        ("WING-MIB", "wingCfgProfIfRadioExtendedRange"),
        ("WING-MIB", "wingCfgDevIfRadioAntennaDowntilt"),
        ("WING-MIB", "wingCfgDevIfRadioExtendedRange"),
        ("WING-MIB", "wingCfgProfIfT1E1Media"),
        ("WING-MIB", "wingCfgProfIfT1E1ClockMode"),
        ("WING-MIB", "wingCfgProfIfT1E1HighImpedance"),
        ("WING-MIB", "wingCfgProfIfT1E1LineBuildOut"),
        ("WING-MIB", "wingCfgProfIfT1E1LineEncoding"),
        ("WING-MIB", "wingCfgProfIfT1E1RxSensitivityLevel"),
        ("WING-MIB", "wingCfgProfIfSerialAuthentication"),
        ("WING-MIB", "wingCfgProfIfSerialEncapsulation"),
        ("WING-MIB", "wingCfgProfIfSerialLocalIpAddress"),
        ("WING-MIB", "wingCfgProfIfSerialUsername"),
        ("WING-MIB", "wingCfgProfIfSerialPassword"),
        ("WING-MIB", "wingCfgProfIfSerialRemoteIpSubnet"),
        ("WING-MIB", "wingCfgDevIfT1E1Media"),
        ("WING-MIB", "wingCfgDevIfT1E1ClockMode"),
        ("WING-MIB", "wingCfgDevIfT1E1HighImpedance"),
        ("WING-MIB", "wingCfgDevIfT1E1LineBuildOut"),
        ("WING-MIB", "wingCfgDevIfT1E1LineEncoding"),
        ("WING-MIB", "wingCfgDevIfT1E1RxSensitivityLevel"),
        ("WING-MIB", "wingCfgDevIfSerialAuthentication"),
        ("WING-MIB", "wingCfgDevIfSerialEncapsulation"),
        ("WING-MIB", "wingCfgDevIfSerialLocalIpAddress"),
        ("WING-MIB", "wingCfgDevIfSerialUsername"),
        ("WING-MIB", "wingCfgDevIfSerialPassword"),
        ("WING-MIB", "wingCfgDevIfSerialRemoteIpSubnet"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthHostMode"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthGuestVlan"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthPortControl"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthReauthenticate"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthMaxReauthCount"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthMaxReq"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthQuietPeriod"),
        ("WING-MIB", "wingCfgProfIfDot1xAuthReauthPeriod"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthHostMode"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthGuestVlan"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthPortControl"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthReauthenticate"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthMaxReauthCount"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthMaxReq"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthQuietPeriod"),
        ("WING-MIB", "wingCfgDevIfDot1xAuthReauthPeriod"),
        ("WING-MIB", "wingCfgProfDot1xSysAuthCtrl"),
        ("WING-MIB", "wingCfgProfDot1xGuestVlanCtrl"),
        ("WING-MIB", "wingCfgProfDot1xAaaPolicy"),
        ("WING-MIB", "wingCfgDevDot1xSysAuthCtrl"),
        ("WING-MIB", "wingCfgDevDot1xGuestVlanCtrl"),
        ("WING-MIB", "wingCfgDevDot1xAaaPolicy"),
        ("WING-MIB", "wingCfgProfCriticalResourcesPort"),
        ("WING-MIB", "wingCfgDevCriticalResourcesPort"),
        ("WING-MIB", "wingStatsDevCrmMonitorInterval"),
        ("WING-MIB", "wingStatsDevCrmCriticalResVia"),
        ("WING-MIB", "wingStatsDevCrmCriticalResStatus"),
        ("WING-MIB", "wingStatsDevCrmCriticalResErrorReason"),
        ("WING-MIB", "wingStatsDevCrmCriticalResMode"),
        ("WING-MIB", "wingStatsDevCrmCriticalResResAddr"),
        ("WING-MIB", "wingStatsDevCrmCriticalResResMonitorMode"),
        ("WING-MIB", "wingStatsDevCrmCriticalResResArpVlan"),
        ("WING-MIB", "wingStatsDevCrmCriticalResResStatus"),
        ("WING-MIB", "wingStatsDevCrmCriticalResResArpPort"),
        ("WING-MIB", "wingCfgProfMeshpointDevName"),
        ("WING-MIB", "wingCfgProfMeshpointDevIsRootDev"),
        ("WING-MIB", "wingCfgProfMeshpointDevPreferredRoot"),
        ("WING-MIB", "wingCfgProfMeshpointDevPreferredNeighbor"),
        ("WING-MIB", "wingCfgProfMeshpointDevPreferredIf"),
        ("WING-MIB", "wingCfgProfMeshpointDevPathMethod"),
        ("WING-MIB", "wingCfgDevMeshpointDevName"),
        ("WING-MIB", "wingCfgDevMeshpointDevIsRootDev"),
        ("WING-MIB", "wingCfgDevMeshpointDevPreferredRoot"),
        ("WING-MIB", "wingCfgDevMeshpointDevPreferredNeighbor"),
        ("WING-MIB", "wingCfgDevMeshpointDevPreferredIf"),
        ("WING-MIB", "wingCfgSmartRfOcsMeshpointA"),
        ("WING-MIB", "wingCfgSmartRfOcsMeshpointBg"),
        ("WING-MIB", "wingCfgMcxMeshpointName"),
        ("WING-MIB", "wingCfgMcxMeshpointShutdown"),
        ("WING-MIB", "wingCfgMcxMeshpointMeshid"),
        ("WING-MIB", "wingCfgMcxMeshpointDescription"),
        ("WING-MIB", "wingCfgMcxMeshpointBeaconFormat"),
        ("WING-MIB", "wingCfgMcxMeshpointControlVlan"),
        ("WING-MIB", "wingCfgMcxMeshpointNeighborInactivityTimeout"),
        ("WING-MIB", "wingCfgMcxMeshpointQosPolicy"),
        ("WING-MIB", "wingCfgMcxMeshpointSecurityMode"),
        ("WING-MIB", "wingCfgMcxMeshpointWpa2Psk"),
        ("WING-MIB", "wingCfgMcxMeshpointWpa2KeyRotationUnicast"),
        ("WING-MIB", "wingCfgMcxMeshpointWpa2KeyRotationBroadcast"),
        ("WING-MIB", "wingCfgMcxMeshpointIsRoot"),
        ("WING-MIB", "wingCfgMcxMeshpointMonitorCriticalResources"),
        ("WING-MIB", "wingCfgMcxMeshpointMonitorPriPortLink"),
        ("WING-MIB", "wingCfgMcxMeshpointQosName"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlDownEnable"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlDownRate"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlDownBurstSize"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlUpEnable"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlUpRate"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlUpBurstSize"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice"),
        ("WING-MIB", "wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlDownEnable"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlDownRate"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlDownBurstSize"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlDownThreshBackground"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlDownThreshVoice"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlDownThreshVideo"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlUpEnable"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlUpRate"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlUpBurstSize"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlUpThreshBackground"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlUpThreshVoice"),
        ("WING-MIB", "wingCfgMcxMeshpointQosNeighborRlUpThreshVideo"),
        ("WING-MIB", "wingCfgMcxMeshpointQosAddr"),
        ("WING-MIB", "wingCfgMcxMeshpointQosPriority"),
        ("WING-MIB", "wingCfgProfIfMeshpointBssmapMeshpoint"),
        ("WING-MIB", "wingCfgProfIfMeshpointBssmapBss"),
        ("WING-MIB", "wingCfgDevIfMeshpointBssmapMeshpoint"),
        ("WING-MIB", "wingCfgDevIfMeshpointBssmapBss"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointHostname"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointDeviceMac"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointIsRoot"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointIsCfgRoot"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNextHop"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootHops"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointIfidCnt"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointIfid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointIfidDataDesc"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsMeshid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsNumRadios"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsNumNeighbors"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTxBytes"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsRxBytes"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTxPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsRxPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTxDropped"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsRxErrors"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTIndex"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTotalBytes"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTotalPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTxBps"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsRxBps"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTotalBps"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTxPps"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsRxPps"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTotalPps"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTxBcmcPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsRxBcmcPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTotalBcmcPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTxMgmtPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsRxMgmtPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsTotalMgmtPkts"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointStatsMaxUserRate"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsHostname"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsDeviceMac"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsNumEntries"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesRootHops"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesValid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesRoot"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesProxy"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesMobile"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesAuthState"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesRank"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesResourced"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesAge"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsHostname"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsDeviceMac"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsNumEntries"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesDestMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesPathMetric"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesHops"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesPathState"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesBindState"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesValid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesRoot"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesProxy"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesGeoReference"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesMobile"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesPathTimeout"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesDestMintId"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsHostname"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsDeviceMac"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsNumEntries"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesRootMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesInterfaceId"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesRecommended"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesBindFailed"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesPathFailed"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesPathMetric"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesIfBias"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesNeighborBias"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesRootBias"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesHostname"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesDeviceMac"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesNumEntries"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesEntriesPersistence"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesEntriesAge"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesEntriesVlan"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaHostname"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaDeviceMac"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaNumEntries"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaMeshid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaR0Valid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaR0mdid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaR0khid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaEntriesLinkAddr"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaEntriesInterfaceId"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaEntriesKeepAlive"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaEntriesLinkState"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsMpid"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsName"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsHostname"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsDeviceMac"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsNumEntries"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoHostname"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoPower"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoState"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioInfoType"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioActMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioActApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioActType"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioActPowerChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioActChannelChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioActCoverageChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsHostname"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsType"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsNeighborsMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsNeighborsApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsNeighborsChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsNeighborsPower"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyHostname"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyType"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyEnergyChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyEnergyExternal"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyEnergyNeighbor"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyEnergyNoise"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioEnergyEnergyTotal"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmInfoApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmHostname"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmPower"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmState"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmInfoType"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmActApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmActType"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmPowerChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmChannelChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmCoverageChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmNeighborsMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmNeighborsApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmNeighborsChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmNeighborsPower"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmEnergyChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmEnergyExternal"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmEnergyNeighbor"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmEnergyNoise"),
        ("WING-MIB", "wingStatsRfdSmartRfRadioNonSsmEnergyTotal"),
        ("WING-MIB", "wingStatsRfdSmartRfApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsMac"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsHostname"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsPower"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsAttenuation"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsInterference"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsListenerIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsListenerMac"),
        ("WING-MIB", "wingStatsRfdSmartRfApNeighborsType"),
        ("WING-MIB", "wingStatsRfdSmartRfHighActRadiosMac"),
        ("WING-MIB", "wingStatsRfdSmartRfHighActRadiosApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfHighActRadiosHostname"),
        ("WING-MIB", "wingStatsRfdSmartRfHighActRadiosType"),
        ("WING-MIB", "wingStatsRfdSmartRfHighActRadiosPowerChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHighActRadiosChannelChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHighActRadiosCoverageChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryTime"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryHostname"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryRadioMac"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryOldValue"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryNewValue"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryDaysTime"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryDaysPowerChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryDaysChannelChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryDaysCoverageChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryHoursTime"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryHoursPowerChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryHoursChannelChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfHistoryHoursCoverageChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfDashboardHistoryDetails"),
        ("WING-MIB", "wingStatsRfdSmartRfDashboardHistoryPowerChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfDashboardHistoryChannelChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfDashboardHistoryCoverageChanges"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultMac"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultResultMac"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultApMac"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultOldChannel"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultPower"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultOldPower"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultRadioIdx"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultState"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultType"),
        ("WING-MIB", "wingStatsRfdSmartRfCalibrateResultSmartSensor"),
        ("WING-MIB", "wingStatsDevIfStatusOper"),
        ("WING-MIB", "wingStatsNocAdoptDevProductName"),
        ("WING-MIB", "wingStatsDevAdoptDevProductName"),
        ("WING-MIB", "wingStatsRfdWlRadioProtocol"),
        ("WING-MIB", "wingEventSourceHostname"),
        ("WING-MIB", "wingStatsDevWlApInfoMac"),
        ("WING-MIB", "wingStatsDevWlApInfoFaultDetected"),
        ("WING-MIB", "wingStatsDevWlApInfoNumRadios"),
        ("WING-MIB", "wingStatsDevWlApInfoNumClients"),
        ("WING-MIB", "wingStatsDevWlApInfoLastCalTime"),
        ("WING-MIB", "wingStatsDevWlApInfoType"),
        ("WING-MIB", "wingStatsDevWlApInfoStatsMode"),
        ("WING-MIB", "wingStatsDevWlApInfoStatsInterval"),
        ("WING-MIB", "wingStatsDevWlApInfoHostname"),
        ("WING-MIB", "wingStatsDevWlApInfoRfDomainName"),
        ("WING-MIB", "wingStatsDevWlApInfoLocation"),
        ("WING-MIB", "wingStatsDevWlApInfoAdoptedTo"),
        ("WING-MIB", "wingStatsDevWlApInfoIp"),
        ("WING-MIB", "wingStatsDevWlClientStatMac"),
        ("WING-MIB", "wingStatsDevWlClientStatMacName"),
        ("WING-MIB", "wingStatsDevWlClientStatVendor"),
        ("WING-MIB", "wingStatsDevWlClientStatAp"),
        ("WING-MIB", "wingStatsDevWlClientStatTxBytes"),
        ("WING-MIB", "wingStatsDevWlClientStatRxBytes"),
        ("WING-MIB", "wingStatsDevWlClientStatTxPkts"),
        ("WING-MIB", "wingStatsDevWlClientStatRxPkts"),
        ("WING-MIB", "wingStatsDevWlClientStatTxDropped"),
        ("WING-MIB", "wingStatsDevWlClientStatRxErrors"),
        ("WING-MIB", "wingStatsDevWlClientStatTIndex"),
        ("WING-MIB", "wingStatsDevWlClientStatTxBps"),
        ("WING-MIB", "wingStatsDevWlClientStatRxBps"),
        ("WING-MIB", "wingStatsDevWlClientStatSignal"),
        ("WING-MIB", "wingStatsDevWlClientStatNoise"),
        ("WING-MIB", "wingStatsDevWlClientStatSnr"),
        ("WING-MIB", "wingStatsDevWlClientStatTxRate"),
        ("WING-MIB", "wingStatsDevWlClientStatRxRate"),
        ("WING-MIB", "wingStatsDevWlClientStatErrorRate"),
        ("WING-MIB", "wingStatsDevWlClientStatQIndex"),
        ("WING-MIB", "wingStatsDevWlRadioId"),
        ("WING-MIB", "wingStatsDevWlRadioDeviceMac"),
        ("WING-MIB", "wingStatsDevWlRadioAlias"),
        ("WING-MIB", "wingStatsDevWlRadioMac"),
        ("WING-MIB", "wingStatsDevWlRadioType"),
        ("WING-MIB", "wingStatsDevWlRadioHostname"),
        ("WING-MIB", "wingStatsDevWlRadioRfdName"),
        ("WING-MIB", "wingStatsDevWlRadioLocation"),
        ("WING-MIB", "wingStatsDevWlRadioState"),
        ("WING-MIB", "wingStatsDevWlRadioCurChannel"),
        ("WING-MIB", "wingStatsDevWlRadioConfigChannel"),
        ("WING-MIB", "wingStatsDevWlRadioCurPower"),
        ("WING-MIB", "wingStatsDevWlRadioConfigPower"),
        ("WING-MIB", "wingStatsDevWlRadioMaxUserRate"),
        ("WING-MIB", "wingStatsDevWlRadioNumClient"),
        ("WING-MIB", "wingStatsDevWlRadioProtocol"),
        ("WING-MIB", "wingStatsDevWlRadioStatId"),
        ("WING-MIB", "wingStatsDevWlRadioStatDeviceMac"),
        ("WING-MIB", "wingStatsDevWlRadioStatAlias"),
        ("WING-MIB", "wingStatsDevWlRadioStatMac"),
        ("WING-MIB", "wingStatsDevWlRadioStatType"),
        ("WING-MIB", "wingStatsDevWlRadioStatTxBytes"),
        ("WING-MIB", "wingStatsDevWlRadioStatRxBytes"),
        ("WING-MIB", "wingStatsDevWlRadioStatTxPkts"),
        ("WING-MIB", "wingStatsDevWlRadioStatRxPkts"),
        ("WING-MIB", "wingStatsDevWlRadioStatTxDropped"),
        ("WING-MIB", "wingStatsDevWlRadioStatRxErrors"),
        ("WING-MIB", "wingStatsDevWlRadioStatTIndex"),
        ("WING-MIB", "wingStatsDevWlRadioStatTxBps"),
        ("WING-MIB", "wingStatsDevWlRadioStatRxBps"),
        ("WING-MIB", "wingStatsDevWlRadioStatSignal"),
        ("WING-MIB", "wingStatsDevWlRadioStatNoise"),
        ("WING-MIB", "wingStatsDevWlRadioStatSnr"),
        ("WING-MIB", "wingStatsDevWlRadioStatTxRate"),
        ("WING-MIB", "wingStatsDevWlRadioStatRxRate"),
        ("WING-MIB", "wingStatsDevWlRadioStatErrorRate"),
        ("WING-MIB", "wingStatsDevWlRadioStatQIndex"),
        ("WING-MIB", "wingStatsDevWlRadioStatNumClients"),
        ("WING-MIB", "wingStatsDevWlRadioStatNumBClients"),
        ("WING-MIB", "wingStatsDevWlRadioStatNumBgClients"),
        ("WING-MIB", "wingStatsDevWlRadioStatNumBgnClients"),
        ("WING-MIB", "wingStatsDevWlRadioStatNumAClients"),
        ("WING-MIB", "wingStatsDevWlRadioStatNumAnClients"),
        ("WING-MIB", "wingStatsDevWlRadioStatMediumErrorRate"),
        ("WING-MIB", "wingStatsDevWlRadioStatTxRetries"),
        ("WING-MIB", "wingStatsDevWlRadioStatTxRetriedBytes"),
        ("WING-MIB", "wingStatsDevCdpNeighborAdvertisedVersion"),
        ("WING-MIB", "wingStatsDevCdpNeighborVtpDomain"),
        ("WING-MIB", "wingStatsDevCdpNeighborNativeVlan"),
        ("WING-MIB", "wingStatsDevCdpNeighborUntrustedPortCos"),
        ("WING-MIB", "wingStatsDevCdpNeighborMgmtAddrList"),
        ("WING-MIB", "wingStatsDevCdpNeighborVersion"),
        ("WING-MIB", "wingStatsNocAdoptDevProductName"),
        ("WING-MIB", "wingStatsDevAdoptDevProductName"),
        ("WING-MIB", "wingStatsRfdWlRadioProtocol"),
        ("WING-MIB", "wingActionLocatorOnInDuration"),
        ("WING-MIB", "wingActionLocatorOnInMac"),
        ("WING-MIB", "wingActionLocatorOnOutStatus"),
        ("WING-MIB", "wingActionLocatorOnOutMessage"),
        ("WING-MIB", "wingActionLocatorOnRun"),
        ("WING-MIB", "wingActionLocatorOffInMac"),
        ("WING-MIB", "wingActionLocatorOffOutStatus"),
        ("WING-MIB", "wingActionLocatorOffOutMessage"),
        ("WING-MIB", "wingActionLocatorOffRun"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointNeighborsEntriesIndex"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointPathsEntriesIndex"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointRootsEntriesIndex"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointProxiesEntriesIndex"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointLsaEntriesIndex"),
        ("WING-MIB", "wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex"))
)
if mibBuilder.loadTexts:
    wingObjectGroup.setStatus("current")


# Notification objects

wingTrapGeneric = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 1)
)
wingTrapGeneric.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapGeneric.setStatus(
        "current"
    )

wingTrapAaaRadiusDisconMsg = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 2, 0, 1)
)
wingTrapAaaRadiusDisconMsg.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAaaRadiusDisconMsg.setStatus(
        "current"
    )

wingTrapAaaRadiusVlanUpdate = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 2, 0, 2)
)
wingTrapAaaRadiusVlanUpdate.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAaaRadiusVlanUpdate.setStatus(
        "current"
    )

wingTrapAaaRadiusSessionNotStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 2, 0, 3)
)
wingTrapAaaRadiusSessionNotStarted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAaaRadiusSessionNotStarted.setStatus(
        "current"
    )

wingTrapAaaRadiusSessionExpired = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 2, 0, 4)
)
wingTrapAaaRadiusSessionExpired.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAaaRadiusSessionExpired.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 1)
)
wingTrapAdvWipsAdvWipsEvent1.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent1.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 2)
)
wingTrapAdvWipsAdvWipsEvent2.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent2.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 3)
)
wingTrapAdvWipsAdvWipsEvent3.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent3.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent10 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 4)
)
wingTrapAdvWipsAdvWipsEvent10.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent10.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent11 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 5)
)
wingTrapAdvWipsAdvWipsEvent11.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent11.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent12 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 6)
)
wingTrapAdvWipsAdvWipsEvent12.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent12.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent13 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 7)
)
wingTrapAdvWipsAdvWipsEvent13.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent13.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent14 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 8)
)
wingTrapAdvWipsAdvWipsEvent14.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent14.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent16 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 9)
)
wingTrapAdvWipsAdvWipsEvent16.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent16.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent19 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 10)
)
wingTrapAdvWipsAdvWipsEvent19.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent19.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent21 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 11)
)
wingTrapAdvWipsAdvWipsEvent21.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent21.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent25 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 12)
)
wingTrapAdvWipsAdvWipsEvent25.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent25.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent29 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 13)
)
wingTrapAdvWipsAdvWipsEvent29.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent29.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent47 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 14)
)
wingTrapAdvWipsAdvWipsEvent47.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent47.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent87 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 15)
)
wingTrapAdvWipsAdvWipsEvent87.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent87.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent105 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 16)
)
wingTrapAdvWipsAdvWipsEvent105.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent105.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent109 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 17)
)
wingTrapAdvWipsAdvWipsEvent109.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent109.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent110 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 18)
)
wingTrapAdvWipsAdvWipsEvent110.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent110.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent111 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 19)
)
wingTrapAdvWipsAdvWipsEvent111.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent111.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent112 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 20)
)
wingTrapAdvWipsAdvWipsEvent112.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent112.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent113 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 21)
)
wingTrapAdvWipsAdvWipsEvent113.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent113.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent114 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 22)
)
wingTrapAdvWipsAdvWipsEvent114.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent114.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent115 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 23)
)
wingTrapAdvWipsAdvWipsEvent115.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent115.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent116 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 24)
)
wingTrapAdvWipsAdvWipsEvent116.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent116.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent117 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 25)
)
wingTrapAdvWipsAdvWipsEvent117.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent117.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent118 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 26)
)
wingTrapAdvWipsAdvWipsEvent118.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent118.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent119 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 27)
)
wingTrapAdvWipsAdvWipsEvent119.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent119.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent120 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 28)
)
wingTrapAdvWipsAdvWipsEvent120.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent120.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent121 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 29)
)
wingTrapAdvWipsAdvWipsEvent121.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent121.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent142 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 30)
)
wingTrapAdvWipsAdvWipsEvent142.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent142.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent221 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 31)
)
wingTrapAdvWipsAdvWipsEvent221.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent221.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent222 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 32)
)
wingTrapAdvWipsAdvWipsEvent222.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent222.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent63 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 33)
)
wingTrapAdvWipsAdvWipsEvent63.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent63.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent26 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 34)
)
wingTrapAdvWipsAdvWipsEvent26.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent26.setStatus(
        "current"
    )

wingTrapAdvWipsAdvWipsEvent220 = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 3, 0, 35)
)
wingTrapAdvWipsAdvWipsEvent220.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapAdvWipsAdvWipsEvent220.setStatus(
        "current"
    )

wingTrapApAdopted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 1)
)
wingTrapApAdopted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApAdopted.setStatus(
        "current"
    )

wingTrapApUnadopted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 2)
)
wingTrapApUnadopted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApUnadopted.setStatus(
        "current"
    )

wingTrapApAdoptedToController = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 3)
)
wingTrapApAdoptedToController.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApAdoptedToController.setStatus(
        "current"
    )

wingTrapApReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 4)
)
wingTrapApReset.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApReset.setStatus(
        "current"
    )

wingTrapApSwConnLost = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 5)
)
wingTrapApSwConnLost.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApSwConnLost.setStatus(
        "current"
    )

wingTrapApApAutoupTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 6)
)
wingTrapApApAutoupTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAutoupTimeout.setStatus(
        "current"
    )

wingTrapApApAutoupReboot = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 7)
)
wingTrapApApAutoupReboot.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAutoupReboot.setStatus(
        "current"
    )

wingTrapApApAutoupNoNeed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 8)
)
wingTrapApApAutoupNoNeed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAutoupNoNeed.setStatus(
        "current"
    )

wingTrapApApAutoupNeeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 9)
)
wingTrapApApAutoupNeeded.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAutoupNeeded.setStatus(
        "current"
    )

wingTrapApApAutoupDone = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 10)
)
wingTrapApApAutoupDone.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAutoupDone.setStatus(
        "current"
    )

wingTrapApApAutoupFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 11)
)
wingTrapApApAutoupFail.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAutoupFail.setStatus(
        "current"
    )

wingTrapApApAutoupVer = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 12)
)
wingTrapApApAutoupVer.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAutoupVer.setStatus(
        "current"
    )

wingTrapApNoImageFile = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 13)
)
wingTrapApNoImageFile.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApNoImageFile.setStatus(
        "current"
    )

wingTrapApImageParseFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 14)
)
wingTrapApImageParseFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApImageParseFailure.setStatus(
        "current"
    )

wingTrapApLegacyAutoUpdate = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 15)
)
wingTrapApLegacyAutoUpdate.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApLegacyAutoUpdate.setStatus(
        "current"
    )

wingTrapApApAdopted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 16)
)
wingTrapApApAdopted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApAdopted.setStatus(
        "current"
    )

wingTrapApApUnadopted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 17)
)
wingTrapApApUnadopted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApUnadopted.setStatus(
        "current"
    )

wingTrapApApResetDetected = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 18)
)
wingTrapApApResetDetected.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApResetDetected.setStatus(
        "current"
    )

wingTrapApApResetRequest = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 19)
)
wingTrapApApResetRequest.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApResetRequest.setStatus(
        "current"
    )

wingTrapApApTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 4, 0, 20)
)
wingTrapApApTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapApApTimeout.setStatus(
        "current"
    )

wingTrapCaptivePortalAuthSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 1)
)
wingTrapCaptivePortalAuthSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalAuthSuccess.setStatus(
        "current"
    )

wingTrapCaptivePortalAuthFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 2)
)
wingTrapCaptivePortalAuthFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalAuthFailed.setStatus(
        "current"
    )

wingTrapCaptivePortalSessionTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 3)
)
wingTrapCaptivePortalSessionTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalSessionTimeout.setStatus(
        "current"
    )

wingTrapCaptivePortalClientDisconnect = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 4)
)
wingTrapCaptivePortalClientDisconnect.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalClientDisconnect.setStatus(
        "current"
    )

wingTrapCaptivePortalPurgeClient = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 5)
)
wingTrapCaptivePortalPurgeClient.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalPurgeClient.setStatus(
        "current"
    )

wingTrapCaptivePortalFlexLogAccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 6)
)
wingTrapCaptivePortalFlexLogAccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalFlexLogAccess.setStatus(
        "current"
    )

wingTrapCaptivePortalInactivityTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 7)
)
wingTrapCaptivePortalInactivityTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalInactivityTimeout.setStatus(
        "current"
    )

wingTrapCaptivePortalAllowAccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 8)
)
wingTrapCaptivePortalAllowAccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalAllowAccess.setStatus(
        "current"
    )

wingTrapCaptivePortalClientRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 9)
)
wingTrapCaptivePortalClientRemoved.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalClientRemoved.setStatus(
        "current"
    )

wingTrapCaptivePortalPageCreFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 10)
)
wingTrapCaptivePortalPageCreFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalPageCreFailed.setStatus(
        "current"
    )

wingTrapCaptivePortalDataLimitExceed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 5, 0, 11)
)
wingTrapCaptivePortalDataLimitExceed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCaptivePortalDataLimitExceed.setStatus(
        "current"
    )

wingTrapCertmgrRsaKeyActionsSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 1)
)
wingTrapCertmgrRsaKeyActionsSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrRsaKeyActionsSuccess.setStatus(
        "current"
    )

wingTrapCertmgrRsaKeyActionsFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 2)
)
wingTrapCertmgrRsaKeyActionsFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrRsaKeyActionsFailure.setStatus(
        "current"
    )

wingTrapCertmgrCaCertActionsSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 3)
)
wingTrapCertmgrCaCertActionsSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCaCertActionsSuccess.setStatus(
        "current"
    )

wingTrapCertmgrCaCertActionsFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 4)
)
wingTrapCertmgrCaCertActionsFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCaCertActionsFailure.setStatus(
        "current"
    )

wingTrapCertmgrSrvCertActionsSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 5)
)
wingTrapCertmgrSrvCertActionsSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrSrvCertActionsSuccess.setStatus(
        "current"
    )

wingTrapCertmgrSvrCertActionsFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 6)
)
wingTrapCertmgrSvrCertActionsFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrSvrCertActionsFailure.setStatus(
        "current"
    )

wingTrapCertmgrCsrExportSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 7)
)
wingTrapCertmgrCsrExportSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCsrExportSuccess.setStatus(
        "current"
    )

wingTrapCertmgrCsrExportFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 8)
)
wingTrapCertmgrCsrExportFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCsrExportFailure.setStatus(
        "current"
    )

wingTrapCertmgrCrlActionsSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 9)
)
wingTrapCertmgrCrlActionsSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCrlActionsSuccess.setStatus(
        "current"
    )

wingTrapCertmgrCrlActionsFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 10)
)
wingTrapCertmgrCrlActionsFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCrlActionsFailure.setStatus(
        "current"
    )

wingTrapCertmgrDeleteTrustpointAction = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 11)
)
wingTrapCertmgrDeleteTrustpointAction.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrDeleteTrustpointAction.setStatus(
        "current"
    )

wingTrapCertmgrImportTrustpoint = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 12)
)
wingTrapCertmgrImportTrustpoint.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrImportTrustpoint.setStatus(
        "current"
    )

wingTrapCertmgrExportTrustpoint = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 13)
)
wingTrapCertmgrExportTrustpoint.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrExportTrustpoint.setStatus(
        "current"
    )

wingTrapCertmgrCertExpiry = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 14)
)
wingTrapCertmgrCertExpiry.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCertExpiry.setStatus(
        "current"
    )

wingTrapCertmgrCaKeyActionsSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 15)
)
wingTrapCertmgrCaKeyActionsSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCaKeyActionsSuccess.setStatus(
        "current"
    )

wingTrapCertmgrCaKeyActionsFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 6, 0, 16)
)
wingTrapCertmgrCaKeyActionsFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCertmgrCaKeyActionsFailure.setStatus(
        "current"
    )

wingTrapCfgdAclRuleAltered = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 7, 0, 1)
)
wingTrapCfgdAclRuleAltered.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCfgdAclRuleAltered.setStatus(
        "current"
    )

wingTrapCfgdAclAttachedAltered = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 7, 0, 2)
)
wingTrapCfgdAclAttachedAltered.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapCfgdAclAttachedAltered.setStatus(
        "current"
    )

wingTrapClusterCmasterCfgUpdateFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 8, 0, 1)
)
wingTrapClusterCmasterCfgUpdateFail.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapClusterCmasterCfgUpdateFail.setStatus(
        "current"
    )

wingTrapClusterMaxExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 8, 0, 2)
)
wingTrapClusterMaxExceeded.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapClusterMaxExceeded.setStatus(
        "current"
    )

wingTrapDhcpsvrRelayNoIface = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9, 0, 1)
)
wingTrapDhcpsvrRelayNoIface.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDhcpsvrRelayNoIface.setStatus(
        "current"
    )

wingTrapDhcpsvrRelayIfaceNoIp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9, 0, 2)
)
wingTrapDhcpsvrRelayIfaceNoIp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDhcpsvrRelayIfaceNoIp.setStatus(
        "current"
    )

wingTrapDhcpsvrRelayStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9, 0, 3)
)
wingTrapDhcpsvrRelayStart.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDhcpsvrRelayStart.setStatus(
        "current"
    )

wingTrapDhcpsvrRelayStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9, 0, 4)
)
wingTrapDhcpsvrRelayStop.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDhcpsvrRelayStop.setStatus(
        "current"
    )

wingTrapDhcpsvrDhcpsvrStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9, 0, 5)
)
wingTrapDhcpsvrDhcpsvrStart.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDhcpsvrDhcpsvrStart.setStatus(
        "current"
    )

wingTrapDhcpsvrDhcpsvrStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 9, 0, 6)
)
wingTrapDhcpsvrDhcpsvrStop.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDhcpsvrDhcpsvrStop.setStatus(
        "current"
    )

wingTrapDiagFanUnderspeed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 1)
)
wingTrapDiagFanUnderspeed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFanUnderspeed.setStatus(
        "current"
    )

wingTrapDiagUnderVoltage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 2)
)
wingTrapDiagUnderVoltage.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagUnderVoltage.setStatus(
        "current"
    )

wingTrapDiagOverVoltage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 3)
)
wingTrapDiagOverVoltage.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagOverVoltage.setStatus(
        "current"
    )

wingTrapDiagLowTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 4)
)
wingTrapDiagLowTemp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagLowTemp.setStatus(
        "current"
    )

wingTrapDiagHighTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 5)
)
wingTrapDiagHighTemp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagHighTemp.setStatus(
        "current"
    )

wingTrapDiagOverTemp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 6)
)
wingTrapDiagOverTemp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagOverTemp.setStatus(
        "current"
    )

wingTrapDiagWdStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 7)
)
wingTrapDiagWdStateChange.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagWdStateChange.setStatus(
        "current"
    )

wingTrapDiagElapsedTime = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 8)
)
wingTrapDiagElapsedTime.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagElapsedTime.setStatus(
        "current"
    )

wingTrapDiagAutogenTechSprt = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 9)
)
wingTrapDiagAutogenTechSprt.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagAutogenTechSprt.setStatus(
        "current"
    )

wingTrapDiagPoeInitFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 10)
)
wingTrapDiagPoeInitFail.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagPoeInitFail.setStatus(
        "current"
    )

wingTrapDiagPoePowerLevel = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 11)
)
wingTrapDiagPoePowerLevel.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagPoePowerLevel.setStatus(
        "current"
    )

wingTrapDiagPoeReadFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 12)
)
wingTrapDiagPoeReadFail.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagPoeReadFail.setStatus(
        "current"
    )

wingTrapDiagPoeStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 13)
)
wingTrapDiagPoeStateChange.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagPoeStateChange.setStatus(
        "current"
    )

wingTrapDiagWdResetSys = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 14)
)
wingTrapDiagWdResetSys.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagWdResetSys.setStatus(
        "current"
    )

wingTrapDiagCpuLoad = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 15)
)
wingTrapDiagCpuLoad.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagCpuLoad.setStatus(
        "current"
    )

wingTrapDiagRamUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 16)
)
wingTrapDiagRamUsage.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagRamUsage.setStatus(
        "current"
    )

wingTrapDiagBufUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 17)
)
wingTrapDiagBufUsage.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagBufUsage.setStatus(
        "current"
    )

wingTrapDiagHeadCacheUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 18)
)
wingTrapDiagHeadCacheUsage.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagHeadCacheUsage.setStatus(
        "current"
    )

wingTrapDiagIpDestUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 19)
)
wingTrapDiagIpDestUsage.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagIpDestUsage.setStatus(
        "current"
    )

wingTrapDiagFreeRam = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 20)
)
wingTrapDiagFreeRam.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFreeRam.setStatus(
        "current"
    )

wingTrapDiagFreeFlashDisk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 21)
)
wingTrapDiagFreeFlashDisk.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFreeFlashDisk.setStatus(
        "current"
    )

wingTrapDiagFreeFlashInodes = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 22)
)
wingTrapDiagFreeFlashInodes.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFreeFlashInodes.setStatus(
        "current"
    )

wingTrapDiagFreeNvramDisk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 23)
)
wingTrapDiagFreeNvramDisk.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFreeNvramDisk.setStatus(
        "current"
    )

wingTrapDiagFreeNvramInodes = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 24)
)
wingTrapDiagFreeNvramInodes.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFreeNvramInodes.setStatus(
        "current"
    )

wingTrapDiagFreeRamDisk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 25)
)
wingTrapDiagFreeRamDisk.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFreeRamDisk.setStatus(
        "current"
    )

wingTrapDiagFreeRamInodes = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 26)
)
wingTrapDiagFreeRamInodes.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFreeRamInodes.setStatus(
        "current"
    )

wingTrapDiagFdCount = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 27)
)
wingTrapDiagFdCount.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagFdCount.setStatus(
        "current"
    )

wingTrapDiagDiskUsage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 28)
)
wingTrapDiagDiskUsage.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagDiskUsage.setStatus(
        "current"
    )

wingTrapDiagNewLedState = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 29)
)
wingTrapDiagNewLedState.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagNewLedState.setStatus(
        "current"
    )

wingTrapDiagLedIdentify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 10, 0, 30)
)
wingTrapDiagLedIdentify.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDiagLedIdentify.setStatus(
        "current"
    )

wingTrapDot11CountryCode = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 1)
)
wingTrapDot11CountryCode.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11CountryCode.setStatus(
        "current"
    )

wingTrapDot11CountryCodeError = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 2)
)
wingTrapDot11CountryCodeError.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11CountryCodeError.setStatus(
        "current"
    )

wingTrapDot11ClientAssociated = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 3)
)
wingTrapDot11ClientAssociated.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11ClientAssociated.setStatus(
        "current"
    )

wingTrapDot11ClientDisassociated = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 4)
)
wingTrapDot11ClientDisassociated.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11ClientDisassociated.setStatus(
        "current"
    )

wingTrapDot11ClientDeniedAssoc = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 5)
)
wingTrapDot11ClientDeniedAssoc.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11ClientDeniedAssoc.setStatus(
        "current"
    )

wingTrapDot11WpaWpa2Success = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 6)
)
wingTrapDot11WpaWpa2Success.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11WpaWpa2Success.setStatus(
        "current"
    )

wingTrapDot11WpaWpa2Failed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 7)
)
wingTrapDot11WpaWpa2Failed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11WpaWpa2Failed.setStatus(
        "current"
    )

wingTrapDot11WpaWpa2KeyRotn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 8)
)
wingTrapDot11WpaWpa2KeyRotn.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11WpaWpa2KeyRotn.setStatus(
        "current"
    )

wingTrapDot11TkipMicFailReport = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 9)
)
wingTrapDot11TkipMicFailReport.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11TkipMicFailReport.setStatus(
        "current"
    )

wingTrapDot11TkipMicFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 10)
)
wingTrapDot11TkipMicFailure.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11TkipMicFailure.setStatus(
        "current"
    )

wingTrapDot11TkipCntrmeasStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 11)
)
wingTrapDot11TkipCntrmeasStart.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11TkipCntrmeasStart.setStatus(
        "current"
    )

wingTrapDot11TkipCntrmeasEnd = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 12)
)
wingTrapDot11TkipCntrmeasEnd.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11TkipCntrmeasEnd.setStatus(
        "current"
    )

wingTrapDot11EapSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 13)
)
wingTrapDot11EapSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapSuccess.setStatus(
        "current"
    )

wingTrapDot11EapFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 14)
)
wingTrapDot11EapFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapFailed.setStatus(
        "current"
    )

wingTrapDot11EapClientTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 15)
)
wingTrapDot11EapClientTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapClientTimeout.setStatus(
        "current"
    )

wingTrapDot11EapServerTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 16)
)
wingTrapDot11EapServerTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapServerTimeout.setStatus(
        "current"
    )

wingTrapDot11EapCachedKeys = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 17)
)
wingTrapDot11EapCachedKeys.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapCachedKeys.setStatus(
        "current"
    )

wingTrapDot11EapOppCachedKeys = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 18)
)
wingTrapDot11EapOppCachedKeys.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapOppCachedKeys.setStatus(
        "current"
    )

wingTrapDot11EapPreauthSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 19)
)
wingTrapDot11EapPreauthSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapPreauthSuccess.setStatus(
        "current"
    )

wingTrapDot11EapPreauthFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 20)
)
wingTrapDot11EapPreauthFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapPreauthFailed.setStatus(
        "current"
    )

wingTrapDot11EapPreauthClientTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 21)
)
wingTrapDot11EapPreauthClientTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapPreauthClientTimeout.setStatus(
        "current"
    )

wingTrapDot11EapPreauthServerTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 22)
)
wingTrapDot11EapPreauthServerTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11EapPreauthServerTimeout.setStatus(
        "current"
    )

wingTrapDot11KerberosWlanSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 23)
)
wingTrapDot11KerberosWlanSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11KerberosWlanSuccess.setStatus(
        "current"
    )

wingTrapDot11KerberosWlanTimeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 24)
)
wingTrapDot11KerberosWlanTimeout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11KerberosWlanTimeout.setStatus(
        "current"
    )

wingTrapDot11KerberosWlanFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 25)
)
wingTrapDot11KerberosWlanFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11KerberosWlanFailed.setStatus(
        "current"
    )

wingTrapDot11KerberosClientSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 26)
)
wingTrapDot11KerberosClientSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11KerberosClientSuccess.setStatus(
        "current"
    )

wingTrapDot11KerberosClientFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 27)
)
wingTrapDot11KerberosClientFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11KerberosClientFailed.setStatus(
        "current"
    )

wingTrapDot11VoiceCallFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 28)
)
wingTrapDot11VoiceCallFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11VoiceCallFailed.setStatus(
        "current"
    )

wingTrapDot11VoiceCallEstablished = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 29)
)
wingTrapDot11VoiceCallEstablished.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11VoiceCallEstablished.setStatus(
        "current"
    )

wingTrapDot11VoiceCallCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 30)
)
wingTrapDot11VoiceCallCompleted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11VoiceCallCompleted.setStatus(
        "current"
    )

wingTrapDot11UnsanctionedApActive = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 31)
)
wingTrapDot11UnsanctionedApActive.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11UnsanctionedApActive.setStatus(
        "current"
    )

wingTrapDot11UnsanctionedApInactive = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 32)
)
wingTrapDot11UnsanctionedApInactive.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11UnsanctionedApInactive.setStatus(
        "current"
    )

wingTrapDot11UnsanctionedApStatusChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 33)
)
wingTrapDot11UnsanctionedApStatusChange.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11UnsanctionedApStatusChange.setStatus(
        "current"
    )

wingTrapDot11NeighborDeniedAssoc = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 34)
)
wingTrapDot11NeighborDeniedAssoc.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11NeighborDeniedAssoc.setStatus(
        "current"
    )

wingTrapDot11WlanTimeAccessDisable = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 35)
)
wingTrapDot11WlanTimeAccessDisable.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11WlanTimeAccessDisable.setStatus(
        "current"
    )

wingTrapDot11WlanTimeAccessEnable = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 36)
)
wingTrapDot11WlanTimeAccessEnable.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11WlanTimeAccessEnable.setStatus(
        "current"
    )

wingTrapDot11MoveOperationSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 37)
)
wingTrapDot11MoveOperationSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11MoveOperationSuccess.setStatus(
        "current"
    )

wingTrapDot11FtRoamSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 11, 0, 38)
)
wingTrapDot11FtRoamSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot11FtRoamSuccess.setStatus(
        "current"
    )

wingTrapFwuFwudone = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 1)
)
wingTrapFwuFwudone.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwudone.setStatus(
        "current"
    )

wingTrapFwuFwuaborted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 2)
)
wingTrapFwuFwuaborted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwuaborted.setStatus(
        "current"
    )

wingTrapFwuFwunoneed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 3)
)
wingTrapFwuFwunoneed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwunoneed.setStatus(
        "current"
    )

wingTrapFwuFwusyserr = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 4)
)
wingTrapFwuFwusyserr.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwusyserr.setStatus(
        "current"
    )

wingTrapFwuFwubadconfig = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 5)
)
wingTrapFwuFwubadconfig.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwubadconfig.setStatus(
        "current"
    )

wingTrapFwuFwuserverundef = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 6)
)
wingTrapFwuFwuserverundef.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwuserverundef.setStatus(
        "current"
    )

wingTrapFwuFwufileundef = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 7)
)
wingTrapFwuFwufileundef.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwufileundef.setStatus(
        "current"
    )

wingTrapFwuFwuserverunreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 8)
)
wingTrapFwuFwuserverunreachable.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwuserverunreachable.setStatus(
        "current"
    )

wingTrapFwuFwucouldntgetfile = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 9)
)
wingTrapFwuFwucouldntgetfile.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwucouldntgetfile.setStatus(
        "current"
    )

wingTrapFwuFwuvermismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 10)
)
wingTrapFwuFwuvermismatch.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwuvermismatch.setStatus(
        "current"
    )

wingTrapFwuFwuprodmismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 11)
)
wingTrapFwuFwuprodmismatch.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwuprodmismatch.setStatus(
        "current"
    )

wingTrapFwuFwucorruptedfile = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 12)
)
wingTrapFwuFwucorruptedfile.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwucorruptedfile.setStatus(
        "current"
    )

wingTrapFwuFwusignmismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 13)
)
wingTrapFwuFwusignmismatch.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwusignmismatch.setStatus(
        "current"
    )

wingTrapFwuFwuunsupportedhw = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 13, 0, 14)
)
wingTrapFwuFwuunsupportedhw.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapFwuFwuunsupportedhw.setStatus(
        "current"
    )

wingTrapLicmgrLicInstalled = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 14, 0, 1)
)
wingTrapLicmgrLicInstalled.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapLicmgrLicInstalled.setStatus(
        "current"
    )

wingTrapLicmgrLicInstallDefault = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 14, 0, 2)
)
wingTrapLicmgrLicInstallDefault.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapLicmgrLicInstallDefault.setStatus(
        "current"
    )

wingTrapLicmgrLicInstallCount = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 14, 0, 3)
)
wingTrapLicmgrLicInstallCount.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapLicmgrLicInstallCount.setStatus(
        "current"
    )

wingTrapLicmgrLicRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 14, 0, 4)
)
wingTrapLicmgrLicRemoved.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapLicmgrLicRemoved.setStatus(
        "current"
    )

wingTrapLicmgrLicInvalid = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 14, 0, 5)
)
wingTrapLicmgrLicInvalid.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapLicmgrLicInvalid.setStatus(
        "current"
    )

wingTrapMeshMeshLinkUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 1)
)
wingTrapMeshMeshLinkUp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshLinkUp.setStatus(
        "current"
    )

wingTrapMeshMeshLinkDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 2)
)
wingTrapMeshMeshLinkDown.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshLinkDown.setStatus(
        "current"
    )

wingTrapMeshMeshpointUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 3)
)
wingTrapMeshMeshpointUp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshpointUp.setStatus(
        "current"
    )

wingTrapMeshMeshpointDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 4)
)
wingTrapMeshMeshpointDown.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshpointDown.setStatus(
        "current"
    )

wingTrapMeshMeshpointLoopPreventOn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 5)
)
wingTrapMeshMeshpointLoopPreventOn.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshpointLoopPreventOn.setStatus(
        "current"
    )

wingTrapMeshMeshpointLoopPreventOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 6)
)
wingTrapMeshMeshpointLoopPreventOff.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshpointLoopPreventOff.setStatus(
        "current"
    )

wingTrapMeshMeshpointRootChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 7)
)
wingTrapMeshMeshpointRootChange.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshpointRootChange.setStatus(
        "current"
    )

wingTrapMeshMeshpointPathChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 15, 0, 8)
)
wingTrapMeshMeshpointPathChange.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapMeshMeshpointPathChange.setStatus(
        "current"
    )

wingTrapNsmIfup = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 1)
)
wingTrapNsmIfup.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmIfup.setStatus(
        "current"
    )

wingTrapNsmIfdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 2)
)
wingTrapNsmIfdown.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmIfdown.setStatus(
        "current"
    )

wingTrapNsmDhcpip = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 3)
)
wingTrapNsmDhcpip.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcpip.setStatus(
        "current"
    )

wingTrapNsmDhcpdefrt = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 4)
)
wingTrapNsmDhcpdefrt.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcpdefrt.setStatus(
        "current"
    )

wingTrapNsmDhcpipchg = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 5)
)
wingTrapNsmDhcpipchg.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcpipchg.setStatus(
        "current"
    )

wingTrapNsmDhcpnodefrt = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 6)
)
wingTrapNsmDhcpnodefrt.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcpnodefrt.setStatus(
        "current"
    )

wingTrapNsmIfipcfg = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 7)
)
wingTrapNsmIfipcfg.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmIfipcfg.setStatus(
        "current"
    )

wingTrapNsmDhcpcErr = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 8)
)
wingTrapNsmDhcpcErr.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcpcErr.setStatus(
        "current"
    )

wingTrapNsmDhcpipnoadd = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 9)
)
wingTrapNsmDhcpipnoadd.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcpipnoadd.setStatus(
        "current"
    )

wingTrapNsmDhcplsexp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 10)
)
wingTrapNsmDhcplsexp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcplsexp.setStatus(
        "current"
    )

wingTrapNsmDhcpnak = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 11)
)
wingTrapNsmDhcpnak.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmDhcpnak.setStatus(
        "current"
    )

wingTrapNsmNsmNtp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 12)
)
wingTrapNsmNsmNtp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmNsmNtp.setStatus(
        "current"
    )

wingTrapNsmIfFailover = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 13)
)
wingTrapNsmIfFailover.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmIfFailover.setStatus(
        "current"
    )

wingTrapNsmIfFailback = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 16, 0, 14)
)
wingTrapNsmIfFailback.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapNsmIfFailback.setStatus(
        "current"
    )

wingTrapPmProcstart = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 1)
)
wingTrapPmProcstart.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmProcstart.setStatus(
        "current"
    )

wingTrapPmProcrstrt = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 2)
)
wingTrapPmProcrstrt.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmProcrstrt.setStatus(
        "current"
    )

wingTrapPmProcmaxrstrt = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 3)
)
wingTrapPmProcmaxrstrt.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmProcmaxrstrt.setStatus(
        "current"
    )

wingTrapPmProcsysrstrt = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 4)
)
wingTrapPmProcsysrstrt.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmProcsysrstrt.setStatus(
        "current"
    )

wingTrapPmProcstop = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 5)
)
wingTrapPmProcstop.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmProcstop.setStatus(
        "current"
    )

wingTrapPmProcid = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 6)
)
wingTrapPmProcid.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmProcid.setStatus(
        "current"
    )

wingTrapPmStartupcomplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 7)
)
wingTrapPmStartupcomplete.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmStartupcomplete.setStatus(
        "current"
    )

wingTrapPmProcnoresp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 17, 0, 8)
)
wingTrapPmProcnoresp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapPmProcnoresp.setStatus(
        "current"
    )

wingTrapRadconfRadiusdstart = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 18, 0, 1)
)
wingTrapRadconfRadiusdstart.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadconfRadiusdstart.setStatus(
        "current"
    )

wingTrapRadconfRadiusdstop = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 18, 0, 2)
)
wingTrapRadconfRadiusdstop.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadconfRadiusdstop.setStatus(
        "current"
    )

wingTrapRadconfCouldNotStopRadiusd = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 18, 0, 3)
)
wingTrapRadconfCouldNotStopRadiusd.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadconfCouldNotStopRadiusd.setStatus(
        "current"
    )

wingTrapRadioChannelCountryMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 1)
)
wingTrapRadioChannelCountryMismatch.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioChannelCountryMismatch.setStatus(
        "current"
    )

wingTrapRadioRadioStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 2)
)
wingTrapRadioRadioStateChange.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioRadioStateChange.setStatus(
        "current"
    )

wingTrapRadioRadarScanStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 3)
)
wingTrapRadioRadarScanStarted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioRadarScanStarted.setStatus(
        "current"
    )

wingTrapRadioRadarScanCompleted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 4)
)
wingTrapRadioRadarScanCompleted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioRadarScanCompleted.setStatus(
        "current"
    )

wingTrapRadioRadarDetected = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 5)
)
wingTrapRadioRadarDetected.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioRadarDetected.setStatus(
        "current"
    )

wingTrapRadioRadarDetInfo = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 6)
)
wingTrapRadioRadarDetInfo.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioRadarDetInfo.setStatus(
        "current"
    )

wingTrapRadioResumeHomeChannel = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 7)
)
wingTrapRadioResumeHomeChannel.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioResumeHomeChannel.setStatus(
        "current"
    )

wingTrapRadioAcsScanStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 8)
)
wingTrapRadioAcsScanStarted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioAcsScanStarted.setStatus(
        "current"
    )

wingTrapRadioAcsScanComplete = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 9)
)
wingTrapRadioAcsScanComplete.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioAcsScanComplete.setStatus(
        "current"
    )

wingTrapRadioRadioAntennaError = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 10)
)
wingTrapRadioRadioAntennaError.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioRadioAntennaError.setStatus(
        "current"
    )

wingTrapRadioRadioAntennaSetting = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 19, 0, 11)
)
wingTrapRadioRadioAntennaSetting.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapRadioRadioAntennaSetting.setStatus(
        "current"
    )

wingTrapSecuritymgrDeprecatedcli = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 20, 0, 1)
)
wingTrapSecuritymgrDeprecatedcli.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSecuritymgrDeprecatedcli.setStatus(
        "current"
    )

wingTrapSecuritymgrUserpassstrength = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 20, 0, 2)
)
wingTrapSecuritymgrUserpassstrength.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSecuritymgrUserpassstrength.setStatus(
        "current"
    )

wingTrapSecuritymgrFatalHit = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 20, 0, 3)
)
wingTrapSecuritymgrFatalHit.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSecuritymgrFatalHit.setStatus(
        "current"
    )

wingTrapSecuritymgrLogCliError = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 20, 0, 4)
)
wingTrapSecuritymgrLogCliError.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSecuritymgrLogCliError.setStatus(
        "current"
    )

wingTrapSmrtCalibrationStarted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 1)
)
wingTrapSmrtCalibrationStarted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtCalibrationStarted.setStatus(
        "current"
    )

wingTrapSmrtCalibrationDone = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 2)
)
wingTrapSmrtCalibrationDone.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtCalibrationDone.setStatus(
        "current"
    )

wingTrapSmrtNeighborRecovery = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 3)
)
wingTrapSmrtNeighborRecovery.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtNeighborRecovery.setStatus(
        "current"
    )

wingTrapSmrtPowerAdjustment = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 4)
)
wingTrapSmrtPowerAdjustment.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtPowerAdjustment.setStatus(
        "current"
    )

wingTrapSmrtInterferenceRecovery = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 5)
)
wingTrapSmrtInterferenceRecovery.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtInterferenceRecovery.setStatus(
        "current"
    )

wingTrapSmrtRootRecovery = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 6)
)
wingTrapSmrtRootRecovery.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtRootRecovery.setStatus(
        "current"
    )

wingTrapSmrtCovHoleRecovery = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 7)
)
wingTrapSmrtCovHoleRecovery.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtCovHoleRecovery.setStatus(
        "current"
    )

wingTrapSmrtCovHoleRecoveryDone = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 8)
)
wingTrapSmrtCovHoleRecoveryDone.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtCovHoleRecoveryDone.setStatus(
        "current"
    )

wingTrapSmrtConfigCleared = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 9)
)
wingTrapSmrtConfigCleared.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtConfigCleared.setStatus(
        "current"
    )

wingTrapSmrtChannelChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 21, 0, 10)
)
wingTrapSmrtChannelChange.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmrtChannelChange.setStatus(
        "current"
    )

wingTrapSmtpnotSmtpauth = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0, 1)
)
wingTrapSmtpnotSmtpauth.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmtpnotSmtpauth.setStatus(
        "current"
    )

wingTrapSmtpnotNet = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0, 2)
)
wingTrapSmtpnotNet.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmtpnotNet.setStatus(
        "current"
    )

wingTrapSmtpnotSmtpinfo = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0, 3)
)
wingTrapSmtpnotSmtpinfo.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmtpnotSmtpinfo.setStatus(
        "current"
    )

wingTrapSmtpnotCfg = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0, 4)
)
wingTrapSmtpnotCfg.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmtpnotCfg.setStatus(
        "current"
    )

wingTrapSmtpnotCfginc = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0, 5)
)
wingTrapSmtpnotCfginc.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmtpnotCfginc.setStatus(
        "current"
    )

wingTrapSmtpnotSmtperr = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0, 6)
)
wingTrapSmtpnotSmtperr.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmtpnotSmtperr.setStatus(
        "current"
    )

wingTrapSmtpnotProto = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 22, 0, 7)
)
wingTrapSmtpnotProto.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSmtpnotProto.setStatus(
        "current"
    )

wingTrapSystemPanic = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 1)
)
wingTrapSystemPanic.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemPanic.setStatus(
        "current"
    )

wingTrapSystemHttpErr = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 2)
)
wingTrapSystemHttpErr.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemHttpErr.setStatus(
        "current"
    )

wingTrapSystemProcStop = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 3)
)
wingTrapSystemProcStop.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemProcStop.setStatus(
        "current"
    )

wingTrapSystemClockReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 4)
)
wingTrapSystemClockReset.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemClockReset.setStatus(
        "current"
    )

wingTrapSystemUiUserAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 5)
)
wingTrapSystemUiUserAuthFail.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemUiUserAuthFail.setStatus(
        "current"
    )

wingTrapSystemUiUserAuthSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 6)
)
wingTrapSystemUiUserAuthSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemUiUserAuthSuccess.setStatus(
        "current"
    )

wingTrapSystemLogin = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 7)
)
wingTrapSystemLogin.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemLogin.setStatus(
        "current"
    )

wingTrapSystemLoginFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 8)
)
wingTrapSystemLoginFail.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemLoginFail.setStatus(
        "current"
    )

wingTrapSystemLoginFailAccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 9)
)
wingTrapSystemLoginFailAccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemLoginFailAccess.setStatus(
        "current"
    )

wingTrapSystemLoginFailBadRole = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 10)
)
wingTrapSystemLoginFailBadRole.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemLoginFailBadRole.setStatus(
        "current"
    )

wingTrapSystemLogout = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 11)
)
wingTrapSystemLogout.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemLogout.setStatus(
        "current"
    )

wingTrapSystemServerUnreachable = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 12)
)
wingTrapSystemServerUnreachable.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemServerUnreachable.setStatus(
        "current"
    )

wingTrapSystemSystemAutoupEnable = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 13)
)
wingTrapSystemSystemAutoupEnable.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemSystemAutoupEnable.setStatus(
        "current"
    )

wingTrapSystemSystemAutoupDisable = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 14)
)
wingTrapSystemSystemAutoupDisable.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemSystemAutoupDisable.setStatus(
        "current"
    )

wingTrapSystemGuestUserExp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 23, 0, 15)
)
wingTrapSystemGuestUserExp.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapSystemGuestUserExp.setStatus(
        "current"
    )

wingTrapWipsWipsEvent = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 24, 0, 1)
)
wingTrapWipsWipsEvent.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapWipsWipsEvent.setStatus(
        "current"
    )

wingTrapWipsWipsClientBlacklisted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 24, 0, 2)
)
wingTrapWipsWipsClientBlacklisted.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapWipsWipsClientBlacklisted.setStatus(
        "current"
    )

wingTrapWipsWipsClientRemBlacklist = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 24, 0, 3)
)
wingTrapWipsWipsClientRemBlacklist.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapWipsWipsClientRemBlacklist.setStatus(
        "current"
    )

wingTrapDot1xDot1xSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 25, 0, 1)
)
wingTrapDot1xDot1xSuccess.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot1xDot1xSuccess.setStatus(
        "current"
    )

wingTrapDot1xDot1xFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 0, 25, 0, 2)
)
wingTrapDot1xDot1xFailed.setObjects(
      *(("WING-MIB", "wingEventMnemonic"),
        ("WING-MIB", "wingEventModule"),
        ("WING-MIB", "wingEventSeverity"),
        ("WING-MIB", "wingEventMsg"),
        ("WING-MIB", "wingEventSourceAddr"),
        ("WING-MIB", "wingEventSourceHostname"))
)
if mibBuilder.loadTexts:
    wingTrapDot1xDot1xFailed.setStatus(
        "current"
    )


# Notifications groups

wingNotificationGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 2, 2, 2)
)
wingNotificationGroup.setObjects(
      *(("WING-MIB", "wingTrapGeneric"),
        ("WING-MIB", "wingTrapAaaRadiusDisconMsg"),
        ("WING-MIB", "wingTrapAaaRadiusVlanUpdate"),
        ("WING-MIB", "wingTrapAaaRadiusSessionNotStarted"),
        ("WING-MIB", "wingTrapAaaRadiusSessionExpired"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent1"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent2"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent3"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent10"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent11"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent12"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent13"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent14"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent16"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent19"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent21"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent25"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent29"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent47"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent87"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent105"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent109"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent110"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent111"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent112"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent113"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent114"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent115"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent116"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent117"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent118"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent119"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent120"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent121"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent142"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent221"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent222"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent63"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent26"),
        ("WING-MIB", "wingTrapAdvWipsAdvWipsEvent220"),
        ("WING-MIB", "wingTrapApAdopted"),
        ("WING-MIB", "wingTrapApUnadopted"),
        ("WING-MIB", "wingTrapApAdoptedToController"),
        ("WING-MIB", "wingTrapApReset"),
        ("WING-MIB", "wingTrapApSwConnLost"),
        ("WING-MIB", "wingTrapApApAutoupTimeout"),
        ("WING-MIB", "wingTrapApApAutoupReboot"),
        ("WING-MIB", "wingTrapApApAutoupNoNeed"),
        ("WING-MIB", "wingTrapApApAutoupNeeded"),
        ("WING-MIB", "wingTrapApApAutoupDone"),
        ("WING-MIB", "wingTrapApApAutoupFail"),
        ("WING-MIB", "wingTrapApApAutoupVer"),
        ("WING-MIB", "wingTrapApNoImageFile"),
        ("WING-MIB", "wingTrapApImageParseFailure"),
        ("WING-MIB", "wingTrapApLegacyAutoUpdate"),
        ("WING-MIB", "wingTrapApApAdopted"),
        ("WING-MIB", "wingTrapApApUnadopted"),
        ("WING-MIB", "wingTrapApApResetDetected"),
        ("WING-MIB", "wingTrapApApResetRequest"),
        ("WING-MIB", "wingTrapApApTimeout"),
        ("WING-MIB", "wingTrapCaptivePortalAuthSuccess"),
        ("WING-MIB", "wingTrapCaptivePortalAuthFailed"),
        ("WING-MIB", "wingTrapCaptivePortalSessionTimeout"),
        ("WING-MIB", "wingTrapCaptivePortalClientDisconnect"),
        ("WING-MIB", "wingTrapCaptivePortalPurgeClient"),
        ("WING-MIB", "wingTrapCaptivePortalFlexLogAccess"),
        ("WING-MIB", "wingTrapCaptivePortalInactivityTimeout"),
        ("WING-MIB", "wingTrapCaptivePortalAllowAccess"),
        ("WING-MIB", "wingTrapCaptivePortalClientRemoved"),
        ("WING-MIB", "wingTrapCaptivePortalPageCreFailed"),
        ("WING-MIB", "wingTrapCaptivePortalDataLimitExceed"),
        ("WING-MIB", "wingTrapCertmgrRsaKeyActionsSuccess"),
        ("WING-MIB", "wingTrapCertmgrRsaKeyActionsFailure"),
        ("WING-MIB", "wingTrapCertmgrCaCertActionsSuccess"),
        ("WING-MIB", "wingTrapCertmgrCaCertActionsFailure"),
        ("WING-MIB", "wingTrapCertmgrSrvCertActionsSuccess"),
        ("WING-MIB", "wingTrapCertmgrSvrCertActionsFailure"),
        ("WING-MIB", "wingTrapCertmgrCsrExportSuccess"),
        ("WING-MIB", "wingTrapCertmgrCsrExportFailure"),
        ("WING-MIB", "wingTrapCertmgrCrlActionsSuccess"),
        ("WING-MIB", "wingTrapCertmgrCrlActionsFailure"),
        ("WING-MIB", "wingTrapCertmgrDeleteTrustpointAction"),
        ("WING-MIB", "wingTrapCertmgrImportTrustpoint"),
        ("WING-MIB", "wingTrapCertmgrExportTrustpoint"),
        ("WING-MIB", "wingTrapCertmgrCertExpiry"),
        ("WING-MIB", "wingTrapCertmgrCaKeyActionsSuccess"),
        ("WING-MIB", "wingTrapCertmgrCaKeyActionsFailure"),
        ("WING-MIB", "wingTrapCfgdAclRuleAltered"),
        ("WING-MIB", "wingTrapCfgdAclAttachedAltered"),
        ("WING-MIB", "wingTrapClusterCmasterCfgUpdateFail"),
        ("WING-MIB", "wingTrapClusterMaxExceeded"),
        ("WING-MIB", "wingTrapDhcpsvrRelayNoIface"),
        ("WING-MIB", "wingTrapDhcpsvrRelayIfaceNoIp"),
        ("WING-MIB", "wingTrapDhcpsvrRelayStart"),
        ("WING-MIB", "wingTrapDhcpsvrRelayStop"),
        ("WING-MIB", "wingTrapDhcpsvrDhcpsvrStart"),
        ("WING-MIB", "wingTrapDhcpsvrDhcpsvrStop"),
        ("WING-MIB", "wingTrapDiagFanUnderspeed"),
        ("WING-MIB", "wingTrapDiagUnderVoltage"),
        ("WING-MIB", "wingTrapDiagOverVoltage"),
        ("WING-MIB", "wingTrapDiagLowTemp"),
        ("WING-MIB", "wingTrapDiagHighTemp"),
        ("WING-MIB", "wingTrapDiagOverTemp"),
        ("WING-MIB", "wingTrapDiagWdStateChange"),
        ("WING-MIB", "wingTrapDiagElapsedTime"),
        ("WING-MIB", "wingTrapDiagAutogenTechSprt"),
        ("WING-MIB", "wingTrapDiagPoeInitFail"),
        ("WING-MIB", "wingTrapDiagPoePowerLevel"),
        ("WING-MIB", "wingTrapDiagPoeReadFail"),
        ("WING-MIB", "wingTrapDiagPoeStateChange"),
        ("WING-MIB", "wingTrapDiagWdResetSys"),
        ("WING-MIB", "wingTrapDiagCpuLoad"),
        ("WING-MIB", "wingTrapDiagRamUsage"),
        ("WING-MIB", "wingTrapDiagBufUsage"),
        ("WING-MIB", "wingTrapDiagHeadCacheUsage"),
        ("WING-MIB", "wingTrapDiagIpDestUsage"),
        ("WING-MIB", "wingTrapDiagFreeRam"),
        ("WING-MIB", "wingTrapDiagFreeFlashDisk"),
        ("WING-MIB", "wingTrapDiagFreeFlashInodes"),
        ("WING-MIB", "wingTrapDiagFreeNvramDisk"),
        ("WING-MIB", "wingTrapDiagFreeNvramInodes"),
        ("WING-MIB", "wingTrapDiagFreeRamDisk"),
        ("WING-MIB", "wingTrapDiagFreeRamInodes"),
        ("WING-MIB", "wingTrapDiagFdCount"),
        ("WING-MIB", "wingTrapDiagDiskUsage"),
        ("WING-MIB", "wingTrapDiagNewLedState"),
        ("WING-MIB", "wingTrapDiagLedIdentify"),
        ("WING-MIB", "wingTrapDot11CountryCode"),
        ("WING-MIB", "wingTrapDot11CountryCodeError"),
        ("WING-MIB", "wingTrapDot11ClientAssociated"),
        ("WING-MIB", "wingTrapDot11ClientDisassociated"),
        ("WING-MIB", "wingTrapDot11ClientDeniedAssoc"),
        ("WING-MIB", "wingTrapDot11WpaWpa2Success"),
        ("WING-MIB", "wingTrapDot11WpaWpa2Failed"),
        ("WING-MIB", "wingTrapDot11WpaWpa2KeyRotn"),
        ("WING-MIB", "wingTrapDot11TkipMicFailReport"),
        ("WING-MIB", "wingTrapDot11TkipMicFailure"),
        ("WING-MIB", "wingTrapDot11TkipCntrmeasStart"),
        ("WING-MIB", "wingTrapDot11TkipCntrmeasEnd"),
        ("WING-MIB", "wingTrapDot11EapSuccess"),
        ("WING-MIB", "wingTrapDot11EapFailed"),
        ("WING-MIB", "wingTrapDot11EapClientTimeout"),
        ("WING-MIB", "wingTrapDot11EapServerTimeout"),
        ("WING-MIB", "wingTrapDot11EapCachedKeys"),
        ("WING-MIB", "wingTrapDot11EapOppCachedKeys"),
        ("WING-MIB", "wingTrapDot11EapPreauthSuccess"),
        ("WING-MIB", "wingTrapDot11EapPreauthFailed"),
        ("WING-MIB", "wingTrapDot11EapPreauthClientTimeout"),
        ("WING-MIB", "wingTrapDot11EapPreauthServerTimeout"),
        ("WING-MIB", "wingTrapDot11KerberosWlanSuccess"),
        ("WING-MIB", "wingTrapDot11KerberosWlanTimeout"),
        ("WING-MIB", "wingTrapDot11KerberosWlanFailed"),
        ("WING-MIB", "wingTrapDot11KerberosClientSuccess"),
        ("WING-MIB", "wingTrapDot11KerberosClientFailed"),
        ("WING-MIB", "wingTrapDot11VoiceCallFailed"),
        ("WING-MIB", "wingTrapDot11VoiceCallEstablished"),
        ("WING-MIB", "wingTrapDot11VoiceCallCompleted"),
        ("WING-MIB", "wingTrapDot11UnsanctionedApActive"),
        ("WING-MIB", "wingTrapDot11UnsanctionedApInactive"),
        ("WING-MIB", "wingTrapDot11UnsanctionedApStatusChange"),
        ("WING-MIB", "wingTrapDot11NeighborDeniedAssoc"),
        ("WING-MIB", "wingTrapDot11WlanTimeAccessDisable"),
        ("WING-MIB", "wingTrapDot11WlanTimeAccessEnable"),
        ("WING-MIB", "wingTrapDot11MoveOperationSuccess"),
        ("WING-MIB", "wingTrapDot11FtRoamSuccess"),
        ("WING-MIB", "wingTrapFwuFwudone"),
        ("WING-MIB", "wingTrapFwuFwuaborted"),
        ("WING-MIB", "wingTrapFwuFwunoneed"),
        ("WING-MIB", "wingTrapFwuFwusyserr"),
        ("WING-MIB", "wingTrapFwuFwubadconfig"),
        ("WING-MIB", "wingTrapFwuFwuserverundef"),
        ("WING-MIB", "wingTrapFwuFwufileundef"),
        ("WING-MIB", "wingTrapFwuFwuserverunreachable"),
        ("WING-MIB", "wingTrapFwuFwucouldntgetfile"),
        ("WING-MIB", "wingTrapFwuFwuvermismatch"),
        ("WING-MIB", "wingTrapFwuFwuprodmismatch"),
        ("WING-MIB", "wingTrapFwuFwucorruptedfile"),
        ("WING-MIB", "wingTrapFwuFwusignmismatch"),
        ("WING-MIB", "wingTrapFwuFwuunsupportedhw"),
        ("WING-MIB", "wingTrapLicmgrLicInstalled"),
        ("WING-MIB", "wingTrapLicmgrLicInstallDefault"),
        ("WING-MIB", "wingTrapLicmgrLicInstallCount"),
        ("WING-MIB", "wingTrapLicmgrLicRemoved"),
        ("WING-MIB", "wingTrapLicmgrLicInvalid"),
        ("WING-MIB", "wingTrapMeshMeshLinkUp"),
        ("WING-MIB", "wingTrapMeshMeshLinkDown"),
        ("WING-MIB", "wingTrapMeshMeshpointUp"),
        ("WING-MIB", "wingTrapMeshMeshpointDown"),
        ("WING-MIB", "wingTrapMeshMeshpointLoopPreventOn"),
        ("WING-MIB", "wingTrapMeshMeshpointLoopPreventOff"),
        ("WING-MIB", "wingTrapMeshMeshpointRootChange"),
        ("WING-MIB", "wingTrapMeshMeshpointPathChange"),
        ("WING-MIB", "wingTrapNsmIfup"),
        ("WING-MIB", "wingTrapNsmIfdown"),
        ("WING-MIB", "wingTrapNsmDhcpip"),
        ("WING-MIB", "wingTrapNsmDhcpdefrt"),
        ("WING-MIB", "wingTrapNsmDhcpipchg"),
        ("WING-MIB", "wingTrapNsmDhcpnodefrt"),
        ("WING-MIB", "wingTrapNsmIfipcfg"),
        ("WING-MIB", "wingTrapNsmDhcpcErr"),
        ("WING-MIB", "wingTrapNsmDhcpipnoadd"),
        ("WING-MIB", "wingTrapNsmDhcplsexp"),
        ("WING-MIB", "wingTrapNsmDhcpnak"),
        ("WING-MIB", "wingTrapNsmNsmNtp"),
        ("WING-MIB", "wingTrapNsmIfFailover"),
        ("WING-MIB", "wingTrapNsmIfFailback"),
        ("WING-MIB", "wingTrapPmProcstart"),
        ("WING-MIB", "wingTrapPmProcrstrt"),
        ("WING-MIB", "wingTrapPmProcmaxrstrt"),
        ("WING-MIB", "wingTrapPmProcsysrstrt"),
        ("WING-MIB", "wingTrapPmProcstop"),
        ("WING-MIB", "wingTrapPmProcid"),
        ("WING-MIB", "wingTrapPmStartupcomplete"),
        ("WING-MIB", "wingTrapPmProcnoresp"),
        ("WING-MIB", "wingTrapRadconfRadiusdstart"),
        ("WING-MIB", "wingTrapRadconfRadiusdstop"),
        ("WING-MIB", "wingTrapRadconfCouldNotStopRadiusd"),
        ("WING-MIB", "wingTrapRadioChannelCountryMismatch"),
        ("WING-MIB", "wingTrapRadioRadioStateChange"),
        ("WING-MIB", "wingTrapRadioRadarScanStarted"),
        ("WING-MIB", "wingTrapRadioRadarScanCompleted"),
        ("WING-MIB", "wingTrapRadioRadarDetected"),
        ("WING-MIB", "wingTrapRadioRadarDetInfo"),
        ("WING-MIB", "wingTrapRadioResumeHomeChannel"),
        ("WING-MIB", "wingTrapRadioAcsScanStarted"),
        ("WING-MIB", "wingTrapRadioAcsScanComplete"),
        ("WING-MIB", "wingTrapRadioRadioAntennaError"),
        ("WING-MIB", "wingTrapRadioRadioAntennaSetting"),
        ("WING-MIB", "wingTrapSecuritymgrDeprecatedcli"),
        ("WING-MIB", "wingTrapSecuritymgrUserpassstrength"),
        ("WING-MIB", "wingTrapSecuritymgrFatalHit"),
        ("WING-MIB", "wingTrapSecuritymgrLogCliError"),
        ("WING-MIB", "wingTrapSmrtCalibrationStarted"),
        ("WING-MIB", "wingTrapSmrtCalibrationDone"),
        ("WING-MIB", "wingTrapSmrtNeighborRecovery"),
        ("WING-MIB", "wingTrapSmrtPowerAdjustment"),
        ("WING-MIB", "wingTrapSmrtInterferenceRecovery"),
        ("WING-MIB", "wingTrapSmrtRootRecovery"),
        ("WING-MIB", "wingTrapSmrtCovHoleRecovery"),
        ("WING-MIB", "wingTrapSmrtCovHoleRecoveryDone"),
        ("WING-MIB", "wingTrapSmrtConfigCleared"),
        ("WING-MIB", "wingTrapSmrtChannelChange"),
        ("WING-MIB", "wingTrapSmtpnotSmtpauth"),
        ("WING-MIB", "wingTrapSmtpnotNet"),
        ("WING-MIB", "wingTrapSmtpnotSmtpinfo"),
        ("WING-MIB", "wingTrapSmtpnotCfg"),
        ("WING-MIB", "wingTrapSmtpnotCfginc"),
        ("WING-MIB", "wingTrapSmtpnotSmtperr"),
        ("WING-MIB", "wingTrapSmtpnotProto"),
        ("WING-MIB", "wingTrapSystemPanic"),
        ("WING-MIB", "wingTrapSystemHttpErr"),
        ("WING-MIB", "wingTrapSystemProcStop"),
        ("WING-MIB", "wingTrapSystemClockReset"),
        ("WING-MIB", "wingTrapSystemUiUserAuthFail"),
        ("WING-MIB", "wingTrapSystemUiUserAuthSuccess"),
        ("WING-MIB", "wingTrapSystemLogin"),
        ("WING-MIB", "wingTrapSystemLoginFail"),
        ("WING-MIB", "wingTrapSystemLoginFailAccess"),
        ("WING-MIB", "wingTrapSystemLoginFailBadRole"),
        ("WING-MIB", "wingTrapSystemLogout"),
        ("WING-MIB", "wingTrapSystemServerUnreachable"),
        ("WING-MIB", "wingTrapSystemSystemAutoupEnable"),
        ("WING-MIB", "wingTrapSystemSystemAutoupDisable"),
        ("WING-MIB", "wingTrapSystemGuestUserExp"),
        ("WING-MIB", "wingTrapWipsWipsEvent"),
        ("WING-MIB", "wingTrapWipsWipsClientBlacklisted"),
        ("WING-MIB", "wingTrapWipsWipsClientRemBlacklist"),
        ("WING-MIB", "wingTrapDot1xDot1xSuccess"),
        ("WING-MIB", "wingTrapDot1xDot1xFailed"))
)
if mibBuilder.loadTexts:
    wingNotificationGroup.setStatus(
        "current"
    )


# Agent capabilities


# Module compliance

wingCompliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 1916, 2, 131, 50, 2, 1, 1)
)
wingCompliance.setObjects(
      *(("WING-MIB", "wingObjectGroup"),
        ("WING-MIB", "wingNotificationGroup"))
)
if mibBuilder.loadTexts:
    wingCompliance.setStatus(
        "current"
    )


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "WING-MIB",
    **{"WingIdentifier": WingIdentifier,
       "WingDoActionNow": WingDoActionNow,
       "wingMIB": wingMIB,
       "wingNotifications": wingNotifications,
       "wingTrapGeneric": wingTrapGeneric,
       "wingTrapsAaa": wingTrapsAaa,
       "wingTrapsAaaPrefix": wingTrapsAaaPrefix,
       "wingTrapAaaRadiusDisconMsg": wingTrapAaaRadiusDisconMsg,
       "wingTrapAaaRadiusVlanUpdate": wingTrapAaaRadiusVlanUpdate,
       "wingTrapAaaRadiusSessionNotStarted": wingTrapAaaRadiusSessionNotStarted,
       "wingTrapAaaRadiusSessionExpired": wingTrapAaaRadiusSessionExpired,
       "wingTrapsAdvWips": wingTrapsAdvWips,
       "wingTrapsAdvWipsPrefix": wingTrapsAdvWipsPrefix,
       "wingTrapAdvWipsAdvWipsEvent1": wingTrapAdvWipsAdvWipsEvent1,
       "wingTrapAdvWipsAdvWipsEvent2": wingTrapAdvWipsAdvWipsEvent2,
       "wingTrapAdvWipsAdvWipsEvent3": wingTrapAdvWipsAdvWipsEvent3,
       "wingTrapAdvWipsAdvWipsEvent10": wingTrapAdvWipsAdvWipsEvent10,
       "wingTrapAdvWipsAdvWipsEvent11": wingTrapAdvWipsAdvWipsEvent11,
       "wingTrapAdvWipsAdvWipsEvent12": wingTrapAdvWipsAdvWipsEvent12,
       "wingTrapAdvWipsAdvWipsEvent13": wingTrapAdvWipsAdvWipsEvent13,
       "wingTrapAdvWipsAdvWipsEvent14": wingTrapAdvWipsAdvWipsEvent14,
       "wingTrapAdvWipsAdvWipsEvent16": wingTrapAdvWipsAdvWipsEvent16,
       "wingTrapAdvWipsAdvWipsEvent19": wingTrapAdvWipsAdvWipsEvent19,
       "wingTrapAdvWipsAdvWipsEvent21": wingTrapAdvWipsAdvWipsEvent21,
       "wingTrapAdvWipsAdvWipsEvent25": wingTrapAdvWipsAdvWipsEvent25,
       "wingTrapAdvWipsAdvWipsEvent29": wingTrapAdvWipsAdvWipsEvent29,
       "wingTrapAdvWipsAdvWipsEvent47": wingTrapAdvWipsAdvWipsEvent47,
       "wingTrapAdvWipsAdvWipsEvent87": wingTrapAdvWipsAdvWipsEvent87,
       "wingTrapAdvWipsAdvWipsEvent105": wingTrapAdvWipsAdvWipsEvent105,
       "wingTrapAdvWipsAdvWipsEvent109": wingTrapAdvWipsAdvWipsEvent109,
       "wingTrapAdvWipsAdvWipsEvent110": wingTrapAdvWipsAdvWipsEvent110,
       "wingTrapAdvWipsAdvWipsEvent111": wingTrapAdvWipsAdvWipsEvent111,
       "wingTrapAdvWipsAdvWipsEvent112": wingTrapAdvWipsAdvWipsEvent112,
       "wingTrapAdvWipsAdvWipsEvent113": wingTrapAdvWipsAdvWipsEvent113,
       "wingTrapAdvWipsAdvWipsEvent114": wingTrapAdvWipsAdvWipsEvent114,
       "wingTrapAdvWipsAdvWipsEvent115": wingTrapAdvWipsAdvWipsEvent115,
       "wingTrapAdvWipsAdvWipsEvent116": wingTrapAdvWipsAdvWipsEvent116,
       "wingTrapAdvWipsAdvWipsEvent117": wingTrapAdvWipsAdvWipsEvent117,
       "wingTrapAdvWipsAdvWipsEvent118": wingTrapAdvWipsAdvWipsEvent118,
       "wingTrapAdvWipsAdvWipsEvent119": wingTrapAdvWipsAdvWipsEvent119,
       "wingTrapAdvWipsAdvWipsEvent120": wingTrapAdvWipsAdvWipsEvent120,
       "wingTrapAdvWipsAdvWipsEvent121": wingTrapAdvWipsAdvWipsEvent121,
       "wingTrapAdvWipsAdvWipsEvent142": wingTrapAdvWipsAdvWipsEvent142,
       "wingTrapAdvWipsAdvWipsEvent221": wingTrapAdvWipsAdvWipsEvent221,
       "wingTrapAdvWipsAdvWipsEvent222": wingTrapAdvWipsAdvWipsEvent222,
       "wingTrapAdvWipsAdvWipsEvent63": wingTrapAdvWipsAdvWipsEvent63,
       "wingTrapAdvWipsAdvWipsEvent26": wingTrapAdvWipsAdvWipsEvent26,
       "wingTrapAdvWipsAdvWipsEvent220": wingTrapAdvWipsAdvWipsEvent220,
       "wingTrapsAp": wingTrapsAp,
       "wingTrapsApPrefix": wingTrapsApPrefix,
       "wingTrapApAdopted": wingTrapApAdopted,
       "wingTrapApUnadopted": wingTrapApUnadopted,
       "wingTrapApAdoptedToController": wingTrapApAdoptedToController,
       "wingTrapApReset": wingTrapApReset,
       "wingTrapApSwConnLost": wingTrapApSwConnLost,
       "wingTrapApApAutoupTimeout": wingTrapApApAutoupTimeout,
       "wingTrapApApAutoupReboot": wingTrapApApAutoupReboot,
       "wingTrapApApAutoupNoNeed": wingTrapApApAutoupNoNeed,
       "wingTrapApApAutoupNeeded": wingTrapApApAutoupNeeded,
       "wingTrapApApAutoupDone": wingTrapApApAutoupDone,
       "wingTrapApApAutoupFail": wingTrapApApAutoupFail,
       "wingTrapApApAutoupVer": wingTrapApApAutoupVer,
       "wingTrapApNoImageFile": wingTrapApNoImageFile,
       "wingTrapApImageParseFailure": wingTrapApImageParseFailure,
       "wingTrapApLegacyAutoUpdate": wingTrapApLegacyAutoUpdate,
       "wingTrapApApAdopted": wingTrapApApAdopted,
       "wingTrapApApUnadopted": wingTrapApApUnadopted,
       "wingTrapApApResetDetected": wingTrapApApResetDetected,
       "wingTrapApApResetRequest": wingTrapApApResetRequest,
       "wingTrapApApTimeout": wingTrapApApTimeout,
       "wingTrapsCaptivePortal": wingTrapsCaptivePortal,
       "wingTrapsCaptivePortalPrefix": wingTrapsCaptivePortalPrefix,
       "wingTrapCaptivePortalAuthSuccess": wingTrapCaptivePortalAuthSuccess,
       "wingTrapCaptivePortalAuthFailed": wingTrapCaptivePortalAuthFailed,
       "wingTrapCaptivePortalSessionTimeout": wingTrapCaptivePortalSessionTimeout,
       "wingTrapCaptivePortalClientDisconnect": wingTrapCaptivePortalClientDisconnect,
       "wingTrapCaptivePortalPurgeClient": wingTrapCaptivePortalPurgeClient,
       "wingTrapCaptivePortalFlexLogAccess": wingTrapCaptivePortalFlexLogAccess,
       "wingTrapCaptivePortalInactivityTimeout": wingTrapCaptivePortalInactivityTimeout,
       "wingTrapCaptivePortalAllowAccess": wingTrapCaptivePortalAllowAccess,
       "wingTrapCaptivePortalClientRemoved": wingTrapCaptivePortalClientRemoved,
       "wingTrapCaptivePortalPageCreFailed": wingTrapCaptivePortalPageCreFailed,
       "wingTrapCaptivePortalDataLimitExceed": wingTrapCaptivePortalDataLimitExceed,
       "wingTrapsCertmgr": wingTrapsCertmgr,
       "wingTrapsCertmgrPrefix": wingTrapsCertmgrPrefix,
       "wingTrapCertmgrRsaKeyActionsSuccess": wingTrapCertmgrRsaKeyActionsSuccess,
       "wingTrapCertmgrRsaKeyActionsFailure": wingTrapCertmgrRsaKeyActionsFailure,
       "wingTrapCertmgrCaCertActionsSuccess": wingTrapCertmgrCaCertActionsSuccess,
       "wingTrapCertmgrCaCertActionsFailure": wingTrapCertmgrCaCertActionsFailure,
       "wingTrapCertmgrSrvCertActionsSuccess": wingTrapCertmgrSrvCertActionsSuccess,
       "wingTrapCertmgrSvrCertActionsFailure": wingTrapCertmgrSvrCertActionsFailure,
       "wingTrapCertmgrCsrExportSuccess": wingTrapCertmgrCsrExportSuccess,
       "wingTrapCertmgrCsrExportFailure": wingTrapCertmgrCsrExportFailure,
       "wingTrapCertmgrCrlActionsSuccess": wingTrapCertmgrCrlActionsSuccess,
       "wingTrapCertmgrCrlActionsFailure": wingTrapCertmgrCrlActionsFailure,
       "wingTrapCertmgrDeleteTrustpointAction": wingTrapCertmgrDeleteTrustpointAction,
       "wingTrapCertmgrImportTrustpoint": wingTrapCertmgrImportTrustpoint,
       "wingTrapCertmgrExportTrustpoint": wingTrapCertmgrExportTrustpoint,
       "wingTrapCertmgrCertExpiry": wingTrapCertmgrCertExpiry,
       "wingTrapCertmgrCaKeyActionsSuccess": wingTrapCertmgrCaKeyActionsSuccess,
       "wingTrapCertmgrCaKeyActionsFailure": wingTrapCertmgrCaKeyActionsFailure,
       "wingTrapsCfgd": wingTrapsCfgd,
       "wingTrapsCfgdPrefix": wingTrapsCfgdPrefix,
       "wingTrapCfgdAclRuleAltered": wingTrapCfgdAclRuleAltered,
       "wingTrapCfgdAclAttachedAltered": wingTrapCfgdAclAttachedAltered,
       "wingTrapsCluster": wingTrapsCluster,
       "wingTrapsClusterPrefix": wingTrapsClusterPrefix,
       "wingTrapClusterCmasterCfgUpdateFail": wingTrapClusterCmasterCfgUpdateFail,
       "wingTrapClusterMaxExceeded": wingTrapClusterMaxExceeded,
       "wingTrapsDhcpsvr": wingTrapsDhcpsvr,
       "wingTrapsDhcpsvrPrefix": wingTrapsDhcpsvrPrefix,
       "wingTrapDhcpsvrRelayNoIface": wingTrapDhcpsvrRelayNoIface,
       "wingTrapDhcpsvrRelayIfaceNoIp": wingTrapDhcpsvrRelayIfaceNoIp,
       "wingTrapDhcpsvrRelayStart": wingTrapDhcpsvrRelayStart,
       "wingTrapDhcpsvrRelayStop": wingTrapDhcpsvrRelayStop,
       "wingTrapDhcpsvrDhcpsvrStart": wingTrapDhcpsvrDhcpsvrStart,
       "wingTrapDhcpsvrDhcpsvrStop": wingTrapDhcpsvrDhcpsvrStop,
       "wingTrapsDiag": wingTrapsDiag,
       "wingTrapsDiagPrefix": wingTrapsDiagPrefix,
       "wingTrapDiagFanUnderspeed": wingTrapDiagFanUnderspeed,
       "wingTrapDiagUnderVoltage": wingTrapDiagUnderVoltage,
       "wingTrapDiagOverVoltage": wingTrapDiagOverVoltage,
       "wingTrapDiagLowTemp": wingTrapDiagLowTemp,
       "wingTrapDiagHighTemp": wingTrapDiagHighTemp,
       "wingTrapDiagOverTemp": wingTrapDiagOverTemp,
       "wingTrapDiagWdStateChange": wingTrapDiagWdStateChange,
       "wingTrapDiagElapsedTime": wingTrapDiagElapsedTime,
       "wingTrapDiagAutogenTechSprt": wingTrapDiagAutogenTechSprt,
       "wingTrapDiagPoeInitFail": wingTrapDiagPoeInitFail,
       "wingTrapDiagPoePowerLevel": wingTrapDiagPoePowerLevel,
       "wingTrapDiagPoeReadFail": wingTrapDiagPoeReadFail,
       "wingTrapDiagPoeStateChange": wingTrapDiagPoeStateChange,
       "wingTrapDiagWdResetSys": wingTrapDiagWdResetSys,
       "wingTrapDiagCpuLoad": wingTrapDiagCpuLoad,
       "wingTrapDiagRamUsage": wingTrapDiagRamUsage,
       "wingTrapDiagBufUsage": wingTrapDiagBufUsage,
       "wingTrapDiagHeadCacheUsage": wingTrapDiagHeadCacheUsage,
       "wingTrapDiagIpDestUsage": wingTrapDiagIpDestUsage,
       "wingTrapDiagFreeRam": wingTrapDiagFreeRam,
       "wingTrapDiagFreeFlashDisk": wingTrapDiagFreeFlashDisk,
       "wingTrapDiagFreeFlashInodes": wingTrapDiagFreeFlashInodes,
       "wingTrapDiagFreeNvramDisk": wingTrapDiagFreeNvramDisk,
       "wingTrapDiagFreeNvramInodes": wingTrapDiagFreeNvramInodes,
       "wingTrapDiagFreeRamDisk": wingTrapDiagFreeRamDisk,
       "wingTrapDiagFreeRamInodes": wingTrapDiagFreeRamInodes,
       "wingTrapDiagFdCount": wingTrapDiagFdCount,
       "wingTrapDiagDiskUsage": wingTrapDiagDiskUsage,
       "wingTrapDiagNewLedState": wingTrapDiagNewLedState,
       "wingTrapDiagLedIdentify": wingTrapDiagLedIdentify,
       "wingTrapsDot11": wingTrapsDot11,
       "wingTrapsDot11Prefix": wingTrapsDot11Prefix,
       "wingTrapDot11CountryCode": wingTrapDot11CountryCode,
       "wingTrapDot11CountryCodeError": wingTrapDot11CountryCodeError,
       "wingTrapDot11ClientAssociated": wingTrapDot11ClientAssociated,
       "wingTrapDot11ClientDisassociated": wingTrapDot11ClientDisassociated,
       "wingTrapDot11ClientDeniedAssoc": wingTrapDot11ClientDeniedAssoc,
       "wingTrapDot11WpaWpa2Success": wingTrapDot11WpaWpa2Success,
       "wingTrapDot11WpaWpa2Failed": wingTrapDot11WpaWpa2Failed,
       "wingTrapDot11WpaWpa2KeyRotn": wingTrapDot11WpaWpa2KeyRotn,
       "wingTrapDot11TkipMicFailReport": wingTrapDot11TkipMicFailReport,
       "wingTrapDot11TkipMicFailure": wingTrapDot11TkipMicFailure,
       "wingTrapDot11TkipCntrmeasStart": wingTrapDot11TkipCntrmeasStart,
       "wingTrapDot11TkipCntrmeasEnd": wingTrapDot11TkipCntrmeasEnd,
       "wingTrapDot11EapSuccess": wingTrapDot11EapSuccess,
       "wingTrapDot11EapFailed": wingTrapDot11EapFailed,
       "wingTrapDot11EapClientTimeout": wingTrapDot11EapClientTimeout,
       "wingTrapDot11EapServerTimeout": wingTrapDot11EapServerTimeout,
       "wingTrapDot11EapCachedKeys": wingTrapDot11EapCachedKeys,
       "wingTrapDot11EapOppCachedKeys": wingTrapDot11EapOppCachedKeys,
       "wingTrapDot11EapPreauthSuccess": wingTrapDot11EapPreauthSuccess,
       "wingTrapDot11EapPreauthFailed": wingTrapDot11EapPreauthFailed,
       "wingTrapDot11EapPreauthClientTimeout": wingTrapDot11EapPreauthClientTimeout,
       "wingTrapDot11EapPreauthServerTimeout": wingTrapDot11EapPreauthServerTimeout,
       "wingTrapDot11KerberosWlanSuccess": wingTrapDot11KerberosWlanSuccess,
       "wingTrapDot11KerberosWlanTimeout": wingTrapDot11KerberosWlanTimeout,
       "wingTrapDot11KerberosWlanFailed": wingTrapDot11KerberosWlanFailed,
       "wingTrapDot11KerberosClientSuccess": wingTrapDot11KerberosClientSuccess,
       "wingTrapDot11KerberosClientFailed": wingTrapDot11KerberosClientFailed,
       "wingTrapDot11VoiceCallFailed": wingTrapDot11VoiceCallFailed,
       "wingTrapDot11VoiceCallEstablished": wingTrapDot11VoiceCallEstablished,
       "wingTrapDot11VoiceCallCompleted": wingTrapDot11VoiceCallCompleted,
       "wingTrapDot11UnsanctionedApActive": wingTrapDot11UnsanctionedApActive,
       "wingTrapDot11UnsanctionedApInactive": wingTrapDot11UnsanctionedApInactive,
       "wingTrapDot11UnsanctionedApStatusChange": wingTrapDot11UnsanctionedApStatusChange,
       "wingTrapDot11NeighborDeniedAssoc": wingTrapDot11NeighborDeniedAssoc,
       "wingTrapDot11WlanTimeAccessDisable": wingTrapDot11WlanTimeAccessDisable,
       "wingTrapDot11WlanTimeAccessEnable": wingTrapDot11WlanTimeAccessEnable,
       "wingTrapDot11MoveOperationSuccess": wingTrapDot11MoveOperationSuccess,
       "wingTrapDot11FtRoamSuccess": wingTrapDot11FtRoamSuccess,
       "wingTrapsFwu": wingTrapsFwu,
       "wingTrapsFwuPrefix": wingTrapsFwuPrefix,
       "wingTrapFwuFwudone": wingTrapFwuFwudone,
       "wingTrapFwuFwuaborted": wingTrapFwuFwuaborted,
       "wingTrapFwuFwunoneed": wingTrapFwuFwunoneed,
       "wingTrapFwuFwusyserr": wingTrapFwuFwusyserr,
       "wingTrapFwuFwubadconfig": wingTrapFwuFwubadconfig,
       "wingTrapFwuFwuserverundef": wingTrapFwuFwuserverundef,
       "wingTrapFwuFwufileundef": wingTrapFwuFwufileundef,
       "wingTrapFwuFwuserverunreachable": wingTrapFwuFwuserverunreachable,
       "wingTrapFwuFwucouldntgetfile": wingTrapFwuFwucouldntgetfile,
       "wingTrapFwuFwuvermismatch": wingTrapFwuFwuvermismatch,
       "wingTrapFwuFwuprodmismatch": wingTrapFwuFwuprodmismatch,
       "wingTrapFwuFwucorruptedfile": wingTrapFwuFwucorruptedfile,
       "wingTrapFwuFwusignmismatch": wingTrapFwuFwusignmismatch,
       "wingTrapFwuFwuunsupportedhw": wingTrapFwuFwuunsupportedhw,
       "wingTrapsLicmgr": wingTrapsLicmgr,
       "wingTrapsLicmgrPrefix": wingTrapsLicmgrPrefix,
       "wingTrapLicmgrLicInstalled": wingTrapLicmgrLicInstalled,
       "wingTrapLicmgrLicInstallDefault": wingTrapLicmgrLicInstallDefault,
       "wingTrapLicmgrLicInstallCount": wingTrapLicmgrLicInstallCount,
       "wingTrapLicmgrLicRemoved": wingTrapLicmgrLicRemoved,
       "wingTrapLicmgrLicInvalid": wingTrapLicmgrLicInvalid,
       "wingTrapsMesh": wingTrapsMesh,
       "wingTrapsMeshPrefix": wingTrapsMeshPrefix,
       "wingTrapMeshMeshLinkUp": wingTrapMeshMeshLinkUp,
       "wingTrapMeshMeshLinkDown": wingTrapMeshMeshLinkDown,
       "wingTrapMeshMeshpointUp": wingTrapMeshMeshpointUp,
       "wingTrapMeshMeshpointDown": wingTrapMeshMeshpointDown,
       "wingTrapMeshMeshpointLoopPreventOn": wingTrapMeshMeshpointLoopPreventOn,
       "wingTrapMeshMeshpointLoopPreventOff": wingTrapMeshMeshpointLoopPreventOff,
       "wingTrapMeshMeshpointRootChange": wingTrapMeshMeshpointRootChange,
       "wingTrapMeshMeshpointPathChange": wingTrapMeshMeshpointPathChange,
       "wingTrapsNsm": wingTrapsNsm,
       "wingTrapsNsmPrefix": wingTrapsNsmPrefix,
       "wingTrapNsmIfup": wingTrapNsmIfup,
       "wingTrapNsmIfdown": wingTrapNsmIfdown,
       "wingTrapNsmDhcpip": wingTrapNsmDhcpip,
       "wingTrapNsmDhcpdefrt": wingTrapNsmDhcpdefrt,
       "wingTrapNsmDhcpipchg": wingTrapNsmDhcpipchg,
       "wingTrapNsmDhcpnodefrt": wingTrapNsmDhcpnodefrt,
       "wingTrapNsmIfipcfg": wingTrapNsmIfipcfg,
       "wingTrapNsmDhcpcErr": wingTrapNsmDhcpcErr,
       "wingTrapNsmDhcpipnoadd": wingTrapNsmDhcpipnoadd,
       "wingTrapNsmDhcplsexp": wingTrapNsmDhcplsexp,
       "wingTrapNsmDhcpnak": wingTrapNsmDhcpnak,
       "wingTrapNsmNsmNtp": wingTrapNsmNsmNtp,
       "wingTrapNsmIfFailover": wingTrapNsmIfFailover,
       "wingTrapNsmIfFailback": wingTrapNsmIfFailback,
       "wingTrapsPm": wingTrapsPm,
       "wingTrapsPmPrefix": wingTrapsPmPrefix,
       "wingTrapPmProcstart": wingTrapPmProcstart,
       "wingTrapPmProcrstrt": wingTrapPmProcrstrt,
       "wingTrapPmProcmaxrstrt": wingTrapPmProcmaxrstrt,
       "wingTrapPmProcsysrstrt": wingTrapPmProcsysrstrt,
       "wingTrapPmProcstop": wingTrapPmProcstop,
       "wingTrapPmProcid": wingTrapPmProcid,
       "wingTrapPmStartupcomplete": wingTrapPmStartupcomplete,
       "wingTrapPmProcnoresp": wingTrapPmProcnoresp,
       "wingTrapsRadconf": wingTrapsRadconf,
       "wingTrapsRadconfPrefix": wingTrapsRadconfPrefix,
       "wingTrapRadconfRadiusdstart": wingTrapRadconfRadiusdstart,
       "wingTrapRadconfRadiusdstop": wingTrapRadconfRadiusdstop,
       "wingTrapRadconfCouldNotStopRadiusd": wingTrapRadconfCouldNotStopRadiusd,
       "wingTrapsRadio": wingTrapsRadio,
       "wingTrapsRadioPrefix": wingTrapsRadioPrefix,
       "wingTrapRadioChannelCountryMismatch": wingTrapRadioChannelCountryMismatch,
       "wingTrapRadioRadioStateChange": wingTrapRadioRadioStateChange,
       "wingTrapRadioRadarScanStarted": wingTrapRadioRadarScanStarted,
       "wingTrapRadioRadarScanCompleted": wingTrapRadioRadarScanCompleted,
       "wingTrapRadioRadarDetected": wingTrapRadioRadarDetected,
       "wingTrapRadioRadarDetInfo": wingTrapRadioRadarDetInfo,
       "wingTrapRadioResumeHomeChannel": wingTrapRadioResumeHomeChannel,
       "wingTrapRadioAcsScanStarted": wingTrapRadioAcsScanStarted,
       "wingTrapRadioAcsScanComplete": wingTrapRadioAcsScanComplete,
       "wingTrapRadioRadioAntennaError": wingTrapRadioRadioAntennaError,
       "wingTrapRadioRadioAntennaSetting": wingTrapRadioRadioAntennaSetting,
       "wingTrapsSecuritymgr": wingTrapsSecuritymgr,
       "wingTrapsSecuritymgrPrefix": wingTrapsSecuritymgrPrefix,
       "wingTrapSecuritymgrDeprecatedcli": wingTrapSecuritymgrDeprecatedcli,
       "wingTrapSecuritymgrUserpassstrength": wingTrapSecuritymgrUserpassstrength,
       "wingTrapSecuritymgrFatalHit": wingTrapSecuritymgrFatalHit,
       "wingTrapSecuritymgrLogCliError": wingTrapSecuritymgrLogCliError,
       "wingTrapsSmrt": wingTrapsSmrt,
       "wingTrapsSmrtPrefix": wingTrapsSmrtPrefix,
       "wingTrapSmrtCalibrationStarted": wingTrapSmrtCalibrationStarted,
       "wingTrapSmrtCalibrationDone": wingTrapSmrtCalibrationDone,
       "wingTrapSmrtNeighborRecovery": wingTrapSmrtNeighborRecovery,
       "wingTrapSmrtPowerAdjustment": wingTrapSmrtPowerAdjustment,
       "wingTrapSmrtInterferenceRecovery": wingTrapSmrtInterferenceRecovery,
       "wingTrapSmrtRootRecovery": wingTrapSmrtRootRecovery,
       "wingTrapSmrtCovHoleRecovery": wingTrapSmrtCovHoleRecovery,
       "wingTrapSmrtCovHoleRecoveryDone": wingTrapSmrtCovHoleRecoveryDone,
       "wingTrapSmrtConfigCleared": wingTrapSmrtConfigCleared,
       "wingTrapSmrtChannelChange": wingTrapSmrtChannelChange,
       "wingTrapsSmtpnot": wingTrapsSmtpnot,
       "wingTrapsSmtpnotPrefix": wingTrapsSmtpnotPrefix,
       "wingTrapSmtpnotSmtpauth": wingTrapSmtpnotSmtpauth,
       "wingTrapSmtpnotNet": wingTrapSmtpnotNet,
       "wingTrapSmtpnotSmtpinfo": wingTrapSmtpnotSmtpinfo,
       "wingTrapSmtpnotCfg": wingTrapSmtpnotCfg,
       "wingTrapSmtpnotCfginc": wingTrapSmtpnotCfginc,
       "wingTrapSmtpnotSmtperr": wingTrapSmtpnotSmtperr,
       "wingTrapSmtpnotProto": wingTrapSmtpnotProto,
       "wingTrapsSystem": wingTrapsSystem,
       "wingTrapsSystemPrefix": wingTrapsSystemPrefix,
       "wingTrapSystemPanic": wingTrapSystemPanic,
       "wingTrapSystemHttpErr": wingTrapSystemHttpErr,
       "wingTrapSystemProcStop": wingTrapSystemProcStop,
       "wingTrapSystemClockReset": wingTrapSystemClockReset,
       "wingTrapSystemUiUserAuthFail": wingTrapSystemUiUserAuthFail,
       "wingTrapSystemUiUserAuthSuccess": wingTrapSystemUiUserAuthSuccess,
       "wingTrapSystemLogin": wingTrapSystemLogin,
       "wingTrapSystemLoginFail": wingTrapSystemLoginFail,
       "wingTrapSystemLoginFailAccess": wingTrapSystemLoginFailAccess,
       "wingTrapSystemLoginFailBadRole": wingTrapSystemLoginFailBadRole,
       "wingTrapSystemLogout": wingTrapSystemLogout,
       "wingTrapSystemServerUnreachable": wingTrapSystemServerUnreachable,
       "wingTrapSystemSystemAutoupEnable": wingTrapSystemSystemAutoupEnable,
       "wingTrapSystemSystemAutoupDisable": wingTrapSystemSystemAutoupDisable,
       "wingTrapSystemGuestUserExp": wingTrapSystemGuestUserExp,
       "wingTrapsWips": wingTrapsWips,
       "wingTrapsWipsPrefix": wingTrapsWipsPrefix,
       "wingTrapWipsWipsEvent": wingTrapWipsWipsEvent,
       "wingTrapWipsWipsClientBlacklisted": wingTrapWipsWipsClientBlacklisted,
       "wingTrapWipsWipsClientRemBlacklist": wingTrapWipsWipsClientRemBlacklist,
       "wingTrapsDot1x": wingTrapsDot1x,
       "wingTrapsDot1xPrefix": wingTrapsDot1xPrefix,
       "wingTrapDot1xDot1xSuccess": wingTrapDot1xDot1xSuccess,
       "wingTrapDot1xDot1xFailed": wingTrapDot1xDot1xFailed,
       "wingObjects": wingObjects,
       "wingSysoids": wingSysoids,
       "wingSysoidAp4511": wingSysoidAp4511,
       "wingSysoidAp4521": wingSysoidAp4521,
       "wingSysoidAp4532": wingSysoidAp4532,
       "wingSysoidAp4760": wingSysoidAp4760,
       "wingSysoidAp4600": wingSysoidAp4600,
       "wingSysoidAp4021": wingSysoidAp4021,
       "wingSysoidAp4022": wingSysoidAp4022,
       "wingSysoidAp4522": wingSysoidAp4522,
       "wingSysoidAp4832": wingSysoidAp4832,
       "wingSysoidAp6562": wingSysoidAp6562,
       "wingNotificationsObjects": wingNotificationsObjects,
       "wingEvent": wingEvent,
       "wingEventMnemonic": wingEventMnemonic,
       "wingEventModule": wingEventModule,
       "wingEventSeverity": wingEventSeverity,
       "wingEventMsg": wingEventMsg,
       "wingEventSourceAddr": wingEventSourceAddr,
       "wingEventSourceHostname": wingEventSourceHostname,
       "wingConfig": wingConfig,
       "wingCfgSys": wingCfgSys,
       "wingConfigSysMacAddr": wingConfigSysMacAddr,
       "wingCfgSysCommit": wingCfgSysCommit,
       "wingCfgSysCommitLastError": wingCfgSysCommitLastError,
       "wingCfgSysRunningConfigChecksum": wingCfgSysRunningConfigChecksum,
       "wingCfgVersion": wingCfgVersion,
       "wingCfgVersionVal": wingCfgVersionVal,
       "wingCfgPasswordEnc": wingCfgPasswordEnc,
       "wingCfgPasswordEncVal": wingCfgPasswordEncVal,
       "wingCfgPasswordEncSet": wingCfgPasswordEncSet,
       "wingCfgPasswordEncSetOldPassphrase": wingCfgPasswordEncSetOldPassphrase,
       "wingCfgPasswordEncSetNewPassphrase": wingCfgPasswordEncSetNewPassphrase,
       "wingCfgWlan": wingCfgWlan,
       "wingCfgWlanTable": wingCfgWlanTable,
       "wingCfgWlanEntry": wingCfgWlanEntry,
       "wingCfgWlanName": wingCfgWlanName,
       "wingCfgWlanShutdown": wingCfgWlanShutdown,
       "wingCfgWlanSsid": wingCfgWlanSsid,
       "wingCfgWlanDescr": wingCfgWlanDescr,
       "wingCfgWlanEncType": wingCfgWlanEncType,
       "wingCfgWlanAuthType": wingCfgWlanAuthType,
       "wingCfgWlanCaptivePortalEnforcement": wingCfgWlanCaptivePortalEnforcement,
       "wingCfgWlanClientPower": wingCfgWlanClientPower,
       "wingCfgWlanNasId": wingCfgWlanNasId,
       "wingCfgWlanNasPortId": wingCfgWlanNasPortId,
       "wingCfgWlanBroadcastSsid": wingCfgWlanBroadcastSsid,
       "wingCfgWlanAnswerBroadcastProbes": wingCfgWlanAnswerBroadcastProbes,
       "wingCfgWlanClientClientCommunication": wingCfgWlanClientClientCommunication,
       "wingCfgWlanHoldTime": wingCfgWlanHoldTime,
       "wingCfgWlanInactivityTimeout": wingCfgWlanInactivityTimeout,
       "wingCfgWlanCredCacheAgeout": wingCfgWlanCredCacheAgeout,
       "wingCfgWlanVlanCacheAgeout": wingCfgWlanVlanCacheAgeout,
       "wingCfgWlanMaxFirewallSessions": wingCfgWlanMaxFirewallSessions,
       "wingCfgWlanReauth": wingCfgWlanReauth,
       "wingCfgWlanPmfMode": wingCfgWlanPmfMode,
       "wingCfgWlanPmfSaQueryTimeout": wingCfgWlanPmfSaQueryTimeout,
       "wingCfgWlanPmfSaQueryAttempts": wingCfgWlanPmfSaQueryAttempts,
       "wingCfgWlanWpaWpa2Psk": wingCfgWlanWpaWpa2Psk,
       "wingCfgWlanWpaWpa2ExcludeWpa2Tkip": wingCfgWlanWpaWpa2ExcludeWpa2Tkip,
       "wingCfgWlanWpaWpa2KeyRotationUnicast": wingCfgWlanWpaWpa2KeyRotationUnicast,
       "wingCfgWlanWpaWpa2KeyRotationBroadcast": wingCfgWlanWpaWpa2KeyRotationBroadcast,
       "wingCfgWlanWpaWpa2PmkCaching": wingCfgWlanWpaWpa2PmkCaching,
       "wingCfgWlanWpaWpa2OpmkCaching": wingCfgWlanWpaWpa2OpmkCaching,
       "wingCfgWlanWpaWpa2Preauth": wingCfgWlanWpaWpa2Preauth,
       "wingCfgWlanWpaWpa2TkipCntrmeasHoldTime": wingCfgWlanWpaWpa2TkipCntrmeasHoldTime,
       "wingCfgWlanWep64TransmitKey": wingCfgWlanWep64TransmitKey,
       "wingCfgWlanWep128TransmitKey": wingCfgWlanWep128TransmitKey,
       "wingCfgWlanRadiusAssignedVlans": wingCfgWlanRadiusAssignedVlans,
       "wingCfgWlanRadiusDynamicAuthorization": wingCfgWlanRadiusDynamicAuthorization,
       "wingCfgWlanAccountingRadius": wingCfgWlanAccountingRadius,
       "wingCfgWlanMotoExtnMoveCmd": wingCfgWlanMotoExtnMoveCmd,
       "wingCfgWlanMotoExtnSmartScan": wingCfgWlanMotoExtnSmartScan,
       "wingCfgWlanMotoExtnWmmLoadBalance": wingCfgWlanMotoExtnWmmLoadBalance,
       "wingCfgWlanMotoExtnSymbolLoadInfo": wingCfgWlanMotoExtnSymbolLoadInfo,
       "wingCfgWlanClientLoadBal": wingCfgWlanClientLoadBal,
       "wingCfgWlanClientLoadBalSingleBandClients5ghz": wingCfgWlanClientLoadBalSingleBandClients5ghz,
       "wingCfgWlanClientLoadBalSingleBandClients24ghz": wingCfgWlanClientLoadBalSingleBandClients24ghz,
       "wingCfgWlanClientLoadBalMaxProbeReq24ghz": wingCfgWlanClientLoadBalMaxProbeReq24ghz,
       "wingCfgWlanClientLoadBalMaxProbeReq5ghz": wingCfgWlanClientLoadBalMaxProbeReq5ghz,
       "wingCfgWlanClientLoadBalProbeReqIntvl5ghz": wingCfgWlanClientLoadBalProbeReqIntvl5ghz,
       "wingCfgWlanClientLoadBalProbeReqIntvl24ghz": wingCfgWlanClientLoadBalProbeReqIntvl24ghz,
       "wingCfgWlanClientLoadBalBandDiscoveryIntvl": wingCfgWlanClientLoadBalBandDiscoveryIntvl,
       "wingCfgWlanClientLoadBalCapabilityAgeoutTime": wingCfgWlanClientLoadBalCapabilityAgeoutTime,
       "wingCfgWlanQosPolicy": wingCfgWlanQosPolicy,
       "wingCfgWlanAaaPolicy": wingCfgWlanAaaPolicy,
       "wingCfgWlanCaptivePortal": wingCfgWlanCaptivePortal,
       "wingCfgWlanAssocAcl": wingCfgWlanAssocAcl,
       "wingCfgWlanIpInAcl": wingCfgWlanIpInAcl,
       "wingCfgWlanMacInAcl": wingCfgWlanMacInAcl,
       "wingCfgWlanIpOutAcl": wingCfgWlanIpOutAcl,
       "wingCfgWlanMacOutAcl": wingCfgWlanMacOutAcl,
       "wingCfgWlanArpTrust": wingCfgWlanArpTrust,
       "wingCfgWlanDhcpTrust": wingCfgWlanDhcpTrust,
       "wingCfgWlanArpHeaderMismatchValidation": wingCfgWlanArpHeaderMismatchValidation,
       "wingCfgWlanServiceAllowHtOnly": wingCfgWlanServiceAllowHtOnly,
       "wingCfgWlanEnforceDhcp": wingCfgWlanEnforceDhcp,
       "wingCfgWlanProxyArpMode": wingCfgWlanProxyArpMode,
       "wingCfgWlanBroadcastDhcpValidateOffer": wingCfgWlanBroadcastDhcpValidateOffer,
       "wingCfgWlanVlanTable": wingCfgWlanVlanTable,
       "wingCfgWlanVlanEntry": wingCfgWlanVlanEntry,
       "wingCfgWlanVlanId": wingCfgWlanVlanId,
       "wingCfgWlanVlanLimit": wingCfgWlanVlanLimit,
       "wingCfgWlanKerberosTable": wingCfgWlanKerberosTable,
       "wingCfgWlanKerberosEntry": wingCfgWlanKerberosEntry,
       "wingCfgWlanKerberosRealm": wingCfgWlanKerberosRealm,
       "wingCfgWlanKerberosTimeout": wingCfgWlanKerberosTimeout,
       "wingCfgWlanKerberosPassword": wingCfgWlanKerberosPassword,
       "wingCfgWlanKerberosPrimaryServer": wingCfgWlanKerberosPrimaryServer,
       "wingCfgWlanKerberosPrimaryServerPort": wingCfgWlanKerberosPrimaryServerPort,
       "wingCfgWlanKerberosSecondaryServer": wingCfgWlanKerberosSecondaryServer,
       "wingCfgWlanKerberosSecondaryServerPort": wingCfgWlanKerberosSecondaryServerPort,
       "wingCfgWlanAcctSyslogTable": wingCfgWlanAcctSyslogTable,
       "wingCfgWlanAcctSyslogEntry": wingCfgWlanAcctSyslogEntry,
       "wingCfgWlanAcctSyslogEnable": wingCfgWlanAcctSyslogEnable,
       "wingCfgWlanAcctSyslogHost": wingCfgWlanAcctSyslogHost,
       "wingCfgWlanAcctSyslogPort": wingCfgWlanAcctSyslogPort,
       "wingCfgWlanClientDenyLimitTable": wingCfgWlanClientDenyLimitTable,
       "wingCfgWlanClientDenyLimitEntry": wingCfgWlanClientDenyLimitEntry,
       "wingCfgWlanClientDenyLimitThresholdRate": wingCfgWlanClientDenyLimitThresholdRate,
       "wingCfgWlanClientDenyLimitAction": wingCfgWlanClientDenyLimitAction,
       "wingCfgWlanClientDenyLimitBlacklistAgeout": wingCfgWlanClientDenyLimitBlacklistAgeout,
       "wingCfgWlanQos": wingCfgWlanQos,
       "wingCfgWlanQosTable": wingCfgWlanQosTable,
       "wingCfgWlanQosEntry": wingCfgWlanQosEntry,
       "wingCfgWlanQosName": wingCfgWlanQosName,
       "wingCfgWlanQosClassification": wingCfgWlanQosClassification,
       "wingCfgWlanQosNonWmmClassification": wingCfgWlanQosNonWmmClassification,
       "wingCfgWlanQosMulticastMaskPrimary": wingCfgWlanQosMulticastMaskPrimary,
       "wingCfgWlanQosMulticastMaskSecondary": wingCfgWlanQosMulticastMaskSecondary,
       "wingCfgWlanQosMulticastMaskAc": wingCfgWlanQosMulticastMaskAc,
       "wingCfgWlanQosVoicePrioritization": wingCfgWlanQosVoicePrioritization,
       "wingCfgWlanQosSvpPrioritization": wingCfgWlanQosSvpPrioritization,
       "wingCfgWlanQosWmmPowerSave": wingCfgWlanQosWmmPowerSave,
       "wingCfgWlanQosWmmQbssLoadElement": wingCfgWlanQosWmmQbssLoadElement,
       "wingCfgWlanQosWmmBestEffortTxopLimit": wingCfgWlanQosWmmBestEffortTxopLimit,
       "wingCfgWlanQosWmmBestEffortAifsn": wingCfgWlanQosWmmBestEffortAifsn,
       "wingCfgWlanQosWmmBestEffortCwMin": wingCfgWlanQosWmmBestEffortCwMin,
       "wingCfgWlanQosWmmBestEffortCwMax": wingCfgWlanQosWmmBestEffortCwMax,
       "wingCfgWlanQosWmmBackgroundTxopLimit": wingCfgWlanQosWmmBackgroundTxopLimit,
       "wingCfgWlanQosWmmBackgroundAifsn": wingCfgWlanQosWmmBackgroundAifsn,
       "wingCfgWlanQosWmmBackgroundCwMin": wingCfgWlanQosWmmBackgroundCwMin,
       "wingCfgWlanQosWmmBackgroundCwMax": wingCfgWlanQosWmmBackgroundCwMax,
       "wingCfgWlanQosWmmVideoTxopLimit": wingCfgWlanQosWmmVideoTxopLimit,
       "wingCfgWlanQosWmmVideoAifsn": wingCfgWlanQosWmmVideoAifsn,
       "wingCfgWlanQosWmmVideoCwMin": wingCfgWlanQosWmmVideoCwMin,
       "wingCfgWlanQosWmmVideoCwMax": wingCfgWlanQosWmmVideoCwMax,
       "wingCfgWlanQosWmmVoiceTxopLimit": wingCfgWlanQosWmmVoiceTxopLimit,
       "wingCfgWlanQosWmmVoiceAifsn": wingCfgWlanQosWmmVoiceAifsn,
       "wingCfgWlanQosWmmVoiceCwMin": wingCfgWlanQosWmmVoiceCwMin,
       "wingCfgWlanQosWmmVoiceCwMax": wingCfgWlanQosWmmVoiceCwMax,
       "wingCfgWlanQosWlanRlDownEnable": wingCfgWlanQosWlanRlDownEnable,
       "wingCfgWlanQosWlanRlDownRate": wingCfgWlanQosWlanRlDownRate,
       "wingCfgWlanQosWlanRlDownBurstSize": wingCfgWlanQosWlanRlDownBurstSize,
       "wingCfgWlanQosWlanRlDownThreshBackground": wingCfgWlanQosWlanRlDownThreshBackground,
       "wingCfgWlanQosWlanRlDownThreshBestEffort": wingCfgWlanQosWlanRlDownThreshBestEffort,
       "wingCfgWlanQosWlanRlDownThreshVoice": wingCfgWlanQosWlanRlDownThreshVoice,
       "wingCfgWlanQosWlanRlDownThreshVideo": wingCfgWlanQosWlanRlDownThreshVideo,
       "wingCfgWlanQosWlanRlUpEnable": wingCfgWlanQosWlanRlUpEnable,
       "wingCfgWlanQosWlanRlUpRate": wingCfgWlanQosWlanRlUpRate,
       "wingCfgWlanQosWlanRlUpBurstSize": wingCfgWlanQosWlanRlUpBurstSize,
       "wingCfgWlanQosWlanRlUpThreshBackground": wingCfgWlanQosWlanRlUpThreshBackground,
       "wingCfgWlanQosWlanRlUpThreshBestEffort": wingCfgWlanQosWlanRlUpThreshBestEffort,
       "wingCfgWlanQosWlanRlUpThreshVoice": wingCfgWlanQosWlanRlUpThreshVoice,
       "wingCfgWlanQosWlanRlUpThreshVideo": wingCfgWlanQosWlanRlUpThreshVideo,
       "wingCfgWlanQosMuRlDownEnable": wingCfgWlanQosMuRlDownEnable,
       "wingCfgWlanQosMuRlDownRate": wingCfgWlanQosMuRlDownRate,
       "wingCfgWlanQosMuRlDownBurstSize": wingCfgWlanQosMuRlDownBurstSize,
       "wingCfgWlanQosMuRlDownThreshBackground": wingCfgWlanQosMuRlDownThreshBackground,
       "wingCfgWlanQosMuRlDownThreshBestEffort": wingCfgWlanQosMuRlDownThreshBestEffort,
       "wingCfgWlanQosMuRlDownThreshVoice": wingCfgWlanQosMuRlDownThreshVoice,
       "wingCfgWlanQosMuRlDownThreshVideo": wingCfgWlanQosMuRlDownThreshVideo,
       "wingCfgWlanQosMuRlUpEnable": wingCfgWlanQosMuRlUpEnable,
       "wingCfgWlanQosMuRlUpRate": wingCfgWlanQosMuRlUpRate,
       "wingCfgWlanQosMuRlUpBurstSize": wingCfgWlanQosMuRlUpBurstSize,
       "wingCfgWlanQosMuRlUpThreshBackground": wingCfgWlanQosMuRlUpThreshBackground,
       "wingCfgWlanQosMuRlUpThreshBestEffort": wingCfgWlanQosMuRlUpThreshBestEffort,
       "wingCfgWlanQosMuRlUpThreshVoice": wingCfgWlanQosMuRlUpThreshVoice,
       "wingCfgWlanQosMuRlUpThreshVideo": wingCfgWlanQosMuRlUpThreshVideo,
       "wingCfgWlanQosQosTrustDscp": wingCfgWlanQosQosTrustDscp,
       "wingCfgWlanQosQosTrustWmm": wingCfgWlanQosQosTrustWmm,
       "wingCfgWlanQosMcastStreamTable": wingCfgWlanQosMcastStreamTable,
       "wingCfgWlanQosMcastStreamEntry": wingCfgWlanQosMcastStreamEntry,
       "wingCfgWlanQosMcastStreamAddr": wingCfgWlanQosMcastStreamAddr,
       "wingCfgWlanQosMcastStreamPriority": wingCfgWlanQosMcastStreamPriority,
       "wingCfgRadioQos": wingCfgRadioQos,
       "wingCfgRadioQosTable": wingCfgRadioQosTable,
       "wingCfgRadioQosEntry": wingCfgRadioQosEntry,
       "wingCfgRadioQosName": wingCfgRadioQosName,
       "wingCfgRadioQosWmmBestEffortTxopLimit": wingCfgRadioQosWmmBestEffortTxopLimit,
       "wingCfgRadioQosWmmBestEffortAifsn": wingCfgRadioQosWmmBestEffortAifsn,
       "wingCfgRadioQosWmmBestEffortCwMin": wingCfgRadioQosWmmBestEffortCwMin,
       "wingCfgRadioQosWmmBestEffortCwMax": wingCfgRadioQosWmmBestEffortCwMax,
       "wingCfgRadioQosWmmBackgroundTxopLimit": wingCfgRadioQosWmmBackgroundTxopLimit,
       "wingCfgRadioQosWmmBackgroundAifsn": wingCfgRadioQosWmmBackgroundAifsn,
       "wingCfgRadioQosWmmBackgroundCwMin": wingCfgRadioQosWmmBackgroundCwMin,
       "wingCfgRadioQosWmmBackgroundCwMax": wingCfgRadioQosWmmBackgroundCwMax,
       "wingCfgRadioQosWmmVideoTxopLimit": wingCfgRadioQosWmmVideoTxopLimit,
       "wingCfgRadioQosWmmVideoAifsn": wingCfgRadioQosWmmVideoAifsn,
       "wingCfgRadioQosWmmVideoCwMin": wingCfgRadioQosWmmVideoCwMin,
       "wingCfgRadioQosWmmVideoCwMax": wingCfgRadioQosWmmVideoCwMax,
       "wingCfgRadioQosWmmVoiceTxopLimit": wingCfgRadioQosWmmVoiceTxopLimit,
       "wingCfgRadioQosWmmVoiceAifsn": wingCfgRadioQosWmmVoiceAifsn,
       "wingCfgRadioQosWmmVoiceCwMin": wingCfgRadioQosWmmVoiceCwMin,
       "wingCfgRadioQosWmmVoiceCwMax": wingCfgRadioQosWmmVoiceCwMax,
       "wingCfgRadioQosAdmCtrlFirewallDetectedTraffic": wingCfgRadioQosAdmCtrlFirewallDetectedTraffic,
       "wingCfgRadioQosAdmCtrlImplicitTspec": wingCfgRadioQosAdmCtrlImplicitTspec,
       "wingCfgRadioQosAdmCtrlVoiceEnable": wingCfgRadioQosAdmCtrlVoiceEnable,
       "wingCfgRadioQosAdmCtrlVoiceMaxClients": wingCfgRadioQosAdmCtrlVoiceMaxClients,
       "wingCfgRadioQosAdmCtrlVoiceMaxRoamedClients": wingCfgRadioQosAdmCtrlVoiceMaxRoamedClients,
       "wingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent": wingCfgRadioQosAdmCtrlVoiceMaxAirtimePercent,
       "wingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent": wingCfgRadioQosAdmCtrlVoiceReservedForRoamPercent,
       "wingCfgRadioQosAdmCtrlVideoEnable": wingCfgRadioQosAdmCtrlVideoEnable,
       "wingCfgRadioQosAdmCtrlVideoMaxClients": wingCfgRadioQosAdmCtrlVideoMaxClients,
       "wingCfgRadioQosAdmCtrlVideoMaxRoamedClients": wingCfgRadioQosAdmCtrlVideoMaxRoamedClients,
       "wingCfgRadioQosAdmCtrlVideoMaxAirtimePercent": wingCfgRadioQosAdmCtrlVideoMaxAirtimePercent,
       "wingCfgRadioQosAdmCtrlVideoReservedForRoamPercent": wingCfgRadioQosAdmCtrlVideoReservedForRoamPercent,
       "wingCfgRadioQosAdmCtrlBestEffortEnable": wingCfgRadioQosAdmCtrlBestEffortEnable,
       "wingCfgRadioQosAdmCtrlBestEffortMaxClients": wingCfgRadioQosAdmCtrlBestEffortMaxClients,
       "wingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients": wingCfgRadioQosAdmCtrlBestEffortMaxRoamedClients,
       "wingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent": wingCfgRadioQosAdmCtrlBestEffortMaxAirtimePercent,
       "wingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent": wingCfgRadioQosAdmCtrlBestEffortReservedForRoamPercent,
       "wingCfgRadioQosAdmCtrlBackgroundEnable": wingCfgRadioQosAdmCtrlBackgroundEnable,
       "wingCfgRadioQosAdmCtrlBackgroundMaxClients": wingCfgRadioQosAdmCtrlBackgroundMaxClients,
       "wingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients": wingCfgRadioQosAdmCtrlBackgroundMaxRoamedClients,
       "wingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent": wingCfgRadioQosAdmCtrlBackgroundMaxAirtimePercent,
       "wingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent": wingCfgRadioQosAdmCtrlBackgroundReservedForRoamPercent,
       "wingCfgRadioQosAccelMcastMaxStreams": wingCfgRadioQosAccelMcastMaxStreams,
       "wingCfgRadioQosAccelMcastOverflowPolicy": wingCfgRadioQosAccelMcastOverflowPolicy,
       "wingCfgRadioQosAccelMcastMaxClientStreams": wingCfgRadioQosAccelMcastMaxClientStreams,
       "wingCfgRadioQosAccelMcastStreamThreshold": wingCfgRadioQosAccelMcastStreamThreshold,
       "wingCfgRadioQosAccelMcastClientTimeout": wingCfgRadioQosAccelMcastClientTimeout,
       "wingCfgAaa": wingCfgAaa,
       "wingCfgAaaTable": wingCfgAaaTable,
       "wingCfgAaaEntry": wingCfgAaaEntry,
       "wingCfgAaaName": wingCfgAaaName,
       "wingCfgAaaServerPoolingMode": wingCfgAaaServerPoolingMode,
       "wingCfgAaaMacAddrFormat": wingCfgAaaMacAddrFormat,
       "wingCfgAaaMacAddrCase": wingCfgAaaMacAddrCase,
       "wingCfgAaaMacAddrAttributes": wingCfgAaaMacAddrAttributes,
       "wingCfgAaaEapClientTimeout": wingCfgAaaEapClientTimeout,
       "wingCfgAaaEapClientAttempts": wingCfgAaaEapClientAttempts,
       "wingCfgAaaEapClientRetryFactor": wingCfgAaaEapClientRetryFactor,
       "wingCfgAaaEapClientIdReqTimeout": wingCfgAaaEapClientIdReqTimeout,
       "wingCfgAaaAuthProtocol": wingCfgAaaAuthProtocol,
       "wingCfgAaaAccountingType": wingCfgAaaAccountingType,
       "wingCfgAaaInterimAccountingInterval": wingCfgAaaInterimAccountingInterval,
       "wingCfgAaaNacList": wingCfgAaaNacList,
       "wingCfgAaaAuthSrvrTable": wingCfgAaaAuthSrvrTable,
       "wingCfgAaaAuthSrvrEntry": wingCfgAaaAuthSrvrEntry,
       "wingCfgAaaAuthSrvrIdx": wingCfgAaaAuthSrvrIdx,
       "wingCfgAaaAuthSrvrType": wingCfgAaaAuthSrvrType,
       "wingCfgAaaAuthSrvrHost": wingCfgAaaAuthSrvrHost,
       "wingCfgAaaAuthSrvrSecret": wingCfgAaaAuthSrvrSecret,
       "wingCfgAaaAuthSrvrPort": wingCfgAaaAuthSrvrPort,
       "wingCfgAaaAuthSrvrTimeout": wingCfgAaaAuthSrvrTimeout,
       "wingCfgAaaAuthSrvrAttempts": wingCfgAaaAuthSrvrAttempts,
       "wingCfgAaaAuthSrvrProxyMode": wingCfgAaaAuthSrvrProxyMode,
       "wingCfgAaaAuthSrvrNaiRouting": wingCfgAaaAuthSrvrNaiRouting,
       "wingCfgAaaAuthSrvrRealmType": wingCfgAaaAuthSrvrRealmType,
       "wingCfgAaaAuthSrvrRealm": wingCfgAaaAuthSrvrRealm,
       "wingCfgAaaAuthSrvrStripRealm": wingCfgAaaAuthSrvrStripRealm,
       "wingCfgAaaAuthSrvrRetryTimeoutFactor": wingCfgAaaAuthSrvrRetryTimeoutFactor,
       "wingCfgAaaAuthSrvrNacEnable": wingCfgAaaAuthSrvrNacEnable,
       "wingCfgAaaAuthSrvrDscp": wingCfgAaaAuthSrvrDscp,
       "wingCfgAaaAcctSrvrTable": wingCfgAaaAcctSrvrTable,
       "wingCfgAaaAcctSrvrEntry": wingCfgAaaAcctSrvrEntry,
       "wingCfgAaaAcctSrvrIdx": wingCfgAaaAcctSrvrIdx,
       "wingCfgAaaAcctSrvrType": wingCfgAaaAcctSrvrType,
       "wingCfgAaaAcctSrvrHost": wingCfgAaaAcctSrvrHost,
       "wingCfgAaaAcctSrvrSecret": wingCfgAaaAcctSrvrSecret,
       "wingCfgAaaAcctSrvrPort": wingCfgAaaAcctSrvrPort,
       "wingCfgAaaAcctSrvrTimeout": wingCfgAaaAcctSrvrTimeout,
       "wingCfgAaaAcctSrvrAttempts": wingCfgAaaAcctSrvrAttempts,
       "wingCfgAaaAcctSrvrProxyMode": wingCfgAaaAcctSrvrProxyMode,
       "wingCfgAaaAcctSrvrNaiRouting": wingCfgAaaAcctSrvrNaiRouting,
       "wingCfgAaaAcctSrvrRealmType": wingCfgAaaAcctSrvrRealmType,
       "wingCfgAaaAcctSrvrRealm": wingCfgAaaAcctSrvrRealm,
       "wingCfgAaaAcctSrvrStripRealm": wingCfgAaaAcctSrvrStripRealm,
       "wingCfgAaaAcctSrvrRetryTimeoutFactor": wingCfgAaaAcctSrvrRetryTimeoutFactor,
       "wingCfgAaaAcctSrvrDscp": wingCfgAaaAcctSrvrDscp,
       "wingCfgAssocAcl": wingCfgAssocAcl,
       "wingCfgAssocAclTable": wingCfgAssocAclTable,
       "wingCfgAssocAclEntry": wingCfgAssocAclEntry,
       "wingCfgAssocAclName": wingCfgAssocAclName,
       "wingCfgAssocAclRuleTable": wingCfgAssocAclRuleTable,
       "wingCfgAssocAclRuleEntry": wingCfgAssocAclRuleEntry,
       "wingCfgAssocAclRulePrecedence": wingCfgAssocAclRulePrecedence,
       "wingCfgAssocAclRulePermit": wingCfgAssocAclRulePermit,
       "wingCfgAssocAclRuleMac0": wingCfgAssocAclRuleMac0,
       "wingCfgAssocAclRuleMac1": wingCfgAssocAclRuleMac1,
       "wingCfgSmartRf": wingCfgSmartRf,
       "wingCfgSmartRfTable": wingCfgSmartRfTable,
       "wingCfgSmartRfEntry": wingCfgSmartRfEntry,
       "wingCfgSmartRfName": wingCfgSmartRfName,
       "wingCfgSmartRfEnable": wingCfgSmartRfEnable,
       "wingCfgSmartRfSensitivity": wingCfgSmartRfSensitivity,
       "wingCfgSmartRfAutoAssignSensor": wingCfgSmartRfAutoAssignSensor,
       "wingCfgSmartRfMinPowerA": wingCfgSmartRfMinPowerA,
       "wingCfgSmartRfMaxPowerA": wingCfgSmartRfMaxPowerA,
       "wingCfgSmartRfMinPowerBg": wingCfgSmartRfMinPowerBg,
       "wingCfgSmartRfMaxPowerBg": wingCfgSmartRfMaxPowerBg,
       "wingCfgSmartRfChannelWidthA": wingCfgSmartRfChannelWidthA,
       "wingCfgSmartRfChannelWidthBg": wingCfgSmartRfChannelWidthBg,
       "wingCfgSmartRfGroupByArea": wingCfgSmartRfGroupByArea,
       "wingCfgSmartRfGroupByFloor": wingCfgSmartRfGroupByFloor,
       "wingCfgSmartRfSmartOcsMonitoring": wingCfgSmartRfSmartOcsMonitoring,
       "wingCfgSmartRfOcsDurationA": wingCfgSmartRfOcsDurationA,
       "wingCfgSmartRfOcsDurationBg": wingCfgSmartRfOcsDurationBg,
       "wingCfgSmartRfOcsFrequencyA": wingCfgSmartRfOcsFrequencyA,
       "wingCfgSmartRfOcsFrequencyBg": wingCfgSmartRfOcsFrequencyBg,
       "wingCfgSmartRfOcsSampleCountA": wingCfgSmartRfOcsSampleCountA,
       "wingCfgSmartRfOcsSampleCountBg": wingCfgSmartRfOcsSampleCountBg,
       "wingCfgSmartRfOcsExtendedScanFrequencyA": wingCfgSmartRfOcsExtendedScanFrequencyA,
       "wingCfgSmartRfOcsExtendedScanFrequencyBg": wingCfgSmartRfOcsExtendedScanFrequencyBg,
       "wingCfgSmartRfOcsVoiceAwareA": wingCfgSmartRfOcsVoiceAwareA,
       "wingCfgSmartRfOcsVoiceAwareBg": wingCfgSmartRfOcsVoiceAwareBg,
       "wingCfgSmartRfOcsPspAwareA": wingCfgSmartRfOcsPspAwareA,
       "wingCfgSmartRfOcsPspAwareBg": wingCfgSmartRfOcsPspAwareBg,
       "wingCfgSmartRfInterferenceRecovery": wingCfgSmartRfInterferenceRecovery,
       "wingCfgSmartRfIrNoise": wingCfgSmartRfIrNoise,
       "wingCfgSmartRfIrInterference": wingCfgSmartRfIrInterference,
       "wingCfgSmartRfIrClientThreshold": wingCfgSmartRfIrClientThreshold,
       "wingCfgSmartRfIrChannelSwitchDeltaA": wingCfgSmartRfIrChannelSwitchDeltaA,
       "wingCfgSmartRfIrChannelSwitchDeltaBg": wingCfgSmartRfIrChannelSwitchDeltaBg,
       "wingCfgSmartRfNeighborRecovery": wingCfgSmartRfNeighborRecovery,
       "wingCfgSmartRfNrPowerThresholdA": wingCfgSmartRfNrPowerThresholdA,
       "wingCfgSmartRfNrPowerThresholdBg": wingCfgSmartRfNrPowerThresholdBg,
       "wingCfgSmartRfCoverageHoleRecovery": wingCfgSmartRfCoverageHoleRecovery,
       "wingCfgSmartRfChrIntervalA": wingCfgSmartRfChrIntervalA,
       "wingCfgSmartRfChrIntervalBg": wingCfgSmartRfChrIntervalBg,
       "wingCfgSmartRfChrCovIntervalA": wingCfgSmartRfChrCovIntervalA,
       "wingCfgSmartRfChrCovIntervalBg": wingCfgSmartRfChrCovIntervalBg,
       "wingCfgSmartRfChrSnrThresholdA": wingCfgSmartRfChrSnrThresholdA,
       "wingCfgSmartRfChrSnrThresholdBg": wingCfgSmartRfChrSnrThresholdBg,
       "wingCfgSmartRfChrClientThresholdA": wingCfgSmartRfChrClientThresholdA,
       "wingCfgSmartRfChrClientThresholdBg": wingCfgSmartRfChrClientThresholdBg,
       "wingCfgSmartRfChannelHoldTime": wingCfgSmartRfChannelHoldTime,
       "wingCfgSmartRfPowerHoldTime": wingCfgSmartRfPowerHoldTime,
       "wingCfgSmartRfOcsMeshpointA": wingCfgSmartRfOcsMeshpointA,
       "wingCfgSmartRfOcsMeshpointBg": wingCfgSmartRfOcsMeshpointBg,
       "wingCfgCaptPrtl": wingCfgCaptPrtl,
       "wingCfgCaptPrtlTable": wingCfgCaptPrtlTable,
       "wingCfgCaptPrtlEntry": wingCfgCaptPrtlEntry,
       "wingCfgCaptPrtlName": wingCfgCaptPrtlName,
       "wingCfgCaptPrtlAccessType": wingCfgCaptPrtlAccessType,
       "wingCfgCaptPrtlAccessTime": wingCfgCaptPrtlAccessTime,
       "wingCfgCaptPrtlCustomAuthInfo": wingCfgCaptPrtlCustomAuthInfo,
       "wingCfgCaptPrtlConnectionMode": wingCfgCaptPrtlConnectionMode,
       "wingCfgCaptPrtlInactivityTimeout": wingCfgCaptPrtlInactivityTimeout,
       "wingCfgCaptPrtlServer": wingCfgCaptPrtlServer,
       "wingCfgCaptPrtlServerMode": wingCfgCaptPrtlServerMode,
       "wingCfgCaptPrtlSimultaneousUsers": wingCfgCaptPrtlSimultaneousUsers,
       "wingCfgCaptPrtlTermsAgreement": wingCfgCaptPrtlTermsAgreement,
       "wingCfgCaptPrtlWebpageLocation": wingCfgCaptPrtlWebpageLocation,
       "wingCfgCaptPrtlAccountingRadius": wingCfgCaptPrtlAccountingRadius,
       "wingCfgCaptPrtlAaaPolicy": wingCfgCaptPrtlAaaPolicy,
       "wingCfgCaptPrtlDnsWhitelist": wingCfgCaptPrtlDnsWhitelist,
       "wingCfgCaptPrtlAcctSyslogTable": wingCfgCaptPrtlAcctSyslogTable,
       "wingCfgCaptPrtlAcctSyslogEntry": wingCfgCaptPrtlAcctSyslogEntry,
       "wingCfgCaptPrtlAcctSyslogEnable": wingCfgCaptPrtlAcctSyslogEnable,
       "wingCfgCaptPrtlAcctSyslogHost": wingCfgCaptPrtlAcctSyslogHost,
       "wingCfgCaptPrtlAcctSyslogPort": wingCfgCaptPrtlAcctSyslogPort,
       "wingCfgDnsWhitelist": wingCfgDnsWhitelist,
       "wingCfgDnsWhitelistTable": wingCfgDnsWhitelistTable,
       "wingCfgDnsWhitelistEntry": wingCfgDnsWhitelistEntry,
       "wingCfgDnsWhitelistName": wingCfgDnsWhitelistName,
       "wingCfgDnsWhitelistInstTable": wingCfgDnsWhitelistInstTable,
       "wingCfgDnsWhitelistInstEntry": wingCfgDnsWhitelistInstEntry,
       "wingCfgDnsWhitelistInstName": wingCfgDnsWhitelistInstName,
       "wingCfgDnsWhitelistInstSuffix": wingCfgDnsWhitelistInstSuffix,
       "wingCfgIpAcl": wingCfgIpAcl,
       "wingCfgIpAclTable": wingCfgIpAclTable,
       "wingCfgIpAclEntry": wingCfgIpAclEntry,
       "wingCfgIpAclName": wingCfgIpAclName,
       "wingCfgIpAclRuleTable": wingCfgIpAclRuleTable,
       "wingCfgIpAclRuleEntry": wingCfgIpAclRuleEntry,
       "wingCfgIpAclRulePrecedence": wingCfgIpAclRulePrecedence,
       "wingCfgIpAclRuleAllow": wingCfgIpAclRuleAllow,
       "wingCfgIpAclRulePriorityField": wingCfgIpAclRulePriorityField,
       "wingCfgIpAclRuleMarkDscp": wingCfgIpAclRuleMarkDscp,
       "wingCfgIpAclRuleMark8021p": wingCfgIpAclRuleMark8021p,
       "wingCfgIpAclRuleDescription": wingCfgIpAclRuleDescription,
       "wingCfgIpAclRuleProtocol": wingCfgIpAclRuleProtocol,
       "wingCfgIpAclRuleSip": wingCfgIpAclRuleSip,
       "wingCfgIpAclRuleDip": wingCfgIpAclRuleDip,
       "wingCfgMacAcl": wingCfgMacAcl,
       "wingCfgMacAclTable": wingCfgMacAclTable,
       "wingCfgMacAclEntry": wingCfgMacAclEntry,
       "wingCfgMacAclName": wingCfgMacAclName,
       "wingCfgMacAclRuleTable": wingCfgMacAclRuleTable,
       "wingCfgMacAclRuleEntry": wingCfgMacAclRuleEntry,
       "wingCfgMacAclRulePrecedence": wingCfgMacAclRulePrecedence,
       "wingCfgMacAclRuleAllow": wingCfgMacAclRuleAllow,
       "wingCfgMacAclRulePriorityField": wingCfgMacAclRulePriorityField,
       "wingCfgMacAclRuleMarkDscp": wingCfgMacAclRuleMarkDscp,
       "wingCfgMacAclRuleMark8021p": wingCfgMacAclRuleMark8021p,
       "wingCfgMacAclRuleDescription": wingCfgMacAclRuleDescription,
       "wingCfgMacAclRuleSmac": wingCfgMacAclRuleSmac,
       "wingCfgMacAclRuleSmacMask": wingCfgMacAclRuleSmacMask,
       "wingCfgMacAclRuleDmac": wingCfgMacAclRuleDmac,
       "wingCfgMacAclRuleDmacMask": wingCfgMacAclRuleDmacMask,
       "wingCfgMacAclRuleMatchVlan": wingCfgMacAclRuleMatchVlan,
       "wingCfgMacAclRuleMatchDot1p": wingCfgMacAclRuleMatchDot1p,
       "wingCfgMacAclRuleMatchType": wingCfgMacAclRuleMatchType,
       "wingCfgWips": wingCfgWips,
       "wingCfgWipsTable": wingCfgWipsTable,
       "wingCfgWipsEntry": wingCfgWipsEntry,
       "wingCfgWipsName": wingCfgWipsName,
       "wingCfgWipsEnable": wingCfgWipsEnable,
       "wingCfgWipsHistoryThrottleDuration": wingCfgWipsHistoryThrottleDuration,
       "wingCfgWipsApDetection": wingCfgWipsApDetection,
       "wingCfgWipsApDetectionAgeout": wingCfgWipsApDetectionAgeout,
       "wingCfgWipsApDetectionWaitTime": wingCfgWipsApDetectionWaitTime,
       "wingCfgWipsDeviceCategorization": wingCfgWipsDeviceCategorization,
       "wingCfgDhcpSvr": wingCfgDhcpSvr,
       "wingCfgDhcpSvrTable": wingCfgDhcpSvrTable,
       "wingCfgDhcpSvrEntry": wingCfgDhcpSvrEntry,
       "wingCfgDhcpSvrName": wingCfgDhcpSvrName,
       "wingCfgDhcpSvrIgnoreBootp": wingCfgDhcpSvrIgnoreBootp,
       "wingCfgDhcpSvrPingInterval": wingCfgDhcpSvrPingInterval,
       "wingCfgDhcpSvrClassTable": wingCfgDhcpSvrClassTable,
       "wingCfgDhcpSvrClassEntry": wingCfgDhcpSvrClassEntry,
       "wingCfgDhcpSvrClassName": wingCfgDhcpSvrClassName,
       "wingCfgDhcpSvrClassMultipleUserClass": wingCfgDhcpSvrClassMultipleUserClass,
       "wingCfgDhcpSvrOptionTable": wingCfgDhcpSvrOptionTable,
       "wingCfgDhcpSvrOptionEntry": wingCfgDhcpSvrOptionEntry,
       "wingCfgDhcpSvrOptionName": wingCfgDhcpSvrOptionName,
       "wingCfgDhcpSvrOptionCode": wingCfgDhcpSvrOptionCode,
       "wingCfgDhcpSvrOptionType": wingCfgDhcpSvrOptionType,
       "wingCfgDhcpSvrPoolTable": wingCfgDhcpSvrPoolTable,
       "wingCfgDhcpSvrPoolEntry": wingCfgDhcpSvrPoolEntry,
       "wingCfgDhcpSvrPoolName": wingCfgDhcpSvrPoolName,
       "wingCfgDhcpSvrPoolNetwork": wingCfgDhcpSvrPoolNetwork,
       "wingCfgDhcpSvrPoolDomainName": wingCfgDhcpSvrPoolDomainName,
       "wingCfgDhcpSvrPoolNetbiosNodeType": wingCfgDhcpSvrPoolNetbiosNodeType,
       "wingCfgDhcpSvrPoolBootfile": wingCfgDhcpSvrPoolBootfile,
       "wingCfgDhcpSvrPoolLeaseTime": wingCfgDhcpSvrPoolLeaseTime,
       "wingCfgDhcpSvrPoolBootpNextServer": wingCfgDhcpSvrPoolBootpNextServer,
       "wingCfgDhcpSvrPoolUpdateDns": wingCfgDhcpSvrPoolUpdateDns,
       "wingCfgDhcpSvrPoolDdnsDomainName": wingCfgDhcpSvrPoolDdnsDomainName,
       "wingCfgDhcpSvrPoolDdnsTtl": wingCfgDhcpSvrPoolDdnsTtl,
       "wingCfgDhcpSvrPoolDdnsMultiUserClass": wingCfgDhcpSvrPoolDdnsMultiUserClass,
       "wingCfgDhcpSvrPoolUnicastEnable": wingCfgDhcpSvrPoolUnicastEnable,
       "wingCfgProf": wingCfgProf,
       "wingCfgProfTable": wingCfgProfTable,
       "wingCfgProfEntry": wingCfgProfEntry,
       "wingCfgProfName": wingCfgProfName,
       "wingCfgProfType": wingCfgProfType,
       "wingCfgProfDomainLookup": wingCfgProfDomainLookup,
       "wingCfgProfDomainName": wingCfgProfDomainName,
       "wingCfgProfArpTimeout": wingCfgProfArpTimeout,
       "wingCfgProfApIpAddr": wingCfgProfApIpAddr,
       "wingCfgProfAutoConfUpdate": wingCfgProfAutoConfUpdate,
       "wingCfgProfAutoFwUpdate": wingCfgProfAutoFwUpdate,
       "wingCfgProfAutoupgradeCount": wingCfgProfAutoupgradeCount,
       "wingCfgProfServiceWatchdog": wingCfgProfServiceWatchdog,
       "wingCfgProfRadiusServerPolicy": wingCfgProfRadiusServerPolicy,
       "wingCfgProfDhcpServerPolicy": wingCfgProfDhcpServerPolicy,
       "wingCfgProfManagementPolicy": wingCfgProfManagementPolicy,
       "wingCfgProfFirewallPolicy": wingCfgProfFirewallPolicy,
       "wingCfgProfAdvancedWipsPolicy": wingCfgProfAdvancedWipsPolicy,
       "wingCfgProfRolePolicy": wingCfgProfRolePolicy,
       "wingCfgProfAdoptionPolicy": wingCfgProfAdoptionPolicy,
       "wingCfgProfBridgingPolicy": wingCfgProfBridgingPolicy,
       "wingCfgProfEventSystemPolicy": wingCfgProfEventSystemPolicy,
       "wingCfgProfRoutingPolicy": wingCfgProfRoutingPolicy,
       "wingCfgProfRfDomainMgrCapable": wingCfgProfRfDomainMgrCapable,
       "wingCfgProfRfDomainMgrPriority": wingCfgProfRfDomainMgrPriority,
       "wingCfgProfDhcpcSendHostname": wingCfgProfDhcpcSendHostname,
       "wingCfgProfDhcpcPersistentLease": wingCfgProfDhcpcPersistentLease,
       "wingCfgProfDnsServerForward": wingCfgProfDnsServerForward,
       "wingCfgProfBridgeAgingTime": wingCfgProfBridgeAgingTime,
       "wingCfgProfLogging": wingCfgProfLogging,
       "wingCfgProfAggregationTime": wingCfgProfAggregationTime,
       "wingCfgProfConsole": wingCfgProfConsole,
       "wingCfgProfBuffered": wingCfgProfBuffered,
       "wingCfgProfSyslog": wingCfgProfSyslog,
       "wingCfgProfFacility": wingCfgProfFacility,
       "wingCfgProfEvents": wingCfgProfEvents,
       "wingCfgProfEventsForward": wingCfgProfEventsForward,
       "wingCfgProfLed": wingCfgProfLed,
       "wingCfgProfRemoteLogging": wingCfgProfRemoteLogging,
       "wingCfgProfPowerConfig3afOption": wingCfgProfPowerConfig3afOption,
       "wingCfgProfPowerConfig3atOption": wingCfgProfPowerConfig3atOption,
       "wingCfgProfPowerConfigMode": wingCfgProfPowerConfigMode,
       "wingCfgProfCriticalResourcePolicy": wingCfgProfCriticalResourcePolicy,
       "wingCfgProfControllerAp": wingCfgProfControllerAp,
       "wingCfgProfControllerVlan": wingCfgProfControllerVlan,
       "wingCfgProfControllerGroup": wingCfgProfControllerGroup,
       "wingCfgProfPreferredControllerGroup": wingCfgProfPreferredControllerGroup,
       "wingCfgProfIpRouting": wingCfgProfIpRouting,
       "wingCfgProfLearnStagingConfig": wingCfgProfLearnStagingConfig,
       "wingCfgProfTunnelController": wingCfgProfTunnelController,
       "wingCfgProfPreferredTunnelController": wingCfgProfPreferredTunnelController,
       "wingCfgProfDot1xSysAuthCtrl": wingCfgProfDot1xSysAuthCtrl,
       "wingCfgProfDot1xGuestVlanCtrl": wingCfgProfDot1xGuestVlanCtrl,
       "wingCfgProfDot1xAaaPolicy": wingCfgProfDot1xAaaPolicy,
       "wingCfgProfIf": wingCfgProfIf,
       "wingCfgProfIfTable": wingCfgProfIfTable,
       "wingCfgProfIfEntry": wingCfgProfIfEntry,
       "wingCfgProfIfName": wingCfgProfIfName,
       "wingCfgProfIfDescription": wingCfgProfIfDescription,
       "wingCfgProfIfType": wingCfgProfIfType,
       "wingCfgProfIfShutdown": wingCfgProfIfShutdown,
       "wingCfgProfIfIpInAcl": wingCfgProfIfIpInAcl,
       "wingCfgProfIfMacInAcl": wingCfgProfIfMacInAcl,
       "wingCfgProfIfEthTable": wingCfgProfIfEthTable,
       "wingCfgProfIfEthEntry": wingCfgProfIfEthEntry,
       "wingCfgProfIfEthSpeed": wingCfgProfIfEthSpeed,
       "wingCfgProfIfEthDuplex": wingCfgProfIfEthDuplex,
       "wingCfgProfIfEthSwitchportMode": wingCfgProfIfEthSwitchportMode,
       "wingCfgProfIfEthSwitchportNativeVlan": wingCfgProfIfEthSwitchportNativeVlan,
       "wingCfgProfIfEthSwitchportNativeVlanTagged": wingCfgProfIfEthSwitchportNativeVlanTagged,
       "wingCfgProfIfEthArpTrust": wingCfgProfIfEthArpTrust,
       "wingCfgProfIfEthDhcpTrust": wingCfgProfIfEthDhcpTrust,
       "wingCfgProfIfEthArpHeaderMismatchValidation": wingCfgProfIfEthArpHeaderMismatchValidation,
       "wingCfgProfIfEthQosTrustDscp": wingCfgProfIfEthQosTrustDscp,
       "wingCfgProfIfEthQosTrust802dot1p": wingCfgProfIfEthQosTrust802dot1p,
       "wingCfgProfIfEthStaticChannelGroup": wingCfgProfIfEthStaticChannelGroup,
       "wingCfgProfIfEthPoeSupported": wingCfgProfIfEthPoeSupported,
       "wingCfgProfIfEthPoePower": wingCfgProfIfEthPoePower,
       "wingCfgProfIfEthPoeLimit": wingCfgProfIfEthPoeLimit,
       "wingCfgProfIfEthPoePriority": wingCfgProfIfEthPoePriority,
       "wingCfgProfIfEthDot1xSupported": wingCfgProfIfEthDot1xSupported,
       "wingCfgProfIfEthDot1xEnable": wingCfgProfIfEthDot1xEnable,
       "wingCfgProfIfEthDot1xUsername": wingCfgProfIfEthDot1xUsername,
       "wingCfgProfIfEthDot1xPassword": wingCfgProfIfEthDot1xPassword,
       "wingCfgProfIfEthCdpReceive": wingCfgProfIfEthCdpReceive,
       "wingCfgProfIfEthCdpTransmit": wingCfgProfIfEthCdpTransmit,
       "wingCfgProfIfEthLldpReceive": wingCfgProfIfEthLldpReceive,
       "wingCfgProfIfEthLldpTransmit": wingCfgProfIfEthLldpTransmit,
       "wingCfgProfIfEthPortChannelLoadBalance": wingCfgProfIfEthPortChannelLoadBalance,
       "wingCfgProfIfVlanTable": wingCfgProfIfVlanTable,
       "wingCfgProfIfVlanEntry": wingCfgProfIfVlanEntry,
       "wingCfgProfIfVlanVlan": wingCfgProfIfVlanVlan,
       "wingCfgProfIfVlanDhcpcOptAll": wingCfgProfIfVlanDhcpcOptAll,
       "wingCfgProfIfVlanNatDirection": wingCfgProfIfVlanNatDirection,
       "wingCfgProfIfVlanCryptoMap": wingCfgProfIfVlanCryptoMap,
       "wingCfgProfIfVlanDhcpRelayIncoming": wingCfgProfIfVlanDhcpRelayIncoming,
       "wingCfgProfIfVlanOspfAuth": wingCfgProfIfVlanOspfAuth,
       "wingCfgProfIfVlanOspfAuthKey": wingCfgProfIfVlanOspfAuthKey,
       "wingCfgProfIfVlanOspfNetworkType": wingCfgProfIfVlanOspfNetworkType,
       "wingCfgProfIfVlanOspfPriority": wingCfgProfIfVlanOspfPriority,
       "wingCfgProfIfRadioTable": wingCfgProfIfRadioTable,
       "wingCfgProfIfRadioEntry": wingCfgProfIfRadioEntry,
       "wingCfgProfIfRadioRfMode": wingCfgProfIfRadioRfMode,
       "wingCfgProfIfRadioChannel": wingCfgProfIfRadioChannel,
       "wingCfgProfIfRadioPower": wingCfgProfIfRadioPower,
       "wingCfgProfIfRadioPlacement": wingCfgProfIfRadioPlacement,
       "wingCfgProfIfRadioBeaconInterval": wingCfgProfIfRadioBeaconInterval,
       "wingCfgProfIfRadioRtsThreshold": wingCfgProfIfRadioRtsThreshold,
       "wingCfgProfIfRadioOffChannelScan": wingCfgProfIfRadioOffChannelScan,
       "wingCfgProfIfRadioPreambleShort": wingCfgProfIfRadioPreambleShort,
       "wingCfgProfIfRadioGuardInterval": wingCfgProfIfRadioGuardInterval,
       "wingCfgProfIfRadioAmpduMode": wingCfgProfIfRadioAmpduMode,
       "wingCfgProfIfRadioAmsduMode": wingCfgProfIfRadioAmsduMode,
       "wingCfgProfIfRadioRifsMode": wingCfgProfIfRadioRifsMode,
       "wingCfgProfIfRadioAmpduMaxAggrSizeRx": wingCfgProfIfRadioAmpduMaxAggrSizeRx,
       "wingCfgProfIfRadioAmpduMaxAggrSizeTx": wingCfgProfIfRadioAmpduMaxAggrSizeTx,
       "wingCfgProfIfRadioAmpduMinSpacing": wingCfgProfIfRadioAmpduMinSpacing,
       "wingCfgProfIfRadioAntennaMode": wingCfgProfIfRadioAntennaMode,
       "wingCfgProfIfRadioNonUnicastForwarding": wingCfgProfIfRadioNonUnicastForwarding,
       "wingCfgProfIfRadioDynamicChainSelection": wingCfgProfIfRadioDynamicChainSelection,
       "wingCfgProfIfRadioLockRfMode": wingCfgProfIfRadioLockRfMode,
       "wingCfgProfIfRadioSnifferRedirHost": wingCfgProfIfRadioSnifferRedirHost,
       "wingCfgProfIfRadioSnifferRedirChannel": wingCfgProfIfRadioSnifferRedirChannel,
       "wingCfgProfIfRadioMesh": wingCfgProfIfRadioMesh,
       "wingCfgProfIfRadioMeshLinks": wingCfgProfIfRadioMeshLinks,
       "wingCfgProfIfRadioProbeResponseRetry": wingCfgProfIfRadioProbeResponseRetry,
       "wingCfgProfIfRadioProbeResponseRate": wingCfgProfIfRadioProbeResponseRate,
       "wingCfgProfIfRadioMaxClients": wingCfgProfIfRadioMaxClients,
       "wingCfgProfIfRadioRadioTapMode": wingCfgProfIfRadioRadioTapMode,
       "wingCfgProfIfRadioWirelessClientPower": wingCfgProfIfRadioWirelessClientPower,
       "wingCfgProfIfRadioLoadBalLfCount": wingCfgProfIfRadioLoadBalLfCount,
       "wingCfgProfIfRadioLoadBalLfThroughput": wingCfgProfIfRadioLoadBalLfThroughput,
       "wingCfgProfIfRadioLoadBalWmCount": wingCfgProfIfRadioLoadBalWmCount,
       "wingCfgProfIfRadioLoadBalWmTput": wingCfgProfIfRadioLoadBalWmTput,
       "wingCfgProfIfRadioAssocAcl": wingCfgProfIfRadioAssocAcl,
       "wingCfgProfIfRadioQosPolicy": wingCfgProfIfRadioQosPolicy,
       "wingCfgProfIfRadioAntennaDowntilt": wingCfgProfIfRadioAntennaDowntilt,
       "wingCfgProfIfRadioExtendedRange": wingCfgProfIfRadioExtendedRange,
       "wingCfgProfIfRadioBssmapTable": wingCfgProfIfRadioBssmapTable,
       "wingCfgProfIfRadioBssmapEntry": wingCfgProfIfRadioBssmapEntry,
       "wingCfgProfIfRadioBssmapWlan": wingCfgProfIfRadioBssmapWlan,
       "wingCfgProfIfRadioBssmapBss": wingCfgProfIfRadioBssmapBss,
       "wingCfgProfIfRadioBssmapPrimary": wingCfgProfIfRadioBssmapPrimary,
       "wingCfgProfIfSpanTreeTable": wingCfgProfIfSpanTreeTable,
       "wingCfgProfIfSpanTreeEntry": wingCfgProfIfSpanTreeEntry,
       "wingCfgProfIfSpanTreeLinkType": wingCfgProfIfSpanTreeLinkType,
       "wingCfgProfIfSpanTreePortfast": wingCfgProfIfSpanTreePortfast,
       "wingCfgProfIfSpanTreeEdgeport": wingCfgProfIfSpanTreeEdgeport,
       "wingCfgProfIfSpanTreeBpduguard": wingCfgProfIfSpanTreeBpduguard,
       "wingCfgProfIfSpanTreeBpdufilter": wingCfgProfIfSpanTreeBpdufilter,
       "wingCfgProfIfSpanTreePortCiscoInterop": wingCfgProfIfSpanTreePortCiscoInterop,
       "wingCfgProfIfSpanTreeForceVersion": wingCfgProfIfSpanTreeForceVersion,
       "wingCfgProfIfSpanTreeGuard": wingCfgProfIfSpanTreeGuard,
       "wingCfgProfIfWwanTable": wingCfgProfIfWwanTable,
       "wingCfgProfIfWwanEntry": wingCfgProfIfWwanEntry,
       "wingCfgProfIfWwanApn": wingCfgProfIfWwanApn,
       "wingCfgProfIfWwanAuth": wingCfgProfIfWwanAuth,
       "wingCfgProfIfWwanUser": wingCfgProfIfWwanUser,
       "wingCfgProfIfWwanPwd": wingCfgProfIfWwanPwd,
       "wingCfgProfIfWwanCryptomap": wingCfgProfIfWwanCryptomap,
       "wingCfgProfIfWwanNatDirection": wingCfgProfIfWwanNatDirection,
       "wingCfgProfIfVlanOspfTable": wingCfgProfIfVlanOspfTable,
       "wingCfgProfIfVlanOspfEntry": wingCfgProfIfVlanOspfEntry,
       "wingCfgProfIfVlanOspfOspfAuthentication": wingCfgProfIfVlanOspfOspfAuthentication,
       "wingCfgProfIfVlanOspfOspfAuthKey": wingCfgProfIfVlanOspfOspfAuthKey,
       "wingCfgProfIfVlanOspfOspfPriority": wingCfgProfIfVlanOspfOspfPriority,
       "wingCfgProfIfVlanOspfOspfCost": wingCfgProfIfVlanOspfOspfCost,
       "wingCfgProfIfVlanOspfOspfBandWidth": wingCfgProfIfVlanOspfOspfBandWidth,
       "wingCfgProfIfVlanOspfMsgDigestTable": wingCfgProfIfVlanOspfMsgDigestTable,
       "wingCfgProfIfVlanOspfMsgDigestEntry": wingCfgProfIfVlanOspfMsgDigestEntry,
       "wingCfgProfIfVlanOspfMsgDigestKeyId": wingCfgProfIfVlanOspfMsgDigestKeyId,
       "wingCfgProfIfVlanOspfMsgDigestMessageDigest": wingCfgProfIfVlanOspfMsgDigestMessageDigest,
       "wingCfgProfIfPppoeTable": wingCfgProfIfPppoeTable,
       "wingCfgProfIfPppoeEntry": wingCfgProfIfPppoeEntry,
       "wingCfgProfIfPppoeAuthType": wingCfgProfIfPppoeAuthType,
       "wingCfgProfIfPppoeIdleTime": wingCfgProfIfPppoeIdleTime,
       "wingCfgProfIfPppoeKeepalive": wingCfgProfIfPppoeKeepalive,
       "wingCfgProfIfPppoeUsername": wingCfgProfIfPppoeUsername,
       "wingCfgProfIfPppoePassword": wingCfgProfIfPppoePassword,
       "wingCfgProfIfPppoeService": wingCfgProfIfPppoeService,
       "wingCfgProfIfPppoeLocalnetVlan": wingCfgProfIfPppoeLocalnetVlan,
       "wingCfgProfIfPppoeMtu": wingCfgProfIfPppoeMtu,
       "wingCfgProfIfPppoeDefaultRoutePriority": wingCfgProfIfPppoeDefaultRoutePriority,
       "wingCfgProfIfPppoeIp": wingCfgProfIfPppoeIp,
       "wingCfgProfIfT1E1Table": wingCfgProfIfT1E1Table,
       "wingCfgProfIfT1E1Entry": wingCfgProfIfT1E1Entry,
       "wingCfgProfIfT1E1Media": wingCfgProfIfT1E1Media,
       "wingCfgProfIfT1E1ClockMode": wingCfgProfIfT1E1ClockMode,
       "wingCfgProfIfT1E1HighImpedance": wingCfgProfIfT1E1HighImpedance,
       "wingCfgProfIfT1E1LineBuildOut": wingCfgProfIfT1E1LineBuildOut,
       "wingCfgProfIfT1E1LineEncoding": wingCfgProfIfT1E1LineEncoding,
       "wingCfgProfIfT1E1RxSensitivityLevel": wingCfgProfIfT1E1RxSensitivityLevel,
       "wingCfgProfIfSerialTable": wingCfgProfIfSerialTable,
       "wingCfgProfIfSerialEntry": wingCfgProfIfSerialEntry,
       "wingCfgProfIfSerialAuthentication": wingCfgProfIfSerialAuthentication,
       "wingCfgProfIfSerialEncapsulation": wingCfgProfIfSerialEncapsulation,
       "wingCfgProfIfSerialLocalIpAddress": wingCfgProfIfSerialLocalIpAddress,
       "wingCfgProfIfSerialUsername": wingCfgProfIfSerialUsername,
       "wingCfgProfIfSerialPassword": wingCfgProfIfSerialPassword,
       "wingCfgProfIfSerialRemoteIpSubnet": wingCfgProfIfSerialRemoteIpSubnet,
       "wingCfgProfIfDot1xAuthTable": wingCfgProfIfDot1xAuthTable,
       "wingCfgProfIfDot1xAuthEntry": wingCfgProfIfDot1xAuthEntry,
       "wingCfgProfIfDot1xAuthHostMode": wingCfgProfIfDot1xAuthHostMode,
       "wingCfgProfIfDot1xAuthGuestVlan": wingCfgProfIfDot1xAuthGuestVlan,
       "wingCfgProfIfDot1xAuthPortControl": wingCfgProfIfDot1xAuthPortControl,
       "wingCfgProfIfDot1xAuthReauthenticate": wingCfgProfIfDot1xAuthReauthenticate,
       "wingCfgProfIfDot1xAuthMaxReauthCount": wingCfgProfIfDot1xAuthMaxReauthCount,
       "wingCfgProfIfDot1xAuthMaxReq": wingCfgProfIfDot1xAuthMaxReq,
       "wingCfgProfIfDot1xAuthQuietPeriod": wingCfgProfIfDot1xAuthQuietPeriod,
       "wingCfgProfIfDot1xAuthReauthPeriod": wingCfgProfIfDot1xAuthReauthPeriod,
       "wingCfgProfIfMeshpointBssmapTable": wingCfgProfIfMeshpointBssmapTable,
       "wingCfgProfIfMeshpointBssmapEntry": wingCfgProfIfMeshpointBssmapEntry,
       "wingCfgProfIfMeshpointBssmapMeshpoint": wingCfgProfIfMeshpointBssmapMeshpoint,
       "wingCfgProfIfMeshpointBssmapBss": wingCfgProfIfMeshpointBssmapBss,
       "wingCfgProfRoute": wingCfgProfRoute,
       "wingCfgProfRouteTable": wingCfgProfRouteTable,
       "wingCfgProfRouteEntry": wingCfgProfRouteEntry,
       "wingCfgProfRouteNetwork": wingCfgProfRouteNetwork,
       "wingCfgProfRouteGateway": wingCfgProfRouteGateway,
       "wingCfgProfNtpSvr": wingCfgProfNtpSvr,
       "wingCfgProfNtpSvrTable": wingCfgProfNtpSvrTable,
       "wingCfgProfNtpSvrEntry": wingCfgProfNtpSvrEntry,
       "wingCfgProfNtpSvrServerIp": wingCfgProfNtpSvrServerIp,
       "wingCfgProfNtpSvrAuthenkey": wingCfgProfNtpSvrAuthenkey,
       "wingCfgProfNtpSvrAutokey": wingCfgProfNtpSvrAutokey,
       "wingCfgProfNtpSvrKeyStr": wingCfgProfNtpSvrKeyStr,
       "wingCfgProfNtpSvrPrefer": wingCfgProfNtpSvrPrefer,
       "wingCfgProfNtpSvrVersion": wingCfgProfNtpSvrVersion,
       "wingCfgProfBridgeVlan": wingCfgProfBridgeVlan,
       "wingCfgProfBridgeVlanTable": wingCfgProfBridgeVlanTable,
       "wingCfgProfBridgeVlanEntry": wingCfgProfBridgeVlanEntry,
       "wingCfgProfBridgeVlanId": wingCfgProfBridgeVlanId,
       "wingCfgProfBridgeVlanDesc": wingCfgProfBridgeVlanDesc,
       "wingCfgProfBridgeVlanEdgeVlan": wingCfgProfBridgeVlanEdgeVlan,
       "wingCfgProfBridgeVlanBridgingMode": wingCfgProfBridgeVlanBridgingMode,
       "wingCfgProfBridgeVlanIpArpTrust": wingCfgProfBridgeVlanIpArpTrust,
       "wingCfgProfBridgeVlanIpDhcpTrust": wingCfgProfBridgeVlanIpDhcpTrust,
       "wingCfgProfBridgeVlanTunnelMacOutAcl": wingCfgProfBridgeVlanTunnelMacOutAcl,
       "wingCfgProfBridgeVlanTunnelIpOutAcl": wingCfgProfBridgeVlanTunnelIpOutAcl,
       "wingCfgProfBridgeVlanIgsTable": wingCfgProfBridgeVlanIgsTable,
       "wingCfgProfBridgeVlanIgsEntry": wingCfgProfBridgeVlanIgsEntry,
       "wingCfgProfBridgeVlanIgsIpIgs": wingCfgProfBridgeVlanIgsIpIgs,
       "wingCfgProfBridgeVlanIgsIpIgsQuerier": wingCfgProfBridgeVlanIgsIpIgsQuerier,
       "wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime": wingCfgProfBridgeVlanIgsIpIgsQuerierMaxResponseTime,
       "wingCfgProfBridgeVlanIgsIpIgsQuerierVersion": wingCfgProfBridgeVlanIgsIpIgsQuerierVersion,
       "wingCfgProfBridgeVlanIgsIpIgsQuerierAddress": wingCfgProfBridgeVlanIgsIpIgsQuerierAddress,
       "wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry": wingCfgProfBridgeVlanIgsIpIgsOtherQuerierTimerExpiry,
       "wingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast": wingCfgProfBridgeVlanIgsIpIgsForwardUnknownMcast,
       "wingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp": wingCfgProfBridgeVlanIgsIpIgsMrouterLearnPimDvmrp,
       "wingCfgProfClst": wingCfgProfClst,
       "wingCfgProfClstTable": wingCfgProfClstTable,
       "wingCfgProfClstEntry": wingCfgProfClstEntry,
       "wingCfgProfClstClstName": wingCfgProfClstClstName,
       "wingCfgProfClstClstMemberVlan": wingCfgProfClstClstMemberVlan,
       "wingCfgProfClstClstMode": wingCfgProfClstClstMode,
       "wingCfgProfClstClstMasterPriority": wingCfgProfClstClstMasterPriority,
       "wingCfgProfClstHandleStp": wingCfgProfClstHandleStp,
       "wingCfgProfClstAutoRevert": wingCfgProfClstAutoRevert,
       "wingCfgProfClstAutoRevertDelay": wingCfgProfClstAutoRevertDelay,
       "wingCfgProfMint": wingCfgProfMint,
       "wingCfgProfMintTable": wingCfgProfMintTable,
       "wingCfgProfMintEntry": wingCfgProfMintEntry,
       "wingCfgProfMintLevel1AreaId": wingCfgProfMintLevel1AreaId,
       "wingCfgProfMintSpfLatency": wingCfgProfMintSpfLatency,
       "wingCfgProfMintDisPriorityAdjustment": wingCfgProfMintDisPriorityAdjustment,
       "wingCfgProfMintMlcpVlan": wingCfgProfMintMlcpVlan,
       "wingCfgProfMintMlcpIp": wingCfgProfMintMlcpIp,
       "wingCfgProfMintTunnelControllerLoadBalancingLevel1": wingCfgProfMintTunnelControllerLoadBalancingLevel1,
       "wingCfgProfDot11": wingCfgProfDot11,
       "wingCfgProfDot11Table": wingCfgProfDot11Table,
       "wingCfgProfDot11Entry": wingCfgProfDot11Entry,
       "wingCfgProfDot11WepSharedKeyAuth": wingCfgProfDot11WepSharedKeyAuth,
       "wingCfgProfDot11LegacyAutoUpdate": wingCfgProfDot11LegacyAutoUpdate,
       "wingCfgProfDot11LegacyAutoUpdateImgAp7131": wingCfgProfDot11LegacyAutoUpdateImgAp7131,
       "wingCfgProfDot11LegacyAutoDowngrade": wingCfgProfDot11LegacyAutoDowngrade,
       "wingCfgProfDot11NasIdentifier": wingCfgProfDot11NasIdentifier,
       "wingCfgProfDot11NasPortId": wingCfgProfDot11NasPortId,
       "wingCfgProfCrlUpdate": wingCfgProfCrlUpdate,
       "wingCfgProfCrlUpdateTable": wingCfgProfCrlUpdateTable,
       "wingCfgProfCrlUpdateEntry": wingCfgProfCrlUpdateEntry,
       "wingCfgProfCrlUpdateTrustpoint": wingCfgProfCrlUpdateTrustpoint,
       "wingCfgProfCrlUpdateUrl": wingCfgProfCrlUpdateUrl,
       "wingCfgProfCrlUpdateInterval": wingCfgProfCrlUpdateInterval,
       "wingCfgProfNat": wingCfgProfNat,
       "wingCfgProfNatPoolTable": wingCfgProfNatPoolTable,
       "wingCfgProfNatPoolEntry": wingCfgProfNatPoolEntry,
       "wingCfgProfNatPoolName": wingCfgProfNatPoolName,
       "wingCfgProfNatPoolAddrTable": wingCfgProfNatPoolAddrTable,
       "wingCfgProfNatPoolAddrEntry": wingCfgProfNatPoolAddrEntry,
       "wingCfgProfNatPoolAddrStartIp": wingCfgProfNatPoolAddrStartIp,
       "wingCfgProfNatPoolAddrEndIp": wingCfgProfNatPoolAddrEndIp,
       "wingCfgProfNatBridgeSrcDynamicTable": wingCfgProfNatBridgeSrcDynamicTable,
       "wingCfgProfNatBridgeSrcDynamicEntry": wingCfgProfNatBridgeSrcDynamicEntry,
       "wingCfgProfNatBridgeSrcDynamicAcl": wingCfgProfNatBridgeSrcDynamicAcl,
       "wingCfgProfNatBridgeSrcDynamicIfTable": wingCfgProfNatBridgeSrcDynamicIfTable,
       "wingCfgProfNatBridgeSrcDynamicIfEntry": wingCfgProfNatBridgeSrcDynamicIfEntry,
       "wingCfgProfNatBridgeSrcDynamicIfName": wingCfgProfNatBridgeSrcDynamicIfName,
       "wingCfgProfNatBridgeSrcDynamicIfOverloadType": wingCfgProfNatBridgeSrcDynamicIfOverloadType,
       "wingCfgProfNatBridgeSrcDynamicIfOverloadIp": wingCfgProfNatBridgeSrcDynamicIfOverloadIp,
       "wingCfgProfNatBridgeSrcDynamicIfNatPool": wingCfgProfNatBridgeSrcDynamicIfNatPool,
       "wingCfgProfVpn": wingCfgProfVpn,
       "wingCfgProfVpnTable": wingCfgProfVpnTable,
       "wingCfgProfVpnEntry": wingCfgProfVpnEntry,
       "wingCfgProfVpnLifetimeSeconds": wingCfgProfVpnLifetimeSeconds,
       "wingCfgProfVpnLifetimeKb": wingCfgProfVpnLifetimeKb,
       "wingCfgProfVpnIkev1GlobalDpdKeepalive": wingCfgProfVpnIkev1GlobalDpdKeepalive,
       "wingCfgProfVpnIkev1GlobalDpdRetries": wingCfgProfVpnIkev1GlobalDpdRetries,
       "wingCfgProfVpnIkev1GlobalNatKeepalive": wingCfgProfVpnIkev1GlobalNatKeepalive,
       "wingCfgProfVpnIkev2GlobalDpdKeepalive": wingCfgProfVpnIkev2GlobalDpdKeepalive,
       "wingCfgProfVpnIkev2GlobalDpdRetries": wingCfgProfVpnIkev2GlobalDpdRetries,
       "wingCfgProfVpnIkev2GlobalNatKeepalive": wingCfgProfVpnIkev2GlobalNatKeepalive,
       "wingCfgProfVpnCookieChallengeThreshold": wingCfgProfVpnCookieChallengeThreshold,
       "wingCfgProfVpnMaxInNegotiationSa": wingCfgProfVpnMaxInNegotiationSa,
       "wingCfgProfVpnDfBit": wingCfgProfVpnDfBit,
       "wingCfgProfVpnIkev1Table": wingCfgProfVpnIkev1Table,
       "wingCfgProfVpnIkev1Entry": wingCfgProfVpnIkev1Entry,
       "wingCfgProfVpnIkev1Name": wingCfgProfVpnIkev1Name,
       "wingCfgProfVpnIkev1Mode": wingCfgProfVpnIkev1Mode,
       "wingCfgProfVpnIkev1IsakmpLifetime": wingCfgProfVpnIkev1IsakmpLifetime,
       "wingCfgProfVpnIkev1DpdKeepalive": wingCfgProfVpnIkev1DpdKeepalive,
       "wingCfgProfVpnIkev1DpdRetries": wingCfgProfVpnIkev1DpdRetries,
       "wingCfgProfVpnIkev1IsakmpTable": wingCfgProfVpnIkev1IsakmpTable,
       "wingCfgProfVpnIkev1IsakmpEntry": wingCfgProfVpnIkev1IsakmpEntry,
       "wingCfgProfVpnIkev1IsakmpName": wingCfgProfVpnIkev1IsakmpName,
       "wingCfgProfVpnIkev1IsakmpEncryption": wingCfgProfVpnIkev1IsakmpEncryption,
       "wingCfgProfVpnIkev1IsakmpGroup": wingCfgProfVpnIkev1IsakmpGroup,
       "wingCfgProfVpnIkev1IsakmpHash": wingCfgProfVpnIkev1IsakmpHash,
       "wingCfgProfVpnIkev2Table": wingCfgProfVpnIkev2Table,
       "wingCfgProfVpnIkev2Entry": wingCfgProfVpnIkev2Entry,
       "wingCfgProfVpnIkev2Name": wingCfgProfVpnIkev2Name,
       "wingCfgProfVpnIkev2IsakmpLifetime": wingCfgProfVpnIkev2IsakmpLifetime,
       "wingCfgProfVpnIkev2DpdKeepalive": wingCfgProfVpnIkev2DpdKeepalive,
       "wingCfgProfVpnIkev2IsakmpTable": wingCfgProfVpnIkev2IsakmpTable,
       "wingCfgProfVpnIkev2IsakmpEntry": wingCfgProfVpnIkev2IsakmpEntry,
       "wingCfgProfVpnIkev2IsakmpName": wingCfgProfVpnIkev2IsakmpName,
       "wingCfgProfVpnIkev2IsakmpEncryption": wingCfgProfVpnIkev2IsakmpEncryption,
       "wingCfgProfVpnIkev2IsakmpGroup": wingCfgProfVpnIkev2IsakmpGroup,
       "wingCfgProfVpnIkev2IsakmpHash": wingCfgProfVpnIkev2IsakmpHash,
       "wingCfgProfVpnIkev1PeerTable": wingCfgProfVpnIkev1PeerTable,
       "wingCfgProfVpnIkev1PeerEntry": wingCfgProfVpnIkev1PeerEntry,
       "wingCfgProfVpnIkev1PeerName": wingCfgProfVpnIkev1PeerName,
       "wingCfgProfVpnIkev1PeerIpType": wingCfgProfVpnIkev1PeerIpType,
       "wingCfgProfVpnIkev1PeerIpValue": wingCfgProfVpnIkev1PeerIpValue,
       "wingCfgProfVpnIkev1PeerAuthType": wingCfgProfVpnIkev1PeerAuthType,
       "wingCfgProfVpnIkev1PeerAuthKey": wingCfgProfVpnIkev1PeerAuthKey,
       "wingCfgProfVpnIkev1PeerLocalidType": wingCfgProfVpnIkev1PeerLocalidType,
       "wingCfgProfVpnIkev1PeerLocalidValue": wingCfgProfVpnIkev1PeerLocalidValue,
       "wingCfgProfVpnIkev1PeerRemoteidType": wingCfgProfVpnIkev1PeerRemoteidType,
       "wingCfgProfVpnIkev1PeerRemoteidValue": wingCfgProfVpnIkev1PeerRemoteidValue,
       "wingCfgProfVpnIkev1PeerIkev1Policy": wingCfgProfVpnIkev1PeerIkev1Policy,
       "wingCfgProfVpnIkev2PeerTable": wingCfgProfVpnIkev2PeerTable,
       "wingCfgProfVpnIkev2PeerEntry": wingCfgProfVpnIkev2PeerEntry,
       "wingCfgProfVpnIkev2PeerName": wingCfgProfVpnIkev2PeerName,
       "wingCfgProfVpnIkev2PeerIpType": wingCfgProfVpnIkev2PeerIpType,
       "wingCfgProfVpnIkev2PeerIpValue": wingCfgProfVpnIkev2PeerIpValue,
       "wingCfgProfVpnIkev2PeerLocalAuthType": wingCfgProfVpnIkev2PeerLocalAuthType,
       "wingCfgProfVpnIkev2PeerLocalAuthKey": wingCfgProfVpnIkev2PeerLocalAuthKey,
       "wingCfgProfVpnIkev2PeerRemoteAuthType": wingCfgProfVpnIkev2PeerRemoteAuthType,
       "wingCfgProfVpnIkev2PeerRemoteAuthKey": wingCfgProfVpnIkev2PeerRemoteAuthKey,
       "wingCfgProfVpnIkev2PeerLocalidType": wingCfgProfVpnIkev2PeerLocalidType,
       "wingCfgProfVpnIkev2PeerLocalidValue": wingCfgProfVpnIkev2PeerLocalidValue,
       "wingCfgProfVpnIkev2PeerRemoteidType": wingCfgProfVpnIkev2PeerRemoteidType,
       "wingCfgProfVpnIkev2PeerRemoteidValue": wingCfgProfVpnIkev2PeerRemoteidValue,
       "wingCfgProfVpnIkev2PeerIkev2Policy": wingCfgProfVpnIkev2PeerIkev2Policy,
       "wingCfgProfVpnTransformTable": wingCfgProfVpnTransformTable,
       "wingCfgProfVpnTransformEntry": wingCfgProfVpnTransformEntry,
       "wingCfgProfVpnTransformName": wingCfgProfVpnTransformName,
       "wingCfgProfVpnTransformCipherAlgo": wingCfgProfVpnTransformCipherAlgo,
       "wingCfgProfVpnTransformAuthAlgo": wingCfgProfVpnTransformAuthAlgo,
       "wingCfgProfVpnTransformMode": wingCfgProfVpnTransformMode,
       "wingCfgProfVpnCryptoTable": wingCfgProfVpnCryptoTable,
       "wingCfgProfVpnCryptoEntry": wingCfgProfVpnCryptoEntry,
       "wingCfgProfVpnCryptoName": wingCfgProfVpnCryptoName,
       "wingCfgProfVpnCryptoInstTable": wingCfgProfVpnCryptoInstTable,
       "wingCfgProfVpnCryptoInstEntry": wingCfgProfVpnCryptoInstEntry,
       "wingCfgProfVpnCryptoInstSequence": wingCfgProfVpnCryptoInstSequence,
       "wingCfgProfVpnCryptoInstType": wingCfgProfVpnCryptoInstType,
       "wingCfgProfVpnCryptoInstIpAcl": wingCfgProfVpnCryptoInstIpAcl,
       "wingCfgProfVpnCryptoInstTransformSet": wingCfgProfVpnCryptoInstTransformSet,
       "wingCfgProfVpnCryptoInstLocalip": wingCfgProfVpnCryptoInstLocalip,
       "wingCfgProfVpnCryptoInstPfs": wingCfgProfVpnCryptoInstPfs,
       "wingCfgProfVpnCryptoInstLifetimeSeconds": wingCfgProfVpnCryptoInstLifetimeSeconds,
       "wingCfgProfVpnCryptoInstLifetimeKb": wingCfgProfVpnCryptoInstLifetimeKb,
       "wingCfgProfVpnCryptoInstRemoteType": wingCfgProfVpnCryptoInstRemoteType,
       "wingCfgProfVpnCryptoInstModeconfig": wingCfgProfVpnCryptoInstModeconfig,
       "wingCfgProfVpnCryptoInstPeer": wingCfgProfVpnCryptoInstPeer,
       "wingCfgProfVpnCryptoInstProtocol": wingCfgProfVpnCryptoInstProtocol,
       "wingCfgProfVpnCryptoInstMode": wingCfgProfVpnCryptoInstMode,
       "wingCfgProfVpnCryptoInstPeerListTable": wingCfgProfVpnCryptoInstPeerListTable,
       "wingCfgProfVpnCryptoInstPeerListEntry": wingCfgProfVpnCryptoInstPeerListEntry,
       "wingCfgProfVpnCryptoInstPeerListPriority": wingCfgProfVpnCryptoInstPeerListPriority,
       "wingCfgProfVpnCryptoInstPeerListType": wingCfgProfVpnCryptoInstPeerListType,
       "wingCfgProfVpnCryptoInstPeerListIkev1Peer": wingCfgProfVpnCryptoInstPeerListIkev1Peer,
       "wingCfgProfVpnCryptoInstPeerListIkev2Peer": wingCfgProfVpnCryptoInstPeerListIkev2Peer,
       "wingCfgProfVpnCryptoInstAhSessionTable": wingCfgProfVpnCryptoInstAhSessionTable,
       "wingCfgProfVpnCryptoInstAhSessionEntry": wingCfgProfVpnCryptoInstAhSessionEntry,
       "wingCfgProfVpnCryptoInstAhSessionDirection": wingCfgProfVpnCryptoInstAhSessionDirection,
       "wingCfgProfVpnCryptoInstAhSessionSpi": wingCfgProfVpnCryptoInstAhSessionSpi,
       "wingCfgProfVpnCryptoInstAhSessionAuth": wingCfgProfVpnCryptoInstAhSessionAuth,
       "wingCfgProfVpnCryptoInstAhSessionKey": wingCfgProfVpnCryptoInstAhSessionKey,
       "wingCfgProfVpnCryptoInstEspSessionTable": wingCfgProfVpnCryptoInstEspSessionTable,
       "wingCfgProfVpnCryptoInstEspSessionEntry": wingCfgProfVpnCryptoInstEspSessionEntry,
       "wingCfgProfVpnCryptoInstEspSessionDirection": wingCfgProfVpnCryptoInstEspSessionDirection,
       "wingCfgProfVpnCryptoInstEspSessionSpi": wingCfgProfVpnCryptoInstEspSessionSpi,
       "wingCfgProfVpnCryptoInstEspSessionCipherAlgo": wingCfgProfVpnCryptoInstEspSessionCipherAlgo,
       "wingCfgProfVpnCryptoInstEspSessionCipherKey": wingCfgProfVpnCryptoInstEspSessionCipherKey,
       "wingCfgProfVpnCryptoInstEspSessionAuthAlgo": wingCfgProfVpnCryptoInstEspSessionAuthAlgo,
       "wingCfgProfVpnCryptoInstEspSessionAuthKey": wingCfgProfVpnCryptoInstEspSessionAuthKey,
       "wingCfgProfVpnIkev1RemoteTable": wingCfgProfVpnIkev1RemoteTable,
       "wingCfgProfVpnIkev1RemoteEntry": wingCfgProfVpnIkev1RemoteEntry,
       "wingCfgProfVpnIkev1RemoteAuthMethod": wingCfgProfVpnIkev1RemoteAuthMethod,
       "wingCfgProfVpnIkev1RemoteAaaPolicy": wingCfgProfVpnIkev1RemoteAaaPolicy,
       "wingCfgProfVpnIkev1RemoteIpLocalPool": wingCfgProfVpnIkev1RemoteIpLocalPool,
       "wingCfgProfVpnIkev1RemoteLocalUsersTable": wingCfgProfVpnIkev1RemoteLocalUsersTable,
       "wingCfgProfVpnIkev1RemoteLocalUsersEntry": wingCfgProfVpnIkev1RemoteLocalUsersEntry,
       "wingCfgProfVpnIkev1RemoteLocalUsersName": wingCfgProfVpnIkev1RemoteLocalUsersName,
       "wingCfgProfVpnIkev1RemoteLocalUsersPassword": wingCfgProfVpnIkev1RemoteLocalUsersPassword,
       "wingCfgProfVpnIkev1RemoteWinsTable": wingCfgProfVpnIkev1RemoteWinsTable,
       "wingCfgProfVpnIkev1RemoteWinsEntry": wingCfgProfVpnIkev1RemoteWinsEntry,
       "wingCfgProfVpnIkev1RemoteWinsServerType": wingCfgProfVpnIkev1RemoteWinsServerType,
       "wingCfgProfVpnIkev1RemoteWinsServerIp": wingCfgProfVpnIkev1RemoteWinsServerIp,
       "wingCfgProfVpnIkev1RemoteNameServerTable": wingCfgProfVpnIkev1RemoteNameServerTable,
       "wingCfgProfVpnIkev1RemoteNameServerEntry": wingCfgProfVpnIkev1RemoteNameServerEntry,
       "wingCfgProfVpnIkev1RemoteNameServerType": wingCfgProfVpnIkev1RemoteNameServerType,
       "wingCfgProfVpnIkev1RemoteNameServerIp": wingCfgProfVpnIkev1RemoteNameServerIp,
       "wingCfgProfVpnIkev2RemoteTable": wingCfgProfVpnIkev2RemoteTable,
       "wingCfgProfVpnIkev2RemoteEntry": wingCfgProfVpnIkev2RemoteEntry,
       "wingCfgProfVpnIkev2RemoteAuthMethod": wingCfgProfVpnIkev2RemoteAuthMethod,
       "wingCfgProfVpnIkev2RemoteAaaPolicy": wingCfgProfVpnIkev2RemoteAaaPolicy,
       "wingCfgProfVpnIkev2RemoteIpLocalPool": wingCfgProfVpnIkev2RemoteIpLocalPool,
       "wingCfgProfVpnIkev2RemoteDhcpServerType": wingCfgProfVpnIkev2RemoteDhcpServerType,
       "wingCfgProfVpnIkev2RemoteDhcpServer": wingCfgProfVpnIkev2RemoteDhcpServer,
       "wingCfgProfVpnIkev2RemoteDhcpServerGiaddr": wingCfgProfVpnIkev2RemoteDhcpServerGiaddr,
       "wingCfgProfVpnIkev2RemoteNetmask": wingCfgProfVpnIkev2RemoteNetmask,
       "wingCfgProfVpnIkev2RemoteLocalUsersTable": wingCfgProfVpnIkev2RemoteLocalUsersTable,
       "wingCfgProfVpnIkev2RemoteLocalUsersEntry": wingCfgProfVpnIkev2RemoteLocalUsersEntry,
       "wingCfgProfVpnIkev2RemoteLocalUsersName": wingCfgProfVpnIkev2RemoteLocalUsersName,
       "wingCfgProfVpnIkev2RemoteLocalUsersPassword": wingCfgProfVpnIkev2RemoteLocalUsersPassword,
       "wingCfgProfVpnIkev2RemoteWinsTable": wingCfgProfVpnIkev2RemoteWinsTable,
       "wingCfgProfVpnIkev2RemoteWinsEntry": wingCfgProfVpnIkev2RemoteWinsEntry,
       "wingCfgProfVpnIkev2RemoteWinsServerType": wingCfgProfVpnIkev2RemoteWinsServerType,
       "wingCfgProfVpnIkev2RemoteWinsServerIp": wingCfgProfVpnIkev2RemoteWinsServerIp,
       "wingCfgProfVpnIkev2RemoteNameServerTable": wingCfgProfVpnIkev2RemoteNameServerTable,
       "wingCfgProfVpnIkev2RemoteNameServerEntry": wingCfgProfVpnIkev2RemoteNameServerEntry,
       "wingCfgProfVpnIkev2RemoteNameServerType": wingCfgProfVpnIkev2RemoteNameServerType,
       "wingCfgProfVpnIkev2RemoteNameServerIp": wingCfgProfVpnIkev2RemoteNameServerIp,
       "wingCfgProfVpnAutoIPSecSecureTable": wingCfgProfVpnAutoIPSecSecureTable,
       "wingCfgProfVpnAutoIPSecSecureEntry": wingCfgProfVpnAutoIPSecSecureEntry,
       "wingCfgProfVpnAutoIPSecSecureGroupId": wingCfgProfVpnAutoIPSecSecureGroupId,
       "wingCfgProfVpnAutoIPSecSecureGroupIdAuthType": wingCfgProfVpnAutoIPSecSecureGroupIdAuthType,
       "wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey": wingCfgProfVpnAutoIPSecSecureGroupIdAuthKey,
       "wingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion": wingCfgProfVpnAutoIPSecSecureRemoteGWIkeVersion,
       "wingCfgProfControllerHost": wingCfgProfControllerHost,
       "wingCfgProfControllerHostTable": wingCfgProfControllerHostTable,
       "wingCfgProfControllerHostEntry": wingCfgProfControllerHostEntry,
       "wingCfgProfControllerHostIndex": wingCfgProfControllerHostIndex,
       "wingCfgProfControllerHostRowStatus": wingCfgProfControllerHostRowStatus,
       "wingCfgProfControllerHostHost": wingCfgProfControllerHostHost,
       "wingCfgProfControllerHostPool": wingCfgProfControllerHostPool,
       "wingCfgProfControllerHostLevel": wingCfgProfControllerHostLevel,
       "wingCfgProfDynRoute": wingCfgProfDynRoute,
       "wingCfgProfDynRouteOspfTable": wingCfgProfDynRouteOspfTable,
       "wingCfgProfDynRouteOspfEntry": wingCfgProfDynRouteOspfEntry,
       "wingCfgProfDynRouteOspfEnabled": wingCfgProfDynRouteOspfEnabled,
       "wingCfgProfDynRouteOspfRouterId": wingCfgProfDynRouteOspfRouterId,
       "wingCfgProfDynRouteOspfAutoCost": wingCfgProfDynRouteOspfAutoCost,
       "wingCfgProfDynRouteOspfPassiveAll": wingCfgProfDynRouteOspfPassiveAll,
       "wingCfgProfDynRouteOspfPassive": wingCfgProfDynRouteOspfPassive,
       "wingCfgProfDynRouteOspfPassiveRemoved": wingCfgProfDynRouteOspfPassiveRemoved,
       "wingCfgProfDynRouteOspfVrrpStateCheck": wingCfgProfDynRouteOspfVrrpStateCheck,
       "wingCfgProfDynRouteOspfDefaultRoutePriority": wingCfgProfDynRouteOspfDefaultRoutePriority,
       "wingCfgProfDynRouteOspfNumRoutes": wingCfgProfDynRouteOspfNumRoutes,
       "wingCfgProfDynRouteOspfRetryCount": wingCfgProfDynRouteOspfRetryCount,
       "wingCfgProfDynRouteOspfRetryTimeout": wingCfgProfDynRouteOspfRetryTimeout,
       "wingCfgProfDynRouteOspfResetTime": wingCfgProfDynRouteOspfResetTime,
       "wingCfgProfDynRouteOspfNetworkTable": wingCfgProfDynRouteOspfNetworkTable,
       "wingCfgProfDynRouteOspfNetworkEntry": wingCfgProfDynRouteOspfNetworkEntry,
       "wingCfgProfDynRouteOspfNetwork": wingCfgProfDynRouteOspfNetwork,
       "wingCfgProfDynRouteOspfNetworkAreaId": wingCfgProfDynRouteOspfNetworkAreaId,
       "wingCfgProfDynRouteOspfAreaTable": wingCfgProfDynRouteOspfAreaTable,
       "wingCfgProfDynRouteOspfAreaEntry": wingCfgProfDynRouteOspfAreaEntry,
       "wingCfgProfDynRouteOspfAreaId": wingCfgProfDynRouteOspfAreaId,
       "wingCfgProfDynRouteOspfAreaAuthentication": wingCfgProfDynRouteOspfAreaAuthentication,
       "wingCfgProfDynRouteOspfAreaRange": wingCfgProfDynRouteOspfAreaRange,
       "wingCfgProfDynRouteOspfAreaType": wingCfgProfDynRouteOspfAreaType,
       "wingCfgProfDynRouteOspfAreaDefaultCost": wingCfgProfDynRouteOspfAreaDefaultCost,
       "wingCfgProfDynRouteOspfAreaTranslateType": wingCfgProfDynRouteOspfAreaTranslateType,
       "wingCfgProfDynRouteDefaultInfoTable": wingCfgProfDynRouteDefaultInfoTable,
       "wingCfgProfDynRouteDefaultInfoEntry": wingCfgProfDynRouteDefaultInfoEntry,
       "wingCfgProfDynRouteDefaultInfoOriginate": wingCfgProfDynRouteDefaultInfoOriginate,
       "wingCfgProfDynRouteDefaultInfoAlways": wingCfgProfDynRouteDefaultInfoAlways,
       "wingCfgProfDynRouteDefaultInfoRtMetric": wingCfgProfDynRouteDefaultInfoRtMetric,
       "wingCfgProfDynRouteDefaultInfoRtMetricType": wingCfgProfDynRouteDefaultInfoRtMetricType,
       "wingCfgProfDynRouteRedistributeTable": wingCfgProfDynRouteRedistributeTable,
       "wingCfgProfDynRouteRedistributeEntry": wingCfgProfDynRouteRedistributeEntry,
       "wingCfgProfDynRouteRedistributeRouteType": wingCfgProfDynRouteRedistributeRouteType,
       "wingCfgProfDynRouteRedistributeMetric": wingCfgProfDynRouteRedistributeMetric,
       "wingCfgProfDynRouteRedistributeMetricType": wingCfgProfDynRouteRedistributeMetricType,
       "wingCfgProfVrrp": wingCfgProfVrrp,
       "wingCfgProfVrrpTable": wingCfgProfVrrpTable,
       "wingCfgProfVrrpEntry": wingCfgProfVrrpEntry,
       "wingCfgProfVrrpVersion": wingCfgProfVrrpVersion,
       "wingCfgProfVrrpGroupTable": wingCfgProfVrrpGroupTable,
       "wingCfgProfVrrpGroupEntry": wingCfgProfVrrpGroupEntry,
       "wingCfgProfVrrpGroupVirtualRouterId": wingCfgProfVrrpGroupVirtualRouterId,
       "wingCfgProfVrrpGroupDescription": wingCfgProfVrrpGroupDescription,
       "wingCfgProfVrrpGroupPriority": wingCfgProfVrrpGroupPriority,
       "wingCfgProfVrrpGroupAdvertisementUnit": wingCfgProfVrrpGroupAdvertisementUnit,
       "wingCfgProfVrrpGroupAdvertisementIntervalV2": wingCfgProfVrrpGroupAdvertisementIntervalV2,
       "wingCfgProfVrrpGroupAdvertisementIntervalV2Msec": wingCfgProfVrrpGroupAdvertisementIntervalV2Msec,
       "wingCfgProfVrrpGroupAdvertisementIntervalV3": wingCfgProfVrrpGroupAdvertisementIntervalV3,
       "wingCfgProfVrrpGroupPreempt": wingCfgProfVrrpGroupPreempt,
       "wingCfgProfVrrpGroupPreemptDelay": wingCfgProfVrrpGroupPreemptDelay,
       "wingCfgProfVrrpGroupCrmAction": wingCfgProfVrrpGroupCrmAction,
       "wingCfgProfVrrpGroupDeltaPriority": wingCfgProfVrrpGroupDeltaPriority,
       "wingCfgProfVrrpGroupInterface": wingCfgProfVrrpGroupInterface,
       "wingCfgProfVrrpGroupSyncGroup": wingCfgProfVrrpGroupSyncGroup,
       "wingCfgProfIgs": wingCfgProfIgs,
       "wingCfgProfIgsTable": wingCfgProfIgsTable,
       "wingCfgProfIgsEntry": wingCfgProfIgsEntry,
       "wingCfgProfIgsIpIgmpSnooping": wingCfgProfIgsIpIgmpSnooping,
       "wingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast": wingCfgProfIgsIpIgmpSnoopingForwardUnknownMulticast,
       "wingCfgProfIgsIpIgmpSnoopingQuerier": wingCfgProfIgsIpIgmpSnoopingQuerier,
       "wingCfgProfIgsIpIgmpSnoopingQuerierAddress": wingCfgProfIgsIpIgmpSnoopingQuerierAddress,
       "wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime": wingCfgProfIgsIpIgmpSnoopingQuerierMaxResponseTime,
       "wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry": wingCfgProfIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry,
       "wingCfgProfIgsIpIgmpSnoopingQuerierVersion": wingCfgProfIgsIpIgmpSnoopingQuerierVersion,
       "wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval": wingCfgProfIgsIpIgmpSnoopingQuerierQueryInterval,
       "wingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable": wingCfgProfIgsIpIgmpSnoopingQuerierRobustnessVariable,
       "wingCfgProfCriticalRes": wingCfgProfCriticalRes,
       "wingCfgProfCriticalResMonitorTable": wingCfgProfCriticalResMonitorTable,
       "wingCfgProfCriticalResMonitorEntry": wingCfgProfCriticalResMonitorEntry,
       "wingCfgProfCriticalResMonitorInt": wingCfgProfCriticalResMonitorInt,
       "wingCfgProfCriticalResPolicyTable": wingCfgProfCriticalResPolicyTable,
       "wingCfgProfCriticalResPolicyEntry": wingCfgProfCriticalResPolicyEntry,
       "wingCfgProfCriticalResPolicyVia": wingCfgProfCriticalResPolicyVia,
       "wingCfgProfCriticalResPolicyAnyAll": wingCfgProfCriticalResPolicyAnyAll,
       "wingCfgProfCriticalResourcesTable": wingCfgProfCriticalResourcesTable,
       "wingCfgProfCriticalResourcesEntry": wingCfgProfCriticalResourcesEntry,
       "wingCfgProfCriticalResourcesAddr": wingCfgProfCriticalResourcesAddr,
       "wingCfgProfCriticalResourcesMonitorType": wingCfgProfCriticalResourcesMonitorType,
       "wingCfgProfCriticalResourcesVlan": wingCfgProfCriticalResourcesVlan,
       "wingCfgProfCriticalResourcesPort": wingCfgProfCriticalResourcesPort,
       "wingCfgProfl2tpv3": wingCfgProfl2tpv3,
       "wingCfgProfl2tpv3Table": wingCfgProfl2tpv3Table,
       "wingCfgProfl2tpv3Entry": wingCfgProfl2tpv3Entry,
       "wingCfgProfl2tpv3lUdpListenPort": wingCfgProfl2tpv3lUdpListenPort,
       "wingCfgProfl2tpv3RouterId": wingCfgProfl2tpv3RouterId,
       "wingCfgProfl2tpv3HostName": wingCfgProfl2tpv3HostName,
       "wingCfgProfl2tpv3InterTunnelBridging": wingCfgProfl2tpv3InterTunnelBridging,
       "wingCfgProfl2tpv3TunnelTable": wingCfgProfl2tpv3TunnelTable,
       "wingCfgProfl2tpv3TunnelEntry": wingCfgProfl2tpv3TunnelEntry,
       "wingCfgProfl2tpv3TunnelName": wingCfgProfl2tpv3TunnelName,
       "wingCfgProfl2tpv3TunnelLocalIpAddrss": wingCfgProfl2tpv3TunnelLocalIpAddrss,
       "wingCfgProfl2tpv3TunnelMtu": wingCfgProfl2tpv3TunnelMtu,
       "wingCfgProfl2tpv3TunnelUseTunnelPolicy": wingCfgProfl2tpv3TunnelUseTunnelPolicy,
       "wingCfgProfl2tpv3TunnelHostname": wingCfgProfl2tpv3TunnelHostname,
       "wingCfgProfl2tpv3TunnelRouterId": wingCfgProfl2tpv3TunnelRouterId,
       "wingCfgProfl2tpv3TunnelPeerTable": wingCfgProfl2tpv3TunnelPeerTable,
       "wingCfgProfl2tpv3TunnelPeerEntry": wingCfgProfl2tpv3TunnelPeerEntry,
       "wingCfgProfl2tpv3TunnelPeerId": wingCfgProfl2tpv3TunnelPeerId,
       "wingCfgProfl2tpv3TunnelPeerIp": wingCfgProfl2tpv3TunnelPeerIp,
       "wingCfgProfl2tpv3TunnelPeerHostName": wingCfgProfl2tpv3TunnelPeerHostName,
       "wingCfgProfl2tpv3TunnelPeerRouterId": wingCfgProfl2tpv3TunnelPeerRouterId,
       "wingCfgProfl2tpv3TunnelPeerEncapsulation": wingCfgProfl2tpv3TunnelPeerEncapsulation,
       "wingCfgProfl2tpv3TunnelPeerUDPPort": wingCfgProfl2tpv3TunnelPeerUDPPort,
       "wingCfgProfl2tpv3TunnelSessionTable": wingCfgProfl2tpv3TunnelSessionTable,
       "wingCfgProfl2tpv3TunnelSessionEntry": wingCfgProfl2tpv3TunnelSessionEntry,
       "wingCfgProfl2tpv3TunnelSessionName": wingCfgProfl2tpv3TunnelSessionName,
       "wingCfgProfl2tpv3TunnelSessionPseudoWireId": wingCfgProfl2tpv3TunnelSessionPseudoWireId,
       "wingCfgProfl2tpv3TunnelSessionTrafficSourceType": wingCfgProfl2tpv3TunnelSessionTrafficSourceType,
       "wingCfgProfl2tpv3TunnelSessionTrafficSourceValue": wingCfgProfl2tpv3TunnelSessionTrafficSourceValue,
       "wingCfgProfl2tpv3TunnelSessionNativeVlan": wingCfgProfl2tpv3TunnelSessionNativeVlan,
       "wingCfgProfl2tpv3ManualSessionTable": wingCfgProfl2tpv3ManualSessionTable,
       "wingCfgProfl2tpv3ManualSessionEntry": wingCfgProfl2tpv3ManualSessionEntry,
       "wingCfgProfl2tpv3ManualSessionName": wingCfgProfl2tpv3ManualSessionName,
       "wingCfgProfl2tpv3ManualSessionLocalIpAddr": wingCfgProfl2tpv3ManualSessionLocalIpAddr,
       "wingCfgProfl2tpv3ManualSessionPeerIp": wingCfgProfl2tpv3ManualSessionPeerIp,
       "wingCfgProfl2tpv3ManualSessionPeerEncapsulation": wingCfgProfl2tpv3ManualSessionPeerEncapsulation,
       "wingCfgProfl2tpv3ManualSessionPeerUDPPort": wingCfgProfl2tpv3ManualSessionPeerUDPPort,
       "wingCfgProfl2tpv3ManualSessionMtu": wingCfgProfl2tpv3ManualSessionMtu,
       "wingCfgProfl2tpv3ManualSessionTrafficSource": wingCfgProfl2tpv3ManualSessionTrafficSource,
       "wingCfgProfl2tpv3ManualSessionTrafficSourceValue": wingCfgProfl2tpv3ManualSessionTrafficSourceValue,
       "wingCfgProfl2tpv3ManualSessionNativeVlan": wingCfgProfl2tpv3ManualSessionNativeVlan,
       "wingCfgProfl2tpv3ManualSessionLocalSessionId": wingCfgProfl2tpv3ManualSessionLocalSessionId,
       "wingCfgProfl2tpv3ManualSessionRemoteSessionId": wingCfgProfl2tpv3ManualSessionRemoteSessionId,
       "wingCfgProfl2tpv3ManualSessionCookieTable": wingCfgProfl2tpv3ManualSessionCookieTable,
       "wingCfgProfl2tpv3ManualSessionCookieEntry": wingCfgProfl2tpv3ManualSessionCookieEntry,
       "wingCfgProfl2tpv3ManualSessionCookieEndpoint": wingCfgProfl2tpv3ManualSessionCookieEndpoint,
       "wingCfgProfl2tpv3ManualSessionCookieSize": wingCfgProfl2tpv3ManualSessionCookieSize,
       "wingCfgProfl2tpv3ManualSessionCookieVal1": wingCfgProfl2tpv3ManualSessionCookieVal1,
       "wingCfgProfl2tpv3ManualSessionCookieVal2": wingCfgProfl2tpv3ManualSessionCookieVal2,
       "wingCfgProfMcx": wingCfgProfMcx,
       "wingCfgProfMeshpointDevTable": wingCfgProfMeshpointDevTable,
       "wingCfgProfMeshpointDevEntry": wingCfgProfMeshpointDevEntry,
       "wingCfgProfMeshpointDevName": wingCfgProfMeshpointDevName,
       "wingCfgProfMeshpointDevIsRootDev": wingCfgProfMeshpointDevIsRootDev,
       "wingCfgProfMeshpointDevPreferredRoot": wingCfgProfMeshpointDevPreferredRoot,
       "wingCfgProfMeshpointDevPreferredNeighbor": wingCfgProfMeshpointDevPreferredNeighbor,
       "wingCfgProfMeshpointDevPreferredIf": wingCfgProfMeshpointDevPreferredIf,
       "wingCfgProfMeshpointDevPathMethod": wingCfgProfMeshpointDevPathMethod,
       "wingCfgRfd": wingCfgRfd,
       "wingCfgRfdTable": wingCfgRfdTable,
       "wingCfgRfdEntry": wingCfgRfdEntry,
       "wingCfgRfdName": wingCfgRfdName,
       "wingCfgRfdLocation": wingCfgRfdLocation,
       "wingCfgRfdContact": wingCfgRfdContact,
       "wingCfgRfdTimezone": wingCfgRfdTimezone,
       "wingCfgRfdCountryCode": wingCfgRfdCountryCode,
       "wingCfgRfdSmartRfPolicy": wingCfgRfdSmartRfPolicy,
       "wingCfgRfdWipsPolicyName": wingCfgRfdWipsPolicyName,
       "wingCfgRfdNocUpdateInterval": wingCfgRfdNocUpdateInterval,
       "wingCfgRfdControlVlan": wingCfgRfdControlVlan,
       "wingCfgRfdSmartscanChanlistDynamic": wingCfgRfdSmartscanChanlistDynamic,
       "wingCfgRfdStatsUpdateInterval": wingCfgRfdStatsUpdateInterval,
       "wingCfgRfdSensorSvrTable": wingCfgRfdSensorSvrTable,
       "wingCfgRfdSensorSvrEntry": wingCfgRfdSensorSvrEntry,
       "wingCfgRfdSensorSvrIdx": wingCfgRfdSensorSvrIdx,
       "wingCfgRfdSensorSvrIp": wingCfgRfdSensorSvrIp,
       "wingCfgRfdSensorSvrPort": wingCfgRfdSensorSvrPort,
       "wingCfgRfdWlan": wingCfgRfdWlan,
       "wingCfgRfdWlanSsidOverrideTable": wingCfgRfdWlanSsidOverrideTable,
       "wingCfgRfdWlanSsidOverrideEntry": wingCfgRfdWlanSsidOverrideEntry,
       "wingCfgRfdWlanSsidOverrideWlan": wingCfgRfdWlanSsidOverrideWlan,
       "wingCfgRfdWlanSsidOverrideSsid": wingCfgRfdWlanSsidOverrideSsid,
       "wingCfgRfdWlanVlanOverrideTable": wingCfgRfdWlanVlanOverrideTable,
       "wingCfgRfdWlanVlanOverrideEntry": wingCfgRfdWlanVlanOverrideEntry,
       "wingCfgRfdWlanVlanOverrideWlan": wingCfgRfdWlanVlanOverrideWlan,
       "wingCfgRfdWlanVlanOverrideInstTable": wingCfgRfdWlanVlanOverrideInstTable,
       "wingCfgRfdWlanVlanOverrideInstEntry": wingCfgRfdWlanVlanOverrideInstEntry,
       "wingCfgRfdWlanVlanOverrideInstVlan": wingCfgRfdWlanVlanOverrideInstVlan,
       "wingCfgRfdWlanVlanOverrideInstLimit": wingCfgRfdWlanVlanOverrideInstLimit,
       "wingCfgRfdStatsWindowTable": wingCfgRfdStatsWindowTable,
       "wingCfgRfdStatsWindowEntry": wingCfgRfdStatsWindowEntry,
       "wingCfgRfdStatsWindowIdx": wingCfgRfdStatsWindowIdx,
       "wingCfgRfdStatsWindowSampleInterval": wingCfgRfdStatsWindowSampleInterval,
       "wingCfgRfdStatsWindowWindowSize": wingCfgRfdStatsWindowWindowSize,
       "wingCfgDev": wingCfgDev,
       "wingCfgDevTable": wingCfgDevTable,
       "wingCfgDevEntry": wingCfgDevEntry,
       "wingCfgDevMac": wingCfgDevMac,
       "wingCfgDevHostname": wingCfgDevHostname,
       "wingCfgDevBuilding": wingCfgDevBuilding,
       "wingCfgDevFloor": wingCfgDevFloor,
       "wingCfgDevNumRadios": wingCfgDevNumRadios,
       "wingCfgDevProfileName": wingCfgDevProfileName,
       "wingCfgDevRfDomainName": wingCfgDevRfDomainName,
       "wingCfgDevHttpsTrustpoint": wingCfgDevHttpsTrustpoint,
       "wingCfgDevRadiusCaTrustpoint": wingCfgDevRadiusCaTrustpoint,
       "wingCfgDevRadiusServerTrustpoint": wingCfgDevRadiusServerTrustpoint,
       "wingCfgDevSshRsaKey": wingCfgDevSshRsaKey,
       "wingCfgDevHasOverrides": wingCfgDevHasOverrides,
       "wingCfgDevTunnelController": wingCfgDevTunnelController,
       "wingCfgDevPreferredTunnelController": wingCfgDevPreferredTunnelController,
       "wingCfgDevDot1xSysAuthCtrl": wingCfgDevDot1xSysAuthCtrl,
       "wingCfgDevDot1xGuestVlanCtrl": wingCfgDevDot1xGuestVlanCtrl,
       "wingCfgDevDot1xAaaPolicy": wingCfgDevDot1xAaaPolicy,
       "wingCfgDevIf": wingCfgDevIf,
       "wingCfgDevIfTable": wingCfgDevIfTable,
       "wingCfgDevIfEntry": wingCfgDevIfEntry,
       "wingCfgDevIfName": wingCfgDevIfName,
       "wingCfgDevIfDescription": wingCfgDevIfDescription,
       "wingCfgDevIfType": wingCfgDevIfType,
       "wingCfgDevIfShutdown": wingCfgDevIfShutdown,
       "wingCfgDevIfIpInAcl": wingCfgDevIfIpInAcl,
       "wingCfgDevIfMacInAcl": wingCfgDevIfMacInAcl,
       "wingCfgDevIfEthTable": wingCfgDevIfEthTable,
       "wingCfgDevIfEthEntry": wingCfgDevIfEthEntry,
       "wingCfgDevIfEthSpeed": wingCfgDevIfEthSpeed,
       "wingCfgDevIfEthDuplex": wingCfgDevIfEthDuplex,
       "wingCfgDevIfEthSwitchportMode": wingCfgDevIfEthSwitchportMode,
       "wingCfgDevIfEthSwitchportNativeVlan": wingCfgDevIfEthSwitchportNativeVlan,
       "wingCfgDevIfEthSwitchportNativeVlanTagged": wingCfgDevIfEthSwitchportNativeVlanTagged,
       "wingCfgDevIfEthArpTrust": wingCfgDevIfEthArpTrust,
       "wingCfgDevIfEthDhcpTrust": wingCfgDevIfEthDhcpTrust,
       "wingCfgDevIfEthArpHeaderMismatchValidation": wingCfgDevIfEthArpHeaderMismatchValidation,
       "wingCfgDevIfEthQosTrustDscp": wingCfgDevIfEthQosTrustDscp,
       "wingCfgDevIfEthQosTrust802dot1p": wingCfgDevIfEthQosTrust802dot1p,
       "wingCfgDevIfEthStaticChannelGroup": wingCfgDevIfEthStaticChannelGroup,
       "wingCfgDevIfEthPoeSupported": wingCfgDevIfEthPoeSupported,
       "wingCfgDevIfEthPoePower": wingCfgDevIfEthPoePower,
       "wingCfgDevIfEthPoeLimit": wingCfgDevIfEthPoeLimit,
       "wingCfgDevIfEthPoePriority": wingCfgDevIfEthPoePriority,
       "wingCfgDevIfEthDot1xSupported": wingCfgDevIfEthDot1xSupported,
       "wingCfgDevIfEthDot1xEnable": wingCfgDevIfEthDot1xEnable,
       "wingCfgDevIfEthDot1xUsername": wingCfgDevIfEthDot1xUsername,
       "wingCfgDevIfEthDot1xPassword": wingCfgDevIfEthDot1xPassword,
       "wingCfgDevIfEthCdpReceive": wingCfgDevIfEthCdpReceive,
       "wingCfgDevIfEthCdpTransmit": wingCfgDevIfEthCdpTransmit,
       "wingCfgDevIfEthLldpReceive": wingCfgDevIfEthLldpReceive,
       "wingCfgDevIfEthLldpTransmit": wingCfgDevIfEthLldpTransmit,
       "wingCfgDevIfEthPortChannelLoadBalance": wingCfgDevIfEthPortChannelLoadBalance,
       "wingCfgDevIfVlanTable": wingCfgDevIfVlanTable,
       "wingCfgDevIfVlanEntry": wingCfgDevIfVlanEntry,
       "wingCfgDevIfVlanVlan": wingCfgDevIfVlanVlan,
       "wingCfgDevIfVlanDhcpcOptAll": wingCfgDevIfVlanDhcpcOptAll,
       "wingCfgDevIfVlanNatDirection": wingCfgDevIfVlanNatDirection,
       "wingCfgDevIfVlanCryptoMap": wingCfgDevIfVlanCryptoMap,
       "wingCfgDevIfVlanDhcpRelayIncoming": wingCfgDevIfVlanDhcpRelayIncoming,
       "wingCfgDevIfRadioTable": wingCfgDevIfRadioTable,
       "wingCfgDevIfRadioEntry": wingCfgDevIfRadioEntry,
       "wingCfgDevIfRadioRfMode": wingCfgDevIfRadioRfMode,
       "wingCfgDevIfRadioChannel": wingCfgDevIfRadioChannel,
       "wingCfgDevIfRadioPower": wingCfgDevIfRadioPower,
       "wingCfgDevIfRadioPlacement": wingCfgDevIfRadioPlacement,
       "wingCfgDevIfRadioBeaconInterval": wingCfgDevIfRadioBeaconInterval,
       "wingCfgDevIfRadioRtsThreshold": wingCfgDevIfRadioRtsThreshold,
       "wingCfgDevIfRadioOffChannelScan": wingCfgDevIfRadioOffChannelScan,
       "wingCfgDevIfRadioPreambleShort": wingCfgDevIfRadioPreambleShort,
       "wingCfgDevIfRadioGuardInterval": wingCfgDevIfRadioGuardInterval,
       "wingCfgDevIfRadioAmpduMode": wingCfgDevIfRadioAmpduMode,
       "wingCfgDevIfRadioAmsduMode": wingCfgDevIfRadioAmsduMode,
       "wingCfgDevIfRadioRifsMode": wingCfgDevIfRadioRifsMode,
       "wingCfgDevIfRadioAmpduMaxAggrSizeRx": wingCfgDevIfRadioAmpduMaxAggrSizeRx,
       "wingCfgDevIfRadioAmpduMaxAggrSizeTx": wingCfgDevIfRadioAmpduMaxAggrSizeTx,
       "wingCfgDevIfRadioAmpduMinSpacing": wingCfgDevIfRadioAmpduMinSpacing,
       "wingCfgDevIfRadioAntennaMode": wingCfgDevIfRadioAntennaMode,
       "wingCfgDevIfRadioNonUnicastForwarding": wingCfgDevIfRadioNonUnicastForwarding,
       "wingCfgDevIfRadioDynamicChainSelection": wingCfgDevIfRadioDynamicChainSelection,
       "wingCfgDevIfRadioLockRfMode": wingCfgDevIfRadioLockRfMode,
       "wingCfgDevIfRadioSnifferRedirHost": wingCfgDevIfRadioSnifferRedirHost,
       "wingCfgDevIfRadioSnifferRedirChannel": wingCfgDevIfRadioSnifferRedirChannel,
       "wingCfgDevIfRadioMesh": wingCfgDevIfRadioMesh,
       "wingCfgDevIfRadioMeshLinks": wingCfgDevIfRadioMeshLinks,
       "wingCfgDevIfRadioProbeResponseRetry": wingCfgDevIfRadioProbeResponseRetry,
       "wingCfgDevIfRadioProbeResponseRate": wingCfgDevIfRadioProbeResponseRate,
       "wingCfgDevIfRadioMaxClients": wingCfgDevIfRadioMaxClients,
       "wingCfgDevIfRadioRadioTapMode": wingCfgDevIfRadioRadioTapMode,
       "wingCfgDevIfRadioWirelessClientPower": wingCfgDevIfRadioWirelessClientPower,
       "wingCfgDevIfRadioLoadBalLfCount": wingCfgDevIfRadioLoadBalLfCount,
       "wingCfgDevIfRadioLoadBalLfThroughput": wingCfgDevIfRadioLoadBalLfThroughput,
       "wingCfgDevIfRadioLoadBalWmCount": wingCfgDevIfRadioLoadBalWmCount,
       "wingCfgDevIfRadioLoadBalWmTput": wingCfgDevIfRadioLoadBalWmTput,
       "wingCfgDevIfRadioAssocAcl": wingCfgDevIfRadioAssocAcl,
       "wingCfgDevIfRadioQosPolicy": wingCfgDevIfRadioQosPolicy,
       "wingCfgDevIfRadioAntennaDowntilt": wingCfgDevIfRadioAntennaDowntilt,
       "wingCfgDevIfRadioExtendedRange": wingCfgDevIfRadioExtendedRange,
       "wingCfgDevIfRadioBssmapTable": wingCfgDevIfRadioBssmapTable,
       "wingCfgDevIfRadioBssmapEntry": wingCfgDevIfRadioBssmapEntry,
       "wingCfgDevIfRadioBssmapWlan": wingCfgDevIfRadioBssmapWlan,
       "wingCfgDevIfRadioBssmapBss": wingCfgDevIfRadioBssmapBss,
       "wingCfgDevIfRadioBssmapPrimary": wingCfgDevIfRadioBssmapPrimary,
       "wingCfgDevIfSpanTreeTable": wingCfgDevIfSpanTreeTable,
       "wingCfgDevIfSpanTreeEntry": wingCfgDevIfSpanTreeEntry,
       "wingCfgDevIfSpanTreeLinkType": wingCfgDevIfSpanTreeLinkType,
       "wingCfgDevIfSpanTreePortfast": wingCfgDevIfSpanTreePortfast,
       "wingCfgDevIfSpanTreeEdgeport": wingCfgDevIfSpanTreeEdgeport,
       "wingCfgDevIfSpanTreeBpduguard": wingCfgDevIfSpanTreeBpduguard,
       "wingCfgDevIfSpanTreeBpdufilter": wingCfgDevIfSpanTreeBpdufilter,
       "wingCfgDevIfSpanTreePortCiscoInterop": wingCfgDevIfSpanTreePortCiscoInterop,
       "wingCfgDevIfSpanTreeForceVersion": wingCfgDevIfSpanTreeForceVersion,
       "wingCfgDevIfSpanTreeGuard": wingCfgDevIfSpanTreeGuard,
       "wingCfgDevIfVlanOspfTable": wingCfgDevIfVlanOspfTable,
       "wingCfgDevIfVlanOspfEntry": wingCfgDevIfVlanOspfEntry,
       "wingCfgDevIfVlanOspfOspfAuthentication": wingCfgDevIfVlanOspfOspfAuthentication,
       "wingCfgDevIfVlanOspfOspfAuthKey": wingCfgDevIfVlanOspfOspfAuthKey,
       "wingCfgDevIfVlanOspfOspfPriority": wingCfgDevIfVlanOspfOspfPriority,
       "wingCfgDevIfVlanOspfOspfCost": wingCfgDevIfVlanOspfOspfCost,
       "wingCfgDevIfVlanOspfOspfBandWidth": wingCfgDevIfVlanOspfOspfBandWidth,
       "wingCfgDevIfVlanOspfMsgDigestTable": wingCfgDevIfVlanOspfMsgDigestTable,
       "wingCfgDevIfVlanOspfMsgDigestEntry": wingCfgDevIfVlanOspfMsgDigestEntry,
       "wingCfgDevIfVlanOspfMsgDigestKeyId": wingCfgDevIfVlanOspfMsgDigestKeyId,
       "wingCfgDevIfVlanOspfMsgDigestMessageDigest": wingCfgDevIfVlanOspfMsgDigestMessageDigest,
       "wingCfgDevIfPppoeTable": wingCfgDevIfPppoeTable,
       "wingCfgDevIfPppoeEntry": wingCfgDevIfPppoeEntry,
       "wingCfgDevIfPppoeAuthType": wingCfgDevIfPppoeAuthType,
       "wingCfgDevIfPppoeIdleTime": wingCfgDevIfPppoeIdleTime,
       "wingCfgDevIfPppoeKeepalive": wingCfgDevIfPppoeKeepalive,
       "wingCfgDevIfPppoeUsername": wingCfgDevIfPppoeUsername,
       "wingCfgDevIfPppoePassword": wingCfgDevIfPppoePassword,
       "wingCfgDevIfPppoeService": wingCfgDevIfPppoeService,
       "wingCfgDevIfPppoeLocalnetVlan": wingCfgDevIfPppoeLocalnetVlan,
       "wingCfgDevIfPppoeMtu": wingCfgDevIfPppoeMtu,
       "wingCfgDevIfPppoeDefaultRoutePriority": wingCfgDevIfPppoeDefaultRoutePriority,
       "wingCfgDevIfPppoeIp": wingCfgDevIfPppoeIp,
       "wingCfgDevIfT1E1Table": wingCfgDevIfT1E1Table,
       "wingCfgDevIfT1E1Entry": wingCfgDevIfT1E1Entry,
       "wingCfgDevIfT1E1Media": wingCfgDevIfT1E1Media,
       "wingCfgDevIfT1E1ClockMode": wingCfgDevIfT1E1ClockMode,
       "wingCfgDevIfT1E1HighImpedance": wingCfgDevIfT1E1HighImpedance,
       "wingCfgDevIfT1E1LineBuildOut": wingCfgDevIfT1E1LineBuildOut,
       "wingCfgDevIfT1E1LineEncoding": wingCfgDevIfT1E1LineEncoding,
       "wingCfgDevIfT1E1RxSensitivityLevel": wingCfgDevIfT1E1RxSensitivityLevel,
       "wingCfgDevIfSerialTable": wingCfgDevIfSerialTable,
       "wingCfgDevIfSerialEntry": wingCfgDevIfSerialEntry,
       "wingCfgDevIfSerialAuthentication": wingCfgDevIfSerialAuthentication,
       "wingCfgDevIfSerialEncapsulation": wingCfgDevIfSerialEncapsulation,
       "wingCfgDevIfSerialLocalIpAddress": wingCfgDevIfSerialLocalIpAddress,
       "wingCfgDevIfSerialUsername": wingCfgDevIfSerialUsername,
       "wingCfgDevIfSerialPassword": wingCfgDevIfSerialPassword,
       "wingCfgDevIfSerialRemoteIpSubnet": wingCfgDevIfSerialRemoteIpSubnet,
       "wingCfgDevIfDot1xAuthTable": wingCfgDevIfDot1xAuthTable,
       "wingCfgDevIfDot1xAuthEntry": wingCfgDevIfDot1xAuthEntry,
       "wingCfgDevIfDot1xAuthHostMode": wingCfgDevIfDot1xAuthHostMode,
       "wingCfgDevIfDot1xAuthGuestVlan": wingCfgDevIfDot1xAuthGuestVlan,
       "wingCfgDevIfDot1xAuthPortControl": wingCfgDevIfDot1xAuthPortControl,
       "wingCfgDevIfDot1xAuthReauthenticate": wingCfgDevIfDot1xAuthReauthenticate,
       "wingCfgDevIfDot1xAuthMaxReauthCount": wingCfgDevIfDot1xAuthMaxReauthCount,
       "wingCfgDevIfDot1xAuthMaxReq": wingCfgDevIfDot1xAuthMaxReq,
       "wingCfgDevIfDot1xAuthQuietPeriod": wingCfgDevIfDot1xAuthQuietPeriod,
       "wingCfgDevIfDot1xAuthReauthPeriod": wingCfgDevIfDot1xAuthReauthPeriod,
       "wingCfgDevIfMeshpointBssmapTable": wingCfgDevIfMeshpointBssmapTable,
       "wingCfgDevIfMeshpointBssmapEntry": wingCfgDevIfMeshpointBssmapEntry,
       "wingCfgDevIfMeshpointBssmapMeshpoint": wingCfgDevIfMeshpointBssmapMeshpoint,
       "wingCfgDevIfMeshpointBssmapBss": wingCfgDevIfMeshpointBssmapBss,
       "wingCfgDevBridgeVlan": wingCfgDevBridgeVlan,
       "wingCfgDevBridgeVlanTable": wingCfgDevBridgeVlanTable,
       "wingCfgDevBridgeVlanEntry": wingCfgDevBridgeVlanEntry,
       "wingCfgDevBridgeVlanId": wingCfgDevBridgeVlanId,
       "wingCfgDevBridgeVlanDescription": wingCfgDevBridgeVlanDescription,
       "wingCfgDevBridgeVlanEdgeVlan": wingCfgDevBridgeVlanEdgeVlan,
       "wingCfgDevBridgeVlanBridgingMode": wingCfgDevBridgeVlanBridgingMode,
       "wingCfgDevBridgeVlanIpArpTrust": wingCfgDevBridgeVlanIpArpTrust,
       "wingCfgDevBridgeVlanIpDhcpTrust": wingCfgDevBridgeVlanIpDhcpTrust,
       "wingCfgDevBridgeVlanTunnelMacOutAcl": wingCfgDevBridgeVlanTunnelMacOutAcl,
       "wingCfgDevBridgeVlanTunnelIpOutAcl": wingCfgDevBridgeVlanTunnelIpOutAcl,
       "wingCfgDevBridgeVlanIgsTable": wingCfgDevBridgeVlanIgsTable,
       "wingCfgDevBridgeVlanIgsEntry": wingCfgDevBridgeVlanIgsEntry,
       "wingCfgDevBridgeVlanIgsIpIgs": wingCfgDevBridgeVlanIgsIpIgs,
       "wingCfgDevBridgeVlanIgsIpIgsQuerier": wingCfgDevBridgeVlanIgsIpIgsQuerier,
       "wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime": wingCfgDevBridgeVlanIgsIpIgsQuerierMaxResponseTime,
       "wingCfgDevBridgeVlanIgsIpIgsQuerierVersion": wingCfgDevBridgeVlanIgsIpIgsQuerierVersion,
       "wingCfgDevBridgeVlanIgsIpIgsQuerierAddress": wingCfgDevBridgeVlanIgsIpIgsQuerierAddress,
       "wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry": wingCfgDevBridgeVlanIgsIpIgsOtherQuerierTimerExpiry,
       "wingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast": wingCfgDevBridgeVlanIgsIpIgsForwardUnknownMcast,
       "wingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp": wingCfgDevBridgeVlanIgsIpIgsMrouterLearnPimDvmrp,
       "wingCfgDevMint": wingCfgDevMint,
       "wingCfgDevMintTable": wingCfgDevMintTable,
       "wingCfgDevMintEntry": wingCfgDevMintEntry,
       "wingCfgDevMintLevel1AreaId": wingCfgDevMintLevel1AreaId,
       "wingCfgDevMintSpfLatency": wingCfgDevMintSpfLatency,
       "wingCfgDevMintDisPriorityAdjustment": wingCfgDevMintDisPriorityAdjustment,
       "wingCfgDevMintMlcpVlan": wingCfgDevMintMlcpVlan,
       "wingCfgDevMintMlcpIp": wingCfgDevMintMlcpIp,
       "wingCfgDevMintTunnelControllerLoadBalancingLevel1": wingCfgDevMintTunnelControllerLoadBalancingLevel1,
       "wingCfgDevDot11": wingCfgDevDot11,
       "wingCfgDevDot11Table": wingCfgDevDot11Table,
       "wingCfgDevDot11Entry": wingCfgDevDot11Entry,
       "wingCfgDevDot11WepSharedKeyAuth": wingCfgDevDot11WepSharedKeyAuth,
       "wingCfgDevDot11LegacyAutoUpdate": wingCfgDevDot11LegacyAutoUpdate,
       "wingCfgDevDot11LegacyAutoUpdateImgAp7131": wingCfgDevDot11LegacyAutoUpdateImgAp7131,
       "wingCfgDevDot11LegacyAutoDowngrade": wingCfgDevDot11LegacyAutoDowngrade,
       "wingCfgDevDot11NasIdentifier": wingCfgDevDot11NasIdentifier,
       "wingCfgDevDot11NasPortId": wingCfgDevDot11NasPortId,
       "wingCfgDevNat": wingCfgDevNat,
       "wingCfgDevNatPoolTable": wingCfgDevNatPoolTable,
       "wingCfgDevNatPoolEntry": wingCfgDevNatPoolEntry,
       "wingCfgDevNatPoolName": wingCfgDevNatPoolName,
       "wingCfgDevNatPoolAddrTable": wingCfgDevNatPoolAddrTable,
       "wingCfgDevNatPoolAddrEntry": wingCfgDevNatPoolAddrEntry,
       "wingCfgDevNatPoolAddrStartIp": wingCfgDevNatPoolAddrStartIp,
       "wingCfgDevNatPoolAddrEndIp": wingCfgDevNatPoolAddrEndIp,
       "wingCfgDevNatBridgeSrcDynamicTable": wingCfgDevNatBridgeSrcDynamicTable,
       "wingCfgDevNatBridgeSrcDynamicEntry": wingCfgDevNatBridgeSrcDynamicEntry,
       "wingCfgDevNatBridgeSrcDynamicAcl": wingCfgDevNatBridgeSrcDynamicAcl,
       "wingCfgDevNatBridgeSrcDynamicIfTable": wingCfgDevNatBridgeSrcDynamicIfTable,
       "wingCfgDevNatBridgeSrcDynamicIfEntry": wingCfgDevNatBridgeSrcDynamicIfEntry,
       "wingCfgDevNatBridgeSrcDynamicIfName": wingCfgDevNatBridgeSrcDynamicIfName,
       "wingCfgDevNatBridgeSrcDynamicIfOverloadType": wingCfgDevNatBridgeSrcDynamicIfOverloadType,
       "wingCfgDevNatBridgeSrcDynamicIfOverloadIp": wingCfgDevNatBridgeSrcDynamicIfOverloadIp,
       "wingCfgDevNatBridgeSrcDynamicIfNatPool": wingCfgDevNatBridgeSrcDynamicIfNatPool,
       "wingCfgDevVpn": wingCfgDevVpn,
       "wingCfgDevVpnTable": wingCfgDevVpnTable,
       "wingCfgDevVpnEntry": wingCfgDevVpnEntry,
       "wingCfgDevVpnLifetimeSeconds": wingCfgDevVpnLifetimeSeconds,
       "wingCfgDevVpnLifetimeKb": wingCfgDevVpnLifetimeKb,
       "wingCfgDevVpnIkev1GlobalDpdKeepalive": wingCfgDevVpnIkev1GlobalDpdKeepalive,
       "wingCfgDevVpnIkev1GlobalDpdRetries": wingCfgDevVpnIkev1GlobalDpdRetries,
       "wingCfgDevVpnIkev1GlobalNatKeepalive": wingCfgDevVpnIkev1GlobalNatKeepalive,
       "wingCfgDevVpnIkev2GlobalDpdKeepalive": wingCfgDevVpnIkev2GlobalDpdKeepalive,
       "wingCfgDevVpnIkev2GlobalDpdRetries": wingCfgDevVpnIkev2GlobalDpdRetries,
       "wingCfgDevVpnIkev2GlobalNatKeepalive": wingCfgDevVpnIkev2GlobalNatKeepalive,
       "wingCfgDevVpnCookieChallengeThreshold": wingCfgDevVpnCookieChallengeThreshold,
       "wingCfgDevVpnMaxInNegotiationSa": wingCfgDevVpnMaxInNegotiationSa,
       "wingCfgDevVpnDfBit": wingCfgDevVpnDfBit,
       "wingCfgDevVpnIkev1Table": wingCfgDevVpnIkev1Table,
       "wingCfgDevVpnIkev1Entry": wingCfgDevVpnIkev1Entry,
       "wingCfgDevVpnIkev1Name": wingCfgDevVpnIkev1Name,
       "wingCfgDevVpnIkev1Mode": wingCfgDevVpnIkev1Mode,
       "wingCfgDevVpnIkev1IsakmpLifetime": wingCfgDevVpnIkev1IsakmpLifetime,
       "wingCfgDevVpnIkev1DpdKeepalive": wingCfgDevVpnIkev1DpdKeepalive,
       "wingCfgDevVpnIkev1DpdRetries": wingCfgDevVpnIkev1DpdRetries,
       "wingCfgDevVpnIkev1IsakmpTable": wingCfgDevVpnIkev1IsakmpTable,
       "wingCfgDevVpnIkev1IsakmpEntry": wingCfgDevVpnIkev1IsakmpEntry,
       "wingCfgDevVpnIkev1IsakmpName": wingCfgDevVpnIkev1IsakmpName,
       "wingCfgDevVpnIkev1IsakmpEncryption": wingCfgDevVpnIkev1IsakmpEncryption,
       "wingCfgDevVpnIkev1IsakmpGroup": wingCfgDevVpnIkev1IsakmpGroup,
       "wingCfgDevVpnIkev1IsakmpHash": wingCfgDevVpnIkev1IsakmpHash,
       "wingCfgDevVpnIkev2Table": wingCfgDevVpnIkev2Table,
       "wingCfgDevVpnIkev2Entry": wingCfgDevVpnIkev2Entry,
       "wingCfgDevVpnIkev2Name": wingCfgDevVpnIkev2Name,
       "wingCfgDevVpnIkev2IkeLifetime": wingCfgDevVpnIkev2IkeLifetime,
       "wingCfgDevVpnIkev2DpdKeepalive": wingCfgDevVpnIkev2DpdKeepalive,
       "wingCfgDevVpnIkev2IsakmpTable": wingCfgDevVpnIkev2IsakmpTable,
       "wingCfgDevVpnIkev2IsakmpEntry": wingCfgDevVpnIkev2IsakmpEntry,
       "wingCfgDevVpnIkev2IsakmpName": wingCfgDevVpnIkev2IsakmpName,
       "wingCfgDevVpnIkev2IsakmpEncryption": wingCfgDevVpnIkev2IsakmpEncryption,
       "wingCfgDevVpnIkev2IsakmpGroup": wingCfgDevVpnIkev2IsakmpGroup,
       "wingCfgDevVpnIkev2IsakmpHash": wingCfgDevVpnIkev2IsakmpHash,
       "wingCfgDevVpnIkev1PeerTable": wingCfgDevVpnIkev1PeerTable,
       "wingCfgDevVpnIkev1PeerEntry": wingCfgDevVpnIkev1PeerEntry,
       "wingCfgDevVpnIkev1PeerName": wingCfgDevVpnIkev1PeerName,
       "wingCfgDevVpnIkev1PeerIpType": wingCfgDevVpnIkev1PeerIpType,
       "wingCfgDevVpnIkev1PeerIpValue": wingCfgDevVpnIkev1PeerIpValue,
       "wingCfgDevVpnIkev1PeerAuthType": wingCfgDevVpnIkev1PeerAuthType,
       "wingCfgDevVpnIkev1PeerAuthKey": wingCfgDevVpnIkev1PeerAuthKey,
       "wingCfgDevVpnIkev1PeerLocalidType": wingCfgDevVpnIkev1PeerLocalidType,
       "wingCfgDevVpnIkev1PeerLocalidValue": wingCfgDevVpnIkev1PeerLocalidValue,
       "wingCfgDevVpnIkev1PeerRemoteidType": wingCfgDevVpnIkev1PeerRemoteidType,
       "wingCfgDevVpnIkev1PeerRemoteidValue": wingCfgDevVpnIkev1PeerRemoteidValue,
       "wingCfgDevVpnIkev1PeerIkev1Policy": wingCfgDevVpnIkev1PeerIkev1Policy,
       "wingCfgDevVpnIkev2PeerTable": wingCfgDevVpnIkev2PeerTable,
       "wingCfgDevVpnIkev2PeerEntry": wingCfgDevVpnIkev2PeerEntry,
       "wingCfgDevVpnIkev2PeerName": wingCfgDevVpnIkev2PeerName,
       "wingCfgDevVpnIkev2PeerIpType": wingCfgDevVpnIkev2PeerIpType,
       "wingCfgDevVpnIkev2PeerIpValue": wingCfgDevVpnIkev2PeerIpValue,
       "wingCfgDevVpnIkev2PeerLocalAuthType": wingCfgDevVpnIkev2PeerLocalAuthType,
       "wingCfgDevVpnIkev2PeerLocalAuthKey": wingCfgDevVpnIkev2PeerLocalAuthKey,
       "wingCfgDevVpnIkev2PeerRemoteAuthType": wingCfgDevVpnIkev2PeerRemoteAuthType,
       "wingCfgDevVpnIkev2PeerRemoteAuthKey": wingCfgDevVpnIkev2PeerRemoteAuthKey,
       "wingCfgDevVpnIkev2PeerLocalidType": wingCfgDevVpnIkev2PeerLocalidType,
       "wingCfgDevVpnIkev2PeerLocalidValue": wingCfgDevVpnIkev2PeerLocalidValue,
       "wingCfgDevVpnIkev2PeerRemoteidType": wingCfgDevVpnIkev2PeerRemoteidType,
       "wingCfgDevVpnIkev2PeerRemoteidValue": wingCfgDevVpnIkev2PeerRemoteidValue,
       "wingCfgDevVpnIkev2PeerIkev2Policy": wingCfgDevVpnIkev2PeerIkev2Policy,
       "wingCfgDevVpnTransformTable": wingCfgDevVpnTransformTable,
       "wingCfgDevVpnTransformEntry": wingCfgDevVpnTransformEntry,
       "wingCfgDevVpnTransformName": wingCfgDevVpnTransformName,
       "wingCfgDevVpnTransformCipherAlgo": wingCfgDevVpnTransformCipherAlgo,
       "wingCfgDevVpnTransformAuthAlgo": wingCfgDevVpnTransformAuthAlgo,
       "wingCfgDevVpnTransformMode": wingCfgDevVpnTransformMode,
       "wingCfgDevVpnCryptoTable": wingCfgDevVpnCryptoTable,
       "wingCfgDevVpnCryptoEntry": wingCfgDevVpnCryptoEntry,
       "wingCfgDevVpnCryptoName": wingCfgDevVpnCryptoName,
       "wingCfgDevVpnCryptoInstTable": wingCfgDevVpnCryptoInstTable,
       "wingCfgDevVpnCryptoInstEntry": wingCfgDevVpnCryptoInstEntry,
       "wingCfgDevVpnCryptoInstSequence": wingCfgDevVpnCryptoInstSequence,
       "wingCfgDevVpnCryptoInstType": wingCfgDevVpnCryptoInstType,
       "wingCfgDevVpnCryptoInstIpAcl": wingCfgDevVpnCryptoInstIpAcl,
       "wingCfgDevVpnCryptoInstTransformSet": wingCfgDevVpnCryptoInstTransformSet,
       "wingCfgDevVpnCryptoInstLocalip": wingCfgDevVpnCryptoInstLocalip,
       "wingCfgDevVpnCryptoInstPfs": wingCfgDevVpnCryptoInstPfs,
       "wingCfgDevVpnCryptoInstLifetimeSeconds": wingCfgDevVpnCryptoInstLifetimeSeconds,
       "wingCfgDevVpnCryptoInstLifetimeKb": wingCfgDevVpnCryptoInstLifetimeKb,
       "wingCfgDevVpnCryptoInstRemoteType": wingCfgDevVpnCryptoInstRemoteType,
       "wingCfgDevVpnCryptoInstModeconfig": wingCfgDevVpnCryptoInstModeconfig,
       "wingCfgDevVpnCryptoInstPeer": wingCfgDevVpnCryptoInstPeer,
       "wingCfgDevVpnCryptoInstProtocol": wingCfgDevVpnCryptoInstProtocol,
       "wingCfgDevVpnCryptoInstMode": wingCfgDevVpnCryptoInstMode,
       "wingCfgDevVpnCryptoInstPeerListTable": wingCfgDevVpnCryptoInstPeerListTable,
       "wingCfgDevVpnCryptoInstPeerListEntry": wingCfgDevVpnCryptoInstPeerListEntry,
       "wingCfgDevVpnCryptoInstPeerListPriority": wingCfgDevVpnCryptoInstPeerListPriority,
       "wingCfgDevVpnCryptoInstPeerListType": wingCfgDevVpnCryptoInstPeerListType,
       "wingCfgDevVpnCryptoInstPeerListIkev1Peer": wingCfgDevVpnCryptoInstPeerListIkev1Peer,
       "wingCfgDevVpnCryptoInstPeerListIkev2Peer": wingCfgDevVpnCryptoInstPeerListIkev2Peer,
       "wingCfgDevVpnCryptoInstAhSessionTable": wingCfgDevVpnCryptoInstAhSessionTable,
       "wingCfgDevVpnCryptoInstAhSessionEntry": wingCfgDevVpnCryptoInstAhSessionEntry,
       "wingCfgDevVpnCryptoInstAhSessionDirection": wingCfgDevVpnCryptoInstAhSessionDirection,
       "wingCfgDevVpnCryptoInstAhSessionSpi": wingCfgDevVpnCryptoInstAhSessionSpi,
       "wingCfgDevVpnCryptoInstAhSessionAuthAlgo": wingCfgDevVpnCryptoInstAhSessionAuthAlgo,
       "wingCfgDevVpnCryptoInstAhSessionKey": wingCfgDevVpnCryptoInstAhSessionKey,
       "wingCfgDevVpnCryptoInstEspSessionTable": wingCfgDevVpnCryptoInstEspSessionTable,
       "wingCfgDevVpnCryptoInstEspSessionEntry": wingCfgDevVpnCryptoInstEspSessionEntry,
       "wingCfgDevVpnCryptoInstEspSessionDirection": wingCfgDevVpnCryptoInstEspSessionDirection,
       "wingCfgDevVpnCryptoInstEspSessionSpi": wingCfgDevVpnCryptoInstEspSessionSpi,
       "wingCfgDevVpnCryptoInstEspSessionCipherAlgo": wingCfgDevVpnCryptoInstEspSessionCipherAlgo,
       "wingCfgDevVpnCryptoInstEspSessionCipherKey": wingCfgDevVpnCryptoInstEspSessionCipherKey,
       "wingCfgDevVpnCryptoInstEspSessionAuthAlgo": wingCfgDevVpnCryptoInstEspSessionAuthAlgo,
       "wingCfgDevVpnCryptoInstEspSessionAuthKey": wingCfgDevVpnCryptoInstEspSessionAuthKey,
       "wingCfgDevVpnIkev1RemoteTable": wingCfgDevVpnIkev1RemoteTable,
       "wingCfgDevVpnIkev1RemoteEntry": wingCfgDevVpnIkev1RemoteEntry,
       "wingCfgDevVpnIkev1RemoteAuthMethod": wingCfgDevVpnIkev1RemoteAuthMethod,
       "wingCfgDevVpnIkev1RemoteAaaPolicy": wingCfgDevVpnIkev1RemoteAaaPolicy,
       "wingCfgDevVpnIkev1RemoteIpLocalPool": wingCfgDevVpnIkev1RemoteIpLocalPool,
       "wingCfgDevVpnIkev1RemoteLocalUsersTable": wingCfgDevVpnIkev1RemoteLocalUsersTable,
       "wingCfgDevVpnIkev1RemoteLocalUsersEntry": wingCfgDevVpnIkev1RemoteLocalUsersEntry,
       "wingCfgDevVpnIkev1RemoteLocalUsersName": wingCfgDevVpnIkev1RemoteLocalUsersName,
       "wingCfgDevVpnIkev1RemoteLocalUsersPassword": wingCfgDevVpnIkev1RemoteLocalUsersPassword,
       "wingCfgDevVpnIkev1RemoteWinsTable": wingCfgDevVpnIkev1RemoteWinsTable,
       "wingCfgDevVpnIkev1RemoteWinsEntry": wingCfgDevVpnIkev1RemoteWinsEntry,
       "wingCfgDevVpnIkev1RemoteWinsServerType": wingCfgDevVpnIkev1RemoteWinsServerType,
       "wingCfgDevVpnIkev1RemoteWinsServerIp": wingCfgDevVpnIkev1RemoteWinsServerIp,
       "wingCfgDevVpnIkev1RemoteNameServerTable": wingCfgDevVpnIkev1RemoteNameServerTable,
       "wingCfgDevVpnIkev1RemoteNameServerEntry": wingCfgDevVpnIkev1RemoteNameServerEntry,
       "wingCfgDevVpnIkev1RemoteNameServerType": wingCfgDevVpnIkev1RemoteNameServerType,
       "wingCfgDevVpnIkev1RemoteNameServerIp": wingCfgDevVpnIkev1RemoteNameServerIp,
       "wingCfgDevVpnIkev2RemoteTable": wingCfgDevVpnIkev2RemoteTable,
       "wingCfgDevVpnIkev2RemoteEntry": wingCfgDevVpnIkev2RemoteEntry,
       "wingCfgDevVpnIkev2RemoteAuthMethod": wingCfgDevVpnIkev2RemoteAuthMethod,
       "wingCfgDevVpnIkev2RemoteAaaPolicy": wingCfgDevVpnIkev2RemoteAaaPolicy,
       "wingCfgDevVpnIkev2RemoteIpLocalPool": wingCfgDevVpnIkev2RemoteIpLocalPool,
       "wingCfgDevVpnIkev2RemoteDhcpServerType": wingCfgDevVpnIkev2RemoteDhcpServerType,
       "wingCfgDevVpnIkev2RemoteDhcpServer": wingCfgDevVpnIkev2RemoteDhcpServer,
       "wingCfgDevVpnIkev2RemoteDhcpServerGiaddr": wingCfgDevVpnIkev2RemoteDhcpServerGiaddr,
       "wingCfgDevVpnIkev2RemoteNetmask": wingCfgDevVpnIkev2RemoteNetmask,
       "wingCfgDevVpnIkev2RemoteLocalUsersTable": wingCfgDevVpnIkev2RemoteLocalUsersTable,
       "wingCfgDevVpnIkev2RemoteLocalUsersEntry": wingCfgDevVpnIkev2RemoteLocalUsersEntry,
       "wingCfgDevVpnIkev2RemoteLocalUsersName": wingCfgDevVpnIkev2RemoteLocalUsersName,
       "wingCfgDevVpnIkev2RemoteLocalUsersPassword": wingCfgDevVpnIkev2RemoteLocalUsersPassword,
       "wingCfgDevVpnIkev2RemoteWinsTable": wingCfgDevVpnIkev2RemoteWinsTable,
       "wingCfgDevVpnIkev2RemoteWinsEntry": wingCfgDevVpnIkev2RemoteWinsEntry,
       "wingCfgDevVpnIkev2RemoteWinsServerType": wingCfgDevVpnIkev2RemoteWinsServerType,
       "wingCfgDevVpnIkev2RemoteWinsServerIp": wingCfgDevVpnIkev2RemoteWinsServerIp,
       "wingCfgDevVpnIkev2RemoteNameServerTable": wingCfgDevVpnIkev2RemoteNameServerTable,
       "wingCfgDevVpnIkev2RemoteNameServerEntry": wingCfgDevVpnIkev2RemoteNameServerEntry,
       "wingCfgDevVpnIkev2RemoteNameServerType": wingCfgDevVpnIkev2RemoteNameServerType,
       "wingCfgDevVpnIkev2RemoteNameServerIp": wingCfgDevVpnIkev2RemoteNameServerIp,
       "wingCfgDevVpnAutoIPSecSecureTable": wingCfgDevVpnAutoIPSecSecureTable,
       "wingCfgDevVpnAutoIPSecSecureEntry": wingCfgDevVpnAutoIPSecSecureEntry,
       "wingCfgDevVpnAutoIPSecSecureGroupId": wingCfgDevVpnAutoIPSecSecureGroupId,
       "wingCfgDevVpnAutoIPSecSecureGroupIdAuthType": wingCfgDevVpnAutoIPSecSecureGroupIdAuthType,
       "wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey": wingCfgDevVpnAutoIPSecSecureGroupIdAuthKey,
       "wingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion": wingCfgDevVpnAutoIPSecSecureRemoteGWIkeVersion,
       "wingCfgDevControllerHost": wingCfgDevControllerHost,
       "wingCfgDevControllerHostTable": wingCfgDevControllerHostTable,
       "wingCfgDevControllerHostEntry": wingCfgDevControllerHostEntry,
       "wingCfgDevControllerHostIndex": wingCfgDevControllerHostIndex,
       "wingCfgDevControllerHostRowStatus": wingCfgDevControllerHostRowStatus,
       "wingCfgDevControllerHostHost": wingCfgDevControllerHostHost,
       "wingCfgDevControllerHostPool": wingCfgDevControllerHostPool,
       "wingCfgDevControllerHostLevel": wingCfgDevControllerHostLevel,
       "wingCfgDevWlan": wingCfgDevWlan,
       "wingCfgDevWlanSsidOverrideTable": wingCfgDevWlanSsidOverrideTable,
       "wingCfgDevWlanSsidOverrideEntry": wingCfgDevWlanSsidOverrideEntry,
       "wingCfgDevWlanSsidOverrideWlan": wingCfgDevWlanSsidOverrideWlan,
       "wingCfgDevWlanSsidOverrideSsid": wingCfgDevWlanSsidOverrideSsid,
       "wingCfgDevWlanVlanOverrideTable": wingCfgDevWlanVlanOverrideTable,
       "wingCfgDevWlanVlanOverrideEntry": wingCfgDevWlanVlanOverrideEntry,
       "wingCfgDevWlanVlanOverrideWlan": wingCfgDevWlanVlanOverrideWlan,
       "wingCfgDevWlanVlanOverrideInstTable": wingCfgDevWlanVlanOverrideInstTable,
       "wingCfgDevWlanVlanOverrideInstEntry": wingCfgDevWlanVlanOverrideInstEntry,
       "wingCfgDevWlanVlanOverrideInstVlan": wingCfgDevWlanVlanOverrideInstVlan,
       "wingCfgDevWlanVlanOverrideInstLimit": wingCfgDevWlanVlanOverrideInstLimit,
       "wingCfgDevStatsWindowTable": wingCfgDevStatsWindowTable,
       "wingCfgDevStatsWindowEntry": wingCfgDevStatsWindowEntry,
       "wingCfgDevStatsWindowIdx": wingCfgDevStatsWindowIdx,
       "wingCfgDevStatsWindowSampleInterval": wingCfgDevStatsWindowSampleInterval,
       "wingCfgDevStatsWindowWindowSize": wingCfgDevStatsWindowWindowSize,
       "wingCfgDevVrrp": wingCfgDevVrrp,
       "wingCfgDevVrrpTable": wingCfgDevVrrpTable,
       "wingCfgDevVrrpEntry": wingCfgDevVrrpEntry,
       "wingCfgDevVrrpVersion": wingCfgDevVrrpVersion,
       "wingCfgDevVrrpGroupTable": wingCfgDevVrrpGroupTable,
       "wingCfgDevVrrpGroupEntry": wingCfgDevVrrpGroupEntry,
       "wingCfgDevVrrpGroupVirtualRouterId": wingCfgDevVrrpGroupVirtualRouterId,
       "wingCfgDevVrrpGroupDescription": wingCfgDevVrrpGroupDescription,
       "wingCfgDevVrrpGroupPriority": wingCfgDevVrrpGroupPriority,
       "wingCfgDevVrrpGroupAdvertisementUnit": wingCfgDevVrrpGroupAdvertisementUnit,
       "wingCfgDevVrrpGroupAdvertisementIntervalV2": wingCfgDevVrrpGroupAdvertisementIntervalV2,
       "wingCfgDevVrrpGroupAdvertisementIntervalV2Msec": wingCfgDevVrrpGroupAdvertisementIntervalV2Msec,
       "wingCfgDevVrrpGroupAdvertisementIntervalV3": wingCfgDevVrrpGroupAdvertisementIntervalV3,
       "wingCfgDevVrrpGroupPreempt": wingCfgDevVrrpGroupPreempt,
       "wingCfgDevVrrpGroupPreemptDelay": wingCfgDevVrrpGroupPreemptDelay,
       "wingCfgDevVrrpGroupCrmAction": wingCfgDevVrrpGroupCrmAction,
       "wingCfgDevVrrpGroupDeltaPriority": wingCfgDevVrrpGroupDeltaPriority,
       "wingCfgDevVrrpGroupInterface": wingCfgDevVrrpGroupInterface,
       "wingCfgDevVrrpGroupSyncGroup": wingCfgDevVrrpGroupSyncGroup,
       "wingCfgDevIgs": wingCfgDevIgs,
       "wingCfgDevIgsTable": wingCfgDevIgsTable,
       "wingCfgDevIgsEntry": wingCfgDevIgsEntry,
       "wingCfgDevIgsIpIgmpSnooping": wingCfgDevIgsIpIgmpSnooping,
       "wingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast": wingCfgDevIgsIpIgmpSnoopingForwardUnknownMulticast,
       "wingCfgDevIgsIpIgmpSnoopingQuerier": wingCfgDevIgsIpIgmpSnoopingQuerier,
       "wingCfgDevIgsIpIgmpSnoopingQuerierAddress": wingCfgDevIgsIpIgmpSnoopingQuerierAddress,
       "wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime": wingCfgDevIgsIpIgmpSnoopingQuerierMaxResponseTime,
       "wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry": wingCfgDevIgsIpIgmpSnoopingQuerierOtherQuerierTimerExpiry,
       "wingCfgDevIgsIpIgmpSnoopingQuerierVersion": wingCfgDevIgsIpIgmpSnoopingQuerierVersion,
       "wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval": wingCfgDevIgsIpIgmpSnoopingQuerierQueryInterval,
       "wingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable": wingCfgDevIgsIpIgmpSnoopingQuerierRobustnessVariable,
       "wingCfgDevDynRoute": wingCfgDevDynRoute,
       "wingCfgDevDynRouteOspfTable": wingCfgDevDynRouteOspfTable,
       "wingCfgDevDynRouteOspfEntry": wingCfgDevDynRouteOspfEntry,
       "wingCfgDevDynRouteOspfEnabled": wingCfgDevDynRouteOspfEnabled,
       "wingCfgDevDynRouteOspfRouterId": wingCfgDevDynRouteOspfRouterId,
       "wingCfgDevDynRouteOspfAutoCost": wingCfgDevDynRouteOspfAutoCost,
       "wingCfgDevDynRouteOspfPassiveAll": wingCfgDevDynRouteOspfPassiveAll,
       "wingCfgDevDynRouteOspfPassive": wingCfgDevDynRouteOspfPassive,
       "wingCfgDevDynRouteOspfPassiveRemoved": wingCfgDevDynRouteOspfPassiveRemoved,
       "wingCfgDevDynRouteOspfVrrpStateCheck": wingCfgDevDynRouteOspfVrrpStateCheck,
       "wingCfgDevDynRouteOspfDefaultRoutePriority": wingCfgDevDynRouteOspfDefaultRoutePriority,
       "wingCfgDevDynRouteOspfNumRoutes": wingCfgDevDynRouteOspfNumRoutes,
       "wingCfgDevDynRouteOspfRetryCount": wingCfgDevDynRouteOspfRetryCount,
       "wingCfgDevDynRouteOspfRetryTimeout": wingCfgDevDynRouteOspfRetryTimeout,
       "wingCfgDevDynRouteOspfResetTime": wingCfgDevDynRouteOspfResetTime,
       "wingCfgDevDynRouteOspfNetworkTable": wingCfgDevDynRouteOspfNetworkTable,
       "wingCfgDevDynRouteOspfNetworkEntry": wingCfgDevDynRouteOspfNetworkEntry,
       "wingCfgDevDynRouteOspfNetwork": wingCfgDevDynRouteOspfNetwork,
       "wingCfgDevDynRouteOspfNetworkAreaId": wingCfgDevDynRouteOspfNetworkAreaId,
       "wingCfgDevDynRouteOspfAreaTable": wingCfgDevDynRouteOspfAreaTable,
       "wingCfgDevDynRouteOspfAreaEntry": wingCfgDevDynRouteOspfAreaEntry,
       "wingCfgDevDynRouteOspfAreaId": wingCfgDevDynRouteOspfAreaId,
       "wingCfgDevDynRouteOspfAreaAuthentication": wingCfgDevDynRouteOspfAreaAuthentication,
       "wingCfgDevDynRouteOspfAreaRange": wingCfgDevDynRouteOspfAreaRange,
       "wingCfgDevDynRouteOspfAreaType": wingCfgDevDynRouteOspfAreaType,
       "wingCfgDevDynRouteOspfAreaDefaultCost": wingCfgDevDynRouteOspfAreaDefaultCost,
       "wingCfgDevDynRouteOspfAreaTranslateType": wingCfgDevDynRouteOspfAreaTranslateType,
       "wingCfgDevDynRouteDefaultInfoTable": wingCfgDevDynRouteDefaultInfoTable,
       "wingCfgDevDynRouteDefaultInfoEntry": wingCfgDevDynRouteDefaultInfoEntry,
       "wingCfgDevDynRouteDefaultInfoOriginate": wingCfgDevDynRouteDefaultInfoOriginate,
       "wingCfgDevDynRouteDefaultInfoAlways": wingCfgDevDynRouteDefaultInfoAlways,
       "wingCfgDevDynRouteDefaultInfoRtMetric": wingCfgDevDynRouteDefaultInfoRtMetric,
       "wingCfgDevDynRouteDefaultInfoRtMetricType": wingCfgDevDynRouteDefaultInfoRtMetricType,
       "wingCfgDevDynRouteRedistributeTable": wingCfgDevDynRouteRedistributeTable,
       "wingCfgDevDynRouteRedistributeEntry": wingCfgDevDynRouteRedistributeEntry,
       "wingCfgDevDynRouteRedistributeRouteType": wingCfgDevDynRouteRedistributeRouteType,
       "wingCfgDevDynRouteRedistributeMetric": wingCfgDevDynRouteRedistributeMetric,
       "wingCfgDevDynRouteRedistributeMetricType": wingCfgDevDynRouteRedistributeMetricType,
       "wingCfgDevCriticalRes": wingCfgDevCriticalRes,
       "wingCfgDevCriticalResMonitorTable": wingCfgDevCriticalResMonitorTable,
       "wingCfgDevCriticalResMonitorEntry": wingCfgDevCriticalResMonitorEntry,
       "wingCfgDevCriticalResMonitorInt": wingCfgDevCriticalResMonitorInt,
       "wingCfgDevCriticalResPolicyTable": wingCfgDevCriticalResPolicyTable,
       "wingCfgDevCriticalResPolicyEntry": wingCfgDevCriticalResPolicyEntry,
       "wingCfgDevCriticalResPolicyVia": wingCfgDevCriticalResPolicyVia,
       "wingCfgDevCriticalResPolicyAnyAll": wingCfgDevCriticalResPolicyAnyAll,
       "wingCfgDevCriticalResourcesTable": wingCfgDevCriticalResourcesTable,
       "wingCfgDevCriticalResourcesEntry": wingCfgDevCriticalResourcesEntry,
       "wingCfgDevCriticalResourcesAddr": wingCfgDevCriticalResourcesAddr,
       "wingCfgDevCriticalResourcesMonitorType": wingCfgDevCriticalResourcesMonitorType,
       "wingCfgDevCriticalResourcesVlan": wingCfgDevCriticalResourcesVlan,
       "wingCfgDevCriticalResourcesPort": wingCfgDevCriticalResourcesPort,
       "wingCfgDevl2tpv3": wingCfgDevl2tpv3,
       "wingCfgDevl2tpv3Table": wingCfgDevl2tpv3Table,
       "wingCfgDevl2tpv3Entry": wingCfgDevl2tpv3Entry,
       "wingCfgDevl2tpv3lUdpListenPort": wingCfgDevl2tpv3lUdpListenPort,
       "wingCfgDevl2tpv3RouterId": wingCfgDevl2tpv3RouterId,
       "wingCfgDevl2tpv3HostName": wingCfgDevl2tpv3HostName,
       "wingCfgDevl2tpv3InterTunnelBridging": wingCfgDevl2tpv3InterTunnelBridging,
       "wingCfgDevl2tpv3TunnelTable": wingCfgDevl2tpv3TunnelTable,
       "wingCfgDevl2tpv3TunnelEntry": wingCfgDevl2tpv3TunnelEntry,
       "wingCfgDevl2tpv3TunnelName": wingCfgDevl2tpv3TunnelName,
       "wingCfgDevl2tpv3TunnelLocalIpAddrss": wingCfgDevl2tpv3TunnelLocalIpAddrss,
       "wingCfgDevl2tpv3TunnelMtu": wingCfgDevl2tpv3TunnelMtu,
       "wingCfgDevl2tpv3TunnelUseTunnelPolicy": wingCfgDevl2tpv3TunnelUseTunnelPolicy,
       "wingCfgDevl2tpv3TunnelHostname": wingCfgDevl2tpv3TunnelHostname,
       "wingCfgDevl2tpv3TunnelRouterId": wingCfgDevl2tpv3TunnelRouterId,
       "wingCfgDevl2tpv3TunnelPeerTable": wingCfgDevl2tpv3TunnelPeerTable,
       "wingCfgDevl2tpv3TunnelPeerEntry": wingCfgDevl2tpv3TunnelPeerEntry,
       "wingCfgDevl2tpv3TunnelPeerId": wingCfgDevl2tpv3TunnelPeerId,
       "wingCfgDevl2tpv3TunnelPeerIp": wingCfgDevl2tpv3TunnelPeerIp,
       "wingCfgDev2tpv3TunnelPeerHostName": wingCfgDev2tpv3TunnelPeerHostName,
       "wingCfgDevl2tpv3TunnelPeerRouterId": wingCfgDevl2tpv3TunnelPeerRouterId,
       "wingCfgDevl2tpv3TunnelPeerEncapsulation": wingCfgDevl2tpv3TunnelPeerEncapsulation,
       "wingCfgDevl2tpv3TunnelPeerUDPPort": wingCfgDevl2tpv3TunnelPeerUDPPort,
       "wingCfgDevl2tpv3TunnelSessionTable": wingCfgDevl2tpv3TunnelSessionTable,
       "wingCfgDevl2tpv3TunnelSessionEntry": wingCfgDevl2tpv3TunnelSessionEntry,
       "wingCfgDevl2tpv3TunnelSessionName": wingCfgDevl2tpv3TunnelSessionName,
       "wingCfgDevl2tpv3TunnelSessionPseudoWireId": wingCfgDevl2tpv3TunnelSessionPseudoWireId,
       "wingCfgDevl2tpv3TunnelSessionTrafficSourceType": wingCfgDevl2tpv3TunnelSessionTrafficSourceType,
       "wingCfgDevl2tpv3TunnelSessionTrafficSourceValue": wingCfgDevl2tpv3TunnelSessionTrafficSourceValue,
       "wingCfgDevl2tpv3TunnelSessionNativeVlan": wingCfgDevl2tpv3TunnelSessionNativeVlan,
       "wingCfgDevl2tpv3ManualSessionTable": wingCfgDevl2tpv3ManualSessionTable,
       "wingCfgDevl2tpv3ManualSessionEntry": wingCfgDevl2tpv3ManualSessionEntry,
       "wingCfgDevl2tpv3ManualSessionName": wingCfgDevl2tpv3ManualSessionName,
       "wingCfgDevl2tpv3ManualSessionLocalIpAddr": wingCfgDevl2tpv3ManualSessionLocalIpAddr,
       "wingCfgDevl2tpv3ManualSessionPeerIp": wingCfgDevl2tpv3ManualSessionPeerIp,
       "wingCfgDevl2tpv3ManualSessionPeerEncapsulation": wingCfgDevl2tpv3ManualSessionPeerEncapsulation,
       "wingCfgDevl2tpv3ManualSessionPeerUDPPort": wingCfgDevl2tpv3ManualSessionPeerUDPPort,
       "wingCfgDevl2tpv3ManualSessionMtu": wingCfgDevl2tpv3ManualSessionMtu,
       "wingCfgDevl2tpv3ManualSessionTrafficSource": wingCfgDevl2tpv3ManualSessionTrafficSource,
       "wingCfgDevl2tpv3ManualSessionTrafficSourceValue": wingCfgDevl2tpv3ManualSessionTrafficSourceValue,
       "wingCfgDevl2tpv3ManualSessionNativeVlan": wingCfgDevl2tpv3ManualSessionNativeVlan,
       "wingCfgDevl2tpv3ManualSessionLocalSessionId": wingCfgDevl2tpv3ManualSessionLocalSessionId,
       "wingCfgDevl2tpv3ManualSessionRemoteSessionId": wingCfgDevl2tpv3ManualSessionRemoteSessionId,
       "wingCfgDevl2tpv3ManualSessionCookieTable": wingCfgDevl2tpv3ManualSessionCookieTable,
       "wingCfgDevl2tpv3ManualSessionCookieEntry": wingCfgDevl2tpv3ManualSessionCookieEntry,
       "wingCfgDevl2tpv3ManualSessionCookieEndpoint": wingCfgDevl2tpv3ManualSessionCookieEndpoint,
       "wingCfgDevl2tpv3ManualSessionCookieSize": wingCfgDevl2tpv3ManualSessionCookieSize,
       "wingCfgDevl2tpv3ManualSessionCookieVal1": wingCfgDevl2tpv3ManualSessionCookieVal1,
       "wingCfgDevl2tpv3ManualSessionCookieVal2": wingCfgDevl2tpv3ManualSessionCookieVal2,
       "wingCfgDevMcx": wingCfgDevMcx,
       "wingCfgDevMeshpointDevTable": wingCfgDevMeshpointDevTable,
       "wingCfgDevMeshpointDevEntry": wingCfgDevMeshpointDevEntry,
       "wingCfgDevMeshpointDevName": wingCfgDevMeshpointDevName,
       "wingCfgDevMeshpointDevIsRootDev": wingCfgDevMeshpointDevIsRootDev,
       "wingCfgDevMeshpointDevPreferredRoot": wingCfgDevMeshpointDevPreferredRoot,
       "wingCfgDevMeshpointDevPreferredNeighbor": wingCfgDevMeshpointDevPreferredNeighbor,
       "wingCfgDevMeshpointDevPreferredIf": wingCfgDevMeshpointDevPreferredIf,
       "wingCfgMgmt": wingCfgMgmt,
       "wingCfgMgmtTable": wingCfgMgmtTable,
       "wingCfgMgmtEntry": wingCfgMgmtEntry,
       "wingCfgMgmtName": wingCfgMgmtName,
       "wingCfgMgmtTelnetEnable": wingCfgMgmtTelnetEnable,
       "wingCfgMgmtTelnetPort": wingCfgMgmtTelnetPort,
       "wingCfgMgmtHttpEnable": wingCfgMgmtHttpEnable,
       "wingCfgMgmtHttpsEnable": wingCfgMgmtHttpsEnable,
       "wingCfgMgmtSshEnable": wingCfgMgmtSshEnable,
       "wingCfgMgmtSshPort": wingCfgMgmtSshPort,
       "wingCfgMgmtBannerMotd": wingCfgMgmtBannerMotd,
       "wingCfgMgmtSnmp": wingCfgMgmtSnmp,
       "wingCfgMgmtSnmpTable": wingCfgMgmtSnmpTable,
       "wingCfgMgmtSnmpEntry": wingCfgMgmtSnmpEntry,
       "wingCfgMgmtSnmpV1Enable": wingCfgMgmtSnmpV1Enable,
       "wingCfgMgmtSnmpV2Enable": wingCfgMgmtSnmpV2Enable,
       "wingCfgMgmtSnmpV3Enable": wingCfgMgmtSnmpV3Enable,
       "wingCfgMgmtSnmpTrapEnable": wingCfgMgmtSnmpTrapEnable,
       "wingCfgMgmtSnmpCommunityTable": wingCfgMgmtSnmpCommunityTable,
       "wingCfgMgmtSnmpCommunityEntry": wingCfgMgmtSnmpCommunityEntry,
       "wingCfgMgmtSnmpCommunityName": wingCfgMgmtSnmpCommunityName,
       "wingCfgMgmtSnmpCommunityAccess": wingCfgMgmtSnmpCommunityAccess,
       "wingCfgMgmtSnmpUsmUserTable": wingCfgMgmtSnmpUsmUserTable,
       "wingCfgMgmtSnmpUsmUserEntry": wingCfgMgmtSnmpUsmUserEntry,
       "wingCfgMgmtSnmpUsmUserName": wingCfgMgmtSnmpUsmUserName,
       "wingCfgMgmtSnmpUsmUserAuthentication": wingCfgMgmtSnmpUsmUserAuthentication,
       "wingCfgMgmtSnmpUsmUserEncryption": wingCfgMgmtSnmpUsmUserEncryption,
       "wingCfgMgmtSnmpUsmUserPassword": wingCfgMgmtSnmpUsmUserPassword,
       "wingCfgMgmtAdminTable": wingCfgMgmtAdminTable,
       "wingCfgMgmtAdminEntry": wingCfgMgmtAdminEntry,
       "wingCfgMgmtAdminUsername": wingCfgMgmtAdminUsername,
       "wingCfgMgmtAdminPassword": wingCfgMgmtAdminPassword,
       "wingCfgMgmtAdminRole": wingCfgMgmtAdminRole,
       "wingCfgRoute": wingCfgRoute,
       "wingCfgRouteTable": wingCfgRouteTable,
       "wingCfgRouteEntry": wingCfgRouteEntry,
       "wingCfgRouteName": wingCfgRouteName,
       "wingCfgRouteLogging": wingCfgRouteLogging,
       "wingCfgRouteLocalPbr": wingCfgRouteLocalPbr,
       "wingCfgRouteUseCrm": wingCfgRouteUseCrm,
       "wingCfgRouteMapTable": wingCfgRouteMapTable,
       "wingCfgRouteMapEntry": wingCfgRouteMapEntry,
       "wingCfgRouteMapPrecedence": wingCfgRouteMapPrecedence,
       "wingCfgRouteMapMatchClauseAcl": wingCfgRouteMapMatchClauseAcl,
       "wingCfgRouteMapMatchClauseDscp": wingCfgRouteMapMatchClauseDscp,
       "wingCfgRouteMapMatchClauseWlan": wingCfgRouteMapMatchClauseWlan,
       "wingCfgRouteMapRolePolicy": wingCfgRouteMapRolePolicy,
       "wingCfgRouteMapUserRole": wingCfgRouteMapUserRole,
       "wingCfgRouteMapMatchClauseIncomingInterface": wingCfgRouteMapMatchClauseIncomingInterface,
       "wingCfgRouteMapNextHop1": wingCfgRouteMapNextHop1,
       "wingCfgRouteMapNextHop2": wingCfgRouteMapNextHop2,
       "wingCfgRouteMapSetClauseDefaultNextHop": wingCfgRouteMapSetClauseDefaultNextHop,
       "wingCfgRouteMapSetClauseFallback": wingCfgRouteMapSetClauseFallback,
       "wingCfgRouteMapSetClauseMarkDscp": wingCfgRouteMapSetClauseMarkDscp,
       "wingCfgl2tpv3Policy": wingCfgl2tpv3Policy,
       "wingCfgl2tpv3PolicyTable": wingCfgl2tpv3PolicyTable,
       "wingCfgl2tpv3PolicyEntry": wingCfgl2tpv3PolicyEntry,
       "wingCfgl2tpv3PolicyName": wingCfgl2tpv3PolicyName,
       "wingCfgl2tpv3PolicyHelloInterval": wingCfgl2tpv3PolicyHelloInterval,
       "wingCfgl2tpv3PolicyRetryAttempts": wingCfgl2tpv3PolicyRetryAttempts,
       "wingCfgl2tpv3PolicyRetryInterval": wingCfgl2tpv3PolicyRetryInterval,
       "wingCfgl2tpv3PolicyHideAVPs": wingCfgl2tpv3PolicyHideAVPs,
       "wingCfgl2tpv3PolicyCookieSize": wingCfgl2tpv3PolicyCookieSize,
       "wingCfgl2tpv3PolicyRxWindowSize": wingCfgl2tpv3PolicyRxWindowSize,
       "wingCfgl2tpv3PolicyTxWindowSize": wingCfgl2tpv3PolicyTxWindowSize,
       "wingCfgl2tpv3PolicySequencingRequired": wingCfgl2tpv3PolicySequencingRequired,
       "wingCfgl2tpv3PolicyReconnectInterval": wingCfgl2tpv3PolicyReconnectInterval,
       "wingCfgl2tpv3PolicyReconnectAttempts": wingCfgl2tpv3PolicyReconnectAttempts,
       "wingCfgLegacyAp": wingCfgLegacyAp,
       "wingCfgLegacyApTable": wingCfgLegacyApTable,
       "wingCfgLegacyApEntry": wingCfgLegacyApEntry,
       "wingCfgLegacyApIndex": wingCfgLegacyApIndex,
       "wingCfgLegacyApCountryCode": wingCfgLegacyApCountryCode,
       "wingCfgLegacyApLed": wingCfgLegacyApLed,
       "wingCfgLegacyApLocation": wingCfgLegacyApLocation,
       "wingCfgLegacyApIpAddr": wingCfgLegacyApIpAddr,
       "wingCfgLegacyApGateway": wingCfgLegacyApGateway,
       "wingCfgLegacyApPreferredControllerGroup": wingCfgLegacyApPreferredControllerGroup,
       "wingCfgLegacyApIfTable": wingCfgLegacyApIfTable,
       "wingCfgLegacyApIfEntry": wingCfgLegacyApIfEntry,
       "wingCfgLegacyApIfName": wingCfgLegacyApIfName,
       "wingCfgLegacyApIfDescr": wingCfgLegacyApIfDescr,
       "wingCfgLegacyApIfShutdown": wingCfgLegacyApIfShutdown,
       "wingCfgLegacyApIfRfMode": wingCfgLegacyApIfRfMode,
       "wingCfgLegacyApIfAntennaDiversity": wingCfgLegacyApIfAntennaDiversity,
       "wingCfgLegacyApIfBeaconInterval": wingCfgLegacyApIfBeaconInterval,
       "wingCfgLegacyApIfChannel": wingCfgLegacyApIfChannel,
       "wingCfgLegacyApIfMaxClients": wingCfgLegacyApIfMaxClients,
       "wingCfgLegacyApIfPlacement": wingCfgLegacyApIfPlacement,
       "wingCfgLegacyApIfPower": wingCfgLegacyApIfPower,
       "wingCfgLegacyApIfPreambleShort": wingCfgLegacyApIfPreambleShort,
       "wingCfgLegacyApIfOnChannelScan": wingCfgLegacyApIfOnChannelScan,
       "wingCfgLegacyApIfRtsThreshold": wingCfgLegacyApIfRtsThreshold,
       "wingCfgLegacyApIfQosPolicy": wingCfgLegacyApIfQosPolicy,
       "wingCfgLegacyApIfWirelessClientPower": wingCfgLegacyApIfWirelessClientPower,
       "wingCfgLegacyApIfWlanBssMapTable": wingCfgLegacyApIfWlanBssMapTable,
       "wingCfgLegacyApIfWlanBssMapEntry": wingCfgLegacyApIfWlanBssMapEntry,
       "wingCfgLegacyApIfWlanBssMapWlan": wingCfgLegacyApIfWlanBssMapWlan,
       "wingCfgLegacyApIfWlanBssMapBss": wingCfgLegacyApIfWlanBssMapBss,
       "wingCfgLegacyApIfWlanBssMapPrimary": wingCfgLegacyApIfWlanBssMapPrimary,
       "wingCfgAlt": wingCfgAlt,
       "wingCfgAltDevTable": wingCfgAltDevTable,
       "wingCfgAltDevEntry": wingCfgAltDevEntry,
       "wingCfgAltDevMac": wingCfgAltDevMac,
       "wingCfgAltDevHostname": wingCfgAltDevHostname,
       "wingCfgAltDevBuilding": wingCfgAltDevBuilding,
       "wingCfgAltDevFloor": wingCfgAltDevFloor,
       "wingCfgAltDevNumRadios": wingCfgAltDevNumRadios,
       "wingCfgAltDevProfileName": wingCfgAltDevProfileName,
       "wingCfgAltDevRfDomainName": wingCfgAltDevRfDomainName,
       "wingCfgAltDevHttpsTrustpoint": wingCfgAltDevHttpsTrustpoint,
       "wingCfgAltDevRadiusCaTrustpoint": wingCfgAltDevRadiusCaTrustpoint,
       "wingCfgAltDevRadiusServerTrustpoint": wingCfgAltDevRadiusServerTrustpoint,
       "wingCfgAltDevSshRsaKey": wingCfgAltDevSshRsaKey,
       "wingCfgAltDevHasOverrides": wingCfgAltDevHasOverrides,
       "wingCfgAltDevIfTable": wingCfgAltDevIfTable,
       "wingCfgAltDevIfEntry": wingCfgAltDevIfEntry,
       "wingCfgAltDevIfName": wingCfgAltDevIfName,
       "wingCfgAltDevIfDescription": wingCfgAltDevIfDescription,
       "wingCfgAltDevIfType": wingCfgAltDevIfType,
       "wingCfgAltDevIfShutdown": wingCfgAltDevIfShutdown,
       "wingCfgAltDevIfIpInAcl": wingCfgAltDevIfIpInAcl,
       "wingCfgAltDevIfMacInAcl": wingCfgAltDevIfMacInAcl,
       "wingCfgAltDevIfRadioBssmapTable": wingCfgAltDevIfRadioBssmapTable,
       "wingCfgAltDevIfRadioBssmapEntry": wingCfgAltDevIfRadioBssmapEntry,
       "wingCfgAltDevIfRadioBssmapWlan": wingCfgAltDevIfRadioBssmapWlan,
       "wingCfgAltDevIfRadioBssmapBss": wingCfgAltDevIfRadioBssmapBss,
       "wingCfgAltDevIfRadioBssmapPrimary": wingCfgAltDevIfRadioBssmapPrimary,
       "wingCfgMcx": wingCfgMcx,
       "wingCfgMcxMeshpointTable": wingCfgMcxMeshpointTable,
       "wingCfgMcxMeshpointEntry": wingCfgMcxMeshpointEntry,
       "wingCfgMcxMeshpointName": wingCfgMcxMeshpointName,
       "wingCfgMcxMeshpointShutdown": wingCfgMcxMeshpointShutdown,
       "wingCfgMcxMeshpointMeshid": wingCfgMcxMeshpointMeshid,
       "wingCfgMcxMeshpointDescription": wingCfgMcxMeshpointDescription,
       "wingCfgMcxMeshpointBeaconFormat": wingCfgMcxMeshpointBeaconFormat,
       "wingCfgMcxMeshpointControlVlan": wingCfgMcxMeshpointControlVlan,
       "wingCfgMcxMeshpointNeighborInactivityTimeout": wingCfgMcxMeshpointNeighborInactivityTimeout,
       "wingCfgMcxMeshpointQosPolicy": wingCfgMcxMeshpointQosPolicy,
       "wingCfgMcxMeshpointSecurityMode": wingCfgMcxMeshpointSecurityMode,
       "wingCfgMcxMeshpointWpa2Psk": wingCfgMcxMeshpointWpa2Psk,
       "wingCfgMcxMeshpointWpa2KeyRotationUnicast": wingCfgMcxMeshpointWpa2KeyRotationUnicast,
       "wingCfgMcxMeshpointWpa2KeyRotationBroadcast": wingCfgMcxMeshpointWpa2KeyRotationBroadcast,
       "wingCfgMcxMeshpointIsRoot": wingCfgMcxMeshpointIsRoot,
       "wingCfgMcxMeshpointMonitorCriticalResources": wingCfgMcxMeshpointMonitorCriticalResources,
       "wingCfgMcxMeshpointMonitorPriPortLink": wingCfgMcxMeshpointMonitorPriPortLink,
       "wingCfgMcxMeshpointQosTable": wingCfgMcxMeshpointQosTable,
       "wingCfgMcxMeshpointQosEntry": wingCfgMcxMeshpointQosEntry,
       "wingCfgMcxMeshpointQosName": wingCfgMcxMeshpointQosName,
       "wingCfgMcxMeshpointQosMeshpointRlDownEnable": wingCfgMcxMeshpointQosMeshpointRlDownEnable,
       "wingCfgMcxMeshpointQosMeshpointRlDownRate": wingCfgMcxMeshpointQosMeshpointRlDownRate,
       "wingCfgMcxMeshpointQosMeshpointRlDownBurstSize": wingCfgMcxMeshpointQosMeshpointRlDownBurstSize,
       "wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground": wingCfgMcxMeshpointQosMeshpointRlDownThreshBackground,
       "wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort": wingCfgMcxMeshpointQosMeshpointRlDownThreshBestEffort,
       "wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice": wingCfgMcxMeshpointQosMeshpointRlDownThreshVoice,
       "wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo": wingCfgMcxMeshpointQosMeshpointRlDownThreshVideo,
       "wingCfgMcxMeshpointQosMeshpointRlUpEnable": wingCfgMcxMeshpointQosMeshpointRlUpEnable,
       "wingCfgMcxMeshpointQosMeshpointRlUpRate": wingCfgMcxMeshpointQosMeshpointRlUpRate,
       "wingCfgMcxMeshpointQosMeshpointRlUpBurstSize": wingCfgMcxMeshpointQosMeshpointRlUpBurstSize,
       "wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground": wingCfgMcxMeshpointQosMeshpointRlUpThreshBackground,
       "wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort": wingCfgMcxMeshpointQosMeshpointRlUpThreshBestEffort,
       "wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice": wingCfgMcxMeshpointQosMeshpointRlUpThreshVoice,
       "wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo": wingCfgMcxMeshpointQosMeshpointRlUpThreshVideo,
       "wingCfgMcxMeshpointQosNeighborRlDownEnable": wingCfgMcxMeshpointQosNeighborRlDownEnable,
       "wingCfgMcxMeshpointQosNeighborRlDownRate": wingCfgMcxMeshpointQosNeighborRlDownRate,
       "wingCfgMcxMeshpointQosNeighborRlDownBurstSize": wingCfgMcxMeshpointQosNeighborRlDownBurstSize,
       "wingCfgMcxMeshpointQosNeighborRlDownThreshBackground": wingCfgMcxMeshpointQosNeighborRlDownThreshBackground,
       "wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort": wingCfgMcxMeshpointQosNeighborRlDownThreshBestEffort,
       "wingCfgMcxMeshpointQosNeighborRlDownThreshVoice": wingCfgMcxMeshpointQosNeighborRlDownThreshVoice,
       "wingCfgMcxMeshpointQosNeighborRlDownThreshVideo": wingCfgMcxMeshpointQosNeighborRlDownThreshVideo,
       "wingCfgMcxMeshpointQosNeighborRlUpEnable": wingCfgMcxMeshpointQosNeighborRlUpEnable,
       "wingCfgMcxMeshpointQosNeighborRlUpRate": wingCfgMcxMeshpointQosNeighborRlUpRate,
       "wingCfgMcxMeshpointQosNeighborRlUpBurstSize": wingCfgMcxMeshpointQosNeighborRlUpBurstSize,
       "wingCfgMcxMeshpointQosNeighborRlUpThreshBackground": wingCfgMcxMeshpointQosNeighborRlUpThreshBackground,
       "wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort": wingCfgMcxMeshpointQosNeighborRlUpThreshBestEffort,
       "wingCfgMcxMeshpointQosNeighborRlUpThreshVoice": wingCfgMcxMeshpointQosNeighborRlUpThreshVoice,
       "wingCfgMcxMeshpointQosNeighborRlUpThreshVideo": wingCfgMcxMeshpointQosNeighborRlUpThreshVideo,
       "wingCfgMcxMeshpointQosAddr": wingCfgMcxMeshpointQosAddr,
       "wingCfgMcxMeshpointQosPriority": wingCfgMcxMeshpointQosPriority,
       "wingStats": wingStats,
       "wingStatsNoc": wingStatsNoc,
       "wingStatsNocDevTable": wingStatsNocDevTable,
       "wingStatsNocDevEntry": wingStatsNocDevEntry,
       "wingStatsNocDevMac": wingStatsNocDevMac,
       "wingStatsNocDevHostname": wingStatsNocDevHostname,
       "wingStatsNocDevType": wingStatsNocDevType,
       "wingStatsNocDevClusterName": wingStatsNocDevClusterName,
       "wingStatsNocDevRfDomainName": wingStatsNocDevRfDomainName,
       "wingStatsNocDevAdoptedBy": wingStatsNocDevAdoptedBy,
       "wingStatsNocDevOnline": wingStatsNocDevOnline,
       "wingStatsNocDevReporter": wingStatsNocDevReporter,
       "wingStatsNocDevLastUpdate": wingStatsNocDevLastUpdate,
       "wingStatsNocDevHasRadio": wingStatsNocDevHasRadio,
       "wingStatsNocDevIsController": wingStatsNocDevIsController,
       "wingStatsNocDevProfileName": wingStatsNocDevProfileName,
       "wingStatsNocAdopt": wingStatsNocAdopt,
       "wingStatsNocAdoptDevTable": wingStatsNocAdoptDevTable,
       "wingStatsNocAdoptDevEntry": wingStatsNocAdoptDevEntry,
       "wingStatsNocAdoptDevMac": wingStatsNocAdoptDevMac,
       "wingStatsNocAdoptDevType": wingStatsNocAdoptDevType,
       "wingStatsNocAdoptDevHostname": wingStatsNocAdoptDevHostname,
       "wingStatsNocAdoptDevVersion": wingStatsNocAdoptDevVersion,
       "wingStatsNocAdoptDevSerialNo": wingStatsNocAdoptDevSerialNo,
       "wingStatsNocAdoptDevRfDomainName": wingStatsNocAdoptDevRfDomainName,
       "wingStatsNocAdoptDevOnline": wingStatsNocAdoptDevOnline,
       "wingStatsNocAdoptDevBy": wingStatsNocAdoptDevBy,
       "wingStatsNocAdoptDevLastAdoption": wingStatsNocAdoptDevLastAdoption,
       "wingStatsNocAdoptDevModelNumber": wingStatsNocAdoptDevModelNumber,
       "wingStatsNocAdoptDevStartup": wingStatsNocAdoptDevStartup,
       "wingStatsNocAdoptDevCfgStatus": wingStatsNocAdoptDevCfgStatus,
       "wingStatsNocAdoptDevProductName": wingStatsNocAdoptDevProductName,
       "wingStatsNocAdoptPendingDevTable": wingStatsNocAdoptPendingDevTable,
       "wingStatsNocAdoptPendingDevEntry": wingStatsNocAdoptPendingDevEntry,
       "wingStatsNocAdoptPendingDevMac": wingStatsNocAdoptPendingDevMac,
       "wingStatsNocAdoptPendingDevType": wingStatsNocAdoptPendingDevType,
       "wingStatsNocAdoptPendingDevTarget": wingStatsNocAdoptPendingDevTarget,
       "wingStatsNocAdoptPendingDevDisOption": wingStatsNocAdoptPendingDevDisOption,
       "wingStatsNocAdoptPendingDevVersion": wingStatsNocAdoptPendingDevVersion,
       "wingStatsNocAdoptPendingDevSerialNumber": wingStatsNocAdoptPendingDevSerialNumber,
       "wingStatsNocAdoptPendingDevReason": wingStatsNocAdoptPendingDevReason,
       "wingStatsNocAdoptPendingDevNumRadios": wingStatsNocAdoptPendingDevNumRadios,
       "wingStatsNocAdoptPendingDevIp": wingStatsNocAdoptPendingDevIp,
       "wingStatsNocAdoptPendingDevVlan": wingStatsNocAdoptPendingDevVlan,
       "wingStatsDev": wingStatsDev,
       "wingStatsDevTable": wingStatsDevTable,
       "wingStatsDevEntry": wingStatsDevEntry,
       "wingStatsDevMac": wingStatsDevMac,
       "wingStatsDevType": wingStatsDevType,
       "wingStatsDevHostname": wingStatsDevHostname,
       "wingStatsDevVersion": wingStatsDevVersion,
       "wingStatsDevSerialNo": wingStatsDevSerialNo,
       "wingStatsDevRfDomainName": wingStatsDevRfDomainName,
       "wingStatsDevOnline": wingStatsDevOnline,
       "wingStatsDevSysInfo": wingStatsDevSysInfo,
       "wingStatsDevSysInfoTable": wingStatsDevSysInfoTable,
       "wingStatsDevSysInfoEntry": wingStatsDevSysInfoEntry,
       "wingStatsDevSysInfoFreeMem": wingStatsDevSysInfoFreeMem,
       "wingStatsDevSysInfoTotalMem": wingStatsDevSysInfoTotalMem,
       "wingStatsDevSysInfoFreeRamCurrent": wingStatsDevSysInfoFreeRamCurrent,
       "wingStatsDevSysInfoFreeRamLimit": wingStatsDevSysInfoFreeRamLimit,
       "wingStatsDevSysInfoFdMax": wingStatsDevSysInfoFdMax,
       "wingStatsDevSysInfoFdCurrent": wingStatsDevSysInfoFdCurrent,
       "wingStatsDevSysInfoFdLimit": wingStatsDevSysInfoFdLimit,
       "wingStatsDevSysInfoLoadLimitS0": wingStatsDevSysInfoLoadLimitS0,
       "wingStatsDevSysInfoLoadLimitS1": wingStatsDevSysInfoLoadLimitS1,
       "wingStatsDevSysInfoLoadLimitS2": wingStatsDevSysInfoLoadLimitS2,
       "wingStatsDevSysInfoBufferCurrent0": wingStatsDevSysInfoBufferCurrent0,
       "wingStatsDevSysInfoBufferCurrent1": wingStatsDevSysInfoBufferCurrent1,
       "wingStatsDevSysInfoBufferCurrent2": wingStatsDevSysInfoBufferCurrent2,
       "wingStatsDevSysInfoBufferCurrent3": wingStatsDevSysInfoBufferCurrent3,
       "wingStatsDevSysInfoBufferCurrent4": wingStatsDevSysInfoBufferCurrent4,
       "wingStatsDevSysInfoBufferCurrent5": wingStatsDevSysInfoBufferCurrent5,
       "wingStatsDevSysInfoBufferCurrent6": wingStatsDevSysInfoBufferCurrent6,
       "wingStatsDevSysInfoBufferCurrent7": wingStatsDevSysInfoBufferCurrent7,
       "wingStatsDevSysInfoBufferCurrent8": wingStatsDevSysInfoBufferCurrent8,
       "wingStatsDevSysInfoBufferCurrent9": wingStatsDevSysInfoBufferCurrent9,
       "wingStatsDevSysInfoBufferCurrent10": wingStatsDevSysInfoBufferCurrent10,
       "wingStatsDevSysInfoBufferCurrent11": wingStatsDevSysInfoBufferCurrent11,
       "wingStatsDevSysInfoBufferCurrent12": wingStatsDevSysInfoBufferCurrent12,
       "wingStatsDevSysInfoBufferTotal0": wingStatsDevSysInfoBufferTotal0,
       "wingStatsDevSysInfoBufferTotal1": wingStatsDevSysInfoBufferTotal1,
       "wingStatsDevSysInfoBufferTotal2": wingStatsDevSysInfoBufferTotal2,
       "wingStatsDevSysInfoBufferTotal3": wingStatsDevSysInfoBufferTotal3,
       "wingStatsDevSysInfoBufferTotal4": wingStatsDevSysInfoBufferTotal4,
       "wingStatsDevSysInfoBufferTotal5": wingStatsDevSysInfoBufferTotal5,
       "wingStatsDevSysInfoBufferTotal6": wingStatsDevSysInfoBufferTotal6,
       "wingStatsDevSysInfoBufferTotal7": wingStatsDevSysInfoBufferTotal7,
       "wingStatsDevSysInfoBufferTotal8": wingStatsDevSysInfoBufferTotal8,
       "wingStatsDevSysInfoBufferTotal9": wingStatsDevSysInfoBufferTotal9,
       "wingStatsDevSysInfoBufferTotal10": wingStatsDevSysInfoBufferTotal10,
       "wingStatsDevSysInfoBufferTotal11": wingStatsDevSysInfoBufferTotal11,
       "wingStatsDevSysInfoBufferTotal12": wingStatsDevSysInfoBufferTotal12,
       "wingStatsDevSys": wingStatsDevSys,
       "wingStatsDevSysTable": wingStatsDevSysTable,
       "wingStatsDevSysEntry": wingStatsDevSysEntry,
       "wingStatsDevSysProductName": wingStatsDevSysProductName,
       "wingStatsDevSysSerialNo": wingStatsDevSysSerialNo,
       "wingStatsDevSysVersion": wingStatsDevSysVersion,
       "wingStatsDevSysPrimaryVersion": wingStatsDevSysPrimaryVersion,
       "wingStatsDevSysSecondaryVersion": wingStatsDevSysSecondaryVersion,
       "wingStatsDevSysPrimaryBuildDate": wingStatsDevSysPrimaryBuildDate,
       "wingStatsDevSysSecondaryBuildDate": wingStatsDevSysSecondaryBuildDate,
       "wingStatsDevSysPrimaryInstallDate": wingStatsDevSysPrimaryInstallDate,
       "wingStatsDevSysSecondaryInstallDate": wingStatsDevSysSecondaryInstallDate,
       "wingStatsDevSysBootPartition": wingStatsDevSysBootPartition,
       "wingStatsDevSysNextBoot": wingStatsDevSysNextBoot,
       "wingStatsDevSysIsFallback": wingStatsDevSysIsFallback,
       "wingStatsDevSysImgFallback": wingStatsDevSysImgFallback,
       "wingStatsDevSysUptime": wingStatsDevSysUptime,
       "wingStatsDevSysCpu": wingStatsDevSysCpu,
       "wingStatsDevSysRam": wingStatsDevSysRam,
       "wingStatsDevSysClock": wingStatsDevSysClock,
       "wingStatsDevSysUpgradeStatus": wingStatsDevSysUpgradeStatus,
       "wingStatsDevSysUpgradeTime": wingStatsDevSysUpgradeTime,
       "wingStatsDevSysPoeFwVersion": wingStatsDevSysPoeFwVersion,
       "wingStatsDevSysFpgaVersion": wingStatsDevSysFpgaVersion,
       "wingStatsDevSysModelNumber": wingStatsDevSysModelNumber,
       "wingStatsDevIf": wingStatsDevIf,
       "wingStatsDevIfTable": wingStatsDevIfTable,
       "wingStatsDevIfEntry": wingStatsDevIfEntry,
       "wingStatsDevIfName": wingStatsDevIfName,
       "wingStatsDevIfIndex": wingStatsDevIfIndex,
       "wingStatsDevIfHwType": wingStatsDevIfHwType,
       "wingStatsDevIfMode": wingStatsDevIfMode,
       "wingStatsDevIfMac": wingStatsDevIfMac,
       "wingStatsDevIfStatusAdmin": wingStatsDevIfStatusAdmin,
       "wingStatsDevIfMtu": wingStatsDevIfMtu,
       "wingStatsDevIfGoodOctetsRcv": wingStatsDevIfGoodOctetsRcv,
       "wingStatsDevIfGoodPktsRcv": wingStatsDevIfGoodPktsRcv,
       "wingStatsDevIfDropEvents": wingStatsDevIfDropEvents,
       "wingStatsDevIfUcPktsRcv": wingStatsDevIfUcPktsRcv,
       "wingStatsDevIfBrdcPktsRcv": wingStatsDevIfBrdcPktsRcv,
       "wingStatsDevIfMcPktsRcv": wingStatsDevIfMcPktsRcv,
       "wingStatsDevIfBadPktsRcv": wingStatsDevIfBadPktsRcv,
       "wingStatsDevIfUndersizePkts": wingStatsDevIfUndersizePkts,
       "wingStatsDevIfOversizePkts": wingStatsDevIfOversizePkts,
       "wingStatsDevIfBadCrc": wingStatsDevIfBadCrc,
       "wingStatsDevIfMacRcvError": wingStatsDevIfMacRcvError,
       "wingStatsDevIfFragmentsPkts": wingStatsDevIfFragmentsPkts,
       "wingStatsDevIfJabberPkts": wingStatsDevIfJabberPkts,
       "wingStatsDevIfGoodOctetsSent": wingStatsDevIfGoodOctetsSent,
       "wingStatsDevIfGoodPktsSent": wingStatsDevIfGoodPktsSent,
       "wingStatsDevIfMacTransmitErr": wingStatsDevIfMacTransmitErr,
       "wingStatsDevIfUcPktsSent": wingStatsDevIfUcPktsSent,
       "wingStatsDevIfBrdcPktsSent": wingStatsDevIfBrdcPktsSent,
       "wingStatsDevIfMcPktsSent": wingStatsDevIfMcPktsSent,
       "wingStatsDevIfLateCollisions": wingStatsDevIfLateCollisions,
       "wingStatsDevIfExcessiveCollisions": wingStatsDevIfExcessiveCollisions,
       "wingStatsDevIfCollisions": wingStatsDevIfCollisions,
       "wingStatsDevIfMetric": wingStatsDevIfMetric,
       "wingStatsDevIfRxFifoErrors": wingStatsDevIfRxFifoErrors,
       "wingStatsDevIfRxOverErrors": wingStatsDevIfRxOverErrors,
       "wingStatsDevIfTxWindowErrors": wingStatsDevIfTxWindowErrors,
       "wingStatsDevIfTxFifoErrors": wingStatsDevIfTxFifoErrors,
       "wingStatsDevIfTxAbortedErrors": wingStatsDevIfTxAbortedErrors,
       "wingStatsDevIfTxCarrierErrors": wingStatsDevIfTxCarrierErrors,
       "wingStatsDevIfTxDropped": wingStatsDevIfTxDropped,
       "wingStatsDevIfRxLengthErrors": wingStatsDevIfRxLengthErrors,
       "wingStatsDevIfRxMissedErrors": wingStatsDevIfRxMissedErrors,
       "wingStatsDevIfRxFrameErrors": wingStatsDevIfRxFrameErrors,
       "wingStatsDevIfTxErrors": wingStatsDevIfTxErrors,
       "wingStatsDevIfTxHeartbeatErrors": wingStatsDevIfTxHeartbeatErrors,
       "wingStatsDevIfStatusOper": wingStatsDevIfStatusOper,
       "wingStatsDevAdopt": wingStatsDevAdopt,
       "wingStatsDevAdoptDevTable": wingStatsDevAdoptDevTable,
       "wingStatsDevAdoptDevEntry": wingStatsDevAdoptDevEntry,
       "wingStatsDevAdoptDevMac": wingStatsDevAdoptDevMac,
       "wingStatsDevAdoptDevType": wingStatsDevAdoptDevType,
       "wingStatsDevAdoptDevHostname": wingStatsDevAdoptDevHostname,
       "wingStatsDevAdoptDevVersion": wingStatsDevAdoptDevVersion,
       "wingStatsDevAdoptDevSerialNo": wingStatsDevAdoptDevSerialNo,
       "wingStatsDevAdoptDevRfDomainName": wingStatsDevAdoptDevRfDomainName,
       "wingStatsDevAdoptDevOnline": wingStatsDevAdoptDevOnline,
       "wingStatsDevAdoptDevBy": wingStatsDevAdoptDevBy,
       "wingStatsDevAdoptDevLastAdoption": wingStatsDevAdoptDevLastAdoption,
       "wingStatsDevAdoptDevModelNumber": wingStatsDevAdoptDevModelNumber,
       "wingStatsDevAdoptDevStartup": wingStatsDevAdoptDevStartup,
       "wingStatsDevAdoptDevCfgStatus": wingStatsDevAdoptDevCfgStatus,
       "wingStatsDevAdoptDevProductName": wingStatsDevAdoptDevProductName,
       "wingStatsDevAdoptPendingDevTable": wingStatsDevAdoptPendingDevTable,
       "wingStatsDevAdoptPendingDevEntry": wingStatsDevAdoptPendingDevEntry,
       "wingStatsDevAdoptPendingDevMac": wingStatsDevAdoptPendingDevMac,
       "wingStatsDevAdoptPendingDevType": wingStatsDevAdoptPendingDevType,
       "wingStatsDevAdoptPendingDevTarget": wingStatsDevAdoptPendingDevTarget,
       "wingStatsDevAdoptPendingDevDisOption": wingStatsDevAdoptPendingDevDisOption,
       "wingStatsDevAdoptPendingDevVersion": wingStatsDevAdoptPendingDevVersion,
       "wingStatsDevAdoptPendingDevSerialNumber": wingStatsDevAdoptPendingDevSerialNumber,
       "wingStatsDevAdoptPendingDevReason": wingStatsDevAdoptPendingDevReason,
       "wingStatsDevAdoptPendingDevNumRadios": wingStatsDevAdoptPendingDevNumRadios,
       "wingStatsDevAdoptPendingDevIp": wingStatsDevAdoptPendingDevIp,
       "wingStatsDevAdoptPendingDevVlan": wingStatsDevAdoptPendingDevVlan,
       "wingStatsDevCdpNeighbor": wingStatsDevCdpNeighbor,
       "wingStatsDevCdpNeighborTable": wingStatsDevCdpNeighborTable,
       "wingStatsDevCdpNeighborEntry": wingStatsDevCdpNeighborEntry,
       "wingStatsDevCdpNeighborIndex": wingStatsDevCdpNeighborIndex,
       "wingStatsDevCdpNeighborDevId": wingStatsDevCdpNeighborDevId,
       "wingStatsDevCdpNeighborPlatform": wingStatsDevCdpNeighborPlatform,
       "wingStatsDevCdpNeighborIpList": wingStatsDevCdpNeighborIpList,
       "wingStatsDevCdpNeighborPortId": wingStatsDevCdpNeighborPortId,
       "wingStatsDevCdpNeighborTtl": wingStatsDevCdpNeighborTtl,
       "wingStatsDevCdpNeighborLocalPort": wingStatsDevCdpNeighborLocalPort,
       "wingStatsDevCdpNeighborDuplex": wingStatsDevCdpNeighborDuplex,
       "wingStatsDevCdpNeighborAdvertisedVersion": wingStatsDevCdpNeighborAdvertisedVersion,
       "wingStatsDevCdpNeighborVtpDomain": wingStatsDevCdpNeighborVtpDomain,
       "wingStatsDevCdpNeighborNativeVlan": wingStatsDevCdpNeighborNativeVlan,
       "wingStatsDevCdpNeighborUntrustedPortCos": wingStatsDevCdpNeighborUntrustedPortCos,
       "wingStatsDevCdpNeighborMgmtAddrList": wingStatsDevCdpNeighborMgmtAddrList,
       "wingStatsDevCdpNeighborVersion": wingStatsDevCdpNeighborVersion,
       "wingStatsDevWl": wingStatsDevWl,
       "wingStatsDevWlApInfo": wingStatsDevWlApInfo,
       "wingStatsDevWlApInfoTable": wingStatsDevWlApInfoTable,
       "wingStatsDevWlApInfoEntry": wingStatsDevWlApInfoEntry,
       "wingStatsDevWlApInfoMac": wingStatsDevWlApInfoMac,
       "wingStatsDevWlApInfoFaultDetected": wingStatsDevWlApInfoFaultDetected,
       "wingStatsDevWlApInfoNumRadios": wingStatsDevWlApInfoNumRadios,
       "wingStatsDevWlApInfoNumClients": wingStatsDevWlApInfoNumClients,
       "wingStatsDevWlApInfoLastCalTime": wingStatsDevWlApInfoLastCalTime,
       "wingStatsDevWlApInfoType": wingStatsDevWlApInfoType,
       "wingStatsDevWlApInfoStatsMode": wingStatsDevWlApInfoStatsMode,
       "wingStatsDevWlApInfoStatsInterval": wingStatsDevWlApInfoStatsInterval,
       "wingStatsDevWlApInfoHostname": wingStatsDevWlApInfoHostname,
       "wingStatsDevWlApInfoRfDomainName": wingStatsDevWlApInfoRfDomainName,
       "wingStatsDevWlApInfoLocation": wingStatsDevWlApInfoLocation,
       "wingStatsDevWlApInfoAdoptedTo": wingStatsDevWlApInfoAdoptedTo,
       "wingStatsDevWlApInfoIp": wingStatsDevWlApInfoIp,
       "wingStatsDevWlClient": wingStatsDevWlClient,
       "wingStatsDevWlClientTable": wingStatsDevWlClientTable,
       "wingStatsDevWlClientEntry": wingStatsDevWlClientEntry,
       "wingStatsDevWlClientMac": wingStatsDevWlClientMac,
       "wingStatsDevWlClientMacName": wingStatsDevWlClientMacName,
       "wingStatsDevWlClientVendor": wingStatsDevWlClientVendor,
       "wingStatsDevWlClientBss": wingStatsDevWlClientBss,
       "wingStatsDevWlClientAp": wingStatsDevWlClientAp,
       "wingStatsDevWlClientRadioNum": wingStatsDevWlClientRadioNum,
       "wingStatsDevWlClientRadioType": wingStatsDevWlClientRadioType,
       "wingStatsDevWlClientRadioEnc": wingStatsDevWlClientRadioEnc,
       "wingStatsDevWlClientRadioAuth": wingStatsDevWlClientRadioAuth,
       "wingStatsDevWlClientWlan": wingStatsDevWlClientWlan,
       "wingStatsDevWlClientState": wingStatsDevWlClientState,
       "wingStatsDevWlClientHotspotAuthed": wingStatsDevWlClientHotspotAuthed,
       "wingStatsDevWlClientVlan": wingStatsDevWlClientVlan,
       "wingStatsDevWlClientUserName": wingStatsDevWlClientUserName,
       "wingStatsDevWlClientIp": wingStatsDevWlClientIp,
       "wingStatsDevWlClientRfdName": wingStatsDevWlClientRfdName,
       "wingStatsDevWlClientHostname": wingStatsDevWlClientHostname,
       "wingStatsDevWlClientLocation": wingStatsDevWlClientLocation,
       "wingStatsDevWlClientRadioId": wingStatsDevWlClientRadioId,
       "wingStatsDevWlClientRadioAlias": wingStatsDevWlClientRadioAlias,
       "wingStatsDevWlClientStat": wingStatsDevWlClientStat,
       "wingStatsDevWlClientStatTable": wingStatsDevWlClientStatTable,
       "wingStatsDevWlClientStatEntry": wingStatsDevWlClientStatEntry,
       "wingStatsDevWlClientStatMac": wingStatsDevWlClientStatMac,
       "wingStatsDevWlClientStatMacName": wingStatsDevWlClientStatMacName,
       "wingStatsDevWlClientStatVendor": wingStatsDevWlClientStatVendor,
       "wingStatsDevWlClientStatAp": wingStatsDevWlClientStatAp,
       "wingStatsDevWlClientStatTxBytes": wingStatsDevWlClientStatTxBytes,
       "wingStatsDevWlClientStatRxBytes": wingStatsDevWlClientStatRxBytes,
       "wingStatsDevWlClientStatTxPkts": wingStatsDevWlClientStatTxPkts,
       "wingStatsDevWlClientStatRxPkts": wingStatsDevWlClientStatRxPkts,
       "wingStatsDevWlClientStatTxDropped": wingStatsDevWlClientStatTxDropped,
       "wingStatsDevWlClientStatRxErrors": wingStatsDevWlClientStatRxErrors,
       "wingStatsDevWlClientStatTIndex": wingStatsDevWlClientStatTIndex,
       "wingStatsDevWlClientStatTxBps": wingStatsDevWlClientStatTxBps,
       "wingStatsDevWlClientStatRxBps": wingStatsDevWlClientStatRxBps,
       "wingStatsDevWlClientStatSignal": wingStatsDevWlClientStatSignal,
       "wingStatsDevWlClientStatNoise": wingStatsDevWlClientStatNoise,
       "wingStatsDevWlClientStatSnr": wingStatsDevWlClientStatSnr,
       "wingStatsDevWlClientStatTxRate": wingStatsDevWlClientStatTxRate,
       "wingStatsDevWlClientStatRxRate": wingStatsDevWlClientStatRxRate,
       "wingStatsDevWlClientStatErrorRate": wingStatsDevWlClientStatErrorRate,
       "wingStatsDevWlClientStatQIndex": wingStatsDevWlClientStatQIndex,
       "wingStatsDevWlRadio": wingStatsDevWlRadio,
       "wingStatsDevWlRadioTable": wingStatsDevWlRadioTable,
       "wingStatsDevWlRadioEntry": wingStatsDevWlRadioEntry,
       "wingStatsDevWlRadioId": wingStatsDevWlRadioId,
       "wingStatsDevWlRadioDeviceMac": wingStatsDevWlRadioDeviceMac,
       "wingStatsDevWlRadioAlias": wingStatsDevWlRadioAlias,
       "wingStatsDevWlRadioMac": wingStatsDevWlRadioMac,
       "wingStatsDevWlRadioType": wingStatsDevWlRadioType,
       "wingStatsDevWlRadioHostname": wingStatsDevWlRadioHostname,
       "wingStatsDevWlRadioRfdName": wingStatsDevWlRadioRfdName,
       "wingStatsDevWlRadioLocation": wingStatsDevWlRadioLocation,
       "wingStatsDevWlRadioState": wingStatsDevWlRadioState,
       "wingStatsDevWlRadioCurChannel": wingStatsDevWlRadioCurChannel,
       "wingStatsDevWlRadioConfigChannel": wingStatsDevWlRadioConfigChannel,
       "wingStatsDevWlRadioCurPower": wingStatsDevWlRadioCurPower,
       "wingStatsDevWlRadioConfigPower": wingStatsDevWlRadioConfigPower,
       "wingStatsDevWlRadioMaxUserRate": wingStatsDevWlRadioMaxUserRate,
       "wingStatsDevWlRadioNumClient": wingStatsDevWlRadioNumClient,
       "wingStatsDevWlRadioProtocol": wingStatsDevWlRadioProtocol,
       "wingStatsDevWlRadioStat": wingStatsDevWlRadioStat,
       "wingStatsDevWlRadioStatTable": wingStatsDevWlRadioStatTable,
       "wingStatsDevWlRadioStatEntry": wingStatsDevWlRadioStatEntry,
       "wingStatsDevWlRadioStatId": wingStatsDevWlRadioStatId,
       "wingStatsDevWlRadioStatDeviceMac": wingStatsDevWlRadioStatDeviceMac,
       "wingStatsDevWlRadioStatAlias": wingStatsDevWlRadioStatAlias,
       "wingStatsDevWlRadioStatMac": wingStatsDevWlRadioStatMac,
       "wingStatsDevWlRadioStatType": wingStatsDevWlRadioStatType,
       "wingStatsDevWlRadioStatTxBytes": wingStatsDevWlRadioStatTxBytes,
       "wingStatsDevWlRadioStatRxBytes": wingStatsDevWlRadioStatRxBytes,
       "wingStatsDevWlRadioStatTxPkts": wingStatsDevWlRadioStatTxPkts,
       "wingStatsDevWlRadioStatRxPkts": wingStatsDevWlRadioStatRxPkts,
       "wingStatsDevWlRadioStatTxDropped": wingStatsDevWlRadioStatTxDropped,
       "wingStatsDevWlRadioStatRxErrors": wingStatsDevWlRadioStatRxErrors,
       "wingStatsDevWlRadioStatTIndex": wingStatsDevWlRadioStatTIndex,
       "wingStatsDevWlRadioStatTxBps": wingStatsDevWlRadioStatTxBps,
       "wingStatsDevWlRadioStatRxBps": wingStatsDevWlRadioStatRxBps,
       "wingStatsDevWlRadioStatSignal": wingStatsDevWlRadioStatSignal,
       "wingStatsDevWlRadioStatNoise": wingStatsDevWlRadioStatNoise,
       "wingStatsDevWlRadioStatSnr": wingStatsDevWlRadioStatSnr,
       "wingStatsDevWlRadioStatTxRate": wingStatsDevWlRadioStatTxRate,
       "wingStatsDevWlRadioStatRxRate": wingStatsDevWlRadioStatRxRate,
       "wingStatsDevWlRadioStatErrorRate": wingStatsDevWlRadioStatErrorRate,
       "wingStatsDevWlRadioStatQIndex": wingStatsDevWlRadioStatQIndex,
       "wingStatsDevWlRadioStatNumClients": wingStatsDevWlRadioStatNumClients,
       "wingStatsDevWlRadioStatNumBClients": wingStatsDevWlRadioStatNumBClients,
       "wingStatsDevWlRadioStatNumBgClients": wingStatsDevWlRadioStatNumBgClients,
       "wingStatsDevWlRadioStatNumBgnClients": wingStatsDevWlRadioStatNumBgnClients,
       "wingStatsDevWlRadioStatNumAClients": wingStatsDevWlRadioStatNumAClients,
       "wingStatsDevWlRadioStatNumAnClients": wingStatsDevWlRadioStatNumAnClients,
       "wingStatsDevWlRadioStatMediumErrorRate": wingStatsDevWlRadioStatMediumErrorRate,
       "wingStatsDevWlRadioStatTxRetries": wingStatsDevWlRadioStatTxRetries,
       "wingStatsDevWlRadioStatTxRetriedBytes": wingStatsDevWlRadioStatTxRetriedBytes,
       "wingStatsDevWlApDetectTable": wingStatsDevWlApDetectTable,
       "wingStatsDevWlApDetectEntry": wingStatsDevWlApDetectEntry,
       "wingStatsDevWlApDetectMac": wingStatsDevWlApDetectMac,
       "wingStatsDevWlApDetectVendor": wingStatsDevWlApDetectVendor,
       "wingStatsDevWlApDetectChannel": wingStatsDevWlApDetectChannel,
       "wingStatsDevWlApDetectRadioType": wingStatsDevWlApDetectRadioType,
       "wingStatsDevWlApDetectApMode": wingStatsDevWlApDetectApMode,
       "wingStatsDevWlApDetectSsid": wingStatsDevWlApDetectSsid,
       "wingStatsDevWlApDetectRssi": wingStatsDevWlApDetectRssi,
       "wingStatsDevWlApDetectLastSeen": wingStatsDevWlApDetectLastSeen,
       "wingStatsDevWlApDetectFirstSeen": wingStatsDevWlApDetectFirstSeen,
       "wingStatsDevWlApDetectEncryption": wingStatsDevWlApDetectEncryption,
       "wingStatsDevWlApDetectReportingApMac": wingStatsDevWlApDetectReportingApMac,
       "wingStatsDevWlApDetectReportingApRadioNum": wingStatsDevWlApDetectReportingApRadioNum,
       "wingStatsDevWlMcx": wingStatsDevWlMcx,
       "wingStatsDevWlMcxMeshpointTable": wingStatsDevWlMcxMeshpointTable,
       "wingStatsDevWlMcxMeshpointEntry": wingStatsDevWlMcxMeshpointEntry,
       "wingStatsDevWlMcxMeshpointMpid": wingStatsDevWlMcxMeshpointMpid,
       "wingStatsDevWlMcxMeshpointName": wingStatsDevWlMcxMeshpointName,
       "wingStatsDevWlMcxMeshpointHostname": wingStatsDevWlMcxMeshpointHostname,
       "wingStatsDevWlMcxMeshpointDeviceMac": wingStatsDevWlMcxMeshpointDeviceMac,
       "wingStatsDevWlMcxMeshpointIsRoot": wingStatsDevWlMcxMeshpointIsRoot,
       "wingStatsDevWlMcxMeshpointIsCfgRoot": wingStatsDevWlMcxMeshpointIsCfgRoot,
       "wingStatsDevWlMcxMeshpointRootMpid": wingStatsDevWlMcxMeshpointRootMpid,
       "wingStatsDevWlMcxMeshpointNextHop": wingStatsDevWlMcxMeshpointNextHop,
       "wingStatsDevWlMcxMeshpointRootHops": wingStatsDevWlMcxMeshpointRootHops,
       "wingStatsDevWlMcxMeshpointIfidCnt": wingStatsDevWlMcxMeshpointIfidCnt,
       "wingStatsDevWlMcxMeshpointIfidDataTable": wingStatsDevWlMcxMeshpointIfidDataTable,
       "wingStatsDevWlMcxMeshpointIfidDataEntry": wingStatsDevWlMcxMeshpointIfidDataEntry,
       "wingStatsDevWlMcxMeshpointIfid": wingStatsDevWlMcxMeshpointIfid,
       "wingStatsDevWlMcxMeshpointIfidDataDesc": wingStatsDevWlMcxMeshpointIfidDataDesc,
       "wingStatsDevWlMcxMeshpointStatsTable": wingStatsDevWlMcxMeshpointStatsTable,
       "wingStatsDevWlMcxMeshpointStatsEntry": wingStatsDevWlMcxMeshpointStatsEntry,
       "wingStatsDevWlMcxMeshpointStatsName": wingStatsDevWlMcxMeshpointStatsName,
       "wingStatsDevWlMcxMeshpointStatsMeshid": wingStatsDevWlMcxMeshpointStatsMeshid,
       "wingStatsDevWlMcxMeshpointStatsNumRadios": wingStatsDevWlMcxMeshpointStatsNumRadios,
       "wingStatsDevWlMcxMeshpointStatsNumNeighbors": wingStatsDevWlMcxMeshpointStatsNumNeighbors,
       "wingStatsDevWlMcxMeshpointStatsTxBytes": wingStatsDevWlMcxMeshpointStatsTxBytes,
       "wingStatsDevWlMcxMeshpointStatsRxBytes": wingStatsDevWlMcxMeshpointStatsRxBytes,
       "wingStatsDevWlMcxMeshpointStatsTxPkts": wingStatsDevWlMcxMeshpointStatsTxPkts,
       "wingStatsDevWlMcxMeshpointStatsRxPkts": wingStatsDevWlMcxMeshpointStatsRxPkts,
       "wingStatsDevWlMcxMeshpointStatsTxDropped": wingStatsDevWlMcxMeshpointStatsTxDropped,
       "wingStatsDevWlMcxMeshpointStatsRxErrors": wingStatsDevWlMcxMeshpointStatsRxErrors,
       "wingStatsDevWlMcxMeshpointStatsTIndex": wingStatsDevWlMcxMeshpointStatsTIndex,
       "wingStatsDevWlMcxMeshpointStatsTotalBytes": wingStatsDevWlMcxMeshpointStatsTotalBytes,
       "wingStatsDevWlMcxMeshpointStatsTotalPkts": wingStatsDevWlMcxMeshpointStatsTotalPkts,
       "wingStatsDevWlMcxMeshpointStatsTxBps": wingStatsDevWlMcxMeshpointStatsTxBps,
       "wingStatsDevWlMcxMeshpointStatsRxBps": wingStatsDevWlMcxMeshpointStatsRxBps,
       "wingStatsDevWlMcxMeshpointStatsTotalBps": wingStatsDevWlMcxMeshpointStatsTotalBps,
       "wingStatsDevWlMcxMeshpointStatsTxPps": wingStatsDevWlMcxMeshpointStatsTxPps,
       "wingStatsDevWlMcxMeshpointStatsRxPps": wingStatsDevWlMcxMeshpointStatsRxPps,
       "wingStatsDevWlMcxMeshpointStatsTotalPps": wingStatsDevWlMcxMeshpointStatsTotalPps,
       "wingStatsDevWlMcxMeshpointStatsTxBcmcPkts": wingStatsDevWlMcxMeshpointStatsTxBcmcPkts,
       "wingStatsDevWlMcxMeshpointStatsRxBcmcPkts": wingStatsDevWlMcxMeshpointStatsRxBcmcPkts,
       "wingStatsDevWlMcxMeshpointStatsTotalBcmcPkts": wingStatsDevWlMcxMeshpointStatsTotalBcmcPkts,
       "wingStatsDevWlMcxMeshpointStatsTxMgmtPkts": wingStatsDevWlMcxMeshpointStatsTxMgmtPkts,
       "wingStatsDevWlMcxMeshpointStatsRxMgmtPkts": wingStatsDevWlMcxMeshpointStatsRxMgmtPkts,
       "wingStatsDevWlMcxMeshpointStatsTotalMgmtPkts": wingStatsDevWlMcxMeshpointStatsTotalMgmtPkts,
       "wingStatsDevWlMcxMeshpointStatsMaxUserRate": wingStatsDevWlMcxMeshpointStatsMaxUserRate,
       "wingStatsDevWlMcxMeshpointNeighborsTable": wingStatsDevWlMcxMeshpointNeighborsTable,
       "wingStatsDevWlMcxMeshpointNeighborsEntry": wingStatsDevWlMcxMeshpointNeighborsEntry,
       "wingStatsDevWlMcxMeshpointNeighborsMpid": wingStatsDevWlMcxMeshpointNeighborsMpid,
       "wingStatsDevWlMcxMeshpointNeighborsName": wingStatsDevWlMcxMeshpointNeighborsName,
       "wingStatsDevWlMcxMeshpointNeighborsHostname": wingStatsDevWlMcxMeshpointNeighborsHostname,
       "wingStatsDevWlMcxMeshpointNeighborsDeviceMac": wingStatsDevWlMcxMeshpointNeighborsDeviceMac,
       "wingStatsDevWlMcxMeshpointNeighborsNumEntries": wingStatsDevWlMcxMeshpointNeighborsNumEntries,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesTable": wingStatsDevWlMcxMeshpointNeighborsEntriesTable,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesEntry": wingStatsDevWlMcxMeshpointNeighborsEntriesEntry,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesIndex": wingStatsDevWlMcxMeshpointNeighborsEntriesIndex,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid": wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborIfid,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid": wingStatsDevWlMcxMeshpointNeighborsEntriesNeighborMpid,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot": wingStatsDevWlMcxMeshpointNeighborsEntriesBoundRoot,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric": wingStatsDevWlMcxMeshpointNeighborsEntriesRootMetric,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesRootHops": wingStatsDevWlMcxMeshpointNeighborsEntriesRootHops,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesValid": wingStatsDevWlMcxMeshpointNeighborsEntriesValid,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesRoot": wingStatsDevWlMcxMeshpointNeighborsEntriesRoot,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesProxy": wingStatsDevWlMcxMeshpointNeighborsEntriesProxy,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference": wingStatsDevWlMcxMeshpointNeighborsEntriesGeoReference,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesMobile": wingStatsDevWlMcxMeshpointNeighborsEntriesMobile,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId": wingStatsDevWlMcxMeshpointNeighborsEntriesInterfaceId,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesAuthState": wingStatsDevWlMcxMeshpointNeighborsEntriesAuthState,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesRank": wingStatsDevWlMcxMeshpointNeighborsEntriesRank,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesResourced": wingStatsDevWlMcxMeshpointNeighborsEntriesResourced,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality": wingStatsDevWlMcxMeshpointNeighborsEntriesLinkQuality,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric": wingStatsDevWlMcxMeshpointNeighborsEntriesLinkMetric,
       "wingStatsDevWlMcxMeshpointNeighborsEntriesAge": wingStatsDevWlMcxMeshpointNeighborsEntriesAge,
       "wingStatsDevWlMcxMeshpointPathsTable": wingStatsDevWlMcxMeshpointPathsTable,
       "wingStatsDevWlMcxMeshpointPathsEntry": wingStatsDevWlMcxMeshpointPathsEntry,
       "wingStatsDevWlMcxMeshpointPathsMpid": wingStatsDevWlMcxMeshpointPathsMpid,
       "wingStatsDevWlMcxMeshpointPathsName": wingStatsDevWlMcxMeshpointPathsName,
       "wingStatsDevWlMcxMeshpointPathsHostname": wingStatsDevWlMcxMeshpointPathsHostname,
       "wingStatsDevWlMcxMeshpointPathsDeviceMac": wingStatsDevWlMcxMeshpointPathsDeviceMac,
       "wingStatsDevWlMcxMeshpointPathsNumEntries": wingStatsDevWlMcxMeshpointPathsNumEntries,
       "wingStatsDevWlMcxMeshpointPathsEntriesTable": wingStatsDevWlMcxMeshpointPathsEntriesTable,
       "wingStatsDevWlMcxMeshpointPathsEntriesEntry": wingStatsDevWlMcxMeshpointPathsEntriesEntry,
       "wingStatsDevWlMcxMeshpointPathsEntriesIndex": wingStatsDevWlMcxMeshpointPathsEntriesIndex,
       "wingStatsDevWlMcxMeshpointPathsEntriesDestMpid": wingStatsDevWlMcxMeshpointPathsEntriesDestMpid,
       "wingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid": wingStatsDevWlMcxMeshpointPathsEntriesNextHopIfid,
       "wingStatsDevWlMcxMeshpointPathsEntriesPathMetric": wingStatsDevWlMcxMeshpointPathsEntriesPathMetric,
       "wingStatsDevWlMcxMeshpointPathsEntriesHops": wingStatsDevWlMcxMeshpointPathsEntriesHops,
       "wingStatsDevWlMcxMeshpointPathsEntriesPathState": wingStatsDevWlMcxMeshpointPathsEntriesPathState,
       "wingStatsDevWlMcxMeshpointPathsEntriesBindState": wingStatsDevWlMcxMeshpointPathsEntriesBindState,
       "wingStatsDevWlMcxMeshpointPathsEntriesValid": wingStatsDevWlMcxMeshpointPathsEntriesValid,
       "wingStatsDevWlMcxMeshpointPathsEntriesRoot": wingStatsDevWlMcxMeshpointPathsEntriesRoot,
       "wingStatsDevWlMcxMeshpointPathsEntriesProxy": wingStatsDevWlMcxMeshpointPathsEntriesProxy,
       "wingStatsDevWlMcxMeshpointPathsEntriesGeoReference": wingStatsDevWlMcxMeshpointPathsEntriesGeoReference,
       "wingStatsDevWlMcxMeshpointPathsEntriesMobile": wingStatsDevWlMcxMeshpointPathsEntriesMobile,
       "wingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence": wingStatsDevWlMcxMeshpointPathsEntriesDestinationSequence,
       "wingStatsDevWlMcxMeshpointPathsEntriesPathTimeout": wingStatsDevWlMcxMeshpointPathsEntriesPathTimeout,
       "wingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout": wingStatsDevWlMcxMeshpointPathsEntriesNewRouteTimeout,
       "wingStatsDevWlMcxMeshpointPathsEntriesDestMintId": wingStatsDevWlMcxMeshpointPathsEntriesDestMintId,
       "wingStatsDevWlMcxMeshpointRootsTable": wingStatsDevWlMcxMeshpointRootsTable,
       "wingStatsDevWlMcxMeshpointRootsEntry": wingStatsDevWlMcxMeshpointRootsEntry,
       "wingStatsDevWlMcxMeshpointRootsMpid": wingStatsDevWlMcxMeshpointRootsMpid,
       "wingStatsDevWlMcxMeshpointRootsName": wingStatsDevWlMcxMeshpointRootsName,
       "wingStatsDevWlMcxMeshpointRootsHostname": wingStatsDevWlMcxMeshpointRootsHostname,
       "wingStatsDevWlMcxMeshpointRootsDeviceMac": wingStatsDevWlMcxMeshpointRootsDeviceMac,
       "wingStatsDevWlMcxMeshpointRootsNumEntries": wingStatsDevWlMcxMeshpointRootsNumEntries,
       "wingStatsDevWlMcxMeshpointRootsEntriesTable": wingStatsDevWlMcxMeshpointRootsEntriesTable,
       "wingStatsDevWlMcxMeshpointRootsEntriesEntry": wingStatsDevWlMcxMeshpointRootsEntriesEntry,
       "wingStatsDevWlMcxMeshpointRootsEntriesIndex": wingStatsDevWlMcxMeshpointRootsEntriesIndex,
       "wingStatsDevWlMcxMeshpointRootsEntriesRootMpid": wingStatsDevWlMcxMeshpointRootsEntriesRootMpid,
       "wingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid": wingStatsDevWlMcxMeshpointRootsEntriesNextHopIfid,
       "wingStatsDevWlMcxMeshpointRootsEntriesInterfaceId": wingStatsDevWlMcxMeshpointRootsEntriesInterfaceId,
       "wingStatsDevWlMcxMeshpointRootsEntriesRecommended": wingStatsDevWlMcxMeshpointRootsEntriesRecommended,
       "wingStatsDevWlMcxMeshpointRootsEntriesBindFailed": wingStatsDevWlMcxMeshpointRootsEntriesBindFailed,
       "wingStatsDevWlMcxMeshpointRootsEntriesPathFailed": wingStatsDevWlMcxMeshpointRootsEntriesPathFailed,
       "wingStatsDevWlMcxMeshpointRootsEntriesPathMetric": wingStatsDevWlMcxMeshpointRootsEntriesPathMetric,
       "wingStatsDevWlMcxMeshpointRootsEntriesNeighborBias": wingStatsDevWlMcxMeshpointRootsEntriesNeighborBias,
       "wingStatsDevWlMcxMeshpointRootsEntriesRootBias": wingStatsDevWlMcxMeshpointRootsEntriesRootBias,
       "wingStatsDevWlMcxMeshpointProxiesTable": wingStatsDevWlMcxMeshpointProxiesTable,
       "wingStatsDevWlMcxMeshpointProxiesEntry": wingStatsDevWlMcxMeshpointProxiesEntry,
       "wingStatsDevWlMcxMeshpointProxiesMpid": wingStatsDevWlMcxMeshpointProxiesMpid,
       "wingStatsDevWlMcxMeshpointProxiesName": wingStatsDevWlMcxMeshpointProxiesName,
       "wingStatsDevWlMcxMeshpointProxiesHostname": wingStatsDevWlMcxMeshpointProxiesHostname,
       "wingStatsDevWlMcxMeshpointProxiesDeviceMac": wingStatsDevWlMcxMeshpointProxiesDeviceMac,
       "wingStatsDevWlMcxMeshpointProxiesNumEntries": wingStatsDevWlMcxMeshpointProxiesNumEntries,
       "wingStatsDevWlMcxMeshpointProxiesEntriesTable": wingStatsDevWlMcxMeshpointProxiesEntriesTable,
       "wingStatsDevWlMcxMeshpointProxiesEntriesEntry": wingStatsDevWlMcxMeshpointProxiesEntriesEntry,
       "wingStatsDevWlMcxMeshpointProxiesEntriesIndex": wingStatsDevWlMcxMeshpointProxiesEntriesIndex,
       "wingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr": wingStatsDevWlMcxMeshpointProxiesEntriesProxyAddr,
       "wingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner": wingStatsDevWlMcxMeshpointProxiesEntriesProxyOwner,
       "wingStatsDevWlMcxMeshpointProxiesEntriesPersistence": wingStatsDevWlMcxMeshpointProxiesEntriesPersistence,
       "wingStatsDevWlMcxMeshpointProxiesEntriesAge": wingStatsDevWlMcxMeshpointProxiesEntriesAge,
       "wingStatsDevWlMcxMeshpointProxiesEntriesVlan": wingStatsDevWlMcxMeshpointProxiesEntriesVlan,
       "wingStatsDevWlMcxMeshpointLsaTable": wingStatsDevWlMcxMeshpointLsaTable,
       "wingStatsDevWlMcxMeshpointLsaEntry": wingStatsDevWlMcxMeshpointLsaEntry,
       "wingStatsDevWlMcxMeshpointLsaMpid": wingStatsDevWlMcxMeshpointLsaMpid,
       "wingStatsDevWlMcxMeshpointLsaName": wingStatsDevWlMcxMeshpointLsaName,
       "wingStatsDevWlMcxMeshpointLsaHostname": wingStatsDevWlMcxMeshpointLsaHostname,
       "wingStatsDevWlMcxMeshpointLsaDeviceMac": wingStatsDevWlMcxMeshpointLsaDeviceMac,
       "wingStatsDevWlMcxMeshpointLsaNumEntries": wingStatsDevWlMcxMeshpointLsaNumEntries,
       "wingStatsDevWlMcxMeshpointLsaMeshid": wingStatsDevWlMcxMeshpointLsaMeshid,
       "wingStatsDevWlMcxMeshpointLsaR0Valid": wingStatsDevWlMcxMeshpointLsaR0Valid,
       "wingStatsDevWlMcxMeshpointLsaR0mdid": wingStatsDevWlMcxMeshpointLsaR0mdid,
       "wingStatsDevWlMcxMeshpointLsaR0khid": wingStatsDevWlMcxMeshpointLsaR0khid,
       "wingStatsDevWlMcxMeshpointLsaEntriesTable": wingStatsDevWlMcxMeshpointLsaEntriesTable,
       "wingStatsDevWlMcxMeshpointLsaEntriesEntry": wingStatsDevWlMcxMeshpointLsaEntriesEntry,
       "wingStatsDevWlMcxMeshpointLsaEntriesIndex": wingStatsDevWlMcxMeshpointLsaEntriesIndex,
       "wingStatsDevWlMcxMeshpointLsaEntriesLinkAddr": wingStatsDevWlMcxMeshpointLsaEntriesLinkAddr,
       "wingStatsDevWlMcxMeshpointLsaEntriesInterfaceId": wingStatsDevWlMcxMeshpointLsaEntriesInterfaceId,
       "wingStatsDevWlMcxMeshpointLsaEntriesKeepAlive": wingStatsDevWlMcxMeshpointLsaEntriesKeepAlive,
       "wingStatsDevWlMcxMeshpointLsaEntriesLinkState": wingStatsDevWlMcxMeshpointLsaEntriesLinkState,
       "wingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout": wingStatsDevWlMcxMeshpointLsaEntriesLinkTimeout,
       "wingStatsDevWlMcxMeshpointMcastPathsTable": wingStatsDevWlMcxMeshpointMcastPathsTable,
       "wingStatsDevWlMcxMeshpointMcastPathsEntry": wingStatsDevWlMcxMeshpointMcastPathsEntry,
       "wingStatsDevWlMcxMeshpointMcastPathsMpid": wingStatsDevWlMcxMeshpointMcastPathsMpid,
       "wingStatsDevWlMcxMeshpointMcastPathsName": wingStatsDevWlMcxMeshpointMcastPathsName,
       "wingStatsDevWlMcxMeshpointMcastPathsHostname": wingStatsDevWlMcxMeshpointMcastPathsHostname,
       "wingStatsDevWlMcxMeshpointMcastPathsDeviceMac": wingStatsDevWlMcxMeshpointMcastPathsDeviceMac,
       "wingStatsDevWlMcxMeshpointMcastPathsNumEntries": wingStatsDevWlMcxMeshpointMcastPathsNumEntries,
       "wingStatsDevWlMcxMeshpointMcastPathsEntriesTable": wingStatsDevWlMcxMeshpointMcastPathsEntriesTable,
       "wingStatsDevWlMcxMeshpointMcastPathsEntriesEntry": wingStatsDevWlMcxMeshpointMcastPathsEntriesEntry,
       "wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex": wingStatsDevWlMcxMeshpointMcastPathsEntriesIndex,
       "wingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr": wingStatsDevWlMcxMeshpointMcastPathsEntriesGroupAddr,
       "wingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr": wingStatsDevWlMcxMeshpointMcastPathsEntriesMemberAddr,
       "wingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout": wingStatsDevWlMcxMeshpointMcastPathsEntriesPathTimeout,
       "wingStatsDevVrrp": wingStatsDevVrrp,
       "wingStatsDevVrrpGlobalErrTable": wingStatsDevVrrpGlobalErrTable,
       "wingStatsDevVrrpGlobalErrEntry": wingStatsDevVrrpGlobalErrEntry,
       "wingStatsDevVrrpGlobalErrIpTtlErrs": wingStatsDevVrrpGlobalErrIpTtlErrs,
       "wingStatsDevVrrpGlobalErrVersionMismatch": wingStatsDevVrrpGlobalErrVersionMismatch,
       "wingStatsDevVrrpGlobalErrPacketLenErr": wingStatsDevVrrpGlobalErrPacketLenErr,
       "wingStatsDevVrrpGlobalErrChecksumErr": wingStatsDevVrrpGlobalErrChecksumErr,
       "wingStatsDevVrrpGlobalErrInvalidVirtualRouterId": wingStatsDevVrrpGlobalErrInvalidVirtualRouterId,
       "wingStatsDevVrrpGlobalErrAuthMismatch": wingStatsDevVrrpGlobalErrAuthMismatch,
       "wingStatsDevVrrpGlobalErrInvalidTypePackets": wingStatsDevVrrpGlobalErrInvalidTypePackets,
       "wingStatsDevVrrpGlobalErrLastProtocolErrReason": wingStatsDevVrrpGlobalErrLastProtocolErrReason,
       "wingStatsDevVrrpOperationTable": wingStatsDevVrrpOperationTable,
       "wingStatsDevVrrpOperationEntry": wingStatsDevVrrpOperationEntry,
       "wingStatsDevVrrpOperationVirtualRouterId": wingStatsDevVrrpOperationVirtualRouterId,
       "wingStatsDevVrrpOperationIfName": wingStatsDevVrrpOperationIfName,
       "wingStatsDevVrrpOperationVersion": wingStatsDevVrrpOperationVersion,
       "wingStatsDevVrrpOperationState": wingStatsDevVrrpOperationState,
       "wingStatsDevVrrpOperationPriority": wingStatsDevVrrpOperationPriority,
       "wingStatsDevVrrpOperationVirtualAddr": wingStatsDevVrrpOperationVirtualAddr,
       "wingStatsDevVrrpOperationMasterAddr": wingStatsDevVrrpOperationMasterAddr,
       "wingStatsDevVrrpOperationExpiryTimer": wingStatsDevVrrpOperationExpiryTimer,
       "wingStatsDevVrrpOperationMasterDeadTimer": wingStatsDevVrrpOperationMasterDeadTimer,
       "wingStatsDevVrrpDetailTable": wingStatsDevVrrpDetailTable,
       "wingStatsDevVrrpDetailEntry": wingStatsDevVrrpDetailEntry,
       "wingStatsDevVrrpDetailVirtualRouterId": wingStatsDevVrrpDetailVirtualRouterId,
       "wingStatsDevVrrpDetailIfName": wingStatsDevVrrpDetailIfName,
       "wingStatsDevVrrpDetailVersion": wingStatsDevVrrpDetailVersion,
       "wingStatsDevVrrpDetailConfiguredPriority": wingStatsDevVrrpDetailConfiguredPriority,
       "wingStatsDevVrrpDetailAdvertisementInterval": wingStatsDevVrrpDetailAdvertisementInterval,
       "wingStatsDevVrrpDetailLocalIpAddress": wingStatsDevVrrpDetailLocalIpAddress,
       "wingStatsDevVrrpDetailIfStatusAdmin": wingStatsDevVrrpDetailIfStatusAdmin,
       "wingStatsDevVrrpDetailVirtualAddressCount": wingStatsDevVrrpDetailVirtualAddressCount,
       "wingStatsDevVrrpDetailPreempt": wingStatsDevVrrpDetailPreempt,
       "wingStatsDevVrrpDetailPreemptDelay": wingStatsDevVrrpDetailPreemptDelay,
       "wingStatsDevVrrpDetailCrmDownAction": wingStatsDevVrrpDetailCrmDownAction,
       "wingStatsDevVrrpDetailCrmStatus": wingStatsDevVrrpDetailCrmStatus,
       "wingStatsDevVrrpDetailCfgedDeltaPriority": wingStatsDevVrrpDetailCfgedDeltaPriority,
       "wingStatsDevVrrpDetailVirtualMacAddr": wingStatsDevVrrpDetailVirtualMacAddr,
       "wingStatsDevVrrpDetailSyncGroup": wingStatsDevVrrpDetailSyncGroup,
       "wingStatsDevVrrpDetailFailoverSyncGroup": wingStatsDevVrrpDetailFailoverSyncGroup,
       "wingStatsDevVrrpDetailMonitorTable": wingStatsDevVrrpDetailMonitorTable,
       "wingStatsDevVrrpDetailMonitorEntry": wingStatsDevVrrpDetailMonitorEntry,
       "wingStatsDevVrrpDetailMonitorIf": wingStatsDevVrrpDetailMonitorIf,
       "wingStatsDevVrrpDetailMonitorIfStatusAdmin": wingStatsDevVrrpDetailMonitorIfStatusAdmin,
       "wingStatsDevVrrpRouterStatsTable": wingStatsDevVrrpRouterStatsTable,
       "wingStatsDevVrrpRouterStatsEntry": wingStatsDevVrrpRouterStatsEntry,
       "wingStatsDevVrrpRouterStatsVirtualRouterId": wingStatsDevVrrpRouterStatsVirtualRouterId,
       "wingStatsDevVrrpRouterStatsMasterTransitions": wingStatsDevVrrpRouterStatsMasterTransitions,
       "wingStatsDevVrrpRouterStatsNewMasterReason": wingStatsDevVrrpRouterStatsNewMasterReason,
       "wingStatsDevVrrpRouterStatsNumReceivedAdvertisement": wingStatsDevVrrpRouterStatsNumReceivedAdvertisement,
       "wingStatsDevVrrpRouterStatsAdvertisementIntervalErrs": wingStatsDevVrrpRouterStatsAdvertisementIntervalErrs,
       "wingStatsDevVrrpRouterStatsNumSendAdvertisement": wingStatsDevVrrpRouterStatsNumSendAdvertisement,
       "wingStatsDevVrrpRouterStatsReceivedAdvtInitState": wingStatsDevVrrpRouterStatsReceivedAdvtInitState,
       "wingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets": wingStatsDevVrrpRouterStatsReceivedPriorityZeroPackets,
       "wingStatsDevVrrpRouterStatsSendPriorityZeroPackets": wingStatsDevVrrpRouterStatsSendPriorityZeroPackets,
       "wingStatsDevVrrpRouterStatsAddressListErrors": wingStatsDevVrrpRouterStatsAddressListErrors,
       "wingStatsDevCrm": wingStatsDevCrm,
       "wingStatsDevCrmTable": wingStatsDevCrmTable,
       "wingStatsDevCrmEntry": wingStatsDevCrmEntry,
       "wingStatsDevCrmMonitorInterval": wingStatsDevCrmMonitorInterval,
       "wingStatsDevCrmCriticalResTable": wingStatsDevCrmCriticalResTable,
       "wingStatsDevCrmCriticalResEntry": wingStatsDevCrmCriticalResEntry,
       "wingStatsDevCrmCriticalResVia": wingStatsDevCrmCriticalResVia,
       "wingStatsDevCrmCriticalResStatus": wingStatsDevCrmCriticalResStatus,
       "wingStatsDevCrmCriticalResErrorReason": wingStatsDevCrmCriticalResErrorReason,
       "wingStatsDevCrmCriticalResMode": wingStatsDevCrmCriticalResMode,
       "wingStatsDevCrmCriticalResResTable": wingStatsDevCrmCriticalResResTable,
       "wingStatsDevCrmCriticalResResEntry": wingStatsDevCrmCriticalResResEntry,
       "wingStatsDevCrmCriticalResResAddr": wingStatsDevCrmCriticalResResAddr,
       "wingStatsDevCrmCriticalResResMonitorMode": wingStatsDevCrmCriticalResResMonitorMode,
       "wingStatsDevCrmCriticalResResArpVlan": wingStatsDevCrmCriticalResResArpVlan,
       "wingStatsDevCrmCriticalResResStatus": wingStatsDevCrmCriticalResResStatus,
       "wingStatsDevCrmCriticalResResArpPort": wingStatsDevCrmCriticalResResArpPort,
       "wingStatsDevPbr": wingStatsDevPbr,
       "wingStatsDevPbrTable": wingStatsDevPbrTable,
       "wingStatsDevPbrEntry": wingStatsDevPbrEntry,
       "wingStatsDevPbrRouteMapPrecedence": wingStatsDevPbrRouteMapPrecedence,
       "wingStatsDevPbrPrimaryNextHopIfName": wingStatsDevPbrPrimaryNextHopIfName,
       "wingStatsDevPbrPrimaryNextHopIpAddr": wingStatsDevPbrPrimaryNextHopIpAddr,
       "wingStatsDevPbrPrimaryNextHopState": wingStatsDevPbrPrimaryNextHopState,
       "wingStatsDevPbrPrimaryNextHopMonitorMode": wingStatsDevPbrPrimaryNextHopMonitorMode,
       "wingStatsDevPbrSecondaryNextHopIfName": wingStatsDevPbrSecondaryNextHopIfName,
       "wingStatsDevPbrSecondaryNextHopIpAddr": wingStatsDevPbrSecondaryNextHopIpAddr,
       "wingStatsDevPbrSecondaryNextHopState": wingStatsDevPbrSecondaryNextHopState,
       "wingStatsDevPbrSecondaryNextHopMonitorMode": wingStatsDevPbrSecondaryNextHopMonitorMode,
       "wingStatsDevPbrDefaultNextHopIfName": wingStatsDevPbrDefaultNextHopIfName,
       "wingStatsDevPbrDefaultNextHopIpAddr": wingStatsDevPbrDefaultNextHopIpAddr,
       "wingStatsDevPbrDefaultNextHopState": wingStatsDevPbrDefaultNextHopState,
       "wingStatsDevPbrDefaultNextHopMonitorMode": wingStatsDevPbrDefaultNextHopMonitorMode,
       "wingStatsDevPbrWlan": wingStatsDevPbrWlan,
       "wingStatsDevPbrWirelessClientRole": wingStatsDevPbrWirelessClientRole,
       "wingStatsDevPbrInInterface": wingStatsDevPbrInInterface,
       "wingStatsDevPbrIpDscp": wingStatsDevPbrIpDscp,
       "wingStatsDevPbrRulesTable": wingStatsDevPbrRulesTable,
       "wingStatsDevPbrRulesEntry": wingStatsDevPbrRulesEntry,
       "wingStatsDevPbrRuleString": wingStatsDevPbrRuleString,
       "wingStatsDevPbrRulesHitcount": wingStatsDevPbrRulesHitcount,
       "wingStatsDevDynRoute": wingStatsDevDynRoute,
       "wingStatsDevDynRouteIpOspfTable": wingStatsDevDynRouteIpOspfTable,
       "wingStatsDevDynRouteIpOspfEntry": wingStatsDevDynRouteIpOspfEntry,
       "wingStatsDevDynRouteIpOspfRouterId": wingStatsDevDynRouteIpOspfRouterId,
       "wingStatsDevDynRouteIpOspfShutdownFlag": wingStatsDevDynRouteIpOspfShutdownFlag,
       "wingStatsDevDynRouteIpOspfShutdownDueTime": wingStatsDevDynRouteIpOspfShutdownDueTime,
       "wingStatsDevDynRouteIpOspfTos": wingStatsDevDynRouteIpOspfTos,
       "wingStatsDevDynRouteIpOspfRFC2328ConformanceFlag": wingStatsDevDynRouteIpOspfRFC2328ConformanceFlag,
       "wingStatsDevDynRouteIpOspfRFC1583CompatFlag": wingStatsDevDynRouteIpOspfRFC1583CompatFlag,
       "wingStatsDevDynRouteIpOspfOpaquelsaFlag": wingStatsDevDynRouteIpOspfOpaquelsaFlag,
       "wingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag": wingStatsDevDynRouteIpOspfOpaquelsaOriginationBlockedFlag,
       "wingStatsDevDynRouteIpOspfStubRouterAdvFlag": wingStatsDevDynRouteIpOspfStubRouterAdvFlag,
       "wingStatsDevDynRouteIpOspfStubRouterStartupTime": wingStatsDevDynRouteIpOspfStubRouterStartupTime,
       "wingStatsDevDynRouteIpOspfStubRouterShutdownTime": wingStatsDevDynRouteIpOspfStubRouterShutdownTime,
       "wingStatsDevDynRouteIpOspfDelay": wingStatsDevDynRouteIpOspfDelay,
       "wingStatsDevDynRouteIpOspfHoldTime": wingStatsDevDynRouteIpOspfHoldTime,
       "wingStatsDevDynRouteIpOspfMaxHoldTime": wingStatsDevDynRouteIpOspfMaxHoldTime,
       "wingStatsDevDynRouteIpOspfHoldMultiplier": wingStatsDevDynRouteIpOspfHoldMultiplier,
       "wingStatsDevDynRouteIpOspfExecutedFlag": wingStatsDevDynRouteIpOspfExecutedFlag,
       "wingStatsDevDynRouteIpOspfExecutedWhen": wingStatsDevDynRouteIpOspfExecutedWhen,
       "wingStatsDevDynRouteIpOspfTimerDueFlag": wingStatsDevDynRouteIpOspfTimerDueFlag,
       "wingStatsDevDynRouteIpOspfDueIn": wingStatsDevDynRouteIpOspfDueIn,
       "wingStatsDevDynRouteIpOspflsaRefreshTimer": wingStatsDevDynRouteIpOspflsaRefreshTimer,
       "wingStatsDevDynRouteIpOspfAbrFlag": wingStatsDevDynRouteIpOspfAbrFlag,
       "wingStatsDevDynRouteIpOspfAbrType": wingStatsDevDynRouteIpOspfAbrType,
       "wingStatsDevDynRouteIpOspfAsbrFlag": wingStatsDevDynRouteIpOspfAsbrFlag,
       "wingStatsDevDynRouteIpOspfExtLsdbCount": wingStatsDevDynRouteIpOspfExtLsdbCount,
       "wingStatsDevDynRouteIpOspfExtLsdbCsum": wingStatsDevDynRouteIpOspfExtLsdbCsum,
       "wingStatsDevDynRouteIpOspfOpaqueLsdbCount": wingStatsDevDynRouteIpOspfOpaqueLsdbCount,
       "wingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum": wingStatsDevDynRouteIpOspfOpaqueExtLsdbCsum,
       "wingStatsDevDynRouteIpOspfNumAreasAttached": wingStatsDevDynRouteIpOspfNumAreasAttached,
       "wingStatsDevDynRouteIpOspfMaxRoutes": wingStatsDevDynRouteIpOspfMaxRoutes,
       "wingStatsDevDynRouteIpOspfRoutesReceived": wingStatsDevDynRouteIpOspfRoutesReceived,
       "wingStatsDevDynRouteIpOspfMaxIgnoreStateCount": wingStatsDevDynRouteIpOspfMaxIgnoreStateCount,
       "wingStatsDevDynRouteIpOspfIgnoreStateCount": wingStatsDevDynRouteIpOspfIgnoreStateCount,
       "wingStatsDevDynRouteIpOspfIgnoreStateTimeout": wingStatsDevDynRouteIpOspfIgnoreStateTimeout,
       "wingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout": wingStatsDevDynRouteIpOspfIgnoreStateMonitorTimeout,
       "wingStatsDevDynRouteIpOspfState": wingStatsDevDynRouteIpOspfState,
       "wingStatsDevDynRouteOspfAreaTable": wingStatsDevDynRouteOspfAreaTable,
       "wingStatsDevDynRouteOspfAreaEntry": wingStatsDevDynRouteOspfAreaEntry,
       "wingStatsDevDynRouteOspfAreaId": wingStatsDevDynRouteOspfAreaId,
       "wingStatsDevDynRouteOspfAreaType": wingStatsDevDynRouteOspfAreaType,
       "wingStatsDevDynRouteOspfAreaBackboneFlag": wingStatsDevDynRouteOspfAreaBackboneFlag,
       "wingStatsDevDynRouteOspfAreaNoSummaryFlag": wingStatsDevDynRouteOspfAreaNoSummaryFlag,
       "wingStatsDevDynRouteOspfAreaShortcutType": wingStatsDevDynRouteOspfAreaShortcutType,
       "wingStatsDevDynRouteOspfAreaShortcutCapability": wingStatsDevDynRouteOspfAreaShortcutCapability,
       "wingStatsDevDynRouteOspfAreaInterfaceNum": wingStatsDevDynRouteOspfAreaInterfaceNum,
       "wingStatsDevDynRouteOspfAreaActiveInterfaces": wingStatsDevDynRouteOspfAreaActiveInterfaces,
       "wingStatsDevDynRouteOspfAreaNssaFlag": wingStatsDevDynRouteOspfAreaNssaFlag,
       "wingStatsDevDynRouteOspfAreaNssaTransType": wingStatsDevDynRouteOspfAreaNssaTransType,
       "wingStatsDevDynRouteOspfAreaStubRouterStateFlag": wingStatsDevDynRouteOspfAreaStubRouterStateFlag,
       "wingStatsDevDynRouteOspfAreaAdminStubRoutedFlag": wingStatsDevDynRouteOspfAreaAdminStubRoutedFlag,
       "wingStatsDevDynRouteOspfAreaStartupTimeDue": wingStatsDevDynRouteOspfAreaStartupTimeDue,
       "wingStatsDevDynRouteOspfAreaNumFullyAdjNbrs": wingStatsDevDynRouteOspfAreaNumFullyAdjNbrs,
       "wingStatsDevDynRouteOspfAreaAuthType": wingStatsDevDynRouteOspfAreaAuthType,
       "wingStatsDevDynRouteOspfAreaNumFullVirtualAdj": wingStatsDevDynRouteOspfAreaNumFullVirtualAdj,
       "wingStatsDevDynRouteOspfAreaNumSpfExecuted": wingStatsDevDynRouteOspfAreaNumSpfExecuted,
       "wingStatsDevDynRouteOspfAreaNumTotalLsa": wingStatsDevDynRouteOspfAreaNumTotalLsa,
       "wingStatsDevDynRouteOspfAreaNumRouterLsa": wingStatsDevDynRouteOspfAreaNumRouterLsa,
       "wingStatsDevDynRouteOspfAreaRouterLsaCsum": wingStatsDevDynRouteOspfAreaRouterLsaCsum,
       "wingStatsDevDynRouteOspfAreaNumNetworkLsa": wingStatsDevDynRouteOspfAreaNumNetworkLsa,
       "wingStatsDevDynRouteOspfAreaNetworkLsaCsum": wingStatsDevDynRouteOspfAreaNetworkLsaCsum,
       "wingStatsDevDynRouteOspfAreaNumSummaryLsa": wingStatsDevDynRouteOspfAreaNumSummaryLsa,
       "wingStatsDevDynRouteOspfAreaSummaryLsaCsum": wingStatsDevDynRouteOspfAreaSummaryLsaCsum,
       "wingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa": wingStatsDevDynRouteOspfAreaNumAsbrSummaryLsa,
       "wingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum": wingStatsDevDynRouteOspfAreaAsbrSummaryLsaCsum,
       "wingStatsDevDynRouteOspfAreaNumNssaLsa": wingStatsDevDynRouteOspfAreaNumNssaLsa,
       "wingStatsDevDynRouteOspfAreaNssaLsaCsum": wingStatsDevDynRouteOspfAreaNssaLsaCsum,
       "wingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa": wingStatsDevDynRouteOspfAreaNumOpaqueLinkLsa,
       "wingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum": wingStatsDevDynRouteOspfAreaOpaqueLinkLsaCsum,
       "wingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa": wingStatsDevDynRouteOspfAreaNumOpaqueAreaLsa,
       "wingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum": wingStatsDevDynRouteOspfAreaOpaqueAreaLsaCsum,
       "wingStatsDevDynRouteIpOspfNetworkRoutesTable": wingStatsDevDynRouteIpOspfNetworkRoutesTable,
       "wingStatsDevDynRouteIpOspfNetworkRoutesEntry": wingStatsDevDynRouteIpOspfNetworkRoutesEntry,
       "wingStatsDevDynRouteIpOspfNetworkRoute": wingStatsDevDynRouteIpOspfNetworkRoute,
       "wingStatsDevDynRouteIpOspfNetworkRoutesPathType": wingStatsDevDynRouteIpOspfNetworkRoutesPathType,
       "wingStatsDevDynRouteIpOspfNetworkRoutesDestType": wingStatsDevDynRouteIpOspfNetworkRoutesDestType,
       "wingStatsDevDynRouteIpOspfNetworkRoutesCost": wingStatsDevDynRouteIpOspfNetworkRoutesCost,
       "wingStatsDevDynRouteIpOspfNetworkRoutesArea": wingStatsDevDynRouteIpOspfNetworkRoutesArea,
       "wingStatsDevDynRouteIpOspfNetworkRoutesMPathsTable": wingStatsDevDynRouteIpOspfNetworkRoutesMPathsTable,
       "wingStatsDevDynRouteIpOspfNetworkRoutesMPathsEntry": wingStatsDevDynRouteIpOspfNetworkRoutesMPathsEntry,
       "wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex": wingStatsDevDynRouteIpOspfNetworkRoutesMPathsIndex,
       "wingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags": wingStatsDevDynRouteIpOspfNetworkRoutesAttachedFlags,
       "wingStatsDevDynRouteIpOspfNetworkRoutesIfName": wingStatsDevDynRouteIpOspfNetworkRoutesIfName,
       "wingStatsDevDynRouteIpOspfNetworkRoutesNextHop": wingStatsDevDynRouteIpOspfNetworkRoutesNextHop,
       "wingStatsDevDynRouteIpOspfRouterRoutesTable": wingStatsDevDynRouteIpOspfRouterRoutesTable,
       "wingStatsDevDynRouteIpOspfRouterRoutesEntry": wingStatsDevDynRouteIpOspfRouterRoutesEntry,
       "wingStatsDevDynRouteIpOspfRouterRoute": wingStatsDevDynRouteIpOspfRouterRoute,
       "wingStatsDevDynRouteIpOspfRouterRoutesInfoTable": wingStatsDevDynRouteIpOspfRouterRoutesInfoTable,
       "wingStatsDevDynRouteIpOspfRouterRoutesInfoEntry": wingStatsDevDynRouteIpOspfRouterRoutesInfoEntry,
       "wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex": wingStatsDevDynRouteIpOspfRouterRoutesInfoIndex,
       "wingStatsDevDynRouteIpOspfRouterRoutePathType": wingStatsDevDynRouteIpOspfRouterRoutePathType,
       "wingStatsDevDynRouteIpOspfRouterRouteArea": wingStatsDevDynRouteIpOspfRouterRouteArea,
       "wingStatsDevDynRouteIpOspfRouterRouteCost": wingStatsDevDynRouteIpOspfRouterRouteCost,
       "wingStatsDevDynRouteIpOspfRouterRouteFlags": wingStatsDevDynRouteIpOspfRouterRouteFlags,
       "wingStatsDevDynRouteIpOspfRouterRouteAttachedFlag": wingStatsDevDynRouteIpOspfRouterRouteAttachedFlag,
       "wingStatsDevDynRouteIpOspfRouterRouteIfName": wingStatsDevDynRouteIpOspfRouterRouteIfName,
       "wingStatsDevDynRouteIpOspfRouterRouteNextHop": wingStatsDevDynRouteIpOspfRouterRouteNextHop,
       "wingstatsDevDynRouteIpOspfExtRoutesTable": wingstatsDevDynRouteIpOspfExtRoutesTable,
       "wingstatsDevDynRouteIpOspfExtRoutesEntry": wingstatsDevDynRouteIpOspfExtRoutesEntry,
       "wingstatsDevDynRouteIpOspfExtRoute": wingstatsDevDynRouteIpOspfExtRoute,
       "wingstatsDevDynRouteIpOspfExtRoutePathType": wingstatsDevDynRouteIpOspfExtRoutePathType,
       "wingstatsDevDynRouteIpOspfExtRouteArea": wingstatsDevDynRouteIpOspfExtRouteArea,
       "wingstatsDevDynRouteIpOspfExtRouteCost": wingstatsDevDynRouteIpOspfExtRouteCost,
       "wingstatsDevDynRouteIpOspfExtRouteType2Cost": wingstatsDevDynRouteIpOspfExtRouteType2Cost,
       "wingstatsDevDynRouteIpOspfExtRouteTag": wingstatsDevDynRouteIpOspfExtRouteTag,
       "wingstatsDevDynRouteIpOspfExtRoutesMPathsTable": wingstatsDevDynRouteIpOspfExtRoutesMPathsTable,
       "wingstatsDevDynRouteIpOspfExtRoutesMPathsEntry": wingstatsDevDynRouteIpOspfExtRoutesMPathsEntry,
       "wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex": wingstatsDevDynRouteIpOspfExtRoutesMPathsIndex,
       "wingstatsDevDynRouteIpOspfExtRouteAttachedFlag": wingstatsDevDynRouteIpOspfExtRouteAttachedFlag,
       "wingstatsDevDynRouteIpOspfExtRouteIfName": wingstatsDevDynRouteIpOspfExtRouteIfName,
       "wingstatsDevDynRouteIpOspfExtRouteNextHop": wingstatsDevDynRouteIpOspfExtRouteNextHop,
       "wingStatsDevDynRouteBorderRoutersTable": wingStatsDevDynRouteBorderRoutersTable,
       "wingStatsDevDynRouteBorderRoutersEntry": wingStatsDevDynRouteBorderRoutersEntry,
       "wingStatsDevDynRouteBorderRouter": wingStatsDevDynRouteBorderRouter,
       "wingStatsDevDynRouteBorderRoutersInfoTable": wingStatsDevDynRouteBorderRoutersInfoTable,
       "wingStatsDevDynRouteBorderRoutersInfoEntry": wingStatsDevDynRouteBorderRoutersInfoEntry,
       "wingStatsDevDynRouteBorderRoutersInfoIndex": wingStatsDevDynRouteBorderRoutersInfoIndex,
       "wingStatsDevDynRouteBorderRouterPathType": wingStatsDevDynRouteBorderRouterPathType,
       "wingStatsDevDynRouteBorderRouterArea": wingStatsDevDynRouteBorderRouterArea,
       "wingStatsDevDynRouteBorderRouterCost": wingStatsDevDynRouteBorderRouterCost,
       "wingStatsDevDynRouteBorderRouterFlags": wingStatsDevDynRouteBorderRouterFlags,
       "wingStatsDevDynRouteBorderRouterAttachedFlag": wingStatsDevDynRouteBorderRouterAttachedFlag,
       "wingStatsDevDynRouteBorderRouterIfName": wingStatsDevDynRouteBorderRouterIfName,
       "wingStatsDevDynRouteBorderRouterNextHop": wingStatsDevDynRouteBorderRouterNextHop,
       "wingStatsDevDynRouteOspfIfTable": wingStatsDevDynRouteOspfIfTable,
       "wingStatsDevDynRouteOspfIfEntry": wingStatsDevDynRouteOspfIfEntry,
       "wingStatsDevDynRouteOspfIfName": wingStatsDevDynRouteOspfIfName,
       "wingStatsDevDynRouteOspfIfStatusFlag": wingStatsDevDynRouteOspfIfStatusFlag,
       "wingStatsDevDynRouteOspfIfIndex": wingStatsDevDynRouteOspfIfIndex,
       "wingStatsDevDynRouteOspfIfMtu": wingStatsDevDynRouteOspfIfMtu,
       "wingStatsDevDynRouteOspfIfBandwidth": wingStatsDevDynRouteOspfIfBandwidth,
       "wingStatsDevDynRouteOspfIfFlags": wingStatsDevDynRouteOspfIfFlags,
       "wingStatsDevDynRouteOspfIfEnabled": wingStatsDevDynRouteOspfIfEnabled,
       "wingStatsDevDynRouteOspfIfInfoTable": wingStatsDevDynRouteOspfIfInfoTable,
       "wingStatsDevDynRouteOspfIfInfoEntry": wingStatsDevDynRouteOspfIfInfoEntry,
       "wingStatsDevDynRouteOspfIfInfoIndex": wingStatsDevDynRouteOspfIfInfoIndex,
       "wingStatsDevDynRouteOspfIfIpAddr": wingStatsDevDynRouteOspfIfIpAddr,
       "wingStatsDevDynRouteOspfIfMask": wingStatsDevDynRouteOspfIfMask,
       "wingStatsDevDynRouteOspfIfBroadcastOrP2P": wingStatsDevDynRouteOspfIfBroadcastOrP2P,
       "wingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr": wingStatsDevDynRouteOspfIfBroadcastOrP2PIpAddr,
       "wingStatsDevDynRouteOspfIfAreaId": wingStatsDevDynRouteOspfIfAreaId,
       "wingStatsDevDynRouteOspfIfMtuMismatchDetectFlag": wingStatsDevDynRouteOspfIfMtuMismatchDetectFlag,
       "wingStatsDevDynRouteOspfIfRouterId": wingStatsDevDynRouteOspfIfRouterId,
       "wingStatsDevDynRouteOspfIfNetworkType": wingStatsDevDynRouteOspfIfNetworkType,
       "wingStatsDevDynRouteOspfIfCost": wingStatsDevDynRouteOspfIfCost,
       "wingStatsDevDynRouteOspfIfTransmitDelay": wingStatsDevDynRouteOspfIfTransmitDelay,
       "wingStatsDevDynRouteOspfIfIsmState": wingStatsDevDynRouteOspfIfIsmState,
       "wingStatsDevDynRouteOspfIfPriority": wingStatsDevDynRouteOspfIfPriority,
       "wingStatsDevDynRouteOspfIfDesgRouterId": wingStatsDevDynRouteOspfIfDesgRouterId,
       "wingStatsDevDynRouteOspfIfDesgRouterAddr": wingStatsDevDynRouteOspfIfDesgRouterAddr,
       "wingStatsDevDynRouteOspfIfBackupDesgRouterId": wingStatsDevDynRouteOspfIfBackupDesgRouterId,
       "wingStatsDevDynRouteOspfIfBackupDesgRouterAddr": wingStatsDevDynRouteOspfIfBackupDesgRouterAddr,
       "wingStatsDevDynRouteOspfIfMcastMembership": wingStatsDevDynRouteOspfIfMcastMembership,
       "wingStatsDevDynRouteOspfIfSubSecHelloFlag": wingStatsDevDynRouteOspfIfSubSecHelloFlag,
       "wingStatsDevDynRouteOspfIfHelloInterval": wingStatsDevDynRouteOspfIfHelloInterval,
       "wingStatsDevDynRouteOspfIfDeadInterval": wingStatsDevDynRouteOspfIfDeadInterval,
       "wingStatsDevDynRouteOspfIfWaitInterval": wingStatsDevDynRouteOspfIfWaitInterval,
       "wingStatsDevDynRouteOspfIfRetransmitInterval": wingStatsDevDynRouteOspfIfRetransmitInterval,
       "wingStatsDevDynRouteOspfIfPassiveFlag": wingStatsDevDynRouteOspfIfPassiveFlag,
       "wingStatsDevDynRouteOspfIfHelloDueIn": wingStatsDevDynRouteOspfIfHelloDueIn,
       "wingStatsDevDynRouteOspfIfNeighborCount": wingStatsDevDynRouteOspfIfNeighborCount,
       "wingStatsDevDynRouteOspfIfAdjNeighborCount": wingStatsDevDynRouteOspfIfAdjNeighborCount,
       "wingStatsDevDynRouteNeighborTable": wingStatsDevDynRouteNeighborTable,
       "wingStatsDevDynRouteNeighborEntry": wingStatsDevDynRouteNeighborEntry,
       "wingStatsDevDynRouteNeighborIndex": wingStatsDevDynRouteNeighborIndex,
       "wingStatsDevDynRouteNeighborRouterId": wingStatsDevDynRouteNeighborRouterId,
       "wingStatsDevDynRouteNeighborPriority": wingStatsDevDynRouteNeighborPriority,
       "wingStatsDevDynRouteNeighborSelfState": wingStatsDevDynRouteNeighborSelfState,
       "wingStatsDevDynRouteNeighborDeadTime": wingStatsDevDynRouteNeighborDeadTime,
       "wingStatsDevDynRouteNeighborAddr": wingStatsDevDynRouteNeighborAddr,
       "wingStatsDevDynRouteNeighborIfName": wingStatsDevDynRouteNeighborIfName,
       "wingStatsDevDynRouteNeighborSrcAddr": wingStatsDevDynRouteNeighborSrcAddr,
       "wingStatsDevDynRouteNeighborRetansmitCount": wingStatsDevDynRouteNeighborRetansmitCount,
       "wingStatsDevDynRouteNeighborRequestCount": wingStatsDevDynRouteNeighborRequestCount,
       "wingStatsDevDynRouteNeighborSummaryCount": wingStatsDevDynRouteNeighborSummaryCount,
       "wingStatsDevPppoe": wingStatsDevPppoe,
       "wingStatsDevPppoeStatusTable": wingStatsDevPppoeStatusTable,
       "wingStatsDevPppoeStatusEntry": wingStatsDevPppoeStatusEntry,
       "wingStatsDevPppoeStatusPeer": wingStatsDevPppoeStatusPeer,
       "wingStatsDevPppoeStatusSid": wingStatsDevPppoeStatusSid,
       "wingStatsDevPppoeStatusService": wingStatsDevPppoeStatusService,
       "wingStatsDevPppoeStatusStatus": wingStatsDevPppoeStatusStatus,
       "wingStatsDevPppoeStatusMtu": wingStatsDevPppoeStatusMtu,
       "wingStatsDevPppoeStatusDns1": wingStatsDevPppoeStatusDns1,
       "wingStatsDevPppoeStatusDns2": wingStatsDevPppoeStatusDns2,
       "wingStatsDevPppoeCfgTable": wingStatsDevPppoeCfgTable,
       "wingStatsDevPppoeCfgEntry": wingStatsDevPppoeCfgEntry,
       "wingStatsDevPppoeCfgAuthtype": wingStatsDevPppoeCfgAuthtype,
       "wingStatsDevPppoeCfgIdleTime": wingStatsDevPppoeCfgIdleTime,
       "wingStatsDevPppoeCfgKalive": wingStatsDevPppoeCfgKalive,
       "wingStatsDevPppoeCfgMtu": wingStatsDevPppoeCfgMtu,
       "wingStatsDevPppoeCfgNet": wingStatsDevPppoeCfgNet,
       "wingStatsDevPppoeCfgService": wingStatsDevPppoeCfgService,
       "wingStatsDevPppoeCfgUsername": wingStatsDevPppoeCfgUsername,
       "wingStatsDevPppoeCfgPasswd": wingStatsDevPppoeCfgPasswd,
       "wingStatsDevPppoeCfgShutdown": wingStatsDevPppoeCfgShutdown,
       "wingStatsDevl2tpv3": wingStatsDevl2tpv3,
       "wingStatsDevl2tpv3TunnelTable": wingStatsDevl2tpv3TunnelTable,
       "wingStatsDevl2tpv3TunnelEntry": wingStatsDevl2tpv3TunnelEntry,
       "wingStatsDevl2tpv3TunnelName": wingStatsDevl2tpv3TunnelName,
       "wingStatsDevl2tpv3TunnelCtrlConnId": wingStatsDevl2tpv3TunnelCtrlConnId,
       "wingStatsDevl2tpv3TunnelUpTime": wingStatsDevl2tpv3TunnelUpTime,
       "wingStatsDevl2tpv3TunnelPeerAddr": wingStatsDevl2tpv3TunnelPeerAddr,
       "wingStatsDevl2tpv3TunnelLocalAddr": wingStatsDevl2tpv3TunnelLocalAddr,
       "wingStatsDevl2tpv3TunnelMtu": wingStatsDevl2tpv3TunnelMtu,
       "wingStatsDevl2tpv3TunnelPeerHostName": wingStatsDevl2tpv3TunnelPeerHostName,
       "wingStatsDevl2tpv3TunnelPeerCtrlConnId": wingStatsDevl2tpv3TunnelPeerCtrlConnId,
       "wingStatsDevl2tpv3TunnelPeerVendorName": wingStatsDevl2tpv3TunnelPeerVendorName,
       "wingStatsDevl2tpv3TunnelState": wingStatsDevl2tpv3TunnelState,
       "wingStatsDevl2tpv3TunnelEncapsulationProtocol": wingStatsDevl2tpv3TunnelEncapsulationProtocol,
       "wingStatsDevl2tpv3TunnelNextTxSeqNum": wingStatsDevl2tpv3TunnelNextTxSeqNum,
       "wingStatsDevl2tpv3TunnelNextRxSeqNum": wingStatsDevl2tpv3TunnelNextRxSeqNum,
       "wingStatsDevl2tpv3TunnelRxAckSeqNum": wingStatsDevl2tpv3TunnelRxAckSeqNum,
       "wingStatsDevl2tpv3TunnelRetransmitCount": wingStatsDevl2tpv3TunnelRetransmitCount,
       "wingStatsDevl2tpv3TunnelReconnectCount": wingStatsDevl2tpv3TunnelReconnectCount,
       "wingStatsDevl2tpv3Sessions": wingStatsDevl2tpv3Sessions,
       "wingStatsDevl2tpv3SessionsVlansTable": wingStatsDevl2tpv3SessionsVlansTable,
       "wingStatsDevl2tpv3SessionsVlansEntry": wingStatsDevl2tpv3SessionsVlansEntry,
       "wingStatsDevl2tpv3SessionsVlanId": wingStatsDevl2tpv3SessionsVlanId,
       "wingStatsDevl2tpv3SessionsTable": wingStatsDevl2tpv3SessionsTable,
       "wingStatsDevl2tpv3SessionsEntry": wingStatsDevl2tpv3SessionsEntry,
       "wingStatsDevl2tpv3SessionsName": wingStatsDevl2tpv3SessionsName,
       "wingStatsDevl2tpv3TunnelNativeVlanId": wingStatsDevl2tpv3TunnelNativeVlanId,
       "wingStatsDevl2tpv3TunnelTrunkSession": wingStatsDevl2tpv3TunnelTrunkSession,
       "wingStatsDevl2tpv3TunnelNativeVlanTagged": wingStatsDevl2tpv3TunnelNativeVlanTagged,
       "wingStatsDevl2tpv3SessionsPseudoWireType": wingStatsDevl2tpv3SessionsPseudoWireType,
       "wingStatsDevl2tpv3SessionsCallSerialNumber": wingStatsDevl2tpv3SessionsCallSerialNumber,
       "wingStatsDevl2tpv3SessionsLocalSessionId": wingStatsDevl2tpv3SessionsLocalSessionId,
       "wingStatsDevl2tpv3SessionsRemoteSessionId": wingStatsDevl2tpv3SessionsRemoteSessionId,
       "wingStatsDevl2tpv3SessionsLocalCookieSize": wingStatsDevl2tpv3SessionsLocalCookieSize,
       "wingStatsDevl2tpv3SessionsLocalcookieWord1": wingStatsDevl2tpv3SessionsLocalcookieWord1,
       "wingStatsDevl2tpv3SessionsLocalCookieWord2": wingStatsDevl2tpv3SessionsLocalCookieWord2,
       "wingStatsDevl2tpv3SessionsRemoteCookieSize": wingStatsDevl2tpv3SessionsRemoteCookieSize,
       "wingStatsDevl2tpv3SessionsRemoteCookieWord1": wingStatsDevl2tpv3SessionsRemoteCookieWord1,
       "wingStatsDevl2tpv3SessionsRemoteCookieWord2": wingStatsDevl2tpv3SessionsRemoteCookieWord2,
       "wingStatsDevl2tpv3SessionsState": wingStatsDevl2tpv3SessionsState,
       "wingStatsDevl2tpv3SessionsRemoteEndId": wingStatsDevl2tpv3SessionsRemoteEndId,
       "wingStatsDevl2tpv3SessionsRxPktCounter": wingStatsDevl2tpv3SessionsRxPktCounter,
       "wingStatsDevl2tpv3SessionsRxBytesCounter": wingStatsDevl2tpv3SessionsRxBytesCounter,
       "wingStatsDevl2tpv3SessionsTxPktCounter": wingStatsDevl2tpv3SessionsTxPktCounter,
       "wingStatsDevl2tpv3SessionsTxBytesCounter": wingStatsDevl2tpv3SessionsTxBytesCounter,
       "wingStatsDevl2tpv3SessionsNumDroppedPkts": wingStatsDevl2tpv3SessionsNumDroppedPkts,
       "wingStatsRfd": wingStatsRfd,
       "wingStatsRfdTable": wingStatsRfdTable,
       "wingStatsRfdEntry": wingStatsRfdEntry,
       "wingStatsRfdName": wingStatsRfdName,
       "wingStatsRfdManager": wingStatsRfdManager,
       "wingStatsRfdWl": wingStatsRfdWl,
       "wingStatsRfdWlApInfo": wingStatsRfdWlApInfo,
       "wingStatsRfdWlApInfoTable": wingStatsRfdWlApInfoTable,
       "wingStatsRfdWlApInfoEntry": wingStatsRfdWlApInfoEntry,
       "wingStatsRfdWlApInfoMac": wingStatsRfdWlApInfoMac,
       "wingStatsRfdWlApInfoFaultDetected": wingStatsRfdWlApInfoFaultDetected,
       "wingStatsRfdWlApInfoNumRadios": wingStatsRfdWlApInfoNumRadios,
       "wingStatsRfdWlApInfoNumClients": wingStatsRfdWlApInfoNumClients,
       "wingStatsRfdWlApInfoLastCalTime": wingStatsRfdWlApInfoLastCalTime,
       "wingStatsRfdWlApInfoType": wingStatsRfdWlApInfoType,
       "wingStatsRfdWlApInfoStatsMode": wingStatsRfdWlApInfoStatsMode,
       "wingStatsRfdWlApInfoStatsInterval": wingStatsRfdWlApInfoStatsInterval,
       "wingStatsRfdWlApInfoHostname": wingStatsRfdWlApInfoHostname,
       "wingStatsRfdWlApInfoRfDomainName": wingStatsRfdWlApInfoRfDomainName,
       "wingStatsRfdWlApInfoLocation": wingStatsRfdWlApInfoLocation,
       "wingStatsRfdWlApInfoAdoptedTo": wingStatsRfdWlApInfoAdoptedTo,
       "wingStatsRfdWlApInfoIp": wingStatsRfdWlApInfoIp,
       "wingStatsRfdWlClient": wingStatsRfdWlClient,
       "wingStatsRfdWlClientTable": wingStatsRfdWlClientTable,
       "wingStatsRfdWlClientEntry": wingStatsRfdWlClientEntry,
       "wingStatsRfdWlClientMac": wingStatsRfdWlClientMac,
       "wingStatsRfdWlClientMacName": wingStatsRfdWlClientMacName,
       "wingStatsRfdWlClientVendor": wingStatsRfdWlClientVendor,
       "wingStatsRfdWlClientBss": wingStatsRfdWlClientBss,
       "wingStatsRfdWlClientAp": wingStatsRfdWlClientAp,
       "wingStatsRfdWlClientRadioNum": wingStatsRfdWlClientRadioNum,
       "wingStatsRfdWlClientRadioType": wingStatsRfdWlClientRadioType,
       "wingStatsRfdWlClientRadioEnc": wingStatsRfdWlClientRadioEnc,
       "wingStatsRfdWlClientRadioAuth": wingStatsRfdWlClientRadioAuth,
       "wingStatsRfdWlClientWlan": wingStatsRfdWlClientWlan,
       "wingStatsRfdWlClientState": wingStatsRfdWlClientState,
       "wingStatsRfdWlClientHotspotAuthed": wingStatsRfdWlClientHotspotAuthed,
       "wingStatsRfdWlClientVlan": wingStatsRfdWlClientVlan,
       "wingStatsRfdWlClientUserName": wingStatsRfdWlClientUserName,
       "wingStatsRfdWlClientIp": wingStatsRfdWlClientIp,
       "wingStatsRfdWlClientRfdName": wingStatsRfdWlClientRfdName,
       "wingStatsRfdWlClientHostname": wingStatsRfdWlClientHostname,
       "wingStatsRfdWlClientLocation": wingStatsRfdWlClientLocation,
       "wingStatsRfdWlClientRadioId": wingStatsRfdWlClientRadioId,
       "wingStatsRfdWlClientRadioAlias": wingStatsRfdWlClientRadioAlias,
       "wingStatsRfdWlClientDetail": wingStatsRfdWlClientDetail,
       "wingStatsRfdWlClientDetailTable": wingStatsRfdWlClientDetailTable,
       "wingStatsRfdWlClientDetailEntry": wingStatsRfdWlClientDetailEntry,
       "wingStatsRfdWlClientDetailMac": wingStatsRfdWlClientDetailMac,
       "wingStatsRfdWlClientDetailMacName": wingStatsRfdWlClientDetailMacName,
       "wingStatsRfdWlClientDetailVendor": wingStatsRfdWlClientDetailVendor,
       "wingStatsRfdWlClientDetailBss": wingStatsRfdWlClientDetailBss,
       "wingStatsRfdWlClientDetailAp": wingStatsRfdWlClientDetailAp,
       "wingStatsRfdWlClientDetailRadioNum": wingStatsRfdWlClientDetailRadioNum,
       "wingStatsRfdWlClientDetailRadioType": wingStatsRfdWlClientDetailRadioType,
       "wingStatsRfdWlClientDetailEnc": wingStatsRfdWlClientDetailEnc,
       "wingStatsRfdWlClientDetailAuth": wingStatsRfdWlClientDetailAuth,
       "wingStatsRfdWlClientDetailWlan": wingStatsRfdWlClientDetailWlan,
       "wingStatsRfdWlClientDetailState": wingStatsRfdWlClientDetailState,
       "wingStatsRfdWlClientDetailHotspotAuthed": wingStatsRfdWlClientDetailHotspotAuthed,
       "wingStatsRfdWlClientDetailVlan": wingStatsRfdWlClientDetailVlan,
       "wingStatsRfdWlClientDetailUsername": wingStatsRfdWlClientDetailUsername,
       "wingStatsRfdWlClientDetailIp": wingStatsRfdWlClientDetailIp,
       "wingStatsRfdWlClientDetailRfDomainName": wingStatsRfdWlClientDetailRfDomainName,
       "wingStatsRfdWlClientDetailMc2ucStreams": wingStatsRfdWlClientDetailMc2ucStreams,
       "wingStatsRfdWlClientDetailHostname": wingStatsRfdWlClientDetailHostname,
       "wingStatsRfdWlClientDetailLocation": wingStatsRfdWlClientDetailLocation,
       "wingStatsRfdWlClientDetailRadioId": wingStatsRfdWlClientDetailRadioId,
       "wingStatsRfdWlClientDetailRadioAlias": wingStatsRfdWlClientDetailRadioAlias,
       "wingStatsRfdWlClientDetailSsid": wingStatsRfdWlClientDetailSsid,
       "wingStatsRfdWlClientDetailAid": wingStatsRfdWlClientDetailAid,
       "wingStatsRfdWlClientDetailRates": wingStatsRfdWlClientDetailRates,
       "wingStatsRfdWlClientDetailInPsp": wingStatsRfdWlClientDetailInPsp,
       "wingStatsRfdWlClientDetailIsWmm": wingStatsRfdWlClientDetailIsWmm,
       "wingStatsRfdWlClientDetailUapsd": wingStatsRfdWlClientDetailUapsd,
       "wingStatsRfdWlClientDetailSmPowersave": wingStatsRfdWlClientDetailSmPowersave,
       "wingStatsRfdWlClientDetailHtCapable": wingStatsRfdWlClientDetailHtCapable,
       "wingStatsRfdWlClientDetailShortGi": wingStatsRfdWlClientDetailShortGi,
       "wingStatsRfdWlClientDetailCurWidth40": wingStatsRfdWlClientDetailCurWidth40,
       "wingStatsRfdWlClientDetailAmsduSize": wingStatsRfdWlClientDetailAmsduSize,
       "wingStatsRfdWlClientDetailAmpduSize": wingStatsRfdWlClientDetailAmpduSize,
       "wingStatsRfdWlClientDetailAmpduSpacing": wingStatsRfdWlClientDetailAmpduSpacing,
       "wingStatsRfdWlClientDetailRifs": wingStatsRfdWlClientDetailRifs,
       "wingStatsRfdWlClientDetailLastActive": wingStatsRfdWlClientDetailLastActive,
       "wingStatsRfdWlClientDetailLastAssoc": wingStatsRfdWlClientDetailLastAssoc,
       "wingStatsRfdWlClientDetailSessTime": wingStatsRfdWlClientDetailSessTime,
       "wingStatsRfdWlClientDetailIdleTime": wingStatsRfdWlClientDetailIdleTime,
       "wingStatsRfdWlClientDetailMaxPhyRate": wingStatsRfdWlClientDetailMaxPhyRate,
       "wingStatsRfdWlClientDetailMaxUserRate": wingStatsRfdWlClientDetailMaxUserRate,
       "wingStatsRfdWlClientDetailIsVoice": wingStatsRfdWlClientDetailIsVoice,
       "wingStatsRfdWlClientDetailIsCallActive": wingStatsRfdWlClientDetailIsCallActive,
       "wingStatsRfdWlClientStat": wingStatsRfdWlClientStat,
       "wingStatsRfdWlClientStatTable": wingStatsRfdWlClientStatTable,
       "wingStatsRfdWlClientStatEntry": wingStatsRfdWlClientStatEntry,
       "wingStatsRfdWlClientStatMac": wingStatsRfdWlClientStatMac,
       "wingStatsRfdWlClientStatMacName": wingStatsRfdWlClientStatMacName,
       "wingStatsRfdWlClientStatVendor": wingStatsRfdWlClientStatVendor,
       "wingStatsRfdWlClientStatAp": wingStatsRfdWlClientStatAp,
       "wingStatsRfdWlClientStatTxBytes": wingStatsRfdWlClientStatTxBytes,
       "wingStatsRfdWlClientStatRxBytes": wingStatsRfdWlClientStatRxBytes,
       "wingStatsRfdWlClientStatTxPkts": wingStatsRfdWlClientStatTxPkts,
       "wingStatsRfdWlClientStatRxPkts": wingStatsRfdWlClientStatRxPkts,
       "wingStatsRfdWlClientStatTxDropped": wingStatsRfdWlClientStatTxDropped,
       "wingStatsRfdWlClientStatRxErrors": wingStatsRfdWlClientStatRxErrors,
       "wingStatsRfdWlClientStatTIndex": wingStatsRfdWlClientStatTIndex,
       "wingStatsRfdWlClientStatTxBps": wingStatsRfdWlClientStatTxBps,
       "wingStatsRfdWlClientStatRxBps": wingStatsRfdWlClientStatRxBps,
       "wingStatsRfdWlClientStatSignal": wingStatsRfdWlClientStatSignal,
       "wingStatsRfdWlClientStatNoise": wingStatsRfdWlClientStatNoise,
       "wingStatsRfdWlClientStatSnr": wingStatsRfdWlClientStatSnr,
       "wingStatsRfdWlClientStatTxRate": wingStatsRfdWlClientStatTxRate,
       "wingStatsRfdWlClientStatRxRate": wingStatsRfdWlClientStatRxRate,
       "wingStatsRfdWlClientStatErrorRate": wingStatsRfdWlClientStatErrorRate,
       "wingStatsRfdWlClientStatQIndex": wingStatsRfdWlClientStatQIndex,
       "wingStatsRfdWlClientStatDetail": wingStatsRfdWlClientStatDetail,
       "wingStatsRfdWlClientStatDetailTable": wingStatsRfdWlClientStatDetailTable,
       "wingStatsRfdWlClientStatDetailEntry": wingStatsRfdWlClientStatDetailEntry,
       "wingStatsRfdWlClientStatDetailMac": wingStatsRfdWlClientStatDetailMac,
       "wingStatsRfdWlClientStatDetailMacName": wingStatsRfdWlClientStatDetailMacName,
       "wingStatsRfdWlClientStatDetailVendor": wingStatsRfdWlClientStatDetailVendor,
       "wingStatsRfdWlClientStatDetailTxBytes": wingStatsRfdWlClientStatDetailTxBytes,
       "wingStatsRfdWlClientStatDetailRxBytes": wingStatsRfdWlClientStatDetailRxBytes,
       "wingStatsRfdWlClientStatDetailTxPkts": wingStatsRfdWlClientStatDetailTxPkts,
       "wingStatsRfdWlClientStatDetailRxPkts": wingStatsRfdWlClientStatDetailRxPkts,
       "wingStatsRfdWlClientStatDetailTxDropped": wingStatsRfdWlClientStatDetailTxDropped,
       "wingStatsRfdWlClientStatDetailRxErrors": wingStatsRfdWlClientStatDetailRxErrors,
       "wingStatsRfdWlClientStatDetailTIndex": wingStatsRfdWlClientStatDetailTIndex,
       "wingStatsRfdWlClientStatDetailTxBps": wingStatsRfdWlClientStatDetailTxBps,
       "wingStatsRfdWlClientStatDetailRxBps": wingStatsRfdWlClientStatDetailRxBps,
       "wingStatsRfdWlClientStatDetailSignal": wingStatsRfdWlClientStatDetailSignal,
       "wingStatsRfdWlClientStatDetailNoise": wingStatsRfdWlClientStatDetailNoise,
       "wingStatsRfdWlClientStatDetailSnr": wingStatsRfdWlClientStatDetailSnr,
       "wingStatsRfdWlClientStatDetailTxRate": wingStatsRfdWlClientStatDetailTxRate,
       "wingStatsRfdWlClientStatDetailRxRate": wingStatsRfdWlClientStatDetailRxRate,
       "wingStatsRfdWlClientStatDetailErrorRate": wingStatsRfdWlClientStatDetailErrorRate,
       "wingStatsRfdWlClientStatDetailQIndex": wingStatsRfdWlClientStatDetailQIndex,
       "wingStatsRfdWlClientStatDetailRawTxBytes": wingStatsRfdWlClientStatDetailRawTxBytes,
       "wingStatsRfdWlClientStatDetailRawRxBytes": wingStatsRfdWlClientStatDetailRawRxBytes,
       "wingStatsRfdWlClientStatDetailRawTotalBytes": wingStatsRfdWlClientStatDetailRawTotalBytes,
       "wingStatsRfdWlClientStatDetailRawTxPkts": wingStatsRfdWlClientStatDetailRawTxPkts,
       "wingStatsRfdWlClientStatDetailRawRxPkts": wingStatsRfdWlClientStatDetailRawRxPkts,
       "wingStatsRfdWlClientStatDetailRawTotalPkts": wingStatsRfdWlClientStatDetailRawTotalPkts,
       "wingStatsRfdWlClientStatDetailRawTxBps": wingStatsRfdWlClientStatDetailRawTxBps,
       "wingStatsRfdWlClientStatDetailRawRxBps": wingStatsRfdWlClientStatDetailRawRxBps,
       "wingStatsRfdWlClientStatDetailRawTotalBps": wingStatsRfdWlClientStatDetailRawTotalBps,
       "wingStatsRfdWlClientStatDetailRawTxPps": wingStatsRfdWlClientStatDetailRawTxPps,
       "wingStatsRfdWlClientStatDetailRawRxPps": wingStatsRfdWlClientStatDetailRawRxPps,
       "wingStatsRfdWlClientStatDetailRawTotalPps": wingStatsRfdWlClientStatDetailRawTotalPps,
       "wingStatsRfdWlClientStatDetailRawTxRate": wingStatsRfdWlClientStatDetailRawTxRate,
       "wingStatsRfdWlClientStatDetailRawRxRate": wingStatsRfdWlClientStatDetailRawRxRate,
       "wingStatsRfdWlClientStatDetailRawOverallRate": wingStatsRfdWlClientStatDetailRawOverallRate,
       "wingStatsRfdWlClientStatDetailTxBcmcPkts": wingStatsRfdWlClientStatDetailTxBcmcPkts,
       "wingStatsRfdWlClientStatDetailRxBcmcPkts": wingStatsRfdWlClientStatDetailRxBcmcPkts,
       "wingStatsRfdWlClientStatDetailTotalBcmcPkts": wingStatsRfdWlClientStatDetailTotalBcmcPkts,
       "wingStatsRfdWlClientStatDetailTxPps": wingStatsRfdWlClientStatDetailTxPps,
       "wingStatsRfdWlClientStatDetailRxPps": wingStatsRfdWlClientStatDetailRxPps,
       "wingStatsRfdWlClientStatDetailTotalPps": wingStatsRfdWlClientStatDetailTotalPps,
       "wingStatsRfdWlClientStatDetailTxMgmtPkts": wingStatsRfdWlClientStatDetailTxMgmtPkts,
       "wingStatsRfdWlClientStatDetailRxMgmtPkts": wingStatsRfdWlClientStatDetailRxMgmtPkts,
       "wingStatsRfdWlClientStatDetailTotalMgmtPkts": wingStatsRfdWlClientStatDetailTotalMgmtPkts,
       "wingStatsRfdWlClientStatDetailTxRetries": wingStatsRfdWlClientStatDetailTxRetries,
       "wingStatsRfdWlClientStatDetailRxProbes": wingStatsRfdWlClientStatDetailRxProbes,
       "wingStatsRfdWlClientStatDetailRxActions": wingStatsRfdWlClientStatDetailRxActions,
       "wingStatsRfdWlClientStatDetailRxPsPoll": wingStatsRfdWlClientStatDetailRxPsPoll,
       "wingStatsRfdWlClientStatDetailLastCallStatus": wingStatsRfdWlClientStatDetailLastCallStatus,
       "wingStatsRfdWlClientStatDetailCallTotal": wingStatsRfdWlClientStatDetailCallTotal,
       "wingStatsRfdWlClientStatDetailCallStatOk": wingStatsRfdWlClientStatDetailCallStatOk,
       "wingStatsRfdWlClientStatDetailCallStatBusy": wingStatsRfdWlClientStatDetailCallStatBusy,
       "wingStatsRfdWlClientStatDetailCallStatNoAnswer": wingStatsRfdWlClientStatDetailCallStatNoAnswer,
       "wingStatsRfdWlClientStatDetailCallStatUnknownDest": wingStatsRfdWlClientStatDetailCallStatUnknownDest,
       "wingStatsRfdWlClientStatDetailCallStatAdmDenied": wingStatsRfdWlClientStatDetailCallStatAdmDenied,
       "wingStatsRfdWlClientStatDetailCallStatDeclined": wingStatsRfdWlClientStatDetailCallStatDeclined,
       "wingStatsRfdWlClientStatDetailCallStatUnauth": wingStatsRfdWlClientStatDetailCallStatUnauth,
       "wingStatsRfdWlClientStatDetailCallStatUnsuppMedia": wingStatsRfdWlClientStatDetailCallStatUnsuppMedia,
       "wingStatsRfdWlClientStatDetailCallStatTempUnavail": wingStatsRfdWlClientStatDetailCallStatTempUnavail,
       "wingStatsRfdWlClientStatDetailCallStatNoForkAllowed": wingStatsRfdWlClientStatDetailCallStatNoForkAllowed,
       "wingStatsRfdWlClientStatDetailCallStatSessInactive": wingStatsRfdWlClientStatDetailCallStatSessInactive,
       "wingStatsRfdWlClientStatDetailCallStatOther": wingStatsRfdWlClientStatDetailCallStatOther,
       "wingStatsRfdWlClientStatDetailTotalBytes": wingStatsRfdWlClientStatDetailTotalBytes,
       "wingStatsRfdWlClientStatDetailTotalPkts": wingStatsRfdWlClientStatDetailTotalPkts,
       "wingStatsRfdWlClientStatDetailTxRetriedBytes": wingStatsRfdWlClientStatDetailTxRetriedBytes,
       "wingStatsRfdWlRadio": wingStatsRfdWlRadio,
       "wingStatsRfdWlRadioTable": wingStatsRfdWlRadioTable,
       "wingStatsRfdWlRadioEntry": wingStatsRfdWlRadioEntry,
       "wingStatsRfdWlRadioId": wingStatsRfdWlRadioId,
       "wingStatsRfdWlRadioDeviceMac": wingStatsRfdWlRadioDeviceMac,
       "wingStatsRfdWlRadioAlias": wingStatsRfdWlRadioAlias,
       "wingStatsRfdWlRadioMac": wingStatsRfdWlRadioMac,
       "wingStatsRfdWlRadioType": wingStatsRfdWlRadioType,
       "wingStatsRfdWlRadioHostname": wingStatsRfdWlRadioHostname,
       "wingStatsRfdWlRadioRfdName": wingStatsRfdWlRadioRfdName,
       "wingStatsRfdWlRadioLocation": wingStatsRfdWlRadioLocation,
       "wingStatsRfdWlRadioState": wingStatsRfdWlRadioState,
       "wingStatsRfdWlRadioCurChannel": wingStatsRfdWlRadioCurChannel,
       "wingStatsRfdWlRadioConfigChannel": wingStatsRfdWlRadioConfigChannel,
       "wingStatsRfdWlRadioCurPower": wingStatsRfdWlRadioCurPower,
       "wingStatsRfdWlRadioConfigPower": wingStatsRfdWlRadioConfigPower,
       "wingStatsRfdWlRadioMaxUserRate": wingStatsRfdWlRadioMaxUserRate,
       "wingStatsRfdWlRadioNumClient": wingStatsRfdWlRadioNumClient,
       "wingStatsRfdWlRadioProtocol": wingStatsRfdWlRadioProtocol,
       "wingStatsRfdWlRadioStat": wingStatsRfdWlRadioStat,
       "wingStatsRfdWlRadioStatTable": wingStatsRfdWlRadioStatTable,
       "wingStatsRfdWlRadioStatEntry": wingStatsRfdWlRadioStatEntry,
       "wingStatsRfdWlRadioStatId": wingStatsRfdWlRadioStatId,
       "wingStatsRfdWlRadioStatDeviceMac": wingStatsRfdWlRadioStatDeviceMac,
       "wingStatsRfdWlRadioStatAlias": wingStatsRfdWlRadioStatAlias,
       "wingStatsRfdWlRadioStatMac": wingStatsRfdWlRadioStatMac,
       "wingStatsRfdWlRadioStatType": wingStatsRfdWlRadioStatType,
       "wingStatsRfdWlRadioStatTxBytes": wingStatsRfdWlRadioStatTxBytes,
       "wingStatsRfdWlRadioStatRxBytes": wingStatsRfdWlRadioStatRxBytes,
       "wingStatsRfdWlRadioStatTxPkts": wingStatsRfdWlRadioStatTxPkts,
       "wingStatsRfdWlRadioStatRxPkts": wingStatsRfdWlRadioStatRxPkts,
       "wingStatsRfdWlRadioStatTxDropped": wingStatsRfdWlRadioStatTxDropped,
       "wingStatsRfdWlRadioStatRxErrors": wingStatsRfdWlRadioStatRxErrors,
       "wingStatsRfdWlRadioStatTIndex": wingStatsRfdWlRadioStatTIndex,
       "wingStatsRfdWlRadioStatTxBps": wingStatsRfdWlRadioStatTxBps,
       "wingStatsRfdWlRadioStatRxBps": wingStatsRfdWlRadioStatRxBps,
       "wingStatsRfdWlRadioStatSignal": wingStatsRfdWlRadioStatSignal,
       "wingStatsRfdWlRadioStatNoise": wingStatsRfdWlRadioStatNoise,
       "wingStatsRfdWlRadioStatSnr": wingStatsRfdWlRadioStatSnr,
       "wingStatsRfdWlRadioStatTxRate": wingStatsRfdWlRadioStatTxRate,
       "wingStatsRfdWlRadioStatRxRate": wingStatsRfdWlRadioStatRxRate,
       "wingStatsRfdWlRadioStatErrorRate": wingStatsRfdWlRadioStatErrorRate,
       "wingStatsRfdWlRadioStatQIndex": wingStatsRfdWlRadioStatQIndex,
       "wingStatsRfdWlRadioStatNumClients": wingStatsRfdWlRadioStatNumClients,
       "wingStatsRfdWlRadioStatNumBClients": wingStatsRfdWlRadioStatNumBClients,
       "wingStatsRfdWlRadioStatNumBgClients": wingStatsRfdWlRadioStatNumBgClients,
       "wingStatsRfdWlRadioStatNumBgnClients": wingStatsRfdWlRadioStatNumBgnClients,
       "wingStatsRfdWlRadioStatNumAClients": wingStatsRfdWlRadioStatNumAClients,
       "wingStatsRfdWlRadioStatNumAnClients": wingStatsRfdWlRadioStatNumAnClients,
       "wingStatsRfdWlRadioStatMediumErrorRate": wingStatsRfdWlRadioStatMediumErrorRate,
       "wingStatsRfdWlRadioStatTxRetries": wingStatsRfdWlRadioStatTxRetries,
       "wingStatsRfdWlRadioStatTxRetriedBytes": wingStatsRfdWlRadioStatTxRetriedBytes,
       "wingStatsRfdWlRadioDetail": wingStatsRfdWlRadioDetail,
       "wingStatsRfdWlRadioDetailTable": wingStatsRfdWlRadioDetailTable,
       "wingStatsRfdWlRadioDetailEntry": wingStatsRfdWlRadioDetailEntry,
       "wingStatsRfdWlRadioDetailId": wingStatsRfdWlRadioDetailId,
       "wingStatsRfdWlRadioDetailDeviceMac": wingStatsRfdWlRadioDetailDeviceMac,
       "wingStatsRfdWlRadioDetailAlias": wingStatsRfdWlRadioDetailAlias,
       "wingStatsRfdWlRadioDetailMac": wingStatsRfdWlRadioDetailMac,
       "wingStatsRfdWlRadioDetailType": wingStatsRfdWlRadioDetailType,
       "wingStatsRfdWlRadioDetailHostname": wingStatsRfdWlRadioDetailHostname,
       "wingStatsRfdWlRadioDetailRfdName": wingStatsRfdWlRadioDetailRfdName,
       "wingStatsRfdWlRadioDetailLocation": wingStatsRfdWlRadioDetailLocation,
       "wingStatsRfdWlRadioDetailState": wingStatsRfdWlRadioDetailState,
       "wingStatsRfdWlRadioDetailCurChannel": wingStatsRfdWlRadioDetailCurChannel,
       "wingStatsRfdWlRadioDetailConfigChannel": wingStatsRfdWlRadioDetailConfigChannel,
       "wingStatsRfdWlRadioDetailCurPower": wingStatsRfdWlRadioDetailCurPower,
       "wingStatsRfdWlRadioDetailConfigPower": wingStatsRfdWlRadioDetailConfigPower,
       "wingStatsRfdWlRadioDetailMaxUserRate": wingStatsRfdWlRadioDetailMaxUserRate,
       "wingStatsRfdWlRadioDetailNumClient": wingStatsRfdWlRadioDetailNumClient,
       "wingStatsRfdWlRadioDetailSpectrumMgmt": wingStatsRfdWlRadioDetailSpectrumMgmt,
       "wingStatsRfdWlRadioDetailShortPreamble": wingStatsRfdWlRadioDetailShortPreamble,
       "wingStatsRfdWlRadioDetailNonErpPresent": wingStatsRfdWlRadioDetailNonErpPresent,
       "wingStatsRfdWlRadioDetailErpProtectionOn": wingStatsRfdWlRadioDetailErpProtectionOn,
       "wingStatsRfdWlRadioDetailNonErpDetected": wingStatsRfdWlRadioDetailNonErpDetected,
       "wingStatsRfdWlRadioDetailHtProtectionOn": wingStatsRfdWlRadioDetailHtProtectionOn,
       "wingStatsRfdWlRadioDetailHt20Present": wingStatsRfdWlRadioDetailHt20Present,
       "wingStatsRfdWlRadioDetailNonHtDetected": wingStatsRfdWlRadioDetailNonHtDetected,
       "wingStatsRfdWlRadioDetailDualChannelOn": wingStatsRfdWlRadioDetailDualChannelOn,
       "wingStatsRfdWlRadioDetailTxAntennaUsed": wingStatsRfdWlRadioDetailTxAntennaUsed,
       "wingStatsRfdWlRadioDetailRxAntennaUsed": wingStatsRfdWlRadioDetailRxAntennaUsed,
       "wingStatsRfdWlRadioDetailMaxPhyRate": wingStatsRfdWlRadioDetailMaxPhyRate,
       "wingStatsRfdWlRadioDetailCurMcastStreams": wingStatsRfdWlRadioDetailCurMcastStreams,
       "wingStatsRfdWlRadioDetailMaxMcastStreams": wingStatsRfdWlRadioDetailMaxMcastStreams,
       "wingStatsRfdWlRadioDetailMcastStreams": wingStatsRfdWlRadioDetailMcastStreams,
       "wingStatsRfdWlRadioDetailLastError": wingStatsRfdWlRadioDetailLastError,
       "wingStatsRfdWlRadioDetailWlanMapTable": wingStatsRfdWlRadioDetailWlanMapTable,
       "wingStatsRfdWlRadioDetailWlanMapEntry": wingStatsRfdWlRadioDetailWlanMapEntry,
       "wingStatsRfdWlRadioDetailWlanMapWlanName": wingStatsRfdWlRadioDetailWlanMapWlanName,
       "wingStatsRfdWlRadioDetailWlanMapBssIndex": wingStatsRfdWlRadioDetailWlanMapBssIndex,
       "wingStatsRfdWlRadioDetailWlanMapIsPrimary": wingStatsRfdWlRadioDetailWlanMapIsPrimary,
       "wingStatsRfdWlRadioDetailBssMapTable": wingStatsRfdWlRadioDetailBssMapTable,
       "wingStatsRfdWlRadioDetailBssMapEntry": wingStatsRfdWlRadioDetailBssMapEntry,
       "wingStatsRfdWlRadioDetailBssMapBssIndex": wingStatsRfdWlRadioDetailBssMapBssIndex,
       "wingStatsRfdWlRadioDetailBssMapBasicRates": wingStatsRfdWlRadioDetailBssMapBasicRates,
       "wingStatsRfdWlRadioDetailBssMapSupportedRates": wingStatsRfdWlRadioDetailBssMapSupportedRates,
       "wingStatsRfdWlRadioStatDetail": wingStatsRfdWlRadioStatDetail,
       "wingStatsRfdWlRadioStatDetailTable": wingStatsRfdWlRadioStatDetailTable,
       "wingStatsRfdWlRadioStatDetailEntry": wingStatsRfdWlRadioStatDetailEntry,
       "wingStatsRfdWlRadioStatDetailId": wingStatsRfdWlRadioStatDetailId,
       "wingStatsRfdWlRadioStatDetailDeviceMac": wingStatsRfdWlRadioStatDetailDeviceMac,
       "wingStatsRfdWlRadioStatDetailAlias": wingStatsRfdWlRadioStatDetailAlias,
       "wingStatsRfdWlRadioStatDetailMac": wingStatsRfdWlRadioStatDetailMac,
       "wingStatsRfdWlRadioStatDetailType": wingStatsRfdWlRadioStatDetailType,
       "wingStatsRfdWlRadioStatDetailTxBytes": wingStatsRfdWlRadioStatDetailTxBytes,
       "wingStatsRfdWlRadioStatDetailRxBytes": wingStatsRfdWlRadioStatDetailRxBytes,
       "wingStatsRfdWlRadioStatDetailTxPkts": wingStatsRfdWlRadioStatDetailTxPkts,
       "wingStatsRfdWlRadioStatDetailRxPkts": wingStatsRfdWlRadioStatDetailRxPkts,
       "wingStatsRfdWlRadioStatDetailTxDropped": wingStatsRfdWlRadioStatDetailTxDropped,
       "wingStatsRfdWlRadioStatDetailRxErrors": wingStatsRfdWlRadioStatDetailRxErrors,
       "wingStatsRfdWlRadioStatDetailTIndex": wingStatsRfdWlRadioStatDetailTIndex,
       "wingStatsRfdWlRadioStatDetailTxBps": wingStatsRfdWlRadioStatDetailTxBps,
       "wingStatsRfdWlRadioStatDetailRxBps": wingStatsRfdWlRadioStatDetailRxBps,
       "wingStatsRfdWlRadioStatDetailSignal": wingStatsRfdWlRadioStatDetailSignal,
       "wingStatsRfdWlRadioStatDetailNoise": wingStatsRfdWlRadioStatDetailNoise,
       "wingStatsRfdWlRadioStatDetailSnr": wingStatsRfdWlRadioStatDetailSnr,
       "wingStatsRfdWlRadioStatDetailTxRate": wingStatsRfdWlRadioStatDetailTxRate,
       "wingStatsRfdWlRadioStatDetailRxRate": wingStatsRfdWlRadioStatDetailRxRate,
       "wingStatsRfdWlRadioStatDetailErrorRate": wingStatsRfdWlRadioStatDetailErrorRate,
       "wingStatsRfdWlRadioStatDetailQIndex": wingStatsRfdWlRadioStatDetailQIndex,
       "wingStatsRfdWlRadioStatDetailNumClients": wingStatsRfdWlRadioStatDetailNumClients,
       "wingStatsRfdWlRadioStatDetailNumBClients": wingStatsRfdWlRadioStatDetailNumBClients,
       "wingStatsRfdWlRadioStatDetailNumBgClients": wingStatsRfdWlRadioStatDetailNumBgClients,
       "wingStatsRfdWlRadioStatDetailNumBgnClients": wingStatsRfdWlRadioStatDetailNumBgnClients,
       "wingStatsRfdWlRadioStatDetailNumAClients": wingStatsRfdWlRadioStatDetailNumAClients,
       "wingStatsRfdWlRadioStatDetailNumAnClients": wingStatsRfdWlRadioStatDetailNumAnClients,
       "wingStatsRfdWlRadioStatDetailMediumErrorRate": wingStatsRfdWlRadioStatDetailMediumErrorRate,
       "wingStatsRfdWlRadioStatDetailRawTxBytes": wingStatsRfdWlRadioStatDetailRawTxBytes,
       "wingStatsRfdWlRadioStatDetailRawRxBytes": wingStatsRfdWlRadioStatDetailRawRxBytes,
       "wingStatsRfdWlRadioStatDetailRawTotalBytes": wingStatsRfdWlRadioStatDetailRawTotalBytes,
       "wingStatsRfdWlRadioStatDetailRawTxPkts": wingStatsRfdWlRadioStatDetailRawTxPkts,
       "wingStatsRfdWlRadioStatDetailRawRxPkts": wingStatsRfdWlRadioStatDetailRawRxPkts,
       "wingStatsRfdWlRadioStatDetailRawTotalPkts": wingStatsRfdWlRadioStatDetailRawTotalPkts,
       "wingStatsRfdWlRadioStatDetailRawTxBps": wingStatsRfdWlRadioStatDetailRawTxBps,
       "wingStatsRfdWlRadioStatDetailRawRxBps": wingStatsRfdWlRadioStatDetailRawRxBps,
       "wingStatsRfdWlRadioStatDetailRawTotalBps": wingStatsRfdWlRadioStatDetailRawTotalBps,
       "wingStatsRfdWlRadioStatDetailRawTxPps": wingStatsRfdWlRadioStatDetailRawTxPps,
       "wingStatsRfdWlRadioStatDetailRawRxPps": wingStatsRfdWlRadioStatDetailRawRxPps,
       "wingStatsRfdWlRadioStatDetailRawTotalPps": wingStatsRfdWlRadioStatDetailRawTotalPps,
       "wingStatsRfdWlRadioStatDetailRawTxRate": wingStatsRfdWlRadioStatDetailRawTxRate,
       "wingStatsRfdWlRadioStatDetailRawRxRate": wingStatsRfdWlRadioStatDetailRawRxRate,
       "wingStatsRfdWlRadioStatDetailRawOverallRate": wingStatsRfdWlRadioStatDetailRawOverallRate,
       "wingStatsRfdWlRadioStatDetailTxBcmcPkts": wingStatsRfdWlRadioStatDetailTxBcmcPkts,
       "wingStatsRfdWlRadioStatDetailRxBcmcPkts": wingStatsRfdWlRadioStatDetailRxBcmcPkts,
       "wingStatsRfdWlRadioStatDetailTotalBcmcPkts": wingStatsRfdWlRadioStatDetailTotalBcmcPkts,
       "wingStatsRfdWlRadioStatDetailTxPps": wingStatsRfdWlRadioStatDetailTxPps,
       "wingStatsRfdWlRadioStatDetailRxPps": wingStatsRfdWlRadioStatDetailRxPps,
       "wingStatsRfdWlRadioStatDetailTotalPps": wingStatsRfdWlRadioStatDetailTotalPps,
       "wingStatsRfdWlRadioStatDetailTxMgmtPkts": wingStatsRfdWlRadioStatDetailTxMgmtPkts,
       "wingStatsRfdWlRadioStatDetailRxMgmtPkts": wingStatsRfdWlRadioStatDetailRxMgmtPkts,
       "wingStatsRfdWlRadioStatDetailTotalMgmtPkts": wingStatsRfdWlRadioStatDetailTotalMgmtPkts,
       "wingStatsRfdWlRadioStatDetailTxRetries": wingStatsRfdWlRadioStatDetailTxRetries,
       "wingStatsRfdWlRadioStatDetailRxProbes": wingStatsRfdWlRadioStatDetailRxProbes,
       "wingStatsRfdWlRadioStatDetailRxActions": wingStatsRfdWlRadioStatDetailRxActions,
       "wingStatsRfdWlRadioStatDetailRxPsPoll": wingStatsRfdWlRadioStatDetailRxPsPoll,
       "wingStatsRfdWlRadioStatDetailLastCallStatus": wingStatsRfdWlRadioStatDetailLastCallStatus,
       "wingStatsRfdWlRadioStatDetailCallTotal": wingStatsRfdWlRadioStatDetailCallTotal,
       "wingStatsRfdWlRadioStatDetailCallStatOk": wingStatsRfdWlRadioStatDetailCallStatOk,
       "wingStatsRfdWlRadioStatDetailCallStatBusy": wingStatsRfdWlRadioStatDetailCallStatBusy,
       "wingStatsRfdWlRadioStatDetailCallStatNoAnswer": wingStatsRfdWlRadioStatDetailCallStatNoAnswer,
       "wingStatsRfdWlRadioStatDetailCallStatUnknownDest": wingStatsRfdWlRadioStatDetailCallStatUnknownDest,
       "wingStatsRfdWlRadioStatDetailCallStatAdmDenied": wingStatsRfdWlRadioStatDetailCallStatAdmDenied,
       "wingStatsRfdWlRadioStatDetailCallStatDeclined": wingStatsRfdWlRadioStatDetailCallStatDeclined,
       "wingStatsRfdWlRadioStatDetailCallStatUnauth": wingStatsRfdWlRadioStatDetailCallStatUnauth,
       "wingStatsRfdWlRadioStatDetailCallStatUnsuppMedia": wingStatsRfdWlRadioStatDetailCallStatUnsuppMedia,
       "wingStatsRfdWlRadioStatDetailCallStatTempUnavail": wingStatsRfdWlRadioStatDetailCallStatTempUnavail,
       "wingStatsRfdWlRadioStatDetailCallStatNoForkAllowed": wingStatsRfdWlRadioStatDetailCallStatNoForkAllowed,
       "wingStatsRfdWlRadioStatDetailCallStatSessInactive": wingStatsRfdWlRadioStatDetailCallStatSessInactive,
       "wingStatsRfdWlRadioStatDetailCallStatOther": wingStatsRfdWlRadioStatDetailCallStatOther,
       "wingStatsRfdWlRadioStatDetailTotalBytes": wingStatsRfdWlRadioStatDetailTotalBytes,
       "wingStatsRfdWlRadioStatDetailTotalPkts": wingStatsRfdWlRadioStatDetailTotalPkts,
       "wingStatsRfdWlRadioStatDetailRxRetries": wingStatsRfdWlRadioStatDetailRxRetries,
       "wingStatsRfdWlRadioStatDetailRxCrcErrors": wingStatsRfdWlRadioStatDetailRxCrcErrors,
       "wingStatsRfdWlRadioStatDetailRxUndecryptable": wingStatsRfdWlRadioStatDetailRxUndecryptable,
       "wingStatsRfdWlRadioStatDetailRxIncomplete": wingStatsRfdWlRadioStatDetailRxIncomplete,
       "wingStatsRfdWlRadioStatDetailRxLengthErrors": wingStatsRfdWlRadioStatDetailRxLengthErrors,
       "wingStatsRfdWlRadioStatDetailRxOtherErrors": wingStatsRfdWlRadioStatDetailRxOtherErrors,
       "wingStatsRfdWlRadioStatDetailLongPreambleClients": wingStatsRfdWlRadioStatDetailLongPreambleClients,
       "wingStatsRfdWlRadioStatDetailLtClients": wingStatsRfdWlRadioStatDetailLtClients,
       "wingStatsRfdWlRadioStatDetailHt20Clients": wingStatsRfdWlRadioStatDetailHt20Clients,
       "wingStatsRfdWlRadioStatDetailLongSlotClients": wingStatsRfdWlRadioStatDetailLongSlotClients,
       "wingStatsRfdWlRadioStatDetailTxRetriedBytes": wingStatsRfdWlRadioStatDetailTxRetriedBytes,
       "wingStatsRfdSmartRf": wingStatsRfdSmartRf,
       "wingStatsRfdSmartRfRadioInfoTable": wingStatsRfdSmartRfRadioInfoTable,
       "wingStatsRfdSmartRfRadioInfoEntry": wingStatsRfdSmartRfRadioInfoEntry,
       "wingStatsRfdSmartRfRadioInfoMac": wingStatsRfdSmartRfRadioInfoMac,
       "wingStatsRfdSmartRfRadioInfoApMac": wingStatsRfdSmartRfRadioInfoApMac,
       "wingStatsRfdSmartRfRadioInfoHostname": wingStatsRfdSmartRfRadioInfoHostname,
       "wingStatsRfdSmartRfRadioInfoChannel": wingStatsRfdSmartRfRadioInfoChannel,
       "wingStatsRfdSmartRfRadioInfoPower": wingStatsRfdSmartRfRadioInfoPower,
       "wingStatsRfdSmartRfRadioInfoRadioIdx": wingStatsRfdSmartRfRadioInfoRadioIdx,
       "wingStatsRfdSmartRfRadioInfoState": wingStatsRfdSmartRfRadioInfoState,
       "wingStatsRfdSmartRfRadioInfoType": wingStatsRfdSmartRfRadioInfoType,
       "wingStatsRfdSmartRfRadioActTable": wingStatsRfdSmartRfRadioActTable,
       "wingStatsRfdSmartRfRadioActEntry": wingStatsRfdSmartRfRadioActEntry,
       "wingStatsRfdSmartRfRadioActMac": wingStatsRfdSmartRfRadioActMac,
       "wingStatsRfdSmartRfRadioActApMac": wingStatsRfdSmartRfRadioActApMac,
       "wingStatsRfdSmartRfRadioActType": wingStatsRfdSmartRfRadioActType,
       "wingStatsRfdSmartRfRadioActPowerChanges": wingStatsRfdSmartRfRadioActPowerChanges,
       "wingStatsRfdSmartRfRadioActChannelChanges": wingStatsRfdSmartRfRadioActChannelChanges,
       "wingStatsRfdSmartRfRadioActCoverageChanges": wingStatsRfdSmartRfRadioActCoverageChanges,
       "wingStatsRfdSmartRfRadioNeighborsTable": wingStatsRfdSmartRfRadioNeighborsTable,
       "wingStatsRfdSmartRfRadioNeighborsEntry": wingStatsRfdSmartRfRadioNeighborsEntry,
       "wingStatsRfdSmartRfRadioNeighborsMac": wingStatsRfdSmartRfRadioNeighborsMac,
       "wingStatsRfdSmartRfRadioNeighborsApMac": wingStatsRfdSmartRfRadioNeighborsApMac,
       "wingStatsRfdSmartRfRadioNeighborsHostname": wingStatsRfdSmartRfRadioNeighborsHostname,
       "wingStatsRfdSmartRfRadioNeighborsChannel": wingStatsRfdSmartRfRadioNeighborsChannel,
       "wingStatsRfdSmartRfRadioNeighborsRadioIdx": wingStatsRfdSmartRfRadioNeighborsRadioIdx,
       "wingStatsRfdSmartRfRadioNeighborsType": wingStatsRfdSmartRfRadioNeighborsType,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsTable": wingStatsRfdSmartRfRadioNeighborsNeighborsTable,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsEntry": wingStatsRfdSmartRfRadioNeighborsNeighborsEntry,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsMac": wingStatsRfdSmartRfRadioNeighborsNeighborsMac,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsApMac": wingStatsRfdSmartRfRadioNeighborsNeighborsApMac,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsChannel": wingStatsRfdSmartRfRadioNeighborsNeighborsChannel,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsPower": wingStatsRfdSmartRfRadioNeighborsNeighborsPower,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation": wingStatsRfdSmartRfRadioNeighborsNeighborsAttenuation,
       "wingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx": wingStatsRfdSmartRfRadioNeighborsNeighborsRadioIdx,
       "wingStatsRfdSmartRfRadioEnergyTable": wingStatsRfdSmartRfRadioEnergyTable,
       "wingStatsRfdSmartRfRadioEnergyEntry": wingStatsRfdSmartRfRadioEnergyEntry,
       "wingStatsRfdSmartRfRadioEnergyMac": wingStatsRfdSmartRfRadioEnergyMac,
       "wingStatsRfdSmartRfRadioEnergyApMac": wingStatsRfdSmartRfRadioEnergyApMac,
       "wingStatsRfdSmartRfRadioEnergyHostname": wingStatsRfdSmartRfRadioEnergyHostname,
       "wingStatsRfdSmartRfRadioEnergyChannel": wingStatsRfdSmartRfRadioEnergyChannel,
       "wingStatsRfdSmartRfRadioEnergyRadioIdx": wingStatsRfdSmartRfRadioEnergyRadioIdx,
       "wingStatsRfdSmartRfRadioEnergyType": wingStatsRfdSmartRfRadioEnergyType,
       "wingStatsRfdSmartRfRadioEnergyEnergyTable": wingStatsRfdSmartRfRadioEnergyEnergyTable,
       "wingStatsRfdSmartRfRadioEnergyEnergyEntry": wingStatsRfdSmartRfRadioEnergyEnergyEntry,
       "wingStatsRfdSmartRfRadioEnergyEnergyChannel": wingStatsRfdSmartRfRadioEnergyEnergyChannel,
       "wingStatsRfdSmartRfRadioEnergyEnergyExternal": wingStatsRfdSmartRfRadioEnergyEnergyExternal,
       "wingStatsRfdSmartRfRadioEnergyEnergyNeighbor": wingStatsRfdSmartRfRadioEnergyEnergyNeighbor,
       "wingStatsRfdSmartRfRadioEnergyEnergyNoise": wingStatsRfdSmartRfRadioEnergyEnergyNoise,
       "wingStatsRfdSmartRfRadioEnergyEnergyTotal": wingStatsRfdSmartRfRadioEnergyEnergyTotal,
       "wingStatsRfdSmartRfRadioNonSsmTable": wingStatsRfdSmartRfRadioNonSsmTable,
       "wingStatsRfdSmartRfRadioNonSsmEntry": wingStatsRfdSmartRfRadioNonSsmEntry,
       "wingStatsRfdSmartRfRadioNonSsmMac": wingStatsRfdSmartRfRadioNonSsmMac,
       "wingStatsRfdSmartRfRadioNonSsmInfoApMac": wingStatsRfdSmartRfRadioNonSsmInfoApMac,
       "wingStatsRfdSmartRfRadioNonSsmHostname": wingStatsRfdSmartRfRadioNonSsmHostname,
       "wingStatsRfdSmartRfRadioNonSsmChannel": wingStatsRfdSmartRfRadioNonSsmChannel,
       "wingStatsRfdSmartRfRadioNonSsmPower": wingStatsRfdSmartRfRadioNonSsmPower,
       "wingStatsRfdSmartRfRadioNonSsmRadioIdx": wingStatsRfdSmartRfRadioNonSsmRadioIdx,
       "wingStatsRfdSmartRfRadioNonSsmState": wingStatsRfdSmartRfRadioNonSsmState,
       "wingStatsRfdSmartRfRadioNonSsmInfoType": wingStatsRfdSmartRfRadioNonSsmInfoType,
       "wingStatsRfdSmartRfRadioNonSsmActApMac": wingStatsRfdSmartRfRadioNonSsmActApMac,
       "wingStatsRfdSmartRfRadioNonSsmActType": wingStatsRfdSmartRfRadioNonSsmActType,
       "wingStatsRfdSmartRfRadioNonSsmPowerChanges": wingStatsRfdSmartRfRadioNonSsmPowerChanges,
       "wingStatsRfdSmartRfRadioNonSsmChannelChanges": wingStatsRfdSmartRfRadioNonSsmChannelChanges,
       "wingStatsRfdSmartRfRadioNonSsmCoverageChanges": wingStatsRfdSmartRfRadioNonSsmCoverageChanges,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsTable": wingStatsRfdSmartRfRadioNonSsmNeighborsTable,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsEntry": wingStatsRfdSmartRfRadioNonSsmNeighborsEntry,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsMac": wingStatsRfdSmartRfRadioNonSsmNeighborsMac,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsApMac": wingStatsRfdSmartRfRadioNonSsmNeighborsApMac,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsChannel": wingStatsRfdSmartRfRadioNonSsmNeighborsChannel,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsPower": wingStatsRfdSmartRfRadioNonSsmNeighborsPower,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation": wingStatsRfdSmartRfRadioNonSsmNeighborsAttenuation,
       "wingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx": wingStatsRfdSmartRfRadioNonSsmNeighborsRadioIdx,
       "wingStatsRfdSmartRfRadioNonSsmEnergyTable": wingStatsRfdSmartRfRadioNonSsmEnergyTable,
       "wingStatsRfdSmartRfRadioNonSsmEnergyEntry": wingStatsRfdSmartRfRadioNonSsmEnergyEntry,
       "wingStatsRfdSmartRfRadioNonSsmEnergyChannel": wingStatsRfdSmartRfRadioNonSsmEnergyChannel,
       "wingStatsRfdSmartRfRadioNonSsmEnergyExternal": wingStatsRfdSmartRfRadioNonSsmEnergyExternal,
       "wingStatsRfdSmartRfRadioNonSsmEnergyNeighbor": wingStatsRfdSmartRfRadioNonSsmEnergyNeighbor,
       "wingStatsRfdSmartRfRadioNonSsmEnergyNoise": wingStatsRfdSmartRfRadioNonSsmEnergyNoise,
       "wingStatsRfdSmartRfRadioNonSsmEnergyTotal": wingStatsRfdSmartRfRadioNonSsmEnergyTotal,
       "wingStatsRfdSmartRfApTable": wingStatsRfdSmartRfApTable,
       "wingStatsRfdSmartRfApEntry": wingStatsRfdSmartRfApEntry,
       "wingStatsRfdSmartRfApMac": wingStatsRfdSmartRfApMac,
       "wingStatsRfdSmartRfApNeighborsTable": wingStatsRfdSmartRfApNeighborsTable,
       "wingStatsRfdSmartRfApNeighborsEntry": wingStatsRfdSmartRfApNeighborsEntry,
       "wingStatsRfdSmartRfApNeighborsMac": wingStatsRfdSmartRfApNeighborsMac,
       "wingStatsRfdSmartRfApNeighborsApMac": wingStatsRfdSmartRfApNeighborsApMac,
       "wingStatsRfdSmartRfApNeighborsHostname": wingStatsRfdSmartRfApNeighborsHostname,
       "wingStatsRfdSmartRfApNeighborsChannel": wingStatsRfdSmartRfApNeighborsChannel,
       "wingStatsRfdSmartRfApNeighborsPower": wingStatsRfdSmartRfApNeighborsPower,
       "wingStatsRfdSmartRfApNeighborsAttenuation": wingStatsRfdSmartRfApNeighborsAttenuation,
       "wingStatsRfdSmartRfApNeighborsInterference": wingStatsRfdSmartRfApNeighborsInterference,
       "wingStatsRfdSmartRfApNeighborsRadioIdx": wingStatsRfdSmartRfApNeighborsRadioIdx,
       "wingStatsRfdSmartRfApNeighborsListenerIdx": wingStatsRfdSmartRfApNeighborsListenerIdx,
       "wingStatsRfdSmartRfApNeighborsListenerMac": wingStatsRfdSmartRfApNeighborsListenerMac,
       "wingStatsRfdSmartRfApNeighborsType": wingStatsRfdSmartRfApNeighborsType,
       "wingStatsRfdSmartRfHighActRadiosTable": wingStatsRfdSmartRfHighActRadiosTable,
       "wingStatsRfdSmartRfHighActRadiosEntry": wingStatsRfdSmartRfHighActRadiosEntry,
       "wingStatsRfdSmartRfHighActRadiosMac": wingStatsRfdSmartRfHighActRadiosMac,
       "wingStatsRfdSmartRfHighActRadiosApMac": wingStatsRfdSmartRfHighActRadiosApMac,
       "wingStatsRfdSmartRfHighActRadiosHostname": wingStatsRfdSmartRfHighActRadiosHostname,
       "wingStatsRfdSmartRfHighActRadiosType": wingStatsRfdSmartRfHighActRadiosType,
       "wingStatsRfdSmartRfHighActRadiosPowerChanges": wingStatsRfdSmartRfHighActRadiosPowerChanges,
       "wingStatsRfdSmartRfHighActRadiosChannelChanges": wingStatsRfdSmartRfHighActRadiosChannelChanges,
       "wingStatsRfdSmartRfHighActRadiosCoverageChanges": wingStatsRfdSmartRfHighActRadiosCoverageChanges,
       "wingStatsRfdSmartRfHistoryTable": wingStatsRfdSmartRfHistoryTable,
       "wingStatsRfdSmartRfHistoryEntry": wingStatsRfdSmartRfHistoryEntry,
       "wingStatsRfdSmartRfHistoryTime": wingStatsRfdSmartRfHistoryTime,
       "wingStatsRfdSmartRfHistoryApMac": wingStatsRfdSmartRfHistoryApMac,
       "wingStatsRfdSmartRfHistoryHostname": wingStatsRfdSmartRfHistoryHostname,
       "wingStatsRfdSmartRfHistoryRadioMac": wingStatsRfdSmartRfHistoryRadioMac,
       "wingStatsRfdSmartRfHistoryRadioIdx": wingStatsRfdSmartRfHistoryRadioIdx,
       "wingStatsRfdSmartRfHistoryOldValue": wingStatsRfdSmartRfHistoryOldValue,
       "wingStatsRfdSmartRfHistoryNewValue": wingStatsRfdSmartRfHistoryNewValue,
       "wingStatsRfdSmartRfHistoryDaysTable": wingStatsRfdSmartRfHistoryDaysTable,
       "wingStatsRfdSmartRfHistoryDaysEntry": wingStatsRfdSmartRfHistoryDaysEntry,
       "wingStatsRfdSmartRfHistoryDaysTime": wingStatsRfdSmartRfHistoryDaysTime,
       "wingStatsRfdSmartRfHistoryDaysPowerChanges": wingStatsRfdSmartRfHistoryDaysPowerChanges,
       "wingStatsRfdSmartRfHistoryDaysChannelChanges": wingStatsRfdSmartRfHistoryDaysChannelChanges,
       "wingStatsRfdSmartRfHistoryDaysCoverageChanges": wingStatsRfdSmartRfHistoryDaysCoverageChanges,
       "wingStatsRfdSmartRfHistoryHoursTable": wingStatsRfdSmartRfHistoryHoursTable,
       "wingStatsRfdSmartRfHistoryHoursEntry": wingStatsRfdSmartRfHistoryHoursEntry,
       "wingStatsRfdSmartRfHistoryHoursTime": wingStatsRfdSmartRfHistoryHoursTime,
       "wingStatsRfdSmartRfHistoryHoursPowerChanges": wingStatsRfdSmartRfHistoryHoursPowerChanges,
       "wingStatsRfdSmartRfHistoryHoursChannelChanges": wingStatsRfdSmartRfHistoryHoursChannelChanges,
       "wingStatsRfdSmartRfHistoryHoursCoverageChanges": wingStatsRfdSmartRfHistoryHoursCoverageChanges,
       "wingStatsRfdSmartRfDashboardHistoryTable": wingStatsRfdSmartRfDashboardHistoryTable,
       "wingStatsRfdSmartRfDashboardHistoryEntry": wingStatsRfdSmartRfDashboardHistoryEntry,
       "wingStatsRfdSmartRfDashboardHistoryDetails": wingStatsRfdSmartRfDashboardHistoryDetails,
       "wingStatsRfdSmartRfDashboardHistoryPowerChanges": wingStatsRfdSmartRfDashboardHistoryPowerChanges,
       "wingStatsRfdSmartRfDashboardHistoryChannelChanges": wingStatsRfdSmartRfDashboardHistoryChannelChanges,
       "wingStatsRfdSmartRfDashboardHistoryCoverageChanges": wingStatsRfdSmartRfDashboardHistoryCoverageChanges,
       "wingStatsRfdSmartRfCalibrateResultTable": wingStatsRfdSmartRfCalibrateResultTable,
       "wingStatsRfdSmartRfCalibrateResultEntry": wingStatsRfdSmartRfCalibrateResultEntry,
       "wingStatsRfdSmartRfCalibrateResultMac": wingStatsRfdSmartRfCalibrateResultMac,
       "wingStatsRfdSmartRfCalibrateResultResultMac": wingStatsRfdSmartRfCalibrateResultResultMac,
       "wingStatsRfdSmartRfCalibrateResultApMac": wingStatsRfdSmartRfCalibrateResultApMac,
       "wingStatsRfdSmartRfCalibrateResultChannel": wingStatsRfdSmartRfCalibrateResultChannel,
       "wingStatsRfdSmartRfCalibrateResultOldChannel": wingStatsRfdSmartRfCalibrateResultOldChannel,
       "wingStatsRfdSmartRfCalibrateResultPower": wingStatsRfdSmartRfCalibrateResultPower,
       "wingStatsRfdSmartRfCalibrateResultOldPower": wingStatsRfdSmartRfCalibrateResultOldPower,
       "wingStatsRfdSmartRfCalibrateResultRadioIdx": wingStatsRfdSmartRfCalibrateResultRadioIdx,
       "wingStatsRfdSmartRfCalibrateResultState": wingStatsRfdSmartRfCalibrateResultState,
       "wingStatsRfdSmartRfCalibrateResultType": wingStatsRfdSmartRfCalibrateResultType,
       "wingStatsRfdSmartRfCalibrateResultSmartSensor": wingStatsRfdSmartRfCalibrateResultSmartSensor,
       "wingAction": wingAction,
       "wingActionFileCopy": wingActionFileCopy,
       "wingActionFileCopyIn": wingActionFileCopyIn,
       "wingActionFileCopyInMac": wingActionFileCopyInMac,
       "wingActionFileCopyInFrom": wingActionFileCopyInFrom,
       "wingActionFileCopyInTo": wingActionFileCopyInTo,
       "wingActionFileCopyOut": wingActionFileCopyOut,
       "wingActionFileCopyOutStatus": wingActionFileCopyOutStatus,
       "wingActionFileCopyOutMessage": wingActionFileCopyOutMessage,
       "wingActionFileCopyRun": wingActionFileCopyRun,
       "wingActionFileMD5sum": wingActionFileMD5sum,
       "wingActionFileMD5sumIn": wingActionFileMD5sumIn,
       "wingActionFileMD5sumInMac": wingActionFileMD5sumInMac,
       "wingActionFileMD5sumInPath": wingActionFileMD5sumInPath,
       "wingActionFileMD5sumOut": wingActionFileMD5sumOut,
       "wingActionFileMD5sumOutStatus": wingActionFileMD5sumOutStatus,
       "wingActionFileMD5sumOutMessage": wingActionFileMD5sumOutMessage,
       "wingActionFileMD5sumRun": wingActionFileMD5sumRun,
       "wingActionDisassociateClient": wingActionDisassociateClient,
       "wingActionDisassociateClientIn": wingActionDisassociateClientIn,
       "wingActionDisassociateClientInRfDomainName": wingActionDisassociateClientInRfDomainName,
       "wingActionDisassociateClientInWlanNameORClientMac": wingActionDisassociateClientInWlanNameORClientMac,
       "wingActionDisassociateClientInMac": wingActionDisassociateClientInMac,
       "wingActionDisassociateClientInWlanName": wingActionDisassociateClientInWlanName,
       "wingActionDisassociateClientOut": wingActionDisassociateClientOut,
       "wingActionDisassociateClientOutStatus": wingActionDisassociateClientOutStatus,
       "wingActionDisassociateClientOutMessage": wingActionDisassociateClientOutMessage,
       "wingActionDisassociateClientRun": wingActionDisassociateClientRun,
       "wingActionReload": wingActionReload,
       "wingActionReloadIn": wingActionReloadIn,
       "wingActionReloadInMac": wingActionReloadInMac,
       "wingActionReloadInForce": wingActionReloadInForce,
       "wingActionReloadInTimeout": wingActionReloadInTimeout,
       "wingActionReloadInReason": wingActionReloadInReason,
       "wingActionReloadOut": wingActionReloadOut,
       "wingActionReloadOutStatus": wingActionReloadOutStatus,
       "wingActionReloadOutMessage": wingActionReloadOutMessage,
       "wingActionReloadRun": wingActionReloadRun,
       "wingActionReElectTunnelController": wingActionReElectTunnelController,
       "wingActionReElectTunnelControllerIn": wingActionReElectTunnelControllerIn,
       "wingActionReElectTunnelControllerInMac": wingActionReElectTunnelControllerInMac,
       "wingActionReElectTunnelControllerInName": wingActionReElectTunnelControllerInName,
       "wingActionReElectTunnelControllerOut": wingActionReElectTunnelControllerOut,
       "wingActionReElectTunnelControllerOutStatus": wingActionReElectTunnelControllerOutStatus,
       "wingActionReElectTunnelControllerOutMessage": wingActionReElectTunnelControllerOutMessage,
       "wingActionReElectTunnelControllerRun": wingActionReElectTunnelControllerRun,
       "wingActionClearIpOspf": wingActionClearIpOspf,
       "wingActionClearIpOspfIn": wingActionClearIpOspfIn,
       "wingActionClearIpOspfInMac": wingActionClearIpOspfInMac,
       "wingActionClearIpOspfOut": wingActionClearIpOspfOut,
       "wingActionClearIpOspfOutStatus": wingActionClearIpOspfOutStatus,
       "wingActionClearIpOspfOutMessage": wingActionClearIpOspfOutMessage,
       "wingActionClearIpOspfRun": wingActionClearIpOspfRun,
       "wingActionVrrp": wingActionVrrp,
       "wingActionClearVrrpRouterStats": wingActionClearVrrpRouterStats,
       "wingActionClearVrrpRouterStatsIn": wingActionClearVrrpRouterStatsIn,
       "wingActionClearVrrpRouterStatsInMac": wingActionClearVrrpRouterStatsInMac,
       "wingActionClearVrrpRouterStatsOut": wingActionClearVrrpRouterStatsOut,
       "wingActionClearVrrpRouterStatsOutStatus": wingActionClearVrrpRouterStatsOutStatus,
       "wingActionClearVrrpRouterStatsOutMessage": wingActionClearVrrpRouterStatsOutMessage,
       "wingActionClearVrrpRouterStatsRun": wingActionClearVrrpRouterStatsRun,
       "wingActionClearVrrpGlobalErrStats": wingActionClearVrrpGlobalErrStats,
       "wingActionClearVrrpGlobalErrStatsIn": wingActionClearVrrpGlobalErrStatsIn,
       "wingActionClearVrrpGlobalErrStatsInMac": wingActionClearVrrpGlobalErrStatsInMac,
       "wingActionClearVrrpGlobalErrStatsOut": wingActionClearVrrpGlobalErrStatsOut,
       "wingActionClearVrrpGlobalErrStatsOutStatus": wingActionClearVrrpGlobalErrStatsOutStatus,
       "wingActionClearVrrpGlobalErrStatsOutMessage": wingActionClearVrrpGlobalErrStatsOutMessage,
       "wingActionClearVrrpGlobalErrStatsRun": wingActionClearVrrpGlobalErrStatsRun,
       "wingActionL2pv3": wingActionL2pv3,
       "wingActionClearL2tpv3Tunnel": wingActionClearL2tpv3Tunnel,
       "wingActionClearL2tpv3TunnelIn": wingActionClearL2tpv3TunnelIn,
       "wingActionClearL2tpv3TunnelInMac": wingActionClearL2tpv3TunnelInMac,
       "wingActionClearL2tpv3TunnelOut": wingActionClearL2tpv3TunnelOut,
       "wingActionClearL2tpv3TunnelOutStatus": wingActionClearL2tpv3TunnelOutStatus,
       "wingActionClearL2tpv3TunnelOutMessage": wingActionClearL2tpv3TunnelOutMessage,
       "wingActionClearL2tpv3TunnelRun": wingActionClearL2tpv3TunnelRun,
       "wingActionConnectL2tpv3Tunnel": wingActionConnectL2tpv3Tunnel,
       "wingActionConnectL2tpv3TunnelIn": wingActionConnectL2tpv3TunnelIn,
       "wingActionConnectL2tpv3TunnelInMac": wingActionConnectL2tpv3TunnelInMac,
       "wingActionConnectL2tpv3TunnelOut": wingActionConnectL2tpv3TunnelOut,
       "wingActionConnectL2tpv3TunnelOutStatus": wingActionConnectL2tpv3TunnelOutStatus,
       "wingActionConnectL2tpv3TunnelOutMessage": wingActionConnectL2tpv3TunnelOutMessage,
       "wingActionConnectL2tpv3TunnelRun": wingActionConnectL2tpv3TunnelRun,
       "wingActionLocator": wingActionLocator,
       "wingActionLocatorOn": wingActionLocatorOn,
       "wingActionLocatorOnIn": wingActionLocatorOnIn,
       "wingActionLocatorOnInDuration": wingActionLocatorOnInDuration,
       "wingActionLocatorOnInMac": wingActionLocatorOnInMac,
       "wingActionLocatorOnOut": wingActionLocatorOnOut,
       "wingActionLocatorOnOutStatus": wingActionLocatorOnOutStatus,
       "wingActionLocatorOnOutMessage": wingActionLocatorOnOutMessage,
       "wingActionLocatorOnRun": wingActionLocatorOnRun,
       "wingActionLocatorOff": wingActionLocatorOff,
       "wingActionLocatorOffIn": wingActionLocatorOffIn,
       "wingActionLocatorOffInMac": wingActionLocatorOffInMac,
       "wingActionLocatorOffOut": wingActionLocatorOffOut,
       "wingActionLocatorOffOutStatus": wingActionLocatorOffOutStatus,
       "wingActionLocatorOffOutMessage": wingActionLocatorOffOutMessage,
       "wingActionLocatorOffRun": wingActionLocatorOffRun,
       "wingConformance": wingConformance,
       "wingCompliances": wingCompliances,
       "wingCompliance": wingCompliance,
       "wingGroups": wingGroups,
       "wingObjectGroup": wingObjectGroup,
       "wingNotificationGroup": wingNotificationGroup}
)
